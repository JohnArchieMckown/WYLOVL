*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMINIT                              -09/15/99-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitor environment initialization            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1993, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= JBB6609                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IWMMINIT allows the caller to supply MVS with some or all of   * 00002100
*      the work request attributes needed for the monitoring          * 00002200
*      environment.  The attributes include userid, transaction name, * 00002300
*      transaction class, source LU, and LU 6.2 token.                * 00002400
*                                                                     * 00002500
*      Where possible, you should invoke IWMMINIT immediately         * 00002600
*      following IWMCLSFY, and pass the service class for the work    * 00002700
*      request.  Without the associated service class in the          * 00002800
*      monitoring environment, delay information cannot be            * 00002900
*      accumulated and reported accurately.                           * 00003000
*                                                                     * 00003100
*      IWMMINIT can be issued multiple times for the same work        * 00003200
*      request.  The first time you invoke IWMMINIT for a work        * 00003300
*      request, you must specify MODE=RESET, otherwise the previous   * 00003400
*      work request's attributes are associated with this work        * 00003500
*      request.  Any subsequent time you invoke IWMMINIT from the     * 00003600
*      same address space for the same monitoring token for the same  * 00003700
*      work request, specify MODE=RETAIN. If the caller subsystem     * 00003800
*      work manager consists of multiple address spaces (with         * 00003900
*      multiple monitoring tokens), the first time IWMMINIT is        * 00004000
*      invoked in each address space for a given work request must    * 00004100
*      specify MODE=RESET.  Any subsequent invocations for the same   * 00004200
*      work request should specify MODE=RETAIN.                       * 00004300
*                                                                     * 00004400
*      If you are invoking IWMMINIT multiple times for the same work  * 00004500
*      request, only one of the invocations should specify            * 00004600
*      EXSTARTTIME=exstarttime.  It is up to you to decide at which   * 00004700
*      point in the subsystem work manager's processing you consider  * 00004800
*      the real execution start time.                                 * 00004900
*                                                                     * 00005000
*      Optionally with this macro, you can use the OWNER_TOKEN and    * 00005100
*      OWNER_DATA parameters to specify a token for the user/owner of * 00005200
*      the monitoring environment for your own use.                   * 00005300
*                                                                     * 00005400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00005500
*                                                                     * 00005600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005700
*                                                                     * 00005800
*01* ENVIRONMENT:                                                     * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*      Dispatchable unit mode: Task or SRB mode.                      * 00006200
*                                                                     * 00006300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.  If the key   * 00006400
*                        specified on IWMMCREA was a user key (8-F),  * 00006500
*                        then primary addressability must be the same * 00006600
*                        as when IWMMCREA was invoked.                * 00006700
*                                                                     * 00006800
*      Minimum authorization: Either problem state or supervisor      * 00006900
*                        state.  PSW key must either be 0 or match    * 00007000
*                        the value supplied on IWMMCREA.              * 00007100
*                                                                     * 00007200
*      AMODE:            31-bit.                                      * 00007300
*                                                                     * 00007400
*      ASC mode:         Primary.  Any P,S,H.                         * 00007500
*                                                                     * 00007600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007700
*                                                                     * 00007800
*      Locks:            Locked or unlocked                           * 00007900
*                                                                     * 00008000
*      Control parameters: Control parameters must be in the primary  * 00008100
*                        address space.                               * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*01* PROGRAMMING REQUIREMENTS:                                        * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*    1.  The macro IWMYCON must be included to use this macro.        * 00008900
*                                                                     * 00009000
*    2.  The macro IWMPB must be in the library concatenation, since  * 00009100
*        it is included by IWMYCON.                                   * 00009200
*                                                                     * 00009300
*    3.  Note that the high order halfword of register 0, and the     * 00009400
*        reason code variable when specified, may be non-zero and     * 00009500
*        represents diagnostic data which is NOT part of the external * 00009600
*        interface.  The high order halfword should thus be excluded  * 00009700
*        from comparison with the reason code values described above. * 00009800
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00009900
*        be used for this purpose.                                    * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*01* RESTRICTIONS:                                                    * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*    1.  This macro may not be used prior to the completion of WLM    * 00010700
*        address space initialization.                                * 00010800
*                                                                     * 00010900
*    2.  This macro may only be used on MVS/ESA (version 3 or         * 00011000
*        higher), NOT versions 1 or 2 of MVS.                         * 00011100
*                                                                     * 00011200
*    3.  All parameter areas must reside in current primary, except   * 00011300
*        that the TCB (if specified) must reside in current home.     * 00011400
*                                                                     * 00011500
*    4.  Caller is responsible for error recovery.                    * 00011600
*                                                                     * 00011700
*    5.  Only limited checking is done against the input monitoring   * 00011800
*        token.                                                       * 00011900
*                                                                     * 00012000
*    6.  If the key specified on IWMMCREA was a user key (8-F), then  * 00012100
*        the primary addressability must exist to the performance     * 00012200
*        block IWMMCREA obtained.  This condition is satisfied by     * 00012300
*        ensuring that current primary matches primary at the time    * 00012400
*        that IWMMCREA was invoked.  If this service is invoked in a  * 00012500
*        subspace, the condition may be satisfied by ensuring that    * 00012600
*        the performance block is shared with the base space.         * 00012700
*                                                                     * 00012800
*    7.  The caller must serialize to prevent any delay monitoring    * 00012900
*        services from being invoked concurrently for the environment * 00013000
*        represented by the monitoring token.                         * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*01* INPUT REGISTER INFORMATION:                                      * 00013500
*                                                                     * 00013600
*    Before issuing the IWMMINIT macro, the caller does not have to   * 00013700
*    place any information into any register unless using it in       * 00013800
*    register notation for a particular parameter, or using it as a   * 00013900
*    base register.                                                   * 00014000
*                                                                     * 00014100
*01* OUTPUT REGISTER INFORMATION:                                     * 00014200
*                                                                     * 00014300
*    When control returns to the caller, the GPRs contain:            * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*    REGISTER  CONTENTS                                               * 00014700
*                                                                     * 00014800
*    0         Reason code if GR15 return code is non-zero            * 00014900
*                                                                     * 00015000
*    1         Used as work registers by the system                   * 00015100
*                                                                     * 00015200
*    2-13      Unchanged                                              * 00015300
*                                                                     * 00015400
*    14        Used as work registers by the system                   * 00015500
*                                                                     * 00015600
*    15        Return code                                            * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*    When control returns to the caller, the ARs contain:             * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*    REGISTER  CONTENTS                                               * 00016400
*                                                                     * 00016500
*    0-1       Used as work registers by the system                   * 00016600
*                                                                     * 00016700
*    2-13      Unchanged                                              * 00016800
*                                                                     * 00016900
*    14-15     Used as work registers by the system                   * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*    Some callers depend on register contents remaining the same      * 00017400
*    before and after issuing a service.  If the system changes the   * 00017500
*    contents of registers on which the caller depends, the caller    * 00017600
*    must save them before issuing the service, and restore them      * 00017700
*    after the system returns control.                                * 00017800
*                                                                     * 00017900
*01* PERFORMANCE IMPLICATIONS:                                        * 00018000
*                                                                     * 00018100
*    None                                                             * 00018200
*                                                                     * 00018300
*01* SYNTAX:                                                          * 00018400
*                                                                     * 00018500
*[xlabel]  IWMMINIT     MONTKN=xmontkn                                * 00018600
*                     ,MODE=RESET                                    * 00018700
*                    |   [,DURATION=EXECUTION]                       * 00018800
*                    |   [,DURATION=BEGIN_TO_END]                    * 00018900
*                    |    ,DISPTYPE=TCB                              * 00019000
*                    |   |    [,TCB=xtcb|NO_TCB]                    * 00019100
*                    |    ,DISPTYPE=SRB                              * 00019200
*                    |    ,ARRIVALTIMEP=CURRENT                      * 00019300
*                    |    ,ARRIVALTIMEP=YES                          * 00019400
*                    |         ,ARRIVALTIME=xarrivaltime              * 00019500
*                     ,MODE=RETAIN                                   * 00019600
*                        [,DURATION=PREV_VALUE]                      * 00019700
*                        [,DURATION=EXECUTION]                       * 00019800
*                        [,DURATION=BEGIN_TO_END]                    * 00019900
*                         ,DISPTYPE=SAVEDTYPE                        * 00020000
*                         ,DISPTYPE=TCB                              * 00020100
*                        |    [,TCB=xtcb|NO_TCB]                    * 00020200
*                         ,DISPTYPE=SRB                              * 00020300
*                     ,CONTINUEP=YES                                 * 00020400
*                    |    ,FROM=NONE                                 * 00020500
*                    |    ,FROM=LOCALMVS                             * 00020600
*                    |    ,FROM=SYSPLEX                              * 00020700
*                    |    ,FROM=NETWORK                              * 00020800
*                     ,CONTINUEP=NO                                  * 00020900
*                     [,OWNER_TOKEN=xowner_token|NO_OWNER_TOKEN]    * 00021000
*                     [,OWNER_DATA=xowner_data|NO_OWNER_DATA]       * 00021100
*                     ,EXSTARTTIMEP=NO                               * 00021200
*                     ,EXSTARTTIMEP=CURRENT                          * 00021300
*                     ,EXSTARTTIMEP=YES                              * 00021400
*                          ,EXSTARTTIME=xexstarttime                  * 00021500
*                     ,SCOPE=SHARED                                  * 00021600
*                     ,SCOPE=SINGLE                                  * 00021700
*                     [,SERVCLS=xservcls|NO_SERVCLS]                * 00021800
*                     [,TRXNAME=xtrxname|NO_TRXNAME]                * 00021900
*                     [,USERID=xuserid|NO_USERID]                   * 00022000
*                     [,TRXCLASS=xtrxclass|NO_TRXCLASS]             * 00022100
*                     [,TTRACETOKEN=xttracetoken|NO_TTRACETOKEN]    * 00022200
*                     [,SOURCELU=xsourcelu|NO_SOURCELU]             * 00022300
*                     [,LU62TKN=xlu62tkn|NO_LU62TKN                 * 00022400
*                         ,LU62TKN_FMT=LU_NO_CC_27                   * 00022500
*                         ,LU62TKN_FMT=FULL_LU_NO_CC_27              * 00022600
*                         ,LU62TKN_FMT=FULL_LU_0_CC_28               * 00022700
*                         ,LU62TKN_FMT=FULL_LU_CC_36                 * 00022800
*                         ,LU62TKN_FMT=OTHER                         * 00022900
*                              ,LU62TKN_LEN=xlu62tkn_len]             * 00023000
*                     [,RETCODE=xretcode]                             * 00023100
*                     [,RSNCODE=xrsncode]                             * 00023200
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*      Where:                                                         * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*      [xlabel]                                                       * 00023900
*          is an optional symbol, starting in column 1, that is the   * 00024000
*          name on the IWMMINIT macro invocation.  The name must      * 00024100
*          conform to the rules for an ordinary assembler language    * 00024200
*          symbol.                                                    * 00024300
*          DEFAULT: No name.                                          * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*      MONTKN=xmontkn                                                 * 00024900
*          is the name (RS-type), or address in register (2)-(12), of * 00025000
*          a required 32 bit input which contains the delay           * 00025100
*          monitoring token                                           * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*      MODE=RESET|RETAIN                                            * 00025700
*          is a required keyword input which indicates how previous   * 00025800
*          attributes established for a monitoring environment should * 00025900
*          be treated.  This does not refer to (or include)           * 00026000
*          attributes established in IWMMCREA.                        * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*          MODE=RESET                                                 * 00026400
*              indicates that previous attributes should be           * 00026500
*              discarded.                                             * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*              [DURATION=EXECUTION|BEGIN_TO_END]                    * 00026900
*                  is an optional keyword input which indicates the   * 00027000
*                  duration of the work request over which the delays * 00027100
*                  are to be represented.                             * 00027200
*                  DEFAULT: EXECUTION                                 * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                  [DURATION=EXECUTION]                               * 00027600
*                      indicates that the monitoring environment will * 00027700
*                      reflect delays from the point where an         * 00027800
*                      application or transaction program is given    * 00027900
*                      control, i.e. the execution phase.  Typically  * 00028000
*                      a monitoring environment with this scope would * 00028100
*                      be passed to Iwmmntfy to pass the execution    * 00028200
*                      time for the work request.                     * 00028300
*                      DEFAULT: EXECUTION indicates that the          * 00028400
*                      monitoring environment will reflect delays     * 00028500
*                      from the point where an application or         * 00028600
*                      transaction program is given control, i.e. the * 00028700
*                      execution phase.                               * 00028800
*                                                                     * 00028900
*                  [DURATION=BEGIN_TO_END]                            * 00029000
*                      indicates that the monitoring environment will * 00029100
*                      reflect delays from the arrival of the work    * 00029200
*                      request into the MVS sysplex until its         * 00029300
*                      completion. Ordinarily use of this option      * 00029400
*                      would be in close proximity to the time when   * 00029500
*                      the work request is classified.  Typically a   * 00029600
*                      monitoring environment with this duration      * 00029700
*                      would be passed to Iwmrpt to report the total  * 00029800
*                      elapsed time for the work request.             * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*              DISPTYPE=TCB|SRB                                     * 00030600
*                  is a required keyword input which describes the    * 00030700
*                  nature of the MVS dispatchable units which         * 00030800
*                  participate in processing work requests associated * 00030900
*                  with the delay monitoring environment established  * 00031000
*                  by this service.                                   * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                  DISPTYPE=TCB                                       * 00031400
*                                                                     * 00031500
*                      indicates that work requests run in TCB mode   * 00031600
*                      under a TCB within the current home address    * 00031700
*                      space. Note that in cross-memory mode, this    * 00031800
*                      may be different from the current primary      * 00031900
*                      address space.                                 * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                      [TCB=xtcb|NO_TCB]                            * 00032300
*                          is the name (RS-type), or address in       * 00032400
*                          register (2)-(12), of an optional          * 00032500
*                          character input which defines the TCB      * 00032600
*                          within the current home address space      * 00032700
*                          which will serve the work request.  Note   * 00032800
*                          that this name is not the pointer to the   * 00032900
*                          TCB, but the name of the data area         * 00033000
*                          containing the TCB.  A typical invocation  * 00033100
*                          might replace xTCB with TCB.               * 00033200
*                                                                     * 00033300
*                          Ordinarily the input TCB specified should  * 00033400
*                          be the TCB under which the work request    * 00033500
*                          (e.g. transaction program) runs and under  * 00033600
*                          which the delay information is recorded    * 00033700
*                          (in spite of the fact that task switches   * 00033800
*                          may occur).                                * 00033900
*                          DEFAULT: NO_TCB indicates that no TCB is   * 00034000
*                          currently associated with the monitoring   * 00034100
*                          environment for this work request.         * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                  DISPTYPE=SRB                                       * 00034600
*                                                                     * 00034700
*                      indicates that work requests run in SRB mode   * 00034800
*                      within the current home address space.         * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*              ARRIVALTIMEP=CURRENT|YES                             * 00035600
*                  is a required keyword input which indicates        * 00035700
*                  whether the work arrival time is passed.           * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                  ARRIVALTIMEP=CURRENT                               * 00036100
*                      indicates that the current time should be      * 00036200
*                      supplied by the service.                       * 00036300
*                                                                     * 00036400
*                  ARRIVALTIMEP=YES                                   * 00036500
*                      indicates that the work arrival time is        * 00036600
*                      passed.                                        * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*                      ARRIVALTIME=xarrivaltime                       * 00037000
*                          is the name (RS-type), or address in       * 00037100
*                          register (2)-(12), of a required 64 bit    * 00037200
*                          input which contains the work arrival time * 00037300
*                          in STCK format.                            * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*          MODE=RETAIN                                                * 00038200
*              indicates that previous attributes should be retained  * 00038300
*              unless explicitly specified.                           * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*              [DURATION=PREV_VALUE|EXECUTION|BEGIN_TO_END]         * 00038700
*                  is an optional keyword input which indicates the   * 00038800
*                  duration of the work request over which the delays * 00038900
*                  are to be represented.                             * 00039000
*                  DEFAULT: PREV_VALUE                                * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*                  [DURATION=PREV_VALUE]                              * 00039400
*                      indicates that the duration for delays has     * 00039500
*                      been specified on a previous invocation.       * 00039600
*                                                                     * 00039700
*                  [DURATION=EXECUTION]                               * 00039800
*                      indicates that the monitoring environment will * 00039900
*                      reflect delays from the point where an         * 00040000
*                      application or transaction program is given    * 00040100
*                      control, i.e. the execution phase.  Typically  * 00040200
*                      a monitoring environment with this duration    * 00040300
*                      would be passed to Iwmmntfy to pass the        * 00040400
*                      execution time for the work request.           * 00040500
*                                                                     * 00040600
*                  [DURATION=BEGIN_TO_END]                            * 00040700
*                      indicates that the monitoring environment will * 00040800
*                      reflect delays from the arrival of the work    * 00040900
*                      request into the MVS sysplex until its         * 00041000
*                      completion. Ordinarily use of this option      * 00041100
*                      would be in close proximity to the time when   * 00041200
*                      the work request is classified.  Typically a   * 00041300
*                      monitoring environment with this duration      * 00041400
*                      would be passed to Iwmrpt to report the total  * 00041500
*                      elapsed time for the work request.             * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*              DISPTYPE=SAVEDTYPE|TCB|SRB                           * 00042300
*                  is a required keyword input which describes the    * 00042400
*                  nature of the MVS dispatchable units which         * 00042500
*                  participate in processing work requests associated * 00042600
*                  with the delay monitoring environment established  * 00042700
*                  by this service.                                   * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*                  DISPTYPE=SAVEDTYPE                                 * 00043100
*                                                                     * 00043200
*                      indicates that the information saved when      * 00043300
*                      MODE(RESET) was used is still applicable.      * 00043400
*                                                                     * 00043500
*                  DISPTYPE=TCB                                       * 00043600
*                                                                     * 00043700
*                      indicates that work requests run in TCB mode   * 00043800
*                      under a TCB within the current home address    * 00043900
*                      space. Note that in cross-memory mode, this    * 00044000
*                      may be different from the current primary      * 00044100
*                      address space.                                 * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                      [TCB=xtcb|NO_TCB]                            * 00044500
*                          is the name (RS-type), or address in       * 00044600
*                          register (2)-(12), of an optional          * 00044700
*                          character input which defines the TCB      * 00044800
*                          within the current home address space      * 00044900
*                          which will serve the work request.  Note   * 00045000
*                          that this name is not the pointer to the   * 00045100
*                          TCB, but the name of the data area         * 00045200
*                          containing the TCB.  A typical invocation  * 00045300
*                          might replace xTCB with TCB.               * 00045400
*                                                                     * 00045500
*                          Ordinarily the input TCB specified should  * 00045600
*                          be the TCB under which the work request    * 00045700
*                          (e.g. transaction program) runs and under  * 00045800
*                          which the delay information is recorded    * 00045900
*                          (in spite of the fact that task switches   * 00046000
*                          may occur).                                * 00046100
*                          DEFAULT: NO_TCB indicates that no TCB is   * 00046200
*                          currently associated with the monitoring   * 00046300
*                          environment for this work request.         * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                  DISPTYPE=SRB                                       * 00046800
*                                                                     * 00046900
*                      indicates that work requests run in SRB mode   * 00047000
*                      within the current home address space.         * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*      CONTINUEP=YES|NO                                             * 00048200
*          is a required keyword input which indicates whether it is  * 00048300
*          known (YES) or not (NO) that there exists another          * 00048400
*          monitoring environment for this same work request.         * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*          CONTINUEP=YES                                              * 00048800
*              indicates that the existence of a prior monitoring     * 00048900
*              environment for the work request is known.             * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*              FROM=NONE|LOCALMVS|SYSPLEX|NETWORK                   * 00049300
*                  is a required keyword input                        * 00049400
*                                                                     * 00049500
*                                                                     * 00049600
*                  FROM=NONE                                          * 00049700
*                      indicates that there is no other environment.  * 00049800
*                                                                     * 00049900
*                  FROM=LOCALMVS                                      * 00050000
*                      indicates that such an environment should      * 00050100
*                      exist on the current MVS.                      * 00050200
*                                                                     * 00050300
*                  FROM=SYSPLEX                                       * 00050400
*                      indicates that such an environment should      * 00050500
*                      exist in the current syplex, but is not        * 00050600
*                      expected to be on the current MVS image.       * 00050700
*                                                                     * 00050800
*                  FROM=NETWORK                                       * 00050900
*                      indicates that such an environment may exist,  * 00051000
*                      but is not expected to be in the current       * 00051100
*                      sysplex.                                       * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*          CONTINUEP=NO                                               * 00051800
*              indicates that it is not known whether there exists a  * 00051900
*              prior monitoring environment for the work request.  If * 00052000
*              MODE(RESET) is specified, no status is saved.  If      * 00052100
*              MODE(RETAIN) is specified, the existing status is      * 00052200
*              preserved.                                             * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*                                                                     * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*      [OWNER_TOKEN=xowner_token|NO_OWNER_TOKEN]                    * 00053000
*          is the name (RS-type), or address in register (2)-(12), of * 00053100
*          an optional 32 bit input which contains a token maintained * 00053200
*          by the user/owner of the monitoring environment.  The      * 00053300
*          format is undefined to MVS.                                * 00053400
*          DEFAULT: NO_OWNER_TOKEN indicates that no owner token is   * 00053500
*          provided.                                                  * 00053600
*                                                                     * 00053700
*          If MODE(RETAIN) is specified, NO_OWNER_TOKEN will preserve * 00053800
*          the existing owner token, if any.                          * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*      [OWNER_DATA=xowner_data|NO_OWNER_DATA]                       * 00054400
*          is the name (RS-type), or address in register (2)-(12), of * 00054500
*          an optional 32 bit input which contains data maintained by * 00054600
*          the user/owner of the monitoring environment.  The format  * 00054700
*          is undefined to MVS.                                       * 00054800
*          DEFAULT: NO_OWNER_DATA indicates that no owner data is     * 00054900
*          provided.                                                  * 00055000
*                                                                     * 00055100
*          If MODE(RETAIN) is specified, NO_OWNER_DATA will preserve  * 00055200
*          the existing owner data, if any.                           * 00055300
*                                                                     * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*      EXSTARTTIMEP=NO|CURRENT|YES                                  * 00055800
*          is a required keyword input which indicates whether the    * 00055900
*          execution start time value is passed.                      * 00056000
*                                                                     * 00056100
*                                                                     * 00056200
*          EXSTARTTIMEP=NO                                            * 00056300
*              indicates that the execution start time value is not   * 00056400
*              passed.                                                * 00056500
*                                                                     * 00056600
*              If MODE(RETAIN) is specified, EXSTARTTIMEP(NO) will    * 00056700
*              preserve the existing execution start time, if any.    * 00056800
*                                                                     * 00056900
*          EXSTARTTIMEP=CURRENT                                       * 00057000
*              indicates that the current time should be supplied by  * 00057100
*              the service.                                           * 00057200
*                                                                     * 00057300
*          EXSTARTTIMEP=YES                                           * 00057400
*              indicates that the start execution time value is       * 00057500
*              passed.                                                * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*              EXSTARTTIME=xexstarttime                               * 00057900
*                  is the name (RS-type), or address in register      * 00058000
*                  (2)-(12), of a required 64 bit input which         * 00058100
*                  contains the start execution time in STCK format.  * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*      SCOPE=SHARED|SINGLE                                          * 00059100
*          is a required keyword input which indicates the scope of   * 00059200
*          work passed.                                               * 00059300
*                                                                     * 00059400
*                                                                     * 00059500
*          SCOPE=SHARED                                               * 00059600
*              indicates that multiple work requests, possibly from   * 00059700
*              different service classes, could be described.         * 00059800
*                                                                     * 00059900
*          SCOPE=SINGLE                                               * 00060000
*              indicates that only a single work request is           * 00060100
*              described.                                             * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*                                                                     * 00060700
*                                                                     * 00060800
*      [SERVCLS=xservcls|NO_SERVCLS]                                * 00060900
*          is the name (RS-type), or address in register (2)-(12), of * 00061000
*          an optional 32 bit input which contains the service class  * 00061100
*          token.                                                     * 00061200
*          DEFAULT: NO_SERVCLS indicates that no service class token  * 00061300
*          was passed.                                                * 00061400
*                                                                     * 00061500
*          If MODE(RETAIN) is specified, NO_SERVCLS will preserve the * 00061600
*          existing service class token, if any.                      * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*      [TRXNAME=xtrxname|NO_TRXNAME]                                * 00062200
*          is the name (RS-type), or address in register (2)-(12), of * 00062300
*          an optional 8 character input which contains the           * 00062400
*          transaction name.  For environments where the transaction  * 00062500
*          name is available on some, but not all flows, provision of * 00062600
*          a data area initialized to all blanks is equivalent to     * 00062700
*          specification of NO_TRXNAME when MODE(RESET) is specified. * 00062800
*          Providing an area of all blanks when MODE(RETAIN) is       * 00062900
*          specified will cause that to be used.                      * 00063000
*          DEFAULT: NO_TRXNAME indicates that no transaction name was * 00063100
*          passed.                                                    * 00063200
*                                                                     * 00063300
*          If MODE(RETAIN) is specified, NO_TRXNAME will preserve the * 00063400
*          existing transaction name, if any.                         * 00063500
*                                                                     * 00063600
*                                                                     * 00063700
*                                                                     * 00063800
*                                                                     * 00063900
*      [USERID=xuserid|NO_USERID]                                   * 00064000
*          is the name (RS-type), or address in register (2)-(12), of * 00064100
*          an optional 8 character input which contains the local     * 00064200
*          userid associated with the work request.  For environments * 00064300
*          where the user id is available on some, but not all flows, * 00064400
*          provision of a data area initialized to all blanks is      * 00064500
*          equivalent to specification of NO_USERID when MODE(RESET)  * 00064600
*          is specified.  Providing an area of all blanks when        * 00064700
*          MODE(RETAIN) is specified will cause that to be used.      * 00064800
*          DEFAULT: NO_USERID indicates that no userid was passed.    * 00064900
*                                                                     * 00065000
*          If MODE(RETAIN) is specified, NO_USERID will preserve the  * 00065100
*          existing user id, if any.                                  * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                                                                     * 00065500
*                                                                     * 00065600
*      [TRXCLASS=xtrxclass|NO_TRXCLASS]                             * 00065700
*          is the name (RS-type), or address in register (2)-(12), of * 00065800
*          an optional 8 character input which contains a class name  * 00065900
*          within a subsystem.  For environments where the            * 00066000
*          transaction class is available on some, but not all flows, * 00066100
*          provision of a data area initialized to all blanks is      * 00066200
*          equivalent to specification of NO_TRXCLASS when            * 00066300
*          MODE(RESET) is specified.  Providing an area of all blanks * 00066400
*          when MODE(RETAIN) is specified will cause that to be used. * 00066500
*          DEFAULT: NO_TRXCLASS indicates that no class name was      * 00066600
*          passed.                                                    * 00066700
*                                                                     * 00066800
*          If MODE(RETAIN) is specified, NO_TRXCLASS will preserve    * 00066900
*          the existing transaction class, if any.                    * 00067000
*                                                                     * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*                                                                     * 00067400
*      [TTRACETOKEN=xttracetoken|NO_TTRACETOKEN]                    * 00067500
*          is the name (RS-type), or address in register (2)-(12), of * 00067600
*          an optional 32 character input which contains the          * 00067700
*          transaction trace token.                                   * 00067800
*          DEFAULT: NO_TTRACETOKEN indicates that no transaction      * 00067900
*          trace token was passed.                                    * 00068000
*                                                                     * 00068100
*          If MODE(RETAIN) is specified, NO_TTRACETOKEN will preserve * 00068200
*          the existing transaction trace token, if any.              * 00068300
*                                                                     * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*      [SOURCELU=xsourcelu|NO_SOURCELU]                             * 00068800
*          is the name (RS-type), or address in register (2)-(12), of * 00068900
*          an optional character input which contains the LU name     * 00069000
*          associated with the requestor. This may be the fully       * 00069100
*          qualified NETID.LUNAME, i.e.  network name (1-8 bytes),    * 00069200
*          followed by a period, followed by the LU name for the      * 00069300
*          requestor (1-8 bytes).  It may also be the 1-8 byte local  * 00069400
*          LU name, with no network qualifier.  The SOURCELU field    * 00069500
*          may be from 1-17 characters.  In the assembler form, the   * 00069600
*          macro will determine the length of the field as follows:   * 00069700
*                                                                     * 00069800
*                                                                     * 00069900
*          1.  if the field is specified by register notation, it     * 00070000
*              will be assumed to be 17 characters (padded with       * 00070100
*              blanks) and a full 17 characters will be copied.       * 00070200
*                                                                     * 00070300
*          2.  if the field is specified using an RS form name, then  * 00070400
*              the length will be determined using the L' assembler   * 00070500
*              function.  When the length is less than 17 characters, * 00070600
*              the macro will pad with blanks.  When the length is    * 00070700
*              greater than or equal to 17 characters, the macro will * 00070800
*              copy the first 17 bytes.                               * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*          In the PL/AS form, the rules for the PL/AS compiler will   * 00071200
*          determine when to pad with blanks, i.e. less than 17       * 00071300
*          characters implies padding, 17 or more implies a 17        * 00071400
*          character copy.                                            * 00071500
*                                                                     * 00071600
*          This is intended to be the same value as used in IWMCLSFY, * 00071700
*          and may be distinct from the LU name contained within the  * 00071800
*          LU 6.2 token.  For environments where the LU name may be   * 00071900
*          available on some, but not all flows, provision of a data  * 00072000
*          area initialized to all blanks is equivalent to            * 00072100
*          specification of NO_SOURCELU when MODE(RESET) is           * 00072200
*          specified.  Providing an area of all blanks when           * 00072300
*          MODE(RETAIN) is specified will cause that to be used.      * 00072400
*          DEFAULT: NO_SOURCELU indicates that no source LU name was  * 00072500
*          passed.                                                    * 00072600
*                                                                     * 00072700
*          If MODE(RETAIN) is specified, NO_SOURCELU will preserve    * 00072800
*          the existing source LU name, if any.                       * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                                                                     * 00073200
*                                                                     * 00073300
*      [LU62TKN=xlu62tkn|NO_LU62TKN                                 * 00073400
*          is the name (RS-type), or address in register (2)-(12), of * 00073500
*          an optional character input which contains LU 6.2 token    * 00073600
*          for the work request.  This is not a SNA term, but it is   * 00073700
*          comprised of the following fields which are defined by SNA * 00073800
*          for the FMH5.                                              * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*          o   Logical Unit of Work Identifier length byte, in        * 00074200
*              binary, which may have the values 0 or 10-26 decimal   * 00074300
*              (inclusive)                                            * 00074400
*                                                                     * 00074500
*          o    Logical Unit of Work Identifier                       * 00074600
*                                                                     * 00074700
*                                                                     * 00074800
*              -   Length byte for the network qualified LU name, in  * 00074900
*                  binary, which may have the values 1-17 decimal     * 00075000
*                  (inclusive)                                        * 00075100
*                                                                     * 00075200
*              -   Network qualified LU network name (1-17 bytes)     * 00075300
*                                                                     * 00075400
*              -   Logical Unit of Work Instance Number, in binary (6 * 00075500
*                  bytes)                                             * 00075600
*                                                                     * 00075700
*              -   Logical Unit of Work Sequence Number, in binary (2 * 00075800
*                  bytes)                                             * 00075900
*                                                                     * 00076000
*                                                                     * 00076100
*                                                                     * 00076200
*          o   Conversation Correlator Field (0 to 9 bytes)           * 00076300
*                                                                     * 00076400
*                                                                     * 00076500
*              -   Length byte for the Conversation Correlator, in    * 00076600
*                  binary, which may have the values 0-8 decimal      * 00076700
*                  (inclusive)                                        * 00076800
*                                                                     * 00076900
*              -   Conversation Correlator of the sending transaction * 00077000
*                  (1-8 bytes)                                        * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*          The Conversation Correlator Field (which includes its      * 00077700
*          length byte) may be dropped when its length byte is 0.     * 00077800
*          DEFAULT: NO_LU62TKN indicates that no LU 6.2 token was     * 00077900
*          passed.                                                    * 00078000
*                                                                     * 00078100
*          If MODE(RETAIN) is specified, NO_LU62TKN will preserve the * 00078200
*          existing LU6.2 token, if any.                              * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*          LU62TKN_FMT=LU_NO_CC_27|FULL_LU_NO_CC_27|FULL_LU_0_CC_28| * 00078600
*              FULL_LU_CC_36|OTHER                                   * 00078700
*              is a required keyword input which indicates the        * 00078800
*              format/length of the LU 6.2 token.                     * 00078900
*                                                                     * 00079000
*                                                                     * 00079100
*              LU62TKN_FMT=LU_NO_CC_27                                * 00079200
*                  indicates that a fixed length token of 27 bytes is * 00079300
*                  provided, with no conversation correlator (not     * 00079400
*                  even its length byte).  The LU name may be 1-17    * 00079500
*                  bytes. Bytes at the end of the token are padded    * 00079600
*                  with hexadecimal zeros, if necessary, to form a    * 00079700
*                  full 27 bytes.                                     * 00079800
*                                                                     * 00079900
*              LU62TKN_FMT=FULL_LU_NO_CC_27                           * 00080000
*                  indicates that the fully qualified LU name (17     * 00080100
*                  bytes) is used, but no conversation correlator     * 00080200
*                  (not even its length byte) is provided.  This      * 00080300
*                  format is architected to be 27 bytes long.         * 00080400
*                                                                     * 00080500
*              LU62TKN_FMT=FULL_LU_0_CC_28                            * 00080600
*                  indicates that the fully qualified LU name (17     * 00080700
*                  bytes) is used, and the conversation correlator    * 00080800
*                  length byte is present and has the value 0.  This  * 00080900
*                  format is architected to be 28 bytes long.         * 00081000
*                                                                     * 00081100
*              LU62TKN_FMT=FULL_LU_CC_36                              * 00081200
*                  indicates that the fully qualified LU name (17     * 00081300
*                  bytes) is used, and the conversation correlator is * 00081400
*                  provided with a length of 8 (maximum allowed).     * 00081500
*                  This format is architected to be 36 bytes long.    * 00081600
*                                                                     * 00081700
*              LU62TKN_FMT=OTHER                                      * 00081800
*                  indicates that the format of the LU 6.2 token is   * 00081900
*                  different from those specified by the remaining    * 00082000
*                  keywords.                                          * 00082100
*                                                                     * 00082200
*                                                                     * 00082300
*                  LU62TKN_LEN=xlu62tkn_len]                          * 00082400
*                      is the name (RS-type), or address in register  * 00082500
*                      (2)-(12), of a required byte input which       * 00082600
*                      contains the length of the LU62 token.  Valid  * 00082700
*                      values are in the range 1-36 decimal           * 00082800
*                      (inclusive).                                   * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*                                                                     * 00083700
*                                                                     * 00083800
*                                                                     * 00083900
*      [RETCODE=xretcode]                                             * 00084000
*          is the name (RS-type) of an optional fullword output       * 00084100
*          variable, or register (2)-(12), into which the return code * 00084200
*          is to be copied from GPR 15.                               * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*                                                                     * 00084600
*                                                                     * 00084700
*      [RSNCODE=xrsncode]                                             * 00084800
*          is the name (RS-type) of an optional fullword output       * 00084900
*          variable, or register (2)-(12), into which the reason code * 00085000
*          is to be copied from GPR 0.                                * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*                                                                     * 00085500
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00085600
*          is an optional byte input decimal value in the "0-1" range * 00085700
*          that specifies the macro version.  PLISTVER determines     * 00085800
*          which parameter list is generated.  The macro keys         * 00085900
*          associated with each supported version of the macro are    * 00086000
*          listed in MACRO USAGE NOTE 2.  Note that MAX may be        * 00086100
*          specified instead of a number, and the parameter list will * 00086200
*          be of the largest size currently supported. This size may  * 00086300
*          grow from release to release (thus possibly affecting the  * 00086400
*          amount of storage needed by your program).                 * 00086500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00086600
*          default is the lowest version which allows all of the      * 00086700
*          parameters specified on the invocation to be processed.    * 00086800
*                                                                     * 00086900
*                                                                     * 00087000
*                                                                     * 00087100
*01* ABEND CODES:  None.                                              * 00087200
*                                                                     * 00087300
*01* RETURN CODES:                                                    * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*            0    IwmRetCodeOk: Successful completion.                * 00087700
*                                                                     * 00087800
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00087900
*                 conditions noted.                                   * 00088000
*                                                                     * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*                 HEX REASON  MEANING/ACTION                          * 00088400
*                 CODE                                                * 00088500
*                                                                     * 00088600
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00088700
*                                                                     * 00088800
*                             Meaning:  Monitoring token indicates    * 00088900
*                             that no monitoring environment exists.  * 00089000
*                                                                     * 00089100
*                                                                     * 00089200
*                                                                     * 00089300
*                                                                     * 00089400
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00089500
*                 environment or parameters                           * 00089600
*                                                                     * 00089700
*                                                                     * 00089800
*                                                                     * 00089900
*                 HEX REASON  MEANING/ACTION                          * 00090000
*                 CODE                                                * 00090100
*                                                                     * 00090200
*                 xxxx081E    Name: IwmRsnCodeBadLU62TknLen           * 00090300
*                                                                     * 00090400
*                             Meaning:  The length byte of the LU62   * 00090500
*                             token has an invalid value. Only values * 00090600
*                             1-36 (decimal) are valid.               * 00090700
*                                                                     * 00090800
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv:              * 00090900
*                                                                     * 00091000
*                             Meaning:  Monitoring environment does   * 00091100
*                             not pass short form verification.       * 00091200
*                                                                     * 00091300
*                                                                     * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*            C    IwmRetCodeEnvError:  Environmental error            * 00091700
*                                                                     * 00091800
*                                                                     * 00091900
*                                                                     * 00092000
*                 HEX REASON  MEANING/ACTION                          * 00092100
*                 CODE                                                * 00092200
*                                                                     * 00092300
*                 xxxx0C07    Name: IwmRsnCodeNoArrTime:              * 00092400
*                                                                     * 00092500
*                             Meaning:  No arrival time was supplied  * 00092600
*                             to the service and STCK gave a non-zero * 00092700
*                             condition code.                         * 00092800
*                                                                     * 00092900
*                 xxxx0C08    Name: IwmRsnCodeNoExTime:               * 00093000
*                                                                     * 00093100
*                             Meaning:  No execution start time was   * 00093200
*                             supplied to the service and STCK gave a * 00093300
*                             non-zero condition code.                * 00093400
*                                                                     * 00093500
*                                                                     * 00093600
*                                                                     * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*                                                                     * 00094100
*01* REASON CODES:                                                    * 00094200
*                                                                     * 00094300
*       A unique reason code will be returned whenever the return     * 00094400
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00094500
*       under their corresponding return code.  Reason code and       * 00094600
*       return code constants are defined within IWMYCON.  Note that  * 00094700
*       the high order halfword of register 0, and the reason code    * 00094800
*       variable when specified, may be non-zero and represents       * 00094900
*       diagnostic data which is NOT part of the external interface.  * 00095000
*       The high order halfword should thus be excluded from          * 00095100
*       comparison with the reason code values described above.  The  * 00095200
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00095300
*       used for this purpose.                                        * 00095400
*                                                                     * 00095500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00095600
*                                                                     * 00095700
*02*   PROCESSOR:  ASSEM                                              * 00095800
*                                                                     * 00095900
*01* COMPONENT:  SCWLM                                                * 00096000
*                                                                     * 00096100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00096200
*                                                                     * 00096300
*01* EXAMPLES:                                                        * 00096400
*      IWMMINIT MONTKN=(R9),ARRIVALTIMEP=YES,                         * 00096500
*            ARRIVALTIME=(R3),EXSTARTTIMEP=YES,                       * 00096600
*            EXSTARTTIME=(R4),DISPTYPE=TCB,TCB=(R7),                  * 00096700
*            SCOPE=SINGLE,TRXNAME=WLTRXNAME,SOURCELU=SOURCELU,        * 00096800
*            CONTINUEP=YES,LU62TKN_FMT=OTHER,LU62TKN_LEN=LU62TKNLEN,  * 00096900
*            LU62TKN=LU62TKN1,MODE=RESET,FROM=NONE,                   * 00097000
*            RETCODE=RCODE,RSNCODE=RSN                                * 00097100
*                                                                     * 00097200
*01* MACRO USAGE NOTES:                                               * 00097300
*                                                                     * 00097400
*                                                                     * 00097500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00097600
*        global macro variable.  Any value other than 'NO' will       * 00097700
*        result in the macro expansion being printed.  The default is * 00097800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00097900
*        variable should be set.                                      * 00098000
*                                                                     * 00098100
*                    GBLC &ZPRINT                                     * 00098200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00098300
*                                                                     * 00098400
*                                                                     * 00098500
*    2.  The IWMMINIT macro supports multiple versions. The macro key * 00098600
*        list  below  contains the version level in which the key was * 00098700
*        first  introduced.  Positionals  are  identified by the word * 00098800
*        'Positional'  followed by the numeric value of its position. * 00098900
*        Nested  positionals  are  preceded  by their outer key.  The * 00099000
*        lowest value represents the original version and the highest * 00099100
*        value  represents  the  most  recent version of the IWMMINIT * 00099200
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00099300
*        least  as high as the highest version number of all the keys * 00099400
*        being used.                                                  * 00099500
*                                                                     * 00099600
*        VERSION   KEY                                                * 00099700
*                                                                     * 00099800
*              0      ARRIVALTIME                                     * 00099900
*                     ARRIVALTIMEP                                    * 00100000
*                     CONTINUEP                                       * 00100100
*                     DISPTYPE                                        * 00100200
*                     DURATION                                        * 00100300
*                     EXSTARTTIME                                     * 00100400
*                     EXSTARTTIMEP                                    * 00100500
*                     FROM                                            * 00100600
*                     LU62TKN                                         * 00100700
*                     LU62TKN_FMT                                     * 00100800
*                     LU62TKN_LEN                                     * 00100900
*                     MODE                                            * 00101000
*                     MONTKN                                          * 00101100
*                     OWNER_DATA                                      * 00101200
*                     OWNER_TOKEN                                     * 00101300
*                     SCOPE                                           * 00101400
*                     SERVCLS                                         * 00101500
*                     SOURCELU                                        * 00101600
*                     TCB                                             * 00101700
*                     TRXCLASS                                        * 00101800
*                     TRXNAME                                         * 00101900
*                     USERID                                          * 00102000
*              1      TTRACETOKEN                                     * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*                                                                     * 00102400
*01* CHANGE ACTIVITY:                                                 * 00102500
*                                                                     * 00102600
*   Flag LineItem  FMID    Date   ID    Comment                       * 00102700
*                                                                     * 00102800
*    $L0=WLMI     HBB5510 920309 PD16:  Workload Manager I            * 00102900
*    $P1=PIG7010  HBB5510 921029 PD16:  Remove check for RSNCODE for  * 00103000
*                                         GPR00F declare              * 00103100
*    $01=OW26040  HBB6603 970407 PDSN:  Make clear length dependent   * 00103200
*                                         on version level, new       * 00103300
*                                         length field                * 00103400
*    $L1=TTRACE   JBB6609 980924 PD88DA:  Add TTRACETOKEN and Init    * 00103500
*                                         Transaction Trace Token     * 00103600
****** END OF SPECIFICATIONS *****************************************/ 00103700
*/* TLINE 1 *********************************************************** 00103800
         MACRO                                                          00103900
&XLABEL  IWMMINIT &MONTKN=,&MODE=,&DURATION=,&DISPTYPE=,&TCB=,         *00104000
               &ARRIVALTIMEP=,&ARRIVALTIME=,&CONTINUEP=,&FROM=,        *00104100
               &OWNER_TOKEN=,&OWNER_DATA=,&EXSTARTTIMEP=,&EXSTARTTIME=,*00104200
               &SCOPE=,&SERVCLS=,&TRXNAME=,&USERID=,&TRXCLASS=,        *00104300
               &TTRACETOKEN=,&SOURCELU=,&LU62TKN=,&LU62TKN_FMT=,       *00104400
               &LU62TKN_LEN=,&RETCODE=,&RSNCODE=,&PLISTVER=             00104500
.*                                                                      00104600
*                      MACDATE -09/15/99-<1>                            00104700
.*                                                                      00104800
.*******************************************************************    00104900
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00105000
.*******************************************************************    00105100
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00105200
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00105300
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00105400
.*                                                                      00105500
                      GBLC  &ZIWMMINIT  YES=MACRO USED AT LEAST ONCE    00105600
.*******************************************************************    00105700
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00105800
.*******************************************************************    00105900
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00106000
                      LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS    00106100
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00106200
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00106300
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00106400
                      LCLA  &ZAWRK      USED AS A WORK AREA             00106500
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00106600
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00106700
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00106800
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00106900
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00107000
                      LCLA  &ZMACRET    MACRO RETURN CODE               00107100
&ZMACRET              SETA  0           ASSUME NO ERRORS                00107200
.*                                                                      00107300
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00107400
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00107500
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00107600
                      LCLC  &ZENDBASEPL         End of base PL          00107700
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           00107800
.*******************************************************************    00107900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00108000
.*******************************************************************    00108100
                      LCLA  &ZI         INDEX FOR ARRAY                 00108200
                      LCLA  &ZJ         INDEX FOR PARMS                 00108300
                      LCLA  &ZK         INDEX FOR PARSE                 00108400
                      LCLA  &ZLO        LOW RANGE VALUE                 00108500
                      LCLA  &ZHI        HIGH RANGE VALUE                00108600
                      LCLC  &ZW         WORK AREA FOR PARM              00108700
.*******************************************************************    00108800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00108900
.*******************************************************************    00109000
                      LCLC  &XMONTKN    ++ NAME                         00109100
                      LCLC  &XMODE      ++ VALUE                        00109200
                      LCLC  &XDURATION  ++ VALUE                        00109300
                      LCLC  &XDISPTYPE  ++ VALUE                        00109400
                      LCLC  &XTCB       ++ NAME                         00109500
                      LCLC  &XARRIVALTIMEP      ++ VALUE                00109600
                      LCLC  &XARRIVALTIME       ++ NAME                 00109700
                      LCLC  &XCONTINUEP         ++ VALUE                00109800
                      LCLC  &XFROM      ++ VALUE                        00109900
                      LCLC  &XOWNER_TOKEN       ++ NAME                 00110000
                      LCLC  &XOWNER_DATA        ++ NAME                 00110100
                      LCLC  &XEXSTARTTIMEP      ++ VALUE                00110200
                      LCLC  &XEXSTARTTIME       ++ NAME                 00110300
                      LCLC  &XSCOPE     ++ VALUE                        00110400
                      LCLC  &XSERVCLS   ++ NAME                         00110500
                      LCLC  &XTRXNAME   ++ NAME                         00110600
                      LCLC  &XUSERID    ++ NAME                         00110700
                      LCLC  &XTRXCLASS  ++ NAME                         00110800
                      LCLC  &XTTRACETOKEN       ++ NAME                 00110900
                      LCLC  &XSOURCELU  ++ NAME                         00111000
                      LCLC  &XLU62TKN   ++ NAME                         00111100
                      LCLC  &XLU62TKN_FMT       ++ VALUE                00111200
                      LCLC  &XLU62TKN_LEN       ++ NAME                 00111300
                      LCLC  &XRETCODE   ++ NAME                         00111400
                      LCLC  &XRSNCODE   ++ NAME                         00111500
                      LCLA  &XPLISTVER  ++ VALUE                        00111600
.*******************************************************************    00111700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00111800
.*******************************************************************    00111900
                      LCLC  &ZXMONTKN   ++ INPUT NAME                   00112000
                      LCLC  &ZXMODE     ++ INPUT VALUE                  00112100
                      LCLC  &ZXDURATION         ++ INPUT VALUE          00112200
                      LCLC  &ZXDISPTYPE         ++ INPUT VALUE          00112300
                      LCLC  &ZXTCB      ++ INPUT NAME                   00112400
                      LCLC  &ZXARRIVALTIMEP     ++ INPUT VALUE          00112500
                      LCLC  &ZXARRIVALTIME      ++ INPUT NAME           00112600
                      LCLC  &ZXCONTINUEP        ++ INPUT VALUE          00112700
                      LCLC  &ZXFROM     ++ INPUT VALUE                  00112800
                      LCLC  &ZXOWNER_TOKEN      ++ INPUT NAME           00112900
                      LCLC  &ZXOWNER_DATA       ++ INPUT NAME           00113000
                      LCLC  &ZXEXSTARTTIMEP     ++ INPUT VALUE          00113100
                      LCLC  &ZXEXSTARTTIME      ++ INPUT NAME           00113200
                      LCLC  &ZXSCOPE    ++ INPUT VALUE                  00113300
                      LCLC  &ZXSERVCLS  ++ INPUT NAME                   00113400
                      LCLC  &ZXTRXNAME  ++ INPUT NAME                   00113500
                      LCLC  &ZXUSERID   ++ INPUT NAME                   00113600
                      LCLC  &ZXTRXCLASS         ++ INPUT NAME           00113700
                      LCLC  &ZXTTRACETOKEN      ++ INPUT NAME           00113800
                      LCLC  &ZXSOURCELU         ++ INPUT NAME           00113900
                      LCLC  &ZXLU62TKN  ++ INPUT NAME                   00114000
                      LCLC  &ZXLU62TKN_FMT      ++ INPUT VALUE          00114100
                      LCLC  &ZXLU62TKN_LEN      ++ INPUT NAME           00114200
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00114300
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  00114400
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          00114500
.********************************************************************   00114600
.***AC.PLV01  PROCESS PLISTVER                                      *   00114700
.********************************************************************   00114800
&XPLISTVER      SETA  0                                                 00114900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00115000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00115100
&XPLISTVER      SETA  1                                                 00115200
.ZPLV0          ANOP  ,                                                 00115300
.*                                                                      00115400
                AIF   ('&TTRACETOKEN' EQ '').ZPLV1E                     00115500
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00115600
&XPLISTVER      SETA  1                                                 00115700
.ZPLV1E         ANOP  ,                                                 00115800
.*                                                                      00115900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00116000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00116100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00116200
.*-------------------------------------------------------------------   00116300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00116400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00116500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00116600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00116700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00116800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00116900
                AGO   .ZPVCK2                                           00117000
.ZPVCK3         ANOP  ,                                                 00117100
.*-------------------------------------------------------------------   00117200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00117300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00117400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00117500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00117600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00117700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00117800
                AGO   .ZPVCKE                                           00117900
.ZPVCK2         ANOP  ,                                                 00118000
.*-------------------------------------------------------------------   00118100
&ZCVAL          SETC  '&PLISTVER(1)'                                    00118200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00118300
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00118400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00118500
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00118600
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00118700
.ZPVCK6         ANOP  ,                                                 00118800
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00118900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00119000
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00119100
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00119200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00119300
&XPLISTVER      SETA  1                                                 00119400
                AGO   .ZPVCKE                                           00119500
.*-------------------------------------------------------------------   00119600
.ZPVCK4A        ANOP  ,                                                 00119700
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00119800
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00119900
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00120000
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00120100
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00120200
                MNOTE 8,' &ZMS IS REQUIRED.'                            00120300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00120400
                AGO   .ZPVCK5                                           00120500
.ZPVCK4         ANOP  ,                                                 00120600
&XPLISTVER      SETA  &PLISTVER(1)                                      00120700
.ZPVCK5         ANOP  ,                                                 00120800
.ZPVCKE         ANOP  ,                                                 00120900
.********************************************************************   00121000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00121100
.********************************************************************   00121200
                      ACTR  10000                                       00121300
.*----------------------------------------------------------------***   00121400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00121500
                      AIF   (N'&MONTKN LE 1).ZG2A  CK NUM               00121600
&ZMS                  SETC  '"MONTKN='  *KPOSA* MNOTE                   00121700
&ZMS                  SETC  '&ZMS.&MONTKN"'                             00121800
&ZMS                  SETC  '&ZMS "MONTKN"'                             00121900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00122000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00122100
.ZG2A                 ANOP  ,                                           00122200
.*-------------------------------------------------------------------   00122300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00122400
&ZXMONTKN             SETC  'INPUT'     SET IN/OUTPUT                   00122500
&XMONTKN              SETC  '&MONTKN(1)'        SET XVARIABLE           00122600
                      AIF   (N'&MONTKN GT 1).ZG2B  MULTI PARMS          00122700
&XMONTKN              SETC  '&MONTKN'   SET XVARIABLE                   00122800
.ZG2B                 AIF   (K'&MONTKN(1) GT 0).ZG2C                    00122900
&ZXMONTKN             SETC  ''          RESET IN/OUTPUT                 00123000
&ZMS                  SETC  ' '         *KRQDA*                         00123100
&ZMS                  SETC  '&ZMS "MONTKN" KEY AND ITS'                 00123200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00123300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00123400
.ZG2C                 ANOP  ,                                           00123500
.*-------------------------------------------------------------------   00123600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00123700
                      AIF   (K'&ZXMONTKN LE 0).ZG2R  NOT I/O            00123800
                      AIF   ('&XMONTKN'(1,1) NE '(').ZG2R               00123900
&ZCGPR                SETC  '&XMONTKN'(2,K'&XMONTKN-2)                  00124000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 00124100
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        00124200
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      00124300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00124400
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    00124500
.ZG2P                 ANOP  ,                                           00124600
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         00124700
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      00124800
                      AIF   ('&ZCGPR' LE '12').ZG2R                     00124900
.ZG2Q                 ANOP  ,                                           00125000
&ZMS                  SETC  '"MONTKN='  *KGPRA* MNOTE                   00125100
&ZMS                  SETC  '&ZMS.&MONTKN"'                             00125200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00125300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00125400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00125500
.ZG2R                 ANOP  ,                                           00125600
.*------------------------------------------------------------------    00125700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00125800
&XMODE                SETC  ''          INITIALIZE XVARIABLE            00125900
.*-------------------------------------------------------------------   00126000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00126100
.ZG6                  ANOP  ,                                           00126200
                      AIF   (K'&MODE(1) LE 0).ZG6A                      00126300
&ZTLC                 SETC 'RESET'                                      00126400
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG28                00126500
&XMODE                SETC  'RESET'     SET KEYWORD                     00126600
                      AIF   (N'&MODE LE 1).ZG6A  CK NUM                 00126700
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   00126800
&ZMS                  SETC  '&ZMS.&MODE"'                               00126900
&ZMS                  SETC  '&ZMS "MODE"'                               00127000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00127100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00127200
.ZG6A                 ANOP  ,                                           00127300
.*------------------------------------------------------------------    00127400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00127500
&XDURATION            SETC  ''          INITIALIZE XVARIABLE            00127600
.*-------------------------------------------------------------------   00127700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00127800
.ZG9                  ANOP  ,                                           00127900
                      AIF   (K'&DURATION(1) LE 0).ZG9A                  00128000
&ZTLC                 SETC 'EXECUTION'                                  00128100
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG10            00128200
&XDURATION            SETC  'EXECUTION'         SET KEYWORD             00128300
                      AIF   (N'&DURATION LE 1).ZG9A  CK NUM             00128400
&ZMS                  SETC  '"DURATION='        *KPOSA* MNOTE           00128500
&ZMS                  SETC  '&ZMS.&DURATION"'                           00128600
&ZMS                  SETC  '&ZMS "DURATION"'                           00128700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00128800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00128900
.ZG9A                 ANOP  ,                                           00129000
.*-------------------------------------------------------------------   00129100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00129200
.ZG10                 ANOP  ,                                           00129300
&ZTLC                 SETC 'BEGIN_TO_END'                               00129400
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG11            00129500
&XDURATION            SETC  'BEGIN_TO_END'      SET KEYWORD             00129600
                      AIF   (N'&DURATION LE 1).ZG10A  CK NUM            00129700
&ZMS                  SETC  '"DURATION='        *KPOSA* MNOTE           00129800
&ZMS                  SETC  '&ZMS.&DURATION"'                           00129900
&ZMS                  SETC  '&ZMS "DURATION"'                           00130000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00130100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00130200
.ZG10A                ANOP  ,                                           00130300
.*------------------------------------------------------------------    00130400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00130500
.ZG11                 ANOP  ,                                           00130600
&ZXDURATION           SETC  'INPUT'     SET IN/OUTPUT                   00130700
                      AIF   (K'&XDURATION GT 0).ZG11E  VALID ARG        00130800
                      AIF   (T'&DURATION EQ 'O').ZG11D  OMITTED         00130900
&ZASYSLNDX            SETA  0                                           00131000
.ZG11A                ANOP  ,           POSITIONAL MACRO KEY            00131100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00131200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG11C            00131300
&ZTLC                 SETC 'DURATION'                                   00131400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG11A   00131500
.ZG11B                ANOP  ,                                           00131600
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00131700
&ZMS                  SETC  'THE "DURATION" KEY'  *KOPTA* MNOTE         00131800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00131900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00132000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00132100
                      AGO   .ZG11E                                      00132200
.ZG11C                ANOP  ,                                           00132300
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00132400
&ZMS                  SETC  '"DURATION='        *KUKWA* MNOTE           00132500
&ZMS                  SETC  '&ZMS.&DURATION"'                           00132600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00132700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00132800
&ZMS                  SETC  '&ZMS "EXECUTION"'                          00132900
&ZMS                  SETC  '&ZMS OR "BEGIN_TO_END".'                   00133000
                      MNOTE 8,' &ZMS '                                  00133100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00133200
                      AGO   .ZG11E                                      00133300
.ZG11D                ANOP  ,                                           00133400
&XDURATION            SETC  'EXECUTION'         SET DEFAULT KEYWORD     00133500
.ZG11E                ANOP  ,                                           00133600
.*------------------------------------------------------------------    00133700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133800
&XDISPTYPE            SETC  ''          INITIALIZE XVARIABLE            00133900
.*-------------------------------------------------------------------   00134000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00134100
.ZG14                 ANOP  ,                                           00134200
                      AIF   (K'&DISPTYPE(1) LE 0).ZG14A                 00134300
&ZTLC                 SETC 'TCB'                                        00134400
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG18            00134500
&XDISPTYPE            SETC  'TCB'       SET KEYWORD                     00134600
                      AIF   (N'&DISPTYPE LE 1).ZG14A  CK NUM            00134700
&ZMS                  SETC  '"DISPTYPE='        *KPOSA* MNOTE           00134800
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00134900
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00135000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00135100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00135200
.ZG14A                ANOP  ,                                           00135300
.*----------------------------------------------------------------***   00135400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00135500
                      AIF   (N'&TCB LE 1).ZG16A  CK NUM                 00135600
&ZMS                  SETC  '"TCB='     *KPOSA* MNOTE                   00135700
&ZMS                  SETC  '&ZMS.&TCB"'                                00135800
&ZMS                  SETC  '&ZMS "TCB"'                                00135900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00136000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00136100
.ZG16A                ANOP  ,                                           00136200
.*-------------------------------------------------------------------   00136300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00136400
&ZXTCB                SETC  'INPUT'     SET IN/OUTPUT                   00136500
&XTCB                 SETC  'NO_TCB'                                    00136600
                      AIF   (K'&TCB(1) LE 0).ZG16B  PARM                00136700
&XTCB                 SETC  '&TCB(1)'   SET XVARIABLE                   00136800
                      AIF   (N'&TCB GT 1).ZG16B  MULTI PARMS            00136900
&XTCB                 SETC  '&TCB'      SET XVARIABLE                   00137000
.ZG16B                ANOP  ,                                           00137100
.*-------------------------------------------------------------------   00137200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00137300
                      AIF   (K'&ZXTCB LE 0).ZG16R  NOT I/O              00137400
         AIF   ('&XTCB' EQ 'NO_TCB').ZG16R                              00137500
                      AIF   ('&XTCB'(1,1) NE '(').ZG16R                 00137600
&ZCGPR                SETC  '&XTCB'(2,K'&XTCB-2)                        00137700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                00137800
                      AIF   (K'&ZCGPR GT 2).ZG16Q                       00137900
                      AIF   ('&ZCGPR' EQ '0').ZG16Q                     00138000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00138100
                      AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME   00138200
.ZG16P                ANOP  ,                                           00138300
                      AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC        00138400
                      AIF   ('&ZCGPR' LT '2').ZG16Q                     00138500
                      AIF   ('&ZCGPR' LE '12').ZG16R                    00138600
.ZG16Q                ANOP  ,                                           00138700
&ZMS                  SETC  '"TCB='     *KGPRA* MNOTE                   00138800
&ZMS                  SETC  '&ZMS.&TCB"'                                00138900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00139000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00139100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00139200
.ZG16R                ANOP  ,                                           00139300
.*-------------------------------------------------------------------   00139400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00139500
.ZG18                 ANOP  ,                                           00139600
&ZTLC                 SETC 'SRB'                                        00139700
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG19            00139800
&XDISPTYPE            SETC  'SRB'       SET KEYWORD                     00139900
                      AIF   (N'&DISPTYPE LE 1).ZG18A  CK NUM            00140000
&ZMS                  SETC  '"DISPTYPE='        *KPOSA* MNOTE           00140100
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00140200
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00140300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00140400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00140500
.ZG18A                ANOP  ,                                           00140600
.*------------------------------------------------------------------    00140700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00140900
.ZG18A0               AIF   (K'&TCB LE 0).ZG18A1  OK                    00141000
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00141100
.ZG18A1               AIF   (K'&ZCVAL LE 0).ZG18A2  OK                  00141200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00141300
&ZMS                  SETC  '"DISPTYPE'         *KMEIA* MNOTE           00141400
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00141500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00141600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00141700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00141800
.ZG18A2               ANOP  ,                                           00141900
.*------------------------------------------------------------------    00142000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00142100
.ZG19                 ANOP  ,                                           00142200
&ZXDISPTYPE           SETC  'INPUT'     SET IN/OUTPUT                   00142300
                      AIF   (K'&XDISPTYPE GT 0).ZG19E  VALID ARG        00142400
                      AIF   (T'&DISPTYPE EQ 'O').ZG19D  OMITTED         00142500
&ZASYSLNDX            SETA  0                                           00142600
.ZG19A                ANOP  ,           POSITIONAL MACRO KEY            00142700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00142800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG19C            00142900
&ZTLC                 SETC 'DISPTYPE'                                   00143000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG19A   00143100
.ZG19B                ANOP  ,                                           00143200
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00143300
&ZMS                  SETC  'THE "DISPTYPE" KEY'  *KOPTA* MNOTE         00143400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00143500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00143600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00143700
                      AGO   .ZG19E                                      00143800
.ZG19C                ANOP  ,                                           00143900
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00144000
&ZMS                  SETC  '"DISPTYPE='        *KUKWA* MNOTE           00144100
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00144200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00144300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00144400
&ZMS                  SETC  '&ZMS "TCB"'                                00144500
&ZMS                  SETC  '&ZMS OR "SRB".'                            00144600
                      MNOTE 8,' &ZMS '                                  00144700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00144800
                      AGO   .ZG19E                                      00144900
.ZG19D                ANOP  ,                                           00145000
&XDISPTYPE            SETC  'TCB'       SET DEFAULT KEYWORD             00145100
.ZG19E                ANOP  ,                                           00145200
.*------------------------------------------------------------------    00145300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145400
                      AIF   (K'&DISPTYPE(1) GT 0).ZG19F  PARM           00145500
&XDISPTYPE            SETC  ''          ENSURE NULL KEYWORD             00145600
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00145700
&ZMS                  SETC  'THE'                                       00145800
&ZMS                  SETC  '&ZMS "DISPTYPE" KEY AND ITS'               00145900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00146000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00146100
&ZMS                  SETC  '&ZMS "TCB"'                                00146200
&ZMS                  SETC  '&ZMS OR "SRB".'                            00146300
                      MNOTE 8,' &ZMS '                                  00146400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00146500
.ZG19F                ANOP  ,                                           00146600
.*------------------------------------------------------------------    00146700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00146800
&XARRIVALTIMEP        SETC  ''          INITIALIZE XVARIABLE            00146900
.*-------------------------------------------------------------------   00147000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00147100
.ZG22                 ANOP  ,                                           00147200
                      AIF   (K'&ARRIVALTIMEP(1) LE 0).ZG22A             00147300
&ZTLC                 SETC 'CURRENT'                                    00147400
                      AIF   ('&ARRIVALTIMEP(1)' NE '&ZTLC').ZG23        00147500
&XARRIVALTIMEP        SETC  'CURRENT'   SET KEYWORD                     00147600
                      AIF   (N'&ARRIVALTIMEP LE 1).ZG22A  CK NUM        00147700
&ZMS                  SETC  '"ARRIVALTIMEP='    *KPOSA* MNOTE           00147800
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00147900
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP"'                       00148000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00148100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00148200
.ZG22A                ANOP  ,                                           00148300
.*------------------------------------------------------------------    00148400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00148500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00148600
.ZG22A0               AIF   (K'&ARRIVALTIME LE 0).ZG22A1  OK            00148700
&ZCVAL                SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED     00148800
.ZG22A1               AIF   (K'&ZCVAL LE 0).ZG22A2  OK                  00148900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00149000
&ZMS                  SETC  '"ARRIVALTIMEP'     *KMEIA* MNOTE           00149100
&ZMS                  SETC  '&ZMS.=&ARRIVALTIMEP"'                      00149200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00149300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00149400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00149500
.ZG22A2               ANOP  ,                                           00149600
.*-------------------------------------------------------------------   00149700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00149800
.ZG23                 ANOP  ,                                           00149900
&ZTLC                 SETC 'YES'                                        00150000
                      AIF   ('&ARRIVALTIMEP(1)' NE '&ZTLC').ZG27        00150100
&XARRIVALTIMEP        SETC  'YES'       SET KEYWORD                     00150200
                      AIF   (N'&ARRIVALTIMEP LE 1).ZG23A  CK NUM        00150300
&ZMS                  SETC  '"ARRIVALTIMEP='    *KPOSA* MNOTE           00150400
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00150500
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP"'                       00150600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00150700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00150800
.ZG23A                ANOP  ,                                           00150900
.*----------------------------------------------------------------***   00151000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00151100
                      AIF   (N'&ARRIVALTIME LE 1).ZG25A  CK NUM         00151200
&ZMS                  SETC  '"ARRIVALTIME='     *KPOSA* MNOTE           00151300
&ZMS                  SETC  '&ZMS.&ARRIVALTIME"'                        00151400
&ZMS                  SETC  '&ZMS "ARRIVALTIME"'                        00151500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00151600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00151700
.ZG25A                ANOP  ,                                           00151800
.*-------------------------------------------------------------------   00151900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00152000
&ZXARRIVALTIME        SETC  'INPUT'     SET IN/OUTPUT                   00152100
&XARRIVALTIME         SETC  '&ARRIVALTIME(1)'   SET XVARIABLE           00152200
                      AIF   (N'&ARRIVALTIME GT 1).ZG25B  MULTI PARMS    00152300
&XARRIVALTIME         SETC  '&ARRIVALTIME'      SET XVARIABLE           00152400
.ZG25B                AIF   (K'&ARRIVALTIME(1) GT 0).ZG25C              00152500
&ZXARRIVALTIME        SETC  ''          RESET IN/OUTPUT                 00152600
&ZMS                  SETC  ' '         *KRQDA*                         00152700
&ZMS                  SETC  '&ZMS "ARRIVALTIME" KEY AND ITS'            00152800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00152900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00153000
.ZG25C                ANOP  ,                                           00153100
.*-------------------------------------------------------------------   00153200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00153300
                      AIF   (K'&ZXARRIVALTIME LE 0).ZG25R  NOT I/O      00153400
                      AIF   ('&XARRIVALTIME'(1,1) NE '(').ZG25R         00153500
&ZCGPR                SETC  '&XARRIVALTIME'(2,K'&XARRIVALTIME-2)        00153600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                00153700
                      AIF   (K'&ZCGPR GT 2).ZG25Q                       00153800
                      AIF   ('&ZCGPR' EQ '0').ZG25Q                     00153900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00154000
                      AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME   00154100
.ZG25P                ANOP  ,                                           00154200
                      AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC        00154300
                      AIF   ('&ZCGPR' LT '2').ZG25Q                     00154400
                      AIF   ('&ZCGPR' LE '12').ZG25R                    00154500
.ZG25Q                ANOP  ,                                           00154600
&ZMS                  SETC  '"ARRIVALTIME='     *KGPRA* MNOTE           00154700
&ZMS                  SETC  '&ZMS.&ARRIVALTIME"'                        00154800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00154900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00155000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00155100
.ZG25R                ANOP  ,                                           00155200
.*------------------------------------------------------------------    00155300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00155400
.ZG27                 ANOP  ,                                           00155500
&ZXARRIVALTIMEP       SETC  'INPUT'     SET IN/OUTPUT                   00155600
                      AIF   (K'&XARRIVALTIMEP GT 0).ZG27E  VALID ARG    00155700
                      AIF   (T'&ARRIVALTIMEP EQ 'O').ZG27D  OMITTED     00155800
&ZASYSLNDX            SETA  0                                           00155900
.ZG27A                ANOP  ,           POSITIONAL MACRO KEY            00156000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00156100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG27C            00156200
&ZTLC                 SETC 'ARRIVALTIMEP'                               00156300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG27A   00156400
.ZG27B                ANOP  ,                                           00156500
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00156600
&ZMS                  SETC  'THE "ARRIVALTIMEP" KEY'  *KOPTA* MNOTE     00156700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00156800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00156900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00157000
                      AGO   .ZG27E                                      00157100
.ZG27C                ANOP  ,                                           00157200
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00157300
&ZMS                  SETC  '"ARRIVALTIMEP='    *KUKWA* MNOTE           00157400
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00157500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00157600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00157700
&ZMS                  SETC  '&ZMS "CURRENT"'                            00157800
&ZMS                  SETC  '&ZMS OR "YES".'                            00157900
                      MNOTE 8,' &ZMS '                                  00158000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00158100
                      AGO   .ZG27E                                      00158200
.ZG27D                ANOP  ,                                           00158300
&XARRIVALTIMEP        SETC  'CURRENT'   SET DEFAULT KEYWORD             00158400
.ZG27E                ANOP  ,                                           00158500
.*------------------------------------------------------------------    00158600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00158700
                      AIF   (K'&ARRIVALTIMEP(1) GT 0).ZG27F  PARM       00158800
&XARRIVALTIMEP        SETC  ''          ENSURE NULL KEYWORD             00158900
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00159000
&ZMS                  SETC  'THE'                                       00159100
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP" KEY AND ITS'           00159200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00159300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00159400
&ZMS                  SETC  '&ZMS "CURRENT"'                            00159500
&ZMS                  SETC  '&ZMS OR "YES".'                            00159600
                      MNOTE 8,' &ZMS '                                  00159700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00159800
.ZG27F                ANOP  ,                                           00159900
.*-------------------------------------------------------------------   00160000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00160100
.ZG28                 ANOP  ,                                           00160200
&ZTLC                 SETC 'RETAIN'                                     00160300
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG44                00160400
&XMODE                SETC  'RETAIN'    SET KEYWORD                     00160500
                      AIF   (N'&MODE LE 1).ZG28A  CK NUM                00160600
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   00160700
&ZMS                  SETC  '&ZMS.&MODE"'                               00160800
&ZMS                  SETC  '&ZMS "MODE"'                               00160900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00161000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00161100
.ZG28A                ANOP  ,                                           00161200
.*------------------------------------------------------------------    00161300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00161400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00161500
.ZG28A0               AIF   (K'&ARRIVALTIMEP LE 0).ZG28A1  OK           00161600
&ZCVAL                SETC '&ZCVAL ARRIVALTIMEP'  INCORRECT KEY USED    00161700
.ZG28A1               AIF   (K'&ARRIVALTIME LE 0).ZG28A2  OK            00161800
&ZCVAL                SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED     00161900
.ZG28A2               AIF   (K'&ZCVAL LE 0).ZG28A3  OK                  00162000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00162100
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   00162200
&ZMS                  SETC  '&ZMS.=&MODE"'                              00162300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00162400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00162500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00162600
.ZG28A3               ANOP  ,                                           00162700
.*------------------------------------------------------------------    00162800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00162900
&XDURATION            SETC  ''          INITIALIZE XVARIABLE            00163000
.*-------------------------------------------------------------------   00163100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00163200
.ZG31                 ANOP  ,                                           00163300
                      AIF   (K'&DURATION(1) LE 0).ZG31A                 00163400
&ZTLC                 SETC 'PREV_VALUE'                                 00163500
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG32            00163600
&XDURATION            SETC  'PREV_VALUE'        SET KEYWORD             00163700
                      AIF   (N'&DURATION LE 1).ZG31A  CK NUM            00163800
&ZMS                  SETC  '"DURATION='        *KPOSA* MNOTE           00163900
&ZMS                  SETC  '&ZMS.&DURATION"'                           00164000
&ZMS                  SETC  '&ZMS "DURATION"'                           00164100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00164200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00164300
.ZG31A                ANOP  ,                                           00164400
.*-------------------------------------------------------------------   00164500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00164600
.ZG32                 ANOP  ,                                           00164700
&ZTLC                 SETC 'EXECUTION'                                  00164800
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG33            00164900
&XDURATION            SETC  'EXECUTION'         SET KEYWORD             00165000
                      AIF   (N'&DURATION LE 1).ZG32A  CK NUM            00165100
&ZMS                  SETC  '"DURATION='        *KPOSA* MNOTE           00165200
&ZMS                  SETC  '&ZMS.&DURATION"'                           00165300
&ZMS                  SETC  '&ZMS "DURATION"'                           00165400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00165500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00165600
.ZG32A                ANOP  ,                                           00165700
.*-------------------------------------------------------------------   00165800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165900
.ZG33                 ANOP  ,                                           00166000
&ZTLC                 SETC 'BEGIN_TO_END'                               00166100
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG34            00166200
&XDURATION            SETC  'BEGIN_TO_END'      SET KEYWORD             00166300
                      AIF   (N'&DURATION LE 1).ZG33A  CK NUM            00166400
&ZMS                  SETC  '"DURATION='        *KPOSA* MNOTE           00166500
&ZMS                  SETC  '&ZMS.&DURATION"'                           00166600
&ZMS                  SETC  '&ZMS "DURATION"'                           00166700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00166800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00166900
.ZG33A                ANOP  ,                                           00167000
.*------------------------------------------------------------------    00167100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167200
.ZG34                 ANOP  ,                                           00167300
&ZXDURATION           SETC  'INPUT'     SET IN/OUTPUT                   00167400
                      AIF   (K'&XDURATION GT 0).ZG34E  VALID ARG        00167500
                      AIF   (T'&DURATION EQ 'O').ZG34D  OMITTED         00167600
&ZASYSLNDX            SETA  0                                           00167700
.ZG34A                ANOP  ,           POSITIONAL MACRO KEY            00167800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00167900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C            00168000
&ZTLC                 SETC 'DURATION'                                   00168100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A   00168200
.ZG34B                ANOP  ,                                           00168300
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00168400
&ZMS                  SETC  'THE "DURATION" KEY'  *KOPTA* MNOTE         00168500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00168600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00168700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00168800
                      AGO   .ZG34E                                      00168900
.ZG34C                ANOP  ,                                           00169000
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00169100
&ZMS                  SETC  '"DURATION='        *KUKWA* MNOTE           00169200
&ZMS                  SETC  '&ZMS.&DURATION"'                           00169300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00169400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00169500
&ZMS                  SETC  '&ZMS "PREV_VALUE",'                        00169600
&ZMS                  SETC  '&ZMS "EXECUTION",'                         00169700
&ZMS                  SETC  '&ZMS OR "BEGIN_TO_END".'                   00169800
                      MNOTE 8,' &ZMS '                                  00169900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00170000
                      AGO   .ZG34E                                      00170100
.ZG34D                ANOP  ,                                           00170200
&XDURATION            SETC  'PREV_VALUE'        SET DEFAULT KEYWORD     00170300
.ZG34E                ANOP  ,                                           00170400
.*------------------------------------------------------------------    00170500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00170600
&XDISPTYPE            SETC  ''          INITIALIZE XVARIABLE            00170700
.*-------------------------------------------------------------------   00170800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00170900
.ZG37                 ANOP  ,                                           00171000
                      AIF   (K'&DISPTYPE(1) LE 0).ZG37A                 00171100
&ZTLC                 SETC 'SAVEDTYPE'                                  00171200
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG38            00171300
&XDISPTYPE            SETC  'SAVEDTYPE'         SET KEYWORD             00171400
                      AIF   (N'&DISPTYPE LE 1).ZG37A  CK NUM            00171500
&ZMS                  SETC  '"DISPTYPE='        *KPOSA* MNOTE           00171600
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00171700
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00171800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00171900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00172000
.ZG37A                ANOP  ,                                           00172100
.*------------------------------------------------------------------    00172200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00172300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00172400
.ZG37A0               AIF   (K'&TCB LE 0).ZG37A1  OK                    00172500
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00172600
.ZG37A1               AIF   (K'&ZCVAL LE 0).ZG37A2  OK                  00172700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00172800
&ZMS                  SETC  '"DISPTYPE'         *KMEIA* MNOTE           00172900
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00173000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00173100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00173200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00173300
.ZG37A2               ANOP  ,                                           00173400
.*-------------------------------------------------------------------   00173500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00173600
.ZG38                 ANOP  ,                                           00173700
&ZTLC                 SETC 'TCB'                                        00173800
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG42            00173900
&XDISPTYPE            SETC  'TCB'       SET KEYWORD                     00174000
                      AIF   (N'&DISPTYPE LE 1).ZG38A  CK NUM            00174100
&ZMS                  SETC  '"DISPTYPE='        *KPOSA* MNOTE           00174200
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00174300
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00174400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00174500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00174600
.ZG38A                ANOP  ,                                           00174700
.*----------------------------------------------------------------***   00174800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00174900
                      AIF   (N'&TCB LE 1).ZG40A  CK NUM                 00175000
&ZMS                  SETC  '"TCB='     *KPOSA* MNOTE                   00175100
&ZMS                  SETC  '&ZMS.&TCB"'                                00175200
&ZMS                  SETC  '&ZMS "TCB"'                                00175300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00175400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00175500
.ZG40A                ANOP  ,                                           00175600
.*-------------------------------------------------------------------   00175700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00175800
&ZXTCB                SETC  'INPUT'     SET IN/OUTPUT                   00175900
&XTCB                 SETC  'NO_TCB'                                    00176000
                      AIF   (K'&TCB(1) LE 0).ZG40B  PARM                00176100
&XTCB                 SETC  '&TCB(1)'   SET XVARIABLE                   00176200
                      AIF   (N'&TCB GT 1).ZG40B  MULTI PARMS            00176300
&XTCB                 SETC  '&TCB'      SET XVARIABLE                   00176400
.ZG40B                ANOP  ,                                           00176500
.*-------------------------------------------------------------------   00176600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00176700
                      AIF   (K'&ZXTCB LE 0).ZG40R  NOT I/O              00176800
         AIF   ('&XTCB' EQ 'NO_TCB').ZG40R                              00176900
                      AIF   ('&XTCB'(1,1) NE '(').ZG40R                 00177000
&ZCGPR                SETC  '&XTCB'(2,K'&XTCB-2)                        00177100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                00177200
                      AIF   (K'&ZCGPR GT 2).ZG40Q                       00177300
                      AIF   ('&ZCGPR' EQ '0').ZG40Q                     00177400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00177500
                      AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME   00177600
.ZG40P                ANOP  ,                                           00177700
                      AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC        00177800
                      AIF   ('&ZCGPR' LT '2').ZG40Q                     00177900
                      AIF   ('&ZCGPR' LE '12').ZG40R                    00178000
.ZG40Q                ANOP  ,                                           00178100
&ZMS                  SETC  '"TCB='     *KGPRA* MNOTE                   00178200
&ZMS                  SETC  '&ZMS.&TCB"'                                00178300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00178400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00178500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00178600
.ZG40R                ANOP  ,                                           00178700
.*-------------------------------------------------------------------   00178800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178900
.ZG42                 ANOP  ,                                           00179000
&ZTLC                 SETC 'SRB'                                        00179100
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG43            00179200
&XDISPTYPE            SETC  'SRB'       SET KEYWORD                     00179300
                      AIF   (N'&DISPTYPE LE 1).ZG42A  CK NUM            00179400
&ZMS                  SETC  '"DISPTYPE='        *KPOSA* MNOTE           00179500
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00179600
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00179700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00179800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00179900
.ZG42A                ANOP  ,                                           00180000
.*------------------------------------------------------------------    00180100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00180300
.ZG42A0               AIF   (K'&TCB LE 0).ZG42A1  OK                    00180400
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00180500
.ZG42A1               AIF   (K'&ZCVAL LE 0).ZG42A2  OK                  00180600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00180700
&ZMS                  SETC  '"DISPTYPE'         *KMEIA* MNOTE           00180800
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00180900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00181000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00181100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00181200
.ZG42A2               ANOP  ,                                           00181300
.*------------------------------------------------------------------    00181400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181500
.ZG43                 ANOP  ,                                           00181600
&ZXDISPTYPE           SETC  'INPUT'     SET IN/OUTPUT                   00181700
                      AIF   (K'&XDISPTYPE GT 0).ZG43E  VALID ARG        00181800
                      AIF   (T'&DISPTYPE EQ 'O').ZG43D  OMITTED         00181900
&ZASYSLNDX            SETA  0                                           00182000
.ZG43A                ANOP  ,           POSITIONAL MACRO KEY            00182100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00182200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG43C            00182300
&ZTLC                 SETC 'DISPTYPE'                                   00182400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG43A   00182500
.ZG43B                ANOP  ,                                           00182600
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00182700
&ZMS                  SETC  'THE "DISPTYPE" KEY'  *KOPTA* MNOTE         00182800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00182900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00183000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00183100
                      AGO   .ZG43E                                      00183200
.ZG43C                ANOP  ,                                           00183300
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00183400
&ZMS                  SETC  '"DISPTYPE='        *KUKWA* MNOTE           00183500
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00183600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00183700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00183800
&ZMS                  SETC  '&ZMS "SAVEDTYPE",'                         00183900
&ZMS                  SETC  '&ZMS "TCB",'                               00184000
&ZMS                  SETC  '&ZMS OR "SRB".'                            00184100
                      MNOTE 8,' &ZMS '                                  00184200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00184300
                      AGO   .ZG43E                                      00184400
.ZG43D                ANOP  ,                                           00184500
&XDISPTYPE            SETC  'SAVEDTYPE'         SET DEFAULT KEYWORD     00184600
.ZG43E                ANOP  ,                                           00184700
.*------------------------------------------------------------------    00184800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184900
                      AIF   (K'&DISPTYPE(1) GT 0).ZG43F  PARM           00185000
&XDISPTYPE            SETC  ''          ENSURE NULL KEYWORD             00185100
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00185200
&ZMS                  SETC  'THE'                                       00185300
&ZMS                  SETC  '&ZMS "DISPTYPE" KEY AND ITS'               00185400
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00185500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00185600
&ZMS                  SETC  '&ZMS "SAVEDTYPE",'                         00185700
&ZMS                  SETC  '&ZMS "TCB",'                               00185800
&ZMS                  SETC  '&ZMS OR "SRB".'                            00185900
                      MNOTE 8,' &ZMS '                                  00186000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00186100
.ZG43F                ANOP  ,                                           00186200
.*------------------------------------------------------------------    00186300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00186400
.ZG44                 ANOP  ,                                           00186500
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   00186600
                      AIF   (K'&XMODE GT 0).ZG44E  VALID ARG            00186700
                      AIF   (T'&MODE EQ 'O').ZG44D  OMITTED             00186800
&ZASYSLNDX            SETA  0                                           00186900
.ZG44A                ANOP  ,           POSITIONAL MACRO KEY            00187000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00187100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C            00187200
&ZTLC                 SETC 'MODE'                                       00187300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A   00187400
.ZG44B                ANOP  ,                                           00187500
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00187600
&ZMS                  SETC  'THE "MODE" KEY'    *KOPTA* MNOTE           00187700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00187800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00187900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00188000
                      AGO   .ZG44E                                      00188100
.ZG44C                ANOP  ,                                           00188200
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00188300
&ZMS                  SETC  '"MODE='    *KUKWA* MNOTE                   00188400
&ZMS                  SETC  '&ZMS.&MODE"'                               00188500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00188600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00188700
&ZMS                  SETC  '&ZMS "RESET"'                              00188800
&ZMS                  SETC  '&ZMS OR "RETAIN".'                         00188900
                      MNOTE 8,' &ZMS '                                  00189000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00189100
                      AGO   .ZG44E                                      00189200
.ZG44D                ANOP  ,                                           00189300
&XMODE                SETC  'RESET'     SET DEFAULT KEYWORD             00189400
.ZG44E                ANOP  ,                                           00189500
.*------------------------------------------------------------------    00189600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00189700
                      AIF   (K'&MODE(1) GT 0).ZG44F  PARM               00189800
&XMODE                SETC  ''          ENSURE NULL KEYWORD             00189900
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00190000
&ZMS                  SETC  'THE'                                       00190100
&ZMS                  SETC  '&ZMS "MODE" KEY AND ITS'                   00190200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00190300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00190400
&ZMS                  SETC  '&ZMS "RESET"'                              00190500
&ZMS                  SETC  '&ZMS OR "RETAIN".'                         00190600
                      MNOTE 8,' &ZMS '                                  00190700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00190800
.ZG44F                ANOP  ,                                           00190900
.*------------------------------------------------------------------    00191000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191100
&XCONTINUEP           SETC  ''          INITIALIZE XVARIABLE            00191200
.*-------------------------------------------------------------------   00191300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191400
.ZG47                 ANOP  ,                                           00191500
                      AIF   (K'&CONTINUEP(1) LE 0).ZG47A                00191600
&ZTLC                 SETC 'YES'                                        00191700
                      AIF   ('&CONTINUEP(1)' NE '&ZTLC').ZG55           00191800
&XCONTINUEP           SETC  'YES'       SET KEYWORD                     00191900
                      AIF   (N'&CONTINUEP LE 1).ZG47A  CK NUM           00192000
&ZMS                  SETC  '"CONTINUEP='       *KPOSA* MNOTE           00192100
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00192200
&ZMS                  SETC  '&ZMS "CONTINUEP"'                          00192300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00192400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00192500
.ZG47A                ANOP  ,                                           00192600
.*------------------------------------------------------------------    00192700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00192800
&XFROM                SETC  ''          INITIALIZE XVARIABLE            00192900
.*-------------------------------------------------------------------   00193000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193100
.ZG50                 ANOP  ,                                           00193200
                      AIF   (K'&FROM(1) LE 0).ZG50A                     00193300
&ZTLC                 SETC 'NONE'                                       00193400
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG51                00193500
&XFROM                SETC  'NONE'      SET KEYWORD                     00193600
                      AIF   (N'&FROM LE 1).ZG50A  CK NUM                00193700
&ZMS                  SETC  '"FROM='    *KPOSA* MNOTE                   00193800
&ZMS                  SETC  '&ZMS.&FROM"'                               00193900
&ZMS                  SETC  '&ZMS "FROM"'                               00194000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00194100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00194200
.ZG50A                ANOP  ,                                           00194300
.*-------------------------------------------------------------------   00194400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194500
.ZG51                 ANOP  ,                                           00194600
&ZTLC                 SETC 'LOCALMVS'                                   00194700
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG52                00194800
&XFROM                SETC  'LOCALMVS'  SET KEYWORD                     00194900
                      AIF   (N'&FROM LE 1).ZG51A  CK NUM                00195000
&ZMS                  SETC  '"FROM='    *KPOSA* MNOTE                   00195100
&ZMS                  SETC  '&ZMS.&FROM"'                               00195200
&ZMS                  SETC  '&ZMS "FROM"'                               00195300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00195400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00195500
.ZG51A                ANOP  ,                                           00195600
.*-------------------------------------------------------------------   00195700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00195800
.ZG52                 ANOP  ,                                           00195900
&ZTLC                 SETC 'SYSPLEX'                                    00196000
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG53                00196100
&XFROM                SETC  'SYSPLEX'   SET KEYWORD                     00196200
                      AIF   (N'&FROM LE 1).ZG52A  CK NUM                00196300
&ZMS                  SETC  '"FROM='    *KPOSA* MNOTE                   00196400
&ZMS                  SETC  '&ZMS.&FROM"'                               00196500
&ZMS                  SETC  '&ZMS "FROM"'                               00196600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00196700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00196800
.ZG52A                ANOP  ,                                           00196900
.*-------------------------------------------------------------------   00197000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00197100
.ZG53                 ANOP  ,                                           00197200
&ZTLC                 SETC 'NETWORK'                                    00197300
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG54                00197400
&XFROM                SETC  'NETWORK'   SET KEYWORD                     00197500
                      AIF   (N'&FROM LE 1).ZG53A  CK NUM                00197600
&ZMS                  SETC  '"FROM='    *KPOSA* MNOTE                   00197700
&ZMS                  SETC  '&ZMS.&FROM"'                               00197800
&ZMS                  SETC  '&ZMS "FROM"'                               00197900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00198000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00198100
.ZG53A                ANOP  ,                                           00198200
.*------------------------------------------------------------------    00198300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00198400
.ZG54                 ANOP  ,                                           00198500
&ZXFROM               SETC  'INPUT'     SET IN/OUTPUT                   00198600
                      AIF   (K'&XFROM GT 0).ZG54E  VALID ARG            00198700
                      AIF   (T'&FROM EQ 'O').ZG54D  OMITTED             00198800
&ZASYSLNDX            SETA  0                                           00198900
.ZG54A                ANOP  ,           POSITIONAL MACRO KEY            00199000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00199100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG54C            00199200
&ZTLC                 SETC 'FROM'                                       00199300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG54A   00199400
.ZG54B                ANOP  ,                                           00199500
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00199600
&ZMS                  SETC  'THE "FROM" KEY'    *KOPTA* MNOTE           00199700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00199800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00199900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00200000
                      AGO   .ZG54E                                      00200100
.ZG54C                ANOP  ,                                           00200200
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00200300
&ZMS                  SETC  '"FROM='    *KUKWA* MNOTE                   00200400
&ZMS                  SETC  '&ZMS.&FROM"'                               00200500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00200600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00200700
&ZMS                  SETC  '&ZMS "NONE",'                              00200800
&ZMS                  SETC  '&ZMS "LOCALMVS",'                          00200900
&ZMS                  SETC  '&ZMS "SYSPLEX",'                           00201000
&ZMS                  SETC  '&ZMS OR "NETWORK".'                        00201100
                      MNOTE 8,' &ZMS '                                  00201200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00201300
                      AGO   .ZG54E                                      00201400
.ZG54D                ANOP  ,                                           00201500
&XFROM                SETC  'NONE'      SET DEFAULT KEYWORD             00201600
.ZG54E                ANOP  ,                                           00201700
.*------------------------------------------------------------------    00201800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00201900
                      AIF   (K'&FROM(1) GT 0).ZG54F  PARM               00202000
&XFROM                SETC  ''          ENSURE NULL KEYWORD             00202100
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00202200
&ZMS                  SETC  'THE'                                       00202300
&ZMS                  SETC  '&ZMS "FROM" KEY AND ITS'                   00202400
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00202500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00202600
&ZMS                  SETC  '&ZMS "NONE",'                              00202700
&ZMS                  SETC  '&ZMS "LOCALMVS",'                          00202800
&ZMS                  SETC  '&ZMS "SYSPLEX",'                           00202900
&ZMS                  SETC  '&ZMS OR "NETWORK".'                        00203000
                      MNOTE 8,' &ZMS '                                  00203100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00203200
.ZG54F                ANOP  ,                                           00203300
.*-------------------------------------------------------------------   00203400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00203500
.ZG55                 ANOP  ,                                           00203600
&ZTLC                 SETC 'NO'                                         00203700
                      AIF   ('&CONTINUEP(1)' NE '&ZTLC').ZG56           00203800
&XCONTINUEP           SETC  'NO'        SET KEYWORD                     00203900
                      AIF   (N'&CONTINUEP LE 1).ZG55A  CK NUM           00204000
&ZMS                  SETC  '"CONTINUEP='       *KPOSA* MNOTE           00204100
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00204200
&ZMS                  SETC  '&ZMS "CONTINUEP"'                          00204300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00204400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00204500
.ZG55A                ANOP  ,                                           00204600
.*------------------------------------------------------------------    00204700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00204800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00204900
.ZG55A0               AIF   (K'&FROM LE 0).ZG55A1  OK                   00205000
&ZCVAL                SETC '&ZCVAL FROM'        INCORRECT KEY USED      00205100
.ZG55A1               AIF   (K'&ZCVAL LE 0).ZG55A2  OK                  00205200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00205300
&ZMS                  SETC  '"CONTINUEP'        *KMEIA* MNOTE           00205400
&ZMS                  SETC  '&ZMS.=&CONTINUEP"'                         00205500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00205600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00205700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00205800
.ZG55A2               ANOP  ,                                           00205900
.*------------------------------------------------------------------    00206000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00206100
.ZG56                 ANOP  ,                                           00206200
&ZXCONTINUEP          SETC  'INPUT'     SET IN/OUTPUT                   00206300
                      AIF   (K'&XCONTINUEP GT 0).ZG56E  VALID ARG       00206400
                      AIF   (T'&CONTINUEP EQ 'O').ZG56D  OMITTED        00206500
&ZASYSLNDX            SETA  0                                           00206600
.ZG56A                ANOP  ,           POSITIONAL MACRO KEY            00206700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00206800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG56C            00206900
&ZTLC                 SETC 'CONTINUEP'                                  00207000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG56A   00207100
.ZG56B                ANOP  ,                                           00207200
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00207300
&ZMS                  SETC  'THE "CONTINUEP" KEY'  *KOPTA* MNOTE        00207400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00207500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00207600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00207700
                      AGO   .ZG56E                                      00207800
.ZG56C                ANOP  ,                                           00207900
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00208000
&ZMS                  SETC  '"CONTINUEP='       *KUKWA* MNOTE           00208100
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00208200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00208300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00208400
&ZMS                  SETC  '&ZMS "YES"'                                00208500
&ZMS                  SETC  '&ZMS OR "NO".'                             00208600
                      MNOTE 8,' &ZMS '                                  00208700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00208800
                      AGO   .ZG56E                                      00208900
.ZG56D                ANOP  ,                                           00209000
&XCONTINUEP           SETC  'YES'       SET DEFAULT KEYWORD             00209100
.ZG56E                ANOP  ,                                           00209200
.*------------------------------------------------------------------    00209300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00209400
                      AIF   (K'&CONTINUEP(1) GT 0).ZG56F  PARM          00209500
&XCONTINUEP           SETC  ''          ENSURE NULL KEYWORD             00209600
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00209700
&ZMS                  SETC  'THE'                                       00209800
&ZMS                  SETC  '&ZMS "CONTINUEP" KEY AND ITS'              00209900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00210000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00210100
&ZMS                  SETC  '&ZMS "YES"'                                00210200
&ZMS                  SETC  '&ZMS OR "NO".'                             00210300
                      MNOTE 8,' &ZMS '                                  00210400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00210500
.ZG56F                ANOP  ,                                           00210600
.*----------------------------------------------------------------***   00210700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00210800
                      AIF   (N'&OWNER_TOKEN LE 1).ZG58A  CK NUM         00210900
&ZMS                  SETC  '"OWNER_TOKEN='     *KPOSA* MNOTE           00211000
&ZMS                  SETC  '&ZMS.&OWNER_TOKEN"'                        00211100
&ZMS                  SETC  '&ZMS "OWNER_TOKEN"'                        00211200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00211300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00211400
.ZG58A                ANOP  ,                                           00211500
.*-------------------------------------------------------------------   00211600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00211700
&ZXOWNER_TOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00211800
&XOWNER_TOKEN         SETC  'NO_OWNER_TOKEN'                            00211900
                      AIF   (K'&OWNER_TOKEN(1) LE 0).ZG58B  PARM        00212000
&XOWNER_TOKEN         SETC  '&OWNER_TOKEN(1)'   SET XVARIABLE           00212100
                      AIF   (N'&OWNER_TOKEN GT 1).ZG58B  MULTI PARMS    00212200
&XOWNER_TOKEN         SETC  '&OWNER_TOKEN'      SET XVARIABLE           00212300
.ZG58B                ANOP  ,                                           00212400
.*-------------------------------------------------------------------   00212500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00212600
                      AIF   (K'&ZXOWNER_TOKEN LE 0).ZG58R  NOT I/O      00212700
         AIF   ('&XOWNER_TOKEN' EQ 'NO_OWNER_TOKEN').ZG58R              00212800
                      AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZG58R         00212900
&ZCGPR                SETC  '&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2)        00213000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                00213100
                      AIF   (K'&ZCGPR GT 2).ZG58Q                       00213200
                      AIF   ('&ZCGPR' EQ '0').ZG58Q                     00213300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00213400
                      AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME   00213500
.ZG58P                ANOP  ,                                           00213600
                      AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC        00213700
                      AIF   ('&ZCGPR' LT '2').ZG58Q                     00213800
                      AIF   ('&ZCGPR' LE '12').ZG58R                    00213900
.ZG58Q                ANOP  ,                                           00214000
&ZMS                  SETC  '"OWNER_TOKEN='     *KGPRA* MNOTE           00214100
&ZMS                  SETC  '&ZMS.&OWNER_TOKEN"'                        00214200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00214300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00214400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00214500
.ZG58R                ANOP  ,                                           00214600
.*----------------------------------------------------------------***   00214700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00214800
                      AIF   (N'&OWNER_DATA LE 1).ZG61A  CK NUM          00214900
&ZMS                  SETC  '"OWNER_DATA='      *KPOSA* MNOTE           00215000
&ZMS                  SETC  '&ZMS.&OWNER_DATA"'                         00215100
&ZMS                  SETC  '&ZMS "OWNER_DATA"'                         00215200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00215300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00215400
.ZG61A                ANOP  ,                                           00215500
.*-------------------------------------------------------------------   00215600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00215700
&ZXOWNER_DATA         SETC  'INPUT'     SET IN/OUTPUT                   00215800
&XOWNER_DATA          SETC  'NO_OWNER_DATA'                             00215900
                      AIF   (K'&OWNER_DATA(1) LE 0).ZG61B  PARM         00216000
&XOWNER_DATA          SETC  '&OWNER_DATA(1)'    SET XVARIABLE           00216100
                      AIF   (N'&OWNER_DATA GT 1).ZG61B  MULTI PARMS     00216200
&XOWNER_DATA          SETC  '&OWNER_DATA'       SET XVARIABLE           00216300
.ZG61B                ANOP  ,                                           00216400
.*-------------------------------------------------------------------   00216500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00216600
                      AIF   (K'&ZXOWNER_DATA LE 0).ZG61R  NOT I/O       00216700
         AIF   ('&XOWNER_DATA' EQ 'NO_OWNER_DATA').ZG61R                00216800
                      AIF   ('&XOWNER_DATA'(1,1) NE '(').ZG61R          00216900
&ZCGPR                SETC  '&XOWNER_DATA'(2,K'&XOWNER_DATA-2)          00217000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG61P                00217100
                      AIF   (K'&ZCGPR GT 2).ZG61Q                       00217200
                      AIF   ('&ZCGPR' EQ '0').ZG61Q                     00217300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00217400
                      AIF   (T'&ZCGPR NE 'N').ZG61Q  INVALID REG NAME   00217500
.ZG61P                ANOP  ,                                           00217600
                      AIF   (T'&ZCGPR NE 'N').ZG61R  NON NUMERIC        00217700
                      AIF   ('&ZCGPR' LT '2').ZG61Q                     00217800
                      AIF   ('&ZCGPR' LE '12').ZG61R                    00217900
.ZG61Q                ANOP  ,                                           00218000
&ZMS                  SETC  '"OWNER_DATA='      *KGPRA* MNOTE           00218100
&ZMS                  SETC  '&ZMS.&OWNER_DATA"'                         00218200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00218300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00218400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00218500
.ZG61R                ANOP  ,                                           00218600
.*------------------------------------------------------------------    00218700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218800
&XEXSTARTTIMEP        SETC  ''          INITIALIZE XVARIABLE            00218900
.*-------------------------------------------------------------------   00219000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00219100
.ZG65                 ANOP  ,                                           00219200
                      AIF   (K'&EXSTARTTIMEP(1) LE 0).ZG65A             00219300
&ZTLC                 SETC 'NO'                                         00219400
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG66        00219500
&XEXSTARTTIMEP        SETC  'NO'        SET KEYWORD                     00219600
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG65A  CK NUM        00219700
&ZMS                  SETC  '"EXSTARTTIMEP='    *KPOSA* MNOTE           00219800
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00219900
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00220000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00220100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00220200
.ZG65A                ANOP  ,                                           00220300
.*------------------------------------------------------------------    00220400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00220600
.ZG65A0               AIF   (K'&EXSTARTTIME LE 0).ZG65A1  OK            00220700
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00220800
.ZG65A1               AIF   (K'&ZCVAL LE 0).ZG65A2  OK                  00220900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00221000
&ZMS                  SETC  '"EXSTARTTIMEP'     *KMEIA* MNOTE           00221100
&ZMS                  SETC  '&ZMS.=&EXSTARTTIMEP"'                      00221200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00221300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00221400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00221500
.ZG65A2               ANOP  ,                                           00221600
.*-------------------------------------------------------------------   00221700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00221800
.ZG66                 ANOP  ,                                           00221900
&ZTLC                 SETC 'CURRENT'                                    00222000
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG67        00222100
&XEXSTARTTIMEP        SETC  'CURRENT'   SET KEYWORD                     00222200
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG66A  CK NUM        00222300
&ZMS                  SETC  '"EXSTARTTIMEP='    *KPOSA* MNOTE           00222400
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00222500
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00222600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00222700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00222800
.ZG66A                ANOP  ,                                           00222900
.*------------------------------------------------------------------    00223000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00223100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00223200
.ZG66A0               AIF   (K'&EXSTARTTIME LE 0).ZG66A1  OK            00223300
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00223400
.ZG66A1               AIF   (K'&ZCVAL LE 0).ZG66A2  OK                  00223500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00223600
&ZMS                  SETC  '"EXSTARTTIMEP'     *KMEIA* MNOTE           00223700
&ZMS                  SETC  '&ZMS.=&EXSTARTTIMEP"'                      00223800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00223900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00224000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00224100
.ZG66A2               ANOP  ,                                           00224200
.*-------------------------------------------------------------------   00224300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00224400
.ZG67                 ANOP  ,                                           00224500
&ZTLC                 SETC 'YES'                                        00224600
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG71        00224700
&XEXSTARTTIMEP        SETC  'YES'       SET KEYWORD                     00224800
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG67A  CK NUM        00224900
&ZMS                  SETC  '"EXSTARTTIMEP='    *KPOSA* MNOTE           00225000
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00225100
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00225200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00225300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00225400
.ZG67A                ANOP  ,                                           00225500
.*----------------------------------------------------------------***   00225600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00225700
                      AIF   (N'&EXSTARTTIME LE 1).ZG69A  CK NUM         00225800
&ZMS                  SETC  '"EXSTARTTIME='     *KPOSA* MNOTE           00225900
&ZMS                  SETC  '&ZMS.&EXSTARTTIME"'                        00226000
&ZMS                  SETC  '&ZMS "EXSTARTTIME"'                        00226100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00226200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00226300
.ZG69A                ANOP  ,                                           00226400
.*-------------------------------------------------------------------   00226500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00226600
&ZXEXSTARTTIME        SETC  'INPUT'     SET IN/OUTPUT                   00226700
&XEXSTARTTIME         SETC  '&EXSTARTTIME(1)'   SET XVARIABLE           00226800
                      AIF   (N'&EXSTARTTIME GT 1).ZG69B  MULTI PARMS    00226900
&XEXSTARTTIME         SETC  '&EXSTARTTIME'      SET XVARIABLE           00227000
.ZG69B                AIF   (K'&EXSTARTTIME(1) GT 0).ZG69C              00227100
&ZXEXSTARTTIME        SETC  ''          RESET IN/OUTPUT                 00227200
&ZMS                  SETC  ' '         *KRQDA*                         00227300
&ZMS                  SETC  '&ZMS "EXSTARTTIME" KEY AND ITS'            00227400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00227500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00227600
.ZG69C                ANOP  ,                                           00227700
.*-------------------------------------------------------------------   00227800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00227900
                      AIF   (K'&ZXEXSTARTTIME LE 0).ZG69R  NOT I/O      00228000
                      AIF   ('&XEXSTARTTIME'(1,1) NE '(').ZG69R         00228100
&ZCGPR                SETC  '&XEXSTARTTIME'(2,K'&XEXSTARTTIME-2)        00228200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                00228300
                      AIF   (K'&ZCGPR GT 2).ZG69Q                       00228400
                      AIF   ('&ZCGPR' EQ '0').ZG69Q                     00228500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00228600
                      AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME   00228700
.ZG69P                ANOP  ,                                           00228800
                      AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC        00228900
                      AIF   ('&ZCGPR' LT '2').ZG69Q                     00229000
                      AIF   ('&ZCGPR' LE '12').ZG69R                    00229100
.ZG69Q                ANOP  ,                                           00229200
&ZMS                  SETC  '"EXSTARTTIME='     *KGPRA* MNOTE           00229300
&ZMS                  SETC  '&ZMS.&EXSTARTTIME"'                        00229400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00229500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00229600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00229700
.ZG69R                ANOP  ,                                           00229800
.*------------------------------------------------------------------    00229900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00230000
.ZG71                 ANOP  ,                                           00230100
&ZXEXSTARTTIMEP       SETC  'INPUT'     SET IN/OUTPUT                   00230200
                      AIF   (K'&XEXSTARTTIMEP GT 0).ZG71E  VALID ARG    00230300
                      AIF   (T'&EXSTARTTIMEP EQ 'O').ZG71D  OMITTED     00230400
&ZASYSLNDX            SETA  0                                           00230500
.ZG71A                ANOP  ,           POSITIONAL MACRO KEY            00230600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00230700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG71C            00230800
&ZTLC                 SETC 'EXSTARTTIMEP'                               00230900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG71A   00231000
.ZG71B                ANOP  ,                                           00231100
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00231200
&ZMS                  SETC  'THE "EXSTARTTIMEP" KEY'  *KOPTA* MNOTE     00231300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00231400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00231500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00231600
                      AGO   .ZG71E                                      00231700
.ZG71C                ANOP  ,                                           00231800
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00231900
&ZMS                  SETC  '"EXSTARTTIMEP='    *KUKWA* MNOTE           00232000
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00232100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00232200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00232300
&ZMS                  SETC  '&ZMS "NO",'                                00232400
&ZMS                  SETC  '&ZMS "CURRENT",'                           00232500
&ZMS                  SETC  '&ZMS OR "YES".'                            00232600
                      MNOTE 8,' &ZMS '                                  00232700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00232800
                      AGO   .ZG71E                                      00232900
.ZG71D                ANOP  ,                                           00233000
&XEXSTARTTIMEP        SETC  'NO'        SET DEFAULT KEYWORD             00233100
.ZG71E                ANOP  ,                                           00233200
.*------------------------------------------------------------------    00233300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00233400
                      AIF   (K'&EXSTARTTIMEP(1) GT 0).ZG71F  PARM       00233500
&XEXSTARTTIMEP        SETC  ''          ENSURE NULL KEYWORD             00233600
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00233700
&ZMS                  SETC  'THE'                                       00233800
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP" KEY AND ITS'           00233900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00234000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00234100
&ZMS                  SETC  '&ZMS "NO",'                                00234200
&ZMS                  SETC  '&ZMS "CURRENT",'                           00234300
&ZMS                  SETC  '&ZMS OR "YES".'                            00234400
                      MNOTE 8,' &ZMS '                                  00234500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00234600
.ZG71F                ANOP  ,                                           00234700
.*------------------------------------------------------------------    00234800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00234900
&XSCOPE               SETC  ''          INITIALIZE XVARIABLE            00235000
.*-------------------------------------------------------------------   00235100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00235200
.ZG74                 ANOP  ,                                           00235300
                      AIF   (K'&SCOPE(1) LE 0).ZG74A                    00235400
&ZTLC                 SETC 'SHARED'                                     00235500
                      AIF   ('&SCOPE(1)' NE '&ZTLC').ZG75               00235600
&XSCOPE               SETC  'SHARED'    SET KEYWORD                     00235700
                      AIF   (N'&SCOPE LE 1).ZG74A  CK NUM               00235800
&ZMS                  SETC  '"SCOPE='   *KPOSA* MNOTE                   00235900
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00236000
&ZMS                  SETC  '&ZMS "SCOPE"'                              00236100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00236200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00236300
.ZG74A                ANOP  ,                                           00236400
.*-------------------------------------------------------------------   00236500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00236600
.ZG75                 ANOP  ,                                           00236700
&ZTLC                 SETC 'SINGLE'                                     00236800
                      AIF   ('&SCOPE(1)' NE '&ZTLC').ZG76               00236900
&XSCOPE               SETC  'SINGLE'    SET KEYWORD                     00237000
                      AIF   (N'&SCOPE LE 1).ZG75A  CK NUM               00237100
&ZMS                  SETC  '"SCOPE='   *KPOSA* MNOTE                   00237200
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00237300
&ZMS                  SETC  '&ZMS "SCOPE"'                              00237400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00237500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00237600
.ZG75A                ANOP  ,                                           00237700
.*------------------------------------------------------------------    00237800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00237900
.ZG76                 ANOP  ,                                           00238000
&ZXSCOPE              SETC  'INPUT'     SET IN/OUTPUT                   00238100
                      AIF   (K'&XSCOPE GT 0).ZG76E  VALID ARG           00238200
                      AIF   (T'&SCOPE EQ 'O').ZG76D  OMITTED            00238300
&ZASYSLNDX            SETA  0                                           00238400
.ZG76A                ANOP  ,           POSITIONAL MACRO KEY            00238500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00238600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG76C            00238700
&ZTLC                 SETC 'SCOPE'                                      00238800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG76A   00238900
.ZG76B                ANOP  ,                                           00239000
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00239100
&ZMS                  SETC  'THE "SCOPE" KEY'   *KOPTA* MNOTE           00239200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00239300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00239400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00239500
                      AGO   .ZG76E                                      00239600
.ZG76C                ANOP  ,                                           00239700
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00239800
&ZMS                  SETC  '"SCOPE='   *KUKWA* MNOTE                   00239900
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00240000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00240100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00240200
&ZMS                  SETC  '&ZMS "SHARED"'                             00240300
&ZMS                  SETC  '&ZMS OR "SINGLE".'                         00240400
                      MNOTE 8,' &ZMS '                                  00240500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00240600
                      AGO   .ZG76E                                      00240700
.ZG76D                ANOP  ,                                           00240800
&XSCOPE               SETC  'SHARED'    SET DEFAULT KEYWORD             00240900
.ZG76E                ANOP  ,                                           00241000
.*------------------------------------------------------------------    00241100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241200
                      AIF   (K'&SCOPE(1) GT 0).ZG76F  PARM              00241300
&XSCOPE               SETC  ''          ENSURE NULL KEYWORD             00241400
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00241500
&ZMS                  SETC  'THE'                                       00241600
&ZMS                  SETC  '&ZMS "SCOPE" KEY AND ITS'                  00241700
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00241800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00241900
&ZMS                  SETC  '&ZMS "SHARED"'                             00242000
&ZMS                  SETC  '&ZMS OR "SINGLE".'                         00242100
                      MNOTE 8,' &ZMS '                                  00242200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00242300
.ZG76F                ANOP  ,                                           00242400
.*----------------------------------------------------------------***   00242500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00242600
                      AIF   (N'&SERVCLS LE 1).ZG78A  CK NUM             00242700
&ZMS                  SETC  '"SERVCLS='         *KPOSA* MNOTE           00242800
&ZMS                  SETC  '&ZMS.&SERVCLS"'                            00242900
&ZMS                  SETC  '&ZMS "SERVCLS"'                            00243000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00243100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00243200
.ZG78A                ANOP  ,                                           00243300
.*-------------------------------------------------------------------   00243400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00243500
&ZXSERVCLS            SETC  'INPUT'     SET IN/OUTPUT                   00243600
&XSERVCLS             SETC  'NO_SERVCLS'                                00243700
                      AIF   (K'&SERVCLS(1) LE 0).ZG78B  PARM            00243800
&XSERVCLS             SETC  '&SERVCLS(1)'       SET XVARIABLE           00243900
                      AIF   (N'&SERVCLS GT 1).ZG78B  MULTI PARMS        00244000
&XSERVCLS             SETC  '&SERVCLS'  SET XVARIABLE                   00244100
.ZG78B                ANOP  ,                                           00244200
.*-------------------------------------------------------------------   00244300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00244400
                      AIF   (K'&ZXSERVCLS LE 0).ZG78R  NOT I/O          00244500
         AIF   ('&XSERVCLS' EQ 'NO_SERVCLS').ZG78R                      00244600
                      AIF   ('&XSERVCLS'(1,1) NE '(').ZG78R             00244700
&ZCGPR                SETC  '&XSERVCLS'(2,K'&XSERVCLS-2)                00244800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG78P                00244900
                      AIF   (K'&ZCGPR GT 2).ZG78Q                       00245000
                      AIF   ('&ZCGPR' EQ '0').ZG78Q                     00245100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00245200
                      AIF   (T'&ZCGPR NE 'N').ZG78Q  INVALID REG NAME   00245300
.ZG78P                ANOP  ,                                           00245400
                      AIF   (T'&ZCGPR NE 'N').ZG78R  NON NUMERIC        00245500
                      AIF   ('&ZCGPR' LT '2').ZG78Q                     00245600
                      AIF   ('&ZCGPR' LE '12').ZG78R                    00245700
.ZG78Q                ANOP  ,                                           00245800
&ZMS                  SETC  '"SERVCLS='         *KGPRA* MNOTE           00245900
&ZMS                  SETC  '&ZMS.&SERVCLS"'                            00246000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00246100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00246200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00246300
.ZG78R                ANOP  ,                                           00246400
.*----------------------------------------------------------------***   00246500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00246600
                      AIF   (N'&TRXNAME LE 1).ZG81A  CK NUM             00246700
&ZMS                  SETC  '"TRXNAME='         *KPOSA* MNOTE           00246800
&ZMS                  SETC  '&ZMS.&TRXNAME"'                            00246900
&ZMS                  SETC  '&ZMS "TRXNAME"'                            00247000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00247100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00247200
.ZG81A                ANOP  ,                                           00247300
.*-------------------------------------------------------------------   00247400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00247500
&ZXTRXNAME            SETC  'INPUT'     SET IN/OUTPUT                   00247600
&XTRXNAME             SETC  'NO_TRXNAME'                                00247700
                      AIF   (K'&TRXNAME(1) LE 0).ZG81B  PARM            00247800
&XTRXNAME             SETC  '&TRXNAME(1)'       SET XVARIABLE           00247900
                      AIF   (N'&TRXNAME GT 1).ZG81B  MULTI PARMS        00248000
&XTRXNAME             SETC  '&TRXNAME'  SET XVARIABLE                   00248100
.ZG81B                ANOP  ,                                           00248200
.*-------------------------------------------------------------------   00248300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00248400
                      AIF   (K'&ZXTRXNAME LE 0).ZG81R  NOT I/O          00248500
         AIF   ('&XTRXNAME' EQ 'NO_TRXNAME').ZG81R                      00248600
                      AIF   ('&XTRXNAME'(1,1) NE '(').ZG81R             00248700
&ZCGPR                SETC  '&XTRXNAME'(2,K'&XTRXNAME-2)                00248800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG81P                00248900
                      AIF   (K'&ZCGPR GT 2).ZG81Q                       00249000
                      AIF   ('&ZCGPR' EQ '0').ZG81Q                     00249100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00249200
                      AIF   (T'&ZCGPR NE 'N').ZG81Q  INVALID REG NAME   00249300
.ZG81P                ANOP  ,                                           00249400
                      AIF   (T'&ZCGPR NE 'N').ZG81R  NON NUMERIC        00249500
                      AIF   ('&ZCGPR' LT '2').ZG81Q                     00249600
                      AIF   ('&ZCGPR' LE '12').ZG81R                    00249700
.ZG81Q                ANOP  ,                                           00249800
&ZMS                  SETC  '"TRXNAME='         *KGPRA* MNOTE           00249900
&ZMS                  SETC  '&ZMS.&TRXNAME"'                            00250000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00250100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00250200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00250300
.ZG81R                ANOP  ,                                           00250400
.*----------------------------------------------------------------***   00250500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00250600
                      AIF   (N'&USERID LE 1).ZG84A  CK NUM              00250700
&ZMS                  SETC  '"USERID='  *KPOSA* MNOTE                   00250800
&ZMS                  SETC  '&ZMS.&USERID"'                             00250900
&ZMS                  SETC  '&ZMS "USERID"'                             00251000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00251100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00251200
.ZG84A                ANOP  ,                                           00251300
.*-------------------------------------------------------------------   00251400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00251500
&ZXUSERID             SETC  'INPUT'     SET IN/OUTPUT                   00251600
&XUSERID              SETC  'NO_USERID'                                 00251700
                      AIF   (K'&USERID(1) LE 0).ZG84B  PARM             00251800
&XUSERID              SETC  '&USERID(1)'        SET XVARIABLE           00251900
                      AIF   (N'&USERID GT 1).ZG84B  MULTI PARMS         00252000
&XUSERID              SETC  '&USERID'   SET XVARIABLE                   00252100
.ZG84B                ANOP  ,                                           00252200
.*-------------------------------------------------------------------   00252300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00252400
                      AIF   (K'&ZXUSERID LE 0).ZG84R  NOT I/O           00252500
         AIF   ('&XUSERID' EQ 'NO_USERID').ZG84R                        00252600
                      AIF   ('&XUSERID'(1,1) NE '(').ZG84R              00252700
&ZCGPR                SETC  '&XUSERID'(2,K'&XUSERID-2)                  00252800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG84P                00252900
                      AIF   (K'&ZCGPR GT 2).ZG84Q                       00253000
                      AIF   ('&ZCGPR' EQ '0').ZG84Q                     00253100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00253200
                      AIF   (T'&ZCGPR NE 'N').ZG84Q  INVALID REG NAME   00253300
.ZG84P                ANOP  ,                                           00253400
                      AIF   (T'&ZCGPR NE 'N').ZG84R  NON NUMERIC        00253500
                      AIF   ('&ZCGPR' LT '2').ZG84Q                     00253600
                      AIF   ('&ZCGPR' LE '12').ZG84R                    00253700
.ZG84Q                ANOP  ,                                           00253800
&ZMS                  SETC  '"USERID='  *KGPRA* MNOTE                   00253900
&ZMS                  SETC  '&ZMS.&USERID"'                             00254000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00254100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00254200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00254300
.ZG84R                ANOP  ,                                           00254400
.*----------------------------------------------------------------***   00254500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00254600
                      AIF   (N'&TRXCLASS LE 1).ZG87A  CK NUM            00254700
&ZMS                  SETC  '"TRXCLASS='        *KPOSA* MNOTE           00254800
&ZMS                  SETC  '&ZMS.&TRXCLASS"'                           00254900
&ZMS                  SETC  '&ZMS "TRXCLASS"'                           00255000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00255100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00255200
.ZG87A                ANOP  ,                                           00255300
.*-------------------------------------------------------------------   00255400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00255500
&ZXTRXCLASS           SETC  'INPUT'     SET IN/OUTPUT                   00255600
&XTRXCLASS            SETC  'NO_TRXCLASS'                               00255700
                      AIF   (K'&TRXCLASS(1) LE 0).ZG87B  PARM           00255800
&XTRXCLASS            SETC  '&TRXCLASS(1)'      SET XVARIABLE           00255900
                      AIF   (N'&TRXCLASS GT 1).ZG87B  MULTI PARMS       00256000
&XTRXCLASS            SETC  '&TRXCLASS'         SET XVARIABLE           00256100
.ZG87B                ANOP  ,                                           00256200
.*-------------------------------------------------------------------   00256300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00256400
                      AIF   (K'&ZXTRXCLASS LE 0).ZG87R  NOT I/O         00256500
         AIF   ('&XTRXCLASS' EQ 'NO_TRXCLASS').ZG87R                    00256600
                      AIF   ('&XTRXCLASS'(1,1) NE '(').ZG87R            00256700
&ZCGPR                SETC  '&XTRXCLASS'(2,K'&XTRXCLASS-2)              00256800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                00256900
                      AIF   (K'&ZCGPR GT 2).ZG87Q                       00257000
                      AIF   ('&ZCGPR' EQ '0').ZG87Q                     00257100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00257200
                      AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME   00257300
.ZG87P                ANOP  ,                                           00257400
                      AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC        00257500
                      AIF   ('&ZCGPR' LT '2').ZG87Q                     00257600
                      AIF   ('&ZCGPR' LE '12').ZG87R                    00257700
.ZG87Q                ANOP  ,                                           00257800
&ZMS                  SETC  '"TRXCLASS='        *KGPRA* MNOTE           00257900
&ZMS                  SETC  '&ZMS.&TRXCLASS"'                           00258000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00258100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00258200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00258300
.ZG87R                ANOP  ,                                           00258400
.*----------------------------------------------------------------***   00258500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00258600
                      AIF   (N'&TTRACETOKEN LE 1).ZG90A  CK NUM         00258700
&ZMS                  SETC  '"TTRACETOKEN='     *KPOSA* MNOTE           00258800
&ZMS                  SETC  '&ZMS.&TTRACETOKEN"'                        00258900
&ZMS                  SETC  '&ZMS "TTRACETOKEN"'                        00259000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00259100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00259200
.ZG90A                ANOP  ,                                           00259300
.*-------------------------------------------------------------------   00259400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00259500
&ZXTTRACETOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00259600
&XTTRACETOKEN         SETC  'NO_TTRACETOKEN'                            00259700
                      AIF   (K'&TTRACETOKEN(1) LE 0).ZG90B  PARM        00259800
&XTTRACETOKEN         SETC  '&TTRACETOKEN(1)'   SET XVARIABLE           00259900
                      AIF   (N'&TTRACETOKEN GT 1).ZG90B  MULTI PARMS    00260000
&XTTRACETOKEN         SETC  '&TTRACETOKEN'      SET XVARIABLE           00260100
.ZG90B                ANOP  ,                                           00260200
.*-------------------------------------------------------------------   00260300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00260400
                      AIF   (K'&ZXTTRACETOKEN LE 0).ZG90R  NOT I/O      00260500
         AIF   ('&XTTRACETOKEN' EQ 'NO_TTRACETOKEN').ZG90R              00260600
                      AIF   ('&XTTRACETOKEN'(1,1) NE '(').ZG90R         00260700
&ZCGPR                SETC  '&XTTRACETOKEN'(2,K'&XTTRACETOKEN-2)        00260800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                00260900
                      AIF   (K'&ZCGPR GT 2).ZG90Q                       00261000
                      AIF   ('&ZCGPR' EQ '0').ZG90Q                     00261100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00261200
                      AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME   00261300
.ZG90P                ANOP  ,                                           00261400
                      AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC        00261500
                      AIF   ('&ZCGPR' LT '2').ZG90Q                     00261600
                      AIF   ('&ZCGPR' LE '12').ZG90R                    00261700
.ZG90Q                ANOP  ,                                           00261800
&ZMS                  SETC  '"TTRACETOKEN='     *KGPRA* MNOTE           00261900
&ZMS                  SETC  '&ZMS.&TTRACETOKEN"'                        00262000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00262100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00262200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00262300
.ZG90R                ANOP  ,                                           00262400
.*----------------------------------------------------------------***   00262500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00262600
                      AIF   (N'&SOURCELU LE 1).ZG93A  CK NUM            00262700
&ZMS                  SETC  '"SOURCELU='        *KPOSA* MNOTE           00262800
&ZMS                  SETC  '&ZMS.&SOURCELU"'                           00262900
&ZMS                  SETC  '&ZMS "SOURCELU"'                           00263000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00263100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00263200
.ZG93A                ANOP  ,                                           00263300
.*-------------------------------------------------------------------   00263400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00263500
&ZXSOURCELU           SETC  'INPUT'     SET IN/OUTPUT                   00263600
&XSOURCELU            SETC  'NO_SOURCELU'                               00263700
                      AIF   (K'&SOURCELU(1) LE 0).ZG93B  PARM           00263800
&XSOURCELU            SETC  '&SOURCELU(1)'      SET XVARIABLE           00263900
                      AIF   (N'&SOURCELU GT 1).ZG93B  MULTI PARMS       00264000
&XSOURCELU            SETC  '&SOURCELU'         SET XVARIABLE           00264100
.ZG93B                ANOP  ,                                           00264200
.*-------------------------------------------------------------------   00264300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00264400
                      AIF   (K'&ZXSOURCELU LE 0).ZG93R  NOT I/O         00264500
         AIF   ('&XSOURCELU' EQ 'NO_SOURCELU').ZG93R                    00264600
                      AIF   ('&XSOURCELU'(1,1) NE '(').ZG93R            00264700
&ZCGPR                SETC  '&XSOURCELU'(2,K'&XSOURCELU-2)              00264800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG93P                00264900
                      AIF   (K'&ZCGPR GT 2).ZG93Q                       00265000
                      AIF   ('&ZCGPR' EQ '0').ZG93Q                     00265100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00265200
                      AIF   (T'&ZCGPR NE 'N').ZG93Q  INVALID REG NAME   00265300
.ZG93P                ANOP  ,                                           00265400
                      AIF   (T'&ZCGPR NE 'N').ZG93R  NON NUMERIC        00265500
                      AIF   ('&ZCGPR' LT '2').ZG93Q                     00265600
                      AIF   ('&ZCGPR' LE '12').ZG93R                    00265700
.ZG93Q                ANOP  ,                                           00265800
&ZMS                  SETC  '"SOURCELU='        *KGPRA* MNOTE           00265900
&ZMS                  SETC  '&ZMS.&SOURCELU"'                           00266000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00266100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00266200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00266300
.ZG93R                ANOP  ,                                           00266400
.*----------------------------------------------------------------***   00266500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00266600
                      AIF   (N'&LU62TKN LE 1).ZG96A  CK NUM             00266700
&ZMS                  SETC  '"LU62TKN='         *KPOSA* MNOTE           00266800
&ZMS                  SETC  '&ZMS.&LU62TKN"'                            00266900
&ZMS                  SETC  '&ZMS "LU62TKN"'                            00267000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00267100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00267200
.ZG96A                ANOP  ,                                           00267300
.*-------------------------------------------------------------------   00267400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00267500
&ZXLU62TKN            SETC  'INPUT'     SET IN/OUTPUT                   00267600
&XLU62TKN             SETC  'NO_LU62TKN'                                00267700
                      AIF   (K'&LU62TKN(1) LE 0).ZG96B  PARM            00267800
&XLU62TKN             SETC  '&LU62TKN(1)'       SET XVARIABLE           00267900
                      AIF   (N'&LU62TKN GT 1).ZG96B  MULTI PARMS        00268000
&XLU62TKN             SETC  '&LU62TKN'  SET XVARIABLE                   00268100
.ZG96B                ANOP  ,                                           00268200
.*-------------------------------------------------------------------   00268300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00268400
                      AIF   (K'&ZXLU62TKN LE 0).ZG96R  NOT I/O          00268500
         AIF   ('&XLU62TKN' EQ 'NO_LU62TKN').ZG96R                      00268600
                      AIF   ('&XLU62TKN'(1,1) NE '(').ZG96R             00268700
&ZCGPR                SETC  '&XLU62TKN'(2,K'&XLU62TKN-2)                00268800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG96P                00268900
                      AIF   (K'&ZCGPR GT 2).ZG96Q                       00269000
                      AIF   ('&ZCGPR' EQ '0').ZG96Q                     00269100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00269200
                      AIF   (T'&ZCGPR NE 'N').ZG96Q  INVALID REG NAME   00269300
.ZG96P                ANOP  ,                                           00269400
                      AIF   (T'&ZCGPR NE 'N').ZG96R  NON NUMERIC        00269500
                      AIF   ('&ZCGPR' LT '2').ZG96Q                     00269600
                      AIF   ('&ZCGPR' LE '12').ZG96R                    00269700
.ZG96Q                ANOP  ,                                           00269800
&ZMS                  SETC  '"LU62TKN='         *KGPRA* MNOTE           00269900
&ZMS                  SETC  '&ZMS.&LU62TKN"'                            00270000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00270100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00270200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00270300
.ZG96R                ANOP  ,                                           00270400
.*------------------------------------------------------------------    00270500
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00270600
&XLU62TKN_FMT         SETC  ''          INITIALIZE XVARIABLE            00270700
.*-------------------------------------------------------------------   00270800
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00270900
.ZG99                 ANOP  ,                                           00271000
                      AIF   (K'&LU62TKN_FMT(1) LE 0).ZG99A              00271100
&ZTLC                 SETC 'LU_NO_CC_27'                                00271200
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG100        00271300
&XLU62TKN_FMT         SETC  'LU_NO_CC_27'       SET KEYWORD             00271400
                      AIF   (N'&LU62TKN_FMT LE 1).ZG99A  CK NUM         00271500
&ZMS                  SETC  '"LU62TKN_FMT='     *KPOSA* MNOTE           00271600
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00271700
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00271800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00271900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00272000
.ZG99A                ANOP  ,                                           00272100
.*------------------------------------------------------------------    00272200
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00272300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00272400
.ZG99A0               AIF   (K'&LU62TKN_LEN LE 0).ZG99A1  OK            00272500
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00272600
.ZG99A1               AIF   (K'&ZCVAL LE 0).ZG99A2  OK                  00272700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00272800
&ZMS                  SETC  '"LU62TKN_FMT'      *KMEIA* MNOTE           00272900
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00273000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00273100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00273200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00273300
.ZG99A2               ANOP  ,                                           00273400
.*-------------------------------------------------------------------   00273500
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00273600
.ZG100                ANOP  ,                                           00273700
&ZTLC                 SETC 'FULL_LU_NO_CC_27'                           00273800
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG101        00273900
&XLU62TKN_FMT         SETC  'FULL_LU_NO_CC_27'  SET KEYWORD             00274000
                      AIF   (N'&LU62TKN_FMT LE 1).ZG100A  CK NUM        00274100
&ZMS                  SETC  '"LU62TKN_FMT='     *KPOSA* MNOTE           00274200
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00274300
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00274400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00274500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00274600
.ZG100A               ANOP  ,                                           00274700
.*------------------------------------------------------------------    00274800
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00274900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00275000
.ZG100A0              AIF   (K'&LU62TKN_LEN LE 0).ZG100A1  OK           00275100
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00275200
.ZG100A1              AIF   (K'&ZCVAL LE 0).ZG100A2  OK                 00275300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00275400
&ZMS                  SETC  '"LU62TKN_FMT'      *KMEIA* MNOTE           00275500
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00275600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00275700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00275800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00275900
.ZG100A2              ANOP  ,                                           00276000
.*-------------------------------------------------------------------   00276100
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00276200
.ZG101                ANOP  ,                                           00276300
&ZTLC                 SETC 'FULL_LU_0_CC_28'                            00276400
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG102        00276500
&XLU62TKN_FMT         SETC  'FULL_LU_0_CC_28'   SET KEYWORD             00276600
                      AIF   (N'&LU62TKN_FMT LE 1).ZG101A  CK NUM        00276700
&ZMS                  SETC  '"LU62TKN_FMT='     *KPOSA* MNOTE           00276800
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00276900
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00277000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00277100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00277200
.ZG101A               ANOP  ,                                           00277300
.*------------------------------------------------------------------    00277400
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00277500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00277600
.ZG101A0              AIF   (K'&LU62TKN_LEN LE 0).ZG101A1  OK           00277700
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00277800
.ZG101A1              AIF   (K'&ZCVAL LE 0).ZG101A2  OK                 00277900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00278000
&ZMS                  SETC  '"LU62TKN_FMT'      *KMEIA* MNOTE           00278100
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00278200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00278300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00278400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00278500
.ZG101A2              ANOP  ,                                           00278600
.*-------------------------------------------------------------------   00278700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00278800
.ZG102                ANOP  ,                                           00278900
&ZTLC                 SETC 'FULL_LU_CC_36'                              00279000
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG103        00279100
&XLU62TKN_FMT         SETC  'FULL_LU_CC_36'     SET KEYWORD             00279200
                      AIF   (N'&LU62TKN_FMT LE 1).ZG102A  CK NUM        00279300
&ZMS                  SETC  '"LU62TKN_FMT='     *KPOSA* MNOTE           00279400
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00279500
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00279600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00279700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00279800
.ZG102A               ANOP  ,                                           00279900
.*------------------------------------------------------------------    00280000
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00280100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00280200
.ZG102A0              AIF   (K'&LU62TKN_LEN LE 0).ZG102A1  OK           00280300
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00280400
.ZG102A1              AIF   (K'&ZCVAL LE 0).ZG102A2  OK                 00280500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00280600
&ZMS                  SETC  '"LU62TKN_FMT'      *KMEIA* MNOTE           00280700
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00280800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00280900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00281000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00281100
.ZG102A2              ANOP  ,                                           00281200
.*-------------------------------------------------------------------   00281300
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00281400
.ZG103                ANOP  ,                                           00281500
&ZTLC                 SETC 'OTHER'                                      00281600
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG107        00281700
&XLU62TKN_FMT         SETC  'OTHER'     SET KEYWORD                     00281800
                      AIF   (N'&LU62TKN_FMT LE 1).ZG103A  CK NUM        00281900
&ZMS                  SETC  '"LU62TKN_FMT='     *KPOSA* MNOTE           00282000
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00282100
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00282200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00282300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00282400
.ZG103A               ANOP  ,                                           00282500
.*----------------------------------------------------------------***   00282600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00282700
                      AIF   (N'&LU62TKN_LEN LE 1).ZG105A  CK NUM        00282800
&ZMS                  SETC  '"LU62TKN_LEN='     *KPOSA* MNOTE           00282900
&ZMS                  SETC  '&ZMS.&LU62TKN_LEN"'                        00283000
&ZMS                  SETC  '&ZMS "LU62TKN_LEN"'                        00283100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00283200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00283300
.ZG105A               ANOP  ,                                           00283400
.*-------------------------------------------------------------------   00283500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00283600
&ZXLU62TKN_LEN        SETC  'INPUT'     SET IN/OUTPUT                   00283700
&XLU62TKN_LEN         SETC  '&LU62TKN_LEN(1)'   SET XVARIABLE           00283800
                      AIF   (N'&LU62TKN_LEN GT 1).ZG105B  MULTI PARMS   00283900
&XLU62TKN_LEN         SETC  '&LU62TKN_LEN'      SET XVARIABLE           00284000
.ZG105B               AIF   (K'&LU62TKN_LEN(1) GT 0).ZG105C             00284100
&ZXLU62TKN_LEN        SETC  ''          RESET IN/OUTPUT                 00284200
&ZMS                  SETC  'WHEN "OTHER" IS SPECIFIED'  *KRQDA*        00284300
&ZMS                  SETC  '&ZMS , "LU62TKN_LEN" KEY AND ITS'          00284400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00284500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00284600
.ZG105C               ANOP  ,                                           00284700
.*-------------------------------------------------------------------   00284800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00284900
                      AIF   (K'&ZXLU62TKN_LEN LE 0).ZG105R  NOT I/O     00285000
                      AIF   ('&XLU62TKN_LEN'(1,1) NE '(').ZG105R        00285100
&ZCGPR                SETC  '&XLU62TKN_LEN'(2,K'&XLU62TKN_LEN-2)        00285200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG105P               00285300
                      AIF   (K'&ZCGPR GT 2).ZG105Q                      00285400
                      AIF   ('&ZCGPR' EQ '0').ZG105Q                    00285500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00285600
                      AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME  00285700
.ZG105P               ANOP  ,                                           00285800
                      AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC       00285900
                      AIF   ('&ZCGPR' LT '2').ZG105Q                    00286000
                      AIF   ('&ZCGPR' LE '12').ZG105R                   00286100
.ZG105Q               ANOP  ,                                           00286200
&ZMS                  SETC  '"LU62TKN_LEN='     *KGPRA* MNOTE           00286300
&ZMS                  SETC  '&ZMS.&LU62TKN_LEN"'                        00286400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00286500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00286600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00286700
.ZG105R               ANOP  ,                                           00286800
.*------------------------------------------------------------------    00286900
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00287000
.ZG107                ANOP  ,                                           00287100
&ZXLU62TKN_FMT        SETC  'INPUT'     SET IN/OUTPUT                   00287200
                      AIF   (K'&XLU62TKN_FMT GT 0).ZG107E  VALID ARG    00287300
                      AIF   (T'&LU62TKN_FMT EQ 'O').ZG107D  OMITTED     00287400
&ZASYSLNDX            SETA  0                                           00287500
.ZG107A               ANOP  ,           POSITIONAL MACRO KEY            00287600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00287700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG107C           00287800
&ZTLC                 SETC 'LU62TKN_FMT'                                00287900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG107A  00288000
.ZG107B               ANOP  ,                                           00288100
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00288200
&ZMS                  SETC  'THE "LU62TKN_FMT" KEY'  *KOPTA* MNOTE      00288300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00288400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00288500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00288600
                      AGO   .ZG107E                                     00288700
.ZG107C               ANOP  ,                                           00288800
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00288900
&ZMS                  SETC  '"LU62TKN_FMT='     *KUKWA* MNOTE           00289000
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00289100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00289200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00289300
&ZMS                  SETC  '&ZMS "LU_NO_CC_27",'                       00289400
&ZMS                  SETC  '&ZMS "FULL_LU_NO_CC_27",'                  00289500
&ZMS                  SETC  '&ZMS "FULL_LU_0_CC_28",'                   00289600
&ZMS                  SETC  '&ZMS "FULL_LU_CC_36",'                     00289700
&ZMS                  SETC  '&ZMS OR "OTHER".'                          00289800
                      MNOTE 8,' &ZMS '                                  00289900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00290000
                      AGO   .ZG107E                                     00290100
.ZG107D               ANOP  ,                                           00290200
&XLU62TKN_FMT         SETC  'LU_NO_CC_27'       SET DEFAULT KEYWORD     00290300
.ZG107E               ANOP  ,                                           00290400
.*------------------------------------------------------------------    00290500
.***AG.KKCTL06 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00290600
                      AIF   (K'&LU62TKN(1) GT 0).ZG107F  KEY            00290700
                      AIF   (K'&LU62TKN_FMT(1) LE 0).ZG107G  PARM       00290800
&ZMS                  SETC  '"LU62TKN_FMT'      *KDEPA* MNOTE           00290900
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00291000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00291100
&ZMS                  SETC  '&ZMS '                                     00291200
&ZMS                  SETC  '&ZMS "LU62TKN"'                            00291300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00291400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00291500
                      AGO   .ZG107G                                     00291600
.*                                                                      00291700
.ZG107F               ANOP  ,                                           00291800
                      AIF   (K'&LU62TKN_FMT(1) GT 0).ZG107G  PARM       00291900
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00292000
&XLU62TKN_FMT         SETC  ''          ENSURE NULL KEYWORD             00292100
&ZMS                  SETC  'THE'                                       00292200
&ZMS                  SETC  '&ZMS "LU62TKN_FMT" KEY AND ITS'            00292300
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00292400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00292500
&ZMS                  SETC  '&ZMS "LU_NO_CC_27",'                       00292600
&ZMS                  SETC  '&ZMS "FULL_LU_NO_CC_27",'                  00292700
&ZMS                  SETC  '&ZMS "FULL_LU_0_CC_28",'                   00292800
&ZMS                  SETC  '&ZMS "FULL_LU_CC_36",'                     00292900
&ZMS                  SETC  '&ZMS OR "OTHER".'                          00293000
                      MNOTE 8,' &ZMS '                                  00293100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00293200
.ZG107G               ANOP  ,                                           00293300
.*----------------------------------------------------------------***   00293400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00293500
                      AIF   (N'&RETCODE LE 1).ZG110A  CK NUM            00293600
&ZMS                  SETC  '"RETCODE='         *KPOSA* MNOTE           00293700
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00293800
&ZMS                  SETC  '&ZMS "RETCODE"'                            00293900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00294000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00294100
.ZG110A               ANOP  ,                                           00294200
.*-------------------------------------------------------------------   00294300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00294400
                      AIF   (K'&RETCODE(1) LE 0).ZG110C  NO PARM        00294500
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      00294600
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           00294700
                      AIF   (N'&RETCODE GT 1).ZG110C                    00294800
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   00294900
.ZG110C               ANOP  ,                                           00295000
.*-------------------------------------------------------------------   00295100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00295200
                      AIF   (K'&ZXRETCODE LE 0).ZG110R  NOT I/O         00295300
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG110R            00295400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00295500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG110P               00295600
                      AIF   (K'&ZCGPR GT 2).ZG110Q                      00295700
                      AIF   ('&ZCGPR' EQ '0').ZG110Q                    00295800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00295900
                      AIF   (T'&ZCGPR NE 'N').ZG110Q  INVALID REG NAME  00296000
.ZG110P               ANOP  ,                                           00296100
                      AIF   (T'&ZCGPR NE 'N').ZG110R  NON NUMERIC       00296200
                      AIF   ('&ZCGPR' LT '2').ZG110Q                    00296300
                      AIF   ('&ZCGPR' LE '12').ZG110R                   00296400
.ZG110Q               ANOP  ,                                           00296500
&ZMS                  SETC  '"RETCODE='         *KGPRA* MNOTE           00296600
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00296700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00296800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00296900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00297000
.ZG110R               ANOP  ,                                           00297100
.*----------------------------------------------------------------***   00297200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00297300
                      AIF   (N'&RSNCODE LE 1).ZG113A  CK NUM            00297400
&ZMS                  SETC  '"RSNCODE='         *KPOSA* MNOTE           00297500
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            00297600
&ZMS                  SETC  '&ZMS "RSNCODE"'                            00297700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00297800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00297900
.ZG113A               ANOP  ,                                           00298000
.*-------------------------------------------------------------------   00298100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00298200
                      AIF   (K'&RSNCODE(1) LE 0).ZG113C  NO PARM        00298300
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      00298400
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           00298500
                      AIF   (N'&RSNCODE GT 1).ZG113C                    00298600
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   00298700
.ZG113C               ANOP  ,                                           00298800
.*-------------------------------------------------------------------   00298900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00299000
                      AIF   (K'&ZXRSNCODE LE 0).ZG113R  NOT I/O         00299100
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG113R            00299200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00299300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG113P               00299400
                      AIF   (K'&ZCGPR GT 2).ZG113Q                      00299500
                      AIF   ('&ZCGPR' EQ '0').ZG113Q                    00299600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00299700
                      AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME  00299800
.ZG113P               ANOP  ,                                           00299900
                      AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC       00300000
                      AIF   ('&ZCGPR' LT '2').ZG113Q                    00300100
                      AIF   ('&ZCGPR' LE '12').ZG113R                   00300200
.ZG113Q               ANOP  ,                                           00300300
&ZMS                  SETC  '"RSNCODE='         *KGPRA* MNOTE           00300400
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            00300500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00300600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00300700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00300800
.ZG113R               ANOP  ,                                           00300900
.******************************************************************     00301000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00301100
.******************************************************************     00301200
                      ACTR  10000                                       00301300
.*----------------------------------------------------------------***   00301400
.***AH.P02 EXTRA POSITIONALS                                            00301500
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        00301600
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        00301700
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    00301800
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     00301900
.ZGLISTX1             ANOP  ,                                           00302000
&ZCVAL                SETC  ''          ERROR FIELD                     00302100
&ZAWRK                SETA  0           POSITIONAL NUMBER               00302200
.ZGLIST2              ANOP  ,                                           00302300
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 00302400
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        00302500
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             00302600
                      AGO   .ZGLIST2                                    00302700
.*                                                                      00302800
.ZGLIST3              ANOP  ,                                           00302900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          00303000
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE    00303100
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             00303200
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      00303300
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              00303400
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      00303500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00303600
.ZGLISTX              ANOP  ,                                           00303700
&ZASYSLNDX            SETA  0                                           00303800
.*******************************************************************    00303900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00304000
.*******************************************************************    00304100
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        00304200
.*******************************************************************    00304300
.***AE.01  START OF IWMMINIT MACRO CODE                                 00304400
.*******************************************************************    00304500
                      LCLC  &M0M0001                 NAME               00304600
&M0M0001              SETC  '&XLABEL'                SET NAME           00304700
                      AIF   (K'&XLABEL NE 0).XLAB2                      00304800
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       00304900
.*                                                                      00305000
.XLAB2                ANOP  ,                                           00305100
&M0M0001 DS    0H                             IWMMINIT-1                00305200
.*******************************************************************    00305300
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00305400
.*******************************************************************    00305500
              PUSH  PRINT                                               00305600
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  00305700
                      PRINT OFF         ++ PR01                         00305800
                      AGO   .ZPRNTXX                                    00305900
.ZPRINTX              PRINT ON                                          00306000
.ZPRNTXX              ANOP  ,                                           00306100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00306200
         LCLC  &T1,&T2                                                  00306300
&T1      SETC  '&MONTKN'                                                00306400
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00306500
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00306600
&T1      SETC  '0(&T1.)'                                                00306700
.MONTKNRS  ANOP                                                         00306800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00306900
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00307000
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00307100
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00307200
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00307300
         B     END&SYSNDX              BRANCH TO END LABEL              00307400
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00307500
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00307600
         BE    MONENVOK&SYSNDX         BRANCH WHEN MON ENV PASSES       00307700
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00307800
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00307900
         B     END&SYSNDX              BRANCH TO END LABEL              00308000
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00308100
         USING PB,14                                                    00308200
         AIF   ('&MODE' NE 'RESET').ENDRESET                            00308300
         LH    15,PB_NEW_LENGTH                               @OW26040  00308400
         LTR   15,15                                          @OW26040  00308500
         BZ    NOLENGTH&SYSNDX                                @OW26040  00308600
         BCTR  15,0                                           @OW26040  00308700
         EX    15,A&SYSNDX                                    @OW26040  00308800
         B     ENDXC&SYSNDX                                   @OW26040  00308900
NOLENGTH&SYSNDX DS    0H        BRANCH LABEL FOR PRE-APAR PB  @OW26040  00309000
         CLI   PB_VERSION,1                                   @OW26040  00309100
         BE    VERSION1&SYSNDX                                @OW26040  00309200
         CLI   PB_VERSION,2                                   @OW26040  00309300
         BNE   NOVERSIO&SYSNDX                                @OW26040  00309400
         B     VERSION2&SYSNDX                                @OW26040  00309500
VERSION1&SYSNDX DS    0H        BRANCH LABEL FOR VERSION 1 PB @OW26040  00309600
         XC    PB_CLEAR_FLD(168),PB_CLEAR_FLD                 @OW26040  00309700
         B     ENDXC&SYSNDX                                   @OW26040  00309800
VERSION2&SYSNDX DS    0H        BRANCH LABEL FOR VERSION 2 PB @OW26040  00309900
         XC    PB_CLEAR_FLD(192),PB_CLEAR_FLD                 @OW26040  00310000
         B     ENDXC&SYSNDX                                   @OW26040  00310100
NOVERSIO&SYSNDX DS    0H        BRANCH LABEL FOR UNKNOWN PB   @OW26040  00310200
.*       ABEND X'15F',DUMP,,SYSTEM,REASON=352                 @OW26040  00310300
         ABEND X'15F',DUMP,,SYSTEM,REASON=352                 @OW26040  00310400
         B     ENDXC&SYSNDX                                   @OW26040  00310500
A&SYSNDX XC    PB_CLEAR_FLD(0),PB_CLEAR_FLD                   @OW26040  00310600
ENDXC&SYSNDX    DS    0H                                      @OW26040  00310700
         MVI   PB_WORK_ATTRIBUTES,C' '                                  00310800
         MVC   PB_WORK_ATTRIBUTES+1(51),PB_WORK_ATTRIBUTES              00310900
.ENDRESET      ANOP                                                     00311000
.*                                                                      00311100
.*                                                                      00311200
.*       OWNER_TOKEN PROCESSING                                         00311300
.*                                                                      00311400
         AIF   ('&XOWNER_TOKEN' NE 'NO_OWNER_TOKEN').OWNER_TOKEN        00311500
         AGO   .ENDOWNER_TOKEN                                          00311600
.*                                                                      00311700
.OWNER_TOKEN ANOP                                                       00311800
&T1      SETC  '&OWNER_TOKEN'                                           00311900
         AIF   ('&OWNER_TOKEN'(1,1) NE '(').OWNER_TOKENRS               00312000
&T1      SETC  '&OWNER_TOKEN'(2,K'&OWNER_TOKEN-2)                       00312100
&T1      SETC  '0(&T1.)'                                                00312200
.OWNER_TOKENRS ANOP                                                     00312300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00312400
         L     1,&T1                   COPY OWNER_TOKEN VIA L,ST        00312500
         ST    1,PB_OWNER_TKN                                           00312600
.ENDOWNER_TOKEN ANOP                                                    00312700
.*                                                                      00312800
.*                                                                      00312900
.*       OWNER_DATA PROCESSING                                          00313000
.*                                                                      00313100
         AIF   ('&XOWNER_DATA' NE 'NO_OWNER_DATA').OWNER_DATA           00313200
         AGO   .ENDOWNER_DATA                                           00313300
.*                                                                      00313400
.OWNER_DATA ANOP                                                        00313500
&T1      SETC  '&OWNER_DATA'                                            00313600
         AIF   ('&OWNER_DATA'(1,1) NE '(').OWNER_DATARS                 00313700
&T1      SETC  '&OWNER_DATA'(2,K'&OWNER_DATA-2)                         00313800
&T1      SETC  '0(&T1.)'                                                00313900
.OWNER_DATARS ANOP                                                      00314000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00314100
         L     1,&T1                   COPY OWNER_DATA VIA L,ST         00314200
         ST    1,PB_OWNER_DATA                                          00314300
.ENDOWNER_DATA ANOP                                                     00314400
*                                                                       00314500
.*                                                                      00314600
.*       DURATION PROCESSING                                            00314700
.*                                                                      00314800
         AIF   ('&XDURATION' EQ 'PREV_VALUE').ENDDURINFO                00314900
         AIF   ('&MODE' EQ 'RESET').ENDDURRETAIN                        00315000
         NI    PB_MONENV_INFO,X'FF'-PB_DURATION        RESET PREV DUR   00315100
.ENDDURRETAIN ANOP                                                      00315200
         OI    PB_MONENV_INFO,PB_DURATION_&XDURATION   RECORD DURATION  00315300
.ENDDURINFO   ANOP                                                      00315400
.*                                                                      00315500
*                                                                       00315600
         AIF   ('&XDISPTYPE' EQ 'SAVEDTYPE').ENDDISPINFO                00315700
         AIF   ('&XDISPTYPE' NE 'TCB').ENDTCB                           00315800
         AIF   ('&XTCB' EQ 'NO_TCB').NOTCB                              00315900
&T1      SETC  '&TCB'                                                   00316000
         AIF   ('&TCB'(1,1) NE '(').TCBRS                               00316100
&T1      SETC  '&TCB'(2,K'&TCB-2)                                       00316200
         ST    &T1,PB_DU                                                00316300
         AGO   .ENDDISPTYPE                                             00316400
.TCBRS ANOP                                                             00316500
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00316600
         LA    0,&T1                   COPY TCB ADDRESS VIA LA,ST       00316700
         ST    0,PB_DU                                                  00316800
         AGO   .ENDDISPTYPE                                             00316900
.NOTCB     ANOP                                                         00317000
         AIF   ('&MODE' EQ 'RESET').ENDDISPTYPE                         00317100
         LA    0,0                                                      00317200
         ST    0,PB_DU                                                  00317300
         AGO   .ENDDISPTYPE                                             00317400
.ENDTCB    ANOP                                                         00317500
         LA    0,PB_DU_SRB             INDICATE SRB                     00317600
         ST    0,PB_DU                                                  00317700
.ENDDISPTYPE   ANOP                                                     00317800
*                                                                       00317900
         L     1,X'224'(0,0)              COPY PSAAOLD VIA L,ST         00318000
         ST    1,PB_DU_ASCB                                             00318100
.ENDDISPINFO   ANOP                                                     00318200
.*                                                                      00318300
*                                                                       00318400
.*                                                                      00318500
         AIF   ('&XSERVCLS' NE 'NO_SERVCLS').SERVCLS                    00318600
         AGO   .ENDSERVCLS                                              00318700
.*                                                                      00318800
.SERVCLS    ANOP                                                        00318900
&T1      SETC  '&SERVCLS'                                               00319000
         AIF   ('&SERVCLS'(1,1) NE '(').SERVCLSRS                       00319100
&T1      SETC  '&SERVCLS'(2,K'&SERVCLS-2)                               00319200
&T1      SETC  '0(&T1.)'                                                00319300
.SERVCLSRS ANOP                                                         00319400
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00319500
         L     1,&T1                   COPY SERVCLS VIA L,ST            00319600
         ST    1,PB_SC_TKN                                              00319700
.ENDSERVCLS    ANOP                                                     00319800
*                                                                       00319900
.*                                                                      00320000
         AIF   ('&XTTRACETOKEN' NE 'NO_TTRACETOKEN').TTRACETOKEN        00320100
         AGO   .ENDTTRACETOKEN                                          00320200
.*                                                                      00320300
.TTRACETOKEN ANOP                                                       00320400
&T1      SETC  '&TTRACETOKEN'                                           00320500
         AIF   ('&TTRACETOKEN'(1,1) NE '(').TTRACETOKENRS               00320600
&T1      SETC  '&TTRACETOKEN'(2,K'&TTRACETOKEN-2)                       00320700
&T1      SETC  '0(&T1.)'                                                00320800
.TTRACETOKENRS ANOP                                                     00320900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00321000
         MVC   PB_TRANS_TTOKEN(32),&T1    COPY TTRACETOKEN              00321100
.ENDTTRACETOKEN ANOP                                                    00321200
*                                                                       00321300
         AIF   ('&XTRXNAME' NE 'NO_TRXNAME').TRXNAME                    00321400
         AGO   .ENDTRXNAME                                              00321500
.*                                                                      00321600
.TRXNAME    ANOP                                                        00321700
&T1      SETC  '&TRXNAME'                                               00321800
         AIF   ('&TRXNAME'(1,1) NE '(').TRXNAMERS                       00321900
&T1      SETC  '&TRXNAME'(2,K'&TRXNAME-2)                               00322000
&T1      SETC  '0(&T1.)'                                                00322100
.TRXNAMERS ANOP                                                         00322200
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00322300
         MVC   PB_TRXNAME(8),&T1          COPY TRXNAME                  00322400
.ENDTRXNAME    ANOP                                                     00322500
*                                                                       00322600
         AIF   ('&XUSERID' NE 'NO_USERID').USERID                       00322700
         AGO   .ENDUSERID                                               00322800
.*                                                                      00322900
.USERID     ANOP                                                        00323000
&T1      SETC  '&USERID'                                                00323100
         AIF   ('&USERID'(1,1) NE '(').USERIDRS                         00323200
&T1      SETC  '&USERID'(2,K'&USERID-2)                                 00323300
&T1      SETC  '0(&T1.)'                                                00323400
.USERIDRS ANOP                                                          00323500
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00323600
         MVC   PB_USERID(8),&T1           COPY USERID                   00323700
.ENDUSERID     ANOP                                                     00323800
*                                                                       00323900
         AIF   ('&XTRXCLASS' NE 'NO_TRXCLASS').TRXCLASS                 00324000
         AGO   .ENDTRXCLASS                                             00324100
.*                                                                      00324200
.TRXCLASS   ANOP                                                        00324300
&T1      SETC  '&TRXCLASS'                                              00324400
         AIF   ('&TRXCLASS'(1,1) NE '(').TRXCLASSRS                     00324500
&T1      SETC  '&TRXCLASS'(2,K'&TRXCLASS-2)                             00324600
&T1      SETC  '0(&T1.)'                                                00324700
.TRXCLASSRS ANOP                                                        00324800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00324900
         MVC   PB_TRXCLASS(8),&T1         COPY TRXCLASS                 00325000
.ENDTRXCLASS   ANOP                                                     00325100
*                                                                       00325200
         AIF   ('&XSOURCELU' NE 'NO_SOURCELU').SOURCELU                 00325300
         AGO   .ENDSOURCELU                                             00325400
.*                                                                      00325500
.SOURCELU   ANOP                                                        00325600
.*                                                                      00325700
&T1      SETC  '&SOURCELU'                                              00325800
         AIF   ('&SOURCELU'(1,1) NE '(').SOURCELURS                     00325900
&T1      SETC  '&SOURCELU'(2,K'&SOURCELU-2)                             00326000
&T1      SETC  '0(&T1.)'                                                00326100
         MVC   PB_SOURCELU(17),&T1         COPY SOURCELU                00326200
         AGO   .ENDSOURCELU                                             00326300
.SOURCELURS ANOP                                                        00326400
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00326500
.****************************************                               00326600
         LA    1,L'&T1      LOAD LENGTH OF SOURCELU NAME INTO GPR 1     00326700
         LA    0,17         LOAD MAXIMUM LENGTH OF LU NAME INTO GPR 0   00326800
         CR    1,0                                                      00326900
         BNL   IWMMINIT_LU17_&SYSNDX    BR ON SOURCELU NAME >= 17 BYTES 00327000
* SOURCELU NAME <= 16 BYTES                                             00327100
.*                                                                      00327200
         AIF   ('&MODE' EQ 'RESET').ENDBLANKLU                          00327300
.* MODE(RETAIN) REQUIRES BLANKING OUT SOURCELU AREA                     00327400
         MVI   PB_SOURCELU,C' '         BLANK OUT THE FIELD             00327500
         MVC   PB_SOURCELU+1(16),PB_SOURCELU                            00327600
.ENDBLANKLU    ANOP                                                     00327700
.*                                                                      00327800
.* MODE(RETAIN|RESET) CODE GENERATION                                   00327900
.*                                                                      00328000
         MVC   PB_SOURCELU(L'&T1),&T1         COPY SOURCELU             00328100
         B     IWMMINIT_ENDSOURCELU_&SYSNDX                             00328200
IWMMINIT_LU17_&SYSNDX DS 0H                                             00328300
         MVC   PB_SOURCELU(17),&T1         COPY 17 BYTES FROM SOURCELU  00328400
IWMMINIT_ENDSOURCELU_&SYSNDX DS 0H                                      00328500
.****************************************                               00328600
.*                                                                      00328700
.ENDSOURCELU   ANOP                                                     00328800
.*                                                                      00328900
*                                                                       00329000
         AIF   ('&XLU62TKN' NE 'NO_LU62TKN').LU62TKN                    00329100
         AGO   .ENDLU62TKN                                              00329200
.*                                                                      00329300
.LU62TKN    ANOP                                                        00329400
&T1      SETC  '&LU62TKN'                                               00329500
         AIF   ('&LU62TKN'(1,1) NE '(').LU62TKNRS                       00329600
&T1      SETC  '&LU62TKN'(2,K'&LU62TKN-2)                               00329700
&T1      SETC  '0(&T1.)'                                                00329800
.LU62TKNRS ANOP                                                         00329900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00330000
         AIF   ('&XLU62TKN_FMT' EQ 'OTHER').OTHER_LU62TKN               00330100
&T2      SETC  '&LU62TKN_FMT'(K'&LU62TKN_FMT-1,2)                       00330200
.* &T2 IS THE LAST 2 CHARACTERS OF LU62TKN_FMT = LENGTH OF LU62TKN      00330300
         MVC   PB_LU62TKN(&T2),&T1          COPY LU62TKN                00330400
         MVI   PB_LU62TKN_FMT,PB_LU62FMT_&LU62TKN_FMT                   00330500
         AGO   .ENDLU62TKN                                              00330600
.*                                                                      00330700
.OTHER_LU62TKN    ANOP                                                  00330800
&T2      SETC  '&LU62TKN_LEN'                                           00330900
         AIF   ('&LU62TKN_LEN'(1,1) NE '(').LU62TKNLENRS                00331000
&T2      SETC  '&LU62TKN_LEN'(2,K'&LU62TKN_LEN-2)                       00331100
&T2      SETC  '0(&T2.)'                                                00331200
.LU62TKNLENRS ANOP                                                      00331300
.* &T2 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00331400
         SLR   1,1    CLEAR GPR 1                                       00331500
         ICM   1,1,&T2 INSERT LENGTH FROM LU62TKN_LEN (1-36 DECIMAL OK) 00331600
         BNZ   IWMMINIT_TEST_HIGH&SYSNDX                                00331700
         LA    0,IWMRSNCODEBADLU62TKNLEN SET RSNCODE = BAD LU62 TKN LEN 00331800
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RC          00331900
         B     END&SYSNDX              BRANCH TO END LABEL              00332000
IWMMINIT_TEST_HIGH&SYSNDX   DS  0H                                      00332100
         LA    0,PB_MAX_LU62TKN_LEN                                     00332200
         CR    1,0                                                      00332300
         BNH   IWMMINIT_COPY_LU62TKN&SYSNDX                             00332400
         LA    0,IWMRSNCODEBADLU62TKNLEN SET RSNCODE = BAD LU62 TKN LEN 00332500
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RC          00332600
         B     END&SYSNDX              BRANCH TO END LABEL              00332700
IWMMINIT_MVC&SYSNDX MVC PB_LU62TKN(0),&LU62TKN     COPY LU62TKN         00332800
IWMMINIT_COPY_LU62TKN&SYSNDX   BCTR 1,0                                 00332900
         EX 1,IWMMINIT_MVC&SYSNDX                                       00333000
.ENDLU62TKN    ANOP                                                     00333100
*                                                                       00333200
*                                                                       00333300
         AIF   ('&ARRIVALTIMEP' EQ 'CURRENT').STCKLOGIC                 00333400
         AIF   ('&ARRIVALTIMEP' NE 'YES').ENDARRIVALTIMEP               00333500
&T1      SETC  '&ARRIVALTIME'                                           00333600
         AIF   ('&ARRIVALTIME'(1,1) NE '(').ARRIVALTIMERS               00333700
&T1      SETC  '&ARRIVALTIME'(2,K'&ARRIVALTIME-2)                       00333800
&T1      SETC  '0(&T1.)'                                                00333900
.ARRIVALTIMERS ANOP                                                     00334000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00334100
         MVC   PB_ARRTIME(8),&T1                                        00334200
         AGO   .ENDARRIVALTIMEP                                         00334300
.STCKLOGIC       ANOP                                                   00334400
         STCK  PB_ARRTIME              SAVE TOD                         00334500
         BC    8,IWMMINIT_ARRTIMEOK&SYSNDX BRANCH WHEN STCK CC=0        00334600
         LA    0,IWMRSNCODENOARRTIME   SET REASONCODE                   00334700
         LA    15,IWMRETCODEENVERROR   SET RC = IWMRETCODEENVERROR      00334800
         B     IWMMINIT_FINIS&SYSNDX   BRANCH TO THE END                00334900
IWMMINIT_ARRTIMEOK&SYSNDX DS 0H           BRANCH LABEL FOR STCK CC=0    00335000
.ENDARRIVALTIMEP ANOP                                                   00335100
*                                                                       00335200
         AIF   ('&EXSTARTTIMEP' EQ 'NO').ENDEXSTARTTIMEP                00335300
         AIF   ('&EXSTARTTIMEP' EQ 'CURRENT').STCKLOGIC2                00335400
&T1      SETC  '&EXSTARTTIME'                                           00335500
         AIF   ('&EXSTARTTIME'(1,1) NE '(').EXSTARTTIMERS               00335600
&T1      SETC  '&EXSTARTTIME'(2,K'&EXSTARTTIME-2)                       00335700
&T1      SETC  '0(&T1.)'                                                00335800
.EXSTARTTIMERS ANOP                                                     00335900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00336000
         MVC   PB_EXSTARTTIME(8),&T1                                    00336100
         AGO   .ENDEXSTARTTIMEP                                         00336200
.STCKLOGIC2      ANOP                                                   00336300
         STCK  PB_EXSTARTTIME          SAVE TOD                         00336400
         BC    8,IWMMINIT_EXTIMEOK&SYSNDX BRANCH WHEN STCK CC=0         00336500
         LA    0,IWMRSNCODENOEXTIME    SET REASONCODE                   00336600
         LA    15,IWMRETCODEENVERROR   SET RC = IWMRETCODEENVERROR      00336700
         B     IWMMINIT_FINIS&SYSNDX   BRANCH TO THE END                00336800
IWMMINIT_EXTIMEOK&SYSNDX DS 0H           BRANCH LABEL FOR STCK CC=0     00336900
.ENDEXSTARTTIMEP ANOP                                                   00337000
*                                                                       00337100
         LA    15,IWMRETCODEOK           SET RETURN CODE = OK           00337200
.*                                                                      00337300
&T1      SETC  'PB_INIT'                                                00337400
         AIF   ('&SCOPE' EQ 'SINGLE').ENDSHARED                         00337500
.*     SCOPE(SHARED)                                                    00337600
&T1      SETC  '&T1.+PB_SCOPE_SHARED'                                   00337700
         AGO   .ENDSCOPE                                                00337800
.ENDSHARED     ANOP                                                     00337900
.*     SCOPE(SINGLE)                                                    00338000
         AIF   ('&MODE' EQ 'RESET').ENDSCOPE                            00338100
         NI    PB_WORKDEF,X'FF'-PB_SCOPE_SHARED                         00338200
.ENDSCOPE      ANOP                                                     00338300
         AIF   ('&CONTINUEP' EQ 'NO').ENDCONT                           00338400
&T1      SETC  '&T1.+PB_FROM_&XFROM'                                    00338500
.ENDCONT       ANOP                                                     00338600
         OI    PB_WORKDEF,&T1          RECORD STATUS                    00338700
         AIF   ('&MODE' NE 'RESET').ENDRESET2                           00338800
         MVI   PB_STATE,PB_STATE_ACTIVE    INDICATE STATE IS NOW ACTIVE 00338900
.ENDRESET2     ANOP                                                     00339000
IWMMINIT_FINIS&SYSNDX DS 0H            BRANCH LABEL FOR STCK NON-0 CC   00339100
         DROP  14                                                       00339200
END&SYSNDX DS    0H                    END LABEL                        00339300
.*******************************************************************    00339400
.***        RETURN CODE PROCESSING                                      00339500
.*******************************************************************    00339600
         AIF   (N'&RETCODE LE 0).IWMMINIT_ENDRC_EXP                     00339700
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMINIT_RC_REG                00339800
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMINIT_ENDRC_EXP              00339900
         AIF   ('&XRETCODE' EQ 'REG15').IWMMINIT_ENDRC_EXP              00340000
         AIF   ('&XRETCODE' EQ 'R15').IWMMINIT_ENDRC_EXP                00340100
         AIF   ('&XRETCODE' EQ '15').IWMMINIT_ENDRC_EXP                 00340200
         ST    15,&XRETCODE                                             00340300
            AGO  .IWMMINIT_ENDRC_EXP                                    00340400
.*                                                                      00340500
.IWMMINIT_RC_REG      ANOP  ,                                           00340600
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00340700
         AIF   ('&T1' EQ 'GPR15').IWMMINIT_ENDRC_EXP                    00340800
         AIF   ('&T1' EQ 'REG15').IWMMINIT_ENDRC_EXP                    00340900
         AIF   ('&T1' EQ 'R15').IWMMINIT_ENDRC_EXP                      00341000
         AIF   ('&T1' EQ '15').IWMMINIT_ENDRC_EXP                       00341100
         LR    &T1,15                                                   00341200
.IWMMINIT_ENDRC_EXP   ANOP  ,                                           00341300
.*******************************************************************    00341400
.***        REASON CODE PROCESSING                                      00341500
.*******************************************************************    00341600
         AIF   (N'&RSNCODE LE 0).IWMMINIT_ENDRSN_EXP                    00341700
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMINIT_RSN_REG               00341800
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMINIT_ENDRSN_EXP              00341900
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMINIT_ENDRSN_EXP             00342000
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMINIT_ENDRSN_EXP              00342100
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMINIT_ENDRSN_EXP             00342200
         AIF   ('&XRSNCODE' EQ 'R0').IWMMINIT_ENDRSN_EXP                00342300
         AIF   ('&XRSNCODE' EQ '0').IWMMINIT_ENDRSN_EXP                 00342400
         AIF   ('&XRSNCODE' EQ '00').IWMMINIT_ENDRSN_EXP                00342500
         ST    0,&XRSNCODE                                              00342600
         AGO   .IWMMINIT_ENDRSN_EXP                                     00342700
.*                                                                      00342800
.IWMMINIT_RSN_REG     ANOP  ,                                           00342900
&T1      SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                             00343000
         AIF   ('&ZCGPR' EQ 'GPR0').IWMMINIT_ENDRSN_EXP                 00343100
         AIF   ('&ZCGPR' EQ 'GPR00').IWMMINIT_ENDRSN_EXP                00343200
         AIF   ('&ZCGPR' EQ 'REG0').IWMMINIT_ENDRSN_EXP                 00343300
         AIF   ('&ZCGPR' EQ 'REG00').IWMMINIT_ENDRSN_EXP                00343400
         AIF   ('&ZCGPR' EQ 'R0').IWMMINIT_ENDRSN_EXP                   00343500
         AIF   ('&ZCGPR' EQ '0').IWMMINIT_ENDRSN_EXP                    00343600
         AIF   ('&ZCGPR' EQ '00').IWMMINIT_ENDRSN_EXP                   00343700
         LR    &T1,0                                                    00343800
.IWMMINIT_ENDRSN_EXP  ANOP  ,                                           00343900
.*******************************************************************    00344000
&ZIWMMINIT            SETC  'YES'          SET IWMMINIT USED            00344100
         POP   PRINT                                                    00344200
*                                            IWMMINIT END               00344300
         SPACE 1                                                        00344400
         MEXIT                                                          00344500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00344600
.********************************************************************   00344700
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00344800
.********************************************************************   00344900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00345000
                      LCLA  &ZOPN1         INVOCATION INDEX             00345100
                      LCLC  &ZOPL(4095)    LABEL                        00345200
                      LCLC  &ZOPO(4095)    OPERATION                    00345300
                      LCLC  &ZOPV(4095)    VALUE                        00345400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00345500
.*                                                                      00345600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00345700
.*******************************************************************    00345800
.***AO.X02  RETURN CODE PROCESSING                                      00345900
.*******************************************************************    00346000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00346100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00346200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00346300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00346400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00346500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00346600
&ZOPN                 SETA  &ZOPN+1                                     00346700
&ZOPL(&ZOPN)          SETC  ' '                                         00346800
&ZOPO(&ZOPN)          SETC  'ST'                                        00346900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00347000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00347100
                      AGO   .ZMRETX                                     00347200
.*                                                                      00347300
.ZMRET2               ANOP  ,                                           00347400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00347500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00347600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00347700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00347800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00347900
&ZOPN                 SETA  &ZOPN+1                                     00348000
&ZOPL(&ZOPN)          SETC  ' '                                         00348100
&ZOPO(&ZOPN)          SETC  'LR'                                        00348200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00348300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00348400
.ZMRETX               ANOP  ,                                           00348500
.*******************************************************************    00348600
.***AO.X03  REASON CODE PROCESSING                                      00348700
.*******************************************************************    00348800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00348900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00349000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00349100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00349200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00349300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00349400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00349500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00349600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00349700
&ZOPN                 SETA  &ZOPN+1                                     00349800
&ZOPL(&ZOPN)          SETC  ' '                                         00349900
&ZOPO(&ZOPN)          SETC  'ST'                                        00350000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00350100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00350200
                      AGO   .ZMRSNX                                     00350300
.*                                                                      00350400
.ZMRSN2               ANOP  ,                                           00350500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00350600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00350700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00350800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00350900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00351000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00351100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00351200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00351300
&ZOPN                 SETA  &ZOPN+1                                     00351400
&ZOPL(&ZOPN)          SETC  ' '                                         00351500
&ZOPO(&ZOPN)          SETC  'LR'                                        00351600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00351700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00351800
.ZMRSNX               ANOP  ,                                           00351900
.*******************************************************************    00352000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00352100
.*******************************************************************    00352200
                      ACTR  10000                                       00352300
.*                                                                      00352400
                      LCLA  &ZLC           COLUMN POSITION              00352500
                      LCLA  &ZOPX          LIST TABLE INDEX             00352600
                      LCLC  &ZLL           LABEL                        00352700
                      LCLC  &ZLOP          OPERATION                    00352800
                      LCLC  &ZLV           VALUE                        00352900
                      LCLC  &ZLD           DESCRIPTION                  00353000
.*                                                                      00353100
&ZOPX                 SETA  1                                           00353200
.*******************************************************************    00353300
.***AP.X01  FORMAT GENERATED CODE                                       00353400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00353500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00353600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00353700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00353800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00353900
                      AIF   (K'&ZLD LE 0).ZL51                          00354000
&ZLC                  SETA  35             COMMENT COLUMN               00354100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00354200
&ZLC                  SETA  33             COMMENT COLUMN               00354300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00354400
&ZLV                  SETC  '&ZLV'.' '                                  00354500
                      AGO   .ZL31                                       00354600
.*                                                                      00354700
.ZL41                 ANOP  ,                                           00354800
&ZLV                  SETC  '&ZLV'.' '                                  00354900
.ZL51                 ANOP  ,                                           00355000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00355100
.*                                                                      00355200
&ZLL     &ZLOP &ZLV                                                     00355300
.*                                                                      00355400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00355500
                      AGO   .ZL21          CONTINUE LOOPING             00355600
.*                                                                      00355700
.ZLX1                 ANOP  ,                                           00355800
.*******************************************************************    00355900
.***AP.X02  END OF IWMMINIT MACRO                                       00356000
&ZIWMMINIT            SETC  'YES'          SET IWMMINIT USED            00356100
         POP   PRINT                                                    00356200
*                                            IWMMINIT-1                 00356300
         SPACE 1                                                        00356400
.ZLX2                 ANOP  ,                                           00356500
         MEND                                                           00356600
**********************************************************************/ 00356700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00356800
*%IWMMINIT: MACRO KEYS(MONTKN,MODE,DURATION,DISPTYPE,TCB,ARRIVALTIMEP,  00356900
*                 ARRIVALTIME,CONTINUEP,FROM,OWNER_TOKEN,OWNER_DATA,    00357000
*                 EXSTARTTIMEP,EXSTARTTIME,SCOPE,SERVCLS,TRXNAME,       00357100
*                 USERID,TRXCLASS,TTRACETOKEN,SOURCELU,LU62TKN,         00357200
*                 LU62TKN_FMT,LU62TKN_LEN,RETCODE,RSNCODE,PLISTVER);    00357300
*  ANS('?'||MACLABEL||' '||'IWMMINIP '||MACLIST||                       00357400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00357500
*%END IWMMINIT;                                                         00357600
