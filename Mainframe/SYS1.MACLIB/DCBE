*%/*    Start of comment to bypass BAL definition in PL/X invocatio@l1A 00025000
         MACRO                                                          00050000
&NAME    DCBE  &EODAD=0,   End of data rtn addr, may point above 16MB  X00100000
               &GETSIZE=NO, OPEN should return size of data set        x00150000
               &MULTSDN=0, Multiplier of system-suggested NCP          X00200000
               &MULTACC=0, Multiplier of default accumulation value    X00250000
               &NOVER=NO,  YES-OPEN not to verify stripes              X00300000
               &PASTEOD=NO, Continue reading past apparent end of data X00400000
               &RMODE31=NONE,  Whether OPEN may get buffers above 16MB X00450000
               &SYNAD=0,   I/O error routine, synchronous to user      X00483300
               &BLKSIZE=   Blocksize                               @L2A 00516600
.* Function - Create data control block extension (DCBE) for SAM.       00550000
.*            It can reside above or below the 16MB line.               00600000
.* Parameters - See above.                                              00650000
.* Processor - Assembler H Version 2                                    00700000
.*PROPRIETARY V3 STATEMENT                                              00706200
.*LICENSED MATERIALS - PROPERTY OF IBM                                  00712400
.*"RESTRICTED MATERIALS OF IBM"                                         00718600
.*5694-A01                                                              00726200
.*(C) COPYRIGHT 1993,2000  IBM CORP.                                    00733800
.*END PROPRIETARY V3 STATEMENT                                          00741600
.* Changes -                                                            00750000
.* L0=STRIPING,JDZ1110,920224,SJPLWER: SAM Striping and 31-bit SAM @L0A 00800000
.* L1=xxxxxxxx,JDZ1110,930930,SJPLMET: PLX support                 @L1A 00825000
.* L2=GT32K,HDZ11F0,990128,SJPLRK:  BLKSIZE keyword                @L2A 00837500
.*                                                                      00850000
         LCLB  &RM,&PAST,&A2,&NOV,&GS,&BS,&A6,&A7   DCBEFLG2 flgs  @L2C 00900000
         LCLB  &ERROR         Error found, suppress macro expansion     00950000
         LCLC  &RETURN        Subroutine return symbol                  01000000
         LCLC  &KEYWORD       Name of keyword in error                  01050000
         LCLC  &TEMP          Scratch variable to prettify expansion    01100000
.*                                                                      01150000
.* Check for all possible syntax errors before starting macro expansion 01200000
         AIF   ('&EODAD'(1,1) NE '(').CHKGETS                           01250000
         MNOTE 8,'EODAD MUST NOT BE IN PARENTHESES'                     01300000
&ERROR   SETB  1              Suppress expansion                        01350000
.*                                                                      01400000
.CHKGETS ANOP                                                           01450000
&GS      SETB  ('&GETSIZE' EQ 'YES')   Set GETSIZE bit                  01500000
         AIF   ('&GETSIZE' EQ 'YES' OR '&GETSIZE' EQ 'NO').CHKNOV       01550000
         MNOTE 8,'GETSIZE VALUE MUST BE YES OR NO'                      01600000
&ERROR   SETB  1              Suppress expansion                        01650000
.*                                                                      01700000
.CHKNOV  ANOP                                                           01750000
&NOV     SETB  ('&NOVER' EQ 'YES')     Set NOVER bit (no stripe verify) 01800000
         AIF   ('&NOVER' EQ 'YES' OR '&NOVER' EQ 'NO').CHKPAST          01850000
         MNOTE 8,'NOVER VALUE MUST BE YES OR NO'                        01900000
&ERROR   SETB  1              Suppress expansion                        02250000
.*                                                                      02300000
.CHKPAST ANOP                                                           02350000
&PAST    SETB  ('&PASTEOD' EQ 'YES')    Set PASTEOD bit                 02400000
         AIF   ('&PASTEOD' EQ 'YES' OR '&PASTEOD' EQ 'NO').CHKRMODE31   02450000
         MNOTE 8,'PASTEOD VALUE MUST BE YES OR NO'                      02500000
&ERROR   SETB  1              Suppress expansion                        02550000
.*                                                                      02600000
.CHKRMODE31 ANOP                                                        02650000
&RM      SETB  ('&RMODE31' EQ 'BUFF')   Set RMODE bit                   02700000
         AIF   ('&RMODE31' EQ 'BUFF' OR '&RMODE31' EQ 'NONE').CHKSYNAD  02750000
         MNOTE 8,'RMODE31 VALUE MUST BE BUFF OR NONE'                   02800000
&ERROR   SETB  1              Suppress expansion                        02850000
.*                                                                      02900000
.CHKSYNAD AIF  ('&SYNAD'(1,1) NE '(').BLKSI                      @L2C   02950000
         MNOTE 8,'&SYNAD MUST NOT BE IN PARENTHESES'                    03000000
&ERROR   SETB  1              Suppress expansion                        03050000
.*                                                                      03062500
.BLKSI   ANOP                                                      @L2A 03075000
&BS      SETB  (T'&BLKSIZE NE 'O')   BLKSIZE specified             @L2A 03087500
.*                                                                      03100000
.* Start expansion if no error found.                                   03150000
.EXPAND  AIF   (&ERROR).MEND  Branch if any error found                 03200000
.*                                                                      03250000
*   DATA CONTROL BLOCK EXTENSION.                                       03300000
&NAME    DC    0F'0',C'DCBE'  0  Alignment and identifier               03350000
         DC    H'56'          4  Length of DCBE, minimum is 56          03400000
         DC    X'0000'        6  Reserved, should be zero               03450000
         DC    A(0)           8  0 if not open, OPEN points to DCB      03500000
         DC    XL4'0'         C  Disk address of current member         03550000
         DC    B'0'          10  Flags set by system                    03600000
&TEMP    SETC  '&RM&PAST&A2&NOV&GS&BS&A6&A7'  Copy for alignment   @L2C 03650000
         DC    B'&TEMP'      11  Flags set by user                      03700000
         DC    H'0'          12  Number of stripes or zero              03750000
         DC    XL4'0'        14  Reserved                          @L2C 03775000
         DC    XL4'0'        18  Reserved                          @L2A 03791600
         AIF   (&BS).BLKSI2                                        @L2A 03794900
         DC    XL4'0'        1C  Block size                        @L2A 03798200
         AGO   .BLKSI3                                             @L2A 03801500
.BLKSI2  ANOP                                                      @L2A 03804800
         DC    A(1*&BLKSIZE) 1C  Block size                        @L2A 03808200
.BLKSI3  ANOP                                                      @L2A 03816600
         DC    XL8'0'        20  Reserved & number of blocks in ds @L2C 03825000
         DC    A(&EODAD)     28  End of data routine address or 0       03850000
         DC    A(&SYNAD)     2C  I/O error routine (synchronous) or 0   03900000
         DC    XL6'0'        30  Reserved, should be zero               03950000
&TEMP    SETC  '&MULTACC,&MULTSDN'   To preserve comment alignment      04000000
         DC    AL1(&TEMP)    36  MULTACC and MULTSDN                    04050000
         MEXIT                                                          04100000
.MEND    MEND                                                           04150000
**/  DCBE:  MACRO KEYS(END_OF_DATA_NAME,GET_SIZE,              /*@L1A*/ 04200000
*               NCP_MULTIPLIER,ACCUM_MULTIPLIER,               /*@L1A*/ 04250000
*               VERIFY_STRIPES,READ_PAST_EOD,                  /*@L1A*/ 04300000
*               BUFFER_RMODE,SYNAD_NAME,BLOCK_SIZE);           /*@L2C*/ 04350000
*ANS('?' || MACLABEL || ' DCBEP ' || MACKEYS || ';') SKIP      /*@L1A*/ 04400000
*     COL(5);                                                  /*@L1A*/ 04450000
*  %END DCBE;                                                  /*@L1A*/ 04500000
