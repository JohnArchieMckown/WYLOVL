*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMEJOIN                              -05/02/96-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Enclave Join Service                      * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The purpose of this service is to allow the task (TCB)         * 00002200
*      invoking this service to join an Enclave for the purpose of    * 00002300
*      performance management. The scope of this service affects only * 00002400
*      a single TCB at the time the service is invoked.  However any  * 00002500
*      TCBs which are attached by the current TCB subsequently will   * 00002600
*      also become part of the Enclave environment. This inheritance  * 00002700
*      of the Enclave attribute will apply to any further level of    * 00002800
*      newly attached subtasks as well. However subtasks which exist  * 00002900
*      at the time this service is invoked will not become part of    * 00003000
*      the Enclave environment nor will any subtasks which are        * 00003100
*      created subsequently by these non-Enclave TCBs become part of  * 00003200
*      the Enclave environment, unless they explicitly join.          * 00003300
*                                                                     * 00003400
*      Note that a task may only join an Enclave if it is not already * 00003500
*      part of an Enclave. In particular, a subtask which inherited   * 00003600
*      the Enclave attribute from its mother task (which may happen   * 00003700
*      either as a result of the mother task issuing IWMEJOIN or      * 00003800
*      IWMSTBGN) is not allowed to use IWMEJOIN to explicitly join an * 00003900
*      Enclave. This restriction is independent of whether the        * 00004000
*      Enclave specified is the same Enclave as it is in, or a        * 00004100
*      different Enclave from the one it is in.  Such a subtask which * 00004200
*      inherited the Enclave attribute is also not allowed to use     * 00004300
*      IWMELEAV to explicitly leave the Enclave. The subtask would    * 00004400
*      only leave the Enclave upon its own (task) termination or when * 00004500
*      the Enclave is deleted (IWMEDELE).  Also, a task which         * 00004600
*      successfully establishes a Begin environment (IWMSTBGN) may    * 00004700
*      not invoke Enclave Join, nor is the task allowed to use        * 00004800
*      Enclave Leave while this Begin environment exists.             * 00004900
*                                                                     * 00005000
*      Upon successful completion of this service, the CPU time for   * 00005100
*      the TCB (and any subsequently attached subtasks) will be       * 00005200
*      attributed to the Enclave for the purpose of service unit      * 00005300
*      calculations and performance period switches, rather than      * 00005400
*      being attributed to the address space owning the TCB.          * 00005500
*      Management and reporting for the Enclave will include activity * 00005600
*      for the TCB until the TCB either leaves the Enclave or the     * 00005700
*      Enclave is deleted.                                            * 00005800
*                                                                     * 00005900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006000
*                                                                     * 00006100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006200
*                                                                     * 00006300
*01* ENVIRONMENT:                                                     * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*      Minimum authorization: Supervisor state or program key mask    * 00006700
*                        (PKM) allowing keys 0-7.                     * 00006800
*                                                                     * 00006900
*      Dispatchable unit mode: Task mode.                             * 00007000
*                                                                     * 00007100
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00007200
*                                                                     * 00007300
*      AMODE:            31-bit.                                      * 00007400
*                                                                     * 00007500
*      ASC mode:         Primary.                                     * 00007600
*                                                                     * 00007700
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007800
*                                                                     * 00007900
*      Locks:            No locks held.                               * 00008000
*                                                                     * 00008100
*      Control parameters: Control parameters must be in the primary  * 00008200
*                        address space.                               * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*01* PROGRAMMING REQUIREMENTS:                                        * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*    1.  The macro CVT must be included to use this macro.            * 00009000
*                                                                     * 00009100
*    2.  The macro IWMYCON must be included to use this macro.        * 00009200
*                                                                     * 00009300
*    3.  The macro IWMPB must be in the library concatenation, since  * 00009400
*        it is included by IWMYCON.                                   * 00009500
*                                                                     * 00009600
*    4.  Note that the high order halfword of register 0, and the     * 00009700
*        reason code variable when specified, may be non-zero and     * 00009800
*        represents diagnostic data which is NOT part of the external * 00009900
*        interface.  The high order halfword should thus be excluded  * 00010000
*        from comparison with the reason code values described above. * 00010100
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00010200
*        be used for this purpose.                                    * 00010300
*                                                                     * 00010400
*    5.  All character data, unless otherwise specified, is assumed   * 00010500
*        to be left justified and padded with blanks on the right, as * 00010600
*        needed, to occupy the specified number of bytes.             * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*01* RESTRICTIONS:                                                    * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*    1.  This macro may not be used prior to the completion of WLM    * 00011400
*        address space initialization.                                * 00011500
*                                                                     * 00011600
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00011700
*                                                                     * 00011800
*    3.  The caller cannot have an EUT FRR established.               * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*01* INPUT REGISTER INFORMATION:                                      * 00012300
*                                                                     * 00012400
*    Before issuing the IWMEJOIN macro, the caller does not have to   * 00012500
*    place any information into any register unless using it in       * 00012600
*    register notation for a particular parameter, or using it as a   * 00012700
*    base register.                                                   * 00012800
*                                                                     * 00012900
*01* OUTPUT REGISTER INFORMATION:                                     * 00013000
*                                                                     * 00013100
*    When control returns to the caller, the GPRs contain:            * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*    REGISTER  CONTENTS                                               * 00013500
*                                                                     * 00013600
*    0         Reason code if GR15 return code is non-zero            * 00013700
*                                                                     * 00013800
*    1         Used as work registers by the system                   * 00013900
*                                                                     * 00014000
*    2-13      Unchanged                                              * 00014100
*                                                                     * 00014200
*    14        Used as work registers by the system                   * 00014300
*                                                                     * 00014400
*    15        Return code                                            * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*    When control returns to the caller, the ARs contain:             * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*    REGISTER  CONTENTS                                               * 00015200
*                                                                     * 00015300
*    0-1       Used as work registers by the system                   * 00015400
*                                                                     * 00015500
*    2-13      Unchanged                                              * 00015600
*                                                                     * 00015700
*    14-15     Used as work registers by the system                   * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*    Some callers depend on register contents remaining the same      * 00016200
*    before and after issuing a service.  If the system changes the   * 00016300
*    contents of registers on which the caller depends, the caller    * 00016400
*    must save them before issuing the service, and restore them      * 00016500
*    after the system returns control.                                * 00016600
*                                                                     * 00016700
*01* PERFORMANCE IMPLICATIONS:                                        * 00016800
*                                                                     * 00016900
*    None                                                             * 00017000
*                                                                     * 00017100
*01* SYNTAX:                                                          * 00017200
*                                                                     * 00017300
*[xlabel]  IWMEJOIN     ETOKEN=xetoken                                * 00017400
*                     [,RETCODE=xretcode]                             * 00017500
*                     [,RSNCODE=xrsncode]                             * 00017600
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00017700
*                    [,MF=S]                                         * 00017800
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00017900
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*      Where:                                                         * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*      [xlabel]                                                       * 00018600
*          is an optional symbol, starting in column 1, that is the   * 00018700
*          name on the IWMEJOIN macro invocation.  The name must      * 00018800
*          conform to the rules for an ordinary assembler language    * 00018900
*          symbol.                                                    * 00019000
*          DEFAULT: No name.                                          * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*      ETOKEN=xetoken                                                 * 00019600
*          is the name (RS-type), or address in register (2)-(12), of * 00019700
*          a required 8 character input which contains the Enclave    * 00019800
*          token to be associated with the TCB as returned by         * 00019900
*          IWMECREA.                                                  * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*      [RETCODE=xretcode]                                             * 00020500
*          is the name (RS-type) of an optional fullword output       * 00020600
*          variable, or register (2)-(12), into which the return code * 00020700
*          is to be copied from GPR 15.                               * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*      [RSNCODE=xrsncode]                                             * 00021300
*          is the name (RS-type) of an optional fullword output       * 00021400
*          variable, or register (2)-(12), into which the reason code * 00021500
*          is to be copied from GPR 0.                                * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00022100
*          is an optional byte input decimal value in the "0-0" range * 00022200
*          that specifies the macro version.  PLISTVER is the only    * 00022300
*          key allowed on the list form of MF and determines which    * 00022400
*          parameter list is generated.  Note that MAX may be         * 00022500
*          specified instead of a number, and the parameter list will * 00022600
*          be of the largest size currently supported. This size may  * 00022700
*          grow from release to release (thus possibly affecting the  * 00022800
*          amount of storage needed by your program).  If your        * 00022900
*          program can tolerate this, IBM recommends that you always  * 00023000
*          specify MAX when creating the list form parameter list as  * 00023100
*          that will ensure that the list form parameter list is      * 00023200
*          always long enough to hold whatever parameters might be    * 00023300
*          specified on the execute form.                             * 00023400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00023500
*          default is the lowest version which allows all of the      * 00023600
*          parameters specified on the invocation to be processed.    * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*      [MF=S|L|E]                                                   * 00024200
*          is an optional keyword input which specifies the macro     * 00024300
*          form.                                                      * 00024400
*          DEFAULT: S                                                 * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*          [MF=S]                                                     * 00024800
*              specifies the standard form of the macro.  The "S"     * 00024900
*              form generates code to put the parameters into an      * 00025000
*              in-line parameter list and invoke the desired service. * 00025100
*              Full checking for required macro keys is done along    * 00025200
*              with supplying defaults for omitted optional           * 00025300
*              parameters.                                            * 00025400
*                                                                     * 00025500
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00025600
*              specifies the list form of the macro.  The "L" form    * 00025700
*              defines an area to be used for the parameter list.     * 00025800
*              Only the PLISTVER key may be specified on the          * 00025900
*              invocation.  All other macro parameters are flagged as * 00026000
*              errors.  If PLISTVER is not specified, the original    * 00026100
*              parameter list definition is used.                     * 00026200
*                                                                     * 00026300
*            ,xmfctrl                                                 * 00026400
*              is a required input.  It is the name of a storage area * 00026500
*              for the parameter list.                                * 00026600
*                                                                     * 00026700
*            ,xmfattr|0D                                            * 00026800
*              is an optional 60 character input string that varies   * 00026900
*              from 1 to 60 characters. It can contain any value that * 00027000
*              is valid on an assembler DS pseudo-op. You can use     * 00027100
*              this parameter to force boundary alignment of the      * 00027200
*              parameter list.                                        * 00027300
*              DEFAULT: 0D which forces the parameter list to a       * 00027400
*              doubleword boundary.                                   * 00027500
*                                                                     * 00027600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00027700
*              specifies the execute form of the macro.  The "E" form * 00027800
*              generates code to put the parameters into the          * 00027900
*              parameter list specified by xmfctrl and provides full  * 00028000
*              syntax checking with default setting.                  * 00028100
*                                                                     * 00028200
*            ,xmfctrl                                                 * 00028300
*              is a required input.  It is the name (RS-type), or     * 00028400
*              address in register (1)-(12), of a storage area for    * 00028500
*              the parameter list.                                    * 00028600
*                                                                     * 00028700
*            ,COMPLETE                                              * 00028800
*              is an optional keyword input which specifies the       * 00028900
*              degree of macro parameter syntax checking.             * 00029000
*              DEFAULT: COMPLETE                                      * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*              COMPLETE                                               * 00029400
*                  Checking for required macro keys is done and       * 00029500
*                  defaults are supplied for omitted optional         * 00029600
*                  parameters.                                        * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*01* ABEND CODES:  None.                                              * 00030500
*                                                                     * 00030600
*01* RETURN CODES:                                                    * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*            0    Name: IwmRetCodeOk                                  * 00031000
*                                                                     * 00031100
*                 Meaning: Successful completion.                     * 00031200
*                                                                     * 00031300
*                 Action: None required.                              * 00031400
*                                                                     * 00031500
*            4    Name: IwmRetCodeWarning                             * 00031600
*                                                                     * 00031700
*                 Meaning: Successful completion, unusual conditions  * 00031800
*                 noted.                                              * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                 HEX REASON  MEANING/ACTION                          * 00032200
*                 CODE                                                * 00032300
*                                                                     * 00032400
*                 xxxx041F    Name: IwmRsnCodeExecEnvChanged          * 00032500
*                                                                     * 00032600
*                             Meaning:  The execution environment has * 00032700
*                             changed while the requested function is * 00032800
*                             in progress.                            * 00032900
*                                                                     * 00033000
*                             Action: None required.                  * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*            8    Name: IwmRetCodeInvocError                          * 00033500
*                                                                     * 00033600
*                 Meaning: Invalid invocation environment or          * 00033700
*                 parameters.                                         * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                 HEX REASON  MEANING/ACTION                          * 00034100
*                 CODE                                                * 00034200
*                                                                     * 00034300
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00034400
*                                                                     * 00034500
*                             Meaning:  Caller is in SRB mode.        * 00034600
*                                                                     * 00034700
*                             Action: Avoid requesting this function  * 00034800
*                             while in SRB mode.                      * 00034900
*                                                                     * 00035000
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00035100
*                                                                     * 00035200
*                             Meaning: Caller is disabled.            * 00035300
*                                                                     * 00035400
*                             Action: Avoid requesting this function  * 00035500
*                             while disabled.                         * 00035600
*                                                                     * 00035700
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00035800
*                                                                     * 00035900
*                             Meaning: Caller is locked.              * 00036000
*                                                                     * 00036100
*                             Action: Avoid requesting this function  * 00036200
*                             while locked.                           * 00036300
*                                                                     * 00036400
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00036500
*                                                                     * 00036600
*                             Meaning: Error accessing parameter      * 00036700
*                             list.                                   * 00036800
*                                                                     * 00036900
*                             Action: Check for possible storage      * 00037000
*                             overlay.                                * 00037100
*                                                                     * 00037200
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00037300
*                                                                     * 00037400
*                             Meaning: Caller has EUT FRR             * 00037500
*                             established.                            * 00037600
*                                                                     * 00037700
*                             Action: Avoid requesting this function  * 00037800
*                             with an EUT FRR set.                    * 00037900
*                                                                     * 00038000
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00038100
*                                                                     * 00038200
*                             Meaning: Caller invoked service while   * 00038300
*                             DATOFF                                  * 00038400
*                                                                     * 00038500
*                             Action: Avoid requesting this function  * 00038600
*                             in this environment.                    * 00038700
*                                                                     * 00038800
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00038900
*                                                                     * 00039000
*                             Meaning: Caller invoked service but was * 00039100
*                             in 24 bit addressing mode.              * 00039200
*                                                                     * 00039300
*                             Action: Request this function only when * 00039400
*                             you are in 31 bit addressing mode.      * 00039500
*                                                                     * 00039600
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00039700
*                                                                     * 00039800
*                             Meaning: Caller invoked service but was * 00039900
*                             not DAT on Primary ASC mode.            * 00040000
*                                                                     * 00040100
*                             Action: Avoid requesting this function  * 00040200
*                             in this environment.                    * 00040300
*                                                                     * 00040400
*                 xxxx0826    Name: IwmRsnCodeTaskTerm                * 00040500
*                                                                     * 00040600
*                             Meaning: Caller invoked service while   * 00040700
*                             task termination is in progress for the * 00040800
*                             current TCB.                            * 00040900
*                                                                     * 00041000
*                             Action: Avoid requesting this function  * 00041100
*                             while task termination is in progress.  * 00041200
*                                                                     * 00041300
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00041400
*                                                                     * 00041500
*                             Meaning: Version number in parameter    * 00041600
*                             list is not valid or version length     * 00041700
*                             field is not valid.                     * 00041800
*                                                                     * 00041900
*                             Action: Check for possible storage      * 00042000
*                             overlay of the parameter list.          * 00042100
*                                                                     * 00042200
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00042300
*                                                                     * 00042400
*                             Meaning: Enclave token does not pass    * 00042500
*                             verification.                           * 00042600
*                                                                     * 00042700
*                             Action: Check for possible storage      * 00042800
*                             overlay of the Enclave token, or        * 00042900
*                             asynchronous events which may have      * 00043000
*                             deleted the Enclave.                    * 00043100
*                                                                     * 00043200
*                 xxxx0850    Name: IwmRsnCodeBeginEnvOutstanding     * 00043300
*                                                                     * 00043400
*                             Meaning: Caller is already operating    * 00043500
*                             under an outstanding Begin environment  * 00043600
*                             which has implicitly joined an Enclave. * 00043700
*                                                                     * 00043800
*                             Action:  Avoid requesting this function * 00043900
*                             in this environment.                    * 00044000
*                                                                     * 00044100
*                 xxxx0857    Name: IwmRsnCodeAlreadyInEnclave        * 00044200
*                                                                     * 00044300
*                             Meaning: Current dispatchable workunit  * 00044400
*                             is already in an Enclave.               * 00044500
*                                                                     * 00044600
*                             Action:  Avoid requesting this function * 00044700
*                             while the caller is already in an       * 00044800
*                             Enclave.                                * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*            10   Name: IwmRetCodeCompError                           * 00045300
*                                                                     * 00045400
*                 Meaning: Component error.                           * 00045500
*                                                                     * 00045600
*                 Action: Contact your system programmer.             * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*01* REASON CODES:                                                    * 00046100
*                                                                     * 00046200
*       A unique reason code will be returned whenever the return     * 00046300
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00046400
*       under their corresponding return code.  Reason code and       * 00046500
*       return code constants are defined within IWMYCON.  Note that  * 00046600
*       the high order halfword of register 0, and the reason code    * 00046700
*       variable when specified, may be non-zero and represents       * 00046800
*       diagnostic data which is NOT part of the external interface.  * 00046900
*       The high order halfword should thus be excluded from          * 00047000
*       comparison with the reason code values described above.  The  * 00047100
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00047200
*       used for this purpose.                                        * 00047300
*                                                                     * 00047400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00047500
*                                                                     * 00047600
*02*   PROCESSOR:  ASSEM                                              * 00047700
*                                                                     * 00047800
*01* COMPONENT:  SCWLM                                                * 00047900
*                                                                     * 00048000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00048100
*                                                                     * 00048200
*01* EXAMPLES:                                                        * 00048300
*                                                                     * 00048400
*    To allow the current task to join an Enclave:                    * 00048500
*                                                                     * 00048600
*               IWMEJOIN ETOKEN=ENCTOKEN,RETCODE=RC,RSNCODE=RSN       * 00048700
*      *                                                              * 00048800
*      * Storage areas                                                * 00048900
*      *                                                              * 00049000
*      ENCTOKEN DS    CL8             Contains the Enclave token      * 00049100
*      *                              associated with the work        * 00049200
*      *                              request as returned by IWMECREA * 00049300
*      RC       DS    F               Return code                     * 00049400
*      RSN      DS    F               Reason code                     * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*01* MACRO USAGE NOTES:                                               * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00050100
*        global macro variable.  Any value other than 'NO' will       * 00050200
*        result in the macro expansion being printed.  The default is * 00050300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00050400
*        variable should be set.                                      * 00050500
*                                                                     * 00050600
*                    GBLC &ZPRINT                                     * 00050700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*    2.  All   keys   currently   contained  in  the  IWMEJOIN  macro * 00051100
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00051200
*        value of 0 or MAX.                                           * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*01* CHANGE ACTIVITY:                                                 * 00051800
*                                                                     * 00051900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00052000
*                                                                     * 00052100
*    $L0=WLMP0AMG HBB6603 950426 PD16:  DB2 Stored SQL Procedure      * 00052200
****** END OF SPECIFICATIONS *****************************************/ 00052300
*/********************************************************************* 00052400
         MACRO                                                          00052500
&XLABEL  IWMEJOIN &ETOKEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=          00052600
.*                                                                      00052700
*              MACDATE -05/02/96-<0>                                    00052800
.*                                                                      00052900
.*******************************************************************    00053000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00053100
.*******************************************************************    00053200
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00053300
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00053400
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00053500
.*                                                                      00053600
              GBLC  &ZIWMEJOIN  YES=MACRO USED AT LEAST ONCE            00053700
.*******************************************************************    00053800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00053900
.*******************************************************************    00054000
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00054100
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00054200
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00054300
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00054400
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00054500
              LCLA  &ZAWRK      USED AS A WORK AREA                     00054600
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00054700
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00054800
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00054900
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00055000
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00055100
              LCLA  &ZMACRET    MACRO RETURN CODE                       00055200
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00055300
.*                                                                      00055400
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00055500
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00055600
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00055700
              LCLC  &ZENDBASEPL                 End of base PL          00055800
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00055900
.*******************************************************************    00056000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00056100
.*******************************************************************    00056200
              LCLA  &ZI         INDEX FOR ARRAY                         00056300
              LCLA  &ZJ         INDEX FOR PARMS                         00056400
              LCLA  &ZK         INDEX FOR PARSE                         00056500
              LCLA  &ZLO        LOW RANGE VALUE                         00056600
              LCLA  &ZHI        HIGH RANGE VALUE                        00056700
              LCLC  &ZW         WORK AREA FOR PARM                      00056800
.********************************************************************   00056900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00057000
.********************************************************************   00057100
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00057200
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00057300
.*                                                                      00057400
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00057500
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00057600
              SPLEVEL  TEST                                             00057700
.ZSYS2        ANOP  ,                                                   00057800
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00057900
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00058000
              SYSSTATE TEST                                             00058100
              AGO   .ZSYS4                                              00058200
.ZSYS3        ANOP  ,                                                   00058300
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00058400
.ZSYS4        ANOP  ,                                                   00058500
.*******************************************************************    00058600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00058700
.*******************************************************************    00058800
              LCLC  &XETOKEN    ++ NAME                                 00058900
              LCLC  &XRETCODE   ++ NAME                                 00059000
              LCLC  &XRSNCODE   ++ NAME                                 00059100
              LCLA  &XPLISTVER  ++ VALUE                                00059200
              LCLC  &XMF        ++ VALUE                                00059300
              LCLC  &XMFCTRL    ++ NAME                                 00059400
              LCLC  &XMFATTR    ++ VALUE                                00059500
              LCLC  &XMFSCK     ++ VALUE                                00059600
.*******************************************************************    00059700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00059800
.*******************************************************************    00059900
              LCLC  &ZXETOKEN   ++ INPUT NAME                           00060000
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00060100
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00060200
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00060300
              LCLC  &ZXMF       ++ INPUT VALUE                          00060400
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00060500
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00060600
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00060700
.********************************************************************   00060800
.***AC.PLV01  PROCESS PLISTVER                                      *   00060900
.********************************************************************   00061000
&XPLISTVER      SETA  0                                                 00061100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00061200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00061300
&XPLISTVER      SETA  0                                                 00061400
.ZPLV0          ANOP  ,                                                 00061500
.*                                                                      00061600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00061700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00061800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00061900
.*-------------------------------------------------------------------   00062000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00062100
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00062200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00062300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00062400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00062500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00062600
                AGO   .ZPVCK2                                           00062700
.ZPVCK3         ANOP  ,                                                 00062800
.*-------------------------------------------------------------------   00062900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00063000
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00063100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00063300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00063400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063500
                AGO   .ZPVCKE                                           00063600
.ZPVCK2         ANOP  ,                                                 00063700
.*-------------------------------------------------------------------   00063800
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00063900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00064000
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00064100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00064200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00064300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00064400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00064500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064600
                AGO   .ZPVCK5                                           00064700
.ZPVCK4         ANOP  ,                                                 00064800
&XPLISTVER      SETA  &PLISTVER(1)                                      00064900
.ZPVCK5         ANOP  ,                                                 00065000
.*-------------------------------------------------------------------   00065100
&ZCVAL          SETC  '&PLISTVER(1)'                                    00065200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00065300
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00065400
                AIF   (&XPLISTVER LT 0).ZPVCK6  TOO LOW                 00065500
                AIF   (&XPLISTVER LE 0).ZPVCKE  NOT HIGH                00065600
.ZPVCK6         ANOP   ,                                                00065700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00065800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00065900
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00066000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00066100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00066200
.ZPVCKE         ANOP   ,                                                00066300
.********************************************************************   00066400
.***AG.MF01 PROCESS MF MACRO FORMS                                      00066500
.********************************************************************   00066600
              ACTR  10000                                               00066700
.*------------------------------------------------------------------    00066800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00066900
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00067000
.*-------------------------------------------------------------------   00067100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067200
.ZG15         ANOP  ,                                                   00067300
&ZTLC         SETC 'S'                                                  00067400
              AIF   ('&MF(1)' NE '&ZTLC').ZG16                          00067500
&XMF          SETC  'S'         SET KEYWORD                             00067600
              AIF   (N'&MF LE 1).ZG15A          CK NUM                  00067700
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00067800
&ZMS          SETC  '&ZMS.&MF"'                                         00067900
&ZMS          SETC  '&ZMS "MF"'                                         00068000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00068100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068200
.ZG15A        ANOP  ,                                                   00068300
.*-------------------------------------------------------------------   00068400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068500
.ZG16         ANOP  ,                                                   00068600
&ZTLC         SETC 'L'                                                  00068700
              AIF   ('&MF(1)' NE '&ZTLC').ZG23                          00068800
&XMF          SETC  'L'         SET KEYWORD                             00068900
              AIF   (N'&MF LE 3).ZG16A          CK NUM                  00069000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00069100
&ZMS          SETC  '&ZMS.&MF"'                                         00069200
&ZMS          SETC  '&ZMS "MF"'                                         00069300
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00069400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069500
.ZG16A        ANOP  ,                                                   00069600
.*-------------------------------------------------------------------   00069700
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00069800
              AIF   (N'&SYSLIST NE 0).ZG16B     POSITIONALS?            00069900
              AIF   ('&ETOKEN' NE '').ZG16B     KEYS?                   00070000
              AIF   ('&RETCODE' NE '').ZG16B    KEYS?                   00070100
              AIF   ('&RSNCODE' NE '').ZG16B    KEYS?                   00070200
              AGO    .ZG16C     INVOCATION OKAY                         00070300
.ZG16B        ANOP  ,                                                   00070400
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00070500
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00070600
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00070700
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00070800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070900
.ZG16C        ANOP  ,                                                   00071000
.*-------------------------------------------------------------------   00071100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00071200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00071300
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00071400
              AIF   (N'&MF(2) GT 1).ZG18B       MULTI PARMS             00071500
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00071600
.ZG18B        AIF   (K'&MF(2) GT 0).ZG18C                               00071700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00071800
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00071900
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00072000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00072100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072200
.ZG18C        ANOP  ,                                                   00072300
.*-------------------------------------------------------------------   00072400
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00072500
              AIF   (K'&ZXMFCTRL LE 0).ZG18P    NOT I/O                 00072600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG18P                      00072700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00072800
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00072900
&ZMS          SETC  '&ZMS.&MF"'                                         00073000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00073100
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00073200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073300
.ZG18P        ANOP  ,                                                   00073400
.*-------------------------------------------------------------------   00073500
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00073600
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00073700
&XMFATTR      SETC  '0D'                                                00073800
              AIF   (K'&MF(3) LE 0).ZG21B       PARM                    00073900
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00074000
              AIF   (N'&MF(3) GT 1).ZG21B       MULTI PARMS             00074100
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00074200
.ZG21B        ANOP  ,                                                   00074300
.*-------------------------------------------------------------------   00074400
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00074500
              AIF   (K'&ZXMFATTR LE 0).ZG21P    NOT I/O                 00074600
              AIF   ('&XMFATTR'(1,1) NE '(').ZG21P                      00074700
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00074800
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00074900
&ZMS          SETC  '&ZMS.&MF"'                                         00075000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00075100
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00075200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075300
.ZG21P        ANOP  ,                                                   00075400
.*-------------------------------------------------------------------   00075500
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00075600
              AIF   (K'&ZXMFATTR LE 0).ZG21S    NOT I/O                 00075700
              AIF   (K'&XMFATTR LE 60).ZG21S    LNG OK                  00075800
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00075900
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00076000
&ZMS          SETC  '&ZMS.&MF"'                                         00076100
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00076200
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00076300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00076400
.ZG21S        ANOP  ,                                                   00076500
.*-------------------------------------------------------------------   00076600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076700
.ZG23         ANOP  ,                                                   00076800
&ZTLC         SETC 'E'                                                  00076900
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00077000
&XMF          SETC  'E'         SET KEYWORD                             00077100
              AIF   (N'&MF LE 3).ZG23A          CK NUM                  00077200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00077300
&ZMS          SETC  '&ZMS.&MF"'                                         00077400
&ZMS          SETC  '&ZMS "MF"'                                         00077500
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00077600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077700
.ZG23A        ANOP  ,                                                   00077800
.*-------------------------------------------------------------------   00077900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00078000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00078100
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00078200
              AIF   (N'&MF(2) GT 1).ZG25B       MULTI PARMS             00078300
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00078400
.ZG25B        AIF   (K'&MF(2) GT 0).ZG25C                               00078500
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00078600
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00078700
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00078800
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00078900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079000
.ZG25C        ANOP  ,                                                   00079100
.*-------------------------------------------------------------------   00079200
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00079300
              AIF   (K'&ZXMFCTRL LE 0).ZG25R    NOT I/O                 00079400
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG25R                      00079500
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00079600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                        00079700
              AIF   (K'&ZCGPR GT 2).ZG25Q                               00079800
              AIF   ('&ZCGPR' EQ '0').ZG25Q                             00079900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00080000
              AIF   (T'&ZCGPR NE 'N').ZG25Q     INVALID REG NAME        00080100
.ZG25P        ANOP  ,                                                   00080200
              AIF   (T'&ZCGPR NE 'N').ZG25R     NON NUMERIC             00080300
              AIF   ('&ZCGPR' LT '1').ZG25Q                             00080400
              AIF   ('&ZCGPR' LE '12').ZG25R                            00080500
.ZG25Q        ANOP  ,                                                   00080600
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00080700
&ZMS          SETC  '&ZMS.&MF"'                                         00080800
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00080900
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00081000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081100
.ZG25R        ANOP  ,                                                   00081200
.*-------------------------------------------------------------------   00081300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00081400
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00081500
.ZG29A   AIF   ('&MF(3)' NE 'COMPLETE').ZG30A                           00081600
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00081700
.*-------------------------------------------------------------------   00081800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00081900
.ZG30A        AIF   (K'&XMFSCK GT 0).ZG30C      KEYWORD                 00082000
              AIF   (K'&MF(3) LE 0).ZG30B                               00082100
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00082200
&ZMS          SETC  '&ZMS.&MF"'                                         00082300
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00082400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00082500
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00082600
              MNOTE 8,' &ZMS '                                          00082700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082800
.ZG30B        ANOP  ,                                                   00082900
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00083000
.ZG30C        ANOP  ,                                                   00083100
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00083200
.*------------------------------------------------------------------    00083300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083400
.ZG31         ANOP  ,                                                   00083500
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00083600
              AIF   (K'&XMF GT 0).ZG31E         VALID ARG               00083700
              AIF   (T'&MF EQ 'O').ZG31D        OMITTED                 00083800
&ZASYSLNDX    SETA  0                                                   00083900
.ZG31A        ANOP  ,           POSITIONAL MACRO KEY                    00084000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00084100
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                    00084200
&ZTLC         SETC 'MF'                                                 00084300
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A           00084400
.ZG31B        ANOP  ,                                                   00084500
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00084600
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00084700
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00084800
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00084900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085000
              AGO   .ZG31E                                              00085100
.ZG31C        ANOP  ,                                                   00085200
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00085300
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00085400
&ZMS          SETC  '&ZMS.&MF"'                                         00085500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00085600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00085700
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00085800
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00085900
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00086000
              MNOTE 8,' &ZMS '                                          00086100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086200
              AGO   .ZG31E                                              00086300
.ZG31D        ANOP  ,                                                   00086400
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00086500
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00086600
.ZG31E        ANOP  ,                                                   00086700
.********************************************************************   00086800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00086900
.********************************************************************   00087000
              ACTR  10000                                               00087100
.*-------------------------------------------------------------------   00087200
.***AG.MF03 MF=(SLE)                                                    00087300
              AIF   ('&XMF' EQ 'L').ZGMFX                               00087400
.*----------------------------------------------------------------***   00087500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00087600
              AIF   (N'&ETOKEN LE 1).ZG2A       CK NUM                  00087700
&ZMS          SETC  '"ETOKEN='  *KPOSA* MNOTE                           00087800
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00087900
&ZMS          SETC  '&ZMS "ETOKEN"'                                     00088000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00088100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088200
.ZG2A         ANOP  ,                                                   00088300
.*-------------------------------------------------------------------   00088400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00088500
&ZXETOKEN     SETC  'INPUT'     SET IN/OUTPUT                           00088600
&XETOKEN      SETC  '&ETOKEN(1)'                SET XVARIABLE           00088700
              AIF   (N'&ETOKEN GT 1).ZG2B       MULTI PARMS             00088800
&XETOKEN      SETC  '&ETOKEN'   SET XVARIABLE                           00088900
.ZG2B         AIF   (K'&ETOKEN(1) GT 0).ZG2C                            00089000
&ZXETOKEN     SETC  ''          RESET IN/OUTPUT                         00089100
&ZMS          SETC  ' '         *KRQDA*                                 00089200
&ZMS          SETC  '&ZMS "ETOKEN" KEY AND ITS ARGUMENT'                00089300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00089400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089500
.ZG2C         ANOP  ,                                                   00089600
.*-------------------------------------------------------------------   00089700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00089800
              AIF   (K'&ZXETOKEN LE 0).ZG2R     NOT I/O                 00089900
              AIF   ('&XETOKEN'(1,1) NE '(').ZG2R                       00090000
&ZCGPR        SETC  '&XETOKEN'(2,K'&XETOKEN-2)                          00090100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00090200
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00090300
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00090400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00090500
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00090600
.ZG2P         ANOP  ,                                                   00090700
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00090800
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00090900
              AIF   ('&ZCGPR' LE '12').ZG2R                             00091000
.ZG2Q         ANOP  ,                                                   00091100
&ZMS          SETC  '"ETOKEN='  *KGPRA* MNOTE                           00091200
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00091300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00091400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00091500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00091600
.ZG2R         ANOP  ,                                                   00091700
.*----------------------------------------------------------------***   00091800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00091900
              AIF   (N'&RETCODE LE 1).ZG5A      CK NUM                  00092000
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00092100
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00092200
&ZMS          SETC  '&ZMS "RETCODE"'                                    00092300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00092400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092500
.ZG5A         ANOP  ,                                                   00092600
.*-------------------------------------------------------------------   00092700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00092800
              AIF   (K'&RETCODE(1) LE 0).ZG5C   NO PARM                 00092900
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00093000
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00093100
              AIF   (N'&RETCODE GT 1).ZG5C                              00093200
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00093300
.ZG5C         ANOP  ,                                                   00093400
.*-------------------------------------------------------------------   00093500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00093600
              AIF   (K'&ZXRETCODE LE 0).ZG5R    NOT I/O                 00093700
              AIF   ('&XRETCODE'(1,1) NE '(').ZG5R                      00093800
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00093900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00094000
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00094100
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00094200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00094300
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00094400
.ZG5P         ANOP  ,                                                   00094500
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00094600
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00094700
              AIF   ('&ZCGPR' LE '12').ZG5R                             00094800
.ZG5Q         ANOP  ,                                                   00094900
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00095000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00095100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00095200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00095300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095400
.ZG5R         ANOP  ,                                                   00095500
.*----------------------------------------------------------------***   00095600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00095700
              AIF   (N'&RSNCODE LE 1).ZG8A      CK NUM                  00095800
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00095900
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00096000
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00096100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00096200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096300
.ZG8A         ANOP  ,                                                   00096400
.*-------------------------------------------------------------------   00096500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00096600
              AIF   (K'&RSNCODE(1) LE 0).ZG8C   NO PARM                 00096700
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00096800
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00096900
              AIF   (N'&RSNCODE GT 1).ZG8C                              00097000
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00097100
.ZG8C         ANOP  ,                                                   00097200
.*-------------------------------------------------------------------   00097300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00097400
              AIF   (K'&ZXRSNCODE LE 0).ZG8R    NOT I/O                 00097500
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG8R                      00097600
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00097700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00097800
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00097900
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00098000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00098100
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00098200
.ZG8P         ANOP  ,                                                   00098300
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00098400
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00098500
              AIF   ('&ZCGPR' LE '12').ZG8R                             00098600
.ZG8Q         ANOP  ,                                                   00098700
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00098800
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00098900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00099000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00099100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099200
.ZG8R         ANOP  ,                                                   00099300
.******************************************************************     00099400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00099500
.******************************************************************     00099600
              ACTR  10000                                               00099700
.*----------------------------------------------------------------***   00099800
.***AH.P02 EXTRA POSITIONALS                                            00099900
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00100000
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00100100
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00100200
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00100300
.ZGLISTX1     ANOP  ,                                                   00100400
&ZCVAL        SETC  ''          ERROR FIELD                             00100500
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00100600
.ZGLIST2      ANOP  ,                                                   00100700
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00100800
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00100900
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00101000
              AGO   .ZGLIST2                                            00101100
.*                                                                      00101200
.ZGLIST3      ANOP  ,                                                   00101300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00101400
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00101500
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00101600
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00101700
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00101800
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00101900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00102000
.ZGLISTX      ANOP  ,                                                   00102100
&ZASYSLNDX    SETA  0                                                   00102200
.*-------------------------------------------------------------------   00102300
.***AG.MF04 MF=(SLE)                                                    00102400
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00102500
.*******************************************************************    00102600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00102700
.*******************************************************************    00102800
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00102900
.*******************************************************************    00103000
.***AE.01  START OF IWMEJOIN MACRO CODE                                 00103100
.*******************************************************************    00103200
              LCLC  &M0M0001                 NAME                       00103300
&M0M0001      SETC  '&XLABEL'                SET NAME                   00103400
              AIF   (K'&XLABEL NE 0).XLAB2                              00103500
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00103600
.*                                                                      00103700
.XLAB2        ANOP  ,                                                   00103800
&M0M0001 DS    0H                             IWMEJOIN-0                00103900
.*******************************************************************    00104000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00104100
.*******************************************************************    00104200
              PUSH  PRINT                                               00104300
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00104400
              PRINT OFF         ++ PR01                                 00104500
              AGO   .ZPRNTXX                                            00104600
.ZPRINTX      PRINT ON                                                  00104700
.ZPRNTXX      ANOP  ,                                                   00104800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00104900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00105000
.********************************************************************   00105100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00105200
.********************************************************************   00105300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00105400
                      LCLA  &ZOPN1         INVOCATION INDEX             00105500
                      LCLC  &ZOPL(4095)    LABEL                        00105600
                      LCLC  &ZOPO(4095)    OPERATION                    00105700
                      LCLC  &ZOPV(4095)    VALUE                        00105800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00105900
.*                                                                      00106000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00106100
.******************************************************************     00106200
.***AL.L10 IWMEJOIN FMT=LIST MF=S|L PARAMETERS                          00106300
.******************************************************************     00106400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00106500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00106600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00106700
&XMFATTR              SETC  '0D'                                        00106800
.*                                                                      00106900
&ZOPN                 SETA  &ZOPN+1                                     00107000
&ZOPL(&ZOPN)          SETC  ' '                                         00107100
&ZOPO(&ZOPN)          SETC  'B'                                         00107200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00107300
&ZOPD(&ZOPN)          SETC  '++ IWMEJOIN ARG PARMS'                     00107400
.*                                                                      00107500
&ZOPN                 SETA  &ZOPN+1                                     00107600
&ZOPL(&ZOPN)          SETC  ' '                                         00107700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00107800
&ZOPV(&ZOPN)          SETC  '1'                                         00107900
&ZOPD(&ZOPN)          SETC  ' '                                         00108000
.*                                                                      00108100
.ZLMFSL2              ANOP  ,                                           00108200
.*-------------------------------------------------------------------   00108300
.***AM.L01  IWMEJOIN FMT=LIST PARAMETERS                                00108400
&ZOPN                 SETA &ZOPN+1                                      00108500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00108600
&ZOPO(&ZOPN)          SETC 'DS'                                         00108700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00108800
&ZOPD(&ZOPN)          SETC '++ IWMEJOIN PARM LIST'                      00108900
.*-------------------------------------------------------------------   00109000
.***AM.L02 XVERSION XL1                                                 00109100
&ZOPN                 SETA &ZOPN+1                                      00109200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00109300
&ZOPO(&ZOPN)          SETC 'DS'                                         00109400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00109500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00109600
.*-------------------------------------------------------------------   00109700
.***AM.L09  XRSV001 CL1                                                 00109800
&ZOPN                 SETA &ZOPN+1                                      00109900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00110000
&ZOPO(&ZOPN)          SETC 'DS'                                         00110100
&ZOPV(&ZOPN)          SETC 'CL1'                                        00110200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       00110300
.*-------------------------------------------------------------------   00110400
.***AM.L09  XPLISTLEN XL2                                               00110500
&ZOPN                 SETA &ZOPN+1                                      00110600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00110700
&ZOPO(&ZOPN)          SETC 'DS'                                         00110800
&ZOPV(&ZOPN)          SETC 'XL2'                                        00110900
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00111000
.*-------------------------------------------------------------------   00111100
.***AM.L09  XETOKEN CL8                                                 00111200
&ZOPN                 SETA &ZOPN+1                                      00111300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00111400
&ZOPO(&ZOPN)          SETC 'DS'                                         00111500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00111600
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00111700
.*-------------------------------------------------------------------   00111800
.***AM.L10 END OF IWMEJOIN LIST PARAMETERS                              00111900
&ZOPN                 SETA &ZOPN+1                                      00112000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00112100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00112200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00112300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00112400
.*                                                                      00112500
&ZOPN                 SETA &ZOPN+1                                      00112600
&ZOPL(&ZOPN)          SETC ' '                                          00112700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00112800
&ZOPV(&ZOPN)          SETC '1'                                          00112900
&ZOPD(&ZOPN)          SETC ' '                                          00113000
.*-------------------------------------------------------------------   00113100
.***AL.L12 IWMEJOIN FMT=LIST MF=S|L PARAMETERS                          00113200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00113300
.*                                                                      00113400
&ZOPN                 SETA  &ZOPN+1                                     00113500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00113600
&ZOPO(&ZOPN)          SETC  'DC'                                        00113700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00113800
&ZOPD(&ZOPN)          SETC  '++ IWMEJOIN ARG PARMS'                     00113900
.*                                                                      00114000
.ZLMFSLX              ANOP  ,                                           00114100
.*-------------------------------------------------------------------   00114200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00114300
&ZPLLEN               SETA 12                                           00114400
.*                                                                      00114500
.******************************************************************     00114600
.***AI.L01 IWMEJOIN FMT=LIST FILL IN PARAMETER AREA                     00114700
.******************************************************************     00114800
                      ACTR  10000                                       00114900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00115000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00115100
&ZCVAL                SETC  'LAE'          XAX MODE                     00115200
.ZIMFXA               ANOP ,                                            00115300
.*                                                                      00115400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00115500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00115600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00115700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00115800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00115900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00116000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00116100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00116200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00116300
&ZOPN                 SETA  &ZOPN+1                                     00116400
&ZOPL(&ZOPN)          SETC  ' '                                         00116500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00116600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00116700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00116800
                      AGO   .ZIMFNX                                     00116900
.*                                                                      00117000
.ZIMFN2               ANOP ,                                            00117100
&ZOPN                 SETA  &ZOPN+1                                     00117200
&ZOPL(&ZOPN)          SETC  ' '                                         00117300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00117400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00117500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00117600
.ZIMFNX               ANOP ,                                            00117700
.********************************************************************   00117800
.***AI.L02 IWMEJOIN FMT=LIST INITIALIZE PARAMETER AREA                  00117900
.********************************************************************   00118000
.***AI.L03 MF=(SLE)                                                     00118100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00118200
.*                                                                      00118300
&ZOPN                 SETA  &ZOPN+1                                     00118400
&ZOPL(&ZOPN)          SETC  ' '                                         00118500
&ZOPO(&ZOPN)          SETC  'XC'                                        00118600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00118700
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00118800
.ZIMFLX               ANOP  ,                                           00118900
.*-------------------------------------------------------------------   00119000
.***AI.L04 XPLISTLEN XL2                                                00119100
&ZOPN                 SETA  &ZOPN+1                                     00119200
&ZOPL(&ZOPN)          SETC  ' '                                         00119300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00119400
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00119500
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00119600
.*-------------------------------------------------------------------   00119700
.***AI.L25  XETOKEN CL8                                                 00119800
                      AIF   ('&ZXETOKEN' EQ '').ZI4E                    00119900
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI4E              00120000
&ZCGPR                SETC  '&XETOKEN'                                  00120100
.*                                                                      00120200
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI4B               00120300
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00120400
.ZI4B                 ANOP  ,                                           00120500
.*                                                                      00120600
&ZOPN                 SETA  &ZOPN+1                                     00120700
&ZOPL(&ZOPN)          SETC  ' '                                         00120800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00120900
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00121000
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00121100
.*                                                                      00121200
.ZI4E                 ANOP  ,                                           00121300
.*-------------------------------------------------------------------   00121400
&ZOPN1                SETA &ZOPN                                        00121500
.*******************************************************************    00121600
.***  PROCESS IWMEJOIN OUTPUT PARAMETERS                                00121700
.*******************************************************************    00121800
                      ACTR  10000                                       00121900
.*******************************************************************    00122000
.***AO.X02  RETURN CODE PROCESSING                                      00122100
.*******************************************************************    00122200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00122300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00122400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00122500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00122600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00122700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00122800
&ZOPN                 SETA  &ZOPN+1                                     00122900
&ZOPL(&ZOPN)          SETC  ' '                                         00123000
&ZOPO(&ZOPN)          SETC  'ST'                                        00123100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00123200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00123300
                      AGO   .ZMRETX                                     00123400
.*                                                                      00123500
.ZMRET2               ANOP  ,                                           00123600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00123700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00123800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00123900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00124000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00124100
&ZOPN                 SETA  &ZOPN+1                                     00124200
&ZOPL(&ZOPN)          SETC  ' '                                         00124300
&ZOPO(&ZOPN)          SETC  'LR'                                        00124400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00124500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00124600
.ZMRETX               ANOP  ,                                           00124700
.*******************************************************************    00124800
.***AO.X03  REASON CODE PROCESSING                                      00124900
.*******************************************************************    00125000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00125100
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00125200
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00125300
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00125400
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00125500
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00125600
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00125700
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00125800
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00125900
&ZOPN                 SETA  &ZOPN+1                                     00126000
&ZOPL(&ZOPN)          SETC  ' '                                         00126100
&ZOPO(&ZOPN)          SETC  'ST'                                        00126200
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00126300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00126400
                      AGO   .ZMRSNX                                     00126500
.*                                                                      00126600
.ZMRSN2               ANOP  ,                                           00126700
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00126800
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00126900
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00127000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00127100
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00127200
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00127300
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00127400
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00127500
&ZOPN                 SETA  &ZOPN+1                                     00127600
&ZOPL(&ZOPN)          SETC  ' '                                         00127700
&ZOPO(&ZOPN)          SETC  'LR'                                        00127800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00127900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00128000
.ZMRSNX               ANOP  ,                                           00128100
.*******************************************************************    00128200
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00128300
.*******************************************************************    00128400
.ZMFLX                ANOP  ,              MF=L PROCESSING              00128500
.*******************************************************************    00128600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00128700
.*******************************************************************    00128800
                      ACTR  10000                                       00128900
.*                                                                      00129000
                      LCLA  &ZLC           COLUMN POSITION              00129100
                      LCLA  &ZOPX          LIST TABLE INDEX             00129200
                      LCLC  &ZLL           LABEL                        00129300
                      LCLC  &ZLOP          OPERATION                    00129400
                      LCLC  &ZLV           VALUE                        00129500
                      LCLC  &ZLD           DESCRIPTION                  00129600
.*                                                                      00129700
&ZOPX                 SETA  1                                           00129800
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00129900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00130000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00130100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00130200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00130300
                      AIF   (K'&ZLD LE 0).ZL5                           00130400
&ZLC                  SETA  35             COMMENT COLUMN               00130500
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00130600
&ZLC                  SETA  33             COMMMENT COLUMN              00130700
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00130800
&ZLV                  SETC  '&ZLV'.' '                                  00130900
                      AGO   .ZL3                                        00131000
.*                                                                      00131100
.ZL4                  ANOP  ,                                           00131200
&ZLV                  SETC  '&ZLV'.' '                                  00131300
.ZL5                  ANOP  ,                                           00131400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00131500
.*                                                                      00131600
&ZLL     &ZLOP &ZLV                                                     00131700
.*                                                                      00131800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00131900
                      AGO   .ZL2           CONTINUE LOOPING             00132000
.*                                                                      00132100
.ZLX                  ANOP  ,                                           00132200
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00132300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00132400
     L     14,16(0,0)              GET CVT ADDRESS                      00132500
     L     14,772(14,0)            GET SFT ADDRESS                      00132600
     L     14,380(14,0)            GET LX FOR SERVICE ROUTINE           00132700
     LA    15,45                   GET EX FOR SERVICE ROUTINE           00132800
     OR    14,15                   GET PC NUMBER                        00132900
     PC    0(14)                                                        00133000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00133100
.ZLINKX               ANOP  ,                                           00133200
.*******************************************************************    00133300
.***AP.X01  FORMAT GENERATED CODE                                       00133400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00133500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00133600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00133700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00133800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00133900
                      AIF   (K'&ZLD LE 0).ZL51                          00134000
&ZLC                  SETA  35             COMMENT COLUMN               00134100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00134200
&ZLC                  SETA  33             COMMENT COLUMN               00134300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00134400
&ZLV                  SETC  '&ZLV'.' '                                  00134500
                      AGO   .ZL31                                       00134600
.*                                                                      00134700
.ZL41                 ANOP  ,                                           00134800
&ZLV                  SETC  '&ZLV'.' '                                  00134900
.ZL51                 ANOP  ,                                           00135000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00135100
.*                                                                      00135200
&ZLL     &ZLOP &ZLV                                                     00135300
.*                                                                      00135400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00135500
                      AGO   .ZL21          CONTINUE LOOPING             00135600
.*                                                                      00135700
.ZLX1                 ANOP  ,                                           00135800
.*******************************************************************    00135900
.***AP.X02  END OF IWMEJOIN MACRO                                       00136000
&ZIWMEJOIN            SETC  'YES'          SET IWMEJOIN USED            00136100
         POP   PRINT                                                    00136200
*                                            IWMEJOIN-0                 00136300
         SPACE 1                                                        00136400
.ZLX2                 ANOP  ,                                           00136500
         MEND                                                           00136600
**********************************************************************/ 00136700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00136800
*%IWMEJOIN: MACRO KEYS(ETOKEN,RETCODE,RSNCODE,PLISTVER,MF);             00136900
*  ANS('?'||MACLABEL||' '||'IWMEJOIP '||MACLIST||                       00137000
*         ' '||MACKEYS||';') COL(MACLMAR);                              00137100
*%END IWMEJOIN;                                                         00137200
