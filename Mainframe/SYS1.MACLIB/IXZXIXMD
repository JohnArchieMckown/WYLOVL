*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXZXIXMD                              -93/05/10-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Delete JES XCF Mailbox                        * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1996, 1997                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      Purpose:  The IXZXIXMD services removes the association        * 00002200
*      between a JES Dispatchable Unit (JES2 PCE or JES3 FCT) and the * 00002300
*      JES Common XCF Task.                                           * 00002400
*                                                                     * 00002500
*      This service also removes and frees any resources that were    * 00002600
*      held by the mailbox.                                           * 00002700
*                                                                     * 00002800
*      The IXZXIXMD service removes any messages that are waiting for * 00002900
*      a JDU in a mailbox. The messages are acknowledged (with a      * 00003000
*      return code that indicates that they were not processed) and   * 00003100
*      any resources held by the message are released.                * 00003200
*                                                                     * 00003300
*      IBM Use of the interface:  This service will be used to remove * 00003400
*      the association between a JDU and the JES Common XCF task when * 00003500
*      the JDU terminates.                                            * 00003600
*                                                                     * 00003700
*      Customer Use of the interface:  The installation should use    * 00003800
*      this function in a manner similar to the way IBM is using it.  * 00003900
*      Break the connection between installation created mailboxes    * 00004000
*      and the JES Common XCF task when the JDU is terminated or      * 00004100
*      there is no longer a need for communications with other        * 00004200
*      members of the JESPlex.                                        * 00004300
*                                                                     * 00004400
*      CDPI Implications:                                             * 00004500
*                                                                     * 00004600
*      This macro is a General Use Programming Interface.  It is      * 00004700
*      intended to be used as part of JES exits and JES3 dynamic      * 00004800
*      support programs. The macro is only used in JES environments.  * 00004900
*                                                                     * 00005000
*      EEC Implications:  This macro is not EEC interface.            * 00005100
*                                                                     * 00005200
*      Related Macros:  The following macros are required in order to * 00005300
*      use this macro service:                                        * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*      o   JES2:                                                      * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*          -   $MODULE - must be included in the module and must have * 00006000
*              been invoked before the IXZXIXMD macro service.        * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*      o   JES3:                                                      * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*          -   IATYMOD - must be included in the module and must have * 00006800
*              been invoked before the IXZXIXMD macro service.        * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*                                                                     * 00007400
*      The following macros are used with this macro to manage the    * 00007500
*      transport of data and monitoring of system events:             * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*      o   IXZXIXMB - Build XCF Mailbox                               * 00007900
*                                                                     * 00008000
*      o   IXZXIXSM - Send a message to a mailbox                     * 00008100
*                                                                     * 00008200
*      o   IXZXIXRM - Receive a message from a mailbox                * 00008300
*                                                                     * 00008400
*      o   IXZXIXMC - Clear a mailbox                                 * 00008500
*                                                                     * 00008600
*      o   IXZXIXAC - Acknowledge receive of a message                * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*      Requirements                                                   * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*      o   Authorization: Supervisor state - key 0 or 1               * 00009400
*                                                                     * 00009500
*      o   Dispatchable unit mode: Task                               * 00009600
*                                                                     * 00009700
*      o   Cross memory mode: PASN = HASN = SASN                      * 00009800
*                                                                     * 00009900
*      o   AMODE: 31                                                  * 00010000
*                                                                     * 00010100
*      o   ASC mode: Primary                                          * 00010200
*                                                                     * 00010300
*      o   Serialization: Enabled for interrupts                      * 00010400
*                                                                     * 00010500
*      o   Locks:  This service assumes no locks are held by the      * 00010600
*          user.                                                      * 00010700
*                                                                     * 00010800
*      o   Control Parameters:  None                                  * 00010900
*                                                                     * 00011000
*      o   JES Environments:                                          * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*          -   JES2 Main Task                                         * 00011400
*                                                                     * 00011500
*          -   JES3 Main Task                                         * 00011600
*                                                                     * 00011700
*          -   JES2 Subtasks                                          * 00011800
*                                                                     * 00011900
*          -   JES3 Subtasks                                          * 00012000
*                                                                     * 00012100
*          -   JES3 FSS                                               * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*      Register Information                                           * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*      o   Input registers                                            * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*          -   R0-R15 - Undefined                                     * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*      o   Output registers                                           * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*          -   R0 - Reason code                                       * 00014100
*                                                                     * 00014200
*          -   R1 - Unpredictable                                     * 00014300
*                                                                     * 00014400
*          -   R2-R13 - Unchanged                                     * 00014500
*                                                                     * 00014600
*          -   R14 - Unpredictable                                    * 00014700
*                                                                     * 00014800
*          -   R15 - Return code                                      * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*      Programming Notes/Requirements                                 * 00015500
*                                                                     * 00015600
*      IBM Programming notes:                                         * 00015700
*                                                                     * 00015800
*      The programmer must supply a mailbox name.                     * 00015900
*                                                                     * 00016000
* Internal Information  * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*      If the caller does not want the JESXCF component to return     * 00016400
*      acknowledgements to the message issuer, for the messages that  * 00016500
*      are removed from the mailbox before it is deleted, the STB=YES * 00016600
*      parameter should be specified. This is an internal parameter   * 00016700
*      an is not part of the General Use Programming Interface.       * 00016800
*                                                                     * 00016900
* End of Internal Information  * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*      Customer Programming notes:                                    * 00017300
*                                                                     * 00017400
*      The programmer must supply a mailbox name.                     * 00017500
*                                                                     * 00017600
*      Restrictions                                                   * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*      o   Cannot be issued until JES initialization has attached and * 00018000
*          initializes the JES Common XCF Task.                       * 00018100
*                                                                     * 00018200
*      o   Must be issued under the same task that performed the      * 00018300
*          mailbox build.                                             * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*      Performance Implications:                                      * 00018800
*                                                                     * 00018900
*      This macro has minimal performance impact.  The service        * 00019000
*      routine causes a subtasked function to be performed, by the    * 00019100
*      JES XCF Task, on behalf of the JDU.                            * 00019200
*                                                                     * 00019300
*01* EXTERNAL CLASSIFICATION:   GUPI                                  * 00019400
*                                                                     * 00019500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00019600
*                                                                     * 00019700
*01* SYNTAX:                                                          * 00019800
*                                                                     * 00019900
*[xlabel]  IXZXIXMD    MBOXNAME=xmboxname                             * 00020000
*                      ,GROUPTOKEN=xgrouptoken                        * 00020100
*                     [,STB=NO|YES]                                 * 00020200
*                     [,RTNCODE=xrtncode]                             * 00020300
*                     [,RSNCODE=xrsncode]                             * 00020400
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00020500
*                    [,MF=S]                                         * 00020600
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00020700
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      Where:                                                         * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*      [xlabel]                                                       * 00021400
*          is an optional symbol, starting in column 1, that is the   * 00021500
*          name on the IXZXIXMD macro invocation.  The name must      * 00021600
*          conform to the rules for an ordinary assembler language    * 00021700
*          symbol.                                                    * 00021800
*          DEFAULT: No name.                                          * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*      The following is a set of mutually exclusive keys.  This set   * 00022400
*      is required; only one key must be specified.                   * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*      MBOXNAME=xmboxname                                             * 00022800
*          belongs to a set of mutually exclusive keys. It is the     * 00022900
*          name (RS-type), or address in register (2)-(12), of a 16   * 00023000
*          character input which contains the name of the mailbox to  * 00023100
*          be cleared.                                                * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*      End of a set of mutually exclusive required keys.              * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*      GROUPTOKEN=xgrouptoken                                         * 00024000
*          is the name (RS-type), or address in register (2)-(12), of * 00024100
*          a required fullword input that contains the JES XCF group  * 00024200
*          token.                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*      [STB=NO|YES]                                                 * 00024800
*          is an optional keyword input that indicates whether        * 00024900
*          acknowledgement messages should be sent to the sender.     * 00025000
*          This is an internal parameter and is not part of the       * 00025100
*          General Use Programming Interface.                         * 00025200
*          DEFAULT: NO                                                * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*          STB=NO                                                     * 00025600
*              Acknowledgement messages will be sent to the sender of * 00025700
*              the original message, if the original message caused   * 00025800
*              an acknowledgement message to be generated.            * 00025900
*                                                                     * 00026000
*          STB=YES                                                    * 00026100
*              Acknowledgement messages will not be sent to the       * 00026200
*              originator of the message.                             * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*      [RTNCODE=xrtncode]                                             * 00027000
*          is the name (RS-type) of an optional fullword output       * 00027100
*          variable, or register (2)-(12), into which the return code * 00027200
*          is to be copied from GPR 15.                               * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*      [RSNCODE=xrsncode]                                             * 00027800
*          is the name (RS-type) of an optional fullword output       * 00027900
*          variable, or register (2)-(12), into which the reason code * 00028000
*          is to be copied from GPR 0.                                * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00028600
*          is an optional byte input decimal value in the "1-1" range * 00028700
*          that specifies the macro version.  PLISTVER is the only    * 00028800
*          key allowed on the list form of MF and determines which    * 00028900
*          parameter list is generated.  Note that MAX may be         * 00029000
*          specified instead of a number, and the parameter list will * 00029100
*          be of the largest size currently supported. This size may  * 00029200
*          grow from release to release (thus possibly affecting the  * 00029300
*          amount of storage needed by your program).  If your        * 00029400
*          program can tolerate this, IBM recommends that you always  * 00029500
*          specify MAX when creating the list form parameter list as  * 00029600
*          that will ensure that the list form parameter list is      * 00029700
*          always long enough to hold whatever parameters might be    * 00029800
*          specified on the execute form.                             * 00029900
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00030000
*          default is the lowest version which allows all of the      * 00030100
*          parameters specified on the invocation to be processed.    * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*      [MF=S|L|E]                                                   * 00030700
*          is an optional keyword input which specifies the macro     * 00030800
*          form.                                                      * 00030900
*          DEFAULT: S                                                 * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*          [MF=S]                                                     * 00031300
*              specifies the standard form of the macro.  The "S"     * 00031400
*              form generates code to put the parameters into an      * 00031500
*              in-line parameter list and invoke the desired service. * 00031600
*              Full checking for required macro keys is done along    * 00031700
*              with supplying defaults for omitted optional           * 00031800
*              parameters.                                            * 00031900
*                                                                     * 00032000
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00032100
*              specifies the list form of the macro.  The "L" form    * 00032200
*              defines an area to be used for the parameter list.     * 00032300
*              Only the PLISTVER key may be specified on the          * 00032400
*              invocation.  All other macro parameters are flagged as * 00032500
*              errors.  If PLISTVER is not specified, the original    * 00032600
*              parameter list definition is used.                     * 00032700
*                                                                     * 00032800
*            ,xmfctrl                                                 * 00032900
*              is a required input.  It is the name of a storage area * 00033000
*              for the parameter list.                                * 00033100
*                                                                     * 00033200
*            ,xmfattr|0D                                            * 00033300
*              is an optional 60 character input string that varies   * 00033400
*              from 1 to 60 characters. It can contain any value that * 00033500
*              is valid on an assembler DS pseudo-op. You can use     * 00033600
*              this parameter to force boundary alignment of the      * 00033700
*              parameter list.                                        * 00033800
*              DEFAULT: 0D which forces the parameter list to a       * 00033900
*              doubleword boundary.                                   * 00034000
*                                                                     * 00034100
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00034200
*              specifies the execute form of the macro.  The "E" form * 00034300
*              generates code to put the parameters into the          * 00034400
*              parameter list specified by xmfctrl and provides full  * 00034500
*              syntax checking with default setting.                  * 00034600
*                                                                     * 00034700
*            ,xmfctrl                                                 * 00034800
*              is a required input.  It is the name (RS-type), or     * 00034900
*              address in register (1)-(12), of a storage area for    * 00035000
*              the parameter list.                                    * 00035100
*                                                                     * 00035200
*            ,COMPLETE                                              * 00035300
*              is an optional keyword input which specifies the       * 00035400
*              degree of macro parameter syntax checking.             * 00035500
*              DEFAULT: COMPLETE                                      * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*              COMPLETE                                               * 00035900
*                  Checking for required macro keys is done and       * 00036000
*                  defaults are supplied for omitted optional         * 00036100
*                  parameters.                                        * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*01* RETURN CODES:                                                    * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*            0    Mailbox was successfully deleted.                   * 00037300
*                                                                     * 00037400
*            4    Mailbox could not be deleted due to user error.     * 00037500
*                                                                     * 00037600
*            C    Mailbox could not be deleted due to a system abend. * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*01* REASON CODES:                                                    * 00038100
*                                                                     * 00038200
*       REASON    RETURN                                              * 00038300
*       CODE      CODE      DESCRIPTION                               * 00038400
*                                          * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*              0  0         The   mailbox   has   been  cleared.  All * 00038800
*                           messages   that   were   waiting   to  be * 00038900
*                           processed  have  been acknowledged with a * 00039000
*                           return   code  that  indicates  that  the * 00039100
*                           message was not processed.                * 00039200
*                                                                     * 00039300
*              4  4         Processing  failed  because the parameter * 00039400
*                           list   passed  to  the  IXZXIXMD  service * 00039500
*                           routine does not have a valid eyecatcher. * 00039600
*                                                                     * 00039700
*              8  4         Processing  failed because, the parameter * 00039800
*                           list   passed  to  the  IXZXIXMD  service * 00039900
*                           routine had an invalid version indicator. * 00040000
*                           The caller may need to be recompiled.     * 00040100
*                                                                     * 00040200
*              C  4         The  grouptoken  passed  to  the IXZXIXMD * 00040300
*                           macro  service is not valid.  The request * 00040400
*                           is rejected.                              * 00040500
*                                                                     * 00040600
*             10  4         The   mailbox  name  specified  does  not * 00040700
*                           exist.  The request is rejected.          * 00040800
*                                                                     * 00040900
*             14  4         Processing  failed  because, the ASCB and * 00041000
*                           or  TCB  of  the  caller  of  the IXZIXMD * 00041100
*                           service routine do not match those of the * 00041200
*                           builders (the callers of the IXZXIXMB ).  * 00041300
*                                                                     * 00041400
*             18  4         Processing   failed  because,the  IXZIXMD * 00041500
*                           service  routine  was  called on a member * 00041600
*                           that is detaching.                        * 00041700
*                                                                     * 00041800
*             1C  4         Processing  failed because, the parameter * 00041900
*                           list   passed  to  the  IXZXIXMD  service * 00042000
*                           routine  had  an  invalid  mailbox  name. * 00042100
*                           Only A-Z, 0-9 and $ @ # are valid.        * 00042200
*                                                                     * 00042300
*              0  C         Processing  failed  because, the IXZXIXMD * 00042400
*                           service routine abended.                  * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00042900
*                                                                     * 00043000
*02*   PROCESSOR:  ASSEM                                              * 00043100
*                                                                     * 00043200
*01* COMPONENT:  SCJSC                                                * 00043300
*                                                                     * 00043400
*01* MACRO USAGE NOTES:                                               * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00043800
*        global macro variable.  Any value other than 'NO' will       * 00043900
*        result in the macro expansion being printed.  The default is * 00044000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00044100
*        variable should be set.                                      * 00044200
*                                                                     * 00044300
*                    GBLC &ZPRINT                                     * 00044400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*    2.  All   keys   currently   contained  in  the  IXZXIXMD  macro * 00044800
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00044900
*        value of 1 or MAX.                                           * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*01* CHANGE ACTIVITY:                                                 * 00045500
*                                                                     * 00045600
*   Flag LineItem  FMID    Date   ID    Comment                       * 00045700
*                                                                     * 00045800
*    $N0=JESXCF   HBB5510 921128 PD0AL:                               * 00045900
****** END OF SPECIFICATIONS *****************************************/ 00046000
*/********************************************************************* 00046100
         MACRO                                                          00046200
&XLABEL  IXZXIXMD &MBOXNAME=,&GROUPTOKEN=,&STB=,&RTNCODE=,&RSNCODE=,   *00046300
               &PLISTVER=,&MF=                                          00046400
.*                                                                      00046500
*                MACDATE -93/05/10-<1>                                  00046600
.*                                                                      00046700
.*******************************************************************    00046800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00046900
.*******************************************************************    00047000
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00047100
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00047200
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00047300
.*                                                                      00047400
                GBLC  &ZIXZXIXMD  YES=MACRO USED AT LEAST ONCE          00047500
.*******************************************************************    00047600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00047700
.*******************************************************************    00047800
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00047900
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00048000
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00048100
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00048200
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00048300
                LCLA  &ZAWRK      USED AS A WORK AREA                   00048400
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00048500
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00048600
                LCLC  &ZC         CHARACTER WORK VARIABLE               00048700
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00048800
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00048900
                LCLA  &ZMACRET    MACRO RETURN CODE                     00049000
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00049100
.*                                                                      00049200
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00049300
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00049400
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00049500
                LCLC  &ZENDBASEPL               End of base PL          00049600
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00049700
.*******************************************************************    00049800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00049900
.*******************************************************************    00050000
                LCLA  &ZI         INDEX FOR ARRAY                       00050100
                LCLA  &ZJ         INDEX FOR PARMS                       00050200
                LCLA  &ZK         INDEX FOR PARSE                       00050300
                LCLA  &ZLO        LOW RANGE VALUE                       00050400
                LCLA  &ZHI        HIGH RANGE VALUE                      00050500
                LCLC  &ZW         WORK AREA FOR PARM                    00050600
.********************************************************************   00050700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00050800
.********************************************************************   00050900
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00051000
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00051100
.*                                                                      00051200
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00051300
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00051400
                SPLEVEL  TEST                                           00051500
.ZSYS2          ANOP  ,                                                 00051600
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00051700
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00051800
                SYSSTATE TEST                                           00051900
                AGO   .ZSYS4                                            00052000
.ZSYS3          ANOP  ,                                                 00052100
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00052200
.ZSYS4          ANOP  ,                                                 00052300
.*******************************************************************    00052400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00052500
.*******************************************************************    00052600
                LCLC  &XMBOX      ++ NAME                               00052700
                LCLC  &XMBOXNAME  ++ NAME                               00052800
                LCLC  &XGROUPTOKEN              ++ NAME                 00052900
                LCLC  &XSTB       ++ VALUE                              00053000
                LCLC  &XRTNCODE   ++ NAME                               00053100
                LCLC  &XRSNCODE   ++ NAME                               00053200
                LCLA  &XPLISTVER  ++ VALUE                              00053300
                LCLC  &XMF        ++ VALUE                              00053400
                LCLC  &XMFCTRL    ++ NAME                               00053500
                LCLC  &XMFATTR    ++ VALUE                              00053600
                LCLC  &XMFSCK     ++ VALUE                              00053700
.*******************************************************************    00053800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00053900
.*******************************************************************    00054000
                LCLC  &ZXMBOX     ++ INPUT NAME                         00054100
                LCLC  &ZXMBOXNAME               ++ INPUT NAME           00054200
                LCLC  &ZXGROUPTOKEN             ++ INPUT NAME           00054300
                LCLC  &ZXSTB      ++ INPUT VALUE                        00054400
                LCLC  &ZXRTNCODE  ++ OUTPUT NAME                        00054500
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00054600
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00054700
                LCLC  &ZXMF       ++ INPUT VALUE                        00054800
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00054900
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00055000
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00055100
.********************************************************************   00055200
.***AC.PLV01  PROCESS PLISTVER                                      *   00055300
.********************************************************************   00055400
&XPLISTVER      SETA  1                                                 00055500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00055600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00055700
&XPLISTVER      SETA  1                                                 00055800
.ZPLV0          ANOP  ,                                                 00055900
.*                                                                      00056000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00056100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00056200
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00056300
.*-------------------------------------------------------------------   00056400
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00056500
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00056600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00056700
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00056800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00056900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057000
                AGO   .ZPVCK2                                           00057100
.ZPVCK3         ANOP  ,                                                 00057200
.*-------------------------------------------------------------------   00057300
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00057400
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00057500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00057600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00057700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00057800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057900
                AGO   .ZPVCKE                                           00058000
.ZPVCK2         ANOP  ,                                                 00058100
.*-------------------------------------------------------------------   00058200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00058300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00058400
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00058500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00058600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00058700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00058800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00058900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00059000
                AGO   .ZPVCK5                                           00059100
.ZPVCK4         ANOP  ,                                                 00059200
&XPLISTVER      SETA  &PLISTVER(1)                                      00059300
.ZPVCK5         ANOP  ,                                                 00059400
.*-------------------------------------------------------------------   00059500
&ZCVAL          SETC  '&PLISTVER(1)'                                    00059600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00059700
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00059800
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00059900
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00060000
.ZPVCK6         ANOP   ,                                                00060100
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00060200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00060300
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00060400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00060500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060600
.ZPVCKE         ANOP   ,                                                00060700
.********************************************************************   00060800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00060900
.********************************************************************   00061000
                ACTR  10000                                             00061100
.*------------------------------------------------------------------    00061200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00061300
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00061400
.*-------------------------------------------------------------------   00061500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00061600
.ZG23           ANOP  ,                                                 00061700
&ZTLC           SETC 'S'                                                00061800
                AIF   ('&MF(1)' NE '&ZTLC').ZG24                        00061900
&XMF            SETC  'S'         SET KEYWORD                           00062000
                AIF   (N'&MF LE 1).ZG23A        CK NUM                  00062100
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00062200
&ZMS            SETC  '&ZMS.&MF"'                                       00062300
&ZMS            SETC  '&ZMS "MF"'                                       00062400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00062500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00062600
.ZG23A          ANOP  ,                                                 00062700
.*-------------------------------------------------------------------   00062800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062900
.ZG24           ANOP  ,                                                 00063000
&ZTLC           SETC 'L'                                                00063100
                AIF   ('&MF(1)' NE '&ZTLC').ZG31                        00063200
&XMF            SETC  'L'         SET KEYWORD                           00063300
                AIF   (N'&MF LE 3).ZG24A        CK NUM                  00063400
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00063500
&ZMS            SETC  '&ZMS.&MF"'                                       00063600
&ZMS            SETC  '&ZMS "MF"'                                       00063700
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00063800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00063900
.ZG24A          ANOP  ,                                                 00064000
.*-------------------------------------------------------------------   00064100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00064200
                AIF   (N'&SYSLIST NE 0).ZG24B   POSITIONALS?            00064300
                AIF   ('&MBOXNAME' NE '').ZG24B  KEYS?                  00064400
                AIF   ('&GROUPTOKEN' NE '').ZG24B  KEYS?                00064500
                AIF   ('&STB' NE '').ZG24B      KEYS?                   00064600
                AIF   ('&RTNCODE' NE '').ZG24B  KEYS?                   00064700
                AIF   ('&RSNCODE' NE '').ZG24B  KEYS?                   00064800
                AGO    .ZG24C     INVOCATION OKAY                       00064900
.ZG24B          ANOP  ,                                                 00065000
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00065100
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00065200
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00065300
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00065400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00065500
.ZG24C          ANOP  ,                                                 00065600
.*-------------------------------------------------------------------   00065700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00065800
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00065900
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00066000
                AIF   (N'&MF(2) GT 1).ZG26B     MULTI PARMS             00066100
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00066200
.ZG26B          AIF   (K'&MF(2) GT 0).ZG26C                             00066300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00066400
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00066500
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00066600
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00066700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066800
.ZG26C          ANOP  ,                                                 00066900
.*-------------------------------------------------------------------   00067000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00067100
                AIF   (K'&ZXMFCTRL LE 0).ZG26P  NOT I/O                 00067200
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG26P                    00067300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00067400
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00067500
&ZMS            SETC  '&ZMS.&MF"'                                       00067600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00067700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00067800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00067900
.ZG26P          ANOP  ,                                                 00068000
.*-------------------------------------------------------------------   00068100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00068200
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00068300
&XMFATTR        SETC  '0D'                                              00068400
                AIF   (K'&MF(3) LE 0).ZG29B     PARM                    00068500
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00068600
                AIF   (N'&MF(3) GT 1).ZG29B     MULTI PARMS             00068700
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00068800
.ZG29B          ANOP  ,                                                 00068900
.*-------------------------------------------------------------------   00069000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00069100
                AIF   (K'&ZXMFATTR LE 0).ZG29P  NOT I/O                 00069200
                AIF   ('&XMFATTR'(1,1) NE '(').ZG29P                    00069300
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00069400
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00069500
&ZMS            SETC  '&ZMS.&MF"'                                       00069600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00069700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00069800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069900
.ZG29P          ANOP  ,                                                 00070000
.*-------------------------------------------------------------------   00070100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00070200
                AIF   (K'&ZXMFATTR LE 0).ZG29S  NOT I/O                 00070300
                AIF   (K'&XMFATTR LE 60).ZG29S  LNG OK                  00070400
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00070500
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00070600
&ZMS            SETC  '&ZMS.&MF"'                                       00070700
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00070800
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00070900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071000
.ZG29S          ANOP  ,                                                 00071100
.*-------------------------------------------------------------------   00071200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071300
.ZG31           ANOP  ,                                                 00071400
&ZTLC           SETC 'E'                                                00071500
                AIF   ('&MF(1)' NE '&ZTLC').ZG39                        00071600
&XMF            SETC  'E'         SET KEYWORD                           00071700
                AIF   (N'&MF LE 3).ZG31A        CK NUM                  00071800
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00071900
&ZMS            SETC  '&ZMS.&MF"'                                       00072000
&ZMS            SETC  '&ZMS "MF"'                                       00072100
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00072200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072300
.ZG31A          ANOP  ,                                                 00072400
.*-------------------------------------------------------------------   00072500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00072600
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00072700
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00072800
                AIF   (N'&MF(2) GT 1).ZG33B     MULTI PARMS             00072900
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00073000
.ZG33B          AIF   (K'&MF(2) GT 0).ZG33C                             00073100
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00073200
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00073300
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00073400
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00073500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00073600
.ZG33C          ANOP  ,                                                 00073700
.*-------------------------------------------------------------------   00073800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00073900
                AIF   (K'&ZXMFCTRL LE 0).ZG33R  NOT I/O                 00074000
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG33R                    00074100
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00074200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                      00074300
                AIF   (K'&ZCGPR GT 2).ZG33Q                             00074400
                AIF   ('&ZCGPR' EQ '0').ZG33Q                           00074500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00074600
                AIF   (T'&ZCGPR NE 'N').ZG33Q   INVALID REG NAME        00074700
.ZG33P          ANOP  ,                                                 00074800
                AIF   (T'&ZCGPR NE 'N').ZG33R   NON NUMERIC             00074900
                AIF   ('&ZCGPR' LT '1').ZG33Q                           00075000
                AIF   ('&ZCGPR' LE '12').ZG33R                          00075100
.ZG33Q          ANOP  ,                                                 00075200
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00075300
&ZMS            SETC  '&ZMS.&MF"'                                       00075400
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00075500
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00075600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075700
.ZG33R          ANOP  ,                                                 00075800
.*-------------------------------------------------------------------   00075900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00076000
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00076100
.ZG37A   AIF   ('&MF(3)' NE 'COMPLETE').ZG38A                           00076200
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00076300
.*-------------------------------------------------------------------   00076400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00076500
.ZG38A          AIF   (K'&XMFSCK GT 0).ZG38C    KEYWORD                 00076600
                AIF   (K'&MF(3) LE 0).ZG38B                             00076700
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00076800
&ZMS            SETC  '&ZMS.&MF"'                                       00076900
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00077000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00077100
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00077200
                MNOTE 8,' &ZMS '                                        00077300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077400
.ZG38B          ANOP  ,                                                 00077500
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00077600
.ZG38C          ANOP  ,                                                 00077700
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00077800
.*------------------------------------------------------------------    00077900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078000
.ZG39           ANOP  ,                                                 00078100
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00078200
                AIF   (K'&XMF GT 0).ZG39E       VALID ARG               00078300
                AIF   (T'&MF EQ 'O').ZG39D      OMITTED                 00078400
&ZASYSLNDX      SETA  0                                                 00078500
.ZG39A          ANOP  ,           POSITIONAL MACRO KEY                  00078600
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00078700
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C                  00078800
&ZTLC           SETC 'MF'                                               00078900
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A         00079000
.ZG39B          ANOP  ,                                                 00079100
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00079200
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00079300
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00079400
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00079500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079600
                AGO   .ZG39E                                            00079700
.ZG39C          ANOP  ,                                                 00079800
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00079900
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00080000
&ZMS            SETC  '&ZMS.&MF"'                                       00080100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00080200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00080300
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00080400
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00080500
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00080600
                MNOTE 8,' &ZMS '                                        00080700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080800
                AGO   .ZG39E                                            00080900
.ZG39D          ANOP  ,                                                 00081000
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00081100
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00081200
.ZG39E          ANOP  ,                                                 00081300
.********************************************************************   00081400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00081500
.********************************************************************   00081600
                ACTR  10000                                             00081700
.*-------------------------------------------------------------------   00081800
.***AG.MF03 MF=(SLE)                                                    00081900
                AIF   ('&XMF' EQ 'L').ZGMFX                             00082000
.*----------------------------------------------------------------***   00082100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00082200
&XMBOX          SETC  ''          INITIALIZE XVARIABLE                  00082300
                AIF   (K'&MBOXNAME LE 0).ZG2C                           00082400
&ZXMBOX         SETC  'INPUT'     SET IN/OUTPUT                         00082500
&XMBOX          SETC  'MBOXNAME'  SET XVARIABLE                         00082600
&ZXMBOXNAME     SETC  'INPUT'     SET IN/OUTPUT                         00082700
&XMBOXNAME      SETC  '&MBOXNAME(1)'            SET XVARIABLE PARM      00082800
                AIF   (N'&MBOXNAME GT 1).ZG2A   MULTIPLE PARMS          00082900
&XMBOXNAME      SETC  '&MBOXNAME'               SET XVARIABLE PARM      00083000
.ZG2A           AIF   (N'&MBOXNAME LE 1).ZG2B   CK NUM                  00083100
&ZMS            SETC  '"MBOXNAME='              *KPOSA* MNOTE           00083200
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00083300
&ZMS            SETC  '&ZMS "MBOXNAME"'                                 00083400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00083500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083600
.ZG2B           AIF   (K'&XMBOXNAME GT 0).ZG2C  ONE PARM                00083700
&ZXMBOX         SETC  ''          RESET IN/OUTPUT                       00083800
&ZXMBOXNAME     SETC  ''          RESET IN/OUTPUT                       00083900
&ZMS            SETC  ' '         *KRQDA*                               00084000
&ZMS            SETC  '&ZMS "MBOXNAME" KEY AND ITS ARGUMENT'            00084100
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00084200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084300
.ZG2C           ANOP  ,                                                 00084400
.*------------------------------------------------------------------    00084500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00084600
                AIF   (K'&XMBOX GT 0).ZG3B                              00084700
&ZXMBOX         SETC  ''          RESET IN/OUTPUT                       00084800
&ZXMBOXNAME     SETC  ''          RESET IN/OUTPUT                       00084900
&XMBOX          SETC  ''          ENSURE NULL                           00085000
&XMBOXNAME      SETC  ''          ENSURE NULL                           00085100
&ZMS            SETC  'ONE OF THE FOLLOWING'    *KMERA* MNOTE           00085200
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00085300
&ZMS            SETC  '&ZMS REQUIRED:'                                  00085400
&ZMS            SETC  '&ZMS "MBOXNAME".'        VALID ME KEY            00085500
                MNOTE 8,' &ZMS '                                        00085600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00085700
.ZG3B           ANOP  ,                                                 00085800
.*-------------------------------------------------------------------   00085900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00086000
.ZG2            AIF   ('&XMBOX' NE 'MBOXNAME').ZG3                      00086100
.*-------------------------------------------------------------------   00086200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00086300
                AIF   (K'&ZXMBOXNAME LE 0).ZG2R  NOT I/O                00086400
                AIF   ('&XMBOXNAME'(1,1) NE '(').ZG2R                   00086500
&ZCGPR          SETC  '&XMBOXNAME'(2,K'&XMBOXNAME-2)                    00086600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00086700
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00086800
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00086900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00087000
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00087100
.ZG2P           ANOP  ,                                                 00087200
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00087300
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00087400
                AIF   ('&ZCGPR' LE '12').ZG2R                           00087500
.ZG2Q           ANOP  ,                                                 00087600
&ZMS            SETC  '"MBOXNAME='              *KGPRA* MNOTE           00087700
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00087800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00087900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00088000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00088100
.ZG2R           ANOP  ,                                                 00088200
.*-------------------------------------------------------------------   00088300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00088400
.ZG3            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           00088500
.*----------------------------------------------------------------***   00088600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00088700
                AIF   (N'&GROUPTOKEN LE 1).ZG5A  CK NUM                 00088800
&ZMS            SETC  '"GROUPTOKEN='            *KPOSA* MNOTE           00088900
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00089000
&ZMS            SETC  '&ZMS "GROUPTOKEN"'                               00089100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00089200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00089300
.ZG5A           ANOP  ,                                                 00089400
.*-------------------------------------------------------------------   00089500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00089600
&ZXGROUPTOKEN   SETC  'INPUT'     SET IN/OUTPUT                         00089700
&XGROUPTOKEN    SETC  '&GROUPTOKEN(1)'          SET XVARIABLE           00089800
                AIF   (N'&GROUPTOKEN GT 1).ZG5B  MULTI PARMS            00089900
&XGROUPTOKEN    SETC  '&GROUPTOKEN'             SET XVARIABLE           00090000
.ZG5B           AIF   (K'&GROUPTOKEN(1) GT 0).ZG5C                      00090100
&ZXGROUPTOKEN   SETC  ''          RESET IN/OUTPUT                       00090200
&ZMS            SETC  ' '         *KRQDA*                               00090300
&ZMS            SETC  '&ZMS "GROUPTOKEN" KEY AND ITS ARGUMENT'          00090400
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00090500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090600
.ZG5C           ANOP  ,                                                 00090700
.*-------------------------------------------------------------------   00090800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00090900
                AIF   (K'&ZXGROUPTOKEN LE 0).ZG5R  NOT I/O              00091000
                AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZG5R                 00091100
&ZCGPR          SETC  '&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2)                00091200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00091300
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00091400
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00091500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00091600
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00091700
.ZG5P           ANOP  ,                                                 00091800
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00091900
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00092000
                AIF   ('&ZCGPR' LE '12').ZG5R                           00092100
.ZG5Q           ANOP  ,                                                 00092200
&ZMS            SETC  '"GROUPTOKEN='            *KGPRA* MNOTE           00092300
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00092400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00092500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00092600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092700
.ZG5R           ANOP  ,                                                 00092800
.*----------------------------------------------------------------***   00092900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00093000
                AIF   (N'&STB LE 1).ZG8A        CK NUM                  00093100
&ZMS            SETC  '"STB='     *KPOSA* MNOTE                         00093200
&ZMS            SETC  '&ZMS.&STB"'                                      00093300
&ZMS            SETC  '&ZMS "STB"'                                      00093400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00093500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00093600
.ZG8A           ANOP  ,                                                 00093700
.*-------------------------------------------------------------------   00093800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00093900
&XSTB           SETC  ''          INITIALIZE XVARIABLE                  00094000
.ZG9A   AIF   ('&STB(1)' NE 'NO').ZG10A                                 00094100
&XSTB           SETC  'NO'        SET KEYWORD                           00094200
.*-------------------------------------------------------------------   00094300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00094400
.ZG10A   AIF   ('&STB(1)' NE 'YES').ZG11A                               00094500
&XSTB           SETC  'YES'       SET KEYWORD                           00094600
.*-------------------------------------------------------------------   00094700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00094800
.ZG11A          AIF   (K'&XSTB GT 0).ZG11C      KEYWORD                 00094900
                AIF   (K'&STB(1) LE 0).ZG11B                            00095000
&ZMS            SETC  '"STB='     *KUKWA* MNOTE                         00095100
&ZMS            SETC  '&ZMS.&STB"'                                      00095200
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00095300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00095400
&ZMS            SETC  '&ZMS "NO"'               VALID KEYWORD           00095500
&ZMS            SETC  '&ZMS OR "YES".'          VALID KEYWORD           00095600
                MNOTE 8,' &ZMS '                                        00095700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095800
.ZG11B          ANOP  ,                                                 00095900
&XSTB           SETC  'NO'        SET DEFAULT KEYWORD                   00096000
.ZG11C          ANOP  ,                                                 00096100
&ZXSTB          SETC  'INPUT'     SET IN/OUTPUT                         00096200
.*----------------------------------------------------------------***   00096300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096400
                AIF   (N'&RTNCODE LE 1).ZG13A   CK NUM                  00096500
&ZMS            SETC  '"RTNCODE='               *KPOSA* MNOTE           00096600
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00096700
&ZMS            SETC  '&ZMS "RTNCODE"'                                  00096800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00096900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00097000
.ZG13A          ANOP  ,                                                 00097100
.*-------------------------------------------------------------------   00097200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097300
                AIF   (K'&RTNCODE(1) LE 0).ZG13C  NO PARM               00097400
&ZXRTNCODE      SETC  'OUTPUT'    SET OUTPUT                            00097500
&XRTNCODE       SETC  '&RTNCODE(1)'             SET XVARIABLE           00097600
                AIF   (N'&RTNCODE GT 1).ZG13C                           00097700
&XRTNCODE       SETC  '&RTNCODE'  SET XVARIABLE                         00097800
.ZG13C          ANOP  ,                                                 00097900
.*-------------------------------------------------------------------   00098000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00098100
                AIF   (K'&ZXRTNCODE LE 0).ZG13R  NOT I/O                00098200
                AIF   ('&XRTNCODE'(1,1) NE '(').ZG13R                   00098300
&ZCGPR          SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                      00098400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                      00098500
                AIF   (K'&ZCGPR GT 2).ZG13Q                             00098600
                AIF   ('&ZCGPR' EQ '0').ZG13Q                           00098700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00098800
                AIF   (T'&ZCGPR NE 'N').ZG13Q   INVALID REG NAME        00098900
.ZG13P          ANOP  ,                                                 00099000
                AIF   (T'&ZCGPR NE 'N').ZG13R   NON NUMERIC             00099100
                AIF   ('&ZCGPR' LT '2').ZG13Q                           00099200
                AIF   ('&ZCGPR' LE '12').ZG13R                          00099300
.ZG13Q          ANOP  ,                                                 00099400
&ZMS            SETC  '"RTNCODE='               *KGPRA* MNOTE           00099500
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00099600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00099700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00099800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099900
.ZG13R          ANOP  ,                                                 00100000
.*----------------------------------------------------------------***   00100100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00100200
                AIF   (N'&RSNCODE LE 1).ZG16A   CK NUM                  00100300
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00100400
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00100500
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00100600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00100700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00100800
.ZG16A          ANOP  ,                                                 00100900
.*-------------------------------------------------------------------   00101000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00101100
                AIF   (K'&RSNCODE(1) LE 0).ZG16C  NO PARM               00101200
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00101300
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00101400
                AIF   (N'&RSNCODE GT 1).ZG16C                           00101500
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00101600
.ZG16C          ANOP  ,                                                 00101700
.*-------------------------------------------------------------------   00101800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00101900
                AIF   (K'&ZXRSNCODE LE 0).ZG16R  NOT I/O                00102000
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG16R                   00102100
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00102200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                      00102300
                AIF   (K'&ZCGPR GT 2).ZG16Q                             00102400
                AIF   ('&ZCGPR' EQ '0').ZG16Q                           00102500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00102600
                AIF   (T'&ZCGPR NE 'N').ZG16Q   INVALID REG NAME        00102700
.ZG16P          ANOP  ,                                                 00102800
                AIF   (T'&ZCGPR NE 'N').ZG16R   NON NUMERIC             00102900
                AIF   ('&ZCGPR' LT '2').ZG16Q                           00103000
                AIF   ('&ZCGPR' LE '12').ZG16R                          00103100
.ZG16Q          ANOP  ,                                                 00103200
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00103300
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00103400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00103500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00103600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103700
.ZG16R          ANOP  ,                                                 00103800
.******************************************************************     00103900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00104000
.******************************************************************     00104100
                ACTR  10000                                             00104200
.*----------------------------------------------------------------***   00104300
.***AH.P02 EXTRA POSITIONALS                                            00104400
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00104500
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00104600
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00104700
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00104800
.ZGLISTX1       ANOP  ,                                                 00104900
&ZCVAL          SETC  ''          ERROR FIELD                           00105000
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00105100
.ZGLIST2        ANOP  ,                                                 00105200
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00105300
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00105400
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00105500
                AGO   .ZGLIST2                                          00105600
.*                                                                      00105700
.ZGLIST3        ANOP  ,                                                 00105800
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00105900
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00106000
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00106100
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00106200
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00106300
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00106400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106500
.ZGLISTX        ANOP  ,                                                 00106600
&ZASYSLNDX      SETA  0                                                 00106700
.*-------------------------------------------------------------------   00106800
.***AG.MF04 MF=(SLE)                                                    00106900
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00107000
.*******************************************************************    00107100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00107200
.*******************************************************************    00107300
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00107400
.*******************************************************************    00107500
.***AE.01  START OF IXZXIXMD MACRO CODE                                 00107600
.*******************************************************************    00107700
                LCLC  &M0M0001                 NAME                     00107800
&M0M0001        SETC  '&XLABEL'                SET NAME                 00107900
                AIF   (K'&XLABEL NE 0).XLAB2                            00108000
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00108100
.*                                                                      00108200
.XLAB2          ANOP  ,                                                 00108300
&M0M0001 DS    0H                             IXZXIXMD-1                00108400
.*******************************************************************    00108500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00108600
.*******************************************************************    00108700
              PUSH  PRINT                                               00108800
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00108900
                PRINT OFF         ++ PR01                               00109000
                AGO   .ZPRNTXX                                          00109100
.ZPRINTX        PRINT ON                                                00109200
.ZPRNTXX        ANOP  ,                                                 00109300
.********************************************************************   00109400
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00109500
.********************************************************************   00109600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00109700
                      LCLA  &ZOPN1         INVOCATION INDEX             00109800
                      LCLC  &ZOPL(4095)    LABEL                        00109900
                      LCLC  &ZOPO(4095)    OPERATION                    00110000
                      LCLC  &ZOPV(4095)    VALUE                        00110100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00110200
.*                                                                      00110300
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00110400
.******************************************************************     00110500
.***AL.L10 IXZXIXMD FMT=LIST MF=S|L PARAMETERS                          00110600
.******************************************************************     00110700
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00110800
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00110900
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00111000
&XMFATTR              SETC  '0D'                                        00111100
.*                                                                      00111200
&ZOPN                 SETA  &ZOPN+1                                     00111300
&ZOPL(&ZOPN)          SETC  ' '                                         00111400
&ZOPO(&ZOPN)          SETC  'B'                                         00111500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00111600
&ZOPD(&ZOPN)          SETC  '++ IXZXIXMD ARG PARMS'                     00111700
.*                                                                      00111800
&ZOPN                 SETA  &ZOPN+1                                     00111900
&ZOPL(&ZOPN)          SETC  ' '                                         00112000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00112100
&ZOPV(&ZOPN)          SETC  '1'                                         00112200
&ZOPD(&ZOPN)          SETC  ' '                                         00112300
.*                                                                      00112400
.ZLMFSL2              ANOP  ,                                           00112500
.*-------------------------------------------------------------------   00112600
.***AM.L01  IXZXIXMD FMT=LIST PARAMETERS                                00112700
&ZOPN                 SETA &ZOPN+1                                      00112800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00112900
&ZOPO(&ZOPN)          SETC 'DS'                                         00113000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00113100
&ZOPD(&ZOPN)          SETC '++ IXZXIXMD PARM LIST'                      00113200
.*-------------------------------------------------------------------   00113300
.***AM.L02 XVERSION XL1                                                 00113400
&ZOPN                 SETA &ZOPN+1                                      00113500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00113600
&ZOPO(&ZOPN)          SETC 'DS'                                         00113700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00113800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00113900
.*-------------------------------------------------------------------   00114000
.***AM.L09  XEYECATCH CL6                                               00114100
&ZOPN                 SETA &ZOPN+1                                      00114200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEYECATCH'                        00114300
&ZOPO(&ZOPN)          SETC 'DS'                                         00114400
&ZOPV(&ZOPN)          SETC 'CL6'                                        00114500
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XEYECATCH'                     00114600
.*-------------------------------------------------------------------   00114700
.***AM.L03 XSTB BL.8                                                    00114800
&ZOPN                 SETA &ZOPN+1                                      00114900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTB'                             00115000
&ZOPO(&ZOPN)          SETC 'DS'                                         00115100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00115200
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00115300
.*                                                                      00115400
&ZOPN                 SETA  &ZOPN+1                                     00115500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTB_NO'                         00115600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00115700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00115800
&ZOPD(&ZOPN)          SETC  '++ XSTB.'                                  00115900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00116000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00116100
.*                                                                      00116200
&ZOPN                 SETA  &ZOPN+1                                     00116300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTB_YES'                        00116400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00116500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00116600
&ZOPD(&ZOPN)          SETC  '++ XSTB.'                                  00116700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00116800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00116900
.*-------------------------------------------------------------------   00117000
.***AM.L09  XMBOXNAME CL16                                              00117100
&ZOPN                 SETA &ZOPN+1                                      00117200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMBOXNAME'                        00117300
&ZOPO(&ZOPN)          SETC 'DS'                                         00117400
&ZOPV(&ZOPN)          SETC 'CL16'                                       00117500
&ZOPD(&ZOPN)          SETC '++ &ZXMBOXNAME  XMBOXNAME'                  00117600
.*-------------------------------------------------------------------   00117700
.***AM.L09  XGROUPTOKEN F                                               00117800
&ZOPN                 SETA &ZOPN+1                                      00117900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPTOKEN'                      00118000
&ZOPO(&ZOPN)          SETC 'DS'                                         00118100
&ZOPV(&ZOPN)          SETC 'F'                                          00118200
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPTOKEN  XGROUPTOKEN'              00118300
.*-------------------------------------------------------------------   00118400
.***AM.L10 END OF IXZXIXMD LIST PARAMETERS                              00118500
&ZOPN                 SETA &ZOPN+1                                      00118600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00118700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00118800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00118900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00119000
.*                                                                      00119100
&ZOPN                 SETA &ZOPN+1                                      00119200
&ZOPL(&ZOPN)          SETC ' '                                          00119300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00119400
&ZOPV(&ZOPN)          SETC '1'                                          00119500
&ZOPD(&ZOPN)          SETC ' '                                          00119600
.*-------------------------------------------------------------------   00119700
.***AL.L12 IXZXIXMD FMT=LIST MF=S|L PARAMETERS                          00119800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00119900
.*                                                                      00120000
&ZOPN                 SETA  &ZOPN+1                                     00120100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00120200
&ZOPO(&ZOPN)          SETC  'DC'                                        00120300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00120400
&ZOPD(&ZOPN)          SETC  '++ IXZXIXMD ARG PARMS'                     00120500
.*                                                                      00120600
.ZLMFSLX              ANOP  ,                                           00120700
.*-------------------------------------------------------------------   00120800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00120900
&ZPLLEN               SETA 28                                           00121000
.*                                                                      00121100
.******************************************************************     00121200
.***AI.L01 IXZXIXMD FMT=LIST FILL IN PARAMETER AREA                     00121300
.******************************************************************     00121400
                      ACTR  10000                                       00121500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00121600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00121700
&ZCVAL                SETC  'LAE'          XAX MODE                     00121800
.ZIMFXA               ANOP ,                                            00121900
.*                                                                      00122000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00122100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00122200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00122300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00122400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00122500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00122600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00122700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00122800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00122900
&ZOPN                 SETA  &ZOPN+1                                     00123000
&ZOPL(&ZOPN)          SETC  ' '                                         00123100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00123200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00123300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00123400
                      AGO   .ZIMFNX                                     00123500
.*                                                                      00123600
.ZIMFN2               ANOP ,                                            00123700
&ZOPN                 SETA  &ZOPN+1                                     00123800
&ZOPL(&ZOPN)          SETC  ' '                                         00123900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00124000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00124100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00124200
.ZIMFNX               ANOP ,                                            00124300
.********************************************************************   00124400
.***AI.L02 IXZXIXMD FMT=LIST INITIALIZE PARAMETER AREA                  00124500
.********************************************************************   00124600
.***AI.L03 MF=(SLE)                                                     00124700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00124800
.*                                                                      00124900
&ZOPN                 SETA  &ZOPN+1                                     00125000
&ZOPL(&ZOPN)          SETC  ' '                                         00125100
&ZOPO(&ZOPN)          SETC  'XC'                                        00125200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00125300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00125400
.ZIMFLX               ANOP  ,                                           00125500
.*-------------------------------------------------------------------   00125600
.***AI.L04B XVERSION XL1                                                00125700
                      AIF   (&XPLISTVER EQ 0).ZIMFVX                    00125800
&ZOPN                 SETA  &ZOPN+1                                     00125900
&ZOPL(&ZOPN)          SETC  ' '                                         00126000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00126100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00126200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00126300
.ZIMFVX               ANOP  ,                                           00126400
.*-------------------------------------------------------------------   00126500
.***AI.L60 XEYECATCH CL6                                                00126600
&ZOPN                 SETA  &ZOPN+1                                     00126700
&ZOPL(&ZOPN)          SETC  ' '                                         00126800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00126900
&ZOPV(&ZOPN)          SETC  '1(6,1),=CL6''YIXMD '''                     00127000
&ZOPD(&ZOPN)          SETC  '++ CL6 CONSTANT'                           00127100
.*-------------------------------------------------------------------   00127200
.***AI.L05 XSTB BL1                                                     00127300
&ZW                   SETC  ''                                          00127400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00127500
.*-------------------------------------------------------------------   00127600
.***AI.L08 XSTB "NO"                                                    00127700
.***      BL1'1XXXXXXX'                                                 00127800
         AIF   ('&XSTB' NE 'NO').ZI4A                                   00127900
&ZW                   SETC  '&ZW.1'                                     00128000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00128100
                      AGO   .ZI4C                                       00128200
.*                                                                      00128300
.ZI4A                 ANOP  ,                                           00128400
&ZW                   SETC  '&ZW.0'                                     00128500
.ZI4C                 ANOP  ,                                           00128600
.*-------------------------------------------------------------------   00128700
.***AI.L08 XSTB "YES"                                                   00128800
.***      BL1'X1XXXXXX'                                                 00128900
         AIF   ('&XSTB' NE 'YES').ZI5A                                  00129000
&ZW                   SETC  '&ZW.1000000'                               00129100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00129200
                      AGO   .ZI5C                                       00129300
.*                                                                      00129400
.ZI5A                 ANOP  ,                                           00129500
&ZW                   SETC  '&ZW.0000000'                               00129600
.ZI5C                 ANOP  ,                                           00129700
.*-------------------------------------------------------------------   00129800
.***AI.L11 XSTB BL1                                                     00129900
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00130000
&ZOPN                 SETA  &ZOPN+1                                     00130100
&ZOPL(&ZOPN)          SETC  ' '                                         00130200
&ZOPO(&ZOPN)          SETC  'OI'                                        00130300
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00130400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00130500
.ZI5E                 ANOP  ,                                           00130600
.*-------------------------------------------------------------------   00130700
.***AI.L25  XMBOXNAME CL16                                              00130800
                      AIF   ('&ZXMBOXNAME' EQ '').ZI6E                  00130900
                      AIF   ('&ZXMBOXNAME' EQ 'OUTPUT').ZI6E            00131000
&ZCGPR                SETC  '&XMBOXNAME'                                00131100
.*                                                                      00131200
                      AIF   ('&XMBOXNAME'(1,1) NE '(').ZI6B             00131300
&ZCGPR   SETC  '0('.'&XMBOXNAME'(2,K'&XMBOXNAME-2).')'                  00131400
.ZI6B                 ANOP  ,                                           00131500
.*                                                                      00131600
&ZOPN                 SETA  &ZOPN+1                                     00131700
&ZOPL(&ZOPN)          SETC  ' '                                         00131800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00131900
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00132000
&ZOPD(&ZOPN)          SETC  '++ &ZXMBOXNAME XMBOXNAME'                  00132100
.*                                                                      00132200
.ZI6E                 ANOP  ,                                           00132300
.*-------------------------------------------------------------------   00132400
.***AI.L25  XGROUPTOKEN F                                               00132500
                      AIF   ('&ZXGROUPTOKEN' EQ '').ZI7E                00132600
                      AIF   ('&ZXGROUPTOKEN' EQ 'OUTPUT').ZI7E          00132700
&ZCGPR                SETC  '&XGROUPTOKEN'                              00132800
.*                                                                      00132900
                      AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZI7B           00133000
&ZCGPR   SETC  '0('.'&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2).')'              00133100
                      AGO   .ZI7D                                       00133200
.ZI7B                 ANOP  ,                                           00133300
.*                                                                      00133400
&ZC                   SETC  '&XGROUPTOKEN'(1,1)                         00133500
                      AIF   (T'&ZC NE 'N').ZI7D                         00133600
&ZC                   SETC  '&XGROUPTOKEN'                              00133700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00133800
&ZCGPR                SETC  '=FL4''&XGROUPTOKEN'''                      00133900
.*                                                                      00134000
.ZI7D                 ANOP  ,                                           00134100
.*                                                                      00134200
&ZOPN                 SETA  &ZOPN+1                                     00134300
&ZOPL(&ZOPN)          SETC  ' '                                         00134400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00134500
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00134600
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPTOKEN XGROUPTOKEN'              00134700
.*                                                                      00134800
.ZI7E                 ANOP  ,                                           00134900
.*-------------------------------------------------------------------   00135000
&ZOPN1                SETA &ZOPN                                        00135100
.*******************************************************************    00135200
.***  PROCESS IXZXIXMD OUTPUT PARAMETERS                                00135300
.*******************************************************************    00135400
                      ACTR  10000                                       00135500
.*******************************************************************    00135600
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00135700
.*******************************************************************    00135800
&ZOPN                 SETA  &ZOPN+1                                     00135900
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00136000
&ZOPO(&ZOPN)          SETC  'DS'                                        00136100
&ZOPV(&ZOPN)          SETC  '0H'                                        00136200
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00136300
.*******************************************************************    00136400
.***AO.X02  RETURN CODE PROCESSING                                      00136500
.*******************************************************************    00136600
                      AIF   (N'&RTNCODE LE 0).ZMRETX                    00136700
                      AIF   ('&XRTNCODE'(1,1) EQ '(').ZMRET2            00136800
                      AIF   ('&XRTNCODE' EQ 'GPR15').ZMRETX             00136900
                      AIF   ('&XRTNCODE' EQ 'REG15').ZMRETX             00137000
                      AIF   ('&XRTNCODE' EQ 'R15').ZMRETX               00137100
                      AIF   ('&XRTNCODE' EQ '15').ZMRETX                00137200
&ZOPN                 SETA  &ZOPN+1                                     00137300
&ZOPL(&ZOPN)          SETC  ' '                                         00137400
&ZOPO(&ZOPN)          SETC  'ST'                                        00137500
&ZOPV(&ZOPN)          SETC  '15,&XRTNCODE'                              00137600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00137700
                      AGO   .ZMRETX                                     00137800
.*                                                                      00137900
.ZMRET2               ANOP  ,                                           00138000
&ZCGPR                SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                00138100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00138200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00138300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00138400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00138500
&ZOPN                 SETA  &ZOPN+1                                     00138600
&ZOPL(&ZOPN)          SETC  ' '                                         00138700
&ZOPO(&ZOPN)          SETC  'LR'                                        00138800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00138900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00139000
.ZMRETX               ANOP  ,                                           00139100
.*******************************************************************    00139200
.***AO.X03  REASON CODE PROCESSING                                      00139300
.*******************************************************************    00139400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00139500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00139600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00139700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00139800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00139900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00140000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00140100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00140200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00140300
&ZOPN                 SETA  &ZOPN+1                                     00140400
&ZOPL(&ZOPN)          SETC  ' '                                         00140500
&ZOPO(&ZOPN)          SETC  'ST'                                        00140600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00140700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00140800
                      AGO   .ZMRSNX                                     00140900
.*                                                                      00141000
.ZMRSN2               ANOP  ,                                           00141100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00141200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00141300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00141400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00141500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00141600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00141700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00141800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00141900
&ZOPN                 SETA  &ZOPN+1                                     00142000
&ZOPL(&ZOPN)          SETC  ' '                                         00142100
&ZOPO(&ZOPN)          SETC  'LR'                                        00142200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00142300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00142400
.ZMRSNX               ANOP  ,                                           00142500
.*******************************************************************    00142600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00142700
.*******************************************************************    00142800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00142900
.*******************************************************************    00143000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00143100
.*******************************************************************    00143200
                      ACTR  10000                                       00143300
.*                                                                      00143400
                      LCLA  &ZLC           COLUMN POSITION              00143500
                      LCLA  &ZOPX          LIST TABLE INDEX             00143600
                      LCLC  &ZLL           LABEL                        00143700
                      LCLC  &ZLOP          OPERATION                    00143800
                      LCLC  &ZLV           VALUE                        00143900
                      LCLC  &ZLD           DESCRIPTION                  00144000
.*                                                                      00144100
&ZOPX                 SETA  1                                           00144200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00144300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00144400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00144500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00144600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00144700
                      AIF   (K'&ZLD LE 0).ZL5                           00144800
&ZLC                  SETA  35             COMMENT COLUMN               00144900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00145000
&ZLC                  SETA  33             COMMMENT COLUMN              00145100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00145200
&ZLV                  SETC  '&ZLV'.' '                                  00145300
                      AGO   .ZL3                                        00145400
.*                                                                      00145500
.ZL4                  ANOP  ,                                           00145600
&ZLV                  SETC  '&ZLV'.' '                                  00145700
.ZL5                  ANOP  ,                                           00145800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00145900
.*                                                                      00146000
&ZLL     &ZLOP &ZLV                                                     00146100
.*                                                                      00146200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00146300
                      AGO   .ZL2           CONTINUE LOOPING             00146400
.*                                                                      00146500
.ZLX                  ANOP  ,                                           00146600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00146700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00146800
         GBLC  &ANVIRON           JES2 environment variable             00146900
         GBLB  &J3MN              JES3 Main Task environment            00147000
         GBLB  &J3ST              JES3 Subtask environment              00147100
         GBLB  &J3FSS             JES3 FSS environment                  00147200
         GBLB  &J3USR             JES3 User environment                 00147300
         GBLB  &JSXCF             JESXCF environment                    00147400
         AIF   ('&ANVIRON' EQ 'JES2').IXMD050  JES2 Main task           00147500
         AIF   ('&ANVIRON' EQ 'SUBTASK').IXMD050 JES2 Subtask           00147600
         AIF   (&J3MN).IXMD050    Are we running under JES3 Main task   00147700
         AIF   (&J3ST).IXMD050    Are we running under JES3 Sub task    00147800
         AIF   (&J3FSS).IXMD050   Are we running under JES3 FSS         00147900
         MNOTE 8,'IXZ0001 Running in an invalid environment'            00148000
.IXMD050 ANOP                                                           00148100
         AIF   ('&GROUPTOKEN'(1,1) NE '(').IXMD100                      00148200
         LR    14,&GROUPTOKEN     Load the address of the group token   00148300
         L     14,0(14)           Load the group token                  00148400
         AGO   .IXMD150                                                 00148500
.IXMD100 ANOP                                                           00148600
         L     14,&GROUPTOKEN     Load the group token                  00148700
.IXMD150 ANOP                                                           00148800
         L     14,48(14)          Load the PC number of the             00148900
*                                 routine to be called                  00149000
         PC    0(14)              Call the mailbox delete routine       00149100
         LA    1,&XMFCTRL         Restore the parameter list            00149200
*                                  address                              00149300
         AIF   ('&XMFCTRL'(1,1) NE '(').IXMD200                         00149400
         LR    1,&XMFCTRL         Restore the parameter list address    00149500
         AGO   .IXMD250                                                 00149600
.IXMD200 ANOP                                                           00149700
         LA    1,&XMFCTRL         Restore the parameter list address    00149800
.IXMD250 ANOP                                                           00149900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00150000
.ZLINKX               ANOP  ,                                           00150100
.*******************************************************************    00150200
.***AP.X01  FORMAT GENERATED CODE                                       00150300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00150400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00150500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00150600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00150700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00150800
                      AIF   (K'&ZLD LE 0).ZL51                          00150900
&ZLC                  SETA  35             COMMENT COLUMN               00151000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00151100
&ZLC                  SETA  33             COMMENT COLUMN               00151200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00151300
&ZLV                  SETC  '&ZLV'.' '                                  00151400
                      AGO   .ZL31                                       00151500
.*                                                                      00151600
.ZL41                 ANOP  ,                                           00151700
&ZLV                  SETC  '&ZLV'.' '                                  00151800
.ZL51                 ANOP  ,                                           00151900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00152000
.*                                                                      00152100
&ZLL     &ZLOP &ZLV                                                     00152200
.*                                                                      00152300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00152400
                      AGO   .ZL21          CONTINUE LOOPING             00152500
.*                                                                      00152600
.ZLX1                 ANOP  ,                                           00152700
.*******************************************************************    00152800
.***AP.X02  END OF IXZXIXMD MACRO                                       00152900
&ZIXZXIXMD            SETC  'YES'          SET IXZXIXMD USED            00153000
         POP   PRINT                                                    00153100
*                                            IXZXIXMD-1                 00153200
         SPACE 1                                                        00153300
.ZLX2                 ANOP  ,                                           00153400
         MEND                                                           00153500
**********************************************************************/ 00153600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00153700
*%IXZXIXMD: MACRO KEYS(MBOXNAME,GROUPTOKEN,STB,RTNCODE,RSNCODE,         00153800
*                 PLISTVER,MF);                                         00153900
*  ANS('?'||MACLABEL||' '||'IXZPIXMD '||MACLIST||                       00154000
*         ' '||MACKEYS||';') COL(MACLMAR);                              00154100
*%END IXZXIXMD;                                                         00154200
