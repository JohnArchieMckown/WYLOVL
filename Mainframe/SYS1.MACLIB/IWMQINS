*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMQINS                               -08/03/01-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Queue Manager Insert Service              * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001200
*                                                                     * 00001300
* STATUS= HBB6603                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMQINS service inserts a work request onto workload       * 00002100
*      management queues so its execution in a server address space   * 00002200
*      can be managed by WLM.                                         * 00002300
*                                                                     * 00002400
*      Before using this service, the caller must connect to WLM      * 00002500
*      using the IWMCONN service, specifying Queue_Manager=Yes, or    * 00002600
*      Server_Manager=Yes with Server_Type=Queue.                     * 00002700
*                                                                     * 00002800
*      The IWMQINS service requires the use of enclaves to manage the * 00002900
*      performance goals and reporting of work.  It requires the use  * 00003000
*      of application environments to associate types of work         * 00003100
*      requests with servers capable of processing them.  Refer to    * 00003200
*      OS/390 MVS Workload Management Services for more information.  * 00003300
*                                                                     * 00003400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003500
*                                                                     * 00003600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003700
*                                                                     * 00003800
*01* ENVIRONMENT:                                                     * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*      Minimum authorization: Supervisor state or program key mask    * 00004200
*                        (PKM) allowing keys 0-7.                     * 00004300
*                                                                     * 00004400
*      Dispatchable unit mode: Task or SRB mode.                      * 00004500
*                                                                     * 00004600
*      Cross Memory Mode: Any HASN, any SASN.  PASN must be the       * 00004700
*                        address space which connected to WLM (i.e.   * 00004800
*                        the address space that was home when IWMCONN * 00004900
*                        was issued for Queue_Manager=Yes, or         * 00005000
*                        Server_Manager=Yes with Server_Type=Queue).  * 00005100
*                                                                     * 00005200
*      AMODE:            31-bit.                                      * 00005300
*                                                                     * 00005400
*      ASC mode:         Primary.                                     * 00005500
*                                                                     * 00005600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005700
*                                                                     * 00005800
*      Locks:            No locks held.                               * 00005900
*                                                                     * 00006000
*      Control parameters: Control parameters must be in the primary  * 00006100
*                        address space.                               * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*01* PROGRAMMING REQUIREMENTS:                                        * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*    1.  The macro CVT must be included to use this macro.            * 00006900
*                                                                     * 00007000
*    2.  The macro IWMYCON must be included to use this macro.        * 00007100
*                                                                     * 00007200
*    3.  The macro IWMPB must be in the library concatenation, since  * 00007300
*        it is included by IWMYCON.                                   * 00007400
*                                                                     * 00007500
*    4.  Note that the high order halfword of register 0, and the     * 00007600
*        reason code variable when specified, may be non-zero and     * 00007700
*        represents diagnostic data which is NOT part of the external * 00007800
*        interface.  The high order halfword should thus be excluded  * 00007900
*        from comparison with the reason code values described above. * 00008000
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00008100
*        be used for this purpose.                                    * 00008200
*                                                                     * 00008300
*    5.  All character data, unless otherwise specified, is assumed   * 00008400
*        to be left justified and padded with blanks on the right, as * 00008500
*        needed, to occupy the specified number of bytes.             * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*01* RESTRICTIONS:                                                    * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*    1.  This macro may not be used prior to the completion of WLM    * 00009300
*        address space initialization.                                * 00009400
*                                                                     * 00009500
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*01* INPUT REGISTER INFORMATION:                                      * 00010000
*                                                                     * 00010100
*    Before issuing the IWMQINS macro, the caller does not have to    * 00010200
*    place any information into any register unless using it in       * 00010300
*    register notation for a particular parameter, or using it as a   * 00010400
*    base register.                                                   * 00010500
*                                                                     * 00010600
*01* OUTPUT REGISTER INFORMATION:                                     * 00010700
*                                                                     * 00010800
*    When control returns to the caller, the GPRs contain:            * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*    REGISTER  CONTENTS                                               * 00011200
*                                                                     * 00011300
*    0         Reason code if GR15 return code is non-zero            * 00011400
*                                                                     * 00011500
*    1         Used as work registers by the system                   * 00011600
*                                                                     * 00011700
*    2-13      Unchanged                                              * 00011800
*                                                                     * 00011900
*    14        Used as work registers by the system                   * 00012000
*                                                                     * 00012100
*    15        Return code                                            * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*    When control returns to the caller, the ARs contain:             * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*    REGISTER  CONTENTS                                               * 00012900
*                                                                     * 00013000
*    0-1       Used as work registers by the system                   * 00013100
*                                                                     * 00013200
*    2-13      Unchanged                                              * 00013300
*                                                                     * 00013400
*    14-15     Used as work registers by the system                   * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*    Some callers depend on register contents remaining the same      * 00013900
*    before and after issuing a service.  If the system changes the   * 00014000
*    contents of registers on which the caller depends, the caller    * 00014100
*    must save them before issuing the service, and restore them      * 00014200
*    after the system returns control.                                * 00014300
*                                                                     * 00014400
*01* PERFORMANCE IMPLICATIONS:                                        * 00014500
*                                                                     * 00014600
*    None                                                             * 00014700
*                                                                     * 00014800
*01* SYNTAX:                                                          * 00014900
*                                                                     * 00015000
*[xlabel]  IWMQINS     CONNTKN=xconntkn                               * 00015100
*                     ,ETOKEN=xetoken                                 * 00015200
*                     ,USERDATA=xuserdata                             * 00015300
*                     ,APPLENV=xapplenv                               * 00015400
*                   [,SECUSER=NO]                                    * 00015500
*                   [,SECUSER=YES                                    * 00015600
*                         ,USERID=xuserid]                            * 00015700
*                    [,WLMWUTKN=xwlmwutkn]                            * 00015800
*                    [,SERVER_TOKEN=xserver_token|0]                * 00015900
*                    [,REGION_TOKEN=xregion_token|0]                * 00016000
*                    [,RETCODE=xretcode]                              * 00016100
*                    [,RSNCODE=xrsncode]                              * 00016200
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00016300
*                   [,MF=S]                                          * 00016400
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00016500
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*      Where:                                                         * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*      [xlabel]                                                       * 00017200
*          is an optional symbol, starting in column 1, that is the   * 00017300
*          name on the IWMQINS macro invocation.  The name must       * 00017400
*          conform to the rules for an ordinary assembler language    * 00017500
*          symbol.                                                    * 00017600
*          DEFAULT: No name.                                          * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*      CONNTKN=xconntkn                                               * 00018200
*          is the name (RS-type), or address in register (2)-(12), of * 00018300
*          a required 32 bit input which contains the connect token   * 00018400
*          returned by the IWMCONN macro.                             * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*      ETOKEN=xetoken                                                 * 00019000
*          is the name (RS-type), or address in register (2)-(12), of * 00019100
*          a required 8 character input which contains the enclave    * 00019200
*          token associated with the work request.  An enclave token  * 00019300
*          is obtained using either the IWMECREA or IWMESQRY macro.   * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*      USERDATA=xuserdata                                             * 00019900
*          is the name (RS-type), or address in register (2)-(12), of * 00020000
*          a required 16 character input which contains data to pass  * 00020100
*          to the server address space.  This user data is returned   * 00020200
*          to the caller of the IWMSSEL or IWMSSEM macro.  The format * 00020300
*          is undefined to MVS.                                       * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      APPLENV=xapplenv                                               * 00020900
*          is the name (RS-type), or address in register (2)-(12), of * 00021000
*          a required 32 character input which contains an            * 00021100
*          application environment name.  An application environment  * 00021200
*          is defined in the workload manager service definition and  * 00021300
*          instructs WLM how to create a server address space.        * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*      [SECUSER=NO|YES]                                             * 00021900
*          is an optional keyword input which specifies whether the   * 00022000
*          security environment of the user should be associated with * 00022100
*          the request at run time.                                   * 00022200
*          DEFAULT: NO                                                * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*          [SECUSER=NO]                                               * 00022600
*              No security environment to be established.             * 00022700
*                                                                     * 00022800
*          [SECUSER=YES                                               * 00022900
*              Use the specified userid to establish a security       * 00023000
*              environment.                                           * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*              USERID=xuserid]                                        * 00023400
*                  is the name (RS-type), or address in register      * 00023500
*                  (2)-(12), of a required 8 character input which    * 00023600
*                  contains the requester's userid.                   * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      [WLMWUTKN=xwlmwutkn]                                           * 00024600
*          is the name (RS-type), or address in register (2)-(12), of * 00024700
*          an optional 16 character output which will receive the     * 00024800
*          work unit token.  This token can be passed to the IWMQDEL  * 00024900
*          service to delete the work request.                        * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*      [SERVER_TOKEN=xserver_token|0]                               * 00025500
*          is the name (RS-type), or address in register (2)-(12), of * 00025600
*          an optional 32 character input which contains a server     * 00025700
*          token returned by the IWMSSEL macro.  Use SERVER_TOKEN to  * 00025800
*          queue a secondary work request to the same server task     * 00025900
*          that selected a prior work request.  A secondary work      * 00026000
*          request is considered to be an extension of the prior work * 00026100
*          request.                                                   * 00026200
*                                                                     * 00026300
*          The following qualifications apply when specifying a       * 00026400
*          server token:                                              * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*          o   The server task is responsible for passing the server  * 00026800
*              token to the queueing manager so that it can insert a  * 00026900
*              secondary work request.                                * 00027000
*                                                                     * 00027100
*          o   Coordination is required between the queueing manager  * 00027200
*              and the server task so that the server task knows when * 00027300
*              to expect secondary work requests.  The server task    * 00027400
*              uses the IWMSSEM macro to select secondary work        * 00027500
*              requests.  It must select all secondary work requests  * 00027600
*              before it can resume normal selection using IWMSSEL.   * 00027700
*                                                                     * 00027800
*          o   The same application environment and enclave token     * 00027900
*              passed for the original work request must be passed    * 00028000
*              for each secondary work request.                       * 00028100
*                                                                     * 00028200
*          o   A secondary work request cannot be deleted using the   * 00028300
*              IWMQDEL macro.  IWMQINS does not return a work unit    * 00028400
*              token (WLMWUTKN).                                      * 00028500
*                                                                     * 00028600
*          o   The SECUSER keyword is ignored.                        * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*          Coding SERVER_TOKEN=0 is equivalent to omitting the        * 00029100
*          SERVER_TOKEN keyword.                                      * 00029200
*          DEFAULT: 0                                                 * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*      [REGION_TOKEN=xregion_token|0]                               * 00029800
*          is the name (RS-type), or address in register (2)-(12), of * 00029900
*          an optional 16 character input which contains a region     * 00030000
*          token returned by the IWMSSEL macro.  Use REGION_TOKEN to  * 00030100
*          queue a work request to a specific server region.  Such a  * 00030200
*          work request is considered to be part of a set of work     * 00030300
*          requests which all need access to the same status          * 00030400
*          information which is kept in the virtual storage of the    * 00030500
*          server region.                                             * 00030600
*                                                                     * 00030700
*          The following qualifications apply when specifying a       * 00030800
*          region token:                                              * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*          o   The application is responsible for passing the region  * 00031200
*              token to the queueing manager so that it can insert    * 00031300
*              the work request to the region.                        * 00031400
*                                                                     * 00031500
*          o   WLM has to know that temporal affinities for work      * 00031600
*              requests to a specific server region exist in order    * 00031700
*              not to stop the server region.  The application must   * 00031800
*              use the IWMTAFF macro to tell WLM when a temporal      * 00031900
*              affinity starts and when it ends.                      * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*          Coding REGION_TOKEN=0 is equivalent to omitting the        * 00032400
*          REGION_TOKEN keyword.                                      * 00032500
*          DEFAULT: 0                                                 * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*      [RETCODE=xretcode]                                             * 00033100
*          is the name (RS-type) of an optional fullword output       * 00033200
*          variable, or register (2)-(12), into which the return code * 00033300
*          is to be copied from GPR 15.                               * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*      [RSNCODE=xrsncode]                                             * 00033900
*          is the name (RS-type) of an optional fullword output       * 00034000
*          variable, or register (2)-(12), into which the reason code * 00034100
*          is to be copied from GPR 0.                                * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00034700
*          is an optional byte input decimal value in the "0-2" range * 00034800
*          that specifies the macro version.  PLISTVER is the only    * 00034900
*          key allowed on the list form of MF and determines which    * 00035000
*          parameter list is generated.  The macro keys associated    * 00035100
*          with each supported version of the macro are listed in     * 00035200
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00035300
*          instead of a number, and the parameter list will be of the * 00035400
*          largest size currently supported. This size may grow from  * 00035500
*          release to release (thus possibly affecting the amount of  * 00035600
*          storage needed by your program).  If your program can      * 00035700
*          tolerate this, IBM recommends that you always specify MAX  * 00035800
*          when creating the list form parameter list as that will    * 00035900
*          ensure that the list form parameter list is always long    * 00036000
*          enough to hold whatever parameters might be specified on   * 00036100
*          the execute form.                                          * 00036200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00036300
*          default is the lowest version which allows all of the      * 00036400
*          parameters specified on the invocation to be processed.    * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*      [MF=S|L|E]                                                   * 00037000
*          is an optional keyword input which specifies the macro     * 00037100
*          form.                                                      * 00037200
*          DEFAULT: S                                                 * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*          [MF=S]                                                     * 00037600
*              specifies the standard form of the macro.  The "S"     * 00037700
*              form generates code to put the parameters into an      * 00037800
*              in-line parameter list and invoke the desired service. * 00037900
*              Full checking for required macro keys is done along    * 00038000
*              with supplying defaults for omitted optional           * 00038100
*              parameters.                                            * 00038200
*                                                                     * 00038300
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00038400
*              specifies the list form of the macro.  The "L" form    * 00038500
*              defines an area to be used for the parameter list.     * 00038600
*              Only the PLISTVER key may be specified on the          * 00038700
*              invocation.  All other macro parameters are flagged as * 00038800
*              errors.  If PLISTVER is not specified, the original    * 00038900
*              parameter list definition is used.                     * 00039000
*                                                                     * 00039100
*            ,xmfctrl                                                 * 00039200
*              is a required input.  It is the name of a storage area * 00039300
*              for the parameter list.                                * 00039400
*                                                                     * 00039500
*            ,xmfattr|0D                                            * 00039600
*              is an optional 60 character input string that varies   * 00039700
*              from 1 to 60 characters. Use it to force boundary      * 00039800
*              alignment of the parameter list. Use only 0F or 0D.    * 00039900
*              DEFAULT: 0D which forces the parameter list to a       * 00040000
*              doubleword boundary.                                   * 00040100
*                                                                     * 00040200
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00040300
*              specifies the execute form of the macro.  The "E" form * 00040400
*              generates code to put the parameters into the          * 00040500
*              parameter list specified by xmfctrl and provides full  * 00040600
*              syntax checking with default setting.                  * 00040700
*                                                                     * 00040800
*            ,xmfctrl                                                 * 00040900
*              is a required input.  It is the name (RS-type), or     * 00041000
*              address in register (1)-(12), of a storage area for    * 00041100
*              the parameter list.                                    * 00041200
*                                                                     * 00041300
*            ,COMPLETE                                              * 00041400
*              is an optional keyword input which specifies the       * 00041500
*              degree of macro parameter syntax checking.             * 00041600
*              DEFAULT: COMPLETE                                      * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*              COMPLETE                                               * 00042000
*                  Checking for required macro keys is done and       * 00042100
*                  defaults are supplied for omitted optional         * 00042200
*                  parameters.                                        * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*01* ABEND CODES:  None.                                              * 00043100
*                                                                     * 00043200
*01* RETURN CODES:                                                    * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*            0    Name: IwmRetCodeOk                                  * 00043600
*                                                                     * 00043700
*                 Meaning: Successful completion.                     * 00043800
*                                                                     * 00043900
*                 Action: None required.                              * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*            4    Name: IwmRetCodeWarning                             * 00044300
*                                                                     * 00044400
*                 Meaning:  Successful completion, unusual conditions * 00044500
*                 noted.                                              * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                 HEX REASON  MEANING/ACTION                          * 00044900
*                 CODE                                                * 00045000
*                                                                     * 00045100
*                 xxxx042E    Name: IwmRsnCodeServerNotFound          * 00045200
*                                                                     * 00045300
*                             Meaning: The server token does not      * 00045400
*                             identify an existing server task.  The  * 00045500
*                             server task may have terminated since   * 00045600
*                             the token was obtained.                 * 00045700
*                                                                     * 00045800
*                             Action: If the server task has not      * 00045900
*                             terminated, check that the correct      * 00046000
*                             token is specified.                     * 00046100
*                                                                     * 00046200
*                 xxxx043A    Name: IwmRsnCodeRegionNotFound          * 00046300
*                                                                     * 00046400
*                             Meaning: The region token does not      * 00046500
*                             identify a valid server region.         * 00046600
*                                                                     * 00046700
*                             Action: Please specify the correct      * 00046800
*                             region token.                           * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*            8    Name: IwmRetCodeInvocError                          * 00047400
*                                                                     * 00047500
*                 Meaning: Invalid invocation environment or          * 00047600
*                 parameters.                                         * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                 HEX REASON  MEANING/ACTION                          * 00048000
*                 CODE                                                * 00048100
*                                                                     * 00048200
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00048300
*                                                                     * 00048400
*                             Meaning: Caller is disabled.            * 00048500
*                                                                     * 00048600
*                             Action: Avoid requesting this function  * 00048700
*                             while disabled.                         * 00048800
*                                                                     * 00048900
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00049000
*                                                                     * 00049100
*                             Meaning: Caller is locked.              * 00049200
*                                                                     * 00049300
*                             Action: Avoid requesting this function  * 00049400
*                             while locked.                           * 00049500
*                                                                     * 00049600
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00049700
*                                                                     * 00049800
*                             Meaning: Error accessing parameter      * 00049900
*                             list.                                   * 00050000
*                                                                     * 00050100
*                             Action: Check for possible storage      * 00050200
*                             overlay.                                * 00050300
*                                                                     * 00050400
*                 xxxx0821    Name:IwmRsnCodeBadConn                  * 00050500
*                                                                     * 00050600
*                             Meaning: Input connect token does not   * 00050700
*                             pass validity checking.                 * 00050800
*                                                                     * 00050900
*                             Action: Make sure to use the connect    * 00051000
*                             token returned by the IWMCONN service   * 00051100
*                             requesting Queue_Manager=Yes, or        * 00051200
*                             Server_Manager=Yes with                 * 00051300
*                             Server_Type=Queue.                      * 00051400
*                                                                     * 00051500
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00051600
*                                                                     * 00051700
*                             Meaning: Caller invoked service while   * 00051800
*                             DATOFF                                  * 00051900
*                                                                     * 00052000
*                             Action: Avoid requesting this function  * 00052100
*                             in this environment.                    * 00052200
*                                                                     * 00052300
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00052400
*                                                                     * 00052500
*                             Meaning: Caller invoked service but was * 00052600
*                             in 24 bit addressing mode.              * 00052700
*                                                                     * 00052800
*                             Action: Request this function only when * 00052900
*                             you are in 31 bit addressing mode.      * 00053000
*                                                                     * 00053100
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00053200
*                                                                     * 00053300
*                             Meaning: Caller invoked service but was * 00053400
*                             not in primary ASC mode.                * 00053500
*                                                                     * 00053600
*                             Action: Avoid requesting this function  * 00053700
*                             in this environment.                    * 00053800
*                                                                     * 00053900
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00054000
*                                                                     * 00054100
*                             Meaning: Reserved field in parameter    * 00054200
*                             list was non-zero.                      * 00054300
*                                                                     * 00054400
*                             Action:  Check for use of keywords that * 00054500
*                             are not supported by the MVS release on * 00054600
*                             which the program is running.           * 00054700
*                                                                     * 00054800
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00054900
*                                                                     * 00055000
*                             Meaning: Version number in parameter    * 00055100
*                             list is not valid.                      * 00055200
*                                                                     * 00055300
*                             Action: Check for possible storage      * 00055400
*                             overlay of the parameter list.          * 00055500
*                                                                     * 00055600
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00055700
*                                                                     * 00055800
*                             Meaning: Enclave token in parameter     * 00055900
*                             list is not valid.                      * 00056000
*                                                                     * 00056100
*                             Action: Check the specification of the  * 00056200
*                             ETOKEN parameter.                       * 00056300
*                                                                     * 00056400
*                 xxxx083F    Name: IwmRsnCodePrimaryNotOwnConn       * 00056500
*                                                                     * 00056600
*                             Meaning: Primary address space does not * 00056700
*                             own the passed connect token.           * 00056800
*                                                                     * 00056900
*                             Action: Ensure that the primary address * 00057000
*                             space has previously connected to WLM   * 00057100
*                             using the IWMCONN macro.  Ensure that   * 00057200
*                             the connect token returned by the       * 00057300
*                             IWMCONN macro is passed to the IWMQINS  * 00057400
*                             macro.                                  * 00057500
*                                                                     * 00057600
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00057700
*                                                                     * 00057800
*                             Meaning: Caller's space connection is   * 00057900
*                             not enabled for this service.           * 00058000
*                                                                     * 00058100
*                             Action: Make sure that                  * 00058200
*                             Queue_Manager=Yes, or                   * 00058300
*                             Server_Manager=Yes with                 * 00058400
*                             Server_Type=Queue is specified on the   * 00058500
*                             IWMCONN request to enable this service. * 00058600
*                                                                     * 00058700
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00058800
*                                                                     * 00058900
*                             Meaning: Caller's space disconnected    * 00059000
*                             from WLM during processing of the       * 00059100
*                             insert request.                         * 00059200
*                                                                     * 00059300
*                             Action: None.                           * 00059400
*                                                                     * 00059500
*                 xxxx0845    Name: IwmRsnCodeWrongEnclave            * 00059600
*                                                                     * 00059700
*                             Meaning: The caller tried to queue a    * 00059800
*                             secondary work request to a specific    * 00059900
*                             server task using the SERVER_TOKEN      * 00060000
*                             parameter.  The caller's enclave token  * 00060100
*                             does not match the enclave token of the * 00060200
*                             last work request selected by the       * 00060300
*                             server task.                            * 00060400
*                                                                     * 00060500
*                             Action: Check that the correct enclave  * 00060600
*                             token was specified.  Check that the    * 00060700
*                             server task is invoking the IWMSSEL and * 00060800
*                             IWMSSEM macros in the correct sequence. * 00060900
*                                                                     * 00061000
*                                                                     * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*            C    Name: IwmRetCodeEnvError                            * 00061400
*                                                                     * 00061500
*                 Meaning: Environmental error.                       * 00061600
*                                                                     * 00061700
*                                                                     * 00061800
*                 HEX REASON  MEANING/ACTION                          * 00061900
*                 CODE                                                * 00062000
*                                                                     * 00062100
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00062200
*                                                                     * 00062300
*                             Meaning: Storage is not available for   * 00062400
*                             the request.                            * 00062500
*                                                                     * 00062600
*                             Action: Contact your system programmer. * 00062700
*                             There is a common storage shortage.     * 00062800
*                                                                     * 00062900
*                 xxxx0C16    Name: IwmRsnCodeServerUnavail           * 00063000
*                                                                     * 00063100
*                             Meaning: A server cannot be started to  * 00063200
*                             process the work request.  This is      * 00063300
*                             probably caused by one of the           * 00063400
*                             following:                              * 00063500
*                                                                     * 00063600
*                                                                     * 00063700
*                             1.  An error in the JCL procedure used  * 00063800
*                                 to start the server address space.  * 00063900
*                                                                     * 00064000
*                             2.  Repeated, unexpected terminations   * 00064100
*                                 of the server address space.        * 00064200
*                                                                     * 00064300
*                                                                     * 00064400
*                                                                     * 00064500
*                             In either of these cases, workload      * 00064600
*                             management stops the application        * 00064700
*                             environment.  A DISPLAY WLM command     * 00064800
*                             shows this state as INTERNALLY STOPPED. * 00064900
*                                                                     * 00065000
*                             Action: Look at the system log to       * 00065100
*                             determine what caused the error:        * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                             1.  If it is a JCL error, correct the   * 00065500
*                                 error in the procedure.             * 00065600
*                                                                     * 00065700
*                             2.  If it is repeated terminations of   * 00065800
*                                 the server address space, correct   * 00065900
*                                 the application error causing the   * 00066000
*                                 termination.                        * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*                             In either case, the server environment  * 00066500
*                             can then be resumed using the VARY      * 00066600
*                             operator command: V                     * 00066700
*                             WLM,APLLENV=nnn,RESUME where nnn is the * 00066800
*                             applicable application environment      * 00066900
*                             name.                                   * 00067000
*                                                                     * 00067100
*                             NOTE:  A re-IPL of some or all of the   * 00067200
*                             systems in the sysplex does not reset   * 00067300
*                             the stopped state of the application    * 00067400
*                             environment.  The VARY command is the   * 00067500
*                             only way to resume the environment.     * 00067600
*                                                                     * 00067700
*                 xxxx0C1A    Name: IwmRsnCodeApplNotDefined          * 00067800
*                                                                     * 00067900
*                             Meaning:  The application environment   * 00068000
*                             name is not defined in the active WLM   * 00068100
*                             policy.                                 * 00068200
*                                                                     * 00068300
*                             Action: Check whether the correct       * 00068400
*                             application environment name is being   * 00068500
*                             used.  If so, a service administrator   * 00068600
*                             must define the application environment * 00068700
*                             in the WLM service definition.          * 00068800
*                                                                     * 00068900
*                 xxxx0C1B    Name: IwmRsnCodeApplNotSST              * 00069000
*                                                                     * 00069100
*                             Meaning:  The application environment   * 00069200
*                             name is defined for use by a different  * 00069300
*                             subsystem type in the active WLM        * 00069400
*                             policy.                                 * 00069500
*                                                                     * 00069600
*                             Action: Check whether the correct       * 00069700
*                             application environment name is being   * 00069800
*                             used.  If so, a service administrator   * 00069900
*                             must change the application environment * 00070000
*                             in the WLM service definition to        * 00070100
*                             specify the correct subsystem type.     * 00070200
*                                                                     * 00070300
*                 xxxx0C1D    Name: IwmRsnCodeQMgrNotActive           * 00070400
*                                                                     * 00070500
*                             Meaning:  The required Queue Manager is * 00070600
*                             not active.                             * 00070700
*                                                                     * 00070800
*                             Action: The Queue Manager with the same * 00070900
*                             subsystem type and name as the server   * 00071000
*                             must be started and connected to        * 00071100
*                             workload management before the request  * 00071200
*                             can be honored.                         * 00071300
*                                                                     * 00071400
*                 xxxx0C22    Name: IwmRsnCodeApplEnvQuiesced         * 00071500
*                                                                     * 00071600
*                             Meaning:  For server applications       * 00071700
*                             connecting to WLM with subsystem type   * 00071800
*                             IWEB only: The application environment  * 00071900
*                             has been quiesced. The work reqeust is  * 00072000
*                             not inserted to the WLM work queue.     * 00072100
*                                                                     * 00072200
*                             Action: Resume the application          * 00072300
*                             environment.                            * 00072400
*                                                                     * 00072500
*                                                                     * 00072600
*                                                                     * 00072700
*                                                                     * 00072800
*            10   Name: IwmRetCodeCompError                           * 00072900
*                                                                     * 00073000
*                 Meaning: Component error.                           * 00073100
*                                                                     * 00073200
*                 Action: Contact your system programmer.             * 00073300
*                                                                     * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*01* REASON CODES:                                                    * 00073700
*                                                                     * 00073800
*       A unique reason code will be returned whenever the return     * 00073900
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00074000
*       under their corresponding return code.  Reason code and       * 00074100
*       return code constants are defined within IWMYCON.  Note that  * 00074200
*       the high order halfword of register 0, and the reason code    * 00074300
*       variable when specified, may be non-zero and represents       * 00074400
*       diagnostic data which is NOT part of the external interface.  * 00074500
*       The high order halfword should thus be excluded from          * 00074600
*       comparison with the reason code values described above.  The  * 00074700
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00074800
*       used for this purpose.                                        * 00074900
*                                                                     * 00075000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00075100
*                                                                     * 00075200
*02*   PROCESSOR:  ASSEM                                              * 00075300
*                                                                     * 00075400
*01* COMPONENT:  SCWLM                                                * 00075500
*                                                                     * 00075600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00075700
*                                                                     * 00075800
*01* EXAMPLES:                                                        * 00075900
*                                                                     * 00076000
*    To insert a work request onto the WLM queue manager queues:      * 00076100
*                                                                     * 00076200
*               IWMQINS  CONNTKN=CONNTOKEN,ETOKEN=ENCTOKEN,         X * 00076300
*                     USERDATA=USERDATA,APPLENV=APPLENV,SECUSER=NO, X * 00076400
*                     WLMWUTKN=WLMWUTKN,RETCODE=RC,RSNCODE=RSN        * 00076500
*      *                                                              * 00076600
*      * Storage areas                                                * 00076700
*      *                                                              * 00076800
*      CONNTOKEN DS   FL4             Contains the connect token      * 00076900
*      *                              associated with the use of WLM  * 00077000
*      *                              Queuing services as returned by * 00077100
*      *                              IWMCONN                         * 00077200
*      *                              (specifying QUEUE_MANAGER=YES   * 00077300
*      *                              or SERVER_MANAGER=YES           * 00077400
*      *                                   SERVER_TYPE=QUEUE          * 00077500
*      ENCTOKEN DS    CL8             Contains the Enclave token      * 00077600
*      *                              associated with the work        * 00077700
*      *                              request as returned by IWMECREA * 00077800
*      USERDATA DS    CL16            Contains data maintained by the * 00077900
*      *                              user                            * 00078000
*      APPLENV  DS    CL32            Contains the application        * 00078100
*      *                              environment name                * 00078200
*      WLMWUTKN DS    CL16            Work unit token                 * 00078300
*      RC       DS    F               Return code                     * 00078400
*      RSN      DS    F               Reason code                     * 00078500
*                                                                     * 00078600
*                                                                     * 00078700
*01* MACRO USAGE NOTES:                                               * 00078800
*                                                                     * 00078900
*                                                                     * 00079000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00079100
*        global macro variable.  Any value other than 'NO' will       * 00079200
*        result in the macro expansion being printed.  The default is * 00079300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00079400
*        variable should be set.                                      * 00079500
*                                                                     * 00079600
*                    GBLC &ZPRINT                                     * 00079700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00079800
*                                                                     * 00079900
*                                                                     * 00080000
*    2.  The  IWMQINS macro supports multiple versions. The macro key * 00080100
*        list  below  contains the version level in which the key was * 00080200
*        first  introduced.  Positionals  are  identified by the word * 00080300
*        'Positional'  followed by the numeric value of its position. * 00080400
*        Nested  positionals  are  preceded  by their outer key.  The * 00080500
*        lowest value represents the original version and the highest * 00080600
*        value  represents  the  most  recent  version of the IWMQINS * 00080700
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00080800
*        least  as high as the highest version number of all the keys * 00080900
*        being used.                                                  * 00081000
*                                                                     * 00081100
*        VERSION   KEY                                                * 00081200
*                                                                     * 00081300
*              0      APPLENV                                         * 00081400
*                     CONNTKN                                         * 00081500
*                     ETOKEN                                          * 00081600
*                     SECUSER                                         * 00081700
*                     USERDATA                                        * 00081800
*                     USERID                                          * 00081900
*                     WLMWUTKN                                        * 00082000
*              1      SERVER_TOKEN                                    * 00082100
*              2      REGION_TOKEN                                    * 00082200
*                                                                     * 00082300
*                                                                     * 00082400
*                                                                     * 00082500
*01* CHANGE ACTIVITY:                                                 * 00082600
*                                                                     * 00082700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00082800
*                                                                     * 00082900
*    $L0=WLMP     HBB6603 950216 PD88RK:  DB2 Stored SQL Procedure    * 00083000
*    $L1=WLMP     HBB6603 950331 PD88GD:  DB2 Stored SQL Procedure    * 00083100
*    $L2=WLMP     HBB6603 950426 PD88GD:  DB2 Stored SQL Procedure    * 00083200
*    $L3=WLMP     HBB6603 960821 PD88GW:  DB2 Stored SQL Procedure    * 00083300
*    $L4=WLMP     HBB6605 970528 B9HAGD:  Business object server      * 00083400
*    $L5=OW45238  HBB6608 006015 B9HARV:  Temporal Affinity Support   * 00083500
*    $L6=OW50436  HBB7703 010718 3241RV:  Scalable Webserver Support  * 00083600
****** END OF SPECIFICATIONS *****************************************/ 00083700
*/* TLINE 1 *********************************************************** 00083800
         MACRO                                                          00083900
&XLABEL  IWMQINS &CONNTKN=,&ETOKEN=,&USERDATA=,&APPLENV=,&SECUSER=,    *00084000
               &USERID=,&WLMWUTKN=,&SERVER_TOKEN=,&REGION_TOKEN=,      *00084100
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00084200
.*                                                                      00084300
*                  MACDATE -08/03/01-<2>                                00084400
.*                                                                      00084500
.*******************************************************************    00084600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00084700
.*******************************************************************    00084800
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00084900
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00085000
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00085100
.*                                                                      00085200
                  GBLC  &ZIWMQINS   YES=MACRO USED AT LEAST ONCE        00085300
.*******************************************************************    00085400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00085500
.*******************************************************************    00085600
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00085700
                  LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS        00085800
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00085900
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00086000
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00086100
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00086200
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00086300
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00086400
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00086500
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00086600
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00086700
                  LCLC  &ZMAC_G     "G" or null                         00086800
&ZMAC_G           SETC  ''                                              00086900
                  LCLC  &ZMAC_LR                                        00087000
&ZMAC_LR          SETC  'LR'                                            00087100
                  LCLC  &ZMAC_L                                         00087200
&ZMAC_L           SETC  'L'                                             00087300
                  LCLC  &ZMAC_ST                                        00087400
&ZMAC_ST          SETC  'ST'                                            00087500
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00087600
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00087700
.*                                                                      00087800
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00087900
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00088000
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00088100
                  LCLC  &ZENDBASEPL             End of base PL          00088200
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00088300
.*******************************************************************    00088400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00088500
.*******************************************************************    00088600
                  LCLA  &ZI         INDEX FOR ARRAY                     00088700
                  LCLA  &ZJ         INDEX FOR PARMS                     00088800
                  LCLA  &ZK         INDEX FOR PARSE                     00088900
                  LCLA  &ZLO        LOW RANGE VALUE                     00089000
                  LCLA  &ZHI        HIGH RANGE VALUE                    00089100
                  LCLC  &ZW         WORK AREA FOR PARM                  00089200
.********************************************************************   00089300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00089400
.********************************************************************   00089500
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00089600
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00089700
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00089800
.*                                                                      00089900
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00090000
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00090100
                  SPLEVEL  TEST                                         00090200
.ZSYS2            ANOP  ,                                               00090300
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00090400
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00090500
                  SYSSTATE TEST                                         00090600
                  AGO   .ZSYS4                                          00090700
.ZSYS3            ANOP  ,                                               00090800
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00090900
.ZSYS4            ANOP  ,                                               00091000
.*******************************************************************    00091100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00091200
.*******************************************************************    00091300
                  LCLC  &XCONNTKN   ++ NAME                             00091400
                  LCLC  &XETOKEN    ++ NAME                             00091500
                  LCLC  &XUSERDATA  ++ NAME                             00091600
                  LCLC  &XAPPLENV   ++ NAME                             00091700
                  LCLC  &XSECUSER   ++ VALUE                            00091800
                  LCLC  &XUSERID    ++ NAME                             00091900
                  LCLC  &XWLMWUTKN  ++ NAME                             00092000
                  LCLC  &XSERVER_TOKEN          ++ NAME                 00092100
                  LCLC  &XREGION_TOKEN          ++ NAME                 00092200
                  LCLC  &XRETCODE   ++ NAME                             00092300
                  LCLC  &XRSNCODE   ++ NAME                             00092400
                  LCLA  &XPLISTVER  ++ VALUE                            00092500
                  LCLC  &XMF        ++ VALUE                            00092600
                  LCLC  &XMFCTRL    ++ NAME                             00092700
                  LCLC  &XMFATTR    ++ VALUE                            00092800
                  LCLC  &XMFSCK     ++ VALUE                            00092900
.*******************************************************************    00093000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00093100
.*******************************************************************    00093200
                  LCLC  &ZXCONNTKN  ++ INPUT NAME                       00093300
                  LCLC  &ZXETOKEN   ++ INPUT NAME                       00093400
                  LCLC  &ZXUSERDATA             ++ INPUT NAME           00093500
                  LCLC  &ZXAPPLENV  ++ INPUT NAME                       00093600
                  LCLC  &ZXSECUSER  ++ INPUT VALUE                      00093700
                  LCLC  &ZXUSERID   ++ INPUT NAME                       00093800
                  LCLC  &ZXWLMWUTKN             ++ OUTPUT NAME          00093900
                  LCLC  &ZXSERVER_TOKEN         ++ INPUT NAME           00094000
                  LCLC  &ZXREGION_TOKEN         ++ INPUT NAME           00094100
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00094200
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00094300
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00094400
                  LCLC  &ZXMF       ++ INPUT VALUE                      00094500
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00094600
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00094700
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00094800
.********************************************************************   00094900
.***AC.PLV01  PROCESS PLISTVER                                      *   00095000
.********************************************************************   00095100
&XPLISTVER      SETA  0                                                 00095200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00095300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00095400
&XPLISTVER      SETA  2                                                 00095500
.ZPLV0          ANOP  ,                                                 00095600
.*                                                                      00095700
                AIF   ('&SERVER_TOKEN' EQ '').ZPLV1E                    00095800
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00095900
&XPLISTVER      SETA  1                                                 00096000
.ZPLV1E         ANOP  ,                                                 00096100
.*                                                                      00096200
                AIF   ('&REGION_TOKEN' EQ '').ZPLV2E                    00096300
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00096400
&XPLISTVER      SETA  2                                                 00096500
.ZPLV2E         ANOP  ,                                                 00096600
.*                                                                      00096700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00096800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00096900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00097000
.*-------------------------------------------------------------------   00097100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00097200
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00097300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00097400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00097500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00097600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00097700
                AGO   .ZPVCK2                                           00097800
.ZPVCK3         ANOP  ,                                                 00097900
.*-------------------------------------------------------------------   00098000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00098100
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00098200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00098300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00098400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00098500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00098600
                AGO   .ZPVCKE                                           00098700
.ZPVCK2         ANOP  ,                                                 00098800
.*-------------------------------------------------------------------   00098900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00099000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00099100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00099200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00099300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00099400
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00099500
.ZPVCK6         ANOP  ,                                                 00099600
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00099700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00099800
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00099900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00100000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00100100
&XPLISTVER      SETA  2                                                 00100200
                AGO   .ZPVCKE                                           00100300
.*-------------------------------------------------------------------   00100400
.ZPVCK4A        ANOP  ,                                                 00100500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00100600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00100700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00100800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00100900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00101000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00101100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00101200
                AGO   .ZPVCK5                                           00101300
.ZPVCK4         ANOP  ,                                                 00101400
&XPLISTVER      SETA  &PLISTVER(1)                                      00101500
.ZPVCK5         ANOP  ,                                                 00101600
.ZPVCKE         ANOP  ,                                                 00101700
.********************************************************************   00101800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00101900
.********************************************************************   00102000
                  ACTR  10000                                           00102100
.*------------------------------------------------------------------    00102200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00102300
&XMF              SETC  ''          INITIALIZE XVARIABLE                00102400
.*-------------------------------------------------------------------   00102500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00102600
.ZG41             ANOP  ,                                               00102700
&ZTLC             SETC 'S'                                              00102800
                  AIF   ('&MF(1)' NE '&ZTLC').ZG42                      00102900
&XMF              SETC  'S'         SET KEYWORD                         00103000
                  AIF   (N'&MF LE 1).ZG41A      CK NUM                  00103100
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00103200
&ZMS              SETC  '&ZMS.&MF"'                                     00103300
&ZMS              SETC  '&ZMS "MF"'                                     00103400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00103500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00103600
.ZG41A            ANOP  ,                                               00103700
.*-------------------------------------------------------------------   00103800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00103900
.ZG42             ANOP  ,                                               00104000
&ZTLC             SETC 'L'                                              00104100
                  AIF   ('&MF(1)' NE '&ZTLC').ZG49                      00104200
&XMF              SETC  'L'         SET KEYWORD                         00104300
                  AIF   (N'&MF LE 3).ZG42A      CK NUM                  00104400
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00104500
&ZMS              SETC  '&ZMS.&MF"'                                     00104600
&ZMS              SETC  '&ZMS "MF"'                                     00104700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00104800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00104900
.ZG42A            ANOP  ,                                               00105000
.*-------------------------------------------------------------------   00105100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00105200
                  AIF   (N'&SYSLIST NE 0).ZG42B  POSITIONALS?           00105300
                  AIF   ('&CONNTKN' NE '').ZG42B  KEYS?                 00105400
                  AIF   ('&ETOKEN' NE '').ZG42B  KEYS?                  00105500
                  AIF   ('&USERDATA' NE '').ZG42B  KEYS?                00105600
                  AIF   ('&APPLENV' NE '').ZG42B  KEYS?                 00105700
                  AIF   ('&SECUSER' NE '').ZG42B  KEYS?                 00105800
                  AIF   ('&USERID' NE '').ZG42B  KEYS?                  00105900
                  AIF   ('&WLMWUTKN' NE '').ZG42B  KEYS?                00106000
                  AIF   ('&SERVER_TOKEN' NE '').ZG42B  KEYS?            00106100
                  AIF   ('&REGION_TOKEN' NE '').ZG42B  KEYS?            00106200
                  AIF   ('&RETCODE' NE '').ZG42B  KEYS?                 00106300
                  AIF   ('&RSNCODE' NE '').ZG42B  KEYS?                 00106400
                  AGO    .ZG42C     INVOCATION OKAY                     00106500
.ZG42B            ANOP  ,                                               00106600
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00106700
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00106800
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00106900
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00107000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00107100
.ZG42C            ANOP  ,                                               00107200
.*-------------------------------------------------------------------   00107300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00107400
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00107500
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00107600
                  AIF   (N'&MF(2) GT 1).ZG44B   MULTI PARMS             00107700
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00107800
.ZG44B            AIF   (K'&MF(2) GT 0).ZG44C                           00107900
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00108000
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00108100
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00108200
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00108300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00108400
.ZG44C            ANOP  ,                                               00108500
.*-------------------------------------------------------------------   00108600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00108700
                  AIF   (K'&ZXMFCTRL LE 0).ZG44P  NOT I/O               00108800
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG44P                  00108900
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00109000
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00109100
&ZMS              SETC  '&ZMS.&MF"'                                     00109200
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00109300
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00109400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00109500
.ZG44P            ANOP  ,                                               00109600
.*-------------------------------------------------------------------   00109700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00109800
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00109900
&XMFATTR          SETC  '0D'                                            00110000
                  AIF   (K'&MF(3) LE 0).ZG47B   PARM                    00110100
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00110200
                  AIF   (N'&MF(3) GT 1).ZG47B   MULTI PARMS             00110300
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00110400
.ZG47B            ANOP  ,                                               00110500
.*-------------------------------------------------------------------   00110600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00110700
                  AIF   (K'&ZXMFATTR LE 0).ZG47P  NOT I/O               00110800
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG47P                  00110900
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00111000
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00111100
&ZMS              SETC  '&ZMS.&MF"'                                     00111200
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00111300
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00111400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00111500
.ZG47P            ANOP  ,                                               00111600
.*-------------------------------------------------------------------   00111700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00111800
                  AIF   (K'&ZXMFATTR LE 0).ZG47S  NOT I/O               00111900
                  AIF   (K'&XMFATTR LE 60).ZG47S  LNG OK                00112000
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00112100
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00112200
&ZMS              SETC  '&ZMS.&MF"'                                     00112300
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00112400
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00112500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00112600
.ZG47S            ANOP  ,                                               00112700
.*-------------------------------------------------------------------   00112800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00112900
.ZG49             ANOP  ,                                               00113000
&ZTLC             SETC 'E'                                              00113100
                  AIF   ('&MF(1)' NE '&ZTLC').ZG57                      00113200
&XMF              SETC  'E'         SET KEYWORD                         00113300
                  AIF   (N'&MF LE 3).ZG49A      CK NUM                  00113400
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00113500
&ZMS              SETC  '&ZMS.&MF"'                                     00113600
&ZMS              SETC  '&ZMS "MF"'                                     00113700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00113800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00113900
.ZG49A            ANOP  ,                                               00114000
.*-------------------------------------------------------------------   00114100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00114200
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00114300
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00114400
                  AIF   (N'&MF(2) GT 1).ZG51B   MULTI PARMS             00114500
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00114600
.ZG51B            AIF   (K'&MF(2) GT 0).ZG51C                           00114700
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00114800
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00114900
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00115000
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00115100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00115200
.ZG51C            ANOP  ,                                               00115300
.*-------------------------------------------------------------------   00115400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00115500
                  AIF   (K'&ZXMFCTRL LE 0).ZG51R  NOT I/O               00115600
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG51R                  00115700
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00115800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                    00115900
                  AIF   (K'&ZCGPR GT 2).ZG51Q                           00116000
                  AIF   ('&ZCGPR' EQ '0').ZG51Q                         00116100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00116200
                  AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME       00116300
.ZG51P            ANOP  ,                                               00116400
                  AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC            00116500
                  AIF   ('&ZCGPR' LT '1').ZG51Q                         00116600
                  AIF   ('&ZCGPR' LE '12').ZG51R                        00116700
.ZG51Q            ANOP  ,                                               00116800
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00116900
&ZMS              SETC  '&ZMS.&MF"'                                     00117000
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00117100
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00117200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00117300
.ZG51R            ANOP  ,                                               00117400
.*-------------------------------------------------------------------   00117500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00117600
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00117700
.ZG55A   AIF   ('&MF(3)' NE 'COMPLETE').ZG56A                           00117800
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00117900
.*-------------------------------------------------------------------   00118000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00118100
.ZG56A            AIF   (K'&XMFSCK GT 0).ZG56C  KEYWORD                 00118200
                  AIF   (K'&MF(3) LE 0).ZG56B                           00118300
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00118400
&ZMS              SETC  '&ZMS.&MF"'                                     00118500
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00118600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00118700
&ZMS              SETC  '&ZMS "COMPLETE".'                              00118800
                  MNOTE 8,' &ZMS '                                      00118900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00119000
.ZG56B            ANOP  ,                                               00119100
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00119200
.ZG56C            ANOP  ,                                               00119300
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00119400
.*------------------------------------------------------------------    00119500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119600
.ZG57             ANOP  ,                                               00119700
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00119800
                  AIF   (K'&XMF GT 0).ZG57E     VALID ARG               00119900
                  AIF   (T'&MF EQ 'O').ZG57D    OMITTED                 00120000
&ZASYSLNDX        SETA  0                                               00120100
.ZG57A            ANOP  ,           POSITIONAL MACRO KEY                00120200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00120300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG57C                00120400
&ZTLC             SETC 'MF'                                             00120500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG57A       00120600
.ZG57B            ANOP  ,                                               00120700
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00120800
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00120900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00121000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00121100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00121200
                  AGO   .ZG57E                                          00121300
.ZG57C            ANOP  ,                                               00121400
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00121500
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00121600
&ZMS              SETC  '&ZMS.&MF"'                                     00121700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00121800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00121900
&ZMS              SETC  '&ZMS "S",'                                     00122000
&ZMS              SETC  '&ZMS "L",'                                     00122100
&ZMS              SETC  '&ZMS OR "E".'                                  00122200
                  MNOTE 8,' &ZMS '                                      00122300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00122400
                  AGO   .ZG57E                                          00122500
.ZG57D            ANOP  ,                                               00122600
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00122700
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00122800
.ZG57E            ANOP  ,                                               00122900
.********************************************************************   00123000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00123100
.********************************************************************   00123200
                  ACTR  10000                                           00123300
.*-------------------------------------------------------------------   00123400
.***AG.MF03 MF=(SLE)                                                    00123500
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00123600
.*----------------------------------------------------------------***   00123700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00123800
                  AIF   (N'&CONNTKN LE 1).ZG2A  CK NUM                  00123900
&ZMS              SETC  '"CONNTKN='             *KPOSA* MNOTE           00124000
&ZMS              SETC  '&ZMS.&CONNTKN"'                                00124100
&ZMS              SETC  '&ZMS "CONNTKN"'                                00124200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00124300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00124400
.ZG2A             ANOP  ,                                               00124500
.*-------------------------------------------------------------------   00124600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00124700
&ZXCONNTKN        SETC  'INPUT'     SET IN/OUTPUT                       00124800
&XCONNTKN         SETC  '&CONNTKN(1)'           SET XVARIABLE           00124900
                  AIF   (N'&CONNTKN GT 1).ZG2B  MULTI PARMS             00125000
&XCONNTKN         SETC  '&CONNTKN'  SET XVARIABLE                       00125100
.ZG2B             AIF   (K'&CONNTKN(1) GT 0).ZG2C                       00125200
&ZXCONNTKN        SETC  ''          RESET IN/OUTPUT                     00125300
&ZMS              SETC  ' '         *KRQDA*                             00125400
&ZMS              SETC  '&ZMS "CONNTKN" KEY AND ITS'                    00125500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00125600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00125700
.ZG2C             ANOP  ,                                               00125800
.*-------------------------------------------------------------------   00125900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00126000
                  AIF   (K'&ZXCONNTKN LE 0).ZG2R  NOT I/O               00126100
                  AIF   ('&XCONNTKN'(1,1) NE '(').ZG2R                  00126200
&ZCGPR            SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                    00126300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00126400
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00126500
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00126600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00126700
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00126800
.ZG2P             ANOP  ,                                               00126900
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00127000
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00127100
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00127200
.ZG2Q             ANOP  ,                                               00127300
&ZMS              SETC  '"CONNTKN='             *KGPRA* MNOTE           00127400
&ZMS              SETC  '&ZMS.&CONNTKN"'                                00127500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00127600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00127700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00127800
.ZG2R             ANOP  ,                                               00127900
.*----------------------------------------------------------------***   00128000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00128100
                  AIF   (N'&ETOKEN LE 1).ZG5A   CK NUM                  00128200
&ZMS              SETC  '"ETOKEN='  *KPOSA* MNOTE                       00128300
&ZMS              SETC  '&ZMS.&ETOKEN"'                                 00128400
&ZMS              SETC  '&ZMS "ETOKEN"'                                 00128500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00128600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00128700
.ZG5A             ANOP  ,                                               00128800
.*-------------------------------------------------------------------   00128900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00129000
&ZXETOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00129100
&XETOKEN          SETC  '&ETOKEN(1)'            SET XVARIABLE           00129200
                  AIF   (N'&ETOKEN GT 1).ZG5B   MULTI PARMS             00129300
&XETOKEN          SETC  '&ETOKEN'   SET XVARIABLE                       00129400
.ZG5B             AIF   (K'&ETOKEN(1) GT 0).ZG5C                        00129500
&ZXETOKEN         SETC  ''          RESET IN/OUTPUT                     00129600
&ZMS              SETC  ' '         *KRQDA*                             00129700
&ZMS              SETC  '&ZMS "ETOKEN" KEY AND ITS'                     00129800
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00129900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00130000
.ZG5C             ANOP  ,                                               00130100
.*-------------------------------------------------------------------   00130200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00130300
                  AIF   (K'&ZXETOKEN LE 0).ZG5R  NOT I/O                00130400
                  AIF   ('&XETOKEN'(1,1) NE '(').ZG5R                   00130500
&ZCGPR            SETC  '&XETOKEN'(2,K'&XETOKEN-2)                      00130600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00130700
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00130800
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00130900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00131000
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00131100
.ZG5P             ANOP  ,                                               00131200
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00131300
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00131400
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00131500
.ZG5Q             ANOP  ,                                               00131600
&ZMS              SETC  '"ETOKEN='  *KGPRA* MNOTE                       00131700
&ZMS              SETC  '&ZMS.&ETOKEN"'                                 00131800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00131900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00132000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00132100
.ZG5R             ANOP  ,                                               00132200
.*----------------------------------------------------------------***   00132300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00132400
                  AIF   (N'&USERDATA LE 1).ZG8A  CK NUM                 00132500
&ZMS              SETC  '"USERDATA='            *KPOSA* MNOTE           00132600
&ZMS              SETC  '&ZMS.&USERDATA"'                               00132700
&ZMS              SETC  '&ZMS "USERDATA"'                               00132800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00132900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00133000
.ZG8A             ANOP  ,                                               00133100
.*-------------------------------------------------------------------   00133200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00133300
&ZXUSERDATA       SETC  'INPUT'     SET IN/OUTPUT                       00133400
&XUSERDATA        SETC  '&USERDATA(1)'          SET XVARIABLE           00133500
                  AIF   (N'&USERDATA GT 1).ZG8B  MULTI PARMS            00133600
&XUSERDATA        SETC  '&USERDATA'             SET XVARIABLE           00133700
.ZG8B             AIF   (K'&USERDATA(1) GT 0).ZG8C                      00133800
&ZXUSERDATA       SETC  ''          RESET IN/OUTPUT                     00133900
&ZMS              SETC  ' '         *KRQDA*                             00134000
&ZMS              SETC  '&ZMS "USERDATA" KEY AND ITS'                   00134100
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00134200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00134300
.ZG8C             ANOP  ,                                               00134400
.*-------------------------------------------------------------------   00134500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00134600
                  AIF   (K'&ZXUSERDATA LE 0).ZG8R  NOT I/O              00134700
                  AIF   ('&XUSERDATA'(1,1) NE '(').ZG8R                 00134800
&ZCGPR            SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                  00134900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00135000
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00135100
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00135200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00135300
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00135400
.ZG8P             ANOP  ,                                               00135500
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00135600
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00135700
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00135800
.ZG8Q             ANOP  ,                                               00135900
&ZMS              SETC  '"USERDATA='            *KGPRA* MNOTE           00136000
&ZMS              SETC  '&ZMS.&USERDATA"'                               00136100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00136200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00136300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00136400
.ZG8R             ANOP  ,                                               00136500
.*----------------------------------------------------------------***   00136600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00136700
                  AIF   (N'&APPLENV LE 1).ZG11A  CK NUM                 00136800
&ZMS              SETC  '"APPLENV='             *KPOSA* MNOTE           00136900
&ZMS              SETC  '&ZMS.&APPLENV"'                                00137000
&ZMS              SETC  '&ZMS "APPLENV"'                                00137100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00137200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00137300
.ZG11A            ANOP  ,                                               00137400
.*-------------------------------------------------------------------   00137500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00137600
&ZXAPPLENV        SETC  'INPUT'     SET IN/OUTPUT                       00137700
&XAPPLENV         SETC  '&APPLENV(1)'           SET XVARIABLE           00137800
                  AIF   (N'&APPLENV GT 1).ZG11B  MULTI PARMS            00137900
&XAPPLENV         SETC  '&APPLENV'  SET XVARIABLE                       00138000
.ZG11B            AIF   (K'&APPLENV(1) GT 0).ZG11C                      00138100
&ZXAPPLENV        SETC  ''          RESET IN/OUTPUT                     00138200
&ZMS              SETC  ' '         *KRQDA*                             00138300
&ZMS              SETC  '&ZMS "APPLENV" KEY AND ITS'                    00138400
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00138500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00138600
.ZG11C            ANOP  ,                                               00138700
.*-------------------------------------------------------------------   00138800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00138900
                  AIF   (K'&ZXAPPLENV LE 0).ZG11R  NOT I/O              00139000
                  AIF   ('&XAPPLENV'(1,1) NE '(').ZG11R                 00139100
&ZCGPR            SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                    00139200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00139300
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00139400
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00139500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00139600
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00139700
.ZG11P            ANOP  ,                                               00139800
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00139900
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00140000
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00140100
.ZG11Q            ANOP  ,                                               00140200
&ZMS              SETC  '"APPLENV='             *KGPRA* MNOTE           00140300
&ZMS              SETC  '&ZMS.&APPLENV"'                                00140400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00140500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00140600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00140700
.ZG11R            ANOP  ,                                               00140800
.*------------------------------------------------------------------    00140900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00141000
&XSECUSER         SETC  ''          INITIALIZE XVARIABLE                00141100
.*-------------------------------------------------------------------   00141200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00141300
.ZG15             ANOP  ,                                               00141400
                  AIF   (K'&SECUSER(1) LE 0).ZG15A                      00141500
&ZTLC             SETC 'NO'                                             00141600
                  AIF   ('&SECUSER(1)' NE '&ZTLC').ZG16                 00141700
&XSECUSER         SETC  'NO'        SET KEYWORD                         00141800
                  AIF   (N'&SECUSER LE 1).ZG15A  CK NUM                 00141900
&ZMS              SETC  '"SECUSER='             *KPOSA* MNOTE           00142000
&ZMS              SETC  '&ZMS.&SECUSER"'                                00142100
&ZMS              SETC  '&ZMS "SECUSER"'                                00142200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00142300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00142400
.ZG15A            ANOP  ,                                               00142500
.*------------------------------------------------------------------    00142600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00142700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00142800
.ZG15A0           AIF   (K'&USERID LE 0).ZG15A1  OK                     00142900
&ZCVAL            SETC '&ZCVAL USERID'          INCORRECT KEY USED      00143000
.ZG15A1           AIF   (K'&ZCVAL LE 0).ZG15A2  OK                      00143100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00143200
&ZMS              SETC  '"SECUSER'  *KMEIA* MNOTE                       00143300
&ZMS              SETC  '&ZMS.=&SECUSER"'                               00143400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00143500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00143600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00143700
.ZG15A2           ANOP  ,                                               00143800
.*-------------------------------------------------------------------   00143900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00144000
.ZG16             ANOP  ,                                               00144100
&ZTLC             SETC 'YES'                                            00144200
                  AIF   ('&SECUSER(1)' NE '&ZTLC').ZG20                 00144300
&XSECUSER         SETC  'YES'       SET KEYWORD                         00144400
                  AIF   (N'&SECUSER LE 1).ZG16A  CK NUM                 00144500
&ZMS              SETC  '"SECUSER='             *KPOSA* MNOTE           00144600
&ZMS              SETC  '&ZMS.&SECUSER"'                                00144700
&ZMS              SETC  '&ZMS "SECUSER"'                                00144800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00144900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00145000
.ZG16A            ANOP  ,                                               00145100
.*----------------------------------------------------------------***   00145200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00145300
                  AIF   (N'&USERID LE 1).ZG18A  CK NUM                  00145400
&ZMS              SETC  '"USERID='  *KPOSA* MNOTE                       00145500
&ZMS              SETC  '&ZMS.&USERID"'                                 00145600
&ZMS              SETC  '&ZMS "USERID"'                                 00145700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00145800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00145900
.ZG18A            ANOP  ,                                               00146000
.*-------------------------------------------------------------------   00146100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00146200
&ZXUSERID         SETC  'INPUT'     SET IN/OUTPUT                       00146300
&XUSERID          SETC  '&USERID(1)'            SET XVARIABLE           00146400
                  AIF   (N'&USERID GT 1).ZG18B  MULTI PARMS             00146500
&XUSERID          SETC  '&USERID'   SET XVARIABLE                       00146600
.ZG18B            AIF   (K'&USERID(1) GT 0).ZG18C                       00146700
&ZXUSERID         SETC  ''          RESET IN/OUTPUT                     00146800
&ZMS              SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*              00146900
&ZMS              SETC  '&ZMS , "USERID" KEY AND ITS'                   00147000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00147100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00147200
.ZG18C            ANOP  ,                                               00147300
.*-------------------------------------------------------------------   00147400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00147500
                  AIF   (K'&ZXUSERID LE 0).ZG18R  NOT I/O               00147600
                  AIF   ('&XUSERID'(1,1) NE '(').ZG18R                  00147700
&ZCGPR            SETC  '&XUSERID'(2,K'&XUSERID-2)                      00147800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                    00147900
                  AIF   (K'&ZCGPR GT 2).ZG18Q                           00148000
                  AIF   ('&ZCGPR' EQ '0').ZG18Q                         00148100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00148200
                  AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME       00148300
.ZG18P            ANOP  ,                                               00148400
                  AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC            00148500
                  AIF   ('&ZCGPR' LT '2').ZG18Q                         00148600
                  AIF   ('&ZCGPR' LE '12').ZG18R                        00148700
.ZG18Q            ANOP  ,                                               00148800
&ZMS              SETC  '"USERID='  *KGPRA* MNOTE                       00148900
&ZMS              SETC  '&ZMS.&USERID"'                                 00149000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00149100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00149200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00149300
.ZG18R            ANOP  ,                                               00149400
.*------------------------------------------------------------------    00149500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00149600
.ZG20             ANOP  ,                                               00149700
&ZXSECUSER        SETC  'INPUT'     SET IN/OUTPUT                       00149800
                  AIF   (K'&XSECUSER GT 0).ZG20E  VALID ARG             00149900
                  AIF   (T'&SECUSER EQ 'O').ZG20D  OMITTED              00150000
&ZASYSLNDX        SETA  0                                               00150100
.ZG20A            ANOP  ,           POSITIONAL MACRO KEY                00150200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00150300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20C                00150400
&ZTLC             SETC 'SECUSER'                                        00150500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG20A       00150600
.ZG20B            ANOP  ,                                               00150700
&ZXSECUSER        SETC  ''          RESET IN/OUTPUT                     00150800
&ZMS              SETC  'THE "SECUSER" KEY'     *KOPTA* MNOTE           00150900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00151000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00151100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00151200
                  AGO   .ZG20E                                          00151300
.ZG20C            ANOP  ,                                               00151400
&ZXSECUSER        SETC  ''          RESET IN/OUTPUT                     00151500
&ZMS              SETC  '"SECUSER='             *KUKWA* MNOTE           00151600
&ZMS              SETC  '&ZMS.&SECUSER"'                                00151700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00151800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00151900
&ZMS              SETC  '&ZMS "NO"'                                     00152000
&ZMS              SETC  '&ZMS OR "YES".'                                00152100
                  MNOTE 8,' &ZMS '                                      00152200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00152300
                  AGO   .ZG20E                                          00152400
.ZG20D            ANOP  ,                                               00152500
&XSECUSER         SETC  'NO'        SET DEFAULT KEYWORD                 00152600
.ZG20E            ANOP  ,                                               00152700
.*----------------------------------------------------------------***   00152800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00152900
                  AIF   (N'&WLMWUTKN LE 1).ZG22A  CK NUM                00153000
&ZMS              SETC  '"WLMWUTKN='            *KPOSA* MNOTE           00153100
&ZMS              SETC  '&ZMS.&WLMWUTKN"'                               00153200
&ZMS              SETC  '&ZMS "WLMWUTKN"'                               00153300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00153400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00153500
.ZG22A            ANOP  ,                                               00153600
.*-------------------------------------------------------------------   00153700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00153800
                  AIF   (K'&WLMWUTKN(1) LE 0).ZG22C  NO PARM            00153900
&ZXWLMWUTKN       SETC  'OUTPUT'    SET OUTPUT                          00154000
&XWLMWUTKN        SETC  '&WLMWUTKN(1)'          SET XVARIABLE           00154100
                  AIF   (N'&WLMWUTKN GT 1).ZG22C                        00154200
&XWLMWUTKN        SETC  '&WLMWUTKN'             SET XVARIABLE           00154300
.ZG22C            ANOP  ,                                               00154400
.*-------------------------------------------------------------------   00154500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00154600
                  AIF   (K'&ZXWLMWUTKN LE 0).ZG22R  NOT I/O             00154700
                  AIF   ('&XWLMWUTKN'(1,1) NE '(').ZG22R                00154800
&ZCGPR            SETC  '&XWLMWUTKN'(2,K'&XWLMWUTKN-2)                  00154900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                    00155000
                  AIF   (K'&ZCGPR GT 2).ZG22Q                           00155100
                  AIF   ('&ZCGPR' EQ '0').ZG22Q                         00155200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00155300
                  AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME       00155400
.ZG22P            ANOP  ,                                               00155500
                  AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC            00155600
                  AIF   ('&ZCGPR' LT '2').ZG22Q                         00155700
                  AIF   ('&ZCGPR' LE '12').ZG22R                        00155800
.ZG22Q            ANOP  ,                                               00155900
&ZMS              SETC  '"WLMWUTKN='            *KGPRA* MNOTE           00156000
&ZMS              SETC  '&ZMS.&WLMWUTKN"'                               00156100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00156200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00156300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00156400
.ZG22R            ANOP  ,                                               00156500
.*----------------------------------------------------------------***   00156600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00156700
                  AIF   (N'&SERVER_TOKEN LE 1).ZG25A  CK NUM            00156800
&ZMS              SETC  '"SERVER_TOKEN='        *KPOSA* MNOTE           00156900
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00157000
&ZMS              SETC  '&ZMS "SERVER_TOKEN"'                           00157100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00157200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00157300
.ZG25A            ANOP  ,                                               00157400
.*-------------------------------------------------------------------   00157500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00157600
&ZXSERVER_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00157700
&XSERVER_TOKEN    SETC  '0'                                             00157800
                  AIF   (K'&SERVER_TOKEN(1) LE 0).ZG25B  PARM           00157900
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN(1)'      SET XVARIABLE           00158000
                  AIF   (N'&SERVER_TOKEN GT 1).ZG25B  MULTI PARMS       00158100
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN'         SET XVARIABLE           00158200
.ZG25B            ANOP  ,                                               00158300
.*-------------------------------------------------------------------   00158400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00158500
                  AIF   (K'&ZXSERVER_TOKEN LE 0).ZG25R  NOT I/O         00158600
                  AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZG25R            00158700
&ZCGPR            SETC  '&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2)          00158800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                    00158900
                  AIF   (K'&ZCGPR GT 2).ZG25Q                           00159000
                  AIF   ('&ZCGPR' EQ '0').ZG25Q                         00159100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00159200
                  AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME       00159300
.ZG25P            ANOP  ,                                               00159400
                  AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC            00159500
                  AIF   ('&ZCGPR' LT '2').ZG25Q                         00159600
                  AIF   ('&ZCGPR' LE '12').ZG25R                        00159700
.ZG25Q            ANOP  ,                                               00159800
&ZMS              SETC  '"SERVER_TOKEN='        *KGPRA* MNOTE           00159900
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00160000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00160100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00160200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00160300
.ZG25R            ANOP  ,                                               00160400
.*----------------------------------------------------------------***   00160500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00160600
                  AIF   (N'&REGION_TOKEN LE 1).ZG28A  CK NUM            00160700
&ZMS              SETC  '"REGION_TOKEN='        *KPOSA* MNOTE           00160800
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00160900
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00161000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00161100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00161200
.ZG28A            ANOP  ,                                               00161300
.*-------------------------------------------------------------------   00161400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00161500
&ZXREGION_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00161600
&XREGION_TOKEN    SETC  '0'                                             00161700
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZG28B  PARM           00161800
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00161900
                  AIF   (N'&REGION_TOKEN GT 1).ZG28B  MULTI PARMS       00162000
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00162100
.ZG28B            ANOP  ,                                               00162200
.*-------------------------------------------------------------------   00162300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00162400
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZG28R  NOT I/O         00162500
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG28R            00162600
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00162700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                    00162800
                  AIF   (K'&ZCGPR GT 2).ZG28Q                           00162900
                  AIF   ('&ZCGPR' EQ '0').ZG28Q                         00163000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00163100
                  AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME       00163200
.ZG28P            ANOP  ,                                               00163300
                  AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC            00163400
                  AIF   ('&ZCGPR' LT '2').ZG28Q                         00163500
                  AIF   ('&ZCGPR' LE '12').ZG28R                        00163600
.ZG28Q            ANOP  ,                                               00163700
&ZMS              SETC  '"REGION_TOKEN='        *KGPRA* MNOTE           00163800
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00163900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00164000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00164100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00164200
.ZG28R            ANOP  ,                                               00164300
.*----------------------------------------------------------------***   00164400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00164500
                  AIF   (N'&RETCODE LE 1).ZG31A  CK NUM                 00164600
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00164700
&ZMS              SETC  '&ZMS.&RETCODE"'                                00164800
&ZMS              SETC  '&ZMS "RETCODE"'                                00164900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00165000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00165100
.ZG31A            ANOP  ,                                               00165200
.*-------------------------------------------------------------------   00165300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00165400
                  AIF   (K'&RETCODE(1) LE 0).ZG31C  NO PARM             00165500
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00165600
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00165700
                  AIF   (N'&RETCODE GT 1).ZG31C                         00165800
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00165900
.ZG31C            ANOP  ,                                               00166000
.*-------------------------------------------------------------------   00166100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00166200
                  AIF   (K'&ZXRETCODE LE 0).ZG31R  NOT I/O              00166300
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG31R                 00166400
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00166500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                    00166600
                  AIF   (K'&ZCGPR GT 2).ZG31Q                           00166700
                  AIF   ('&ZCGPR' EQ '0').ZG31Q                         00166800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00166900
                  AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME       00167000
.ZG31P            ANOP  ,                                               00167100
                  AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC            00167200
                  AIF   ('&ZCGPR' LT '2').ZG31Q                         00167300
                  AIF   ('&ZCGPR' LE '12').ZG31R                        00167400
.ZG31Q            ANOP  ,                                               00167500
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00167600
&ZMS              SETC  '&ZMS.&RETCODE"'                                00167700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00167800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00167900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00168000
.ZG31R            ANOP  ,                                               00168100
.*----------------------------------------------------------------***   00168200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00168300
                  AIF   (N'&RSNCODE LE 1).ZG34A  CK NUM                 00168400
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00168500
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00168600
&ZMS              SETC  '&ZMS "RSNCODE"'                                00168700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00168800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00168900
.ZG34A            ANOP  ,                                               00169000
.*-------------------------------------------------------------------   00169100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00169200
                  AIF   (K'&RSNCODE(1) LE 0).ZG34C  NO PARM             00169300
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00169400
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00169500
                  AIF   (N'&RSNCODE GT 1).ZG34C                         00169600
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00169700
.ZG34C            ANOP  ,                                               00169800
.*-------------------------------------------------------------------   00169900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00170000
                  AIF   (K'&ZXRSNCODE LE 0).ZG34R  NOT I/O              00170100
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG34R                 00170200
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00170300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                    00170400
                  AIF   (K'&ZCGPR GT 2).ZG34Q                           00170500
                  AIF   ('&ZCGPR' EQ '0').ZG34Q                         00170600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00170700
                  AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME       00170800
.ZG34P            ANOP  ,                                               00170900
                  AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC            00171000
                  AIF   ('&ZCGPR' LT '2').ZG34Q                         00171100
                  AIF   ('&ZCGPR' LE '12').ZG34R                        00171200
.ZG34Q            ANOP  ,                                               00171300
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00171400
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00171500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00171600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00171700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00171800
.ZG34R            ANOP  ,                                               00171900
.******************************************************************     00172000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00172100
.******************************************************************     00172200
                  ACTR  10000                                           00172300
.*----------------------------------------------------------------***   00172400
.***AH.P02 EXTRA POSITIONALS                                            00172500
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00172600
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00172700
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00172800
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00172900
.ZGLISTX1         ANOP  ,                                               00173000
&ZCVAL            SETC  ''          ERROR FIELD                         00173100
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00173200
.ZGLIST2          ANOP  ,                                               00173300
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00173400
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00173500
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00173600
                  AGO   .ZGLIST2                                        00173700
.*                                                                      00173800
.ZGLIST3          ANOP  ,                                               00173900
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00174000
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00174100
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00174200
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00174300
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00174400
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00174500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00174600
.ZGLISTX          ANOP  ,                                               00174700
&ZASYSLNDX        SETA  0                                               00174800
.*-------------------------------------------------------------------   00174900
.***AG.MF04 MF=(SLE)                                                    00175000
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00175100
.*******************************************************************    00175200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00175300
.*******************************************************************    00175400
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00175500
.*******************************************************************    00175600
.***AE.01  START OF IWMQINS MACRO CODE                                  00175700
.*******************************************************************    00175800
                  LCLC  &M0M0001                 NAME                   00175900
&M0M0001          SETC  '&XLABEL'                SET NAME               00176000
                  AIF   (K'&XLABEL NE 0).XLAB2                          00176100
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00176200
.*                                                                      00176300
.XLAB2            ANOP  ,                                               00176400
                  AIF   ('&XMF' EQ 'L').XLAB3                           00176500
&M0M0001 DS    0H                             IWMQINS-2                 00176600
.XLAB3            ANOP  ,                                               00176700
.*******************************************************************    00176800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00176900
.*******************************************************************    00177000
              PUSH  PRINT                                               00177100
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00177200
                  PRINT OFF         ++ PR01                             00177300
                  AGO   .ZPRNTXX                                        00177400
.ZPRINTX          PRINT ON                                              00177500
.ZPRNTXX          ANOP  ,                                               00177600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00177700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00177800
.********************************************************************   00177900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00178000
.********************************************************************   00178100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00178200
                      LCLA  &ZOPN1         INVOCATION INDEX             00178300
                      LCLC  &ZOPL(4095)    LABEL                        00178400
                      LCLC  &ZOPO(4095)    OPERATION                    00178500
                      LCLC  &ZOPV(4095)    VALUE                        00178600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00178700
.*                                                                      00178800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00178900
.******************************************************************     00179000
.***AL.L10 IWMQINS FMT=LIST MF=S|L PARAMETERS                           00179100
.******************************************************************     00179200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00179300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00179400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00179500
&XMFATTR              SETC  '0D'                                        00179600
.*                                                                      00179700
&ZOPN                 SETA  &ZOPN+1                                     00179800
&ZOPL(&ZOPN)          SETC  ' '                                         00179900
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00180000
&ZOPO(&ZOPN)          SETC  'B'                                         00180100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00180200
                      AGO   .ZALVL6B                                    00180300
.ZALVL6A              ANOP                                              00180400
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00180500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00180600
.ZALVL6B              ANOP                                              00180700
&ZOPD(&ZOPN)          SETC  '++ IWMQINS ARG PARMS'                      00180800
.*                                                                      00180900
&ZOPN                 SETA  &ZOPN+1                                     00181000
&ZOPL(&ZOPN)          SETC  ' '                                         00181100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00181200
&ZOPV(&ZOPN)          SETC  '1'                                         00181300
&ZOPD(&ZOPN)          SETC  ' '                                         00181400
.*                                                                      00181500
.ZLMFSL2              ANOP  ,                                           00181600
.*-------------------------------------------------------------------   00181700
.***AM.L00  IWMQINS FMT=LIST name                                       00181800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00181900
&ZOPN                 SETA &ZOPN+1                                      00182000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00182100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00182200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00182300
&ZOPD(&ZOPN)          SETC '++ IWMQINS NAME'                            00182400
.ZLMFSL2M             ANOP  ,                                           00182500
.*-------------------------------------------------------------------   00182600
.***AM.L01  IWMQINS FMT=LIST PARAMETERS                                 00182700
&ZOPN                 SETA &ZOPN+1                                      00182800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00182900
&ZOPO(&ZOPN)          SETC 'DS'                                         00183000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00183100
&ZOPD(&ZOPN)          SETC '++ IWMQINS PARM LIST'                       00183200
.*-------------------------------------------------------------------   00183300
.***AM.L02 XVERSION XL1                                                 00183400
&ZOPN                 SETA &ZOPN+1                                      00183500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00183600
&ZOPO(&ZOPN)          SETC 'DS'                                         00183700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00183800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00183900
.*-------------------------------------------------------------------   00184000
.***AM.L09  XRSV001 CL1                                                 00184100
&ZOPN                 SETA &ZOPN+1                                      00184200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00184300
&ZOPO(&ZOPN)          SETC 'DS'                                         00184400
&ZOPV(&ZOPN)          SETC 'CL1'                                        00184500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       00184600
.*-------------------------------------------------------------------   00184700
.***AM.L09  XPLISTLEN XL2                                               00184800
&ZOPN                 SETA &ZOPN+1                                      00184900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00185000
&ZOPO(&ZOPN)          SETC 'DS'                                         00185100
&ZOPV(&ZOPN)          SETC 'XL2'                                        00185200
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00185300
.*-------------------------------------------------------------------   00185400
.***AM.L09  XCONNTKN BL.32                                              00185500
&ZOPN                 SETA &ZOPN+1                                      00185600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNTKN'                         00185700
&ZOPO(&ZOPN)          SETC 'DS'                                         00185800
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00185900
&ZOPD(&ZOPN)          SETC '++ &ZXCONNTKN  XCONNTKN'                    00186000
.*-------------------------------------------------------------------   00186100
.***AM.L09  XETOKEN CL8                                                 00186200
&ZOPN                 SETA &ZOPN+1                                      00186300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00186400
&ZOPO(&ZOPN)          SETC 'DS'                                         00186500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00186600
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00186700
.*-------------------------------------------------------------------   00186800
.***AM.L09  XUSERDATA CL16                                              00186900
&ZOPN                 SETA &ZOPN+1                                      00187000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00187100
&ZOPO(&ZOPN)          SETC 'DS'                                         00187200
&ZOPV(&ZOPN)          SETC 'CL16'                                       00187300
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA  XUSERDATA'                  00187400
.*-------------------------------------------------------------------   00187500
.***AM.L09 ADDR XAPPLENV A                                              00187600
&ZOPN                 SETA &ZOPN+1                                      00187700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAPPLENV_ADDR'                    00187800
&ZOPO(&ZOPN)          SETC 'DS'                                         00187900
&ZOPV(&ZOPN)          SETC 'A'                                          00188000
&ZOPD(&ZOPN)          SETC '++ &ZXAPPLENV ADDR XAPPLENV'                00188100
.*-------------------------------------------------------------------   00188200
.***AM.L03 XSECUSER_OPTIONS BL.8                                        00188300
&ZOPN                 SETA &ZOPN+1                                      00188400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECUSER_OPTIONS'                 00188500
&ZOPO(&ZOPN)          SETC 'DS'                                         00188600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00188700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00188800
.*                                                                      00188900
&ZOPN                 SETA  &ZOPN+1                                     00189000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSECUSER_YES'                    00189100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00189200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00189300
&ZOPD(&ZOPN)          SETC  '++ XSECUSER.'                              00189400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00189500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00189600
.*-------------------------------------------------------------------   00189700
.***AM.L09  XRSV029 CL3                                                 00189800
&ZOPN                 SETA &ZOPN+1                                      00189900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV029'                          00190000
&ZOPO(&ZOPN)          SETC 'DS'                                         00190100
&ZOPV(&ZOPN)          SETC 'CL3'                                        00190200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV029'                       00190300
.*-------------------------------------------------------------------   00190400
.***AM.L09  XUSERID CL8                                                 00190500
&ZOPN                 SETA &ZOPN+1                                      00190600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERID'                          00190700
&ZOPO(&ZOPN)          SETC 'DS'                                         00190800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00190900
&ZOPD(&ZOPN)          SETC '++ &ZXUSERID  XUSERID'                      00191000
.*-------------------------------------------------------------------   00191100
.***AM.L09  XWLMWUTKN CL16                                              00191200
&ZOPN                 SETA &ZOPN+1                                      00191300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWLMWUTKN'                        00191400
&ZOPO(&ZOPN)          SETC 'DS'                                         00191500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00191600
&ZOPD(&ZOPN)          SETC '++ &ZXWLMWUTKN  XWLMWUTKN'                  00191700
.*-------------------------------------------------------------------   00191800
.***AM.MLM2 SAVED LOCATION COUNTER                                      00191900
                      AIF  (&XPLISTVER GE 1).ZL12LA                     00192000
                      AIF  ('&ZENDBASEPL' NE '').ZL12LA                 00192100
&ZENDBASEPL           SETC 'YES'                                        00192200
&ZOPN                 SETA &ZOPN+1                                      00192300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00192400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00192500
&ZOPV(&ZOPN)          SETC '*'                                          00192600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00192700
.ZL12LA               ANOP  ,                                           00192800
.*-------------------------------------------------------------------   00192900
.***AM.LVER1                                                            00193000
                      AIF  (&XPLISTVER LT 1).ZL12L                      00193100
.*-------------------------------------------------------------------   00193200
.*-------------------------------------------------------------------   00193300
.***AM.L09  XSERVER_TOKEN CL32                                          00193400
&ZOPN                 SETA &ZOPN+1                                      00193500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_TOKEN'                    00193600
&ZOPO(&ZOPN)          SETC 'DS'                                         00193700
&ZOPV(&ZOPN)          SETC 'CL32'                                       00193800
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_TOKEN  XSERVER_TOKEN'          00193900
.*-------------------------------------------------------------------   00194000
.***AM.LVER2                                                            00194100
.ZL12L                ANOP  ,                                           00194200
.*-------------------------------------------------------------------   00194300
.*-------------------------------------------------------------------   00194400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00194500
                      AIF  (&XPLISTVER GE 2).ZL13LA                     00194600
                      AIF  ('&ZENDBASEPL' NE '').ZL13LA                 00194700
&ZENDBASEPL           SETC 'YES'                                        00194800
&ZOPN                 SETA &ZOPN+1                                      00194900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00195000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00195100
&ZOPV(&ZOPN)          SETC '*'                                          00195200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00195300
.ZL13LA               ANOP  ,                                           00195400
.*-------------------------------------------------------------------   00195500
.***AM.LVER1                                                            00195600
                      AIF  (&XPLISTVER LT 2).ZL13L                      00195700
.*-------------------------------------------------------------------   00195800
.*-------------------------------------------------------------------   00195900
.***AM.L09  XREGION_TOKEN CL16                                          00196000
&ZOPN                 SETA &ZOPN+1                                      00196100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00196200
&ZOPO(&ZOPN)          SETC 'DS'                                         00196300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00196400
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN  XREGION_TOKEN'          00196500
.*-------------------------------------------------------------------   00196600
.***AM.LVER2                                                            00196700
.ZL13L                ANOP  ,                                           00196800
.*-------------------------------------------------------------------   00196900
.*-------------------------------------------------------------------   00197000
.***AM.L10 END OF IWMQINS LIST PARAMETERS                               00197100
&ZOPN                 SETA &ZOPN+1                                      00197200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00197300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00197400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00197500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00197600
.*                                                                      00197700
&ZOPN                 SETA &ZOPN+1                                      00197800
&ZOPL(&ZOPN)          SETC ' '                                          00197900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00198000
&ZOPV(&ZOPN)          SETC '1'                                          00198100
&ZOPD(&ZOPN)          SETC ' '                                          00198200
.*-------------------------------------------------------------------   00198300
.***AL.L12 IWMQINS FMT=LIST MF=S|L PARAMETERS                           00198400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00198500
.*                                                                      00198600
&ZOPN                 SETA  &ZOPN+1                                     00198700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00198800
&ZOPO(&ZOPN)          SETC  'DC'                                        00198900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00199000
&ZOPD(&ZOPN)          SETC  '++ IWMQINS ARG PARMS'                      00199100
.*                                                                      00199200
.ZLMFSLX              ANOP  ,                                           00199300
.*-------------------------------------------------------------------   00199400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00199500
&ZPLLEN               SETA 64                                           00199600
.*                                                                      00199700
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00199800
&ZPLLEN               SETA 96                                           00199900
.ZLLEN2Z              ANOP  ,                                           00200000
.*                                                                      00200100
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00200200
&ZPLLEN               SETA 112                                          00200300
.ZLLEN3Z              ANOP  ,                                           00200400
.*                                                                      00200500
.******************************************************************     00200600
.***AI.L01 IWMQINS FMT=LIST FILL IN PARAMETER AREA                      00200700
.******************************************************************     00200800
                      ACTR  10000                                       00200900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00201000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00201100
&ZCVAL                SETC  'LAE'          XAX MODE                     00201200
.ZIMFXA               ANOP ,                                            00201300
.*                                                                      00201400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00201500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00201600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00201700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00201800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00201900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00202000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00202100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00202200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00202300
&ZOPN                 SETA  &ZOPN+1                                     00202400
&ZOPL(&ZOPN)          SETC  ' '                                         00202500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00202600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00202700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00202800
                      AGO   .ZIMFNX                                     00202900
.*                                                                      00203000
.ZIMFN2               ANOP ,                                            00203100
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00203200
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00203300
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00203400
&ZOPN                 SETA  &ZOPN+1                                     00203500
&ZOPL(&ZOPN)          SETC  ' '                                         00203600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00203700
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00203800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00203900
                      AGO   .ZIMFNX                                     00204000
.ZIMFNX1              ANOP ,                                            00204100
&ZOPN                 SETA  &ZOPN+1                                     00204200
&ZOPL(&ZOPN)          SETC  ' '                                         00204300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00204400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00204500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00204600
.ZIMFNX               ANOP ,                                            00204700
.********************************************************************   00204800
.***AI.L02 IWMQINS FMT=LIST INITIALIZE PARAMETER AREA                   00204900
.********************************************************************   00205000
.***AI.L03 MF=(SLE)                                                     00205100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00205200
.*                                                                      00205300
&ZOPN                 SETA  &ZOPN+1                                     00205400
&ZOPL(&ZOPN)          SETC  ' '                                         00205500
&ZOPO(&ZOPN)          SETC  'XC'                                        00205600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00205700
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00205800
.ZIMFLX               ANOP  ,                                           00205900
.*-------------------------------------------------------------------   00206000
.***AI.L04A XVERSION XL1                                                00206100
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00206200
&ZOPN                 SETA  &ZOPN+1                                     00206300
&ZOPL(&ZOPN)          SETC  ' '                                         00206400
&ZOPO(&ZOPN)          SETC  'MVI'                                       00206500
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00206600
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00206700
.ZIMFVW               ANOP  ,                                           00206800
.*-------------------------------------------------------------------   00206900
.***AI.L04 XPLISTLEN XL2                                                00207000
&ZOPN                 SETA  &ZOPN+1                                     00207100
&ZOPL(&ZOPN)          SETC  ' '                                         00207200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00207300
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00207400
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00207500
.*-------------------------------------------------------------------   00207600
.***AI.L25  XCONNTKN XL4                                                00207700
                      AIF   ('&ZXCONNTKN' EQ '').ZI4E                   00207800
                      AIF   ('&ZXCONNTKN' EQ 'OUTPUT').ZI4E             00207900
&ZCGPR                SETC  '&XCONNTKN'                                 00208000
.*                                                                      00208100
                      AIF   ('&XCONNTKN'(1,1) NE '(').ZI4B              00208200
&ZCGPR   SETC  '0('.'&XCONNTKN'(2,K'&XCONNTKN-2).')'                    00208300
                      AGO   .ZI4D                                       00208400
.ZI4B                 ANOP  ,                                           00208500
.*                                                                      00208600
&ZC                   SETC  '&XCONNTKN'(1,1)                            00208700
                      AIF   (T'&ZC NE 'N').ZI4D                         00208800
&ZC                   SETC  '&XCONNTKN'                                 00208900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00209000
&ZCGPR                SETC  '=BL4''&XCONNTKN'''                         00209100
.*                                                                      00209200
.ZI4D                 ANOP  ,                                           00209300
.*                                                                      00209400
&ZOPN                 SETA  &ZOPN+1                                     00209500
&ZOPL(&ZOPN)          SETC  ' '                                         00209600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00209700
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00209800
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNTKN XCONNTKN'                    00209900
.*                                                                      00210000
.ZI4E                 ANOP  ,                                           00210100
.*-------------------------------------------------------------------   00210200
.***AI.L25  XETOKEN CL8                                                 00210300
                      AIF   ('&ZXETOKEN' EQ '').ZI5E                    00210400
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI5E              00210500
&ZCGPR                SETC  '&XETOKEN'                                  00210600
.*                                                                      00210700
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI5B               00210800
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00210900
.ZI5B                 ANOP  ,                                           00211000
.*                                                                      00211100
&ZOPN                 SETA  &ZOPN+1                                     00211200
&ZOPL(&ZOPN)          SETC  ' '                                         00211300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00211400
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00211500
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00211600
.*                                                                      00211700
.ZI5E                 ANOP  ,                                           00211800
.*-------------------------------------------------------------------   00211900
.***AI.L25  XUSERDATA CL16                                              00212000
                      AIF   ('&ZXUSERDATA' EQ '').ZI6E                  00212100
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI6E            00212200
&ZCGPR                SETC  '&XUSERDATA'                                00212300
.*                                                                      00212400
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI6B             00212500
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00212600
.ZI6B                 ANOP  ,                                           00212700
.*                                                                      00212800
&ZOPN                 SETA  &ZOPN+1                                     00212900
&ZOPL(&ZOPN)          SETC  ' '                                         00213000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00213100
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           00213200
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00213300
.*                                                                      00213400
.ZI6E                 ANOP  ,                                           00213500
.*-------------------------------------------------------------------   00213600
.***AI.L19 ADDR XAPPLENV A                                              00213700
                      AIF   ('&ZXAPPLENV' EQ '').ZI7H                   00213800
&ZCLNG                SETC  '&XAPPLENV'                                 00213900
&ZCGPR                SETC  '14'                                        00214000
         AIF   ('&XAPPLENV'(1,1) EQ '(').ZI7F  IN GPR                   00214100
.*                                                                      00214200
&ZOPN                 SETA  &ZOPN+1                                     00214300
&ZOPL(&ZOPN)          SETC  ' '                                         00214400
&ZOPO(&ZOPN)          SETC  'LA'                                        00214500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00214600
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00214700
.*                                                                      00214800
                      AGO   .ZI7G                                       00214900
.*                                                                      00215000
.ZI7F                 ANOP  ,                                           00215100
&ZCGPR   SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                             00215200
.*                                                                      00215300
.ZI7G                 ANOP  ,                                           00215400
.*                                                                      00215500
&ZOPN                 SETA  &ZOPN+1                                     00215600
&ZOPL(&ZOPN)          SETC  ' '                                         00215700
&ZOPO(&ZOPN)          SETC  'ST'                                        00215800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00215900
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00216000
.*                                                                      00216100
.ZI7H                 ANOP  ,                                           00216200
.*-------------------------------------------------------------------   00216300
.***AI.L05 XSECUSER_OPTIONS BL1                                         00216400
&ZW                   SETC  ''                                          00216500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00216600
.*-------------------------------------------------------------------   00216700
.***AI.L08 XSECUSER_OPTIONS "YES"                                       00216800
.***      BL1'1XXXXXXX'                                                 00216900
         AIF   ('&XSECUSER' NE 'YES').ZI9A                              00217000
&ZW                   SETC  '&ZW.10000000'                              00217100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00217200
                      AGO   .ZI9C                                       00217300
.*                                                                      00217400
.ZI9A                 ANOP  ,                                           00217500
&ZW                   SETC  '&ZW.00000000'                              00217600
.ZI9C                 ANOP  ,                                           00217700
.*-------------------------------------------------------------------   00217800
.***AI.L11 XSECUSER_OPTIONS BL1                                         00217900
                      AIF   ('&ZCLNG' NE 'YES').ZI9E  ALL ZERO BITS     00218000
&ZOPN                 SETA  &ZOPN+1                                     00218100
&ZOPL(&ZOPN)          SETC  ' '                                         00218200
&ZOPO(&ZOPN)          SETC  'OI'                                        00218300
&ZOPV(&ZOPN)          SETC  '36(1),B''&ZW'''                            00218400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00218500
.ZI9E                 ANOP  ,                                           00218600
.*-------------------------------------------------------------------   00218700
.***AI.L25  XUSERID CL8                                                 00218800
                      AIF   ('&ZXUSERID' EQ '').ZI11E                   00218900
                      AIF   ('&ZXUSERID' EQ 'OUTPUT').ZI11E             00219000
&ZCGPR                SETC  '&XUSERID'                                  00219100
.*                                                                      00219200
                      AIF   ('&XUSERID'(1,1) NE '(').ZI11B              00219300
&ZCGPR   SETC  '0('.'&XUSERID'(2,K'&XUSERID-2).')'                      00219400
.ZI11B                ANOP  ,                                           00219500
.*                                                                      00219600
&ZOPN                 SETA  &ZOPN+1                                     00219700
&ZOPL(&ZOPN)          SETC  ' '                                         00219800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00219900
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00220000
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERID XUSERID'                      00220100
.*                                                                      00220200
.ZI11E                ANOP  ,                                           00220300
.*-------------------------------------------------------------------   00220400
.***AI.LVER01                                                           00220500
                      AIF  (&XPLISTVER LT 1).ZI13Z                      00220600
.*-------------------------------------------------------------------   00220700
.***AI.L25  XSERVER_TOKEN CL32                                          00220800
                      AIF   ('&ZXSERVER_TOKEN' EQ '').ZI13E             00220900
                      AIF   ('&ZXSERVER_TOKEN' EQ 'OUTPUT').ZI13E       00221000
&ZCGPR                SETC  '&XSERVER_TOKEN'                            00221100
         AIF   ('&XSERVER_TOKEN' EQ '0').ZI13E                          00221200
         AIF   ('&XSERVER_TOKEN' EQ '0').ZI13E                          00221300
.*                                                                      00221400
                      AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZI13B        00221500
&ZCGPR   SETC  '0('.'&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2).')'          00221600
                      AGO   .ZI13D                                      00221700
.ZI13B                ANOP  ,                                           00221800
.*                                                                      00221900
                      AIF   ('&SERVER_TOKEN(1)' EQ '').ZI13I  OMITTED   00222000
&ZC                   SETC  '0'                                         00222100
                      AIF   ('&XSERVER_TOKEN' NE '&ZC').ZI13C           00222200
.ZI13I                ANOP  ,                                           00222300
&ZCGPR                SETC  '=CL32''&XSERVER_TOKEN'''                   00222400
.ZI13C                ANOP  ,                                           00222500
.*                                                                      00222600
.ZI13D                ANOP  ,                                           00222700
.*                                                                      00222800
&ZOPN                 SETA  &ZOPN+1                                     00222900
&ZOPL(&ZOPN)          SETC  ' '                                         00223000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00223100
&ZOPV(&ZOPN)          SETC  '64(32,1),&ZCGPR'                           00223200
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_TOKEN XSERVER_TOKEN'          00223300
.*                                                                      00223400
.ZI13E                ANOP  ,                                           00223500
.*-------------------------------------------------------------------   00223600
.***AI.LVER02                                                           00223700
.ZI13Z                ANOP  ,                                           00223800
.*-------------------------------------------------------------------   00223900
.***AI.LVER01                                                           00224000
                      AIF  (&XPLISTVER LT 2).ZI14Z                      00224100
.*-------------------------------------------------------------------   00224200
.***AI.L25  XREGION_TOKEN CL16                                          00224300
                      AIF   ('&ZXREGION_TOKEN' EQ '').ZI14E             00224400
                      AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZI14E       00224500
&ZCGPR                SETC  '&XREGION_TOKEN'                            00224600
         AIF   ('&XREGION_TOKEN' EQ '0').ZI14E                          00224700
         AIF   ('&XREGION_TOKEN' EQ '0').ZI14E                          00224800
.*                                                                      00224900
                      AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZI14B        00225000
&ZCGPR   SETC  '0('.'&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2).')'          00225100
                      AGO   .ZI14D                                      00225200
.ZI14B                ANOP  ,                                           00225300
.*                                                                      00225400
                      AIF   ('&REGION_TOKEN(1)' EQ '').ZI14I  OMITTED   00225500
&ZC                   SETC  '0'                                         00225600
                      AIF   ('&XREGION_TOKEN' NE '&ZC').ZI14C           00225700
.ZI14I                ANOP  ,                                           00225800
&ZCGPR                SETC  '=CL16''&XREGION_TOKEN'''                   00225900
.ZI14C                ANOP  ,                                           00226000
.*                                                                      00226100
.ZI14D                ANOP  ,                                           00226200
.*                                                                      00226300
&ZOPN                 SETA  &ZOPN+1                                     00226400
&ZOPL(&ZOPN)          SETC  ' '                                         00226500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00226600
&ZOPV(&ZOPN)          SETC  '96(16,1),&ZCGPR'                           00226700
&ZOPD(&ZOPN)          SETC  '++ &ZXREGION_TOKEN XREGION_TOKEN'          00226800
.*                                                                      00226900
.ZI14E                ANOP  ,                                           00227000
.*-------------------------------------------------------------------   00227100
.***AI.LVER02                                                           00227200
.ZI14Z                ANOP  ,                                           00227300
.*-------------------------------------------------------------------   00227400
&ZOPN1                SETA &ZOPN                                        00227500
.*******************************************************************    00227600
.***  PROCESS IWMQINS OUTPUT PARAMETERS                                 00227700
.*******************************************************************    00227800
                      ACTR  10000                                       00227900
.*------------------------------------------------------------------    00228000
.***AO.L02 XWLMWUTKN CL16                                               00228100
         AIF   ('&ZXWLMWUTKN' EQ 'OUTPUT').ZO12A  OUTPUT                00228200
         AIF   ('&ZXWLMWUTKN' NE 'INOUT').ZO12C  INOUT                  00228300
.ZO12A    AIF   ('&XWLMWUTKN'(1,1) NE '(').ZO12B  ADDR IN GPR           00228400
&ZCGPR   SETC  '&XWLMWUTKN'(2,K'&XWLMWUTKN-2)                           00228500
&ZOPN                 SETA  &ZOPN+1                                     00228600
&ZOPL(&ZOPN)          SETC  ' '                                         00228700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00228800
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),48(1)'                        00228900
&ZOPD(&ZOPN)          SETC  '++ XWLMWUTKN CL16'                         00229000
                      AGO   .ZO12C                                      00229100
.*                                                                      00229200
.ZO12B                ANOP  ,                                           00229300
&ZAWRK   SETA  K'&XWLMWUTKN                                             00229400
         AIF   ('&XWLMWUTKN'(&ZAWRK,1) NE ')').ZO12G                    00229500
&ZN      SETA  2                                                        00229600
.ZO12H    ANOP                                                          00229700
         AIF   (&ZN GE &ZAWRK).ZO12G                                    00229800
         AIF   ('&XWLMWUTKN'(&ZN,1) NE '(').ZO12I                       00229900
&ZC      SETC  '&XWLMWUTKN'(1,&ZN).'16'.','                             00230000
&ZC      SETC  '&ZC'.'&XWLMWUTKN'(&ZN+1,&ZAWRK-&ZN).',48(1)'            00230100
         AGO   .ZO12J                                                   00230200
.ZO12I    ANOP                                                          00230300
&ZN      SETA  &ZN+1                                                    00230400
         AGO   .ZO12H                                                   00230500
.ZO12G    ANOP                                                          00230600
&ZC      SETC  '&XWLMWUTKN.(16),48(1)'                                  00230700
.ZO12J    ANOP                                                          00230800
&ZOPN                 SETA  &ZOPN+1                                     00230900
&ZOPL(&ZOPN)          SETC  ' '                                         00231000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00231100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00231200
&ZOPD(&ZOPN)          SETC  '++ XWLMWUTKN CL16'                         00231300
.ZO12C                ANOP  ,                                           00231400
.*******************************************************************    00231500
.***AO.X02  RETURN CODE PROCESSING                                      00231600
.*******************************************************************    00231700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00231800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00231900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00232000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00232100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00232200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00232300
&ZOPN                 SETA  &ZOPN+1                                     00232400
&ZOPL(&ZOPN)          SETC  ' '                                         00232500
&ZOPO(&ZOPN)          SETC  'ST'                                        00232600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00232700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00232800
                      AGO   .ZMRETX                                     00232900
.*                                                                      00233000
.ZMRET2               ANOP  ,                                           00233100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00233200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00233300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00233400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00233500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00233600
&ZOPN                 SETA  &ZOPN+1                                     00233700
&ZOPL(&ZOPN)          SETC  ' '                                         00233800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00233900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00234000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00234100
.ZMRETX               ANOP  ,                                           00234200
.*******************************************************************    00234300
.***AO.X03  REASON CODE PROCESSING                                      00234400
.*******************************************************************    00234500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00234600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00234700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00234800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00234900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00235000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00235100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00235200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00235300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00235400
&ZOPN                 SETA  &ZOPN+1                                     00235500
&ZOPL(&ZOPN)          SETC  ' '                                         00235600
&ZOPO(&ZOPN)          SETC  'ST'                                        00235700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00235800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00235900
                      AGO   .ZMRSNX                                     00236000
.*                                                                      00236100
.ZMRSN2               ANOP  ,                                           00236200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00236300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00236400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00236500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00236600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00236700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00236800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00236900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00237000
&ZOPN                 SETA  &ZOPN+1                                     00237100
&ZOPL(&ZOPN)          SETC  ' '                                         00237200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00237300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00237400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00237500
.ZMRSNX               ANOP  ,                                           00237600
.*******************************************************************    00237700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00237800
.*******************************************************************    00237900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00238000
.*******************************************************************    00238100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00238200
.*******************************************************************    00238300
                      ACTR  10000                                       00238400
.*                                                                      00238500
                      LCLA  &ZLC           COLUMN POSITION              00238600
                      LCLA  &ZOPX          LIST TABLE INDEX             00238700
                      LCLC  &ZLL           LABEL                        00238800
                      LCLC  &ZLOP          OPERATION                    00238900
                      LCLC  &ZLV           VALUE                        00239000
                      LCLC  &ZLD           DESCRIPTION                  00239100
.*                                                                      00239200
&ZOPX                 SETA  1                                           00239300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00239400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00239500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00239600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00239700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00239800
                      AIF   (K'&ZLD LE 0).ZL5                           00239900
&ZLC                  SETA  35             COMMENT COLUMN               00240000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00240100
&ZLC                  SETA  33             COMMMENT COLUMN              00240200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00240300
&ZLV                  SETC  '&ZLV'.' '                                  00240400
                      AGO   .ZL3                                        00240500
.*                                                                      00240600
.ZL4                  ANOP  ,                                           00240700
&ZLV                  SETC  '&ZLV'.' '                                  00240800
.ZL5                  ANOP  ,                                           00240900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00241000
.*                                                                      00241100
&ZLL     &ZLOP &ZLV                                                     00241200
.*                                                                      00241300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00241400
                      AGO   .ZL2           CONTINUE LOOPING             00241500
.*                                                                      00241600
.ZLX                  ANOP  ,                                           00241700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00241800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00241900
     L     14,16(0,0)              GET CVT ADDRESS                      00242000
     L     14,772(14,0)            GET SFT ADDRESS                      00242100
     L     14,380(14,0)            GET LX FOR SERVICE ROUTINE           00242200
     LA    15,38                   GET EX FOR SERVICE ROUTINE           00242300
     OR    14,15                   GET PC NUMBER                        00242400
     PC    0(14)                                                        00242500
END&SYSNDX DS    0H                END LABEL                            00242600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00242700
.ZLINKX               ANOP  ,                                           00242800
.*******************************************************************    00242900
.***AP.X01  FORMAT GENERATED CODE                                       00243000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00243100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00243200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00243300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00243400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00243500
                      AIF   (K'&ZLD LE 0).ZL51                          00243600
&ZLC                  SETA  35             COMMENT COLUMN               00243700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00243800
&ZLC                  SETA  33             COMMENT COLUMN               00243900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00244000
&ZLV                  SETC  '&ZLV'.' '                                  00244100
                      AGO   .ZL31                                       00244200
.*                                                                      00244300
.ZL41                 ANOP  ,                                           00244400
&ZLV                  SETC  '&ZLV'.' '                                  00244500
.ZL51                 ANOP  ,                                           00244600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00244700
.*                                                                      00244800
&ZLL     &ZLOP &ZLV                                                     00244900
.*                                                                      00245000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00245100
                      AGO   .ZL21          CONTINUE LOOPING             00245200
.*                                                                      00245300
.ZLX1                 ANOP  ,                                           00245400
.*******************************************************************    00245500
.***AP.X02  END OF IWMQINS MACRO                                        00245600
&ZIWMQINS             SETC  'YES'          SET IWMQINS USED             00245700
         POP   PRINT                                                    00245800
*                                            IWMQINS-2                  00245900
         SPACE 1                                                        00246000
.ZLX2                 ANOP  ,                                           00246100
         MEND                                                           00246200
**********************************************************************/ 00246300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00246400
*%IWMQINS: MACRO KEYS(CONNTKN,ETOKEN,USERDATA,APPLENV,SECUSER,USERID,   00246500
*                 WLMWUTKN,SERVER_TOKEN,REGION_TOKEN,RETCODE,RSNCODE,   00246600
*                 PLISTVER,MF);                                         00246700
*  ANS('?'||MACLABEL||' '||'IWMQINSP '||MACLIST||                       00246800
*         ' '||MACKEYS||';') COL(MACLMAR);                              00246900
*%END IWMQINS;                                                          00247000
