*/********************************************************************* 00050000
*MACRO NAME: IHADFA.                                                    00100000
*                                                                    */ 00150000
*/*PROPRIETARY V3 STATEMENT                                          */ 00185700
*/*LICENSED MATERIALS - PROPERTY OF IBM                              */ 00221400
*/*"RESTRICTED MATERIALS OF IBM"                                     */ 00257100
*/*5647-A01                                                          */ 00292800
*/*(C) COPYRIGHT 1985,2000  IBM CORP.                                */ 00328500
*/*STATUS = HDZ11F0                                                  */ 00346300
*/*END PROPRIETARY V3 STATEMENT                                      */ 00364200
*/*                                                                  *  00400000
*                                                                       00450000
*PURPOSE: MAP THE 'DATA FACILITIES AREA', WHICH CONTAINS INFORMATION    00500000
*     THAT APPLIES TO DFP OR DFSMS.  THE DFA STORAGE IS FIXED,          00550000
*     GLOBAL, PROTECTION KEY 0, NOT FETCH PROTECTED.                    00600000
*                                                                       00650000
*USAGE:                                                            @LEA 00651000
*     1) WHILE A PROGRAM IS EXECUTING, IT MAY:                     @LEA 00652000
*       A) TEST FOR SPECIFIC FEATURES OF DFSMS (OR DFP) WHICH MAY  @LEA 00653000
*          BE INDICATED BY FEATURE BITS.                           @LEA 00654000
*       B) DETERMINE THE CURRENT LEVEL OF DFSMS. THE DFARELS FIELD @LEA 00655000
*          (A 4-BYTE FIELD) INDICATES THE PRODUCT LEVEL. IF THE    @LEA 00656000
*          FIRST BYTE CONTAINS X'00', THEN YOUR PROGRAM IS NOT     @LEA 00657000
*          EXECUTING ON DFSMS, IT IS RUNNING ON MVS/XA DFP VERSION @LEA 00658000
*          2 OR MVS/DFP VERSION 3 AND THE FOLLOWING THREE BYTES    @LEA 00659000
*          WILL ALSO CONTAIN X'00'. ON THOSE TWO PRODUCTS YOU MAY  @LEA 00660000
*          DETERMINE THE RELEASE LEVEL FROM THE 2-BYTE FIELD       @LEA 00661000
*          DFPREL.                                                 @LEA 00662000
*                                                                  @LEA 00663000
*          IF THE FIRST BYTE OF DFARELS CONTAINS A X'01', THEN     @LEA 00664000
*          YOUR PROGRAM IS RUNNING ON DFSMS/MVS AND THE FOLLOWING  @LEA 00665000
*          THREE BYTES DESIGNATE THE VERSION, RELEASE AND          @LEA 00666000
*          MODIFICATION LEVEL OF DFSMS/MVS. FOR EXAMPLE A VALUE    @LEA 00667000
*          OF X'01010200' IN DFARELS DESIGNATES DFSMS/MVS          @LEA 00668000
*          VERSION 1, RELEASE 2, MODIFICATION LEVEL 0.             @LEA 00669000
*                                                                  @LEA 00669100
*          IF THE FIRST BYTE OF DFARELS CONTAINS A X'02', THEN     @LOA 00669200
*          YOUR PROGRAM IS RUNNING ON DFSMS THAT IS SHIPPED ONLY   @LOA 00669300
*          ON OS/390.  THIS FOLLOWED DFSMS/MVS 1.5.0.  SINCE DFSMS @LOA 00669400
*          MIGHT NOT BE SHIPPED WITH EACH OS/390 RELEASE,          @LOA 00669500
*          THE NEXT THREE BYTES INDICATE THE VERSION, RELEASE, AND @LOA 00669600
*          MODIFICATION LEVELS IN WHICH THIS LEVEL OF DFSMS WAS    @LOA 00669700
*          FIRST SHIPPED.                                          @LOA 00669800
*                                                                  @LOA 00669900
*             FIRST BYTE VALUES:                                   @LOA 00670000
*                X'00' DFP                                         @LOA 00670100
*                X'01' DFSMS/MVS                                   @LOA 00670200
*                X'02' DFSMS that is exclusive to OS/390           @LOA 00670300
*                                                                  @LEA 00670400
*          THE INTENT IS THAT IN ANY FUTURE LEVEL OF THE DFA, THE  @LEA 00671000
*          4-BYTE DFARELS WILL NOT CONTAIN A SMALLER VALUE. IF     @LEA 00672000
*          YOUR PURPOSE IN TESTING DFARELS IS TO DETERMINE WHETHER @LEA 00673000
*          A PARTICULAR FEATURE OF DFSMS IS AVAILABLE, THEN        @LEA 00674000
*          YOUR PROGRAM SHOULD TEST ALL FOUR BYTES OF DFARELS.     @LEA 00675000
*     2) WHILE A PROGRAM IS BEING ASSEMBLED, IT MAY DETERMINE THE  @LEA 00676000
*        LEVEL OF DFSMS MACRO SUPPORT AVAILABLE BY TESTING THE     @LEA 00677000
*        GLOBAL MACRO VARIABLE &IHADFARELS. THIS WILL ALLOW YOU    @LEA 00678000
*        TO ASSEMBLE A PROGRAM WHICH OPTIONALLY USES A NEW MACRO   @LEA 00679000
*        OR MACRO PARAMETER THAT IS AVAILABLE ONLY ON A CERTAIN    @LEA 00680000
*        LEVEL OF THE SYSTEM. NOTE: YOUR PROGRAM'S TEST OF THIS    @LEA 00681000
*        VARIABLE MUST FOLLOW INVOCATION OF THE IHADFA MACRO.      @LEA 00682000
*                                                                  @LEA 00683000
*        FOR EXAMPLE, THE FOLLOWING CODE EXPANDS ONE OF TWO MACRO  @LEA 00684000
*        INVOCATIONS.                                              @LEA 00685000
*                                                                  @LEA 00686000
*        GBLC  &IHADFARELS  SET BY IHADFA MACRO TO BE SYSTEM LEVEL @LEA 00687000
*        IHADFA             SET &IHADFARELS AND DEFINE DFARELS     @LEA 00688000
*        ...                                                       @LEA 00689000
*        AIF   ('&IHADFARELS' LT '01010300').OLD                   @LEA 00690000
*        DEVTYPE UCBLIST=(MYLIST,1,ANY),MF=(E,DEVTLIST)            @LEA 00691000
*        AGO   .CONT                                               @LEA 00692000
*.OLD    DEVTYPE UCBLIST=(MYLIST,1),MF=(E,DEVTLIST)                @LEA 00693000
*.CONT   ANOP                                                      @LEA 00694000
*******************************************************************@LEA 00695000
*STATUS: SEE CHANGE ACTIVITY BELOW                                      00700000
*                                                                       00800000
*PROCESSOR: PLS 3, PLAS, PLX, ASSEMBLER H VERSION 2,                    00833300
*           HIGH LEVEL ASSEMBLER.                                  @LOA 00866600
*                                                                       00900000
*POINTED TO BY: CVTDFA, ABPDFPID, AND CVTCKRAS.                         00950000
*                                                                       01000000
*INVOCATION:                                                            01050000
*     ASSEMBLER: IHADFA                                                 01100000
*                USING DFA,XX                                           01150000
*     PL/AS: %INCLUDE SYSLIB(IHADFA)                                    01200000
*            TO CHANGE THE ADDRESSABILITY, THIS CAN BE PRECEDED WITH    01250000
*                                                                @03D   01300000
*            %DFADEF = 'XXXXX'                                          01350000
* $L7=DFP,HDP2210,,STLSJE:ADDITION OF FEATURE BITS FOR 2.1.0 SPE        01400000
* $L7=DFP,HDP2210,,STLSJE:210 SPE EXPORT BY CI INDICATOR         @L7A   01450000
*                                                            @ZA89387   01500000
* $01=DFP,HDP2230,,STLREB:UPDATE RELEASE INDICATOR               @01A   01525000
* $02=DFP,JDP2231,,STLREB:UPDATE RELEASE INDICATOR               @02A   01531200
*                         ADD POINTER TO DFVT                    @02A   01537400
* $03=KSC0008,JDP2231,871015,STLLTH: REMOVE DFADEF DECLARATION   @03A   01539700
* $04=DFP,HDP2232,,STLLTH:UPDATE RELEASE INDICATOR               @04A   01542000
* $05=DFP,HDP3310,,STLLTH:ADDITION OF FEATURE BIT DFASMS         @05A   01544300
* $L8=DFP,HDP3320,,STLREB:SUPPORT FOR PDSE                       @L8A   01546800
* $L9=DFP,HDP3320,,STLJRC:SUPPORT FOR IGW086ED (KET0765)         @L9A   01548400
* $06=DFP,HDP2240,,STLREB:COMPACTION FEATURE  BIT                @06A   01549200
* $P1=KET1794,HDP3320,,STLCC: IPDS,ILIB -> PDSE NAME CHANGE      @P1A   01549600
* $P2=KSJ0060,JDP3311,890131,STLREB: BYPASS CHANNEL PGM PREFIX BLD @P2A 01549800
* $P3=KET2541,HDP3320,890417,STLREB: DEFINE DFASSF               @P3A   01553900
* $LA=3490,HDP3320,900904,STLREB: SUPPORT FOR 3490 TAPE          @LAA   01558000
* $LB=OY32461,HDP3320,891010,STLREB: DEFINE DFAMMEXT             @LBA   01562100
* @07=OY48341,HDP3330,911031,SJPLJAL: VOLNSNS SUPPORT            @07A   01563100
* $L5=PPS,JDP3331,900815,SJPLREB: DFP COPYRIGHT STATEMENT        @L5A   01564100
*                                                                       01566200
*       DFSMS 1.1.0 CHANGES                                             01570300
*                                                                       01574400
* $LC=DFSMS,JDZ1110,910723,STLREB: DFSMS SUPPORT                 @LCA   01576600
* $08=OY61541,JDZ1110,930226,SJPLREB: EXTENDED SAM               @08A   01578900
* $09=OY64065,JDZ1110,930505,SJPLREB: DEFINE DFARECAL            @09A   01579100
*                                                                       01579300
*       DFSMS 1.2.0 CHANGES                                             01579700
*                                                                       01580100
* $0A=OW02507,HDZ11B0,940510,SJPLREB: DEFINE DFADEEXT            @0AA   01580300
* $LD=DFSMS,HDZ11B0,930226,SJPLREB: VSAM STRIPE AND COMPRESSION  @LDA   01580500
*                                                                       01580900
*                                                                       01581100
*       DFSMS 1.3.0 CHANGES                                             01581300
*                                                                       01581700
* $LE=DFSMS,HDZ11C0,930408,SJPLREB: DFARLSJ3 & &IHADFARELS &     @LEA   01582200
*                                   DFACSSVT & DFAOPT & DFADFP0  @LEA   01582700
* $LF=DFSMS,HDZ11C0,950606,SJPLGEC: REPLACE DFATLKT WITH         @LFA   01582900
*                                   DFAISMFE. DELETE DFAOAT.     @LFA   01583100
* $0B=OW16044,HDZ11C0,9501002,SJPLGEC: DELETE DFAISMFE           @0BA   01583200
* $0C=OW16740,HDZ11C0,951002,SJPLREB: DFACIR2                    @0CA   01588800
* $LG=DYNLINK,HDZ11C0,960409,SJPLRK: DEFINE DFANSRV, DFADYNL     @LGA   01591600
* $LH=PM3    ,HDZ11D0,961022,SJPLREB: DEFINE DFARTLS, DFADYLPA   @LHA   01593000
* $LI=PM3    ,HDZ11D0,970120,SJPLRK:  DEFINE DFAFORK             @LIA   01593700
* $LJ=DFSMS  ,HDZ11E0,970623,SJPLREB: DEFINE DFAALVER, DFAALFOR    @LJA 01594000
* $LK=K150118,HDZ11E0,971101,SJPLRK: Remove DFARTLS, DFADYLPA      @LKA 01594200
* $LL=K150128,HDZ11E0,971106,SJPLRK: Temporarily leave DFAFORK,         01595600
*                                    DFARTLS, DFADYLPA on          @LLA 01597000
* $LM=TVS,    HDZ11E0,980409,SJPLREB: DEFINE DFATVMSG              @LMA 01597300
* $P4=K150834,HDZ11E0,980422,SJPLREB: MOVE DFAALVER and DFAALFOR   @P4A 01597700
* $0D=SNAPSHOT,HDZ11D0,970731,SJPLREB: DEFINE DFASMBK, DFASNAP   @0DA   01598000
* $LN=ANSIV4 ,HDZ11E0,980813,SJPLCC: ANSI/ISO V4 Data Conversion   @LNA 01598200
* $LO=OS/390R10,HDZ11F0,990628,SJPLREB: UPDATE DFARELS             @LOA 01598300
* $0E=OW39810,HDZ11D0,990622,SJPLGMD:                            @0EA   01598700
*   1. Add new DFAUPDSE flag for unmanaged PDSE support          @0EA   01599100
* $LP=COPYSDB,HDZ11F0,000112,SJPLREB: COPYSDB SUPPORT            @LPA   01599300
**********************************************************************/ 01599500
* %GOTO DFAPLS;                    /* SKIP AROUND ASSEMBLER CODE     */ 01600000
         MACRO                                                          01650000
         IHADFA &DSECT=YES                                              01700000
         LCLC  &SECT                                                    01750000
&SECT    SETC  'DSECT'         ASSUME DSECT=YES                         01800000
         AIF   ('&DSECT' EQ 'YES').START                                01850000
         AIF   ('&DSECT' EQ 'NO').NODSECT                               01900000
         MNOTE 8,'DSECT PARAMETER MUST BE NO OR YES.  ''YES'' ASSUMED.' 01950000
         AGO   .START                                                   02000000
.NODSECT ANOP                 MUST NOT HAVE DSECT                       02050000
DFASECT  CSECT                                                   @L5C   02057600
DFASECT  RMODE  24                                               @L5C   02065200
    DC  C'LICENSED MATERIALS - PROPERTY OF IBM '                 @L5A   02072800
    DC  C'THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM" '  @L5A   02080400
    DC  C'5647-A01 (C) COPYRIGHT IBM CORPORATION 1979, 2000. '   @LOC   02088000
    DC  C'ALL RIGHTS RESERVED. '                                 @L5A   02095600
    DC  C'US GOVERNMENT USERS RESTRICTED RIGHTS - USE, '         @L5A   02103200
    DC  C'DUPLICATION OR DISCLOSURE RESTRICTED BY '              @L5A   02110800
    DC  C'GSA ADP SCHEDULE CONTRACT WITH IBM CORPORATION '       @L5A   02118400
    DC  C'SEE IBM COPYRIGHT INSTRUCTIONS '                       @L5A   02126000
DFAIDTAB DC    0D'0'          CVTDFA POINTS HERE                 @L5A   02133600
         ENTRY  DFAIDTAB      EXTERNAL SYMBOL FOR LINKAGE EDITOR @L5A   02141200
&SECT    SETC  'DC'           ELIMINATE DSECT INSTRUCTION               02150000
.START   ANOP                                                           02200000
DFA      &SECT 0D'0'          START OF DATA FACILITIES AREA             02250000
.*                                                                      02300000
**********************************************************************  02350000
*     THE FOLLOWING TABLE MAY BE USED BY ANY PROGRAM THAT RUNS WITH  *  02400000
*   MULTIPLE LEVELS OF THIS PRODUCT BUT WHERE NOT ALL OF THE         *  02450000
*   SUPPORTED LEVELS OF THIS PRODUCT SUPPORT A PARTICULAR FEATURE.   *  02500000
*                                                                    *  02550000
*      THE TABLE MAY BE USED FOR THOSE FEATURES THAT THE CALLER MUST *  02600000
*   KNOW WHETHER IT SHOULD WORK BEFORE ATTEMPTING IT.                *  02650000
*                                                                    *  02700000
*     THE TWO-BYTE DFAREL FIELD OR THE FOUR BYTE DFARELS FIELD   @LCC*  02733300
*   MAY BE TESTED IN ORDER TO DETERMINE IF                           *  02766600
*   IT HAS A VALUE GREATER THAN OR EQUAL TO THE APPROPRIATE LEVEL.   *  02800000
*                                                                    *  02900000
*    IF A DFA FEATURE BIT WAS ASSIGNED TO THE NEEDED FEATURE, THEN   *  02950000
*   THE DFA FEATURE BIT MAY BE TESTED. IT MAY BE NECESSARY TO TEST   *  03000000
*   DFALEN TO SEE WHETHER THE RELEVANT FEATURE BYTE IS DEFINED. NOT  *  03050000
*   EVERY FEATURE WILL HAVE A BIT ASSIGNED.                          *  03100000
**********************************************************************  03150000
*                                                                    *  03200000
DFALEN   DC    Y(DFAEND-*)    LENGTH OF THIS TABLE                      03250000
*                                                                    *  03300000
**********************************************************************  03350000
*   VERSION, RELEASE, AND MODIFICATION LEVEL INFORMATION FOR DFP.    *  03380000
*   THE FIRST THREE DIGITS OF DFAREL REPRESENTS THE LAST LEVEL   @LCC*  03410000
*   OF DFP. THE FOURTH DIGIT OF DFAREL BEING NON-ZERO INDICATES  @LCA*  03440000
*   THE LEVEL OF THIS PRODUCT IS HIGHER THAN THE INDICATED LEVEL.@LCA*  03470000
**********************************************************************  03500000
*                                                                    *  03550000
DFAREL   DC    X'3321'        FOUR DIGITS = VERSION, RELEASE, MOD, X    03600000
*                                                                       03650000
**********************************************************************  03700000
*   THE FOLLOWING ARE THE FEATURE BYTES.  WHEN A BIT IS ON, IT MEANS *  03750000
*   EITHER THAT THE CURRENT RELEASE SUPPORTS THE FEATURE OR THAT     *  03800000
*   THIS PARTICULAR INSTANCE OF THE SYSTEM SUPPORTS THE FEATURE. IF  *  03850000
*   THE SOFTWARE SUPPORTS A FEATURE BUT IT CANNOT BE USED, PERHAPS   *  03900000
*   BECAUSE COREQUISITE SOFTWARE OR HARDWARE IS NOT AVAILABLE, THEN  *  03950000
*   THE FEATURE BIT WILL BE OFF.                                     *  04000000
**********************************************************************  04050000
DFAFEATS DS    0F             ALL FEATURES BYTES-USED BY CS INSTR @L9A  04075000
DFAFEAT1 DC    X'FE'          FEATURES BYTE 1                     @05M  04100000
DFAXA    EQU   X'80'          MVS/XA (COPY OF CVTMVSE IN CVT)           04150000
DFALSR   EQU   X'40'          MULTIPLE VSAM LSR POOLS SUPPORTED (1.1.0) 04200000
DFAEOS   EQU   X'20'          DASDM ERASE ON SCRATCH SUPPORTED (2.1.0)  04250000
DFAXRF   EQU   X'10'          EXTENDED RECOVERY FACILITY (2.1.0)        04300000
DFAEXPCI EQU   X'08'          EXPORT BY CONTROL INTERVAL (2.1.0) @L7A   04350000
DFAEOSIC EQU   X'04'          ERASE ON SCRATCH FOR ICF (2.1.0) @L7A     04400000
DFASMS   EQU   X'02'          SYSTEM MANAGED STORAGE (3.1.0)   @05A     04425000
DFAPDSE  EQU   X'01'          PDSE SUPPORT AVAILABLE ON THE SYSTEM @P1C 04430000
*                               SET BY IEAVNP26 WHEN DFP LEVEL IS  @L8A 04435000
*                               3.2.0 OR GREATER AND AN APPROPRIATE@L8A 04440000
*                               LEVEL OF SP EXISTS.                @L8A 04445000
DFAIPDS  EQU   DFAPDSE        IPDS IS OLD NAME FOR PDSE            @P1A 04447500
*                                                                       04450000
DFAFEAT2 DC    X'2A'          FEATURES BYTE 2                           04500000
DFADLS   EQU   X'80'          RESERVED                             @L8A 04512500
DFAPML   EQU   X'40'          RESERVED                             @L8A 04525000
DFAFMS   EQU   X'20'          FILE MANAGEMENT SERVICES SUPPORTED   @L8A 04531200
DFACMPAC EQU   X'10'          INSTALLATION DEFAULT FOR COMPACTION  @06A 04534300
*                                                                  @L8A 04537500
DFABPBLD EQU   X'08'          BYPASS CHANNEL PROGRAM PREFIX BUILD  @P2A 04543700
DFASSF   EQU   X'04'          SSF SERVICES ARE AVAILABLE           @P3A 04546800
DFAMMEXT EQU   X'02'          MMS SUPPORTS XTIOT                   @LBA 04548400
DFAINDEF EQU   X'01'          COMPACTION DEFAULT EXPLICITLY SET BY @LAA 04550900
*                              INSTALLATION                        @LAA 04553400
DFAFEAT3 DC    X'63'          FEATURES BYTE 3                      @LEC 04560000
DFAVOLSN EQU   X'80'          VOLSER EXTRACTED FROM SENSE INFO     @07A 04566600
*                              ACCEPTABLE BY THE INSTALLATION      @07A 04575500
DFASAMEX EQU   X'40'          EXTENDED FORMAT SEQUENTIAL DATA SET  @08A 04580200
DFASMSEX EQU   X'40'          ALIAS FOR DFASAMEX                   @08A 04585000
DFAKSDEX EQU   X'20'          EXTENDED FORMAT VSAM KSDS            @LDA 04585900
DFACMPCT EQU   X'10'          DFSMS/MVS ACCESS METHOD COMPRESSION  @LDA 04586800
*                              SUPPORTED. BIT SET BY               @LDA 04588000
*                              SMS SUB-SYSTEM INITIALIZATION       @LDA 04589200
DFARLSJ3 EQU   X'08'          THE SMSVSAM SERVER HAS SUCCESSFULLY  @LEA 04590400
*                              INITIALIZED ON THIS SYSTEM. THIS BIT@LEA 04591600
*                              IS USED BY SMS SCHEDULING. ONCE ON, @LEA 04592800
*                              THIS BIT REMAINS ON FOR THE LIFE OF @LEA 04594000
*                              THE IPL. THIS BIT DOES NOT INDICATE @LEA 04595200
*                              THAT THE SMSVSAM SERVER IS          @LEA 04596400
*                              CURRENTLY OPERATIONAL.              @LEA 04597600
DFARECAL EQU   X'04'          DATA SET RECALL CAPABILITY VIA THE   @09A 04598400
*                              ARCHRCAL MACRO IS AVAILABLE         @09A 04599200
DFADEEXT EQU   X'02'          DESERV EXIT FUNCTION IS AVAILABLE    @0AA 04599600
DFADLL   EQU   X'01'          DFSMS SUPPORT FOR DLL IS AVAILABLE   @LEA 04603800
DFAFEAT4 DC    X'7C'          FEATURES BYTE 4                      @LLC 04611000
DFAFDAT  EQU   X'80'          RESERVED                             @0CA 04612200
DFANSRV  EQU   X'40'          DFP NIP SERVICES CAN BE INVOKED VIA  @LGC 04616800
*                              IGGSSRV MACRO                       @LGA 04621400
DFADYNL  EQU   X'40'          DYNAMIC LINKLIST IS SUPPORTED        @LGC 04626000
DFACIR2  EQU   X'20'          THE CATALOG INFORMATION ROUTINE,     @0CA 04630800
*                              IKJEHCIR, SUPPORTS A FORMAT 2 WORK  @0CA 04637000
*                              AREA. I.E. FULL WORD LENGTH FIELDS  @0CA 04643200
DFARTLS  EQU   X'10'          DFSMS SUPPORT FOR RTLS IS AVAILABLE  @LHA 04645900
DFADYLPA EQU   X'08'          DFSMS SUPPORT FOR DYNAMIC LPA IS     @LHA 04648600
*                              AVAILABLE.                          @LHA 04651300
DFAFORK  EQU   X'04'          DFSMS LOADER FORK EXIT IS PRESENT    @LIA 04654000
DFASNBK  EQU   X'02'          software support providing "fast"    @0DA 04656800
*                              backup using the Snaphot feature of @0DA 04662300
*                              the RAMAC Vitual Array (RVA) is     @0DA 04667800
*                              installed                           @0DA 04673300
DFASNAP  EQU   X'01'          The API support for the Snapshot     @0DA 04678800
*                              feature of the RAMAC Virtual Array  @0DA 04684300
*                              (RVA) is installed.                 @0DA 04689800
DFAACRON DC    C'DFA '        ACRONYM FOR THIS CONTROL BLOCK            04695900
DFAFEAT5 DC    X'80'          FEATURES BYTE 5                      @0EC 04698800
DFAUPDSE EQU   X'80'          Support for unmanged PDSEs installed @0EA 04701700
*        EQU   X'7C'          AVAILABLE                            @0EC 04704600
DFAALVER EQU   X'02'          Version level at which new tape      @P4M 04707600
*                              labels will be written.             @P4M 04711400
*                              off - ANSI label ver 3              @P4M 04715200
*                              on  - ANSI label ver 4              @P4M 04719000
DFAALFOR EQU   X'01'          Force parameter for ANSI label ver   @P4M 04722800
*                              3 or 4 processing. If on - causes   @P4M 04726600
*                              all "AL" labeled tapes to be written@P4M 04730400
*                              in the format specified by DFAALVER.@P4M 04734200
*                              If off - only new labels are        @P4M 04738000
*                              written in the format specified by  @P4M 04741800
*                              DFAALVER.                           @P4M 04745600
DFAFEAT6 DC    X'00'          FEATURES BYTE 6                           04750000
DFACPSDB EQU   X'F0'          COPYSDB VALUES                       @LPA 04750100
DFACPSNO EQU   B'00010000'       COPYSDB = NO                      @LPA 04750200
DFACPSYE EQU   B'00100000'       COPYSDB = YES                     @LPA 04750300
DFACPSSM EQU   B'00100000'       COPYSDB = SMALL (same as YES)     @LPA 04750400
DFACPSIN EQU   B'00110000'       COPYSDB = INPUT                   @LPA 04750500
DFACPSLA EQU   B'01000000'       COPYSDB = LARGE                   @LPA 04750600
DFALPKG  DC    X'00'          FORMERLY LICENSED PACKAGE BYTE, NOW  @LPC 04751690
*                              RESERVED                            @LPC 04752680
DFALPKG2 DC    X'00'          FORMERLY 2ND LICENSED PACKAGE BYTE,  @LPC 04753670
*                              NOW RESERVED                        @LPA 04754660
**********************************************************************  04760400
* PRODUCT, VERSION, RELEASE, AND MODIFICATION LEVEL INFORMATION. @LCA*  04764100
* BYTE 0 DEFINES A PRODUCT CODE, BYTES 1-3 DEFINE THE VERSION,   @LCA*  04767800
* RELEASE, AND MODIFICATION LEVELS OF THIS PRODUCT.              @LCA*  04771500
*                                                                @LCA*  04772600
* A PRODUCT BYTE (DFAPROD) OF X'00' INDICATES DFP AS A PRODUCT,  @LCA*  04773700
* BYTES 1-3 OF DFARELS WILL ALSO BE X'00' IN THIS CASE. THE      @LCA*  04774800
* USER MAY CHOOSE TO CHECK DFAREL FOR THE RELEASE LEVEL OF THE   @LCA*  04775900
* DFP PRODUCT IN THIS CASE.                                      @LCA*  04777000
*                                                                @LCA*  04778100
* IF DFAPROD IS NOT EQUAL TO X'00' DFAREL SHOULD NOT BE CHECKED  @LCA*  04779200
* AS IT WILL BE FROZEN AT THE LAST LEVEL OF DFP PRODUCT SHIPPED. @LCA*  04780300
*                                                                @LCA*  04781400
* A PRODUCT BYTE (DFAPROD) OF X'01' INDICATES DFSMS AS A PRODUCT.@LCA*  04782500
* BYTES 1-3 OF DFARELS WILL INDICATE THE VERSION, RELEASE AND    @LCA*  04783600
* MODIFICATION LEVELS OF THE DFSMS PRODUCT.                      @LCA*  04784700
*                                                                @LCA*  04784900
* A PRODUCT BYTE (DFAPROD) OF X'02' INDICATES YOUR PROGRAM IS    @LOA*  04785100
* RUNNING ON A LEVEL OF DFSMS THAT IS SHIPPED ONLY ON OS/390.    @LOA*  04785300
* SINCE DFSMS MIGHT NOT BE REFRESHED WITH EACH OS/390 RELEASE,   @LOA*  04785500
* THE VERSION, RELASE, AND MODIFICATION FIELDS INDICATE THE LEVEL@LOA*  04785700
* OF OS/390 IN WHICH THIS LEVEL OF DFSMS WAS FIRST SHIPPED.      @LOA*  04785900
* THE VERSION RELEASE AND MODIFICATION FIELDS ARE BINARY VALUES  @LOA*  04786000
* (FOR EXAMPLE TEN WOULD BE X'0A').                              @LOA*  04786100
* THE MACRO VARIABLE IHADFARELS REPRESENTS VALUES IN DECIMAL SO  @LOA*  04786200
* RELEASE 10 IS IDENTIFIED AS 10 (IN '02021000').                @LOA*  04786300
**********************************************************************  04786400
.******************************************************************@LEA 04786900
.******* MACRO VARIABLES FOR DFSMS RELEASE INDICATOR **************@LEA 04787400
.******************************************************************@LEA 04787900
         GBLC  &IHADFARELS    DEFINE GLOBAL MACRO VARIABLE        @LEA  04788400
&IHADFARELS SETC '02021000'   SET DFSMS LEVEL                     @LOC  04788900
.*                                                                   *  04789400
         LCLC  &DFARELS_PROD                                       @LEA 04789900
&DFARELS_PROD SETC  '&IHADFARELS'(1,2)                             @LEA 04790400
         LCLC  &DFARELS_VER                                        @LEA 04790900
&DFARELS_VER  SETC  '&IHADFARELS'(3,2)                             @LEA 04791400
         LCLC  &DFARELS_REL                                        @LEA 04791900
&DFARELS_REL  SETC  '&IHADFARELS'(5,2)                             @LEA 04792400
         LCLC  &DFARELS_MOD                                        @LEA 04792900
&DFARELS_MOD  SETC  '&IHADFARELS'(7,2)                             @LEA 04793400
.******************************************************************@LEA 04793900
DFARELS  DS    0CL4                                                @LEC 04794400
         DC    AL1(&DFARELS_PROD,&DFARELS_VER,&DFARELS_REL,&DFARELS_MOD*04794900
               )                                                  @LEA  04795400
         ORG   DFARELS        REDEFINE THE DFARELS FIELD          @LCA  04797300
DFAPROD  DS    X               PRODUCT BYTE                       @L9A  04797800
DFAVER   DS    X               VERSION BYTE                       @LCA  04798300
DFARLSE  DS    X               RELEASE BYTE                       @LCA  04798800
DFAMOD   DS    X               MODIFICATION BYTE                  @LCA  04799300
DFADFP   EQU   X'00'          PRODUCT CODE FOR DFP                @LCA  04800200
DFADFSMS EQU   X'01'          PRODUCT CODE FOR DFSMS              @LCA  04803600
DFAOS390 EQU   X'02'          PRODUCT CODE FOR DFSMS that is      @LOA  04803700
*                                exclusive to OS/390              @LOA  04803800
.*****************************************************************@LEA  04804000
.****** SET MACRO VARIABLE FOR VALUE OF DFAMSMDE *****************@LEA  04804400
.*****************************************************************@LEA  04804800
         AIF   ('&DSECT' EQ 'YES').SETZERO                        @LEA  04805200
&DFAMSMDE_VAL SETC 'SMDE_MAXLEN-SMDE_PO1_NAME_MAXLEN+8'           @LEA  04805600
         AGO   .SETSMDE                                           @LEA  04806000
.SETZERO ANOP                                                     @LEA  04806400
&DFAMSMDE_VAL SETC '0'                                            @LEA  04806800
.SETSMDE ANOP                                                     @LEA  04807200
.*****************************************************************@LEA  04807600
DFAMSMDE DC    AL2(&DFAMSMDE_VAL) MAXIMUM LENGTH OF THE SMDE IN   @LEA  04808000
*                              THIS RELEASE WITH AN 8 BYTE ALIAS  @LEA  04808400
*                              NAME                               @LEA  04808800
DFAVERBO DC    X'0'           flags                                @LMC 04808900
*        EQU   X'80'          reserved                             @LMA 04809200
DFATVS   EQU   X'40'          Transactional Vsam is installed (if  @LMA 04809600
*                              on).                                @LMA 04809800
         DC    X'0'           reserved                             @LMA 04810000
DFACSSVT DC    AL4(0)        CALLABLE SYSTEM SERVICES VECTOR TABLE@LEA  04810300
DFADCVSO DC    AL4(0)        Data Conversion Services-OPEN        @LNA  04810700
DFADCVSD DC    AL4(0)        Data Conversion Services-CONVERT     @LNA  04811100
DFADCVSC DC    AL4(0)        Data Conversion Services-CLOSE       @LNA  04811500
         DC    XL4'0'         RESERVED                            @LNC  04811900
DFADFVAD DC    V(DFVTAB)      DATA FACILITIES VECTOR TABLE ADDR   @02A  04812500
.**  THE FOLLOWING COMMENT IS NEVER TO BE CHANGED.  IN LATER RELEASES   04850000
.**  IT WILL TELL HOW LONG THE DFA WAS.  THIS COMMENT SHOULD ALWAYS BE  04900000
.**  AT 48 (X'30') IN THE DFA.                                          04950000
*   END OF DFA AS IT WAS WHEN IT WAS FIRST SHIPPED IN                   04983300
*   MVS/XA DFP VERSION 2 RELEASE 1 MODIFICATION LEVEL 0.                05016600
**** PRIOR TO REFERENCING ANY FIELD BEYOND THIS COMMENT,          @LOA  05021000
**** THE USER MUST ENSURE THAT DFARELS IS GREATER THAN or         @LOA  05025400
**** EQUAL TO X'02020A00' OR DFALEN IS BIG ENOUGH (SEE DFALEN).   @LOA  05029800
****                                                              @LOA  05034200
DFABLKSZ DC    0D'0',F'0,32760' LIMIT ON SYSTEM DETERMINED BLOCK  @LPA  05037790
*                             SIZE. Default is 32760. May be      @LPA  05038480
*                             overridden by module IEAVNP16.            05039170
         DC    XL56'0'       RESERVED                             @LPC  05040000
.**  THE FOLLOWING COMMENT IS NEVER TO BE CHANGED IN LATER        @LOA  05043000
.**  RELEASES IT WILL TELL HOW LONG THE DFA WAS. THIS COMMENT     @LOA  05047400
.**  SHOULD ALWAYS BE AT 112 (X'70') IN THE DFA.                  @LOA  05051800
*   END OF DFA AS IT WAS WHEN IT WAS SHIPPED IN OS/390 R10        @LOA  05056200
.**  REPLACE THIS LINE AND THE NEXT IN THE FIRST RELEASE IN WHICH THE   05061000
.**  ABOVE RESERVED FIELDS START RUNNING OUT.                           05105400
*   FUTURE ADDITIONS WILL BE INSERTED IMMEDIATELY BEFORE THIS LINE.     05150000
DFAEND   EQU   *              ALWAYS END OF DFA                         05200000
*                                                                       05210000
*                                                                       05220000
*                                                                       05230000
*                                                                       05240000
DFPIDTAB EQU   DFA            LABEL FOR COMPATIBILITY WITH DFPIDTAB     05250000
DFPIDLEN EQU   DFALEN         LABEL FOR COMPATIBILITY WITH DFPIDTAB     05300000
DFPIDREL EQU   DFAREL         LABEL FOR COMPATIBILITY WITH DFPIDTAB     05350000
DFPIDFLG EQU   DFAFEAT1       LABEL FOR COMPATIBILITY WITH DFPIDTAB     05400000
DFPIDXA  EQU   DFAXA          LABEL FOR COMPATIBILITY WITH DFPIDTAB     05450000
DFPIDLSR EQU   DFALSR         LABEL FOR COMPATIBILITY WITH DFPIDTAB     05500000
         AIF   ('&DSECT' EQ 'YES').END                             @LEA 05512500
         IGWSMDE                                                   @LEA 05525000
.END     ANOP                                                      @LEA 05537500
         MEND                                                           05550000
 %DFAPLS:;                                                              05600000
                                                             /*  @03D*/ 05650000
 %IF DFADEF = ''                                                        05700000
 %THEN %DFADEF = 'CVTDFA';                                              05750000
 DCL 1 DFA  BASED(DFADEF),      /* START OF DATA FACILITIES AREA */     05800000
 /********************************************************************/ 05850000
 /*   THE FOLLOWING TABLE MAY BE USED BY ANY PROGRAM THAT RUNS WITH  */ 05900000
 /* MULTIPLE LEVELS OF THIS PRODUCT BUT WHERE NOT ALL OF THE         */ 05950000
 /* SUPPORTED LEVELS OF THIS PRODUCT SUPPORT A PARTICULAR FEATURE.   */ 06000000
 /*                                                                  */ 06050000
 /*    THE TABLE MAY BE USED FOR THOSE FEATURES THAT THE CALLER MUST */ 06100000
 /* KNOW WHETHER IT SHOULD WORK BEFORE ATTEMPTING IT.                */ 06150000
 /*                                                                  */ 06200000
 /*   THE TWO-BYTE DFAREL FIELD OR THE FOUR BYTE DFARELS FIELD   @LCC*/ 06233300
 /* MAY BE TESTED IN ORDER TO DETERMINE IF                           */ 06266600
 /* IT HAS A VALUE GREATER THAN OR EQUAL TO THE APPROPRIATE LEVEL.   */ 06300000
 /*                                                                  */ 06400000
 /*  IF A DFA FEATURE BIT WAS ASSIGNED TO THE NEEDED FEATURE, THEN   */ 06450000
 /* THE DFA FEATURE BIT MAY BE TESTED. IT MAY BE NECESSARY TO TEST   */ 06500000
 /* DFALEN TO SEE WHETHER THE RELEVANT FEATURE BYTE IS DEFINED. NOT  */ 06550000
 /* EVERY FEATURE WILL HAVE A BIT ASSIGNED.                          */ 06600000
 /********************************************************************/ 06650000
       2 DFALEN   FIXED(15) UNSIGNED,  /* LENGTH OF THIS TABLE       */ 06700000
 /********************************************************************/ 06750000
 /* VERSION, RELEASE, AND MODIFICATION LEVEL INFORMATION FOR DFP.    */ 06780000
 /* THE FIRST THREE DIGITS OF DFAREL REPRESENT THE LAST LEVEL    @LCC*/ 06810000
 /* OF DFP. THE FOURTH DIGIT OF DFAREL BEING NON-ZERO INDICATES  @LCA*/ 06840000
 /* THE LEVEL OF THIS PRODUCT IS HIGHER THAN THE INDICATED LEVEL.@LCA*/ 06870000
 /********************************************************************/ 06900000
       2 DFAREL   BIT(16), /* FOUR DIGITS = VERSION, RELEASE, MOD, X */ 06950000
 /********************************************************************/ 07000000
 /* THE FOLLOWING ARE THE FEATURE BYTES.  WHEN A BIT IS ON, IT MEANS */ 07050000
 /* EITHER THAT THE CURRENT RELEASE SUPPORTS THE FEATURE OR THAT     */ 07100000
 /* THIS PARTICULAR INSTANCE OF THE SYSTEM SUPPORTS THE FEATURE. IF  */ 07150000
 /* THE SOFTWARE SUPPORTS A FEATURE BUT IT CANNOT BE USED, PERHAPS   */ 07200000
 /* BECAUSE COREQUISITE SOFTWARE OR HARDWARE IS NOT AVAILABLE, THEN  */ 07250000
 /* THE FEATURE BIT WILL BE OFF.                                     */ 07300000
 /********************************************************************/ 07350000
       2 DFAFEATS BIT(32) BDY(WORD), /*ALL FEATURES BYTES-              07403890
                                         USED BY CS INSTR        @L9A*/ 07423880
         3 DFAFEAT1 BIT(8),   /* FEATURES BYTE 1                     */ 07451700
           4 DFAXA  BIT(1),   /*MVS/XA (COPY OF CVTMVSE IN CVT)      */ 07485600
           4 DFALSR BIT(1),   /*MULTIPLE VSAM LSR POOLS                 07539490
                                 SUPPORTED (1.1.0)                   */ 07559480
           4 DFAEOS BIT(1),   /*DASDM ERASE ON SCRATCH                  07579470
                                 SUPPORTED (2.1.0)                   */ 07599460
           4 DFAXRF BIT(1),   /*EXTENDED RECOVERY FACILITY(2.1.0)    */ 07655100
           4 DFAEXPCI BIT(1), /*EXPORT BY CONTROL INTERVAL(2.1.0)@L7A*/ 07689000
           4 DFAEOSIC BIT(1), /*ERASE ON SCRATCH FOR ICF (2.1.0) @L7A*/ 07722900
           4 DFASMS BIT(1),   /*SYSTEM MANAGED STORAGE (3.1.0)   @05A*/ 07756800
           4 DFAPDSE BIT(1),  /*PDSE SUPPORT AVAILABLE ON THE CPC       07810690
                                 SET BY IEAVNP26 WHEN DFP LEVEL         07830680
                                 IS 3.2.0 OR GREATER AND AN             07850670
                                 APPROPRIATE LEVEL OF SP EXISTS. @L8A*/ 07870660
             5 DFAIPDS BIT(1),/*IPDS IS OLD NAME FOR PDSE        @P1A*/ 07909300
         3 DFAFEAT2 BIT(8),   /* FEATURES BYTE 2                     */ 07926300
           4 DFADLS   BIT(1), /* RESERVED                        @L8A*/ 07960200
           4 DFAPML   BIT(1), /* RESERVED                        @L8A*/ 07994100
           4 DFAFMS   BIT(1), /* FILE MGMT SERVICES SUPPORTED    @L8A*/ 08028000
           4 DFACMPAC BIT(1), /* INSTALLATION DEFAULT-COMPACTION @06A*/ 08044900
           4 DFABPBLD BIT(1), /* BYPASS CHANNEL PROGRAM PREFIX          08052490
                                   BUILD                         @P2A*/ 08054480
           4 DFASSF   BIT(1), /* SSF SERVICES ARE AVAILABLE      @P3A*/ 08059000
           4 DFAMMEXT BIT(1), /* MMS SUPPORTS XTIOT              @LBA*/ 08060400
           4 DFAINDEF BIT(1), /*COMPACTION DEFAULT EXPLICITLY SET       08061190
                                 BY INSTALLATION                 @LAA*/ 08061480
         3 DFAFEAT3 BIT(8),   /* FEATURES BYTE 3                     */ 08061900
           4 DFAVOLSN BIT(1), /* VOLSER EXTRACTED FROM SENSE            08076190
                                 ACCEPTABLE BY THE INSTALLATION  @07A*/ 08079180
           4 DFASMSEX BIT(1), /* EXTENDED FORMAT SEQUENTIAL DATA        08084900
                                 SET SUPPORTED                   @08A*/ 08085300
             5 DFASAMEX BIT(1), /* ALIAS FOR DFASMSEX            @08A*/ 08085700
           4 DFAKSDEX BIT(1), /* EXTENDED FORMAT VSAM KSDS       @LDA*/ 08086300
           4 DFACMPCT BIT(1), /* DFSMS/MVS ACCESS METHOD                08087490
                                  COMPRESSION SUPPORTED. BIT SET BY     08088080
                                  SMS SUB-SYSTEM INITIALIZATION  @LDA*/ 08088670
           4 DFARLSJ3 BIT(1), /* THE SMSVSAM SERVER HAS SUCCESSFULLY    08089260
                                 INITIALIZED ON THIS SYSTEM. THIS BIT   08089850
                                 IS USED BY SMS SCHEDULING.             08090440
                                 ONCE ON, THE BIT REMAINS ON FOR        08091030
                                 THE LIFE OF THE IPL. THIS BIT          08091620
                                 DOES NOT INDICATE THAT THE             08092210
                                 SERVER IS CURRENTLY OPERATIONAL.@LEA*/ 08092800
           4 DFARECAL BIT(1), /* DATA SET RECALL CAPABILITY VIA         08093390
                                 THE ARCHRCAL MACRO IS AVAILABLE @09A*/ 08093980
           4 DFADEEXT BIT(1), /* DESERV EXIT FUNCTION AVAILABLE  @0AA*/ 08095300
           4 DFADLL   BIT(1), /* DFSMS DLL SUPPORT IS AVAILABLE  @LEC*/ 08095500
         3 DFAFEAT4 BIT(8),   /* FEATURES BYTE 4                     */ 08095800
           4 DFAFDAT  BIT(1), /* RESERVED                        @0CA*/ 08100600
           4 DFANSRV  BIT(1), /* DFP NIP SERVICES CAN BE INVOKED VIA    08104200
                                  IGGSSRV MACRO                  @LGC*/ 08107800
            5 DFADYNL BIT(1), /* DYNAMIC LINKLIST IS SUPPORTED   @LGC*/ 08111400
           4 DFACIR2  BIT(1), /* THE CATALOG INFORMATION ROUTINE,       08115000
                                 IKJEHCIR, SUPPORTS A FORMAT 2 WORKAREA.08119800
                                 I.E. FULL WORD LENGTH FIELDS    @0CA*/ 08124600
           4 DFARTLS  BIT(1), /* DFSMS RTLS SUPPORT IS AVAILABLE @LHA*/ 08125600
           4 DFADYLPA BIT(1), /* DFSMS DYNAMIC LPA SUPPORT IS           08126600
                                 AVAILABLE.                      @LHA*/ 08127600
           4 DFAFORK  BIT(1), /* DFSMS Loader Fork Exit present  @LIA*/ 08128600
           4 DFASNBK  BIT(1), /* Software support providing "fast"      08129600
                               backup using the Snaphot feature of      08131200
                               the RAMAC Vitual Array (RVA) is          08132800
                               installed                         @0DA*/ 08134400
           4 DFASNAP  BIT(1), /* The API support for the Snapshot       08136000
                               feature of the RAMAC Virtual Array       08137600
                               (RVA) is installed.               @0DA*/ 08139200
       2 DFAACRON CHAR(4),    /* ACRONYM FOR THIS CONTROL BLOCK      */ 08140800
       2 DFAFEAT5 BIT(8),     /* FEATURES BYTE 5                     */ 08142400
           4 DFAUPDSE BIT(1), /* Unmanaged PDSE support installed on    08143200
                                 this system                     @0EA*/ 08144000
           4 *        BIT(5), /* AVAILABLE                       @0EC*/ 08144800
           4 DFAALVER BIT(1), /* Version level at which new tape        08145600
                                  labels will be written.               08147200
                                  off - ANSI label ver 3                08148800
                                  on - ANSI label ver 4          @LJM*/ 08150400
           4 DFAALFOR BIT(1), /* Force parameter for ANSI label ver     08152000
                                  3 or 4 processing. If on - causes     08153600
                                  all "AL" labeled tapes to be written  08155200
                                  in the format specified by DFAALVER.  08156800
                                  If off - only new labels are          08158400
                                  written in the format specified by    08160000
                                  DFAALVER.                      @LJM*/ 08163400
       2 DFAFEAT6 BIT(8),     /* FEATURES BYTE 6                     */ 08197500
         3 DFACPSDB BIT(4),   /* copysdb values see constants below     08197900
                                 DFACPS**                        @LPA*/ 08198300
       2 DFALPKG  BIT(8),     /* FORMERLY LICENSED PACKAGE BYTE, NOW    08200790
                                 RESERVED                        @LPA*/ 08202780
       2 DFALPKG2 BIT(8),     /* FORMERLY 2ND LICENSE,NOW               08204770
                                 RESERVED                        @LPA*/ 08206760
 /********************************************************************/ 08209300
 /*PRODUCT, VERSION, RELEASE, AND MODIFICATION LEVEL INFORMATION.@LCA*/ 08213500
 /*BYTE 0 DEFINES A PRODUCT CODE, BYTES 1-3 DEFINE THE VERSION,  @LCA*/ 08217700
 /*RELEASE, AND MODIFICATION LEVELS OF THIS PRODUCT.             @LCA*/ 08221900
 /*                                                              @LCA*/ 08223200
 /*A PRODUCT BYTE (DFAPROD) OF X'00' INDICATES DFP AS A PRODUCT, @LCA*/ 08224500
 /*BYTES 1-3 OF DFARELS WILL ALSO BE X'00' IN THIS CASE. THE     @LCA*/ 08225800
 /*USER MAY CHOOSE TO CHECK DFAREL FOR THE RELEASE LEVEL OF THE  @LCA*/ 08227100
 /*DFP PRODUCT IN THIS CASE.                                     @LCA*/ 08228400
 /*                                                              @LCA*/ 08229700
 /*IF DFAPROD IS NOT EQUAL TO X'00' DFAREL SHOULD NOT BE CHECKED @LCA*/ 08231000
 /*AS IT WILL BE FROZEN AT THE LAST LEVEL OF DFP PRODUCT SHIPPED.@LCA*/ 08232300
 /*                                                              @LCA*/ 08233600
 /*A PRODUCT BYTE (DFAPROD) OR X'01' INDICATES DFSMS AS A PRODUCT@LCA*/ 08234900
 /*BYTES 1-3 OF DFARELS WILL INDICATE THE VERSION, RELEASE AND   @LCA*/ 08236200
 /*MODIFICATION LEVELS OF THE DFSMS PRODUCT.                     @LCA*/ 08237500
 /*                                                              @LCA*/ 08237600
 /*A PRODUCT BYTE (DFAPROD) OF X'02' INDICATES OS/390.           @LOA*/ 08237700
 /*THIS VALUE INDICATES THIS LEVEL OF DFSMS IS OS/390 EXCLUSIVE. @LOA*/ 08237800
 /*SINCE DFSMS MIGHT NOT BE REFRESHED WITH EACH OS/390 RELEASE,  @LOA*/ 08237900
 /*THE VERSION, RELASE, AND MODIFICATION FIELDS INDICATE THE     @LOA*/ 08238000
 /*LEVEL OF OS/390 IN WHICH THIS LEVEL OF DFSMS WAS FIRST        @LOA*/ 08238100
 /*SHIPPED. THE VERSION RELEASE AND MODIFICATION FIELDS ARE      @LOA*/ 08238300
 /*BINARY VALUES. (FOR EXAMPLE TEN WOULD BE X'0A').              @LOA*/ 08238500
 /********************************************************************/ 08238800
       2 DFARELS  CHAR(4)  BDY(WORD), /* 4 BYTES = PRODUCT,             08246690
                                 VERSION, RELEASE, MODIFICATION  @LCA*/ 08248680
         3 DFAPROD  CHAR(1),  /*   PRODUCT BYTE                  @LCA*/ 08252400
         3 DFAVER   CHAR(1),  /*   VERSION BYTE                  @LCA*/ 08253700
         3 DFARLSE  CHAR(1),  /*   RELEASE BYTE                  @LCA*/ 08255000
         3 DFAMOD   CHAR(1),  /*   MODIFICATION BYTE             @LCA*/ 08256300
       2 DFAMSMDE FIXED(16),  /* MAXIMUM LENGTH OF THE SMDE (IN THIS    08257800
                                 RELEASE) WITH AN 8 BYTE ALIAS          08259300
                                 NAME                            @LEA*/ 08260300
       2 DFAVERBO FIXED(8),   /* FLAGS                           @LMA*/ 08260500
         3 *        BIT(1),   /* reserved                        @lma*/ 08261100
         3 DFATVS   BIT(1),   /* Transactional Vsam is installed (if    08261700
                                 on).                            @LMA*/ 08261900
       2 *        FIXED(8),   /* RESERVED                        @LMA*/ 08262100
       2 DFACSSVT  PTR(31),   /* CALLABLE SYSTEM SERVICES VECTOR        08262300
                                 TABLE                           @LEA*/ 08263300
       2 DFADCVSO  PTR(31),   /* Data Conversion Services-OPEN   @LNA*/ 08263700
       2 DFADCVSD  PTR(31),   /* Data Conversion Services-CONVERT@LNA*/ 08264100
       2 DFADCVSC  PTR(31),   /* Data Conversion Services-CLOSE  @LNA*/ 08264500
       2 *        CHAR(4),    /* RESERVED                        @LNC*/ 08264900
       2 DFADFVAD PTR(31),    /* DATA FACILITIES VECTOR TABLE ADDR02A*/ 08265300
 %GOTO DFAPLS2;                                                         08300000
                       /*  THE FOLLOWING COMMENT IS NEVER               08333300
                           TO BE CHANGED IN LATER RELEASES              08366600
                           IT WILL TELL HOW LONG THE DFA WAS.           08399900
                           THIS COMMENT SHOULD ALWAYS BE                08433200
                           AT 48 (X'30') IN THE DFA.     */             08466500
 %DFAPLS2: ;                                                            08500000
        /* END OF DFA AS IT WAS WHEN IT WAS FIRST SHIPPED IN      */    08550000
        /* MVS/XA DFP VERSION 2 RELEASE 1 MODIFICATION LEVEL 0    */    08600000
        /* PRIOR TO REFERENCING ANY FIELD BEYOND THIS COMMENT,   @LOA*/ 08605900
        /* THE USER MUST ENSURE THAT DFARELS IS GREATER THAN or  @LOA*/ 08611800
        /* EQUAL TO X'02020A00' OR DFALEN IS BIG ENOUGH (SEE     @LOA*/ 08616100
        /* DFALEN).                                              @LOA*/ 08620500
                                                                        08623600
       2 DFABLKSZ BIT(64),    /* Limit on system determined block size. 08625290
                                 Default is 32760. May be overridden    08625580
                                 by module IEAVNP16.                    08625870
                                 (THIS IS A DOUBLE WORD AS PER WAYNE    08626400
                                 RHOTEN. IT IS LIKELY THAT FOR THE NEAR 08627800
                                 FUTURE, THE HIGH ORDER WORD WILL NOT   08629200
                                 BE SIGNIFICANT). OBTAINED FROM         08630600
                                 DEVSUPxx PARMLIB MEMBER.        @LPA*/ 08632000
       2 *        CHAR(56),   /* RESERVED                        @LOA*/ 08633400
                                                                        08635400
 %GOTO DFAPLS3;                                                         08641600
                       /*  THE FOLLOWING COMMENT IS NEVER               08646200
                           TO BE CHANGED IN LATER RELEASES              08650800
                           IT WILL TELL HOW LONG THE DFA WAS.           08655400
                           THIS COMMENT SHOULD ALWAYS BE                08660000
                           AT 112(X'70') IN THE DFA.     */             08664600
 %DFAPLS3: ;                                                            08669200
        /* END OF DFA AS IT WAS WHEN IT WAS SHIPPED IN OS/390 R10 */    08673800
 %GOTO DFAPLS4;                                                         08678400
 /*  REPLACE THIS LINE AND THE NEXT IN THE FIRST RELEASE IN WHICH THE   08683200
     ABOVE RESERVED FIELDS START RUNNING OUT.                        */ 08724800
 %DFAPLS4: ;                                                            08766400
 /* FUTURE ADDITIONS WILL BE INSERTED IMMEDIATELY BEFORE THIS LINE.  */ 08808000
       2 DFAEND   CHAR(0);               /* ALWAYS END OF DFA        */ 08850000
                                                                        08887500
   DCL DFPIDTAB  CHAR(LENGTH(DFA))       /* LABEL FOR COMPATIBLIITY  */ 08900000
                 DEF(DFA);                                              08950000
   DCL DFPIDLEN  FIXED (15) UNSIGNED     /* LABEL FOR COMPATIBLIITY  */ 09000000
                 DEF(DFALEN);                                           09050000
   DCL DFPIDREL  BIT(16)                 /* LABEL FOR COMPATIBLIITY  */ 09100000
                 DEF(DFAREL);                                           09150000
   DCL 1 DFPIDFLG  BIT(16)               /* LABEL FOR COMPATIBLIITY  */ 09200000
                 DEF(DFAFEAT1),                                         09250000
         2 DFPIDXA   BIT(1),             /* LABEL FOR COMPATIBLIITY  */ 09300000
         2 DFPIDLSR  BIT(1);             /* LABEL FOR COMPATIBLIITY  */ 09350000
                                                                        09400000
 /* CONSTANTS FOR FIRST BYTE OF DFARELS (DFAPROD).               @LOA*/ 09450000
   DCL DFADFP   BIT(8)  CONSTANT('00'X); /* DFP    PRODUCT CODE  @LOA*/ 09491600
   DCL DFADFSMS BIT(8)  CONSTANT('01'X); /* DFSMS  PRODUCT CODE  @LOA*/ 09533200
   DCL DFAOS390 BIT(8)  CONSTANT('02'X); /* OS/390 PRODUCT CODE FOR     09574800
                               DFSMS that is exclusive to OS/390 @LOA*/ 09616600
 /* CONSTANTS FOR DFACPSDB                                       @LPA*/ 09620300
 DECLARE                                                                09624000
   DFACPSNO BIT(4) CONSTANT('0001'B), /* COPYSDB = NO            @LPA*/ 09627700
   DFACPSYE BIT(4) CONSTANT('0010'B), /* COPYSDB = YES           @LPA*/ 09631400
   DFACPSSM BIT(4) CONSTANT('0010'B), /* COPYSDB = SMALL (same as       09635100
                                           COPYSDB = YES)        @LPA*/ 09638800
   DFACPSIN BIT(4) CONSTANT('0011'B), /* COPYSDB = INPUT         @LPA*/ 09642500
   DFACPSLA BIT(4) CONSTANT('0100'B); /* COPYSDB = LARGE         @LPA*/ 09646200
                                                                        09650000
