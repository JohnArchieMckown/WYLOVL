*/*** START OF SPECIFICATIONS ****************************************  00050000
*                                                                       00100000
*01* MACRO NAME = STCKSYNC                                              00150000
*                                                                       00200000
*01*  DESCRIPTIVE NAME = STCKSYNC Macro                                 00250000
*                                                                       00300000
*01* PROPRIETARY STATEMENT =                                       @L2C 00350000
*    LICENSED MATERIALS - PROPERTY OF IBM                               00400000
*    THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                       00450000
*    5647-A01 (C) COPYRIGHT IBM CORP. 1990, 1999                        00500000
*                                                                       00600000
*01* STATUS =  HBB6608                                             @L2C 00650000
*                                                                       00670000
*01* EXTERNAL CLASSIFICATION:                                           00690000
*02*         GUPI:BASE                                                  00710000
*01* END OF EXTERNAL CLASSIFICATION:                                    00730000
*                                                                       00750000
*01* FUNCTION =                                                         00800000
*     Provide the interface to the STCKSYNC service routine (IEATSTCK). 00850000
*                                                                       00900000
*02* OPERATION =                                                        00950000
*     The STCKSYNC macro parses the keywords supplied.  In the          01000000
*     event of an error, syntax checking will attempt to continue       01050000
*     for the remainder of the input.  No data will be generated.       01100000
*                                                                       01150000
*     If there are no syntax errors, the macro will invoke the correct  01200000
*     entry point in IEATSTCK.  The entry point to invoke is determined 01250000
*     by the setting of SYSSTATE and the presence of the ETRID keyword. 01300000
*                                                                       01350000
*01*  SYNTAX =  (BAL)                                                   01400000
*                                                                       01450000
*    STCKSYNC                                                           01475000
*             | TOD=TOD-clock-return-area-RX-address                    01500000
*             | ETOD=128-bit TOD-clock-return-area-RX-address           01525000
*                                                                       01550000
*                <,ETRID=ETR-ID-return-area-RX-address>                 01600000
*                                                                       01650000
*                                                                       01700000
*01*  SYNTAX =  (PLAS)                                                  01750000
*                                                                       01800000
*   ?STCKSYNC                                                           01825000
*             | TOD(TOD-clock-return-area)                              01850000
*             | ETOD(128-bit TOD-clock-return-area)                     01875000
*                                                                       01900000
*                <ETRID(ETR-id-return-area)>                            01950000
*                                                                       02000000
*01*  NOTES =                                                           02050000
*                                                                       02100000
*02*    RESTRICTIONS = Invoker must be in 31-bit addressing mode.       02150000
*                                                                       02200000
*02*    DEPENDENCIES = None                                             02250000
*                                                                       02300000
*03*      CHARACTER-CODE DEPENDENCIES= EBCDIC                           02350000
*                                                                       02400000
*01*  MODULE TYPE = MACRO                                               02450000
*                                                                       02500000
*02*    PROCESSOR = ASSEMBLER,PLAS (BILINGUAL)                          02550000
*                                                                       02600000
*02*    INVOCATION = See MACRO definition                               02650000
*                                                                       02700000
*01*  COMPONENT  =  SC1CV (TIMER SUPERVISION)                           02750000
*                                                                       02800000
*01*  DISTRIBUTION LIBRARY = AMACLIB                                    02850000
*                                                                       02900000
*01*  CHANGE ACTIVITY =                                                 02950000
*   $L0=CLOCK    HBB4410  871102  PD16CU: ETR                           02983300
*   $L1=PROD410  HBB4410  890814  PD162M: ETR                           03016600
*   $L2=STCKE    HBB6608  980530  B7HGH5: 128 bit TOD support           03033300
*                                                                       03050000
****** END OF SPECIFICATIONS *****************************************  03100000
         MACRO                                                          03150000
&NAME    STCKSYNC  &TOD=+,          TOD OUTPUT AREA ADDRESS  (INPUT)   X03183300
               &ETOD=+,         ETOD OUTPUT AREA ADDRESS(INPUT)    @L2AX03216600
               &ETRID=+   OPTIONAL ETRID OUTPUT AREA ADDRESS  (INPUT)   03250000
.*                                                                      03300000
.********************************************************************   03350000
.*      PUT OUT BAL MACDATE COMMENT LINE REGARDLESS OF ERRORS       *   03400000
.********************************************************************   03450000
*              MACDATE = 05/30/98                                  @L2A 03500000
.*                                                                      03550000
.*                                                                      03600000
         GBLC    &SYSASCE                  SYSSTATE TEST RESULT.        03650000
.*                                                                      03700000
         SYSSTATE TEST                     CALL SYSSTATE MACRO TO       03750000
.*                                         DETERMINE ASC MODE.          03800000
.*                                         NOTE: GLOBAL VAR &SYSASCE    03850000
.*                                               WILL BE SET.           03900000
.*                                                                      03950000
.********************************************************************   04000000
.*      VARIABLE DECLARATIONS                                       *   04050000
.********************************************************************   04100000
.*                                                                      04150000
         LCLB    &ETR                      FLAG->WAS ETRID RETURN       04200000
.*                                         AREA SPECIFIED?              04250000
         LCLB    &TODE                     FLAG->WAS ETOD RETURN   @L2A 04266600
.*                                         AREA SPECIFIED?              04283200
         LCLB    &ERR                      FLAG->WAS AN ERROR FOUND?    04300000
.*                                                                      04350000
         LCLC    &KEY                      KEYWORD FOR ERROR MESSAGE.   04400000
.*                                                                      04450000
&ETR     SETB    0                         ETRID DEFAULT (NO REQUEST).  04500000
.*                                                                      04550000
.*                                                                      04600000
&TODE    SETB    0                         ETOD DEFAULT (NO ETOD)  @L2A 04616600
.*                                                                      04633200
&ERR     SETB    0                         ERROR DEFAULT (NO ERRORS).   04650000
.*                                                                      04700000
.*                                                                      04750000
.*                                                                      04800000
.********************************************************************   04850000
.*     CHECK FOR POSITIONAL PARAMETERS                              *   04900000
.********************************************************************   04950000
.*                                                                      05000000
         AIF    (N'&SYSLIST GE 1).ERR01    TOO MANY POSITIONALS?        05050000
.*                                                                      05100000
.NOPOS   ANOP   ,                          -NO-                         05150000
.*                                                                      05200000
.********************************************************************   05250000
.*     VALIDATE TOD|ETOD PARAMETER /ONE REQUIRED/                   *   05300000
.********************************************************************   05350000
.*                                                                      05400000
         AIF    ('&TOD' EQ '+').VALETOD    IF REQUIRED PARAMETER   @L2A 05450000
.*                                         MISSING, ISSUE ERROR.        05600000
&KEY     SETC   'TOD'                      VALIDATING TOD PARAMETER.    05625000
.*                                                                      05650000
         AIF    ('&TOD' EQ '').ERR04       IF NULL PARAMETER GIVEN,     05700000
.*                                         ISSUE ERROR.                 05750000
.*                                                                      05800000
         AIF    ('&TOD'(1,1) EQ '(').ERR03 IF TOO MANY SUBLISTS,        05850000
.*                                         ISSUE ERROR.                 05900000
.*                                                                      05903100
         AIF    ('&ETOD' NE '+').ERR05                             @L2A 05906200
         AGO    .VALETR                                            @L2A 05909300
.*                                                                      05912400
.VALETOD ANOP   ,                                                  @L2A 05915500
&KEY     SETC   'ETOD'                     VALIDATING ETOD PARAM   @L2A 05918600
.*                                                                      05921700
         AIF    ('&ETOD' EQ '+').ERR02     IF REQUIRED PARAMETER   @L2A 05924800
.*                                         MISSING, ISSUE ERROR.        05927900
         AIF    ('&ETOD' EQ '').ERR04      IF NULL PARAMETER,      @L2A 05931000
.*                                         ISSUE ERROR.                 05934100
.*                                                                      05937200
         AIF    ('&ETOD'(1,1) EQ '(').ERR03 IF TOO MANY SUBLISTS, @L2A  05940300
.*                                         ISSUE ERROR.                 05943400
&TODE    SETB   1                          ETOD SPECIFIED.         @L2A 05946500
.*                                                                      05950000
.********************************************************************   06000000
.*       VALIDATE ETRID KEYWORD IF PRESENT                          *   06050000
.********************************************************************   06100000
.*                                                                      06150000
.VALETR  ANOP   ,                                                       06200000
.*                                                                      06250000
&KEY     SETC   'ETRID'                    VALIDATING ETRID PARAMETER.  06300000
.*                                                                      06350000
         AIF    ('&ETRID' EQ '+').STRGEN   ETRID REQUESTED?             06400000
.*                                         NO- EXIT ETRID VALIDATION.   06450000
.*                                                                      06500000
         AIF    ('&ETRID' EQ '').ERR04     IF NULL PARAMETER GIVEN,     06550000
.*                                         ISSUE ERROR.                 06600000
.*                                                                      06650000
         AIF    ('&ETRID'(1,1) EQ '(').ERR03  IF TOO MANY SUBLISTS,     06700000
.*                                            ISSUE ERROR.              06750000
.*                                                                      06800000
&ETR     SETB   1                          INDICATE ETRID REQUESTED.    06850000
.*                                                                      06900000
.********************************************************************   06950000
.*     PROVIDE  LINKAGE TO IEATSTCK SERVICE ROUTINE                 *   07000000
.********************************************************************   07050000
.*                                                                      07100000
.STRGEN  ANOP   ,                                                       07150000
.*                                                                      07200000
         AIF    (&ERR EQ 0).NOERR          IF NO ERRORS, CONTINUE.      07250000
         MEXIT                             ELSE QUIT.                   07300000
.*                                                                      07350000
.NOERR   ANOP   ,                                                       07400000
.*                                                                      07450000
&NAME    DS     0H                                                 @L1C 07500000
.*                                                                      07550000
         AIF    (&ETR EQ 0).LOADTOD        IF ETRID REQ., LOAD IT.      07600000
         LAE    0,&ETRID                   LOAD AR/GR 0 WITH ETRID      07650000
.*                                         OUTPUT AREA ADDRESS.         07700000
.*                                                                      07750000
.LOADTOD ANOP   ,                                                       07800000
         AIF    (&TODE EQ 1).LDETOD                                @L2A 07825000
         LAE    1,&TOD                     LOAD AR/GR 1 WITH TOD        07850000
.*                                         OUTPUT AREA ADDRESS.         07900000
         AGO    .CONTIN                                            @L2A 07906200
.LDETOD  ANOP   ,                                                       07912400
         LAE    1,&ETOD                    LOAD AR/GR 1 WITH ETOD  @L2A 07918600
.*                                         OUTPUT AREA ADDRESS.         07924800
         LA     15,1                       CREATE MASK FOR HI BIT. @L2A 07931000
         SLL    15,31                                              @L2A 07937200
         OR     1,15                       INDICATE ETOD SPECIFIED @L2A 07943400
.*                                                                      07950000
.CONTIN  ANOP   ,                                                  @L2A 07975000
         AIF    ('&SYSASCE'(1,1) EQ 'P').NONAR    ARE WE IN AR MODE?    08000000
.*                                                                      08050000
         AIF    (&ETR EQ 1).ARETR          -YES- WAS ETRID REQUESTED?   08100000
.*                                                                      08150000
.********************************************************************   08200000
.*    ESTABLISH BASR LINKAGE TO IEATSTCK SERVICE ROUTINE FOR        *   08250000
.*    ENTRY: AR MODE, ETRID NOT REQUESTED (IEATSTC3).               *   08300000
.********************************************************************   08350000
.*                                                                      08400000
         L      15,X'10'(0,0)              GET ADDRESS OF CVT.          08450000
         L      15,X'8C'(15,0)             GET ADDRESS OF ECVT.         08500000
         L      15,X'20'(15,0)             GET ENTRY FOR SERVICE.       08550000
.*                                                                      08600000
         BASR   14,15                      ACCESS IEATSTCK SERVICE.     08650000
         MEXIT                                                          08700000
.*                                                                      08750000
.*                                                                      08800000
.ARETR   ANOP   ,                                                       08850000
.********************************************************************   08900000
.*    ESTABLISH BASR LINKAGE TO IEATSTCK SERVICE ROUTINE FOR        *   08950000
.*    ENTRY: AR MODE, ETRID REQUESTED (IEATSTC4).                   *   09000000
.********************************************************************   09050000
.*                                                                      09100000
         L      15,X'10'(0,0)              GET ADDRESS OF CVT.          09150000
         L      15,X'8C'(15,0)             GET ADDRESS OF ECVT.         09200000
         L      15,X'24'(15,0)             GET ENTRY FOR SERVICE.       09250000
.*                                                                      09300000
         BASR   14,15                      ACCESS IEATSTCK SERVICE.     09350000
         MEXIT                                                          09400000
.*                                                                      09450000
.*                                                                      09500000
.*                                                                      09550000
.********************************************************************   09600000
.*                                                                      09650000
.NONAR   ANOP   ,                                                       09700000
         AIF    (&ETR EQ 1).NARETR         WAS ETRID REQUESTED?         09750000
.*                                                                      09800000
.********************************************************************   09850000
.*    ESTABLISH BASR LINKAGE TO IEATSTCK SERVICE ROUTINE FOR        *   09900000
.*    ENTRY: PRIMARY MODE, ETRID NOT REQUESTED (IEATSTC1).          *   09950000
.********************************************************************   10000000
.*                                                                      10050000
         L      15,X'10'(0,0)              GET ADDRESS OF CVT.          10100000
         L      15,X'8C'(15,0)             GET ADDRESS OF ECVT.         10150000
         L      15,X'18'(15,0)             GET ENTRY FOR SERVICE.       10200000
.*                                                                      10250000
         BASR   14,15                      ACCESS IEATSTCK SERVICE.     10300000
         MEXIT                                                          10350000
.*                                                                      10400000
.NARETR  ANOP   ,                                                       10450000
.*                                                                      10500000
.********************************************************************   10550000
.*    ESTABLISH BASR LINKAGE TO IEATSTCK SERVICE ROUTINE FOR        *   10600000
.*    ENTRY: PRIMARY MODE, ETRID REQUESTED (IEATSTC2).              *   10650000
.********************************************************************   10700000
.*                                                                      10750000
         L      15,X'10'(0,0)              GET ADDRESS OF CVT           10800000
         L      15,X'8C'(15,0)             GET ADDRESS OF ECVT          10850000
         L      15,X'1C'(15,0)             GET ENTRY FOR SERVICE        10900000
.*                                                                      10950000
         BASR   14,15                      ACCESS IEATSTCK SERVICE.     11000000
         MEXIT                                                          11050000
.*                                                                      11100000
.*                                                                      11150000
.*                                                                      11200000
.********************************************************************   11250000
.*      MNOTES                                                      *   11300000
.********************************************************************   11350000
.*                                                                      11400000
.ERR01   ANOP   ,                                                       11450000
         MNOTE  8,'EXCESSIVE POSITIONAL PARAMETERS WERE SPECIFIED.'     11500000
&ERR     SETB   1                                                       11550000
         AGO    .NOPOS                                                  11600000
.*                                                                      11650000
.ERR02   ANOP   ,                                                       11700000
         MNOTE  8,' ''TOD'' or ''ETOD'' IS REQUIRED, BUT IS NOT SUPPLIEx11733300
               D.'                                                 @L2C 11766600
&ERR     SETB   1                                                       11800000
         AGO    .VALETR                                                 11850000
.*                                                                      11900000
.ERR03   ANOP   ,                                                       11950000
         MNOTE  8,'&KEY PARAMETER CONTAINS TOO MANY SUBLISTS.'          12000000
&ERR     SETB   1                                                       12050000
         AIF    ('&KEY' NE 'ETRID').VALETR                         @L2C 12100000
         MEXIT                                                          12150000
.*                                                                      12200000
.ERR04   ANOP   ,                                                       12250000
         MNOTE  8,'&KEY PARAMETER REQUIRES A VALUE.'                    12300000
&ERR     SETB   1                                                       12350000
         AIF    ('&KEY' NE 'ETRID').VALETR                         @L2C 12400000
         MEXIT                                                          12450000
.*                                                                      12457100
.ERR05   ANOP   ,                                                  @L2A 12464200
         MNOTE  8,' SPECIFIY EITHER ''TOD'' OR ''ETOD'', NOT BOTH.'     12471300
.*                                                                 @L2A 12478400
&ERR     SETB   1                                                  @L2A 12485500
         MEXIT                                                     @L2A 12492600
.*                                                                      12500000
.EXIT    ANOP   ,                                                       12550000
.*                                                                      12600000
         MEND                                                           12650000
*                                                                    */ 12700000
*@EJECT;                                                                12750000
*                                                                       12800000
*%STCKSYNC: MACRO KEYS(TOD,         /* TOD clock return area.        */ 12850000
*                      ETOD,        /* ETOD clock return area.   @L2A*/ 12875000
*                      ETRID);      /* ETRID return area.            */ 12900000
*/********************************************************************/ 12950000
*/* Define external macro variables.                                 */ 13000000
*/********************************************************************/ 13050000
*                                                                       13100000
*   DECLARE                                                             13150000
*     EHAREGS CHARACTER EXT,        /* Contains declared register       13200000
*                                      numbers.                      */ 13250000
*     SYSASCE CHARACTER EXT,        /* AR or PRIMARY mode indicator     13300000
*                                      set by SYSSTATE macro.        */ 13350000
*     EHARC   FIXED EXT;            /* Return Code variable.         */ 13400000
*                                                                       13450000
*   EHARC=0;                        /* Default return code=no errors.*/ 13500000
*/*                                                                  */ 13550000
*/********************************************************************/ 13600000
*/* Define internal macro variables.                                 */ 13650000
*/********************************************************************/ 13700000
*                                                                       13750000
*   DCL                                                                 13800000
*     EM(5) CHARACTER;              /* Error messages - defined. @L2C*/ 13850000
*   DCL                                                                 13900000
*     ERR FIXED;                    /* Error severity value.         */ 13950000
*   DCL                                                                 14000000
*     ERRMSG CHARACTER;             /* Error message to print.       */ 14050000
*   DCL                                                                 14100000
*     IHBERR FIXED;                 /* Highest error level              14150000
*                                      encountered.                  */ 14200000
*   DCL                                                                 14250000
*     INCMNT FIXED;                 /* Indent value for error           14300000
*                                      comments.                     */ 14350000
*   DCL                                                                 14400000
*     INDENT FIXED;                 /* Starting column for all output   14450000
*                                      text except DO and END           14500000
*                                      statements.                   */ 14550000
*   DCL                                                                 14600000
*     IVDOCMT CHARACTER;            /* Comment for DO and END           14650000
*                                      statements.                   */ 14700000
*   DCL                                                                 14750000
*     MPREFIX CHARACTER;            /* Error message prefix.         */ 14800000
*/********************************************************************/ 14850000
*/* Initialize internal macro variables.                             */ 14900000
*/********************************************************************/ 14950000
*                                                                       15000000
*   ERR=8;                          /* Error severity.               */ 15050000
*   IHBERR=0;                       /* Indicate NO ERROR condition.  */ 15100000
*   INCMNT=MACLMAR;                 /* Indent for error comments.    */ 15150000
*   INDENT=MACCOL+2;                /* Indent two columns.           */ 15200000
*   IVDOCMT='?STCKSYNC '||MACLIST||' '||MACKEYS||' '||'05/30/98';/*     15250000
*                                      Set up DO - END comment.  @L2C*/ 15300000
*   ANS('?SYSSTATE (TEST);');       /* Set the SYSASCE variable.     */ 15350000
*   MPREFIX='?STCKSYNC --> ';       /* Error message prefix.         */ 15400000
*/********************************************************************/ 15450000
*/* Error Messages:                                                  */ 15500000
*/*                                                                  */ 15550000
*/* Processing will continue as far as possible when an error        */ 15600000
*/* occurs.                                                          */ 15650000
*/********************************************************************/ 15700000
*                                                                       15750000
*   EM(1)='EXCESSIVE POSITIONAL PARAMETERS WERE SPECIFIED.';            15800000
*   EM(2)=                          /* keyword                       */ 15850000
*       ' PARAMETER REQUIRES A VALUE.';                                 15900000
*   EM(3)=                          /* keyword                       */ 15950000
*       ' PARAMETER CONTAINS TOO MANY SUBLISTS.';                       16000000
*   EM(4)=                          /* keyword                       */ 16050000
*       ' IS REQUIRED, BUT IS NOT SUPPLIED.';                           16100000
*   EM(5)= ' ''TOD'' OR ''ETOD'' IS REQUIRED, BUT NOT BOTH.'; /* @L2A*/ 16125000
*                                                                       16150000
*/********************************************************************/ 16200000
*/* Set up the macro invocation comment.                             */ 16250000
*/********************************************************************/ 16300000
*                                                                       16350000
*   ANS(MACLABEL) NORESCAN COL(MACLMAR);/* Put out the labels.       */ 16400000
*   ANS('BEGIN;') COL(MACCOL);      /* Put out 'BEGIN'.              */ 16450000
*   ANS(COMMENT(IVDOCMT));          /* List macro parameters.        */ 16500000
*/********************************************************************/ 16550000
*/* Process maclist.                                                 */ 16600000
*/********************************************************************/ 16650000
*                                                                       16700000
*   IF NUMBER(MACLIST)^=0 THEN      /* Too many arguments in MACLIST?*/ 16750000
*     DO;                           /* Yes -                         */ 16800000
*       IHBERR=ERR;                 /* Indicate error                */ 16850000
*       ERRMSG=MPREFIX||EM(1);      /* Build message.                */ 16900000
*       ANS MSG(ERRMSG) NORESCAN;   /* Issue message.                */ 16950000
*       ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.        */ 17000000
*     END;                                                              17050000
*                                                                       17100000
*/********************************************************************/ 17150000
*/*                                                                  */ 17200000
*/* Validate TOD|ETOD keywords.                                      */ 17250000
*/*                                                                  */ 17300000
*/********************************************************************/ 17350000
*                                                                       17400000
*   IF(TOD='') THEN                 /* If TOD was not specified, then   17450000
*                                      check for ETOD                */ 17500000
*     DO;                                                               17550000
*       IF(ETOD='') THEN            /* Indicate Error.           @L2A*/ 17558600
*         DO;                                                 /* @L2A*/ 17567200
*           IHBERR=ERR;             /* Indicate Error.           @L2A*/ 17575800
*           ERRMSG=MPREFIX||'TOD OR ETOD'||EM(4);/* Build message. /*   17584400
*                                                                @L2A*/ 17593000
*           ANS MSG(ERRMSG) NORESCAN;    /* Issue message.       @L2A*/ 17601600
*           ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.@L2A*/ 17610200
*         END;                                                /* @L2A*/ 17618800
*       ELSE                                                  /* @L2A*/ 17627400
*         IF(NUMBER(ETOD)>1) THEN   /* If there are too many sublists,  17636000
*                                      the invocation is invalid @L2A*/ 17644600
*           DO;                                               /* @L2A*/ 17653200
*             IHBERR=ERR;           /* Indicate Error.           @L2A*/ 17661800
*             ERRMSG=MPREFIX||'ETOD'||EM(3); /* Build msg.       @L2A*/ 17670400
*             ANS MSG(ERRMSG) NORESCAN;    /* Issue msg.         @L2A*/ 17679000
*             ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.     17687600
*                                                                @L2A*/ 17696200
*           END;                                              /* @L2A*/ 17704800
*         ELSE                                                /* @L2A*/ 17713400
*           IF ETOD(1)='' THEN      /* If there are no ETOD arguments,  17722000
*                                      the invocation is invalid @L2A*/ 17730600
*             DO;                                             /* @L2A*/ 17739200
*               IHBERR=ERR;         /* Indicate Error.        /* @L2A*/ 17747800
*               ERRMSG=MPREFIX||'ETOD'||EM(2); /* Build message. @L2A*/ 17756400
*               ANS MSG(ERRMSG) NORESCAN;    /* Issue message.   @L2A*/ 17765000
*               ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.   17773600
*                                                                @L2A*/ 17782200
*             END;                                            /* @L2A*/ 17790800
*     END;                                                              17800000
*   ELSE                                                                17850000
*     IF(NUMBER(TOD)>1) THEN        /* If there are too many sublists,  17900000
*                                      the invocation is invalid.    */ 17950000
*       DO;                                                             18000000
*         IHBERR=ERR;               /* Indicate Error.               */ 18050000
*         ERRMSG=MPREFIX||'TOD'||EM(3);    /* Build msg.             */ 18100000
*         ANS MSG(ERRMSG) NORESCAN;        /* Issue msg.             */ 18150000
*         ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.      */ 18200000
*       END;                                                            18250000
*     ELSE                                                              18300000
*       IF TOD(1)='' THEN           /* If there are no TOD arguments,   18350000
*                                      the invocation is invalid.    */ 18400000
*         DO;                                                           18450000
*           IHBERR=ERR;             /* Indicate Error.               */ 18500000
*           ERRMSG=MPREFIX||'TOD'||EM(2);    /* Build message.       */ 18550000
*           ANS MSG(ERRMSG) NORESCAN;        /* Issue message.       */ 18600000
*           ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.    */ 18650000
*         END;                                                          18700000
*       ELSE                                                  /* @L2A*/ 18710000
*         IF ETOD ^= '' THEN                                  /* @L2A*/ 18720000
*           DO;                                               /* @L2A*/ 18730000
*             IHBERR=ERR;           /* Indicate Error.           @L2A*/ 18740000
*             ERRMSG=MPREFIX||EM(5); /* Build message.           @L2A*/ 18750000
*             ANS MSG(ERRMSG) NORESCAN;  /* Issue message.       @L2A*/ 18760000
*             ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.     18770000
*                                                                @L2A*/ 18780000
*           END;                                              /* @L2A*/ 18790000
*/********************************************************************/ 18800000
*/* Validate ETRID keyword if present.                               */ 18850000
*/********************************************************************/ 18900000
*                                                                       18950000
*   IF(ETRID^='') THEN              /* If the ETRID keyword is          19000000
*                                      present, validate it.         */ 19050000
*     IF(NUMBER(ETRID)>1) THEN      /* If there are to many sublists,   19100000
*                                      the invocation is invalid.    */ 19150000
*       DO;                                                             19200000
*         IHBERR=ERR;               /* Indicate Error.               */ 19250000
*         ERRMSG=MPREFIX||'ETRID'||EM(3);  /* Build msg.             */ 19300000
*         ANS MSG(ERRMSG) NORESCAN;        /* Issue msg.             */ 19350000
*         ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate commen        */ 19400000
*       END;                                                            19450000
*     ELSE                                                              19500000
*       IF ETRID(1)='' THEN         /* If there are no ETRID            19550000
*                                      arguments, the invocation is     19600000
*                                      invalid.                      */ 19650000
*         DO;                                                           19700000
*           IHBERR=ERR;             /* Indicate Error.               */ 19750000
*           ERRMSG=MPREFIX||'ETRID'||EM(2);  /* Build message.       */ 19800000
*           ANS MSG(ERRMSG) NORESCAN;        /* Issue message.       */ 19850000
*           ANS(COMMENT(ERRMSG)) COL(INCMNT);/* Generate comment.    */ 19900000
*         END;                                                          19950000
*                                                                       20000000
*/********************************************************************/ 20050000
*/* If there were no invocation errors, generate code.               */ 20100000
*/********************************************************************/ 20150000
*                                                                       20200000
*   IF IHBERR=0 THEN                /* If there were no invocation      20250000
*                                      errors, generate the code.    */ 20300000
*     DO;                                                               20350000
*                                                                       20400000
*/********************************************************************/ 20450000
*/* Define macro control block pointers                              */ 20500000
*/********************************************************************/ 20550000
*                                                                       20600000
*       ANS(('DCL  STK@CVT   PTR(31) LOCATION(16);')||COMMENT(          20650000
*           'Declare pointer to CVT.')) COL(INDENT) SKIP(1) NORESCAN;   20700000
*                                   /* Declare pointer to CVT.       */ 20750000
*       ANS(('DCL  STK@ECVT  PTR(31) BASED(STK@CVT) POS(141);')||       20800000
*           COMMENT('Declare pointer to ECVT.')) COL(INDENT) SKIP(1)    20850000
*           NORESCAN;               /* Declare pointer to ECVT.      */ 20900000
*       ANS(('RFY (GPR01P,GPR14P,GPR15P) RSTD; ')) COL(INDENT) SKIP(1)  20950000
*           NORESCAN;               /* Restrict required registers.  */ 21000000
*       IF TOD ^= '' THEN                                     /* @L2A*/ 21033300
*         ANS(('GPR01P = ADDR('||TOD(1)||'); ')||COMMENT(               21066600
*           'Load GPR01 with the address of TOD parameter.')) COL(      21100000
*           INDENT) SKIP(1) NORESCAN; /* Load GPR01 with address of     21150000
*                                        TOD parameter.              */ 21200000
*       ELSE                                                  /* @L2A*/ 21208300
*         DO;                                                 /* @L2A*/ 21216600
*           ANS(('GPR01P = ADDR('||ETOD(1)||'); ')||COMMENT(            21224900
*             'Load GPR01 with the address of ETOD parameter.')) COL(   21233200
*             INDENT) SKIP(1) NORESCAN; /* Load GPR01 with address of   21241500
*                                        ETOD parameter.         @L2A*/ 21249800
*           ANS(('GPR01P = GPR01P | ''80000000''X; ')||                 21258100
*             COMMENT('Indicate that ETOD was specified.')) COL(INDENT) 21266400
*             SKIP(1) NORESCAN;                               /* @L2A*/ 21274700
*         END;                                                /* @L2A*/ 21283000
*       IF ETRID^= '' THEN          /* Was an ETRID requested?       */ 21291300
*         DO;                       /* YES                           */ 21300000
*           ANS(('RFY GPR00P RSTD; ')) COL(INDENT) SKIP(1) NORESCAN;/*  21350000
*                                      Restrict required register.   */ 21400000
*           ANS(('GPR00P = ADDR('||ETRID(1)||'); ')||COMMENT(           21450000
*               'Load GPR00 with the address of ETRID parameter.')) COL 21500000
*               (INDENT) SKIP(1) NORESCAN;/* Load GPR00 with address    21550000
*                                           of ETRID param.          */ 21600000
*           IF SYSASCE='P' THEN                                         21650000
*             ANS(('GPR15P = (STK@ECVT + 28)->I031P; ')||COMMENT(       21700000
*                 'Load GPR15 with address of entry point.')) COL(      21750000
*                 INDENT) SKIP(1) NORESCAN; /* ENTRY POINT: NON-AR,     21800000
*                                              ETRID requested.      */ 21850000
*           ELSE                                                        21900000
*             DO;                                                       21950000
*               ANS(('GPR15P = (STK@ECVT + 36)->I031P; ')||COMMENT(     22000000
*                  'Load GPR15 with address of Entry Point.')) COL(     22050000
*                  INDENT) SKIP(1) NORESCAN; /* Entry point: AR, ETRID  22100000
*                                               requested.           */ 22150000
*               ANS(('SAR(GPR00F,ALET('||ETRID(1)||')); ')||COMMENT(    22200000
*                  'Load AR0 with the ALET of ETRID parameter.')) COL(  22250000
*                  INDENT) SKIP(1) NORESCAN;/* Load AR0 with ALET of    22300000
*                                              ETRID parameter.      */ 22350000
*             END;                                                      22400000
*         END;                                                          22450000
*       ELSE                                                            22500000
*         IF SYSASCE='P' THEN                                           22550000
*           ANS(('GPR15P = (STK@ECVT + 24)->I031P; ')||COMMENT(         22600000
*               'Load GPR15 with address of Entry Point.')) COL(INDENT) 22650000
*               SKIP(1) NORESCAN;   /* Entry point: non-AR, no ETRID    22700000
*                                      requested.                    */ 22750000
*         ELSE                                                          22800000
*           ANS(('GPR15P = (STK@ECVT + 32)->I031P; ')||COMMENT(         22850000
*               'Load GPR15 with address of Entry Point.')) COL(INDENT) 22900000
*               SKIP(1) NORESCAN;   /* Entry point: AR, no ETRID        22950000
*                                      requested.                    */ 23000000
*       IF SYSASCE ^= 'P' THEN                                          23050000
*         IF TOD ^= '' THEN                                   /* @L2A*/ 23083300
*           ANS(('SAR(GPR01F,ALET('||TOD(1)||')); ')||COMMENT(          23116600
*              'Load AR1 with the ALET of TOD parameter.')) COL(INDENT) 23150000
*              SKIP(1) NORESCAN;       /* Load AR1 with ALET of TOD     23200000
*                                         parameter.                 */ 23250000
*         ELSE                                                /* @L2A*/ 23258300
*           ANS(('SAR(GPR01F,ALET('||ETOD(1)||')); ')||COMMENT(         23266600
*             'Load AR1 with the ALET of ETOD parameter.')) COL(INDENT) 23274900
*              SKIP(1) NORESCAN;       /* Load AR1 with ALET of ETOD    23283200
*                                         parameter.             @L2A*/ 23291600
*       ANS('GENERATE REFS(GPR15P) SETS(GPR14P,GPR15F) ') COL(10) SKIP( 23300000
*           1) NORESCAN;                                                23350000
*       ANS('(BASR GPR14P,GPR15P); '||COMMENT(                          23400000
*           'Generate Service Routine linkage.')) COL(INDENT) SKIP(1)   23450000
*           NORESCAN;               /* Generate Service Routine         23500000
*                                      linkage.                      */ 23550000
*       IF ETRID^='' THEN           /* If ETRID requested, ...       */ 23600000
*         ANS(('RFY GPR00P UNRSTD; ')) COL(INDENT) SKIP(1)              23650000
*             NORESCAN;              /* Free register.               */ 23700000
*       ANS(('RFY (GPR01P,GPR14P,GPR15P) UNRSTD; ')) COL(INDENT)        23750000
*           SKIP(1) NORESCAN;       /* Free registers.               */ 23800000
*     END;                                                              23850000
*                                                                       23900000
*/********************************************************************/ 23950000
*/* Set up the macro end comment.                                    */ 24000000
*/********************************************************************/ 24050000
*                                                                       24100000
*   ANS('END; ') COL(MACCOL);       /* Put out 'END'.                */ 24150000
*   ANS(COMMENT(IVDOCMT));          /* List macro parameters.        */ 24200000
*/********************************************************************/ 24250000
*/* Set up register declarations.                                    */ 24300000
*/********************************************************************/ 24350000
*                                                                       24400000
*   IF ETRID^='' THEN               /* IF an ETRID was requested ... */ 24450000
*     DO;                                                               24500000
*       IF INDEX(EHAREGS,'00P')=0 THEN /* IF register 0 not defined, */ 24550000
*         EHAREGS=EHAREGS||'00P';      /* then, define register 0.   */ 24600000
*       IF INDEX(EHAREGS,'00F')=0 THEN /* IF register 0 not defined, */ 24650000
*         EHAREGS=EHAREGS||'00F';      /* then, define register 0.   */ 24700000
*     END;                                                              24750000
*   IF INDEX(EHAREGS,'01P')=0 THEN  /* If register 1 not defined,       24800000
*                                      define it.                    */ 24850000
*     EHAREGS=EHAREGS||'01P';       /* Define register 1.            */ 24900000
*   IF INDEX(EHAREGS,'01F')=0 THEN  /* If register 1 not defined,       24950000
*                                      define it.                    */ 25000000
*     EHAREGS=EHAREGS||'01F';       /* Define register 1.            */ 25050000
*   IF INDEX(EHAREGS,'14P')=0 THEN  /* If register 14 not defined,      25100000
*                                      define it.                    */ 25150000
*     EHAREGS=EHAREGS||'14P';       /* Define register 14.           */ 25200000
*   IF INDEX(EHAREGS,'15F')=0 THEN  /* If register 15 not defined,      25250000
*                                      define it.                    */ 25300000
*     EHAREGS=EHAREGS||'15F';       /* Define register 15.           */ 25350000
*   IF INDEX(EHAREGS,'15P')=0 THEN  /* If register 15 not defined,      25400000
*                                      define it.                    */ 25450000
*     EHAREGS=EHAREGS||'15P';       /* Define register 15.           */ 25500000
*   IF IHBERR^=0 THEN               /* Set return code on error.     */ 25550000
*     EHARC=IHBERR;                                                     25600000
*   RETURN CODE(EHARC);             /* Return with return code.      */ 25650000
*   %END STCKSYNC;                                                      25700000
