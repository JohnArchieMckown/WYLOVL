* %/*                                                                   00050000
         MACRO                                                          00100000
&NAME    IOSLOOK &UCB=(7),&DEV=                                         00150000
         LCLC  &S                       VARIABLE FOR BRANCH LABEL       00200000
         GBLB  &LOOKFTS                 FIRST TIME SWITCH               00250000
.********************************************************************** 00300000
.*       CSECT AUTHORIZATION                                            00350000
.*                                                                      00400000
.*       AIF   (('&SYSECT' EQ 'IQAALL00') OR                            00450000
.*             ('&SYSECT' EQ 'IQAERR00')).UCBAUTH                       00500000
.*       AIF   ('&SYSECT' EQ 'IGC0005I').UCBAUTH                        00550000
.*       AIF   ('&SYSECT' EQ 'IGC0905I').UCBAUTH                        00600000
.*       AIF   ('&SYSECT' EQ 'IEEVDEV').UCBAUTH                         00650000
.*       AIF   ('&SYSECT' EQ 'IEEVPTH').UCBAUTH                         00700000
.*       AIF   ('&SYSECT' EQ 'IEAVNIP0').UCBAUTH                        00750000
.*       AIF   ('&SYSECT' EQ 'IEAVNIPM').UCBAUTH                        00800000
.*       AIF   ('&SYSECT' EQ 'IEEMPDM').UCBAUTH                         00850000
.*       AIF   ('&SYSECT' EQ 'IQASTK00').UCBAUTH                        00900000
.*       AIF   ('&SYSECT' EQ 'ISTINMAV').UCBAUTH                        00950000
.*       AIF   ('&SYSECT' EQ 'IEE3603D').UCBAUTH                        01000000
.*       AIF   ('&SYSECT' EQ 'IGC0012F').UCBAUTH                        01050000
.*       AIF   ('&SYSECT' EQ 'ICBVMT00').UCBAUTH                        01100000
.********************************************************************** 01150000
         AIF   ('&LOOKFTS' EQ '1').LOOK010                              01200000
&LOOKFTS SETB  1                                                        01250000
*********************************************************************** 01300000
*                                                                     * 01350000
*01*  MACRO NAME =  IOSLOOK                                           * 01400000
*                                                                     * 01450000
*01*  DESCRIPTIVE NAME = IOS UCB LOOK SERVICE                         * 01500000
*                                                                     * 01550000
.*01*  COPYRIGHT =                                                    * 01600000
.*      5740-XC6                                                      * 01650000
.*      THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                   * 01700000
.*      (C) COPYRIGHT IBM CORP. 1982                                  * 01750000
.*      LICENSED MATERIALS - PROPERTY OF IBM                          * 01800000
.*                                                                    * 01850000
.*01*   STATUS = HBB2102                                              * 01900000
*                                                                     * 01950000
*01*    FUNCTION =                                                    * 02000000
*          Locates the unit control block (UCB) associated            * 02050000
*          with a device address.                                     * 02100000
*                                                                     * 02150000
*       MACRO CALL =                                                  * 02200000
.*         ASSEMBLER:                                                 * 02250000
*             LABEL  IOSLOOK DEV=(REG),UCB=(REG)                      * 02300000
*                                                                     * 02350000
.*         PLS:                                                       * 02400000
.*            ?LABEL: IOSLOOK  DEV(VARIABLE) UCB(VARIABLE)            * 02450000
.*                                                                    * 02500000
*       INPUT =                                                       * 02550000
*          Users of this macro must be in supervisor state            * 02600000
*                                                                     * 02650000
*          Register 13 must contain the address of a 16 word savearea.* 02700000
*                                                                     * 02750000
*          NOTE: This is not a standard savearea, registers 0-15      * 02800000
*                will be stored at the address passed in register 13. * 02850000
*                                                                     * 02900000
*          LABEL - Optional LABEL.                                    * 02950000
*                                                                     * 03000000
.*       ASSEMBLER:                                                   * 03050000
*          DEV=  May specify a GPR (symbolic or absolute) which       * 03100000
*                will contain the hexidecimal device address,         * 03150000
*                right justified.                                     * 03200000
*                If this parameter is omitted, register 6             * 03250000
*                is assumed.                                          * 03300000
*                                                                     * 03350000
*          UCB=  May specify a GPR (symbolic or absolute) in the      * 03400000
*                range of 0 - 12, which is to contain the address of  * 03450000
*                UCB common segment upon return to the caller.        * 03500000
*                If this parameter is omitted, register 7 is assumed. * 03550000
*                                                                     * 03600000
.*       PLS:                                                         * 03650000
.*           DEV  - May specify a variable which will contain the     * 03700000
.*                  hexidecimal device address, right justified.      * 03750000
.*                  If this parameter is omitted, register 6          * 03800000
.*                  is assumed.                                       * 03850000
.*                                                                    * 03900000
.*           UCB  - May specify a variable which is to contain the    * 03950000
.*                  the address of the UCB common segment upon        * 04000000
.*                  return to the caller.  If this register is        * 04050000
.*                  omitted, register 1 is assumed.                   * 04100000
.*                  Register 15 should not be used.                   * 04150000
.*                                                                    * 04200000
*01*    OUTPUT:                                                       * 04250000
*                                                                     * 04300000
*         Register 15 will contain one of the following return codes: * 04350000
*           00=  UCB address has been found                           * 04400000
*           04=  Device address was invalid or no UCB exists          * 04450000
*                                                                     * 04500000
*         UCB=  Contains the address of the UCB.                      * 04550000
*                                                                     * 04600000
.*        PLS - Register 1 is not restored.                           * 04650000
.*                                                                    * 04700000
*01*    ATTRIBUTES:                                                   * 04750000
*          This function is expanded as re-entrant code.              * 04800000
*                                                                     * 04850000
*01*    OTHER:                                                        * 04900000
*                                                                     * 04950000
*          The same register assignment can be used for               * 05000000
*          UCB= and DEV=                                              * 05050000
*                                                                     * 05100000
*          The expansion of this function is dependent on the         * 05150000
*          specification of the following mapping macros              * 05200000
*               CVT   DSECT=YES                                       * 05250000
*               IECDIOCM                                              * 05300000
.*              IHAPSA (necessary only in PLS)                        * 05350000
.*         The macro ?EPILOG must also be included for PLS.           * 05400000
*                                                                     * 05450000
*          The device address in the UCB returned as output from this * 05500000
*          service may change as a result of a DDR SWAP. The caller   * 05550000
*          should ensure that a SWAP has not taken place between      * 05600000
*          issuing this macro and the subsequent use of the UCB       * 05650000
*          address.                                                   * 05700000
*                                                                     * 05750000
*      CHANGE ACTIVITY -                                              * 05800000
*  A-000000-999999                                             @ZA41412 05850000
*                                                                     * 05900000
*  $MAC(IOSLOOK),COMP(SC1C3):                                         * 05950000
*                                                                     * 06000000
*  $L1=VERS   HBB3310 860416 PDLE: Versioning macro into product.  @L1A 06050000
*                                                                     * 06066600
*  $01=OY47085 JBB3313 910911 PDMC: Support for OY43794.           @01A 06083200
*********************************************************************** 06100000
         SPACE 2                                                        06150000
IECIUPRM EQU   1                   PARM REG                             06200000
IECIUDEV EQU   6                   DEVICE ADDRESS                       06250000
IECIUSAV EQU   13                  SAVE AREA PTR                        06300000
IECIURTN EQU   14                  RETURN ADDRESS                       06350000
IECIUR15 EQU   15                  BRANCH ADDR AND RETURN CODE          06400000
.LOOK010 ANOP                                                           06450000
&S       SETC  '&SYSNDX'(2,3)                 SET LAST 3 DIGITS         06500000
         SPACE 2                                                        06550000
&NAME    STM   0,15,0(IECIUSAV)               SAVE REGS                 06600000
         AIF   ('&DEV' EQ '' OR '&DEV' EQ '(6)').LOOK020 DEV IN R6      06650000
         LR    IECIUDEV,&DEV(1)               GET DEVICE ADDR           06700000
*                                             *FROM CALLER              06750000
.LOOK020 ANOP                                                           06800000
         L     IECIUR15,CVTPTR                GET CVTPTR                06850000
         L     IECIUR15,CVTIXAVL-CVTMAP(0,IECIUR15) GET IOCM PTR        06900000
         L     IECIUR15,IOCGENA-IOCOM(0,IECIUR15) GET IECVGENA PTR      06950000
         BAL   IECIURTN,12(0,IECIUR15)         CALL IECVGENA            07000000
         SPACE                                                          07050000
         ST    IECIUPRM,&UCB.*4(0,IECIUSAV)   SET UCB ADDR              07100000
*                                             IN SAVEAREA REGISTER      07150000
         SPACE                                                          07200000
IECIU&S  LM    0,14,0(IECIUSAV)               RESTORE REGS              07250000
*                                  *REG 15 CONTAINS RETURN CODE         07300000
*                                   PASSED BY GENA                      07350000
         MEND                                                           07400000
*        */                                                             07450000
*IOSLOOK:                                                               07500000
*   MACRO                                                               07550000
*   KEYS(DEV,UCB);                                                      07600000
*   /*    EXTERNAL VARIABLES                                         */ 07650000
*   DCL  EHAREGS    CHAR EXT;           /* REGS TO BE DCLD BY EPILOG */ 07700000
*   /*    INTERNAL VARIABLES                                         */ 07750000
*   DCL  INDENT     FIXED;              /* INDENT TWO COLUMNS        */ 07800000
*   DCL  IDENT      CHAR;               /* MACRO STATEMENT PARAMETERS*/ 07850000
*   DCL  IRFY1      CHAR;               /* USED TO RESPECIFY REG1 IF    07900000
*                                          UCB PARAMETER CODED       */ 07950000
*   /*    SET INITIAL VALUES                                         */ 08000000
*   INDENT=MACCOL+2;                                                    08050000
*   IDENT=' ?'||MACLABEL||MACNAME||MACLIST||' '||MACKEYS||' ';          08100000
*   IF UCB(1)^='' THEN                   /* UCB PARAM CODED?         */ 08150000
*      DO;                               /* YES                      */ 08200000
*        IRFY1=',GPR01P';                /* SET UP TO RFY REG1       */ 08250000
*        IF INDEX(EHAREGS,'01P')=0 THEN  /* ADD REG1 TO EHAREGS      */ 08300000
*           EHAREGS=EHAREGS||'01P';                                     08350000
*      END;                                                             08400000
*   /* CHECK TO SEE IF REGS ALREADY DCLD. IF NOT, ADD TO EHAREGS     */ 08450000
*   IF INDEX(EHAREGS,'00P')=0 THEN                                      08500000
*      EHAREGS=EHAREGS||'00P';                                          08550000
*   IF INDEX(EHAREGS,'02P')=0 THEN                                      08600000
*      EHAREGS=EHAREGS||'02P';                                          08650000
*   IF INDEX(EHAREGS,'06P')=0 THEN                                      08700000
*      EHAREGS=EHAREGS||'06P';                                          08750000
*   IF INDEX(EHAREGS,'13P')=0 THEN                                      08800000
*      EHAREGS=EHAREGS||'13P';                                          08850000
*   IF INDEX(EHAREGS,'14P')=0 THEN                                      08900000
*      EHAREGS=EHAREGS||'14P';                                          08950000
*   IF INDEX(EHAREGS,'15P')=0 THEN                                      09000000
*      EHAREGS=EHAREGS||'15P';                                          09050000
*   IF MACLABEL^='' THEN                                                09100000
*      ANS(MACLABEL)     COL(MACLMAR);       /* GENERATE MACRO LABEL */ 09150000
*   ANS('DO; '||COMMENT(IDENT))        COL(MACCOL);  /* BEGIN MACRO     09200000
*                                      AND LIST MACRO PARAMETERS    */  09250000
*   ANS(COMMENT('        IOSLOOK MACRO SYNTAX:      '))                 09300000
*         COL(2);                                                       09350000
*   ANS(COMMENT('?LABEL: IOSLOOK DEV(VARIABLE) UCB(VARIABLE)'))         09400000
*         COL(2);                                                       09450000
*   ANS(COMMENT('     DEV - IF THIS PARAMETER IS OMITTED, REGISTER 6 IS 09500000
*ASSUMED')) COL(2);                                                     09550000
*   ANS(COMMENT('     UCB - IF THIS PARAMETER IS OMITTED, REGISTER 1 IS 09600000
*ASSUMED')) COL(2);                                                     09650000
*   ANS(COMMENT('NOTE: REGISTER 13 MUST POINT TO A 16 WORD SAVEAREA.')) 09700000
*        COL(2);                                                        09750000
*   ANS(COMMENT('     THIS IS A NON-STANDARD SAVEAREA,  REGISTERS 0-15  09800000
*WILL ')) COL(2);                                                       09850000
*   ANS(COMMENT('     BE STORED AT THE ADDRESS PASSED IN REGISTER 13.') 09900000
*      ) COL(2);                                                        09950000
*   ANS(COMMENT('     ALSO, REGISTER 1 IS NOT RESTORED.')) COL(2);      10000000
*   ANS('RFY(GPR00P'||IRFY1||',GPR06P,GPR13P,GPR14P,GPR15P) RSTD; ')    10050000
*         COL(INDENT);                                                  10100000
*   ANS('STM(GPR00P,GPR15P,GPR13P->I256C); '||                          10150000
*         COMMENT('SAVE REGISTERS'))              COL(INDENT);          10200000
*   IF DEV(1)^='' THEN                                                  10250000
*      ANS('GPR06P='||DEV(1)||'; '||                                    10300000
*            COMMENT('REG6 = DEVICE ADDRESS'))    COL(INDENT);          10350000
*   ANS('GPR15P=FLCCVT->CVTIXAVL->IOCGENA; '||                          10400000
*         COMMENT('GET IECVGENA ENTRY POINT'))    COL(INDENT);          10450000
*   ANS('GEN (BAL   GPR14P,12(0,GPR15P)); '||                           10500000
*       COMMENT('BRANCH TO IOSLOOK ENTRY POINT OF GENA'))               10550000
*                                                 COL(INDENT);          10600000
*   ANS('LM(GPR02P,GPR14P,(GPR13P+8)->I256C); '||                       10650000
*         COMMENT('RESTORE REGS 2-14. REGISTER 15 CONTAINS RETURN CODE  10700000
* PASSED BY GENA. NOTE: REGISTER 1 NOT RESTORED')) COL(INDENT);         10750000
*   ANS('GPR00P=GPR13P->I031F; '||                                      10800000
*         COMMENT('RESTORE REG0 FROM SAVEAREA'))  COL(INDENT);          10850000
*   IF UCB(1)^='' THEN                                                  10900000
*      DO;                                                              10950000
*         ANS(UCB(1)||'=GPR01P; '||                                     11000000
*         COMMENT('PUT UCB ADDRESS IN UCB VARIABLE'))                   11050000
*                                                 COL(INDENT+2);        11100000
*      END;                                                             11150000
*   ANS('RFY(GPR00P'||IRFY1||',GPR06P,GPR13P,GPR14P,GPR15P) UNRSTD; ')  11200000
*         COL(INDENT);                                                  11250000
*   ANS('END; '||COMMENT(IDENT))   COL(MACCOL);   /* END MACRO       */ 11300000
*%END IOSLOOK;                                                          11350000
