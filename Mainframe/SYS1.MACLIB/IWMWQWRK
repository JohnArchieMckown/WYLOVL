*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMWQWRK                              -11/04/93-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Work Manager Query Work Service           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1993                           * 00001300
*     SEE COPYRIGHT INSTRUCTIONS                                      * 00001400
*                                                                     * 00001500
* STATUS= HBB5510                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*                                                                     * 00002200
*      The Work Manager Query Work routine is given control from the  * 00002300
*      IWMWQWRK macro.  The query work macro will complete the        * 00002400
*      parameter list with caller provided data and generate a        * 00002500
*      stacking, non-space switching, program call to the query work  * 00002600
*      service.                                                       * 00002700
*                                                                     * 00002800
*      The purpose of this routine is to provide information which    * 00002900
*      would aid work managers in identifying where work related to   * 00003000
*      such a work manager may be executing.                          * 00003100
*                                                                     * 00003200
*      One form of this query allows a caller to obtain the LU 6.2    * 00003300
*      token(s) for all ongoing work requests reflected in monitoring * 00003400
*      environments associated with the input connect token (this     * 00003500
*      association is made via IWMMCREA SUBSYSP = CONNECT,            * 00003600
*      CONNTKN=...).  Only monitoring environments owned by the       * 00003700
*      current home address space are interrogated.  The connect      * 00003800
*      token passed to query must be owned by the current home        * 00003900
*      address space.                                                 * 00004000
*                                                                     * 00004100
*      Another form of this query will accept a list of LU 6.2 tokens * 00004200
*      previously returned by IWMWQWRK SEARCH_BY=CONNTKN and return a * 00004300
*      list of ASIDs and/or STOKENs  which represent owners of one or * 00004400
*      more monitoring environments initialized (via IWMMINIT) with   * 00004500
*      any of the LU 6.2 tokens in the list.  Monitoring environments * 00004600
*      owned by an address space which are related (via IWMMRELA) to  * 00004700
*      other environments are not interrogated.                       * 00004800
*                                                                     * 00004900
*      In either case, the information returned is not serialized     * 00005000
*      upon return to the caller, and so may be out-of-date due to    * 00005100
*      changes in the work requests.                                  * 00005200
*                                                                     * 00005300
*      The Work Manager Query Work macro is provided in list,         * 00005400
*      execute, and standard form.  The list form accepts no variable * 00005500
*      parameters and is used only to reserve space for the parameter * 00005600
*      list.  The standard form is provided for use with routines     * 00005700
*      which do not require reentrant code.  The execute form is      * 00005800
*      provided for use with the list format for reentrant routines.  * 00005900
*      The Query macro is provided in PL/AS and assembler formats.    * 00006000
*                                                                     * 00006100
*      The parameter list must be in the caller's primary address     * 00006200
*      space.                                                         * 00006300
*                                                                     * 00006400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006500
*                                                                     * 00006600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006700
*                                                                     * 00006800
*01* ENVIRONMENT:                                                     * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*      Dispatchable unit mode: Task or SRB mode.                      * 00007200
*                                                                     * 00007300
*      Minimum authorization: Either supervisor state or problem      * 00007400
*                        state, any PSW key.                          * 00007500
*                                                                     * 00007600
*      AMODE:            31-bit.                                      * 00007700
*                                                                     * 00007800
*      ASC mode:         Primary.  See restrictions below.            * 00007900
*                                                                     * 00008000
*      Serialization:    Enabled.  Unlocked. FRRs are allowed.        * 00008100
*                                                                     * 00008200
*      Restrictions:                                                  * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*                        1.  This macro may not be used prior to the  * 00008600
*                            completion of WLM address space          * 00008700
*                            initialization                           * 00008800
*                                                                     * 00008900
*                        2.  All parameter areas must reside in       * 00009000
*                            current primary.                         * 00009100
*                                                                     * 00009200
*                        3.  For SEARCH_BY=CONNTKN, if the current    * 00009300
*                            home address space owns any monitoring   * 00009400
*                            environments established in a user key   * 00009500
*                            (8-F) , then the caller must be in       * 00009600
*                            non-cross-memory mode (P=S=H)            * 00009700
*                                                                     * 00009800
*                        4.  For SEARCH_BY=LU62TKN, if the LU 6.2     * 00009900
*                            token in the monitoring environment does * 00010000
*                            not have a LU name, then it is skipped   * 00010100
*                            when determining if the address space    * 00010200
*                            have any monitoring environment that     * 00010300
*                            contains a LU 6.2 token that match any   * 00010400
*                            of the LU 6.2 tokens in the passed input * 00010500
*                            list.                                    * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00011200
*                      GR2-GR13    Undefined                          * 00011300
*                      GR14-GR15   Reserved                           * 00011400
*                      AR0-AR1     Reserved                           * 00011500
*                      AR2-AR13    Undefined                          * 00011600
*                      AR14-AR15   Reserved                           * 00011700
*                                                                     * 00011800
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00011900
*                                  non-zero                           * 00012000
*                      GR1         Used as a work register by the     * 00012100
*                                  macro                              * 00012200
*                      GR2-GR13    Unchanged                          * 00012300
*                      GR14        Used as a work register by the     * 00012400
*                                  macro                              * 00012500
*                      GR15        Return code                        * 00012600
*                      AR0-AR1     Used as a work register by the     * 00012700
*                                  macro                              * 00012800
*                      AR2-AR13    Unchanged                          * 00012900
*                      AR14-AR15   Used as a work register by the     * 00013000
*                                  macro                              * 00013100
*                                                                     * 00013200
*01* SYNTAX:                                                          * 00013300
*                                                                     * 00013400
*[xlabel]  IWMWQWRK    SEARCH_BY=CONNTKN                             * 00013500
*                    |     ,CONNTKN=xconntkn                          * 00013600
*                    |    [,LU62_LIST=xlu62_list|NO_LU62_LIST       * 00013700
*                    |         ,LU62_LISTSIZE                         * 00013800
*                    |                        =xlu62_listsize]        * 00013900
*                    |     ,QUERYLEN=xquerylen                        * 00014000
*                     ,SEARCH_BY=LU62TKN                             * 00014100
*                         [,SUBSYS=xsubsys|NO_SUBSYS]               * 00014200
*                         [,SUBSYSNM=xsubsysnm|NO_SUBSYSNM]         * 00014300
*                          ,LU62_LIST=xlu62_list                      * 00014400
*                              ,LU62_LISTSIZE                         * 00014500
*                                             =xlu62_listsize         * 00014600
*                         [,ASID_LIST=xasid_list|NO_ASID_LIST       * 00014700
*                              ,ASID_LISTSIZE                         * 00014800
*                                             =xasid_listsize         * 00014900
*                              ,ASID_SIZENEED                         * 00015000
*                                             =xasid_sizeneed]        * 00015100
*                         [,STOKEN_LIST=xstoken_list|NO_STOKEN_LIST * 00015200
*                              ,STKN_LISTSIZE                         * 00015300
*                                             =xstkn_listsize         * 00015400
*                              ,STKN_SIZENEED                         * 00015500
*                                             =xstkn_sizeneed]        * 00015600
*                         [,SKIP_REGIONS=xskip_regions]               * 00015700
*                     [,RETCODE=xretcode]                             * 00015800
*                     [,RSNCODE=xrsncode]                             * 00015900
*                    [,MF=S]                                         * 00016000
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00016100
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*      Where:                                                         * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      [xlabel]                                                       * 00016800
*          is an optional symbol, starting in column 1, that is the   * 00016900
*          name on the IWMWQWRK macro invocation.  The name must      * 00017000
*          conform to the rules for an ordinary assembler language    * 00017100
*          symbol.                                                    * 00017200
*          DEFAULT: No name.                                          * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      SEARCH_BY=CONNTKN|LU62TKN                                    * 00017800
*          is a required keyword input which indicates the type of    * 00017900
*          search argument being passed.                              * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*          SEARCH_BY=CONNTKN                                          * 00018300
*              indicates that information about work associated with  * 00018400
*              the input connect token should be returned.  The       * 00018500
*              information returned is a list of LU 6.2 tokens, when  * 00018600
*              requested, as described by LU62_LIST (plus a return    * 00018700
*              code).                                                 * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*              CONNTKN=xconntkn                                       * 00019100
*                  is the name (RS-type), or address in register      * 00019200
*                  (2)-(12), of a required 32 bit input which is      * 00019300
*                  returned by IWMCONN for use in work manager        * 00019400
*                  services.  The connect token must be owned by the  * 00019500
*                  current home address space.                        * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*              [LU62_LIST=xlu62_list|NO_LU62_LIST                   * 00020100
*                  is the name (RS-type), or address in register      * 00020200
*                  (2)-(12), of an optional character input/output    * 00020300
*                  specifying an area for the list of LU 6.2 tokens.  * 00020400
*                  DEFAULT: NO_LU62_LIST indicates that no list area  * 00020500
*                  is provided.                                       * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                  LU62_LISTSIZE=xlu62_listsize]                      * 00020900
*                      is the name (RS-type), or address in register  * 00021000
*                      (2)-(12), of a required fullword input         * 00021100
*                      variable which contains the length of the area * 00021200
*                      provided to contain the LU62 tokens being      * 00021300
*                      returned by IWMWQWRK.                          * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*              QUERYLEN=xquerylen                                     * 00022100
*                  is the name (RS-type), or address in register      * 00022200
*                  (2)-(12), of a required fullword output variable   * 00022300
*                  which contains the number of bytes needed to       * 00022400
*                  contain the information for the input connect      * 00022500
*                  token.                                             * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*          SEARCH_BY=LU62TKN                                          * 00023000
*              indicates that information about work associated with  * 00023100
*              the input list of LU 6.2 tokens should be returned.    * 00023200
*              The input list is described by the LU62_LIST and       * 00023300
*              LU62_LISTSIZE keywords, and must be the output of a    * 00023400
*              prior invocation of IWMWQWRK SEARCH_BY=CONNTKN.        * 00023500
*                                                                     * 00023600
*              When the return code is IwmRetcodeOK, the information  * 00023700
*              returned is a list of ASIDs and/or STOKENs known to be * 00023800
*              associated with any work requests represented by some  * 00023900
*              LU 6.2 token in the list.  Due to internal             * 00024000
*              considerations, some address spaces may not have been  * 00024100
*              interrogated which could have been involved in some    * 00024200
*              work request.  Any such ASID/STOKEN is omitted from    * 00024300
*              the list, but counted in the variable for              * 00024400
*              SKIP_REGIONS.  For any return code other than          * 00024500
*              IwmRetcodeOk no ASIDs/STOKENs are returned.            * 00024600
*                                                                     * 00024700
*              The two byte sequence number within the LU 6.2 token   * 00024800
*              is ignored in making any comparison.  Only monitoring  * 00024900
*              environments which have been initialized via IWMMINIT  * 00025000
*              will be interrogated.                                  * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*              [SUBSYS=xsubsys|NO_SUBSYS]                           * 00025400
*                  is the name (RS-type), or address in register      * 00025500
*                  (2)-(12), of an optional 4 character input which   * 00025600
*                  contains the generic subsystem type (e.g. IMS,     * 00025700
*                  CICS, etc.).  This keyword is used to further      * 00025800
*                  reduce the set of monitoring environments          * 00025900
*                  interrogated for a matching LU 6.2 token to those  * 00026000
*                  which are associated with the input subsystem      * 00026100
*                  type.                                              * 00026200
*                  DEFAULT: NO_SUBSYS indicates that no subsystem     * 00026300
*                  qualification is desired.                          * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*              [SUBSYSNM=xsubsysnm|NO_SUBSYSNM]                     * 00026900
*                  is the name (RS-type), or address in register      * 00027000
*                  (2)-(12), of an optional 8 character input which   * 00027100
*                  contains the subsystem name (subsystem instance).  * 00027200
*                  This keyword is used to reduce the set of          * 00027300
*                  monitoring environments interrogated for a         * 00027400
*                  matching LU 6.2 token to those which are           * 00027500
*                  associated with the input subsystem name/instance. * 00027600
*                  DEFAULT: NO_SUBSYSNM indicates that no subsystem   * 00027700
*                  instance qualification is desired.                 * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*              LU62_LIST=xlu62_list                                   * 00028300
*                  is the name (RS-type), or address in register      * 00028400
*                  (2)-(12), of a required character input specifying * 00028500
*                  an area for the list of LU 6.2 tokens.             * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                  LU62_LISTSIZE=xlu62_listsize                       * 00028900
*                      is the name (RS-type), or address in register  * 00029000
*                      (2)-(12), of a required fullword input         * 00029100
*                      variable which contains the length of the area * 00029200
*                      containing the input LU62 tokens.              * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*              [ASID_LIST=xasid_list|NO_ASID_LIST                   * 00030000
*                  is the name (RS-type), or address in register      * 00030100
*                  (2)-(12), of an optional character input/output    * 00030200
*                  specifying an area for the list of ASIDs.  Only    * 00030300
*                  ASIDs for regions known to be involved in some     * 00030400
*                  work request are returned.  Regions which could    * 00030500
*                  not be interrogated are only reflected in the      * 00030600
*                  SKIP_REGIONS variable.                             * 00030700
*                  DEFAULT: NO_ASID_LIST indicates that no list area  * 00030800
*                  is provided.                                       * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                  ASID_LISTSIZE=xasid_listsize                       * 00031200
*                      is the name (RS-type), or address in register  * 00031300
*                      (2)-(12), of a required fullword input         * 00031400
*                      variable which contains the length of the area * 00031500
*                      provided to contain the ASIDs being returned   * 00031600
*                      by IWMWQWRK.                                   * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                  ASID_SIZENEED=xasid_sizeneed]                      * 00032200
*                      is the name (RS-type), or address in register  * 00032300
*                      (2)-(12), of a required fullword output        * 00032400
*                      variable which contains the number of bytes    * 00032500
*                      needed for the output list of ASIDs.           * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*              [STOKEN_LIST=xstoken_list|NO_STOKEN_LIST             * 00033300
*                  is the name (RS-type), or address in register      * 00033400
*                  (2)-(12), of an optional character input/output    * 00033500
*                  specifying an area for the list of STOKENs.  Only  * 00033600
*                  STOKENs for regions known to be involved in some   * 00033700
*                  work request are returned.  Regions which could    * 00033800
*                  not be interrogated are only reflected in the      * 00033900
*                  SKIP_REGIONS variable.                             * 00034000
*                  DEFAULT: NO_STOKEN_LIST indicates that no list     * 00034100
*                  area is provided.                                  * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                  STKN_LISTSIZE=xstkn_listsize                       * 00034500
*                      is the name (RS-type), or address in register  * 00034600
*                      (2)-(12), of a required fullword input         * 00034700
*                      variable which contains the length of the area * 00034800
*                      provided to contain the STOKENs being returned * 00034900
*                      by IWMWQWRK.                                   * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                  STKN_SIZENEED=xstkn_sizeneed]                      * 00035500
*                      is the name (RS-type), or address in register  * 00035600
*                      (2)-(12), of a required fullword output        * 00035700
*                      variable which contains the number of bytes    * 00035800
*                      needed for the output list of STOKENs.         * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*              [SKIP_REGIONS=xskip_regions]                           * 00036600
*                  is the name (RS-type), or address in register      * 00036700
*                  (2)-(12), of an optional fullword output variable  * 00036800
*                  which contains the number of address spaces        * 00036900
*                  skipped and therefore not included in the output   * 00037000
*                  list of ASIDs/STOKENs.  Note that ASID_SIZENEED    * 00037100
*                  and STKN_SIZENEED are unrelated to this value.  If * 00037200
*                  the calling program wants to reinvoke IWMWQWRK     * 00037300
*                  when SKIP_REGIONS is non-zero, it may be desirable * 00037400
*                  to ensure that ASID_SIZENEED + 2*SKIP_REGIONS <=   * 00037500
*                  ASID_LISTSIZE, AND that STKN_SIZENEED +            * 00037600
*                  8*SKIP_REGIONS <= STKN_LISTSIZE when these output  * 00037700
*                  areas are passed.                                  * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*      [RETCODE=xretcode]                                             * 00038700
*          is the name (RS-type) of an optional fullword output       * 00038800
*          variable, or register (2)-(12), into which the return code * 00038900
*          is to be copied from GPR 15.                               * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*      [RSNCODE=xrsncode]                                             * 00039500
*          is the name (RS-type) of an optional fullword output       * 00039600
*          variable, or register (2)-(12), into which the reason code * 00039700
*          is to be copied from GPR 0.                                * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*      [MF=S|L|E]                                                   * 00040300
*          is an optional keyword input which specifies the macro     * 00040400
*          form.                                                      * 00040500
*          DEFAULT: S                                                 * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*          [MF=S]                                                     * 00040900
*              specifies the standard form of the macro.  The "S"     * 00041000
*              form generates code to put the parameters into an      * 00041100
*              in-line parameter list and invoke the desired service. * 00041200
*              Full checking for required macro keys is done along    * 00041300
*              with supplying defaults for omitted optional           * 00041400
*              parameters.                                            * 00041500
*                                                                     * 00041600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00041700
*              specifies the list form of the macro.  The "L" form    * 00041800
*              defines an area to be used for the parameter list.     * 00041900
*              Any other macro parameters are flagged as errors.      * 00042000
*                                                                     * 00042100
*            ,xmfctrl                                                 * 00042200
*              is a required input.  It is the name of a storage area * 00042300
*              for the parameter list.                                * 00042400
*                                                                     * 00042500
*            ,xmfattr|0D                                            * 00042600
*              is an optional 60 character input string that varies   * 00042700
*              from 1 to 60 characters. It can contain any value that * 00042800
*              is valid on an assembler DS pseudo-op. You can use     * 00042900
*              this parameter to force boundary alignment of the      * 00043000
*              parameter list.                                        * 00043100
*              DEFAULT: 0D which forces the parameter list to a       * 00043200
*              doubleword boundary.                                   * 00043300
*                                                                     * 00043400
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00043500
*              specifies the execute form of the macro.  The "E" form * 00043600
*              generates code to put the parameters into the          * 00043700
*              parameter list specified by xmfctrl and provides full  * 00043800
*              syntax checking with default setting.                  * 00043900
*                                                                     * 00044000
*            ,xmfctrl                                                 * 00044100
*              is a required input.  It is the name (RS-type), or     * 00044200
*              address in register (1)-(12), of a storage area for    * 00044300
*              the parameter list.                                    * 00044400
*                                                                     * 00044500
*            ,COMPLETE                                              * 00044600
*              is an optional keyword input which specifies the       * 00044700
*              degree of macro parameter syntax checking.             * 00044800
*              DEFAULT: COMPLETE                                      * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*              COMPLETE   Checking for required macro keys is done    * 00045200
*                        and defaults are supplied for omitted        * 00045300
*                        optional parameters.                         * 00045400
*                                                                     * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*01* RETURN CODES:                                                    * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*            0    IwmRetCodeOk:  Successful completion. All requested * 00046500
*                 data returned.  For SEARCH_BY=LU62TKN, when         * 00046600
*                 SKIP_REGIONS>0, some address spaces have been       * 00046700
*                 skipped, but these are not included in the output   * 00046800
*                 ASIDs/STOKENs.                                      * 00046900
*                                                                     * 00047000
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00047100
*                 conditions noted.                                   * 00047200
*                                                                     * 00047300
*                 HEX REASON   MEANING                                * 00047400
*                 CODE                                                * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*                 xxxx0401    IwmRsnCodeNoWLM:  System does not       * 00047800
*                             support work manager services.  The     * 00047900
*                             Query output area has not been          * 00048000
*                             modified.  This return code is only set * 00048100
*                             when the MVS release is prior to        * 00048200
*                             MVS/ESA SP5.1.0.                        * 00048300
*                                                                     * 00048400
*                 xxxx0408    IwmRsnCodeWorkNotFound:  No work        * 00048500
*                             matching the input search arguments was * 00048600
*                             found.                                  * 00048700
*                                                                     * 00048800
*                 xxxx0409    IwmRsnCodeNoConn:  Input connection     * 00048900
*                             token does not reflect an active        * 00049000
*                             connection to WLM.                      * 00049100
*                                                                     * 00049200
*                 xxxx040A    IwmRsnCodeOutputAreaTooSmall:  The      * 00049300
*                             output area supplied is too small to    * 00049400
*                             receive all the available information.  * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00050000
*                 environment or parameters                           * 00050100
*                                                                     * 00050200
*                 HEX REASON  MEANING                                 * 00050300
*                 CODE                                                * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                 xxxx0802    IwmRsnCodeXmemUserKeyTkn:  Caller is in * 00050700
*                             cross-memory mode while some monitoring * 00050800
*                             environments were in user key.          * 00050900
*                                                                     * 00051000
*                 xxxx0803    IwmRsnCodeDisabled:  Caller is          * 00051100
*                             disabled.                               * 00051200
*                                                                     * 00051300
*                 xxxx0804    IwmRsnCodeLocked:  Caller is locked.    * 00051400
*                                                                     * 00051500
*                 xxxx080B    IwmRsnCodeBadPl:  Error accessing       * 00051600
*                             parameter list.                         * 00051700
*                                                                     * 00051800
*                 xxxx0823    IwmRsnCodeDatoff:  Caller invoked       * 00051900
*                             service while DATOFF                    * 00052000
*                                                                     * 00052100
*                 xxxx0824    IwmRsnCodeAmode24:  Caller invoked      * 00052200
*                             service but was in 24 bit addressing    * 00052300
*                             mode.                                   * 00052400
*                                                                     * 00052500
*                 xxxx0825    IwmRsnCodeAscModeNotPrimary:  Caller    * 00052600
*                             invoked service but was not in Primary  * 00052700
*                             ASC mode.                               * 00052800
*                                                                     * 00052900
*                 xxxx0827    IwmRsnCodeRsvdNot0:  Reserved field in  * 00053000
*                             parameter list was non-zero.            * 00053100
*                                                                     * 00053200
*                 xxxx0828    IwmRsnCodeBadVersion:  Version number   * 00053300
*                             in parameter list is not valid.         * 00053400
*                                                                     * 00053500
*                 xxxx0829    IwmRsnCodeBadOptions:  Parameter list   * 00053600
*                             omits required parameters or supplies   * 00053700
*                             mutually exclusive parameters or        * 00053800
*                             provides data associated with options   * 00053900
*                             not selected.                           * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                 HEX REASON   MEANING                                * 00054500
*                 CODE                                                * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*                 xxxx0C01    IwmRsnCodeNoStg:  Storage is not        * 00054900
*                             available for the request.              * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*            10   IwmRetCodeCompError:  Component error               * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*                                                                     * 00055800
*                                                                     * 00055900
*01* REASON CODES:                                                    * 00056000
*                                                                     * 00056100
*       A unique reason code will be returned whenever the return     * 00056200
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00056300
*       under their corresponding return code.  Reason code and       * 00056400
*       return code constants are defined within IWMYCON.  Note that  * 00056500
*       the high order halfword of register 0, and the reason code    * 00056600
*       variable when specified, may be non-zero and represents       * 00056700
*       diagnostic data which is NOT part of the external interface.  * 00056800
*       The high order halfword should thus be excluded from          * 00056900
*       comparison with the reason code values described above.  The  * 00057000
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00057100
*       used for this purpose.                                        * 00057200
*                                                                     * 00057300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00057400
*                                                                     * 00057500
*02*   PROCESSOR:  ASSEM                                              * 00057600
*                                                                     * 00057700
*01* COMPONENT:  SCWLM                                                * 00057800
*                                                                     * 00057900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00058000
*                                                                     * 00058100
*01* MACRO USAGE NOTES:                                               * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00058500
*        global macro variable.  Any value other than 'NO' will       * 00058600
*        result in the macro expansion being printed.  The default is * 00058700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00058800
*        variable should be set.                                      * 00058900
*                                                                     * 00059000
*                    GBLC &ZPRINT                                     * 00059100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00059200
*                                                                     * 00059300
*    2.  The macro CVT must be included to use this macro.            * 00059400
*                                                                     * 00059500
*    3.  This  macro  may  only  be  used  on  MVS/ESA  (version 3 or * 00059600
*        higher), NOT versions 1 or 2 of MVS.                         * 00059700
*                                                                     * 00059800
*    4.  The macro IWMYCON must be included to use this macro.        * 00059900
*                                                                     * 00060000
*    5.  The  macro IWMPB must be in the library concatenation, since * 00060100
*        it is included by IWMYCON.                                   * 00060200
*                                                                     * 00060300
*    6.  Note  that  the  high  order halfword of register 0, and the * 00060400
*        reason  code  variable  when  specified, may be non-zero and * 00060500
*        represents diagnostic data which is NOT part of the external * 00060600
*        interface.   The high order halfword should thus be excluded * 00060700
*        from comparison with the reason code values described above. * 00060800
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00060900
*        be used for this purpose.                                    * 00061000
*                                                                     * 00061100
*    7.  The  PL/AS version of the macro needs the EPILOG macro to be * 00061200
*        included.                                                    * 00061300
*                                                                     * 00061400
*                                                                     * 00061500
*                                                                     * 00061600
*01* CHANGE ACTIVITY:                                                 * 00061700
*                                                                     * 00061800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00061900
*                                                                     * 00062000
*    $L0=WLMI     HBB5510 920430 PD16:  Workload Manager I            * 00062100
****** END OF SPECIFICATIONS *****************************************/ 00062200
*/********************************************************************* 00062300
         MACRO                                                          00062400
&XLABEL  IWMWQWRK &SEARCH_BY=,&CONNTKN=,&LU62_LIST=,&LU62_LISTSIZE=,   *00062500
               &QUERYLEN=,&SUBSYS=,&SUBSYSNM=,&ASID_LIST=,             *00062600
               &ASID_LISTSIZE=,&ASID_SIZENEED=,&STOKEN_LIST=,          *00062700
               &STKN_LISTSIZE=,&STKN_SIZENEED=,&SKIP_REGIONS=,         *00062800
               &RETCODE=,&RSNCODE=,&MF=                                 00062900
.*                                                                      00063000
*                   MACDATE -11/04/93-<0>                               00063100
.*                                                                      00063200
.*******************************************************************    00063300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00063400
.*******************************************************************    00063500
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00063600
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00063700
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00063800
.*                                                                      00063900
                   GBLC  &ZIWMWQWRK  YES=MACRO USED AT LEAST ONCE       00064000
.*******************************************************************    00064100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00064200
.*******************************************************************    00064300
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00064400
                   LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS       00064500
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00064600
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00064700
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00064800
                   LCLA  &ZAWRK      USED AS A WORK AREA                00064900
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00065000
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00065100
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00065200
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00065300
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00065400
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00065500
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00065600
.*                                                                      00065700
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00065800
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00065900
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00066000
.********************************************************************   00066100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00066200
.********************************************************************   00066300
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00066400
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00066500
.*                                                                      00066600
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00066700
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00066800
                   SPLEVEL  TEST                                        00066900
.ZSYS2             ANOP  ,                                              00067000
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00067100
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00067200
                   SYSSTATE TEST                                        00067300
                   AGO   .ZSYS4                                         00067400
.ZSYS3             ANOP  ,                                              00067500
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00067600
.ZSYS4             ANOP  ,                                              00067700
.*******************************************************************    00067800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00067900
.*******************************************************************    00068000
                   LCLC  &XSEARCH_BY            ++ VALUE                00068100
                   LCLC  &XCONNTKN   ++ NAME                            00068200
                   LCLC  &XLU62_LIST            ++ NAME                 00068300
                   LCLC  &XLU62_LISTSIZE        ++ NAME                 00068400
                   LCLC  &XQUERYLEN  ++ NAME                            00068500
                   LCLC  &XSUBSYS    ++ NAME                            00068600
                   LCLC  &XSUBSYSNM  ++ NAME                            00068700
                   LCLC  &XASID_LIST            ++ NAME                 00068800
                   LCLC  &XASID_LISTSIZE        ++ NAME                 00068900
                   LCLC  &XASID_SIZENEED        ++ NAME                 00069000
                   LCLC  &XSTOKEN_LIST          ++ NAME                 00069100
                   LCLC  &XSTKN_LISTSIZE        ++ NAME                 00069200
                   LCLC  &XSTKN_SIZENEED        ++ NAME                 00069300
                   LCLC  &XSKIP_REGIONS         ++ NAME                 00069400
                   LCLC  &XRETCODE   ++ NAME                            00069500
                   LCLC  &XRSNCODE   ++ NAME                            00069600
                   LCLC  &XMF        ++ VALUE                           00069700
                   LCLC  &XMFCTRL    ++ NAME                            00069800
                   LCLC  &XMFATTR    ++ VALUE                           00069900
                   LCLC  &XMFSCK     ++ VALUE                           00070000
.*******************************************************************    00070100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00070200
.*******************************************************************    00070300
                   LCLC  &ZXSEARCH_BY           ++ INPUT VALUE          00070400
                   LCLC  &ZXCONNTKN  ++ INPUT NAME                      00070500
                   LCLC  &ZXLU62_LIST           ++ INOUT NAME           00070600
                   LCLC  &ZXLU62_LISTSIZE       ++ INPUT NAME           00070700
                   LCLC  &ZXQUERYLEN            ++ OUTPUT NAME          00070800
                   LCLC  &ZXSUBSYS   ++ INPUT NAME                      00070900
                   LCLC  &ZXSUBSYSNM            ++ INPUT NAME           00071000
                   LCLC  &ZXASID_LIST           ++ INOUT NAME           00071100
                   LCLC  &ZXASID_LISTSIZE       ++ INPUT NAME           00071200
                   LCLC  &ZXASID_SIZENEED       ++ OUTPUT NAME          00071300
                   LCLC  &ZXSTOKEN_LIST         ++ INOUT NAME           00071400
                   LCLC  &ZXSTKN_LISTSIZE       ++ INPUT NAME           00071500
                   LCLC  &ZXSTKN_SIZENEED       ++ OUTPUT NAME          00071600
                   LCLC  &ZXSKIP_REGIONS        ++ OUTPUT NAME          00071700
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00071800
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00071900
                   LCLC  &ZXMF       ++ INPUT VALUE                     00072000
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00072100
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00072200
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00072300
.********************************************************************   00072400
.***AG.MF01 PROCESS MF MACRO FORMS                                      00072500
.********************************************************************   00072600
                   ACTR  10000                                          00072700
.*------------------------------------------------------------------    00072800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00072900
&XMF               SETC  ''          INITIALIZE XVARIABLE               00073000
.*-------------------------------------------------------------------   00073100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073200
.ZG59              ANOP  ,                                              00073300
&ZTLC              SETC 'S'                                             00073400
                   AIF   ('&MF(1)' NE '&ZTLC').ZG60                     00073500
&XMF               SETC  'S'         SET KEYWORD                        00073600
                   AIF   (N'&MF LE 1).ZG59A     CK NUM                  00073700
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00073800
&ZMS               SETC  '&ZMS.&MF"'                                    00073900
&ZMS               SETC  '&ZMS "MF"'                                    00074000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00074100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00074200
.ZG59A             ANOP  ,                                              00074300
.*-------------------------------------------------------------------   00074400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074500
.ZG60              ANOP  ,                                              00074600
&ZTLC              SETC 'L'                                             00074700
                   AIF   ('&MF(1)' NE '&ZTLC').ZG67                     00074800
&XMF               SETC  'L'         SET KEYWORD                        00074900
                   AIF   (N'&MF LE 3).ZG60A     CK NUM                  00075000
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00075100
&ZMS               SETC  '&ZMS.&MF"'                                    00075200
&ZMS               SETC  '&ZMS "MF"'                                    00075300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00075400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00075500
.ZG60A             ANOP  ,                                              00075600
.*-------------------------------------------------------------------   00075700
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00075800
                   AIF   (N'&SYSLIST NE 0).ZG60B  POSITIONALS?          00075900
                   AIF   ('&SEARCH_BY' NE '').ZG60B  KEYS?              00076000
                   AIF   ('&CONNTKN' NE '').ZG60B  KEYS?                00076100
                   AIF   ('&LU62_LIST' NE '').ZG60B  KEYS?              00076200
                   AIF   ('&LU62_LISTSIZE' NE '').ZG60B  KEYS?          00076300
                   AIF   ('&QUERYLEN' NE '').ZG60B  KEYS?               00076400
                   AIF   ('&SUBSYS' NE '').ZG60B  KEYS?                 00076500
                   AIF   ('&SUBSYSNM' NE '').ZG60B  KEYS?               00076600
                   AIF   ('&ASID_LIST' NE '').ZG60B  KEYS?              00076700
                   AIF   ('&ASID_LISTSIZE' NE '').ZG60B  KEYS?          00076800
                   AIF   ('&ASID_SIZENEED' NE '').ZG60B  KEYS?          00076900
                   AIF   ('&STOKEN_LIST' NE '').ZG60B  KEYS?            00077000
                   AIF   ('&STKN_LISTSIZE' NE '').ZG60B  KEYS?          00077100
                   AIF   ('&STKN_SIZENEED' NE '').ZG60B  KEYS?          00077200
                   AIF   ('&SKIP_REGIONS' NE '').ZG60B  KEYS?           00077300
                   AIF   ('&RETCODE' NE '').ZG60B  KEYS?                00077400
                   AIF   ('&RSNCODE' NE '').ZG60B  KEYS?                00077500
                   AGO    .ZG60C     INVOCATION OKAY                    00077600
.ZG60B             ANOP  ,                                              00077700
&ZMS               SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE    00077800
&ZMS               SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'              00077900
&ZMS               SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'         00078000
                   MNOTE 8,' &ZMS ON THE INVOCATION.'                   00078100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00078200
.ZG60C             ANOP  ,                                              00078300
.*-------------------------------------------------------------------   00078400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00078500
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00078600
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00078700
                   AIF   (N'&MF(2) GT 1).ZG62B  MULTI PARMS             00078800
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00078900
.ZG62B             AIF   (K'&MF(2) GT 0).ZG62C                          00079000
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00079100
&ZMS               SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*               00079200
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00079300
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00079400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00079500
.ZG62C             ANOP  ,                                              00079600
.*-------------------------------------------------------------------   00079700
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00079800
                   AIF   (K'&ZXMFCTRL LE 0).ZG62P  NOT I/O              00079900
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG62P                 00080000
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00080100
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00080200
&ZMS               SETC  '&ZMS.&MF"'                                    00080300
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00080400
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00080500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00080600
.ZG62P             ANOP  ,                                              00080700
.*-------------------------------------------------------------------   00080800
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00080900
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00081000
&XMFATTR           SETC  '0D'                                           00081100
                   AIF   (K'&MF(3) LE 0).ZG65B  PARM                    00081200
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00081300
                   AIF   (N'&MF(3) GT 1).ZG65B  MULTI PARMS             00081400
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00081500
.ZG65B             ANOP  ,                                              00081600
.*-------------------------------------------------------------------   00081700
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00081800
                   AIF   (K'&ZXMFATTR LE 0).ZG65P  NOT I/O              00081900
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG65P                 00082000
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00082100
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00082200
&ZMS               SETC  '&ZMS.&MF"'                                    00082300
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00082400
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00082500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00082600
.ZG65P             ANOP  ,                                              00082700
.*-------------------------------------------------------------------   00082800
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00082900
                   AIF   (K'&ZXMFATTR LE 0).ZG65S  NOT I/O              00083000
                   AIF   (K'&XMFATTR LE 60).ZG65S  LNG OK               00083100
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00083200
&ZMS               SETC  '"MF='      *KLNGA* MNOTE                      00083300
&ZMS               SETC  '&ZMS.&MF"'                                    00083400
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00083500
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00083600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00083700
.ZG65S             ANOP  ,                                              00083800
.*-------------------------------------------------------------------   00083900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00084000
.ZG67              ANOP  ,                                              00084100
&ZTLC              SETC 'E'                                             00084200
                   AIF   ('&MF(1)' NE '&ZTLC').ZG75                     00084300
&XMF               SETC  'E'         SET KEYWORD                        00084400
                   AIF   (N'&MF LE 3).ZG67A     CK NUM                  00084500
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00084600
&ZMS               SETC  '&ZMS.&MF"'                                    00084700
&ZMS               SETC  '&ZMS "MF"'                                    00084800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00084900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00085000
.ZG67A             ANOP  ,                                              00085100
.*-------------------------------------------------------------------   00085200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00085300
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00085400
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00085500
                   AIF   (N'&MF(2) GT 1).ZG69B  MULTI PARMS             00085600
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00085700
.ZG69B             AIF   (K'&MF(2) GT 0).ZG69C                          00085800
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00085900
&ZMS               SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*               00086000
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00086100
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00086200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00086300
.ZG69C             ANOP  ,                                              00086400
.*-------------------------------------------------------------------   00086500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00086600
                   AIF   (K'&ZXMFCTRL LE 0).ZG69R  NOT I/O              00086700
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG69R                 00086800
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00086900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                   00087000
                   AIF   (K'&ZCGPR GT 2).ZG69Q                          00087100
                   AIF   ('&ZCGPR' EQ '0').ZG69Q                        00087200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00087300
                   AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME      00087400
.ZG69P             ANOP  ,                                              00087500
                   AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC           00087600
                   AIF   ('&ZCGPR' LT '1').ZG69Q                        00087700
                   AIF   ('&ZCGPR' LE '12').ZG69R                       00087800
.ZG69Q             ANOP  ,                                              00087900
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00088000
&ZMS               SETC  '&ZMS.&MF"'                                    00088100
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00088200
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00088300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00088400
.ZG69R             ANOP  ,                                              00088500
.*-------------------------------------------------------------------   00088600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088700
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00088800
.ZG73A   AIF   ('&MF(3)' NE 'COMPLETE').ZG74A                           00088900
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00089000
.*-------------------------------------------------------------------   00089100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00089200
.ZG74A             AIF   (K'&XMFSCK GT 0).ZG74C  KEYWORD                00089300
                   AIF   (K'&MF(3) LE 0).ZG74B                          00089400
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00089500
&ZMS               SETC  '&ZMS.&MF"'                                    00089600
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00089700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00089800
&ZMS               SETC  '&ZMS "COMPLETE".'     VALID KEYWORD           00089900
                   MNOTE 8,' &ZMS '                                     00090000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00090100
.ZG74B             ANOP  ,                                              00090200
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00090300
.ZG74C             ANOP  ,                                              00090400
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00090500
.*------------------------------------------------------------------    00090600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00090700
.ZG75              ANOP  ,                                              00090800
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00090900
                   AIF   (K'&XMF GT 0).ZG75E    VALID ARG               00091000
                   AIF   (T'&MF EQ 'O').ZG75D   OMITTED                 00091100
&ZASYSLNDX         SETA  0                                              00091200
.ZG75A             ANOP  ,           POSITIONAL MACRO KEY               00091300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00091400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG75C               00091500
&ZTLC              SETC 'MF'                                            00091600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG75A      00091700
.ZG75B             ANOP  ,                                              00091800
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00091900
&ZMS               SETC  'THE "MF" KEY'         *KOPTA* MNOTE           00092000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00092100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00092200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00092300
                   AGO   .ZG75E                                         00092400
.ZG75C             ANOP  ,                                              00092500
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00092600
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00092700
&ZMS               SETC  '&ZMS.&MF"'                                    00092800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00092900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00093000
&ZMS               SETC  '&ZMS "S",'            VALID KEYWORD           00093100
&ZMS               SETC  '&ZMS "L",'            VALID KEYWORD           00093200
&ZMS               SETC  '&ZMS OR "E".'         VALID KEYWORD           00093300
                   MNOTE 8,' &ZMS '                                     00093400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00093500
                   AGO   .ZG75E                                         00093600
.ZG75D             ANOP  ,                                              00093700
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00093800
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00093900
.ZG75E             ANOP  ,                                              00094000
.********************************************************************   00094100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00094200
.********************************************************************   00094300
                   ACTR  10000                                          00094400
.*-------------------------------------------------------------------   00094500
.***AG.MF03 MF=(SLE)                                                    00094600
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00094700
.*------------------------------------------------------------------    00094800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094900
&XSEARCH_BY        SETC  ''          INITIALIZE XVARIABLE               00095000
.*-------------------------------------------------------------------   00095100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00095200
.ZG3               ANOP  ,                                              00095300
                   AIF   (K'&SEARCH_BY(1) LE 0).ZG3A                    00095400
&ZTLC              SETC 'CONNTKN'                                       00095500
                   AIF   ('&SEARCH_BY(1)' NE '&ZTLC').ZG16              00095600
&XSEARCH_BY        SETC  'CONNTKN'   SET KEYWORD                        00095700
                   AIF   (N'&SEARCH_BY LE 1).ZG3A  CK NUM               00095800
&ZMS               SETC  '"SEARCH_BY='          *KPOSA* MNOTE           00095900
&ZMS               SETC  '&ZMS.&SEARCH_BY"'                             00096000
&ZMS               SETC  '&ZMS "SEARCH_BY"'                             00096100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00096200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00096300
.ZG3A              ANOP  ,                                              00096400
.*------------------------------------------------------------------    00096500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00096600
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00096700
.ZG3A0             AIF   (K'&SUBSYS LE 0).ZG3A1  OK                     00096800
&ZCVAL             SETC '&ZCVAL SUBSYS'         INCORRECT KEY USED      00096900
.ZG3A1             AIF   (K'&SUBSYSNM LE 0).ZG3A2  OK                   00097000
&ZCVAL             SETC '&ZCVAL SUBSYSNM'       INCORRECT KEY USED      00097100
.ZG3A2             AIF   (K'&ASID_LIST LE 0).ZG3A3  OK                  00097200
&ZCVAL             SETC '&ZCVAL ASID_LIST'      INCORRECT KEY USED      00097300
.ZG3A3             AIF   (K'&ASID_LISTSIZE LE 0).ZG3A4  OK              00097400
&ZCVAL             SETC '&ZCVAL ASID_LISTSIZE'  INCORRECT KEY USED      00097500
.ZG3A4             AIF   (K'&ASID_SIZENEED LE 0).ZG3A5  OK              00097600
&ZCVAL             SETC '&ZCVAL ASID_SIZENEED'  INCORRECT KEY USED      00097700
.ZG3A5             AIF   (K'&STOKEN_LIST LE 0).ZG3A6  OK                00097800
&ZCVAL             SETC '&ZCVAL STOKEN_LIST'    INCORRECT KEY USED      00097900
.ZG3A6             AIF   (K'&STKN_LISTSIZE LE 0).ZG3A7  OK              00098000
&ZCVAL             SETC '&ZCVAL STKN_LISTSIZE'  INCORRECT KEY USED      00098100
.ZG3A7             AIF   (K'&STKN_SIZENEED LE 0).ZG3A8  OK              00098200
&ZCVAL             SETC '&ZCVAL STKN_SIZENEED'  INCORRECT KEY USED      00098300
.ZG3A8             AIF   (K'&SKIP_REGIONS LE 0).ZG3A9  OK               00098400
&ZCVAL             SETC '&ZCVAL SKIP_REGIONS'   INCORRECT KEY USED      00098500
.ZG3A9             AIF   (K'&ZCVAL LE 0).ZG3A10  OK                     00098600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00098700
&ZMS               SETC  '"SEARCH_BY'           *KMEIA* MNOTE           00098800
&ZMS               SETC  '&ZMS.=&SEARCH_BY"'                            00098900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00099000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00099100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00099200
.ZG3A10            ANOP  ,                                              00099300
.*----------------------------------------------------------------***   00099400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00099500
                   AIF   (N'&CONNTKN LE 1).ZG5A  CK NUM                 00099600
&ZMS               SETC  '"CONNTKN='            *KPOSA* MNOTE           00099700
&ZMS               SETC  '&ZMS.&CONNTKN"'                               00099800
&ZMS               SETC  '&ZMS "CONNTKN"'                               00099900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00100000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00100100
.ZG5A              ANOP  ,                                              00100200
.*-------------------------------------------------------------------   00100300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00100400
&ZXCONNTKN         SETC  'INPUT'     SET IN/OUTPUT                      00100500
&XCONNTKN          SETC  '&CONNTKN(1)'          SET XVARIABLE           00100600
                   AIF   (N'&CONNTKN GT 1).ZG5B  MULTI PARMS            00100700
&XCONNTKN          SETC  '&CONNTKN'  SET XVARIABLE                      00100800
.ZG5B              AIF   (K'&CONNTKN(1) GT 0).ZG5C                      00100900
&ZXCONNTKN         SETC  ''          RESET IN/OUTPUT                    00101000
&ZMS               SETC  ' '         *KRQDA*                            00101100
&ZMS               SETC  '&ZMS "CONNTKN" KEY AND ITS ARGUMENT'          00101200
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00101300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00101400
.ZG5C              ANOP  ,                                              00101500
.*-------------------------------------------------------------------   00101600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00101700
                   AIF   (K'&ZXCONNTKN LE 0).ZG5R  NOT I/O              00101800
                   AIF   ('&XCONNTKN'(1,1) NE '(').ZG5R                 00101900
&ZCGPR             SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                   00102000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    00102100
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           00102200
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         00102300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00102400
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       00102500
.ZG5P              ANOP  ,                                              00102600
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            00102700
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         00102800
                   AIF   ('&ZCGPR' LE '12').ZG5R                        00102900
.ZG5Q              ANOP  ,                                              00103000
&ZMS               SETC  '"CONNTKN='            *KGPRA* MNOTE           00103100
&ZMS               SETC  '&ZMS.&CONNTKN"'                               00103200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00103300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00103400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00103500
.ZG5R              ANOP  ,                                              00103600
.*----------------------------------------------------------------***   00103700
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00103800
                   AIF   (N'&LU62_LIST LE 1).ZG8A  CK NUM               00103900
&ZMS               SETC  '"LU62_LIST='          *KPOSA* MNOTE           00104000
&ZMS               SETC  '&ZMS.&LU62_LIST"'                             00104100
&ZMS               SETC  '&ZMS "LU62_LIST"'                             00104200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00104300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00104400
.ZG8A              ANOP  ,                                              00104500
.*-------------------------------------------------------------------   00104600
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00104700
&ZXLU62_LIST       SETC  'INOUT'     SET IN/OUTPUT                      00104800
&XLU62_LIST        SETC  'NO_LU62_LIST'                                 00104900
                   AIF   (K'&LU62_LIST(1) LE 0).ZG8B  PARM              00105000
&XLU62_LIST        SETC  '&LU62_LIST(1)'        SET XVARIABLE           00105100
                   AIF   (N'&LU62_LIST GT 1).ZG8B  MULTI PARMS          00105200
&XLU62_LIST        SETC  '&LU62_LIST'           SET XVARIABLE           00105300
.ZG8B              ANOP  ,                                              00105400
.*-------------------------------------------------------------------   00105500
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00105600
                   AIF   (K'&ZXLU62_LIST LE 0).ZG8R  NOT I/O            00105700
                   AIF   ('&XLU62_LIST' EQ 'NO_LU62_LIST').ZG8R         00105800
                   AIF   ('&XLU62_LIST'(1,1) NE '(').ZG8R               00105900
&ZCGPR             SETC  '&XLU62_LIST'(2,K'&XLU62_LIST-2)               00106000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                    00106100
                   AIF   (K'&ZCGPR GT 2).ZG8Q                           00106200
                   AIF   ('&ZCGPR' EQ '0').ZG8Q                         00106300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00106400
                   AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME       00106500
.ZG8P              ANOP  ,                                              00106600
                   AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC            00106700
                   AIF   ('&ZCGPR' LT '2').ZG8Q                         00106800
                   AIF   ('&ZCGPR' LE '12').ZG8R                        00106900
.ZG8Q              ANOP  ,                                              00107000
&ZMS               SETC  '"LU62_LIST='          *KGPRA* MNOTE           00107100
&ZMS               SETC  '&ZMS.&LU62_LIST"'                             00107200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00107300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00107400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00107500
.ZG8R              ANOP  ,                                              00107600
.*----------------------------------------------------------------***   00107700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00107800
                   AIF   (N'&LU62_LISTSIZE LE 1).ZG10A  CK NUM          00107900
&ZMS               SETC  '"LU62_LISTSIZE='      *KPOSA* MNOTE           00108000
&ZMS               SETC  '&ZMS.&LU62_LISTSIZE"'                         00108100
&ZMS               SETC  '&ZMS "LU62_LISTSIZE"'                         00108200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00108300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00108400
.ZG10A             ANOP  ,                                              00108500
.*-------------------------------------------------------------------   00108600
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00108700
&ZXLU62_LISTSIZE   SETC  'INPUT'     SET IN/OUTPUT                      00108800
&XLU62_LISTSIZE    SETC  '&LU62_LISTSIZE(1)'    SET XVARIABLE           00108900
                   AIF   (N'&LU62_LISTSIZE GT 1).ZG10B  MULTI PARMS     00109000
&XLU62_LISTSIZE    SETC  '&LU62_LISTSIZE'       SET XVARIABLE           00109100
.ZG10B             AIF   (K'&LU62_LIST(1) GT 0).ZG10C  KEY              00109200
                   AIF   (K'&LU62_LISTSIZE(1) LE 0).ZG10D  PARM         00109300
&ZMS               SETC  '"LU62_LISTSIZE'       *KDEPA* MNOTE           00109400
&ZMS               SETC  '&ZMS.=&LU62_LISTSIZE"'                        00109500
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00109600
&ZMS               SETC  '&ZMS '                                        00109700
&ZMS               SETC  '&ZMS "LU62_LIST"'                             00109800
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00109900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00110000
                   AGO   .ZG10E                                         00110100
.*                                                                      00110200
.ZG10C             AIF   (K'&LU62_LISTSIZE(1) GT 0).ZG10E  PARM         00110300
&ZXLU62_LISTSIZE   SETC  ''          RESET IN/OUTPUT                    00110400
&ZMS               SETC  ' '         *KRQDA*                            00110500
&ZMS               SETC  '&ZMS "LU62_LISTSIZE" KEY AND ITS ARGUMENT'    00110600
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00110700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00110800
.ZG10D             ANOP  ,                                              00110900
&XLU62_LISTSIZE    SETC  '0'         SET DEFAULT                        00111000
.ZG10E             ANOP  ,                                              00111100
.*-------------------------------------------------------------------   00111200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00111300
                   AIF   (K'&ZXLU62_LISTSIZE LE 0).ZG10R  NOT I/O       00111400
                   AIF   ('&XLU62_LISTSIZE'(1,1) NE '(').ZG10R          00111500
&ZCGPR             SETC  '&XLU62_LISTSIZE'(2,K'&XLU62_LISTSIZE-2)       00111600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                   00111700
                   AIF   (K'&ZCGPR GT 2).ZG10Q                          00111800
                   AIF   ('&ZCGPR' EQ '0').ZG10Q                        00111900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00112000
                   AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME      00112100
.ZG10P             ANOP  ,                                              00112200
                   AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC           00112300
                   AIF   ('&ZCGPR' LT '2').ZG10Q                        00112400
                   AIF   ('&ZCGPR' LE '12').ZG10R                       00112500
.ZG10Q             ANOP  ,                                              00112600
&ZMS               SETC  '"LU62_LISTSIZE='      *KGPRA* MNOTE           00112700
&ZMS               SETC  '&ZMS.&LU62_LISTSIZE"'                         00112800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00112900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00113000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00113100
.ZG10R             ANOP  ,                                              00113200
.*----------------------------------------------------------------***   00113300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00113400
                   AIF   (N'&QUERYLEN LE 1).ZG14A  CK NUM               00113500
&ZMS               SETC  '"QUERYLEN='           *KPOSA* MNOTE           00113600
&ZMS               SETC  '&ZMS.&QUERYLEN"'                              00113700
&ZMS               SETC  '&ZMS "QUERYLEN"'                              00113800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00113900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00114000
.ZG14A             ANOP  ,                                              00114100
.*-------------------------------------------------------------------   00114200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00114300
&ZXQUERYLEN        SETC  'OUTPUT'    SET IN/OUTPUT                      00114400
&XQUERYLEN         SETC  '&QUERYLEN(1)'         SET XVARIABLE           00114500
                   AIF   (N'&QUERYLEN GT 1).ZG14B  MULTI PARMS          00114600
&XQUERYLEN         SETC  '&QUERYLEN'            SET XVARIABLE           00114700
.ZG14B             AIF   (K'&QUERYLEN(1) GT 0).ZG14C                    00114800
&ZXQUERYLEN        SETC  ''          RESET IN/OUTPUT                    00114900
&ZMS               SETC  ' '         *KRQDA*                            00115000
&ZMS               SETC  '&ZMS "QUERYLEN" KEY AND ITS ARGUMENT'         00115100
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00115200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00115300
.ZG14C             ANOP  ,                                              00115400
.*-------------------------------------------------------------------   00115500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00115600
                   AIF   (K'&ZXQUERYLEN LE 0).ZG14R  NOT I/O            00115700
                   AIF   ('&XQUERYLEN'(1,1) NE '(').ZG14R               00115800
&ZCGPR             SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                 00115900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                   00116000
                   AIF   (K'&ZCGPR GT 2).ZG14Q                          00116100
                   AIF   ('&ZCGPR' EQ '0').ZG14Q                        00116200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00116300
                   AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME      00116400
.ZG14P             ANOP  ,                                              00116500
                   AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC           00116600
                   AIF   ('&ZCGPR' LT '2').ZG14Q                        00116700
                   AIF   ('&ZCGPR' LE '12').ZG14R                       00116800
.ZG14Q             ANOP  ,                                              00116900
&ZMS               SETC  '"QUERYLEN='           *KGPRA* MNOTE           00117000
&ZMS               SETC  '&ZMS.&QUERYLEN"'                              00117100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00117200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00117300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00117400
.ZG14R             ANOP  ,                                              00117500
.*-------------------------------------------------------------------   00117600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00117700
.ZG16              ANOP  ,                                              00117800
&ZTLC              SETC 'LU62TKN'                                       00117900
                   AIF   ('&SEARCH_BY(1)' NE '&ZTLC').ZG50              00118000
&XSEARCH_BY        SETC  'LU62TKN'   SET KEYWORD                        00118100
                   AIF   (N'&SEARCH_BY LE 1).ZG16A  CK NUM              00118200
&ZMS               SETC  '"SEARCH_BY='          *KPOSA* MNOTE           00118300
&ZMS               SETC  '&ZMS.&SEARCH_BY"'                             00118400
&ZMS               SETC  '&ZMS "SEARCH_BY"'                             00118500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00118600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00118700
.ZG16A             ANOP  ,                                              00118800
.*------------------------------------------------------------------    00118900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00119100
.ZG16A0            AIF   (K'&CONNTKN LE 0).ZG16A1  OK                   00119200
&ZCVAL             SETC '&ZCVAL CONNTKN'        INCORRECT KEY USED      00119300
.ZG16A1            AIF   (K'&QUERYLEN LE 0).ZG16A2  OK                  00119400
&ZCVAL             SETC '&ZCVAL QUERYLEN'       INCORRECT KEY USED      00119500
.ZG16A2            AIF   (K'&ZCVAL LE 0).ZG16A3  OK                     00119600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00119700
&ZMS               SETC  '"SEARCH_BY'           *KMEIA* MNOTE           00119800
&ZMS               SETC  '&ZMS.=&SEARCH_BY"'                            00119900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00120000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00120100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00120200
.ZG16A3            ANOP  ,                                              00120300
.*----------------------------------------------------------------***   00120400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00120500
                   AIF   (N'&SUBSYS LE 1).ZG18A  CK NUM                 00120600
&ZMS               SETC  '"SUBSYS='  *KPOSA* MNOTE                      00120700
&ZMS               SETC  '&ZMS.&SUBSYS"'                                00120800
&ZMS               SETC  '&ZMS "SUBSYS"'                                00120900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00121000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00121100
.ZG18A             ANOP  ,                                              00121200
.*-------------------------------------------------------------------   00121300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00121400
&ZXSUBSYS          SETC  'INPUT'     SET IN/OUTPUT                      00121500
&XSUBSYS           SETC  'NO_SUBSYS'                                    00121600
                   AIF   (K'&SUBSYS(1) LE 0).ZG18B  PARM                00121700
&XSUBSYS           SETC  '&SUBSYS(1)'           SET XVARIABLE           00121800
                   AIF   (N'&SUBSYS GT 1).ZG18B  MULTI PARMS            00121900
&XSUBSYS           SETC  '&SUBSYS'   SET XVARIABLE                      00122000
.ZG18B             ANOP  ,                                              00122100
.*-------------------------------------------------------------------   00122200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00122300
                   AIF   (K'&ZXSUBSYS LE 0).ZG18R  NOT I/O              00122400
                   AIF   ('&XSUBSYS' EQ 'NO_SUBSYS').ZG18R              00122500
                   AIF   ('&XSUBSYS'(1,1) NE '(').ZG18R                 00122600
&ZCGPR             SETC  '&XSUBSYS'(2,K'&XSUBSYS-2)                     00122700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                   00122800
                   AIF   (K'&ZCGPR GT 2).ZG18Q                          00122900
                   AIF   ('&ZCGPR' EQ '0').ZG18Q                        00123000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00123100
                   AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME      00123200
.ZG18P             ANOP  ,                                              00123300
                   AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC           00123400
                   AIF   ('&ZCGPR' LT '2').ZG18Q                        00123500
                   AIF   ('&ZCGPR' LE '12').ZG18R                       00123600
.ZG18Q             ANOP  ,                                              00123700
&ZMS               SETC  '"SUBSYS='  *KGPRA* MNOTE                      00123800
&ZMS               SETC  '&ZMS.&SUBSYS"'                                00123900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00124000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00124100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00124200
.ZG18R             ANOP  ,                                              00124300
.*----------------------------------------------------------------***   00124400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00124500
                   AIF   (N'&SUBSYSNM LE 1).ZG21A  CK NUM               00124600
&ZMS               SETC  '"SUBSYSNM='           *KPOSA* MNOTE           00124700
&ZMS               SETC  '&ZMS.&SUBSYSNM"'                              00124800
&ZMS               SETC  '&ZMS "SUBSYSNM"'                              00124900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00125000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00125100
.ZG21A             ANOP  ,                                              00125200
.*-------------------------------------------------------------------   00125300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00125400
&ZXSUBSYSNM        SETC  'INPUT'     SET IN/OUTPUT                      00125500
&XSUBSYSNM         SETC  'NO_SUBSYSNM'                                  00125600
                   AIF   (K'&SUBSYSNM(1) LE 0).ZG21B  PARM              00125700
&XSUBSYSNM         SETC  '&SUBSYSNM(1)'         SET XVARIABLE           00125800
                   AIF   (N'&SUBSYSNM GT 1).ZG21B  MULTI PARMS          00125900
&XSUBSYSNM         SETC  '&SUBSYSNM'            SET XVARIABLE           00126000
.ZG21B             ANOP  ,                                              00126100
.*-------------------------------------------------------------------   00126200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00126300
                   AIF   (K'&ZXSUBSYSNM LE 0).ZG21R  NOT I/O            00126400
                   AIF   ('&XSUBSYSNM' EQ 'NO_SUBSYSNM').ZG21R          00126500
                   AIF   ('&XSUBSYSNM'(1,1) NE '(').ZG21R               00126600
&ZCGPR             SETC  '&XSUBSYSNM'(2,K'&XSUBSYSNM-2)                 00126700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                   00126800
                   AIF   (K'&ZCGPR GT 2).ZG21Q                          00126900
                   AIF   ('&ZCGPR' EQ '0').ZG21Q                        00127000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00127100
                   AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME      00127200
.ZG21P             ANOP  ,                                              00127300
                   AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC           00127400
                   AIF   ('&ZCGPR' LT '2').ZG21Q                        00127500
                   AIF   ('&ZCGPR' LE '12').ZG21R                       00127600
.ZG21Q             ANOP  ,                                              00127700
&ZMS               SETC  '"SUBSYSNM='           *KGPRA* MNOTE           00127800
&ZMS               SETC  '&ZMS.&SUBSYSNM"'                              00127900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00128000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00128100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00128200
.ZG21R             ANOP  ,                                              00128300
.*----------------------------------------------------------------***   00128400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00128500
                   AIF   (N'&LU62_LIST LE 1).ZG24A  CK NUM              00128600
&ZMS               SETC  '"LU62_LIST='          *KPOSA* MNOTE           00128700
&ZMS               SETC  '&ZMS.&LU62_LIST"'                             00128800
&ZMS               SETC  '&ZMS "LU62_LIST"'                             00128900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00129000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00129100
.ZG24A             ANOP  ,                                              00129200
.*-------------------------------------------------------------------   00129300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00129400
&ZXLU62_LIST       SETC  'INPUT'     SET IN/OUTPUT                      00129500
&XLU62_LIST        SETC  '&LU62_LIST(1)'        SET XVARIABLE           00129600
                   AIF   (N'&LU62_LIST GT 1).ZG24B  MULTI PARMS         00129700
&XLU62_LIST        SETC  '&LU62_LIST'           SET XVARIABLE           00129800
.ZG24B             AIF   (K'&LU62_LIST(1) GT 0).ZG24C                   00129900
&ZXLU62_LIST       SETC  ''          RESET IN/OUTPUT                    00130000
&ZMS               SETC  ' '         *KRQDA*                            00130100
&ZMS               SETC  '&ZMS "LU62_LIST" KEY AND ITS ARGUMENT'        00130200
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00130300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00130400
.ZG24C             ANOP  ,                                              00130500
.*-------------------------------------------------------------------   00130600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00130700
                   AIF   (K'&ZXLU62_LIST LE 0).ZG24R  NOT I/O           00130800
                   AIF   ('&XLU62_LIST'(1,1) NE '(').ZG24R              00130900
&ZCGPR             SETC  '&XLU62_LIST'(2,K'&XLU62_LIST-2)               00131000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                   00131100
                   AIF   (K'&ZCGPR GT 2).ZG24Q                          00131200
                   AIF   ('&ZCGPR' EQ '0').ZG24Q                        00131300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00131400
                   AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME      00131500
.ZG24P             ANOP  ,                                              00131600
                   AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC           00131700
                   AIF   ('&ZCGPR' LT '2').ZG24Q                        00131800
                   AIF   ('&ZCGPR' LE '12').ZG24R                       00131900
.ZG24Q             ANOP  ,                                              00132000
&ZMS               SETC  '"LU62_LIST='          *KGPRA* MNOTE           00132100
&ZMS               SETC  '&ZMS.&LU62_LIST"'                             00132200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00132300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00132400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00132500
.ZG24R             ANOP  ,                                              00132600
.*----------------------------------------------------------------***   00132700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00132800
                   AIF   (N'&LU62_LISTSIZE LE 1).ZG26A  CK NUM          00132900
&ZMS               SETC  '"LU62_LISTSIZE='      *KPOSA* MNOTE           00133000
&ZMS               SETC  '&ZMS.&LU62_LISTSIZE"'                         00133100
&ZMS               SETC  '&ZMS "LU62_LISTSIZE"'                         00133200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00133300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00133400
.ZG26A             ANOP  ,                                              00133500
.*-------------------------------------------------------------------   00133600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00133700
&ZXLU62_LISTSIZE   SETC  'INPUT'     SET IN/OUTPUT                      00133800
&XLU62_LISTSIZE    SETC  '&LU62_LISTSIZE(1)'    SET XVARIABLE           00133900
                   AIF   (N'&LU62_LISTSIZE GT 1).ZG26B  MULTI PARMS     00134000
&XLU62_LISTSIZE    SETC  '&LU62_LISTSIZE'       SET XVARIABLE           00134100
.ZG26B             AIF   (K'&LU62_LISTSIZE(1) GT 0).ZG26C               00134200
&ZXLU62_LISTSIZE   SETC  ''          RESET IN/OUTPUT                    00134300
&ZMS               SETC  ' '         *KRQDA*                            00134400
&ZMS               SETC  '&ZMS "LU62_LISTSIZE" KEY AND ITS ARGUMENT'    00134500
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00134600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00134700
.ZG26C             ANOP  ,                                              00134800
.*-------------------------------------------------------------------   00134900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00135000
                   AIF   (K'&ZXLU62_LISTSIZE LE 0).ZG26R  NOT I/O       00135100
                   AIF   ('&XLU62_LISTSIZE'(1,1) NE '(').ZG26R          00135200
&ZCGPR             SETC  '&XLU62_LISTSIZE'(2,K'&XLU62_LISTSIZE-2)       00135300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                   00135400
                   AIF   (K'&ZCGPR GT 2).ZG26Q                          00135500
                   AIF   ('&ZCGPR' EQ '0').ZG26Q                        00135600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00135700
                   AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME      00135800
.ZG26P             ANOP  ,                                              00135900
                   AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC           00136000
                   AIF   ('&ZCGPR' LT '2').ZG26Q                        00136100
                   AIF   ('&ZCGPR' LE '12').ZG26R                       00136200
.ZG26Q             ANOP  ,                                              00136300
&ZMS               SETC  '"LU62_LISTSIZE='      *KGPRA* MNOTE           00136400
&ZMS               SETC  '&ZMS.&LU62_LISTSIZE"'                         00136500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00136600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00136700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00136800
.ZG26R             ANOP  ,                                              00136900
.*----------------------------------------------------------------***   00137000
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00137100
                   AIF   (N'&ASID_LIST LE 1).ZG30A  CK NUM              00137200
&ZMS               SETC  '"ASID_LIST='          *KPOSA* MNOTE           00137300
&ZMS               SETC  '&ZMS.&ASID_LIST"'                             00137400
&ZMS               SETC  '&ZMS "ASID_LIST"'                             00137500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00137600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00137700
.ZG30A             ANOP  ,                                              00137800
.*-------------------------------------------------------------------   00137900
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00138000
&ZXASID_LIST       SETC  'INOUT'     SET IN/OUTPUT                      00138100
&XASID_LIST        SETC  'NO_ASID_LIST'                                 00138200
                   AIF   (K'&ASID_LIST(1) LE 0).ZG30B  PARM             00138300
&XASID_LIST        SETC  '&ASID_LIST(1)'        SET XVARIABLE           00138400
                   AIF   (N'&ASID_LIST GT 1).ZG30B  MULTI PARMS         00138500
&XASID_LIST        SETC  '&ASID_LIST'           SET XVARIABLE           00138600
.ZG30B             ANOP  ,                                              00138700
.*-------------------------------------------------------------------   00138800
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00138900
                   AIF   (K'&ZXASID_LIST LE 0).ZG30R  NOT I/O           00139000
                   AIF   ('&XASID_LIST' EQ 'NO_ASID_LIST').ZG30R        00139100
                   AIF   ('&XASID_LIST'(1,1) NE '(').ZG30R              00139200
&ZCGPR             SETC  '&XASID_LIST'(2,K'&XASID_LIST-2)               00139300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                   00139400
                   AIF   (K'&ZCGPR GT 2).ZG30Q                          00139500
                   AIF   ('&ZCGPR' EQ '0').ZG30Q                        00139600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00139700
                   AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME      00139800
.ZG30P             ANOP  ,                                              00139900
                   AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC           00140000
                   AIF   ('&ZCGPR' LT '2').ZG30Q                        00140100
                   AIF   ('&ZCGPR' LE '12').ZG30R                       00140200
.ZG30Q             ANOP  ,                                              00140300
&ZMS               SETC  '"ASID_LIST='          *KGPRA* MNOTE           00140400
&ZMS               SETC  '&ZMS.&ASID_LIST"'                             00140500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00140600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00140700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00140800
.ZG30R             ANOP  ,                                              00140900
.*----------------------------------------------------------------***   00141000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00141100
                   AIF   (N'&ASID_LISTSIZE LE 1).ZG32A  CK NUM          00141200
&ZMS               SETC  '"ASID_LISTSIZE='      *KPOSA* MNOTE           00141300
&ZMS               SETC  '&ZMS.&ASID_LISTSIZE"'                         00141400
&ZMS               SETC  '&ZMS "ASID_LISTSIZE"'                         00141500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00141600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00141700
.ZG32A             ANOP  ,                                              00141800
.*-------------------------------------------------------------------   00141900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00142000
&ZXASID_LISTSIZE   SETC  'INPUT'     SET IN/OUTPUT                      00142100
&XASID_LISTSIZE    SETC  '&ASID_LISTSIZE(1)'    SET XVARIABLE           00142200
                   AIF   (N'&ASID_LISTSIZE GT 1).ZG32B  MULTI PARMS     00142300
&XASID_LISTSIZE    SETC  '&ASID_LISTSIZE'       SET XVARIABLE           00142400
.ZG32B             AIF   (K'&ASID_LIST(1) GT 0).ZG32C  KEY              00142500
                   AIF   (K'&ASID_LISTSIZE(1) LE 0).ZG32D  PARM         00142600
&ZMS               SETC  '"ASID_LISTSIZE'       *KDEPA* MNOTE           00142700
&ZMS               SETC  '&ZMS.=&ASID_LISTSIZE"'                        00142800
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00142900
&ZMS               SETC  '&ZMS '                                        00143000
&ZMS               SETC  '&ZMS "ASID_LIST"'                             00143100
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00143200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00143300
                   AGO   .ZG32E                                         00143400
.*                                                                      00143500
.ZG32C             AIF   (K'&ASID_LISTSIZE(1) GT 0).ZG32E  PARM         00143600
&ZXASID_LISTSIZE   SETC  ''          RESET IN/OUTPUT                    00143700
&ZMS               SETC  'WHEN "ASID_LIST" IS SPECIFIED'  *KRQDA*       00143800
&ZMS               SETC  '&ZMS , "ASID_LISTSIZE" KEY AND ITS ARGUMENT'  00143900
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00144000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00144100
.ZG32D             ANOP  ,                                              00144200
&XASID_LISTSIZE    SETC  '0'         SET DEFAULT                        00144300
.ZG32E             ANOP  ,                                              00144400
.*-------------------------------------------------------------------   00144500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00144600
                   AIF   (K'&ZXASID_LISTSIZE LE 0).ZG32R  NOT I/O       00144700
                   AIF   ('&XASID_LISTSIZE'(1,1) NE '(').ZG32R          00144800
&ZCGPR             SETC  '&XASID_LISTSIZE'(2,K'&XASID_LISTSIZE-2)       00144900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                   00145000
                   AIF   (K'&ZCGPR GT 2).ZG32Q                          00145100
                   AIF   ('&ZCGPR' EQ '0').ZG32Q                        00145200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00145300
                   AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME      00145400
.ZG32P             ANOP  ,                                              00145500
                   AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC           00145600
                   AIF   ('&ZCGPR' LT '2').ZG32Q                        00145700
                   AIF   ('&ZCGPR' LE '12').ZG32R                       00145800
.ZG32Q             ANOP  ,                                              00145900
&ZMS               SETC  '"ASID_LISTSIZE='      *KGPRA* MNOTE           00146000
&ZMS               SETC  '&ZMS.&ASID_LISTSIZE"'                         00146100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00146200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00146300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00146400
.ZG32R             ANOP  ,                                              00146500
.*----------------------------------------------------------------***   00146600
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                00146700
                   AIF   (N'&ASID_SIZENEED LE 1).ZG35A  CK NUM          00146800
&ZMS               SETC  '"ASID_SIZENEED='      *KPOSA* MNOTE           00146900
&ZMS               SETC  '&ZMS.&ASID_SIZENEED"'                         00147000
&ZMS               SETC  '&ZMS "ASID_SIZENEED"'                         00147100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00147200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00147300
.ZG35A             ANOP  ,                                              00147400
.*-------------------------------------------------------------------   00147500
.***AG.KXVAR10 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    00147600
                   AIF   (K'&ASID_LIST(1) GT 0).ZG35B  KEY              00147700
                   AIF   (K'&ASID_SIZENEED(1) LE 0).ZG35D  NO PRM       00147800
&ZMS               SETC  '"ASID_SIZENEED'       *KDEPA* MNOTE           00147900
&ZMS               SETC  '&ZMS.=&ASID_SIZENEED"'                        00148000
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00148100
&ZMS               SETC  '&ZMS '                                        00148200
&ZMS               SETC  '&ZMS "ASID_LIST"'                             00148300
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00148400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00148500
                   AGO   .ZG35D                                         00148600
.*                                                                      00148700
.ZG35B             ANOP  ,                                              00148800
                   AIF   (K'&ASID_SIZENEED(1) LE 0).ZG35C  NO PRM       00148900
&ZXASID_SIZENEED   SETC  'OUTPUT'    SET OUTPUT                         00149000
&XASID_SIZENEED    SETC  '&ASID_SIZENEED(1))'   SET XVARIABLE           00149100
                   AIF   (N'&ASID_SIZENEED GT 1).ZG35C                  00149200
&XASID_SIZENEED    SETC  '&ASID_SIZENEED'       SET XVARIABLE           00149300
                   AGO   .ZG35D                                         00149400
.ZG35C             ANOP  ,                                              00149500
&ZMS               SETC  'WHEN "ASID_LIST" IS SPECIFIED'  *KRQDA*       00149600
&ZMS               SETC  '&ZMS , "ASID_SIZENEED" KEY AND ITS ARGUMENT'  00149700
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00149800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00149900
.ZG35D             ANOP  ,                                              00150000
.*-------------------------------------------------------------------   00150100
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               00150200
                   AIF   (K'&ZXASID_SIZENEED LE 0).ZG35R  NOT I/O       00150300
                   AIF   ('&XASID_SIZENEED'(1,1) NE '(').ZG35R          00150400
&ZCGPR             SETC  '&XASID_SIZENEED'(2,K'&XASID_SIZENEED-2)       00150500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                   00150600
                   AIF   (K'&ZCGPR GT 2).ZG35Q                          00150700
                   AIF   ('&ZCGPR' EQ '0').ZG35Q                        00150800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00150900
                   AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME      00151000
.ZG35P             ANOP  ,                                              00151100
                   AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC           00151200
                   AIF   ('&ZCGPR' LT '2').ZG35Q                        00151300
                   AIF   ('&ZCGPR' LE '12').ZG35R                       00151400
.ZG35Q             ANOP  ,                                              00151500
&ZMS               SETC  '"ASID_SIZENEED='      *KGPRA* MNOTE           00151600
&ZMS               SETC  '&ZMS.&ASID_SIZENEED"'                         00151700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00151800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00151900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00152000
.ZG35R             ANOP  ,                                              00152100
.*----------------------------------------------------------------***   00152200
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00152300
                   AIF   (N'&STOKEN_LIST LE 1).ZG39A  CK NUM            00152400
&ZMS               SETC  '"STOKEN_LIST='        *KPOSA* MNOTE           00152500
&ZMS               SETC  '&ZMS.&STOKEN_LIST"'                           00152600
&ZMS               SETC  '&ZMS "STOKEN_LIST"'                           00152700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00152800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00152900
.ZG39A             ANOP  ,                                              00153000
.*-------------------------------------------------------------------   00153100
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00153200
&ZXSTOKEN_LIST     SETC  'INOUT'     SET IN/OUTPUT                      00153300
&XSTOKEN_LIST      SETC  'NO_STOKEN_LIST'                               00153400
                   AIF   (K'&STOKEN_LIST(1) LE 0).ZG39B  PARM           00153500
&XSTOKEN_LIST      SETC  '&STOKEN_LIST(1)'      SET XVARIABLE           00153600
                   AIF   (N'&STOKEN_LIST GT 1).ZG39B  MULTI PARMS       00153700
&XSTOKEN_LIST      SETC  '&STOKEN_LIST'         SET XVARIABLE           00153800
.ZG39B             ANOP  ,                                              00153900
.*-------------------------------------------------------------------   00154000
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00154100
                   AIF   (K'&ZXSTOKEN_LIST LE 0).ZG39R  NOT I/O         00154200
                   AIF   ('&XSTOKEN_LIST' EQ 'NO_STOKEN_LIST').ZG39R    00154300
                   AIF   ('&XSTOKEN_LIST'(1,1) NE '(').ZG39R            00154400
&ZCGPR             SETC  '&XSTOKEN_LIST'(2,K'&XSTOKEN_LIST-2)           00154500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                   00154600
                   AIF   (K'&ZCGPR GT 2).ZG39Q                          00154700
                   AIF   ('&ZCGPR' EQ '0').ZG39Q                        00154800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00154900
                   AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME      00155000
.ZG39P             ANOP  ,                                              00155100
                   AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC           00155200
                   AIF   ('&ZCGPR' LT '2').ZG39Q                        00155300
                   AIF   ('&ZCGPR' LE '12').ZG39R                       00155400
.ZG39Q             ANOP  ,                                              00155500
&ZMS               SETC  '"STOKEN_LIST='        *KGPRA* MNOTE           00155600
&ZMS               SETC  '&ZMS.&STOKEN_LIST"'                           00155700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00155800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00155900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00156000
.ZG39R             ANOP  ,                                              00156100
.*----------------------------------------------------------------***   00156200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00156300
                   AIF   (N'&STKN_LISTSIZE LE 1).ZG41A  CK NUM          00156400
&ZMS               SETC  '"STKN_LISTSIZE='      *KPOSA* MNOTE           00156500
&ZMS               SETC  '&ZMS.&STKN_LISTSIZE"'                         00156600
&ZMS               SETC  '&ZMS "STKN_LISTSIZE"'                         00156700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00156800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00156900
.ZG41A             ANOP  ,                                              00157000
.*-------------------------------------------------------------------   00157100
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00157200
&ZXSTKN_LISTSIZE   SETC  'INPUT'     SET IN/OUTPUT                      00157300
&XSTKN_LISTSIZE    SETC  '&STKN_LISTSIZE(1)'    SET XVARIABLE           00157400
                   AIF   (N'&STKN_LISTSIZE GT 1).ZG41B  MULTI PARMS     00157500
&XSTKN_LISTSIZE    SETC  '&STKN_LISTSIZE'       SET XVARIABLE           00157600
.ZG41B             AIF   (K'&STOKEN_LIST(1) GT 0).ZG41C  KEY            00157700
                   AIF   (K'&STKN_LISTSIZE(1) LE 0).ZG41D  PARM         00157800
&ZMS               SETC  '"STKN_LISTSIZE'       *KDEPA* MNOTE           00157900
&ZMS               SETC  '&ZMS.=&STKN_LISTSIZE"'                        00158000
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00158100
&ZMS               SETC  '&ZMS '                                        00158200
&ZMS               SETC  '&ZMS "STOKEN_LIST"'                           00158300
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00158400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00158500
                   AGO   .ZG41E                                         00158600
.*                                                                      00158700
.ZG41C             AIF   (K'&STKN_LISTSIZE(1) GT 0).ZG41E  PARM         00158800
&ZXSTKN_LISTSIZE   SETC  ''          RESET IN/OUTPUT                    00158900
&ZMS               SETC  'WHEN "STOKEN_LIST" IS SPECIFIED'  *KRQDA*     00159000
&ZMS               SETC  '&ZMS , "STKN_LISTSIZE" KEY AND ITS ARGUMENT'  00159100
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00159200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00159300
.ZG41D             ANOP  ,                                              00159400
&XSTKN_LISTSIZE    SETC  '0'         SET DEFAULT                        00159500
.ZG41E             ANOP  ,                                              00159600
.*-------------------------------------------------------------------   00159700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00159800
                   AIF   (K'&ZXSTKN_LISTSIZE LE 0).ZG41R  NOT I/O       00159900
                   AIF   ('&XSTKN_LISTSIZE'(1,1) NE '(').ZG41R          00160000
&ZCGPR             SETC  '&XSTKN_LISTSIZE'(2,K'&XSTKN_LISTSIZE-2)       00160100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                   00160200
                   AIF   (K'&ZCGPR GT 2).ZG41Q                          00160300
                   AIF   ('&ZCGPR' EQ '0').ZG41Q                        00160400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00160500
                   AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME      00160600
.ZG41P             ANOP  ,                                              00160700
                   AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC           00160800
                   AIF   ('&ZCGPR' LT '2').ZG41Q                        00160900
                   AIF   ('&ZCGPR' LE '12').ZG41R                       00161000
.ZG41Q             ANOP  ,                                              00161100
&ZMS               SETC  '"STKN_LISTSIZE='      *KGPRA* MNOTE           00161200
&ZMS               SETC  '&ZMS.&STKN_LISTSIZE"'                         00161300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00161400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00161500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00161600
.ZG41R             ANOP  ,                                              00161700
.*----------------------------------------------------------------***   00161800
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                00161900
                   AIF   (N'&STKN_SIZENEED LE 1).ZG44A  CK NUM          00162000
&ZMS               SETC  '"STKN_SIZENEED='      *KPOSA* MNOTE           00162100
&ZMS               SETC  '&ZMS.&STKN_SIZENEED"'                         00162200
&ZMS               SETC  '&ZMS "STKN_SIZENEED"'                         00162300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00162400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00162500
.ZG44A             ANOP  ,                                              00162600
.*-------------------------------------------------------------------   00162700
.***AG.KXVAR10 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    00162800
                   AIF   (K'&STOKEN_LIST(1) GT 0).ZG44B  KEY            00162900
                   AIF   (K'&STKN_SIZENEED(1) LE 0).ZG44D  NO PRM       00163000
&ZMS               SETC  '"STKN_SIZENEED'       *KDEPA* MNOTE           00163100
&ZMS               SETC  '&ZMS.=&STKN_SIZENEED"'                        00163200
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00163300
&ZMS               SETC  '&ZMS '                                        00163400
&ZMS               SETC  '&ZMS "STOKEN_LIST"'                           00163500
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00163600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00163700
                   AGO   .ZG44D                                         00163800
.*                                                                      00163900
.ZG44B             ANOP  ,                                              00164000
                   AIF   (K'&STKN_SIZENEED(1) LE 0).ZG44C  NO PRM       00164100
&ZXSTKN_SIZENEED   SETC  'OUTPUT'    SET OUTPUT                         00164200
&XSTKN_SIZENEED    SETC  '&STKN_SIZENEED(1))'   SET XVARIABLE           00164300
                   AIF   (N'&STKN_SIZENEED GT 1).ZG44C                  00164400
&XSTKN_SIZENEED    SETC  '&STKN_SIZENEED'       SET XVARIABLE           00164500
                   AGO   .ZG44D                                         00164600
.ZG44C             ANOP  ,                                              00164700
&ZMS               SETC  'WHEN "STOKEN_LIST" IS SPECIFIED'  *KRQDA*     00164800
&ZMS               SETC  '&ZMS , "STKN_SIZENEED" KEY AND ITS ARGUMENT'  00164900
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00165000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00165100
.ZG44D             ANOP  ,                                              00165200
.*-------------------------------------------------------------------   00165300
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               00165400
                   AIF   (K'&ZXSTKN_SIZENEED LE 0).ZG44R  NOT I/O       00165500
                   AIF   ('&XSTKN_SIZENEED'(1,1) NE '(').ZG44R          00165600
&ZCGPR             SETC  '&XSTKN_SIZENEED'(2,K'&XSTKN_SIZENEED-2)       00165700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                   00165800
                   AIF   (K'&ZCGPR GT 2).ZG44Q                          00165900
                   AIF   ('&ZCGPR' EQ '0').ZG44Q                        00166000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00166100
                   AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME      00166200
.ZG44P             ANOP  ,                                              00166300
                   AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC           00166400
                   AIF   ('&ZCGPR' LT '2').ZG44Q                        00166500
                   AIF   ('&ZCGPR' LE '12').ZG44R                       00166600
.ZG44Q             ANOP  ,                                              00166700
&ZMS               SETC  '"STKN_SIZENEED='      *KGPRA* MNOTE           00166800
&ZMS               SETC  '&ZMS.&STKN_SIZENEED"'                         00166900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00167000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00167100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00167200
.ZG44R             ANOP  ,                                              00167300
.*----------------------------------------------------------------***   00167400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00167500
                   AIF   (N'&SKIP_REGIONS LE 1).ZG48A  CK NUM           00167600
&ZMS               SETC  '"SKIP_REGIONS='       *KPOSA* MNOTE           00167700
&ZMS               SETC  '&ZMS.&SKIP_REGIONS"'                          00167800
&ZMS               SETC  '&ZMS "SKIP_REGIONS"'                          00167900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00168000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00168100
.ZG48A             ANOP  ,                                              00168200
.*-------------------------------------------------------------------   00168300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00168400
                   AIF   (K'&SKIP_REGIONS(1) LE 0).ZG48C  NO PARM       00168500
&ZXSKIP_REGIONS    SETC  'OUTPUT'    SET OUTPUT                         00168600
&XSKIP_REGIONS     SETC  '&SKIP_REGIONS(1)'     SET XVARIABLE           00168700
                   AIF   (N'&SKIP_REGIONS GT 1).ZG48C                   00168800
&XSKIP_REGIONS     SETC  '&SKIP_REGIONS'        SET XVARIABLE           00168900
.ZG48C             ANOP  ,                                              00169000
.*-------------------------------------------------------------------   00169100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00169200
                   AIF   (K'&ZXSKIP_REGIONS LE 0).ZG48R  NOT I/O        00169300
                   AIF   ('&XSKIP_REGIONS'(1,1) NE '(').ZG48R           00169400
&ZCGPR             SETC  '&XSKIP_REGIONS'(2,K'&XSKIP_REGIONS-2)         00169500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                   00169600
                   AIF   (K'&ZCGPR GT 2).ZG48Q                          00169700
                   AIF   ('&ZCGPR' EQ '0').ZG48Q                        00169800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00169900
                   AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME      00170000
.ZG48P             ANOP  ,                                              00170100
                   AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC           00170200
                   AIF   ('&ZCGPR' LT '2').ZG48Q                        00170300
                   AIF   ('&ZCGPR' LE '12').ZG48R                       00170400
.ZG48Q             ANOP  ,                                              00170500
&ZMS               SETC  '"SKIP_REGIONS='       *KGPRA* MNOTE           00170600
&ZMS               SETC  '&ZMS.&SKIP_REGIONS"'                          00170700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00170800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00170900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00171000
.ZG48R             ANOP  ,                                              00171100
.*------------------------------------------------------------------    00171200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171300
.ZG50              ANOP  ,                                              00171400
&ZXSEARCH_BY       SETC  'INPUT'     SET IN/OUTPUT                      00171500
                   AIF   (K'&XSEARCH_BY GT 0).ZG50E  VALID ARG          00171600
                   AIF   (T'&SEARCH_BY EQ 'O').ZG50D  OMITTED           00171700
&ZASYSLNDX         SETA  0                                              00171800
.ZG50A             ANOP  ,           POSITIONAL MACRO KEY               00171900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00172000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG50C               00172100
&ZTLC              SETC 'SEARCH_BY'                                     00172200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG50A      00172300
.ZG50B             ANOP  ,                                              00172400
&ZXSEARCH_BY       SETC  ''          RESET IN/OUTPUT                    00172500
&ZMS               SETC  'THE "SEARCH_BY" KEY'  *KOPTA* MNOTE           00172600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00172700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00172800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00172900
                   AGO   .ZG50E                                         00173000
.ZG50C             ANOP  ,                                              00173100
&ZXSEARCH_BY       SETC  ''          RESET IN/OUTPUT                    00173200
&ZMS               SETC  '"SEARCH_BY='          *KUKWA* MNOTE           00173300
&ZMS               SETC  '&ZMS.&SEARCH_BY"'                             00173400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00173500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00173600
&ZMS               SETC  '&ZMS "CONNTKN"'       VALID KEYWORD           00173700
&ZMS               SETC  '&ZMS OR "LU62TKN".'   VALID KEYWORD           00173800
                   MNOTE 8,' &ZMS '                                     00173900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00174000
                   AGO   .ZG50E                                         00174100
.ZG50D             ANOP  ,                                              00174200
&XSEARCH_BY        SETC  'CONNTKN'   SET DEFAULT KEYWORD                00174300
.ZG50E             ANOP  ,                                              00174400
.*------------------------------------------------------------------    00174500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00174600
                   AIF   (K'&SEARCH_BY(1) GT 0).ZG50F  PARM             00174700
&XSEARCH_BY        SETC  ''          ENSURE NULL KEYWORD                00174800
&ZXSEARCH_BY       SETC  ''          RESET IN/OUTPUT                    00174900
&ZMS               SETC  'THE'                                          00175000
&ZMS               SETC  '&ZMS "SEARCH_BY" KEY AND ITS ARGUMENT'        00175100
&ZMS               SETC  '&ZMS ARE REQUIRED.'                           00175200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00175300
&ZMS               SETC  '&ZMS "CONNTKN"'       VALID KEYWORD           00175400
&ZMS               SETC  '&ZMS OR "LU62TKN".'   VALID KEYWORD           00175500
                   MNOTE 8,' &ZMS '                                     00175600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00175700
.ZG50F             ANOP  ,                                              00175800
.*----------------------------------------------------------------***   00175900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00176000
                   AIF   (N'&RETCODE LE 1).ZG52A  CK NUM                00176100
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           00176200
&ZMS               SETC  '&ZMS.&RETCODE"'                               00176300
&ZMS               SETC  '&ZMS "RETCODE"'                               00176400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00176500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00176600
.ZG52A             ANOP  ,                                              00176700
.*-------------------------------------------------------------------   00176800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00176900
                   AIF   (K'&RETCODE(1) LE 0).ZG52C  NO PARM            00177000
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00177100
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00177200
                   AIF   (N'&RETCODE GT 1).ZG52C                        00177300
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00177400
.ZG52C             ANOP  ,                                              00177500
.*-------------------------------------------------------------------   00177600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00177700
                   AIF   (K'&ZXRETCODE LE 0).ZG52R  NOT I/O             00177800
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG52R                00177900
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00178000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                   00178100
                   AIF   (K'&ZCGPR GT 2).ZG52Q                          00178200
                   AIF   ('&ZCGPR' EQ '0').ZG52Q                        00178300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00178400
                   AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME      00178500
.ZG52P             ANOP  ,                                              00178600
                   AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC           00178700
                   AIF   ('&ZCGPR' LT '2').ZG52Q                        00178800
                   AIF   ('&ZCGPR' LE '12').ZG52R                       00178900
.ZG52Q             ANOP  ,                                              00179000
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           00179100
&ZMS               SETC  '&ZMS.&RETCODE"'                               00179200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00179300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00179400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00179500
.ZG52R             ANOP  ,                                              00179600
.*----------------------------------------------------------------***   00179700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00179800
                   AIF   (N'&RSNCODE LE 1).ZG55A  CK NUM                00179900
&ZMS               SETC  '"RSNCODE='            *KPOSA* MNOTE           00180000
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00180100
&ZMS               SETC  '&ZMS "RSNCODE"'                               00180200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00180300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00180400
.ZG55A             ANOP  ,                                              00180500
.*-------------------------------------------------------------------   00180600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00180700
                   AIF   (K'&RSNCODE(1) LE 0).ZG55C  NO PARM            00180800
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00180900
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00181000
                   AIF   (N'&RSNCODE GT 1).ZG55C                        00181100
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00181200
.ZG55C             ANOP  ,                                              00181300
.*-------------------------------------------------------------------   00181400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00181500
                   AIF   (K'&ZXRSNCODE LE 0).ZG55R  NOT I/O             00181600
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG55R                00181700
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00181800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG55P                   00181900
                   AIF   (K'&ZCGPR GT 2).ZG55Q                          00182000
                   AIF   ('&ZCGPR' EQ '0').ZG55Q                        00182100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00182200
                   AIF   (T'&ZCGPR NE 'N').ZG55Q  INVALID REG NAME      00182300
.ZG55P             ANOP  ,                                              00182400
                   AIF   (T'&ZCGPR NE 'N').ZG55R  NON NUMERIC           00182500
                   AIF   ('&ZCGPR' LT '2').ZG55Q                        00182600
                   AIF   ('&ZCGPR' LE '12').ZG55R                       00182700
.ZG55Q             ANOP  ,                                              00182800
&ZMS               SETC  '"RSNCODE='            *KGPRA* MNOTE           00182900
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00183000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00183100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00183200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00183300
.ZG55R             ANOP  ,                                              00183400
.******************************************************************     00183500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00183600
.******************************************************************     00183700
                   ACTR  10000                                          00183800
.*----------------------------------------------------------------***   00183900
.***AH.P02 EXTRA POSITIONALS                                            00184000
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00184100
&ZCVAL             SETC  ''          ERROR FIELD                        00184200
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00184300
.ZGLIST2           ANOP  ,                                              00184400
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00184500
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00184600
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00184700
                   AGO   .ZGLIST2                                       00184800
.*                                                                      00184900
.ZGLIST3           ANOP  ,                                              00185000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00185100
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       00185200
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00185300
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00185400
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00185500
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00185600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00185700
.ZGLISTX           ANOP  ,                                              00185800
&ZASYSLNDX         SETA  0                                              00185900
.*-------------------------------------------------------------------   00186000
.***AG.MF04 MF=(SLE)                                                    00186100
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00186200
.*******************************************************************    00186300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00186400
.*******************************************************************    00186500
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00186600
.*******************************************************************    00186700
.***AE.01  START OF IWMWQWRK MACRO CODE                                 00186800
.*******************************************************************    00186900
                   LCLC  &M0M0001                 NAME                  00187000
&M0M0001           SETC  '&XLABEL'                SET NAME              00187100
                   AIF   (K'&XLABEL NE 0).XLAB2                         00187200
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00187300
.*                                                                      00187400
.XLAB2             ANOP  ,                                              00187500
&M0M0001 DS    0H                             IWMWQWRK-0                00187600
.*******************************************************************    00187700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00187800
.*******************************************************************    00187900
              PUSH  PRINT                                               00188000
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00188100
                   PRINT OFF         ++ PR01                            00188200
                   AGO   .ZPRNTXX                                       00188300
.ZPRINTX           PRINT ON                                             00188400
.ZPRNTXX           ANOP  ,                                              00188500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00188600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00188700
.********************************************************************   00188800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00188900
.********************************************************************   00189000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00189100
                      LCLA  &ZOPN1         INVOCATION INDEX             00189200
                      LCLC  &ZOPL(4095)    LABEL                        00189300
                      LCLC  &ZOPO(4095)    OPERATION                    00189400
                      LCLC  &ZOPV(4095)    VALUE                        00189500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00189600
.*                                                                      00189700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00189800
.******************************************************************     00189900
.***AL.L10 IWMWQWRK FMT=LIST MF=S|L PARAMETERS                          00190000
.******************************************************************     00190100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00190200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00190300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00190400
&XMFATTR              SETC  '0D'                                        00190500
.*                                                                      00190600
&ZOPN                 SETA  &ZOPN+1                                     00190700
&ZOPL(&ZOPN)          SETC  ' '                                         00190800
&ZOPO(&ZOPN)          SETC  'B'                                         00190900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00191000
&ZOPD(&ZOPN)          SETC  '++ IWMWQWRK ARG PARMS'                     00191100
.*                                                                      00191200
&ZOPN                 SETA  &ZOPN+1                                     00191300
&ZOPL(&ZOPN)          SETC  ' '                                         00191400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00191500
&ZOPV(&ZOPN)          SETC  '1'                                         00191600
&ZOPD(&ZOPN)          SETC  ' '                                         00191700
.*                                                                      00191800
.ZLMFSL2              ANOP  ,                                           00191900
.*-------------------------------------------------------------------   00192000
.***AM.L01  IWMWQWRK FMT=LIST PARAMETERS                                00192100
&ZOPN                 SETA &ZOPN+1                                      00192200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00192300
&ZOPO(&ZOPN)          SETC 'DS'                                         00192400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00192500
&ZOPD(&ZOPN)          SETC '++ IWMWQWRK PARM LIST'                      00192600
.*-------------------------------------------------------------------   00192700
.***AM.L02 XVERSION XL1                                                 00192800
&ZOPN                 SETA &ZOPN+1                                      00192900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00193000
&ZOPO(&ZOPN)          SETC 'DS'                                         00193100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00193200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00193300
.*-------------------------------------------------------------------   00193400
.***AM.L03 XWQWRK_OPTIONS BL.8                                          00193500
&ZOPN                 SETA &ZOPN+1                                      00193600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWQWRK_OPTIONS'                   00193700
&ZOPO(&ZOPN)          SETC 'DS'                                         00193800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00193900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00194000
.*                                                                      00194100
&ZOPN                 SETA  &ZOPN+1                                     00194200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSEARCH_BY_CONNTKN'              00194300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00194400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00194500
&ZOPD(&ZOPN)          SETC  '++ XSEARCH_BY.'                            00194600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONNTKN'                      00194700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00194800
.*                                                                      00194900
&ZOPN                 SETA  &ZOPN+1                                     00195000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSEARCH_BY_LU62TKN'              00195100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00195200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00195300
&ZOPD(&ZOPN)          SETC  '++ XSEARCH_BY.'                            00195400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LU62TKN'                      00195500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00195600
.*-------------------------------------------------------------------   00195700
.***AM.L09  XRSV0002 CL2                                                00195800
&ZOPN                 SETA &ZOPN+1                                      00195900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00196000
&ZOPO(&ZOPN)          SETC 'DS'                                         00196100
&ZOPV(&ZOPN)          SETC 'CL2'                                        00196200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00196300
.*-------------------------------------------------------------------   00196400
.***AM.L09  XCONNTKN BL.32                                              00196500
&ZOPN                 SETA &ZOPN+1                                      00196600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNTKN'                         00196700
&ZOPO(&ZOPN)          SETC 'DS'                                         00196800
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00196900
&ZOPD(&ZOPN)          SETC '++ &ZXCONNTKN  XCONNTKN'                    00197000
.*-------------------------------------------------------------------   00197100
.***AM.L09  XQUERYLEN F                                                 00197200
&ZOPN                 SETA &ZOPN+1                                      00197300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQUERYLEN'                        00197400
&ZOPO(&ZOPN)          SETC 'DS'                                         00197500
&ZOPV(&ZOPN)          SETC 'F'                                          00197600
&ZOPD(&ZOPN)          SETC '++ &ZXQUERYLEN  XQUERYLEN'                  00197700
.*-------------------------------------------------------------------   00197800
.***AM.L09 ADDR XLU62_LIST A                                            00197900
&ZOPN                 SETA &ZOPN+1                                      00198000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLU62_LIST_ADDR'                  00198100
&ZOPO(&ZOPN)          SETC 'DS'                                         00198200
&ZOPV(&ZOPN)          SETC 'A'                                          00198300
&ZOPD(&ZOPN)          SETC '++ &ZXLU62_LIST ADDR XLU62_LIST'            00198400
.*-------------------------------------------------------------------   00198500
.***AM.L09  XLU62_LISTSIZE F                                            00198600
&ZOPN                 SETA &ZOPN+1                                      00198700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLU62_LISTSIZE'                   00198800
&ZOPO(&ZOPN)          SETC 'DS'                                         00198900
&ZOPV(&ZOPN)          SETC 'F'                                          00199000
&ZOPD(&ZOPN)          SETC '++ &ZXLU62_LISTSIZE  XLU62_LISTSIZE'        00199100
.*-------------------------------------------------------------------   00199200
.***AM.L09  XSUBSYS CL4                                                 00199300
&ZOPN                 SETA &ZOPN+1                                      00199400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBSYS'                          00199500
&ZOPO(&ZOPN)          SETC 'DS'                                         00199600
&ZOPV(&ZOPN)          SETC 'CL4'                                        00199700
&ZOPD(&ZOPN)          SETC '++ &ZXSUBSYS  XSUBSYS'                      00199800
.*-------------------------------------------------------------------   00199900
.***AM.L09 ADDR XSUBSYSNM A                                             00200000
&ZOPN                 SETA &ZOPN+1                                      00200100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBSYSNM_ADDR'                   00200200
&ZOPO(&ZOPN)          SETC 'DS'                                         00200300
&ZOPV(&ZOPN)          SETC 'A'                                          00200400
&ZOPD(&ZOPN)          SETC '++ &ZXSUBSYSNM ADDR XSUBSYSNM'              00200500
.*-------------------------------------------------------------------   00200600
.***AM.L09 ADDR XASID_LIST A                                            00200700
&ZOPN                 SETA &ZOPN+1                                      00200800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XASID_LIST_ADDR'                  00200900
&ZOPO(&ZOPN)          SETC 'DS'                                         00201000
&ZOPV(&ZOPN)          SETC 'A'                                          00201100
&ZOPD(&ZOPN)          SETC '++ &ZXASID_LIST ADDR XASID_LIST'            00201200
.*-------------------------------------------------------------------   00201300
.***AM.L09  XASID_LISTSIZE F                                            00201400
&ZOPN                 SETA &ZOPN+1                                      00201500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XASID_LISTSIZE'                   00201600
&ZOPO(&ZOPN)          SETC 'DS'                                         00201700
&ZOPV(&ZOPN)          SETC 'F'                                          00201800
&ZOPD(&ZOPN)          SETC '++ &ZXASID_LISTSIZE  XASID_LISTSIZE'        00201900
.*-------------------------------------------------------------------   00202000
.***AM.L09  XASID_SIZENEED F                                            00202100
&ZOPN                 SETA &ZOPN+1                                      00202200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XASID_SIZENEED'                   00202300
&ZOPO(&ZOPN)          SETC 'DS'                                         00202400
&ZOPV(&ZOPN)          SETC 'F'                                          00202500
&ZOPD(&ZOPN)          SETC '++ &ZXASID_SIZENEED  XASID_SIZENEED'        00202600
.*-------------------------------------------------------------------   00202700
.***AM.L09 ADDR XSTOKEN_LIST A                                          00202800
&ZOPN                 SETA &ZOPN+1                                      00202900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOKEN_LIST_ADDR'                00203000
&ZOPO(&ZOPN)          SETC 'DS'                                         00203100
&ZOPV(&ZOPN)          SETC 'A'                                          00203200
&ZOPD(&ZOPN)          SETC '++ &ZXSTOKEN_LIST ADDR XSTOKEN_LIST'        00203300
.*-------------------------------------------------------------------   00203400
.***AM.L09  XSTKN_LISTSIZE F                                            00203500
&ZOPN                 SETA &ZOPN+1                                      00203600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTKN_LISTSIZE'                   00203700
&ZOPO(&ZOPN)          SETC 'DS'                                         00203800
&ZOPV(&ZOPN)          SETC 'F'                                          00203900
&ZOPD(&ZOPN)          SETC '++ &ZXSTKN_LISTSIZE  XSTKN_LISTSIZE'        00204000
.*-------------------------------------------------------------------   00204100
.***AM.L09  XSTKN_SIZENEED F                                            00204200
&ZOPN                 SETA &ZOPN+1                                      00204300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTKN_SIZENEED'                   00204400
&ZOPO(&ZOPN)          SETC 'DS'                                         00204500
&ZOPV(&ZOPN)          SETC 'F'                                          00204600
&ZOPD(&ZOPN)          SETC '++ &ZXSTKN_SIZENEED  XSTKN_SIZENEED'        00204700
.*-------------------------------------------------------------------   00204800
.***AM.L09  XRSV0034 CL4                                                00204900
&ZOPN                 SETA &ZOPN+1                                      00205000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0034'                         00205100
&ZOPO(&ZOPN)          SETC 'DS'                                         00205200
&ZOPV(&ZOPN)          SETC 'CL4'                                        00205300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0034'                      00205400
.*-------------------------------------------------------------------   00205500
.***AM.L09  XRSV0038 CL4                                                00205600
&ZOPN                 SETA &ZOPN+1                                      00205700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0038'                         00205800
&ZOPO(&ZOPN)          SETC 'DS'                                         00205900
&ZOPV(&ZOPN)          SETC 'CL4'                                        00206000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0038'                      00206100
.*-------------------------------------------------------------------   00206200
.***AM.L09  XSKIP_REGIONS F                                             00206300
&ZOPN                 SETA &ZOPN+1                                      00206400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSKIP_REGIONS'                    00206500
&ZOPO(&ZOPN)          SETC 'DS'                                         00206600
&ZOPV(&ZOPN)          SETC 'F'                                          00206700
&ZOPD(&ZOPN)          SETC '++ &ZXSKIP_REGIONS  XSKIP_REGIONS'          00206800
.*-------------------------------------------------------------------   00206900
.***AM.L10 END OF IWMWQWRK LIST PARAMETERS                              00207000
&ZOPN                 SETA &ZOPN+1                                      00207100
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00207200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00207300
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00207400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00207500
.*                                                                      00207600
&ZOPN                 SETA &ZOPN+1                                      00207700
&ZOPL(&ZOPN)          SETC ' '                                          00207800
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00207900
&ZOPV(&ZOPN)          SETC '1'                                          00208000
&ZOPD(&ZOPN)          SETC ' '                                          00208100
.*-------------------------------------------------------------------   00208200
.***AL.L12 IWMWQWRK FMT=LIST MF=S|L PARAMETERS                          00208300
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00208400
.*                                                                      00208500
&ZOPN                 SETA  &ZOPN+1                                     00208600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00208700
&ZOPO(&ZOPN)          SETC  'DC'                                        00208800
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00208900
&ZOPD(&ZOPN)          SETC  '++ IWMWQWRK ARG PARMS'                     00209000
.*                                                                      00209100
.ZLMFSLX              ANOP  ,                                           00209200
.*-------------------------------------------------------------------   00209300
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00209400
&ZPLLEN               SETA 64                                           00209500
.*                                                                      00209600
.******************************************************************     00209700
.***AI.L01 IWMWQWRK FMT=LIST FILL IN PARAMETER AREA                     00209800
.******************************************************************     00209900
                      ACTR  10000                                       00210000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00210100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00210200
&ZCVAL                SETC  'LAE'          XAX MODE                     00210300
.ZIMFXA               ANOP ,                                            00210400
.*                                                                      00210500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00210600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00210700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00210800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00210900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00211000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00211100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00211200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00211300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00211400
&ZOPN                 SETA  &ZOPN+1                                     00211500
&ZOPL(&ZOPN)          SETC  ' '                                         00211600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00211700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00211800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00211900
                      AGO   .ZIMFNX                                     00212000
.*                                                                      00212100
.ZIMFN2               ANOP ,                                            00212200
&ZOPN                 SETA  &ZOPN+1                                     00212300
&ZOPL(&ZOPN)          SETC  ' '                                         00212400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00212500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00212600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00212700
.ZIMFNX               ANOP ,                                            00212800
.********************************************************************   00212900
.***AI.L02 IWMWQWRK FMT=LIST INITIALIZE PARAMETER AREA                  00213000
.********************************************************************   00213100
.***AI.L03 MF=(SLE)                                                     00213200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00213300
.*                                                                      00213400
&ZOPN                 SETA  &ZOPN+1                                     00213500
&ZOPL(&ZOPN)          SETC  ' '                                         00213600
&ZOPO(&ZOPN)          SETC  'XC'                                        00213700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00213800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00213900
.ZIMFLX               ANOP  ,                                           00214000
.*-------------------------------------------------------------------   00214100
.***AI.L05 XWQWRK_OPTIONS BL1                                           00214200
&ZW                   SETC  ''                                          00214300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00214400
.*-------------------------------------------------------------------   00214500
.***AI.L08 XWQWRK_OPTIONS "CONNTKN"                                     00214600
.***      BL1'1XXXXXXX'                                                 00214700
         AIF   ('&XSEARCH_BY' NE 'CONNTKN').ZI3A                        00214800
&ZW                   SETC  '&ZW.1'                                     00214900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00215000
                      AGO   .ZI3C                                       00215100
.*                                                                      00215200
.ZI3A                 ANOP  ,                                           00215300
&ZW                   SETC  '&ZW.0'                                     00215400
.ZI3C                 ANOP  ,                                           00215500
.*-------------------------------------------------------------------   00215600
.***AI.L08 XWQWRK_OPTIONS "LU62TKN"                                     00215700
.***      BL1'X1XXXXXX'                                                 00215800
         AIF   ('&XSEARCH_BY' NE 'LU62TKN').ZI4A                        00215900
&ZW                   SETC  '&ZW.1000000'                               00216000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00216100
                      AGO   .ZI4C                                       00216200
.*                                                                      00216300
.ZI4A                 ANOP  ,                                           00216400
&ZW                   SETC  '&ZW.0000000'                               00216500
.ZI4C                 ANOP  ,                                           00216600
.*-------------------------------------------------------------------   00216700
.***AI.L11 XWQWRK_OPTIONS BL1                                           00216800
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00216900
&ZOPN                 SETA  &ZOPN+1                                     00217000
&ZOPL(&ZOPN)          SETC  ' '                                         00217100
&ZOPO(&ZOPN)          SETC  'OI'                                        00217200
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00217300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00217400
.ZI4E                 ANOP  ,                                           00217500
.*-------------------------------------------------------------------   00217600
.***AI.L25  XCONNTKN XL4                                                00217700
                      AIF   ('&ZXCONNTKN' EQ '').ZI6E  NOT USED         00217800
                      AIF   ('&ZXCONNTKN' EQ 'OUTPUT').ZI6E             00217900
&ZCGPR                SETC  '&XCONNTKN'                                 00218000
.*                                                                      00218100
                      AIF   ('&XCONNTKN'(1,1) NE '(').ZI6B              00218200
&ZCGPR   SETC  '0('.'&XCONNTKN'(2,K'&XCONNTKN-2).')'                    00218300
                      AGO   .ZI6D                                       00218400
.ZI6B                 ANOP  ,                                           00218500
.*                                                                      00218600
&ZC                   SETC  '&XCONNTKN'(1,1)                            00218700
                      AIF   (T'&ZC NE 'N').ZI6D                         00218800
&ZC                   SETC  '&XCONNTKN'                                 00218900
                      AIF   ('&ZC'(K'&ZC,K'&ZC) EQ ')').ZI6D            00219000
&ZCGPR                SETC  '=BL4''&XCONNTKN'''                         00219100
.*                                                                      00219200
.ZI6D                 ANOP  ,                                           00219300
.*                                                                      00219400
&ZOPN                 SETA  &ZOPN+1                                     00219500
&ZOPL(&ZOPN)          SETC  ' '                                         00219600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00219700
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00219800
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNTKN XCONNTKN XL4'                00219900
.*                                                                      00220000
.ZI6E                 ANOP  ,                                           00220100
.*-------------------------------------------------------------------   00220200
.***AI.L18 ADDR XLU62_LIST A                                            00220300
                      AIF   ('&XLU62_LIST' NE 'NO_LU62_LIST').ZI8       00220400
&ZXLU62_LIST          SETC  ''             RESET INPUT/OUTPUT           00220500
.ZI8                  ANOP  ,                                           00220600
.*-------------------------------------------------------------------   00220700
.***AI.L19 ADDR XLU62_LIST A                                            00220800
                      AIF   ('&ZXLU62_LIST' EQ '').ZI8H  NOT USED       00220900
&ZCLNG                SETC  '&XLU62_LIST'                               00221000
&ZCGPR                SETC  '14'                                        00221100
         AIF   ('&XLU62_LIST'(1,1) EQ '(').ZI8F  IN GPR                 00221200
.*                                                                      00221300
&ZOPN                 SETA  &ZOPN+1                                     00221400
&ZOPL(&ZOPN)          SETC  ' '                                         00221500
&ZOPO(&ZOPN)          SETC  'LA'                                        00221600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00221700
&ZOPD(&ZOPN)          SETC  '++ &ZXLU62_LIST XLU62_LIST A'              00221800
.*                                                                      00221900
                      AGO   .ZI8G                                       00222000
.*                                                                      00222100
.ZI8F                 ANOP  ,                                           00222200
&ZCGPR   SETC  '&XLU62_LIST'(2,K'&XLU62_LIST-2)                         00222300
.*                                                                      00222400
.ZI8G                 ANOP  ,                                           00222500
.*                                                                      00222600
&ZOPN                 SETA  &ZOPN+1                                     00222700
&ZOPL(&ZOPN)          SETC  ' '                                         00222800
&ZOPO(&ZOPN)          SETC  'ST'                                        00222900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00223000
&ZOPD(&ZOPN)          SETC  '++ &ZXLU62_LIST XLU62_LIST A'              00223100
.*                                                                      00223200
.ZI8H                 ANOP  ,                                           00223300
.*-------------------------------------------------------------------   00223400
.***AI.L25  XLU62_LISTSIZE F                                            00223500
                      AIF   ('&ZXLU62_LISTSIZE' EQ '').ZI9E  NOT USED   00223600
                      AIF   ('&ZXLU62_LISTSIZE' EQ 'OUTPUT').ZI9E       00223700
&ZCGPR                SETC  '&XLU62_LISTSIZE'                           00223800
.*                                                                      00223900
                      AIF   ('&XLU62_LISTSIZE'(1,1) NE '(').ZI9B        00224000
&ZCGPR   SETC  '0('.'&XLU62_LISTSIZE'(2,K'&XLU62_LISTSIZE-2).')'        00224100
                      AGO   .ZI9D                                       00224200
.ZI9B                 ANOP  ,                                           00224300
.*                                                                      00224400
&ZC                   SETC  '&XLU62_LISTSIZE'(1,1)                      00224500
                      AIF   (T'&ZC NE 'N').ZI9D                         00224600
&ZC                   SETC  '&XLU62_LISTSIZE'                           00224700
                      AIF   ('&ZC'(K'&ZC,K'&ZC) EQ ')').ZI9D            00224800
&ZCGPR                SETC  '=FL4''&XLU62_LISTSIZE'''                   00224900
.*                                                                      00225000
.ZI9D                 ANOP  ,                                           00225100
.*                                                                      00225200
&ZOPN                 SETA  &ZOPN+1                                     00225300
&ZOPL(&ZOPN)          SETC  ' '                                         00225400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00225500
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            00225600
&ZOPD(&ZOPN)          SETC  '++ &ZXLU62_LISTSIZE XLU62_LISTSIZE F'      00225700
.*                                                                      00225800
.ZI9E                 ANOP  ,                                           00225900
.*-------------------------------------------------------------------   00226000
.***AI.L18  XSUBSYS CL4                                                 00226100
                      AIF   ('&XSUBSYS' NE 'NO_SUBSYS').ZI10            00226200
&ZXSUBSYS             SETC  ''             RESET INPUT/OUTPUT           00226300
.ZI10                 ANOP  ,                                           00226400
.*-------------------------------------------------------------------   00226500
.***AI.L25  XSUBSYS CL4                                                 00226600
                      AIF   ('&ZXSUBSYS' EQ '').ZI10E  NOT USED         00226700
                      AIF   ('&ZXSUBSYS' EQ 'OUTPUT').ZI10E             00226800
&ZCGPR                SETC  '&XSUBSYS'                                  00226900
.*                                                                      00227000
                      AIF   ('&XSUBSYS'(1,1) NE '(').ZI10B              00227100
&ZCGPR   SETC  '0('.'&XSUBSYS'(2,K'&XSUBSYS-2).')'                      00227200
.ZI10B                ANOP  ,                                           00227300
.*                                                                      00227400
&ZOPN                 SETA  &ZOPN+1                                     00227500
&ZOPL(&ZOPN)          SETC  ' '                                         00227600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00227700
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00227800
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYS XSUBSYS CL4'                  00227900
.*                                                                      00228000
.ZI10E                ANOP  ,                                           00228100
.*-------------------------------------------------------------------   00228200
.***AI.L18 ADDR XSUBSYSNM A                                             00228300
                      AIF   ('&XSUBSYSNM' NE 'NO_SUBSYSNM').ZI11        00228400
&ZXSUBSYSNM           SETC  ''             RESET INPUT/OUTPUT           00228500
.ZI11                 ANOP  ,                                           00228600
.*-------------------------------------------------------------------   00228700
.***AI.L19 ADDR XSUBSYSNM A                                             00228800
                      AIF   ('&ZXSUBSYSNM' EQ '').ZI11H  NOT USED       00228900
&ZCLNG                SETC  '&XSUBSYSNM'                                00229000
&ZCGPR                SETC  '14'                                        00229100
         AIF   ('&XSUBSYSNM'(1,1) EQ '(').ZI11F  IN GPR                 00229200
.*                                                                      00229300
&ZOPN                 SETA  &ZOPN+1                                     00229400
&ZOPL(&ZOPN)          SETC  ' '                                         00229500
&ZOPO(&ZOPN)          SETC  'LA'                                        00229600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00229700
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYSNM XSUBSYSNM A'                00229800
.*                                                                      00229900
                      AGO   .ZI11G                                      00230000
.*                                                                      00230100
.ZI11F                ANOP  ,                                           00230200
&ZCGPR   SETC  '&XSUBSYSNM'(2,K'&XSUBSYSNM-2)                           00230300
.*                                                                      00230400
.ZI11G                ANOP  ,                                           00230500
.*                                                                      00230600
&ZOPN                 SETA  &ZOPN+1                                     00230700
&ZOPL(&ZOPN)          SETC  ' '                                         00230800
&ZOPO(&ZOPN)          SETC  'ST'                                        00230900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00231000
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYSNM XSUBSYSNM A'                00231100
.*                                                                      00231200
.ZI11H                ANOP  ,                                           00231300
.*-------------------------------------------------------------------   00231400
.***AI.L18 ADDR XASID_LIST A                                            00231500
                      AIF   ('&XASID_LIST' NE 'NO_ASID_LIST').ZI12      00231600
&ZXASID_LIST          SETC  ''             RESET INPUT/OUTPUT           00231700
.ZI12                 ANOP  ,                                           00231800
.*-------------------------------------------------------------------   00231900
.***AI.L19 ADDR XASID_LIST A                                            00232000
                      AIF   ('&ZXASID_LIST' EQ '').ZI12H  NOT USED      00232100
&ZCLNG                SETC  '&XASID_LIST'                               00232200
&ZCGPR                SETC  '14'                                        00232300
         AIF   ('&XASID_LIST'(1,1) EQ '(').ZI12F  IN GPR                00232400
.*                                                                      00232500
&ZOPN                 SETA  &ZOPN+1                                     00232600
&ZOPL(&ZOPN)          SETC  ' '                                         00232700
&ZOPO(&ZOPN)          SETC  'LA'                                        00232800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00232900
&ZOPD(&ZOPN)          SETC  '++ &ZXASID_LIST XASID_LIST A'              00233000
.*                                                                      00233100
                      AGO   .ZI12G                                      00233200
.*                                                                      00233300
.ZI12F                ANOP  ,                                           00233400
&ZCGPR   SETC  '&XASID_LIST'(2,K'&XASID_LIST-2)                         00233500
.*                                                                      00233600
.ZI12G                ANOP  ,                                           00233700
.*                                                                      00233800
&ZOPN                 SETA  &ZOPN+1                                     00233900
&ZOPL(&ZOPN)          SETC  ' '                                         00234000
&ZOPO(&ZOPN)          SETC  'ST'                                        00234100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,28(,1)'                             00234200
&ZOPD(&ZOPN)          SETC  '++ &ZXASID_LIST XASID_LIST A'              00234300
.*                                                                      00234400
.ZI12H                ANOP  ,                                           00234500
.*-------------------------------------------------------------------   00234600
.***AI.L25  XASID_LISTSIZE F                                            00234700
                      AIF   ('&ZXASID_LISTSIZE' EQ '').ZI13E  NOT USED  00234800
                      AIF   ('&ZXASID_LISTSIZE' EQ 'OUTPUT').ZI13E      00234900
&ZCGPR                SETC  '&XASID_LISTSIZE'                           00235000
.*                                                                      00235100
                      AIF   ('&XASID_LISTSIZE'(1,1) NE '(').ZI13B       00235200
&ZCGPR   SETC  '0('.'&XASID_LISTSIZE'(2,K'&XASID_LISTSIZE-2).')'        00235300
                      AGO   .ZI13D                                      00235400
.ZI13B                ANOP  ,                                           00235500
.*                                                                      00235600
&ZC                   SETC  '&XASID_LISTSIZE'(1,1)                      00235700
                      AIF   (T'&ZC NE 'N').ZI13D                        00235800
&ZC                   SETC  '&XASID_LISTSIZE'                           00235900
                      AIF   ('&ZC'(K'&ZC,K'&ZC) EQ ')').ZI13D           00236000
&ZCGPR                SETC  '=FL4''&XASID_LISTSIZE'''                   00236100
.*                                                                      00236200
.ZI13D                ANOP  ,                                           00236300
.*                                                                      00236400
&ZOPN                 SETA  &ZOPN+1                                     00236500
&ZOPL(&ZOPN)          SETC  ' '                                         00236600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00236700
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00236800
&ZOPD(&ZOPN)          SETC  '++ &ZXASID_LISTSIZE XASID_LISTSIZE F'      00236900
.*                                                                      00237000
.ZI13E                ANOP  ,                                           00237100
.*-------------------------------------------------------------------   00237200
.***AI.L18 ADDR XSTOKEN_LIST A                                          00237300
                      AIF   ('&XSTOKEN_LIST' NE 'NO_STOKEN_LIST').ZI15  00237400
&ZXSTOKEN_LIST        SETC  ''             RESET INPUT/OUTPUT           00237500
.ZI15                 ANOP  ,                                           00237600
.*-------------------------------------------------------------------   00237700
.***AI.L19 ADDR XSTOKEN_LIST A                                          00237800
                      AIF   ('&ZXSTOKEN_LIST' EQ '').ZI15H  NOT USED    00237900
&ZCLNG                SETC  '&XSTOKEN_LIST'                             00238000
&ZCGPR                SETC  '14'                                        00238100
         AIF   ('&XSTOKEN_LIST'(1,1) EQ '(').ZI15F  IN GPR              00238200
.*                                                                      00238300
&ZOPN                 SETA  &ZOPN+1                                     00238400
&ZOPL(&ZOPN)          SETC  ' '                                         00238500
&ZOPO(&ZOPN)          SETC  'LA'                                        00238600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00238700
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN_LIST XSTOKEN_LIST A'          00238800
.*                                                                      00238900
                      AGO   .ZI15G                                      00239000
.*                                                                      00239100
.ZI15F                ANOP  ,                                           00239200
&ZCGPR   SETC  '&XSTOKEN_LIST'(2,K'&XSTOKEN_LIST-2)                     00239300
.*                                                                      00239400
.ZI15G                ANOP  ,                                           00239500
.*                                                                      00239600
&ZOPN                 SETA  &ZOPN+1                                     00239700
&ZOPL(&ZOPN)          SETC  ' '                                         00239800
&ZOPO(&ZOPN)          SETC  'ST'                                        00239900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,40(,1)'                             00240000
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN_LIST XSTOKEN_LIST A'          00240100
.*                                                                      00240200
.ZI15H                ANOP  ,                                           00240300
.*-------------------------------------------------------------------   00240400
.***AI.L25  XSTKN_LISTSIZE F                                            00240500
                      AIF   ('&ZXSTKN_LISTSIZE' EQ '').ZI16E  NOT USED  00240600
                      AIF   ('&ZXSTKN_LISTSIZE' EQ 'OUTPUT').ZI16E      00240700
&ZCGPR                SETC  '&XSTKN_LISTSIZE'                           00240800
.*                                                                      00240900
                      AIF   ('&XSTKN_LISTSIZE'(1,1) NE '(').ZI16B       00241000
&ZCGPR   SETC  '0('.'&XSTKN_LISTSIZE'(2,K'&XSTKN_LISTSIZE-2).')'        00241100
                      AGO   .ZI16D                                      00241200
.ZI16B                ANOP  ,                                           00241300
.*                                                                      00241400
&ZC                   SETC  '&XSTKN_LISTSIZE'(1,1)                      00241500
                      AIF   (T'&ZC NE 'N').ZI16D                        00241600
&ZC                   SETC  '&XSTKN_LISTSIZE'                           00241700
                      AIF   ('&ZC'(K'&ZC,K'&ZC) EQ ')').ZI16D           00241800
&ZCGPR                SETC  '=FL4''&XSTKN_LISTSIZE'''                   00241900
.*                                                                      00242000
.ZI16D                ANOP  ,                                           00242100
.*                                                                      00242200
&ZOPN                 SETA  &ZOPN+1                                     00242300
&ZOPL(&ZOPN)          SETC  ' '                                         00242400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00242500
&ZOPV(&ZOPN)          SETC  '44(4,1),&ZCGPR'                            00242600
&ZOPD(&ZOPN)          SETC  '++ &ZXSTKN_LISTSIZE XSTKN_LISTSIZE F'      00242700
.*                                                                      00242800
.ZI16E                ANOP  ,                                           00242900
.*-------------------------------------------------------------------   00243000
&ZOPN1                SETA &ZOPN                                        00243100
.*******************************************************************    00243200
.***  PROCESS IWMWQWRK OUTPUT PARAMETERS                                00243300
.*******************************************************************    00243400
                      ACTR  10000                                       00243500
.*------------------------------------------------------------------    00243600
.***AO.L02 XQUERYLEN F                                                  00243700
         AIF   ('&ZXQUERYLEN' EQ 'OUTPUT').ZO7A  OUTPUT                 00243800
         AIF   ('&ZXQUERYLEN' NE 'INOUT').ZO7C  INOUT                   00243900
.ZO7A    AIF   ('&XQUERYLEN'(1,1) NE '(').ZO7B  ADDR IN GPR             00244000
&ZCGPR   SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                           00244100
&ZOPN                 SETA  &ZOPN+1                                     00244200
&ZOPL(&ZOPN)          SETC  ' '                                         00244300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00244400
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),8(1)'                          00244500
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00244600
                      AGO   .ZO7C                                       00244700
.*                                                                      00244800
.ZO7B                 ANOP  ,                                           00244900
&ZAWRK   SETA  K'&XQUERYLEN                                             00245000
         AIF   ('&XQUERYLEN'(&ZAWRK,1) NE ')').ZO7G                     00245100
&ZN      SETA  2                                                        00245200
.ZO7H    ANOP                                                           00245300
         AIF   (&ZN GE &ZAWRK).ZO7G                                     00245400
         AIF   ('&XQUERYLEN'(&ZN,1) NE '(').ZO7I                        00245500
&ZC      SETC  '&XQUERYLEN'(1,&ZN).'4'.','                              00245600
&ZC      SETC  '&ZC'.'&XQUERYLEN'(&ZN+1,&ZAWRK-&ZN).',8(1)'             00245700
         AGO   .ZO7J                                                    00245800
.ZO7I    ANOP                                                           00245900
&ZN      SETA  &ZN+1                                                    00246000
         AGO   .ZO7H                                                    00246100
.ZO7G    ANOP                                                           00246200
&ZC      SETC  '&XQUERYLEN.(4),8(1)'                                    00246300
.ZO7J    ANOP                                                           00246400
&ZOPN                 SETA  &ZOPN+1                                     00246500
&ZOPL(&ZOPN)          SETC  ' '                                         00246600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00246700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00246800
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00246900
.ZO7C                 ANOP  ,                                           00247000
.*------------------------------------------------------------------    00247100
.***AO.L02 XASID_SIZENEED F                                             00247200
         AIF   ('&ZXASID_SIZENEED' EQ 'OUTPUT').ZO14A  OUTPUT           00247300
         AIF   ('&ZXASID_SIZENEED' NE 'INOUT').ZO14C  INOUT             00247400
.ZO14A    AIF   ('&XASID_SIZENEED'(1,1) NE '(').ZO14B  ADDR IN GPR      00247500
&ZCGPR   SETC  '&XASID_SIZENEED'(2,K'&XASID_SIZENEED-2)                 00247600
&ZOPN                 SETA  &ZOPN+1                                     00247700
&ZOPL(&ZOPN)          SETC  ' '                                         00247800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00247900
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),36(1)'                         00248000
&ZOPD(&ZOPN)          SETC  '++ XASID_SIZENEED F'                       00248100
                      AGO   .ZO14C                                      00248200
.*                                                                      00248300
.ZO14B                ANOP  ,                                           00248400
&ZAWRK   SETA  K'&XASID_SIZENEED                                        00248500
         AIF   ('&XASID_SIZENEED'(&ZAWRK,1) NE ')').ZO14G               00248600
&ZN      SETA  2                                                        00248700
.ZO14H    ANOP                                                          00248800
         AIF   (&ZN GE &ZAWRK).ZO14G                                    00248900
         AIF   ('&XASID_SIZENEED'(&ZN,1) NE '(').ZO14I                  00249000
&ZC      SETC  '&XASID_SIZENEED'(1,&ZN).'4'.','                         00249100
&ZC      SETC  '&ZC'.'&XASID_SIZENEED'(&ZN+1,&ZAWRK-&ZN).',36(1)'       00249200
         AGO   .ZO14J                                                   00249300
.ZO14I    ANOP                                                          00249400
&ZN      SETA  &ZN+1                                                    00249500
         AGO   .ZO14H                                                   00249600
.ZO14G    ANOP                                                          00249700
&ZC      SETC  '&XASID_SIZENEED.(4),36(1)'                              00249800
.ZO14J    ANOP                                                          00249900
&ZOPN                 SETA  &ZOPN+1                                     00250000
&ZOPL(&ZOPN)          SETC  ' '                                         00250100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00250200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00250300
&ZOPD(&ZOPN)          SETC  '++ XASID_SIZENEED F'                       00250400
.ZO14C                ANOP  ,                                           00250500
.*------------------------------------------------------------------    00250600
.***AO.L02 XSTKN_SIZENEED F                                             00250700
         AIF   ('&ZXSTKN_SIZENEED' EQ 'OUTPUT').ZO17A  OUTPUT           00250800
         AIF   ('&ZXSTKN_SIZENEED' NE 'INOUT').ZO17C  INOUT             00250900
.ZO17A    AIF   ('&XSTKN_SIZENEED'(1,1) NE '(').ZO17B  ADDR IN GPR      00251000
&ZCGPR   SETC  '&XSTKN_SIZENEED'(2,K'&XSTKN_SIZENEED-2)                 00251100
&ZOPN                 SETA  &ZOPN+1                                     00251200
&ZOPL(&ZOPN)          SETC  ' '                                         00251300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00251400
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),48(1)'                         00251500
&ZOPD(&ZOPN)          SETC  '++ XSTKN_SIZENEED F'                       00251600
                      AGO   .ZO17C                                      00251700
.*                                                                      00251800
.ZO17B                ANOP  ,                                           00251900
&ZAWRK   SETA  K'&XSTKN_SIZENEED                                        00252000
         AIF   ('&XSTKN_SIZENEED'(&ZAWRK,1) NE ')').ZO17G               00252100
&ZN      SETA  2                                                        00252200
.ZO17H    ANOP                                                          00252300
         AIF   (&ZN GE &ZAWRK).ZO17G                                    00252400
         AIF   ('&XSTKN_SIZENEED'(&ZN,1) NE '(').ZO17I                  00252500
&ZC      SETC  '&XSTKN_SIZENEED'(1,&ZN).'4'.','                         00252600
&ZC      SETC  '&ZC'.'&XSTKN_SIZENEED'(&ZN+1,&ZAWRK-&ZN).',48(1)'       00252700
         AGO   .ZO17J                                                   00252800
.ZO17I    ANOP                                                          00252900
&ZN      SETA  &ZN+1                                                    00253000
         AGO   .ZO17H                                                   00253100
.ZO17G    ANOP                                                          00253200
&ZC      SETC  '&XSTKN_SIZENEED.(4),48(1)'                              00253300
.ZO17J    ANOP                                                          00253400
&ZOPN                 SETA  &ZOPN+1                                     00253500
&ZOPL(&ZOPN)          SETC  ' '                                         00253600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00253700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00253800
&ZOPD(&ZOPN)          SETC  '++ XSTKN_SIZENEED F'                       00253900
.ZO17C                ANOP  ,                                           00254000
.*------------------------------------------------------------------    00254100
.***AO.L02 XSKIP_REGIONS F                                              00254200
         AIF   ('&ZXSKIP_REGIONS' EQ 'OUTPUT').ZO20A  OUTPUT            00254300
         AIF   ('&ZXSKIP_REGIONS' NE 'INOUT').ZO20C  INOUT              00254400
.ZO20A    AIF   ('&XSKIP_REGIONS'(1,1) NE '(').ZO20B  ADDR IN GPR       00254500
&ZCGPR   SETC  '&XSKIP_REGIONS'(2,K'&XSKIP_REGIONS-2)                   00254600
&ZOPN                 SETA  &ZOPN+1                                     00254700
&ZOPL(&ZOPN)          SETC  ' '                                         00254800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00254900
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),60(1)'                         00255000
&ZOPD(&ZOPN)          SETC  '++ XSKIP_REGIONS F'                        00255100
                      AGO   .ZO20C                                      00255200
.*                                                                      00255300
.ZO20B                ANOP  ,                                           00255400
&ZAWRK   SETA  K'&XSKIP_REGIONS                                         00255500
         AIF   ('&XSKIP_REGIONS'(&ZAWRK,1) NE ')').ZO20G                00255600
&ZN      SETA  2                                                        00255700
.ZO20H    ANOP                                                          00255800
         AIF   (&ZN GE &ZAWRK).ZO20G                                    00255900
         AIF   ('&XSKIP_REGIONS'(&ZN,1) NE '(').ZO20I                   00256000
&ZC      SETC  '&XSKIP_REGIONS'(1,&ZN).'4'.','                          00256100
&ZC      SETC  '&ZC'.'&XSKIP_REGIONS'(&ZN+1,&ZAWRK-&ZN).',60(1)'        00256200
         AGO   .ZO20J                                                   00256300
.ZO20I    ANOP                                                          00256400
&ZN      SETA  &ZN+1                                                    00256500
         AGO   .ZO20H                                                   00256600
.ZO20G    ANOP                                                          00256700
&ZC      SETC  '&XSKIP_REGIONS.(4),60(1)'                               00256800
.ZO20J    ANOP                                                          00256900
&ZOPN                 SETA  &ZOPN+1                                     00257000
&ZOPL(&ZOPN)          SETC  ' '                                         00257100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00257200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00257300
&ZOPD(&ZOPN)          SETC  '++ XSKIP_REGIONS F'                        00257400
.ZO20C                ANOP  ,                                           00257500
.*******************************************************************    00257600
.***AO.X02  RETURN CODE PROCESSING                                      00257700
.*******************************************************************    00257800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00257900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00258000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00258100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00258200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00258300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00258400
&ZOPN                 SETA  &ZOPN+1                                     00258500
&ZOPL(&ZOPN)          SETC  ' '                                         00258600
&ZOPO(&ZOPN)          SETC  'ST'                                        00258700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00258800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00258900
                      AGO   .ZMRETX                                     00259000
.*                                                                      00259100
.ZMRET2               ANOP  ,                                           00259200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00259300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00259400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00259500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00259600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00259700
&ZOPN                 SETA  &ZOPN+1                                     00259800
&ZOPL(&ZOPN)          SETC  ' '                                         00259900
&ZOPO(&ZOPN)          SETC  'LR'                                        00260000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00260100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00260200
.ZMRETX               ANOP  ,                                           00260300
.*******************************************************************    00260400
.***AO.X03  REASON CODE PROCESSING                                      00260500
.*******************************************************************    00260600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00260700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00260800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00260900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00261000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00261100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00261200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00261300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00261400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00261500
&ZOPN                 SETA  &ZOPN+1                                     00261600
&ZOPL(&ZOPN)          SETC  ' '                                         00261700
&ZOPO(&ZOPN)          SETC  'ST'                                        00261800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00261900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00262000
                      AGO   .ZMRSNX                                     00262100
.*                                                                      00262200
.ZMRSN2               ANOP  ,                                           00262300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00262400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00262500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00262600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00262700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00262800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00262900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00263000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00263100
&ZOPN                 SETA  &ZOPN+1                                     00263200
&ZOPL(&ZOPN)          SETC  ' '                                         00263300
&ZOPO(&ZOPN)          SETC  'LR'                                        00263400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00263500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00263600
.ZMRSNX               ANOP  ,                                           00263700
.*******************************************************************    00263800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00263900
.*******************************************************************    00264000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00264100
.*******************************************************************    00264200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00264300
.*******************************************************************    00264400
                      ACTR  10000                                       00264500
.*                                                                      00264600
                      LCLA  &ZLC           COLUMN POSITION              00264700
                      LCLA  &ZOPX          LIST TABLE INDEX             00264800
                      LCLC  &ZLL           LABEL                        00264900
                      LCLC  &ZLOP          OPERATION                    00265000
                      LCLC  &ZLV           VALUE                        00265100
                      LCLC  &ZLD           DESCRIPTION                  00265200
.*                                                                      00265300
&ZOPX                 SETA  1                                           00265400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00265500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00265600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00265700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00265800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00265900
                      AIF   (K'&ZLD LE 0).ZL5                           00266000
&ZLC                  SETA  35             COMMENT COLUMN               00266100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00266200
&ZLC                  SETA  33             COMMMENT COLUMN              00266300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00266400
&ZLV                  SETC  '&ZLV'.' '                                  00266500
                      AGO   .ZL3                                        00266600
.*                                                                      00266700
.ZL4                  ANOP  ,                                           00266800
&ZLV                  SETC  '&ZLV'.' '                                  00266900
.ZL5                  ANOP  ,                                           00267000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00267100
.*                                                                      00267200
&ZLL     &ZLOP &ZLV                                                     00267300
.*                                                                      00267400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00267500
                      AGO   .ZL2           CONTINUE LOOPING             00267600
.*                                                                      00267700
.ZLX                  ANOP  ,                                           00267800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00267900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00268000
         L     14,16(0,0)              GET CVT ADDRESS                  00268100
         TM    CVTOSLV1-CVT(14),X'40'      TEST FOR WLM PRESENCE        00268200
         BO    WLM&SYSNDX              BRANCH WHEN WLM IS PRESENT       00268300
         LA    0,IWMRSNCODENOWLM       SET REASON CODE = NO WLM         00268400
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00268500
         B     END&SYSNDX              BRANCH TO END LABEL              00268600
WLM&SYSNDX DS    0H                    BRANCH LABEL FOR WLM PRESENT     00268700
         L     14,772(14,0)            GET SFT ADDRESS                  00268800
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00268900
         LA    15,19                   GET EX FOR SERVICE ROUTINE       00269000
         OR    14,15                   GET PC NUMBER                    00269100
         PC    0(14)                                                    00269200
END&SYSNDX DS    0H                    END LABEL                        00269300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00269400
.ZLINKX               ANOP  ,                                           00269500
.*******************************************************************    00269600
.***AP.X01  FORMAT GENERATED CODE                                       00269700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00269800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00269900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00270000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00270100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00270200
                      AIF   (K'&ZLD LE 0).ZL51                          00270300
&ZLC                  SETA  35             COMMENT COLUMN               00270400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00270500
&ZLC                  SETA  33             COMMENT COLUMN               00270600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00270700
&ZLV                  SETC  '&ZLV'.' '                                  00270800
                      AGO   .ZL31                                       00270900
.*                                                                      00271000
.ZL41                 ANOP  ,                                           00271100
&ZLV                  SETC  '&ZLV'.' '                                  00271200
.ZL51                 ANOP  ,                                           00271300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00271400
.*                                                                      00271500
&ZLL     &ZLOP &ZLV                                                     00271600
.*                                                                      00271700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00271800
                      AGO   .ZL21          CONTINUE LOOPING             00271900
.*                                                                      00272000
.ZLX1                 ANOP  ,                                           00272100
.*******************************************************************    00272200
.***AP.X02  END OF IWMWQWRK MACRO                                       00272300
&ZIWMWQWRK            SETC  'YES'          SET IWMWQWRK USED            00272400
         POP   PRINT                                                    00272500
*                                            IWMWQWRK-0                 00272600
         SPACE 1                                                        00272700
.ZLX2                 ANOP  ,                                           00272800
         MEND                                                           00272900
**********************************************************************/ 00273000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00273100
*%IWMWQWRK: MACRO KEYS(SEARCH_BY,CONNTKN,LU62_LIST,LU62_LISTSIZE,       00273200
*                 QUERYLEN,SUBSYS,SUBSYSNM,ASID_LIST,ASID_LISTSIZE,     00273300
*                 ASID_SIZENEED,STOKEN_LIST,STKN_LISTSIZE,              00273400
*                 STKN_SIZENEED,SKIP_REGIONS,RETCODE,RSNCODE,MF);       00273500
*  ANS('?'||MACLABEL||' '||'IWMWQWRP '||MACLIST||                       00273600
*         ' '||MACKEYS||';') COL(MACLMAR);                              00273700
*%END IWMWQWRK;                                                         00273800
