*/**** START OF SPECIFICATIONS ****************************************         
***********************************************************************         
*                                                                     *         
*01* MACRO NAME:  SENDREQ                               -08/06/87-<1> *         
*                                                                     *         
*01* DESCRIPTIVE NAME:  MVSSERV Send Request Macro                    *         
*                                                                     *         
* *01* PROPRIETARY STATEMENT=                                         *         
*  **PROPRIETARY_STATEMENT*********************************************         
*                                                                     *         
*                                                                     *         
*   LICENSED MATERIALS - PROPERTY OF IBM                              *         
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                       *         
*   5685-025 (C) COPYRIGHT IBM CORP. 1987, 1991                       *         
*   SEE COPYRIGHT INSTRUCTIONS                                        *         
*                                                                     *         
*   STATUS= HTE23D2                                                   *         
*                                                                     *         
*  **END_OF_PROPRIETARY_STATEMENT**************************************         
*                                                                     *         
*01* FUNCTION:                                                        *         
*                                                                     *         
*      The SENDREQ (send request) macro is an externalized method for *         
*      requesting services and resources from another "local server". *         
*      A "local server" is a server defined to MVSSERV that runs in   *         
*      the same address space as MVSSERV. For example, if an          *         
*      initialization/termination program defines server "A" and      *         
*      server "B", server "A" can make a request (ie, become a        *         
*      requester) of server "B", passing parameters and data, using   *         
*      the SENDREQ macro. The server does not have to be defined by   *         
*      the same initialization/termination program.                   *         
*                                                                     *         
*      Servers, server initialization/termination programs, and       *         
*      user-defined access method drivers (AMDs) can use the SENDREQ  *         
*      macro.  Service requests issued via the SENDREQ macro will be  *         
*      performed synchronously, following the call/return model.      *         
*                                                                     *         
*      The Connectivity Programming Request Block (CPRB), which       *         
*      represents the request and reply, must be obtained by the      *         
*      invoker of SENDREQ on a full word boundary, and its name       *         
*      passed to SENDREQ. The SENDREQ macro expansion will completely *         
*      fill in the CPRB and make the service request.                 *         
*                                                                     *         
*01* INVOCATION REQUIREMENTS:                                         *         
*                                                                     *         
*                                                                     *         
*      Execution Mode:   Task mode.                                   *         
*                                                                     *         
*      Authorization:    Problem or Supervisor state.  Any PSW key.   *         
*                        For TSO/E Release 4, the caller is assumed   *         
*                        to be running problem program state, key 8.  *         
*                        However, this is not a requirement and is    *         
*                        not verified by MVSSERV.                     *         
*                                                                     *         
*      Addressing Mode:  24 or 31 bit addressing mode.                *         
*                                                                     *         
*      ASC mode:         Primary ASC mode.                            *         
*                                                                     *         
*      Serialization:    Enabled.                                     *         
*                                                                     *         
*                                                                     *         
*01* INVOCATION FORMAT:                                               *         
*                                                                     *         
*[xlabel]  SENDREQ     CPRB=xcprb                                     *         
*                     ,CED=xced                                       *         
*                     ,SERVER=xserver                                 *         
*                    [,FUNCTION=xfunction|0]                        *         
*                    [,REQPARM=(xreqparma,xreqparml)]                 *         
*                    [,REQDATA=(xreqdataa,xreqdatal)]                 *         
*                    [,REPPARM=(xrepparma,xrepparml)]                 *         
*                    [,REPDATA=(xrepdataa,xrepdatal)]                 *         
*                    [,RETCODE=xretcode]                              *         
*                    ,MF=(E,xmfctrl,COMPLETE)                      *         
*                    ,MF=(L,xmfctrl,xmfattr|0D)                    *         
*                                                                     *         
*                                                                     *         
*      Where:                                                         *         
*                                                                     *         
*                                                                     *         
*      [xlabel]                                                       *         
*          Is an optional 1 to 8 alphanumeric character input string, *         
*          starting in column 1, that is the assembler label on the   *         
*          SENDREQ macro.                                             *         
*          DEFAULT: Null label.                                       *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      CPRB=xcprb                                                     *         
*          is a required input.  It is the name (RX-type), or address *         
*          in register (2)-(12), of the Connectivity Programming      *         
*          Request Block (CPRB). This control block must be obtained  *         
*          by the invoker of SENDREQ and begin on a fullword          *         
*          boundary. The CHSDCPRB macro maps this control block.      *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      CED=xced                                                       *         
*          is a required input.  It is the name (RX-type), or address *         
*          in register (2)-(12), of the Connectivity Environment      *         
*          Descriptor (CED). The address of the CED is passed to the  *         
*          server or server initialization/termination program as a   *         
*          parameter.                                                 *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      SERVER=xserver                                                 *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required 8 character input that contains the 1-to-8      *         
*          character name of the server being requested.              *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [FUNCTION=xfunction|0]                                       *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          an optional halfword input that contains the function id   *         
*          of the service function being requested.                   *         
*          DEFAULT: 0                                                 *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [REQPARM=(xreqparma,xreqparml)]                                *         
*          Is a group of values that describe the request parameter   *         
*          area to be passed to the server.                           *         
*          DEFAULT: If this operand is omitted then no request        *         
*          parameter area is passed.                                  *         
*                                                                     *         
*        xreqparma                                                    *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required 4 byte input that contains the address of the   *         
*          request parameter list.                                    *         
*          DEFAULT: 0 is stored into the CPRB if the REQPARM is       *         
*          omitted.                                                   *         
*                                                                     *         
*        ,xreqparml                                                   *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required fullword input that describes the request       *         
*          parameter list length.                                     *         
*          DEFAULT: 0                                                 *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [REQDATA=(xreqdataa,xreqdatal)]                                *         
*          Is a group of values that describe the request data area   *         
*          to be passed to the server.                                *         
*          DEFAULT: If this operand is omitted then no request data   *         
*          area is passed.                                            *         
*                                                                     *         
*        xreqdataa                                                    *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required 4 byte input that contains the address of the   *         
*          request data.                                              *         
*          DEFAULT: 0 is stored into the CPRB if the REQDATA is       *         
*          omitted.                                                   *         
*                                                                     *         
*        ,xreqdatal                                                   *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required fullword input that describes the request data  *         
*          length.                                                    *         
*          DEFAULT: 0 is stored into the CPRB if the REQDATA parm is  *         
*          omitted.                                                   *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [REPPARM=(xrepparma,xrepparml)]                                *         
*          Is a group of values that describe the reply parameter     *         
*          area to be passed to the server.                           *         
*          DEFAULT: If this operand is omitted then no reply          *         
*          parameter area is passed.                                  *         
*                                                                     *         
*        xrepparma                                                    *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required 4 byte input that contains the address of the   *         
*          reply parameter list.                                      *         
*          DEFAULT: 0 is stored into the CPRB if the REPPARM is       *         
*          omitted.                                                   *         
*                                                                     *         
*        ,xrepparml                                                   *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required fullword input that describes the reply         *         
*          parameter list length.                                     *         
*          DEFAULT: 0                                                 *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [REPDATA=(xrepdataa,xrepdatal)]                                *         
*          Is a group of values that describe the reply data area to  *         
*          be passed to the server.                                   *         
*          DEFAULT: If this operand is omitted then no reply data     *         
*          area is passed.                                            *         
*                                                                     *         
*        xrepdataa                                                    *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required 4 byte input that contains the address of the   *         
*          reply data.                                                *         
*          DEFAULT: 0 is stored into the CPRB if the REPDATA is       *         
*          omitted.                                                   *         
*                                                                     *         
*        ,xrepdatal                                                   *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          a required fullword input that describes the reply data    *         
*          length.                                                    *         
*          DEFAULT: 0                                                 *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      [RETCODE=xretcode]                                             *         
*          is the name (RX-type), or address in register (2)-(12), of *         
*          an optional fullword output variable that the return code  *         
*          is to be copied into from GPR 15.                          *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*      MF=E|L                                                       *         
*          is a required keyword input which specifies the macro      *         
*          form.                                                      *         
*                                                                     *         
*                                                                     *         
*          MF(E,xmfctrl,COMPLETE)                                   *         
*              specifies the execute form of the macro.  The "E" form *         
*              will generate code to put the parameters into the      *         
*              parameter list specified by xmfctrl and provide full   *         
*              syntax checking with default setting.                  *         
*                                                                     *         
*            ,xmfctrl                                                 *         
*              is a required input.  It is the name (RX-type), or     *         
*              address in register (2)-(12), of a storage area for    *         
*              the parameter list.                                    *         
*                                                                     *         
*            ,COMPLETE                                              *         
*              is an optional keyword input which specifies the       *         
*              degree of macro parameter syntax checking.             *         
*              DEFAULT: COMPLETE                                      *         
*                                                                     *         
*                                                                     *         
*              COMPLETE   Checking for required macro keys is done    *         
*                        and defaults are supplied for optional       *         
*                        parameters that were not specified.          *         
*                                                                     *         
*                                                                     *         
*          MF=(L,xmfctrl,xmfattr|0D)                                *         
*              specifies the list form of the macro.  The "L" form    *         
*              will define an area to be used for the parameter list. *         
*              Any other macro parameters will be flagged as errors.  *         
*                                                                     *         
*            ,xmfctrl                                                 *         
*              is a required input.  It is the name (RX-type) of a    *         
*              storage area for the parameter list.                   *         
*                                                                     *         
*            ,xmfattr|0D                                            *         
*              is an optional 60 character input  string that         *         
*              contains any special attributes for the parameter      *         
*              list.                                                  *         
*              DEFAULT: 0D which indicates the parameter list is to   *         
*              be aligned on a double word boundary.                  *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*01* RETURN CODES:                                                    *         
*                                                                     *         
*                                                                     *         
*       CRBRS     The request was successfully routed.                *         
*                                                                     *         
*       CRBRNS    The request was not successfully routed. The        *         
*                 requester should examine the connectivity           *         
*                 processing return code field in the CPRB            *         
*                 (CRBCRTNC). The connectivity processing return code *         
*                 describes why the request was not routed            *         
*                 successfully.                                       *         
*                                                                     *         
*       CRBRICD   The request is invalid.  This means data fields in  *         
*                 the CPRB were found to contain invalid information  *         
*                 (F4 field, etc.).  The CPRB is invalid so the       *         
*                 CRBCRTNC field is not set.                          *         
*                                                                     *         
*       CRBRICIA  The request is invalid.  This means 24-bit          *         
*                 addresses to the CPRB, or within the CPRB were      *         
*                 checked before being used and determined to be      *         
*                 invalid 24-bit addresses.  The CPRB is invalid so   *         
*                 the CRBCRTNC field is not set.                      *         
*                                                                     *         
*       CRBRICBA  The request is invalid.  This means the address to  *         
*                 the CPRB, or addresses within the CPRB were invalid *         
*                 and caused MVSSERV to ABEND.  The CPRB is invalid   *         
*                 so the CRBCRTNC field is not set.                   *         
*                                                                     *         
*                                                                     *         
*01* REASON CODES:                                                    *         
*                                                                     *         
*                                                                     *         
*       REASON    RETURN                                              *         
*                                                                     *         
*       CODE      CODE      DESCRIPTION                               *         
*                                                                     *         
*                                                                     *         
*                                                                     *         
*       CRBRQSNF  CRBRNS    The server was not found.                 *         
*                                                                     *         
*       CRBRQSNA  CRBRNS    The server was not available.             *         
*                                                                     *         
*       CRBRQSPL  CRBRNS    The reply parameter length was invalid.   *         
*                                                                     *         
*       CRBRQSDL  CRBRNS    The reply data length was invalid.        *         
*                                                                     *         
*       CRBRQSSF  CRBRNS    The server failed.                        *         
*                                                                     *         
*       CRBRQSCF  CRBRNS    MVSSERV failed.                           *         
*                                                                     *         
*                                                                     *         
*01* MODULE TYPE:  ASSEM MACRO                                        *         
*                                                                     *         
*02*   PROCESSOR:  ASSEM                                              *         
*                                                                     *         
*01* COMPONENT:  28507                                                *         
*                                                                     *         
*01* DISTRIBUTION LIBRARY: AMACLIB                                    *         
*                                                                     *         
*01* CHANGE ACTIVITY:                                                 *         
*                                                                     *         
*  FLAG LINE_ITEM   FMID    DATE   PGMR_ID  COMMENT                   *         
*                                                                     *         
*   $A0=MVSSERV   HTE1402  870901  E1402I5:                           *         
*                                            TSO/E Release 4          *         
*                                                                     *         
*01* MACRO USAGE NOTES:                                               *         
*                                                                     *         
*                                                                     *         
*           Printing of the macro expansion  is controlled by the     *         
*           ZPRINT global macro variable.  Any value other than 'NO'  *         
*           will result in the macro expansion being printed.  The    *         
*           default is 'YES'.  The following examples illustrate how  *         
*           the ZPRINT variable should be set.                        *         
*                                                                     *         
*               &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'         *         
*                                                                     *         
*       1.  Must supply a CPRB defined on a fullword boundary.        *         
*                                                                     *         
*       2.  Register 0,1,13-15 will be altered by SENDREQ.            *         
*                                                                     *         
*       3.  Register 13 must point to a 72 word savearea.             *         
*                                                                     *         
*       4.  Register 15 will contain the  MVSSERV  return  code  when *         
*           SENDREQ  completes.  If  the RETCODE operand is used, the *         
*           value of register 15 will be copied  into  the  specified *         
*           variable.    This value can be compared with the constant *         
*           fields that are  defined  in  the  CHSDCPRB  mapping,  as *         
*           described in the RETURN CODES section above.              *         
*                                                                     *         
*       5.  If  the MVSSERV return code is "CRBRNS", then the MVSSERV *         
*           reason  code  (field  CRBCRTNC)  must  be  examined,  and *         
*           compared  against the constant fields that are defined in *         
*           the CHSDCPRB mapping, as described in  the  REASON  CODES *         
*           section above.                                            *         
*                                                                     *         
*                                                                     *         
***********************************************************************         
****** END OF SPECIFICATIONS *****************************************/         
*/*********************************************************************         
         MACRO                                                                  
&XLABEL  SENDREQ &CPRB=,&CED=,&SERVER=,&FUNCTION=,&REQPARM=,&REQDATA=, *        
               &REPPARM=,&REPDATA=,&RETCODE=,&MF=                               
.*                                                                              
.*******************************************************************            
.***AB.01  START OF SENDREQ MACRO CODE                                          
.*******************************************************************            
              LCLC  &M0M0001                 LABEL NAME                         
&M0M0001      SETC  '&XLABEL'                SET LABEL                          
              AIF   (K'&XLABEL NE 0).XLAB2                                      
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL                      
.*                                                                              
.XLAB2        ANOP  ,                                                           
&M0M0001 DC    0H'0'                         SENDREQ-1                          
.*******************************************************************            
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION                
.*******************************************************************            
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                           
              GBLC  &ZTEST      YES=TEST NO=NO TEST                             
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, XB, VM                      
.*                                                                              
              GBLC  &ZSENDREQ   YES=MACRO USED AT LEAST ONCE                    
.*******************************************************************            
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                                  
.*******************************************************************            
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                         
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS                    
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED                      
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR                     
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE                     
              LCLA  &ZAWRK      USED AS A WORK AREA                             
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                          
              LCLA  &ZMACRET    MACRO RETURN CODE                               
&ZMACRET      SETA  0           ASSUME NO ERRORS                                
.*                                                                              
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY              
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()                      
.*******************************************************************            
.***AB.06  ENSURE PRINT IS ON                                                   
.*******************************************************************            
         PUSH  PRINT                                                            
         PRINT ON                                                               
.*******************************************************************            
.***AB.07  DEFINE ALL MACRO VARIABLES                                           
.*******************************************************************            
              LCLC  &XCPRB      ++ NAME                                         
              LCLC  &XCED       ++ NAME                                         
              LCLC  &XSERVER    ++ NAME                                         
              LCLC  &XFUNCTION  ++ NAME                                         
              LCLC  &XREQPARM   ++ NAME                                         
              LCLC  &XREQPARMA  ++ NAME                                         
              LCLC  &XREQPARML  ++ NAME                                         
              LCLC  &XREQDATA   ++ NAME                                         
              LCLC  &XREQDATAA  ++ NAME                                         
              LCLC  &XREQDATAL  ++ NAME                                         
              LCLC  &XREPPARM   ++ NAME                                         
              LCLC  &XREPPARMA  ++ NAME                                         
              LCLC  &XREPPARML  ++ NAME                                         
              LCLC  &XREPDATA   ++ NAME                                         
              LCLC  &XREPDATAA  ++ NAME                                         
              LCLC  &XREPDATAL  ++ NAME                                         
              LCLC  &XRETCODE   ++ NAME                                         
              LCLC  &XMF        ++ VALUE                                        
              LCLC  &XMFCTRL    ++ NAME                                         
              LCLC  &XMFSCK     ++ VALUE                                        
              LCLC  &XMFATTR    ++ VALUE                                        
.*******************************************************************            
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING                   
.*******************************************************************            
              LCLC  &ZXCPRB     ++ INPUT NAME                                   
              LCLC  &ZXCED      ++ INPUT NAME                                   
              LCLC  &ZXSERVER   ++ INPUT NAME                                   
              LCLC  &ZXFUNCTION                 ++ INPUT NAME                   
              LCLC  &ZXREQPARM  ++ INPUT NAME                                   
              LCLC  &ZXREQPARMA                 ++ INPUT NAME                   
              LCLC  &ZXREQPARML                 ++ INPUT NAME                   
              LCLC  &ZXREQDATA  ++ INPUT NAME                                   
              LCLC  &ZXREQDATAA                 ++ INPUT NAME                   
              LCLC  &ZXREQDATAL                 ++ INPUT NAME                   
              LCLC  &ZXREPPARM  ++ INPUT NAME                                   
              LCLC  &ZXREPPARMA                 ++ INPUT NAME                   
              LCLC  &ZXREPPARML                 ++ INPUT NAME                   
              LCLC  &ZXREPDATA  ++ INPUT NAME                                   
              LCLC  &ZXREPDATAA                 ++ INPUT NAME                   
              LCLC  &ZXREPDATAL                 ++ INPUT NAME                   
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                                  
              LCLC  &ZXMF       ++ INPUT VALUE                                  
              LCLC  &ZXMFCTRL   ++ INPUT NAME                                   
              LCLC  &ZXMFSCK    ++ INPUT VALUE                                  
              LCLC  &ZXMFATTR   ++ INPUT VALUE                                  
.********************************************************************           
.***AG.MF01 PROCESS MF MACRO FORMS                                              
.********************************************************************           
              ACTR  1000                                                        
.*------------------------------------------------------------------            
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
&XMF          SETC  ''          INITIALIZE XVARIABLE                            
.*-------------------------------------------------------------------           
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
.ZG54         ANOP  ,                                                           
              AIF   ('&MF(1)' NE 'E').ZG62                                      
&XMF          SETC  'E'         SET KEYWORD                                     
              AIF   (N'&MF LE 3).ZG54A          CK NUM                          
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS "MF"'                                                 
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG54A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                               
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                                   
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                                   
              AIF   (N'&MF GT 1).ZG56B          MULTIPLE PARMS                  
&XMFCTRL      SETC  '&MF'       SET XVARIABLE                                   
.ZG56B        AIF   (K'&MF(2) GT 0).ZG56C                                       
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "MF" KEY, POSITIONAL ARGUMENT 2 IS'                   
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG56C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                          
              AIF   (K'&ZXMFCTRL LE 0).ZG56R    NOT I/O                         
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG56R                              
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                                
              AIF   (K'&ZCGPR GT 2).ZG56Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG56Q     INVALID REG NAME                
.ZG56P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG56R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG56Q                                     
              AIF   ('&ZCGPR' LE '12').ZG56R                                    
.ZG56Q        ANOP  ,                                                           
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG56R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                            
.ZG60A   AIF   ('&MF(3)' NE 'COMPLETE').ZG61A                                   
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                                     
.*-------------------------------------------------------------------           
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD                     
.ZG61A        AIF   (K'&XMFSCK GT 0).ZG61C      KEYWORD                         
              AIF   (K'&MF(3) LE 0).ZG61B                                       
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '                   
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
              MNOTE 8,' &ZMS "COMPLETE".'                                       
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG61B        ANOP  ,                                                           
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                             
.ZG61C        ANOP  ,                                                           
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                                   
.*-------------------------------------------------------------------           
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
.ZG62         ANOP  ,                                                           
              AIF   ('&MF(1)' NE 'L').ZG69                                      
&XMF          SETC  'L'         SET KEYWORD                                     
              AIF   (N'&MF LE 3).ZG62A          CK NUM                          
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS "MF"'                                                 
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG62A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                             
              AIF   (N'&SYSLIST NE 0).ZG62B     POSITIONALS?                    
              AIF   ('&CPRB' NE '').ZG62B       KEYS?                           
              AIF   ('&CED' NE '').ZG62B        KEYS?                           
              AIF   ('&SERVER' NE '').ZG62B     KEYS?                           
              AIF   ('&FUNCTION' NE '').ZG62B   KEYS?                           
              AIF   ('&REQPARM' NE '').ZG62B    KEYS?                           
              AIF   ('&REQDATA' NE '').ZG62B    KEYS?                           
              AIF   ('&REPPARM' NE '').ZG62B    KEYS?                           
              AIF   ('&REPDATA' NE '').ZG62B    KEYS?                           
              AIF   ('&RETCODE' NE '').ZG62B    KEYS?                           
              AGO    .ZG62C     INVOCATION OKAY                                 
.ZG62B        ANOP  ,                                                           
&ZMS          SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE                 
&ZMS          SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                           
&ZMS          SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'                      
              MNOTE 8,' &ZMS ON THE INVOCATION.'                                
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG62C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                               
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                                   
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                                   
              AIF   (N'&MF GT 1).ZG64B          MULTIPLE PARMS                  
&XMFCTRL      SETC  '&MF'       SET XVARIABLE                                   
.ZG64B        AIF   (K'&MF(2) GT 0).ZG64C                                       
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "MF" KEY, POSITIONAL ARGUMENT 2 IS'                   
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG64C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK01 NAME, RQD INPUT, POS(2) -GPR NOT ALLOWED                           
              AIF   (K'&ZXMFCTRL LE 0).ZG64P    NOT I/O                         
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG64P                              
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'                   
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG64P        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                              
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                                   
&XMFATTR      SETC  '0D'        SET DEFAULT                                     
              AIF   (K'&MF(3) LE 0).ZG67B       PARM                            
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                                   
              AIF   (N'&MF GT 1).ZG67B          MULTIPLE PARMS                  
&XMFATTR      SETC  '&MF'       SET XVARIABLE                                   
.ZG67B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                          
              AIF   (K'&ZXMFATTR LE 0).ZG67P    NOT I/O                         
              AIF   ('&XMFATTR'(1,1) NE '(').ZG67P                              
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'                   
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG67P        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                         
              AIF   (K'&ZXMFATTR LE 0).ZG67S    NOT I/O                         
              AIF   (K'&XMFATTR LE 60).ZG67S    LNG OK                          
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'                       
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                          
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG67S        ANOP  ,                                                           
.*------------------------------------------------------------------            
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
.ZG69         ANOP  ,                                                           
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                                   
              AIF   (K'&XMF GT 0).ZG69E         VALID ARG                       
              AIF   (T'&MF EQ 'O').ZG69D        OMITTED                         
&ZASYSLNDX    SETA  0                                                           
.ZG69A        ANOP  ,           POSITIONAL MACRO KEY                            
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                                
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C                            
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'MF').ZG69A                      
.ZG69B        ANOP  ,                                                           
&ZXMF         SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE                   
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                                     
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
              AGO   .ZG69E                                                      
.ZG69C        ANOP  ,                                                           
&ZXMF         SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                                   
&ZMS          SETC  '&ZMS.&MF"'                                                 
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '                   
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
&ZMS          SETC  '&ZMS "E"'  VALID KEYWORD                                   
              MNOTE 8,' &ZMS OR "L".'                                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
              AGO   .ZG69E                                                      
.ZG69D        ANOP  ,                                                           
&XMF          SETC  'E'         SET DEFAULT KEYWORD                             
.ZG69E        ANOP  ,                                                           
.*------------------------------------------------------------------            
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL                   
              AIF   (K'&MF(1) GT 0).ZG69F       PARM                            
&XMF          SETC  ''          ENSURE NULL KEYWORD                             
&ZXMF         SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRKWA* MNOTE                                   
&ZMS          SETC  '&ZMS "MF" KEY AND ITS ARGUMENT ARE'                        
&ZMS          SETC  '&ZMS REQUIRED.'                                            
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                         
&ZMS          SETC  '&ZMS "E"'  VALID KEYWORD                                   
              MNOTE 8,' &ZMS OR "L".'                                           
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG69F        ANOP  ,                                                           
.********************************************************************           
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                         
.********************************************************************           
              ACTR  1000                                                        
.*-------------------------------------------------------------------           
.***AG.MF03 MF=(LE)                                                             
              AIF   ('&XMF' NE 'E').ZGMF3                                       
              AIF   ('&XMFSCK' EQ 'COMPLETE').ZGMF4                             
.ZGMF3        AGO   .ZGMFX      NO FULL SYNTAX CHECK                            
.*                                                                              
.ZGMF4        ANOP  ,           FULL SYNTAX CHECKING                            
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                             
              AIF   (N'&CPRB LE 1).ZG2A         CK NUM                          
&ZMS          SETC  '"CPRB='    *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CPRB"'                                               
&ZMS          SETC  '&ZMS "CPRB"'                                               
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG2A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                                 
&ZXCPRB       SETC  'INPUT'     SET IN/OUTPUT                                   
&XCPRB        SETC  '&CPRB(1)'  SET XVARIABLE                                   
              AIF   (N'&CPRB GT 1).ZG2B         MULTIPLE PARMS                  
&XCPRB        SETC  '&CPRB'     SET XVARIABLE                                   
.ZG2B         AIF   (K'&CPRB(1) GT 0).ZG2C                                      
&ZXCPRB       SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "CPRB" KEY AND ITS ARGUMENT ARE'                      
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG2C         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXCPRB LE 0).ZG2R       NOT I/O                         
              AIF   ('&XCPRB'(1,1) NE '(').ZG2R                                 
&ZCGPR        SETC  '&XCPRB'(2,K'&XCPRB-2)                                      
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                                 
              AIF   (K'&ZCGPR GT 2).ZG2Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME                
.ZG2P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG2Q                                      
              AIF   ('&ZCGPR' LE '12').ZG2R                                     
.ZG2Q         ANOP  ,                                                           
&ZMS          SETC  '"CPRB='    *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CPRB"'                                               
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG2R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                             
              AIF   (N'&CED LE 1).ZG5A          CK NUM                          
&ZMS          SETC  '"CED='     *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS "CED"'                                                
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG5A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                                 
&ZXCED        SETC  'INPUT'     SET IN/OUTPUT                                   
&XCED         SETC  '&CED(1)'   SET XVARIABLE                                   
              AIF   (N'&CED GT 1).ZG5B          MULTIPLE PARMS                  
&XCED         SETC  '&CED'      SET XVARIABLE                                   
.ZG5B         AIF   (K'&CED(1) GT 0).ZG5C                                       
&ZXCED        SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "CED" KEY AND ITS ARGUMENT ARE'                       
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG5C         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXCED LE 0).ZG5R        NOT I/O                         
              AIF   ('&XCED'(1,1) NE '(').ZG5R                                  
&ZCGPR        SETC  '&XCED'(2,K'&XCED-2)                                        
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                                 
              AIF   (K'&ZCGPR GT 2).ZG5Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME                
.ZG5P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG5Q                                      
              AIF   ('&ZCGPR' LE '12').ZG5R                                     
.ZG5Q         ANOP  ,                                                           
&ZMS          SETC  '"CED='     *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG5R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                             
              AIF   (N'&SERVER LE 1).ZG8A       CK NUM                          
&ZMS          SETC  '"SERVER='  *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&SERVER"'                                             
&ZMS          SETC  '&ZMS "SERVER"'                                             
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG8A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                                 
&ZXSERVER     SETC  'INPUT'     SET IN/OUTPUT                                   
&XSERVER      SETC  '&SERVER(1)'                SET XVARIABLE                   
              AIF   (N'&SERVER GT 1).ZG8B       MULTIPLE PARMS                  
&XSERVER      SETC  '&SERVER'   SET XVARIABLE                                   
.ZG8B         AIF   (K'&SERVER(1) GT 0).ZG8C                                    
&ZXSERVER     SETC  ''          RESET IN/OUTPUT                                 
&ZMS          SETC  'THE'       *KRQDA* MNOTE                                   
&ZMS          SETC  '&ZMS "SERVER" KEY AND ITS ARGUMENT ARE'                    
              MNOTE 8,' &ZMS REQUIRED.'                                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG8C         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXSERVER LE 0).ZG8R     NOT I/O                         
              AIF   ('&XSERVER'(1,1) NE '(').ZG8R                               
&ZCGPR        SETC  '&XSERVER'(2,K'&XSERVER-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                                 
              AIF   (K'&ZCGPR GT 2).ZG8Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME                
.ZG8P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG8Q                                      
              AIF   ('&ZCGPR' LE '12').ZG8R                                     
.ZG8Q         ANOP  ,                                                           
&ZMS          SETC  '"SERVER='  *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&SERVER"'                                             
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG8R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                             
              AIF   (N'&FUNCTION LE 1).ZG11A    CK NUM                          
&ZMS          SETC  '"FUNCTION='                *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&FUNCTION"'                                           
&ZMS          SETC  '&ZMS "FUNCTION"'                                           
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG11A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                                 
&ZXFUNCTION   SETC  'INPUT'     SET IN/OUTPUT                                   
&XFUNCTION    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&FUNCTION(1) LE 0).ZG11B  PARM                           
&XFUNCTION    SETC  '&FUNCTION(1)'              SET XVARIABLE                   
              AIF   (N'&FUNCTION GT 1).ZG11B    MULTIPLE PARMS                  
&XFUNCTION    SETC  '&FUNCTION'                 SET XVARIABLE                   
.ZG11B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXFUNCTION LE 0).ZG11R  NOT I/O                         
              AIF   ('&XFUNCTION'(1,1) NE '(').ZG11R                            
&ZCGPR        SETC  '&XFUNCTION'(2,K'&XFUNCTION-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                                
              AIF   (K'&ZCGPR GT 2).ZG11Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME                
.ZG11P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG11Q                                     
              AIF   ('&ZCGPR' LE '12').ZG11R                                    
.ZG11Q        ANOP  ,                                                           
&ZMS          SETC  '"FUNCTION='                *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&FUNCTION"'                                           
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG11R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR04 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REQPARM LE 2).ZG14A     CK NUM                          
&ZMS          SETC  '"REQPARM='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQPARM"'                                            
&ZMS          SETC  '&ZMS "REQPARM"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG14A        AIF   (K'&REQPARM LE 0).ZG14B     CK PARM                         
&XREQPARM     SETC  'REQPARM'   SET XVARIABLE                                   
&ZXREQPARM    SETC  'INPUT'     SET IN/OUTPUT                                   
.ZG14B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(1) -XVARIABLE                           
&ZXREQPARMA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQPARMA    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REQPARM(1) LE 0).ZG16B  PARM                            
&XREQPARMA    SETC  '&REQPARM(1)'               SET XVARIABLE                   
              AIF   (N'&REQPARM GT 1).ZG16B     MULTIPLE PARMS                  
&XREQPARMA    SETC  '&REQPARM'  SET XVARIABLE                                   
.ZG16B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(1) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREQPARMA LE 0).ZG16R  NOT I/O                         
              AIF   ('&XREQPARMA'(1,1) NE '(').ZG16R                            
&ZCGPR        SETC  '&XREQPARMA'(2,K'&XREQPARMA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                                
              AIF   (K'&ZCGPR GT 2).ZG16Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG16Q     INVALID REG NAME                
.ZG16P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG16R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG16Q                                     
              AIF   ('&ZCGPR' LE '12').ZG16R                                    
.ZG16Q        ANOP  ,                                                           
&ZMS          SETC  '"REQPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG16R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                           
&ZXREQPARML   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQPARML    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REQPARM(2) LE 0).ZG19B  PARM                            
&XREQPARML    SETC  '&REQPARM(2)'               SET XVARIABLE                   
              AIF   (N'&REQPARM GT 1).ZG19B     MULTIPLE PARMS                  
&XREQPARML    SETC  '&REQPARM'  SET XVARIABLE                                   
.ZG19B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREQPARML LE 0).ZG19R  NOT I/O                         
              AIF   ('&XREQPARML'(1,1) NE '(').ZG19R                            
&ZCGPR        SETC  '&XREQPARML'(2,K'&XREQPARML-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                                
              AIF   (K'&ZCGPR GT 2).ZG19Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG19Q     INVALID REG NAME                
.ZG19P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG19R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG19Q                                     
              AIF   ('&ZCGPR' LE '12').ZG19R                                    
.ZG19Q        ANOP  ,                                                           
&ZMS          SETC  '"REQPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG19R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR04 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REQDATA LE 2).ZG23A     CK NUM                          
&ZMS          SETC  '"REQDATA='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQDATA"'                                            
&ZMS          SETC  '&ZMS "REQDATA"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG23A        AIF   (K'&REQDATA LE 0).ZG23B     CK PARM                         
&XREQDATA     SETC  'REQDATA'   SET XVARIABLE                                   
&ZXREQDATA    SETC  'INPUT'     SET IN/OUTPUT                                   
.ZG23B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(1) -XVARIABLE                           
&ZXREQDATAA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQDATAA    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REQDATA(1) LE 0).ZG25B  PARM                            
&XREQDATAA    SETC  '&REQDATA(1)'               SET XVARIABLE                   
              AIF   (N'&REQDATA GT 1).ZG25B     MULTIPLE PARMS                  
&XREQDATAA    SETC  '&REQDATA'  SET XVARIABLE                                   
.ZG25B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(1) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREQDATAA LE 0).ZG25R  NOT I/O                         
              AIF   ('&XREQDATAA'(1,1) NE '(').ZG25R                            
&ZCGPR        SETC  '&XREQDATAA'(2,K'&XREQDATAA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                                
              AIF   (K'&ZCGPR GT 2).ZG25Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG25Q     INVALID REG NAME                
.ZG25P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG25R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG25Q                                     
              AIF   ('&ZCGPR' LE '12').ZG25R                                    
.ZG25Q        ANOP  ,                                                           
&ZMS          SETC  '"REQDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG25R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                           
&ZXREQDATAL   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQDATAL    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REQDATA(2) LE 0).ZG28B  PARM                            
&XREQDATAL    SETC  '&REQDATA(2)'               SET XVARIABLE                   
              AIF   (N'&REQDATA GT 1).ZG28B     MULTIPLE PARMS                  
&XREQDATAL    SETC  '&REQDATA'  SET XVARIABLE                                   
.ZG28B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREQDATAL LE 0).ZG28R  NOT I/O                         
              AIF   ('&XREQDATAL'(1,1) NE '(').ZG28R                            
&ZCGPR        SETC  '&XREQDATAL'(2,K'&XREQDATAL-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                                
              AIF   (K'&ZCGPR GT 2).ZG28Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG28Q     INVALID REG NAME                
.ZG28P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG28R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG28Q                                     
              AIF   ('&ZCGPR' LE '12').ZG28R                                    
.ZG28Q        ANOP  ,                                                           
&ZMS          SETC  '"REQDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG28R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR04 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REPPARM LE 2).ZG32A     CK NUM                          
&ZMS          SETC  '"REPPARM='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPPARM"'                                            
&ZMS          SETC  '&ZMS "REPPARM"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG32A        AIF   (K'&REPPARM LE 0).ZG32B     CK PARM                         
&XREPPARM     SETC  'REPPARM'   SET XVARIABLE                                   
&ZXREPPARM    SETC  'INPUT'     SET IN/OUTPUT                                   
.ZG32B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(1) -XVARIABLE                           
&ZXREPPARMA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPPARMA    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REPPARM(1) LE 0).ZG34B  PARM                            
&XREPPARMA    SETC  '&REPPARM(1)'               SET XVARIABLE                   
              AIF   (N'&REPPARM GT 1).ZG34B     MULTIPLE PARMS                  
&XREPPARMA    SETC  '&REPPARM'  SET XVARIABLE                                   
.ZG34B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(1) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREPPARMA LE 0).ZG34R  NOT I/O                         
              AIF   ('&XREPPARMA'(1,1) NE '(').ZG34R                            
&ZCGPR        SETC  '&XREPPARMA'(2,K'&XREPPARMA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                                
              AIF   (K'&ZCGPR GT 2).ZG34Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG34Q     INVALID REG NAME                
.ZG34P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG34R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG34Q                                     
              AIF   ('&ZCGPR' LE '12').ZG34R                                    
.ZG34Q        ANOP  ,                                                           
&ZMS          SETC  '"REPPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG34R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                           
&ZXREPPARML   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPPARML    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REPPARM(2) LE 0).ZG37B  PARM                            
&XREPPARML    SETC  '&REPPARM(2)'               SET XVARIABLE                   
              AIF   (N'&REPPARM GT 1).ZG37B     MULTIPLE PARMS                  
&XREPPARML    SETC  '&REPPARM'  SET XVARIABLE                                   
.ZG37B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREPPARML LE 0).ZG37R  NOT I/O                         
              AIF   ('&XREPPARML'(1,1) NE '(').ZG37R                            
&ZCGPR        SETC  '&XREPPARML'(2,K'&XREPPARML-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                                
              AIF   (K'&ZCGPR GT 2).ZG37Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG37Q     INVALID REG NAME                
.ZG37P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG37R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG37Q                                     
              AIF   ('&ZCGPR' LE '12').ZG37R                                    
.ZG37Q        ANOP  ,                                                           
&ZMS          SETC  '"REPPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG37R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR04 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REPDATA LE 2).ZG41A     CK NUM                          
&ZMS          SETC  '"REPDATA='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPDATA"'                                            
&ZMS          SETC  '&ZMS "REPDATA"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG41A        AIF   (K'&REPDATA LE 0).ZG41B     CK PARM                         
&XREPDATA     SETC  'REPDATA'   SET XVARIABLE                                   
&ZXREPDATA    SETC  'INPUT'     SET IN/OUTPUT                                   
.ZG41B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(1) -XVARIABLE                           
&ZXREPDATAA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPDATAA    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REPDATA(1) LE 0).ZG43B  PARM                            
&XREPDATAA    SETC  '&REPDATA(1)'               SET XVARIABLE                   
              AIF   (N'&REPDATA GT 1).ZG43B     MULTIPLE PARMS                  
&XREPDATAA    SETC  '&REPDATA'  SET XVARIABLE                                   
.ZG43B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(1) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREPDATAA LE 0).ZG43R  NOT I/O                         
              AIF   ('&XREPDATAA'(1,1) NE '(').ZG43R                            
&ZCGPR        SETC  '&XREPDATAA'(2,K'&XREPDATAA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                                
              AIF   (K'&ZCGPR GT 2).ZG43Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG43Q     INVALID REG NAME                
.ZG43P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG43R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG43Q                                     
              AIF   ('&ZCGPR' LE '12').ZG43R                                    
.ZG43Q        ANOP  ,                                                           
&ZMS          SETC  '"REPDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG43R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR13 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                           
&ZXREPDATAL   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPDATAL    SETC  '0'         SET DEFAULT                                     
              AIF   (K'&REPDATA(2) LE 0).ZG46B  PARM                            
&XREPDATAL    SETC  '&REPDATA(2)'               SET XVARIABLE                   
              AIF   (N'&REPDATA GT 1).ZG46B     MULTIPLE PARMS                  
&XREPDATAL    SETC  '&REPDATA'  SET XVARIABLE                                   
.ZG46B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE                      
              AIF   (K'&ZXREPDATAL LE 0).ZG46R  NOT I/O                         
              AIF   ('&XREPDATAL'(1,1) NE '(').ZG46R                            
&ZCGPR        SETC  '&XREPDATAL'(2,K'&XREPDATAL-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                                
              AIF   (K'&ZCGPR GT 2).ZG46Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG46Q     INVALID REG NAME                
.ZG46P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG46R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG46Q                                     
              AIF   ('&ZCGPR' LE '12').ZG46R                                    
.ZG46Q        ANOP  ,                                                           
&ZMS          SETC  '"REPDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG46R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                            
              AIF   (N'&RETCODE LE 1).ZG50A     CK NUM                          
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS "RETCODE"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG50A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                                
              AIF   (K'&RETCODE(1) LE 0).ZG50C  NO PARM                         
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                                      
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE                   
              AIF   (N'&RETCODE GT 1).ZG50C     MULTIPLE PARMS                  
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                                   
.ZG50C        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                           
              AIF   (K'&ZXRETCODE LE 0).ZG50R   NOT I/O                         
              AIF   ('&XRETCODE'(1,1) NE '(').ZG50R                             
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                                
              AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                                
              AIF   (K'&ZCGPR GT 2).ZG50Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZG50Q     INVALID REG NAME                
.ZG50P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZG50R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZG50Q                                     
              AIF   ('&ZCGPR' LE '12').ZG50R                                    
.ZG50Q        ANOP  ,                                                           
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZG50R        ANOP  ,                                                           
.******************************************************************             
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                                
.******************************************************************             
              ACTR  1000                                                        
.*----------------------------------------------------------------***           
.***AH.P02 EXTRA POSITIONALS                                                    
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS                       
&ZCVAL        SETC  ''          ERROR FIELD                                     
&ZAWRK        SETA  0           POSITIONAL NUMBER                               
.ZGLIST2      ANOP  ,                                                           
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                                 
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                        
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                           
              AGO   .ZGLIST2                                                    
.*                                                                              
.ZGLIST3      ANOP  ,                                                           
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA                     
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE                   
&ZMS          SETC  '&ZMS "&ZCVAL"'                                             
&ZMS          SETC  '&ZMS CANNOT BE USED.'                                      
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                              
              MNOTE 8,' &ZMS ARE ALLOWED.'                                      
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZGLISTX      ANOP  ,                                                           
&ZASYSLNDX    SETA  0                                                           
.*-------------------------------------------------------------------           
.***AG.MF04 MF=(LE)                                                             
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                        
.********************************************************************           
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                                     
.********************************************************************           
              ACTR  1000                                                        
.*-------------------------------------------------------------------           
.***AE.MF01 MF=(LE)                                                             
              AIF   ('&XMF' NE 'E').ZEMF3                                       
              AIF   ('&XMFSCK' NE 'COMPLETE').ZEMF4                             
.ZEMF3        AGO   .ZEMFX      NO PARTIAL SYNTAX CHECK                         
.*                                                                              
.ZEMF4        ANOP  ,           PARTIAL SYNTAX CHECKING                         
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                                  
              AIF   (N'&CPRB LE 1).ZE2A         CK NUM                          
&ZMS          SETC  '"CPRB='    *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CPRB"'                                               
&ZMS          SETC  '&ZMS "CPRB"'                                               
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE2A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                             
              AIF   (K'&CPRB(1) LE 0).ZE2B      NO PRM                          
&ZXCPRB       SETC  'INPUT'     SET IN/OUTPUT                                   
&XCPRB        SETC  '&CPRB(1)'  SET XVARIABLE                                   
              AIF   (N'&CPRB GT 1).ZE2B         MULTIPLE PARMS                  
&XCPRB        SETC  '&CPRB'     SET XVARIABLE                                   
.ZE2B         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXCPRB LE 0).ZE2R       NOT I/O                         
              AIF   ('&XCPRB'(1,1) NE '(').ZE2R                                 
&ZCGPR        SETC  '&XCPRB'(2,K'&XCPRB-2)                                      
              AIF   ('&ZCGPR'(1,1) NE '0').ZE2P                                 
              AIF   (K'&ZCGPR GT 2).ZE2Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE2Q      INVALID REG NAME                
.ZE2P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE2R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE2Q                                      
              AIF   ('&ZCGPR' LE '12').ZE2R                                     
.ZE2Q         ANOP  ,                                                           
&ZMS          SETC  '"CPRB='    *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CPRB"'                                               
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE2R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                                  
              AIF   (N'&CED LE 1).ZE5A          CK NUM                          
&ZMS          SETC  '"CED='     *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS "CED"'                                                
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE5A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                             
              AIF   (K'&CED(1) LE 0).ZE5B       NO PRM                          
&ZXCED        SETC  'INPUT'     SET IN/OUTPUT                                   
&XCED         SETC  '&CED(1)'   SET XVARIABLE                                   
              AIF   (N'&CED GT 1).ZE5B          MULTIPLE PARMS                  
&XCED         SETC  '&CED'      SET XVARIABLE                                   
.ZE5B         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXCED LE 0).ZE5R        NOT I/O                         
              AIF   ('&XCED'(1,1) NE '(').ZE5R                                  
&ZCGPR        SETC  '&XCED'(2,K'&XCED-2)                                        
              AIF   ('&ZCGPR'(1,1) NE '0').ZE5P                                 
              AIF   (K'&ZCGPR GT 2).ZE5Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE5Q      INVALID REG NAME                
.ZE5P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE5R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE5Q                                      
              AIF   ('&ZCGPR' LE '12').ZE5R                                     
.ZE5Q         ANOP  ,                                                           
&ZMS          SETC  '"CED='     *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&CED"'                                                
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE5R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                                  
              AIF   (N'&SERVER LE 1).ZE8A       CK NUM                          
&ZMS          SETC  '"SERVER='  *KPOSA* MNOTE                                   
&ZMS          SETC  '&ZMS.&SERVER"'                                             
&ZMS          SETC  '&ZMS "SERVER"'                                             
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE8A         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                             
              AIF   (K'&SERVER(1) LE 0).ZE8B    NO PRM                          
&ZXSERVER     SETC  'INPUT'     SET IN/OUTPUT                                   
&XSERVER      SETC  '&SERVER(1)'                SET XVARIABLE                   
              AIF   (N'&SERVER GT 1).ZE8B       MULTIPLE PARMS                  
&XSERVER      SETC  '&SERVER'   SET XVARIABLE                                   
.ZE8B         ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXSERVER LE 0).ZE8R     NOT I/O                         
              AIF   ('&XSERVER'(1,1) NE '(').ZE8R                               
&ZCGPR        SETC  '&XSERVER'(2,K'&XSERVER-2)                                  
              AIF   ('&ZCGPR'(1,1) NE '0').ZE8P                                 
              AIF   (K'&ZCGPR GT 2).ZE8Q                                        
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE8Q      INVALID REG NAME                
.ZE8P         ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE8R      NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE8Q                                      
              AIF   ('&ZCGPR' LE '12').ZE8R                                     
.ZE8Q         ANOP  ,                                                           
&ZMS          SETC  '"SERVER='  *KGPRA* MNOTE                                   
&ZMS          SETC  '&ZMS.&SERVER"'                                             
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE8R         ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                                  
              AIF   (N'&FUNCTION LE 1).ZE11A    CK NUM                          
&ZMS          SETC  '"FUNCTION='                *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&FUNCTION"'                                           
&ZMS          SETC  '&ZMS "FUNCTION"'                                           
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE11A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                             
              AIF   (K'&FUNCTION(1) LE 0).ZE11B NO PRM                          
&ZXFUNCTION   SETC  'INPUT'     SET IN/OUTPUT                                   
&XFUNCTION    SETC  '&FUNCTION(1)'              SET XVARIABLE                   
              AIF   (N'&FUNCTION GT 1).ZE11B    MULTIPLE PARMS                  
&XFUNCTION    SETC  '&FUNCTION'                 SET XVARIABLE                   
.ZE11B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                            
              AIF   (K'&ZXFUNCTION LE 0).ZE11R  NOT I/O                         
              AIF   ('&XFUNCTION'(1,1) NE '(').ZE11R                            
&ZCGPR        SETC  '&XFUNCTION'(2,K'&XFUNCTION-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE11P                                
              AIF   (K'&ZCGPR GT 2).ZE11Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE11Q     INVALID REG NAME                
.ZE11P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE11R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE11Q                                     
              AIF   ('&ZCGPR' LE '12').ZE11R                                    
.ZE11Q        ANOP  ,                                                           
&ZMS          SETC  '"FUNCTION='                *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&FUNCTION"'                                           
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE11R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR02 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REQPARM LE 2).ZE14A     CK NUM                          
&ZMS          SETC  '"REQPARM='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQPARM"'                                            
&ZMS          SETC  '&ZMS "REQPARM"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE14A        AIF   (K'&REQPARM LE 0).ZE14B     CK PARM                         
&ZXREQPARM    SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQPARM     SETC  'REQPARM'   SET XVARIABLE                                   
.ZE14B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(1) -XVAR ARGUMENT                           
              AIF   (K'&REQPARM(1) LE 0).ZE16B  NO PRM                          
&ZXREQPARMA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQPARMA    SETC  '&REQPARM(1)'               SET XVARIABLE                   
              AIF   (N'&REQPARM GT 1).ZE16B     MULTIPLE PARMS                  
&XREQPARMA    SETC  '&REQPARM'  SET XVARIABLE                                   
.ZE16B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(1) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREQPARMA LE 0).ZE16R  NOT I/O                         
              AIF   ('&XREQPARMA'(1,1) NE '(').ZE16R                            
&ZCGPR        SETC  '&XREQPARMA'(2,K'&XREQPARMA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE16P                                
              AIF   (K'&ZCGPR GT 2).ZE16Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE16Q     INVALID REG NAME                
.ZE16P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE16R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE16Q                                     
              AIF   ('&ZCGPR' LE '12').ZE16R                                    
.ZE16Q        ANOP  ,                                                           
&ZMS          SETC  '"REQPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE16R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(2) -XVAR ARGUMENT                           
              AIF   (K'&REQPARM(2) LE 0).ZE19B  NO PRM                          
&ZXREQPARML   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQPARML    SETC  '&REQPARM(2)'               SET XVARIABLE                   
              AIF   (N'&REQPARM GT 1).ZE19B     MULTIPLE PARMS                  
&XREQPARML    SETC  '&REQPARM'  SET XVARIABLE                                   
.ZE19B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREQPARML LE 0).ZE19R  NOT I/O                         
              AIF   ('&XREQPARML'(1,1) NE '(').ZE19R                            
&ZCGPR        SETC  '&XREQPARML'(2,K'&XREQPARML-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE19P                                
              AIF   (K'&ZCGPR GT 2).ZE19Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE19Q     INVALID REG NAME                
.ZE19P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE19R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE19Q                                     
              AIF   ('&ZCGPR' LE '12').ZE19R                                    
.ZE19Q        ANOP  ,                                                           
&ZMS          SETC  '"REQPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE19R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR02 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REQDATA LE 2).ZE23A     CK NUM                          
&ZMS          SETC  '"REQDATA='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQDATA"'                                            
&ZMS          SETC  '&ZMS "REQDATA"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE23A        AIF   (K'&REQDATA LE 0).ZE23B     CK PARM                         
&ZXREQDATA    SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQDATA     SETC  'REQDATA'   SET XVARIABLE                                   
.ZE23B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(1) -XVAR ARGUMENT                           
              AIF   (K'&REQDATA(1) LE 0).ZE25B  NO PRM                          
&ZXREQDATAA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQDATAA    SETC  '&REQDATA(1)'               SET XVARIABLE                   
              AIF   (N'&REQDATA GT 1).ZE25B     MULTIPLE PARMS                  
&XREQDATAA    SETC  '&REQDATA'  SET XVARIABLE                                   
.ZE25B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(1) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREQDATAA LE 0).ZE25R  NOT I/O                         
              AIF   ('&XREQDATAA'(1,1) NE '(').ZE25R                            
&ZCGPR        SETC  '&XREQDATAA'(2,K'&XREQDATAA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE25P                                
              AIF   (K'&ZCGPR GT 2).ZE25Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE25Q     INVALID REG NAME                
.ZE25P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE25R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE25Q                                     
              AIF   ('&ZCGPR' LE '12').ZE25R                                    
.ZE25Q        ANOP  ,                                                           
&ZMS          SETC  '"REQDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE25R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(2) -XVAR ARGUMENT                           
              AIF   (K'&REQDATA(2) LE 0).ZE28B  NO PRM                          
&ZXREQDATAL   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREQDATAL    SETC  '&REQDATA(2)'               SET XVARIABLE                   
              AIF   (N'&REQDATA GT 1).ZE28B     MULTIPLE PARMS                  
&XREQDATAL    SETC  '&REQDATA'  SET XVARIABLE                                   
.ZE28B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREQDATAL LE 0).ZE28R  NOT I/O                         
              AIF   ('&XREQDATAL'(1,1) NE '(').ZE28R                            
&ZCGPR        SETC  '&XREQDATAL'(2,K'&XREQDATAL-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE28P                                
              AIF   (K'&ZCGPR GT 2).ZE28Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE28Q     INVALID REG NAME                
.ZE28P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE28R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE28Q                                     
              AIF   ('&ZCGPR' LE '12').ZE28R                                    
.ZE28Q        ANOP  ,                                                           
&ZMS          SETC  '"REQDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REQDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE28R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR02 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REPPARM LE 2).ZE32A     CK NUM                          
&ZMS          SETC  '"REPPARM='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPPARM"'                                            
&ZMS          SETC  '&ZMS "REPPARM"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE32A        AIF   (K'&REPPARM LE 0).ZE32B     CK PARM                         
&ZXREPPARM    SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPPARM     SETC  'REPPARM'   SET XVARIABLE                                   
.ZE32B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(1) -XVAR ARGUMENT                           
              AIF   (K'&REPPARM(1) LE 0).ZE34B  NO PRM                          
&ZXREPPARMA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPPARMA    SETC  '&REPPARM(1)'               SET XVARIABLE                   
              AIF   (N'&REPPARM GT 1).ZE34B     MULTIPLE PARMS                  
&XREPPARMA    SETC  '&REPPARM'  SET XVARIABLE                                   
.ZE34B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(1) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREPPARMA LE 0).ZE34R  NOT I/O                         
              AIF   ('&XREPPARMA'(1,1) NE '(').ZE34R                            
&ZCGPR        SETC  '&XREPPARMA'(2,K'&XREPPARMA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE34P                                
              AIF   (K'&ZCGPR GT 2).ZE34Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE34Q     INVALID REG NAME                
.ZE34P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE34R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE34Q                                     
              AIF   ('&ZCGPR' LE '12').ZE34R                                    
.ZE34Q        ANOP  ,                                                           
&ZMS          SETC  '"REPPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE34R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(2) -XVAR ARGUMENT                           
              AIF   (K'&REPPARM(2) LE 0).ZE37B  NO PRM                          
&ZXREPPARML   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPPARML    SETC  '&REPPARM(2)'               SET XVARIABLE                   
              AIF   (N'&REPPARM GT 1).ZE37B     MULTIPLE PARMS                  
&XREPPARML    SETC  '&REPPARM'  SET XVARIABLE                                   
.ZE37B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREPPARML LE 0).ZE37R  NOT I/O                         
              AIF   ('&XREPPARML'(1,1) NE '(').ZE37R                            
&ZCGPR        SETC  '&XREPPARML'(2,K'&XREPPARML-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE37P                                
              AIF   (K'&ZCGPR GT 2).ZE37Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE37Q     INVALID REG NAME                
.ZE37P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE37R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE37Q                                     
              AIF   ('&ZCGPR' LE '12').ZE37R                                    
.ZE37Q        ANOP  ,                                                           
&ZMS          SETC  '"REPPARM='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPPARM"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE37R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR02 NAME, OPT INPUT, KEYS -NON-XVAR KEY                              
              AIF   (N'&REPDATA LE 2).ZE41A     CK NUM                          
&ZMS          SETC  '"REPDATA='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPDATA"'                                            
&ZMS          SETC  '&ZMS "REPDATA"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 2 ARGUMENTS.'                        
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE41A        AIF   (K'&REPDATA LE 0).ZE41B     CK PARM                         
&ZXREPDATA    SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPDATA     SETC  'REPDATA'   SET XVARIABLE                                   
.ZE41B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(1) -XVAR ARGUMENT                           
              AIF   (K'&REPDATA(1) LE 0).ZE43B  NO PRM                          
&ZXREPDATAA   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPDATAA    SETC  '&REPDATA(1)'               SET XVARIABLE                   
              AIF   (N'&REPDATA GT 1).ZE43B     MULTIPLE PARMS                  
&XREPDATAA    SETC  '&REPDATA'  SET XVARIABLE                                   
.ZE43B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(1) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREPDATAA LE 0).ZE43R  NOT I/O                         
              AIF   ('&XREPDATAA'(1,1) NE '(').ZE43R                            
&ZCGPR        SETC  '&XREPDATAA'(2,K'&XREPDATAA-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE43P                                
              AIF   (K'&ZCGPR GT 2).ZE43Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE43Q     INVALID REG NAME                
.ZE43P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE43R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE43Q                                     
              AIF   ('&ZCGPR' LE '12').ZE43R                                    
.ZE43Q        ANOP  ,                                                           
&ZMS          SETC  '"REPDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE43R        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, RQD INPUT, POS(2) -XVAR ARGUMENT                           
              AIF   (K'&REPDATA(2) LE 0).ZE46B  NO PRM                          
&ZXREPDATAL   SETC  'INPUT'     SET IN/OUTPUT                                   
&XREPDATAL    SETC  '&REPDATA(2)'               SET XVARIABLE                   
              AIF   (N'&REPDATA GT 1).ZE46B     MULTIPLE PARMS                  
&XREPDATAL    SETC  '&REPDATA'  SET XVARIABLE                                   
.ZE46B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                          
              AIF   (K'&ZXREPDATAL LE 0).ZE46R  NOT I/O                         
              AIF   ('&XREPDATAL'(1,1) NE '(').ZE46R                            
&ZCGPR        SETC  '&XREPDATAL'(2,K'&XREPDATAL-2)                              
              AIF   ('&ZCGPR'(1,1) NE '0').ZE46P                                
              AIF   (K'&ZCGPR GT 2).ZE46Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE46Q     INVALID REG NAME                
.ZE46P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE46R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE46Q                                     
              AIF   ('&ZCGPR' LE '12').ZE46R                                    
.ZE46Q        ANOP  ,                                                           
&ZMS          SETC  '"REPDATA='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&REPDATA"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE46R        ANOP  ,                                                           
.*----------------------------------------------------------------***           
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                                 
              AIF   (N'&RETCODE LE 1).ZE50A     CK NUM                          
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS "RETCODE"'                                            
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                         
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE50A        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                            
              AIF   (K'&RETCODE(1) LE 0).ZE50B  NO PRM                          
&ZXRETCODE    SETC  'OUTPUT'    SET IN/OUTPUT                                   
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE                   
              AIF   (N'&RETCODE GT 1).ZE50B     MULTIPLE PARMS                  
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                                   
.ZE50B        ANOP  ,                                                           
.*-------------------------------------------------------------------           
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                           
              AIF   (K'&ZXRETCODE LE 0).ZE50R   NOT I/O                         
              AIF   ('&XRETCODE'(1,1) NE '(').ZE50R                             
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                                
              AIF   ('&ZCGPR'(1,1) NE '0').ZE50P                                
              AIF   (K'&ZCGPR GT 2).ZE50Q                                       
&ZCGPR        SETC  '&ZCGPR'(2,1)                                               
              AIF   (T'&ZCGPR NE 'N').ZE50Q     INVALID REG NAME                
.ZE50P        ANOP  ,                                                           
              AIF   (T'&ZCGPR NE 'N').ZE50R     NON NUMERIC                     
              AIF   ('&ZCGPR' LT '2').ZE50Q                                     
              AIF   ('&ZCGPR' LE '12').ZE50R                                    
.ZE50Q        ANOP  ,                                                           
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE                   
&ZMS          SETC  '&ZMS.&RETCODE"'                                            
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'                   
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                            
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZE50R        ANOP  ,                                                           
.******************************************************************             
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                                
.******************************************************************             
              ACTR  1000                                                        
.*----------------------------------------------------------------***           
.***AF.P02 EXTRA POSITIONALS                                                    
              AIF   (N'&SYSLIST LE 0).ZELISTX   NO EXTRAS                       
&ZCVAL        SETC  ''          ERROR FIELD                                     
&ZAWRK        SETA  0           POSITIONAL NUMBER                               
.ZELIST2      ANOP  ,                                                           
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                                 
              AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE                        
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                           
              AGO   .ZELIST2                                                    
.*                                                                              
.ZELIST3      ANOP  ,                                                           
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA                     
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE                   
&ZMS          SETC  '&ZMS "&ZCVAL"'                                             
&ZMS          SETC  '&ZMS CANNOT BE USED.'                                      
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                              
              MNOTE 8,' &ZMS ARE ALLOWED.'                                      
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE                     
.ZELISTX      ANOP  ,                                                           
&ZASYSLNDX    SETA  0                                                           
.*-------------------------------------------------------------------           
.***AE.MF02 MF=(LE)                                                             
.ZEMFX        ANOP  ,           END OF PARTIAL SYNTAX CHECK                     
.*******************************************************************            
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                                      
.*******************************************************************            
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  PRINT IS ON                    
              PRINT OFF         ++ PR01                                         
.ZPRINTX      ANOP  ,                                                           
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*          
          AIF     ('&XMF' EQ 'L').SENDEND Check for list form                   
          MVI     CRBF1,CRBVERS           Set control block version id          
          MVI     CRBF4,CRBRQS            Set request type to:                  
*                                         "Request Server"                      
          MVC     CRBCPRB(4),=C'CPRB'     Set control block id                  
          AIF   ('&SERVER'(1,1) EQ '(').NAMER Check for reg                     
.*                                        form on SERVER key.                   
          MVC     CRBSNAME(8),&XSERVER.   Set server name field                 
*                                         to name specified on                  
*                                         SERVER key.                           
          AGO     .NAMENR                 Skip register form                    
.NAMER    ANOP                            Register form                         
          MVC     CRBSNAME(8),0(&XSERVER) Set server name field                 
*                                         to name specified on                  
*                                         SERVER key.                           
.NAMENR   ANOP                            Not register form                     
*                                                                               
*     Function ID                                                               
*                                                                               
          AIF   (N'&FUNCTION EQ 0).FUNCO Check if FUNCTION omitted              
          AIF   ('&FUNCTION'(1,1) EQ '(').FUNCR Check for reg                   
.*                                        form on FUNCTION key.                 
.FUNCO    MVC     CRBFID(2),&XFUNCTION. Set function id field to                
*                                         to ID specified on                    
*                                         FUNCTION key.                         
          AGO     .FUNCNR                 Skip register form                    
.FUNCR    ANOP                            Register form                         
          MVC     CRBFID(2),0(&XFUNCTION) Set function id field to              
*                                         to ID specified on                    
*                                         FUNCTINOID key.                       
.FUNCNR   ANOP                            Not register form                     
*                                                                               
*     Request parameter length                                                  
*                                                                               
          AIF   (N'&REQPARM EQ 0).REQPLO  Check if REQPARML omitted             
          AIF   ('&XREQPARML'(1,1) EQ '(').REQPLR Check for reg                 
.*                                        form on REQPARML key.                 
.REQPLO   L       1,&XREQPARML.           Request parameter area length         
          AGO     .REQPLNR                                                      
.REQPLR   L       1,0&XREQPARML.          Request parameter area length         
.REQPLNR  ANOP                                                                  
          ST      1,CRBRQPLN              Store length in CPRB                  
*                                                                               
*     Request parameter address                                                 
*                                                                               
          AIF   (N'&REQPARM EQ 0).REQPAO Check if REQPARMA omitted              
          AIF   ('&XREQPARMA'(1,1) EQ '(').REQPAR Check for reg                 
.*                                        form on REQPARMA key.                 
.REQPAO   L       1,&XREQPARMA.           Request parameter area addr           
          AGO     .REQPANR                                                      
.REQPAR   L       1,0&XREQPARMA.          Request parameter area addr           
.REQPANR  ANOP                                                                  
          ST      1,CRBRQPRM              Store address in CPRB                 
*                                                                               
*     Request data length                                                       
*                                                                               
          AIF   (N'&REQDATA EQ 0).REQDLO  Check if REQDATAL omitted             
          AIF   ('&XREQDATAL'(1,1) EQ '(').REQDLR Check for reg                 
.*                                        form on REQDATAL key.                 
.REQDLO   L       1,&XREQDATAL.           Request data length                   
          AGO     .REQDLNR                                                      
.REQDLR   L       1,0&XREQDATAL.          Request data length                   
.REQDLNR  ANOP                                                                  
          ST      1,CRBRQDLN              Store length in CPRB                  
*                                                                               
*     Request data address                                                      
*                                                                               
          AIF   (N'&REQDATA EQ 0).REQDAO  Check if REQDATAA omitted             
          AIF   ('&XREQDATAA'(1,1) EQ '(').REQDAR Check for reg                 
.*                                        form on REQDATAA key.                 
.REQDAO   L       1,&XREQDATAA.           Request data address                  
          AGO     .REQDANR                                                      
.REQDAR   L       1,0&XREQDATAA.          Request data address                  
.REQDANR  ANOP                                                                  
          ST      1,CRBRQDAT              Store address in CPRB                 
*                                                                               
*     Reply parameter length                                                    
*                                                                               
          AIF   (N'&REPPARM EQ 0).REPPLO  Check if REPPARML omitted             
          AIF   ('&XREPPARML'(1,1) EQ '(').REPPLR Check for reg                 
.*                                        form on REPPARML key.                 
.REPPLO   L       1,&XREPPARML.           Reply parameter area length           
          AGO     .REPPLNR                                                      
.REPPLR   L       1,0&XREPPARML.          Reply parameter area length           
.REPPLNR  ANOP                                                                  
          ST      1,CRBRPPLN              Store length in CPRB                  
*                                                                               
*     Reply parameter address                                                   
*                                                                               
          AIF   (N'&REPPARM EQ 0).REPPAO  Check if REPPARMA omitted             
          AIF   ('&XREPPARMA'(1,1) EQ '(').REPPAR Check for reg                 
.*                                        form on REPPARMA key.                 
.REPPAO   L       1,&XREPPARMA.           Reply parameter area addr             
          AGO     .REPPANR                                                      
.REPPAR   L       1,0&XREPPARMA.          Reply parameter area addr             
.REPPANR  ANOP                                                                  
          ST      1,CRBRPPRM              Store address in CPRB                 
*                                                                               
*     Reply data length                                                         
*                                                                               
          AIF   (N'&REPDATA EQ 0).REPDLO Check if REPDATAL omitted              
          AIF   ('&XREPDATAL'(1,1) EQ '(').REPDLR Check for reg                 
.*                                        form on REPDATAL key.                 
.REPDLO   L       1,&XREPDATAL.           Reply data length                     
          AGO     .REPDLNR                                                      
.REPDLR   L       1,0&XREPDATAL.          Reply data length                     
.REPDLNR  ANOP                                                                  
          ST      1,CRBRPDLN              Store length in CPRB                  
*                                                                               
*     Reply data address                                                        
*                                                                               
          AIF   (N'&REPDATA EQ 0).REPDAO Check if REPDATAA omitted              
          AIF   ('&XREPDATAA'(1,1) EQ '(').REPDAR Check for reg                 
.*                                        form on REPDATAA key.                 
.REPDAO   L       1,&XREPDATAA.           Reply data address                    
          AGO     .REPDANR                                                      
.REPDAR   L       1,0&XREPDATAA.          Reply data address                    
.REPDANR  ANOP                                                                  
          ST      1,CRBRPDAT              Store address in CPRB                 
.SENDEND  ANOP                                                                  
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*          
.********************************************************************           
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                            
.********************************************************************           
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX               
                      LCLA  &ZOPN1         INVOCATION INDEX                     
                      LCLC  &ZOPL(4095)    LABEL                                
                      LCLC  &ZOPO(4095)    OPERATION                            
                      LCLC  &ZOPV(4095)    VALUE                                
                      LCLC  &ZOPD(4095)    DESCRIPTION                          
.*                                                                              
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE             
.******************************************************************             
.***AL.AL01 SENDREQ FMT=ARG MF=L PARAMETER AREA                                 
.******************************************************************             
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=L                    
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                          
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  '&XMFATTR'                                          
&ZOPD(&ZOPN)          SETC  '++ SENDREQ ARG PARMS'                              
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCPRB@'                                  
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  'A'                                                 
&ZOPD(&ZOPN)          SETC  '++ INPUT NAME'                                     
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCED@'                                   
&ZOPO(&ZOPN)          SETC  'DS'                                                
&ZOPV(&ZOPN)          SETC  'A'                                                 
&ZOPD(&ZOPN)          SETC  '++ INPUT NAME'                                     
.*-------------------------------------------------------------------           
.***AL.AL08 SENDREQ FMT=ARG MF=L PARAMETER AREA DEFINED                         
                      AGO   .ZMFLX         EXIT, MF=L DONE                      
.*                                                                              
.ZLMFLX               ANOP  ,                                                   
.********************************************************************           
.***AI.A01 SENDREQ FMT=ARG FILL IN PARAMETER AREA                               
.********************************************************************           
                      AIF   ( &ZMACRET NE 0 ).ZLX1                              
                      ACTR  1000                                                
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'XR'                                                
&ZOPV(&ZOPN)          SETC  '0,0'                                               
&ZOPD(&ZOPN)          SETC  '++ SET GPR TO ZERO'                                
.*                                                                              
&ZCVAL                SETC  'LA'            XA MODE                             
.*                                                                              
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR            
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR                 
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                         
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                        
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                         
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                        
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                           
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                            
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                           
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                                      
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                               
                      AGO   .ZIMFNX                                             
.*                                                                              
.ZIMFN2               ANOP ,                                                    
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                        
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                               
.ZIMFNX               ANOP ,                                                    
.*-------------------------------------------------------------------           
.***AI.A04 BIND=NAME XCPRB NAME INPUT                                           
         AIF   ('&ZXCPRB' EQ '').ZI1B      NOT USED                             
         AIF   ('&XCPRB'(1,1) NE '(').ZI1A  NOT IN GPR                          
&ZCGPR   SETC  '&XCPRB'(2,K'&XCPRB-2)                                           
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0(,1)'                                      
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
                      AGO   .ZI1B                                               
.*                                                                              
.ZI1A                 ANOP  ,                                                   
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '14,&XCPRB'                                         
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME NAME'                                 
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '14,0(,1)'                                          
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
.ZI1B                 ANOP  ,                                                   
.*-------------------------------------------------------------------           
.***AI.A04 BIND=NAME XCED NAME INPUT                                            
         AIF   ('&ZXCED' EQ '').ZI2B       NOT USED                             
         AIF   ('&XCED'(1,1) NE '(').ZI2A  NOT IN GPR                           
&ZCGPR   SETC  '&XCED'(2,K'&XCED-2)                                             
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                                      
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
                      AGO   .ZI2B                                               
.*                                                                              
.ZI2A                 ANOP  ,                                                   
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                            
&ZOPV(&ZOPN)          SETC  '14,&XCED'                                          
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME NAME'                                 
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '14,4(,1)'                                          
&ZOPD(&ZOPN)          SETC  '++ INPUT'                                          
.ZI2B                 ANOP  ,                                                   
&ZOPN1                SETA &ZOPN                                                
.*-------------------------------------------------------------------           
.***AI.C03 BASR                                                                 
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'L'                                                 
&ZOPV(&ZOPN)          SETC  '15,CEDROUT'                                        
&ZOPD(&ZOPN)          SETC  '++ GET CODE MODULE BASE'                           
.*                                                                              
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'BASR'                                              
&ZOPV(&ZOPN)          SETC  '14,15'                                             
&ZOPD(&ZOPN)          SETC  '++ CALL CHSTRUT'                                   
.*******************************************************************            
.***AO.X01  LABEL TO BYPASS INVOCATION                                          
.*******************************************************************            
&ZOPN     SETA  &ZOPN+1                                                         
&ZOPL(&ZOPN)   SETC  'AMGE&SYSNDX'                                              
&ZOPO(&ZOPN)   SETC  'DS'                                                       
&ZOPV(&ZOPN)   SETC  '0H'                                                       
&ZOPD(&ZOPN)   SETC  '++ BYPASS INVOCATION'                                     
.*******************************************************************            
.***AO.X02  RETURN CODE PROCESSING                                              
.*******************************************************************            
                      AIF   (N'&RETCODE LE 0).ZMRETX                            
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2                    
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX                     
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX                     
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX                       
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                        
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'ST'                                                
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                                      
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                                
                      AGO   .ZMRETX                                             
.*                                                                              
.ZMRET2               ANOP  ,                                                   
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                        
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                        
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                          
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                           
&ZOPN                 SETA  &ZOPN+1                                             
&ZOPL(&ZOPN)          SETC  ' '                                                 
&ZOPO(&ZOPN)          SETC  'LR'                                                
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                         
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                                
.ZMRETX               ANOP  ,                                                   
.*******************************************************************            
.***AO.X04  LABEL FOR MF=L PROCESSING                                           
.*******************************************************************            
.ZMFLX                ANOP  ,              MF=L PROCESSING                      
.*******************************************************************            
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                                       
.*******************************************************************            
                      ACTR  1000                                                
.*                                                                              
                      LCLA  &ZLC           COLUMN POSITION                      
                      LCLA  &ZOPX          LIST TABLE INDEX                     
                      LCLC  &ZLL           LABEL                                
                      LCLC  &ZLOP          OPERATION                            
                      LCLC  &ZLV           VALUE                                
                      LCLC  &ZLD           DESCRIPTION                          
.*                                                                              
&ZOPX                 SETA  1                                                   
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE                    
&ZLL                  SETC  '&ZOPL(&ZOPX)'                                      
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                                      
&ZLV                  SETC  '&ZOPV(&ZOPX)'                                      
&ZLD                  SETC  '&ZOPD(&ZOPX)'                                      
                      AIF   (K'&ZLD LE 0).ZL5                                   
&ZLC                  SETA  35             COMMENT COLUMN                       
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                            
&ZLC                  SETA  33             COMMMENT COLUMN                      
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                           
&ZLV                  SETC  '&ZLV'.' '                                          
                      AGO   .ZL3                                                
.*                                                                              
.ZL4                  ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.' '                                          
.ZL5                  ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.'&ZLD'                                       
.*                                                                              
&ZLL     &ZLOP &ZLV                                                             
.*                                                                              
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE                       
                      AGO   .ZL2           CONTINUE LOOPING                     
.*                                                                              
.ZLX                  ANOP  ,                                                   
.*******************************************************************            
.***AP.X01  FORMAT GENERATED CODE                                               
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE                    
&ZLL                  SETC  '&ZOPL(&ZOPX)'                                      
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                                      
&ZLV                  SETC  '&ZOPV(&ZOPX)'                                      
&ZLD                  SETC  '&ZOPD(&ZOPX)'                                      
                      AIF   (K'&ZLD LE 0).ZL51                                  
&ZLC                  SETA  35             COMMENT COLUMN                       
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                           
&ZLC                  SETA  33             COMMENT COLUMN                       
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                          
&ZLV                  SETC  '&ZLV'.' '                                          
                      AGO   .ZL31                                               
.*                                                                              
.ZL41                 ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.' '                                          
.ZL51                 ANOP  ,                                                   
&ZLV                  SETC  '&ZLV'.'&ZLD'                                       
.*                                                                              
&ZLL     &ZLOP &ZLV                                                             
.*                                                                              
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE                       
                      AGO   .ZL21          CONTINUE LOOPING                     
.*                                                                              
.ZLX1                 ANOP  ,                                                   
.*******************************************************************            
.***AP.X02  END OF SENDREQ MACRO                                                
&ZSENDREQ             SETC  'YES'          SET SENDREQ USED                     
         POP   PRINT                                                            
*                                            SENDREQ-1                          
         SPACE 1                                                                
         MEND                                                                   
**********************************************************************/         
*/*PB.O0001 INVOKE *** MACRO-----------------------------------------*/         
*%SENDREQ: MACRO KEYS(CPRB,CED,SERVER,FUNCTION,REQPARM,REQDATA,                 
*                 REPPARM,REPDATA,RETCODE,MF);                                  
*  ANS('?'||MACLABEL||' '||'SENDREQP '||MACLIST||                               
*         ' '||MACKEYS||';') COL(MACLMAR);                                      
*%END SENDREQ;                                                                  
