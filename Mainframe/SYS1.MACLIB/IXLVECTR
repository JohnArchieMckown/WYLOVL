*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLVECTR                              -09/18/96-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Local Vector Services                         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1993, 1994                     * 00001300
*                                                                     * 00001400
* STATUS= HBB5520                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IXLVECTR service is invoked by users of the IXLCACHE or    * 00002200
*      IXLLIST services to perform one of the following functions:    * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      1.  MODIFYVECTORSIZE: to change the number of entries in the   * 00002600
*          user's local vector.  This modifies the number of          * 00002700
*          monitored objects (comprised of list headers and/or the    * 00002800
*          user's event queue),  or local cache data items, which can * 00002900
*          be concurrently monitored by the connector.  Note that     * 00003000
*          MODIFYVECTORSIZE cannot be used to delete the local vector * 00003100
*          by modifying its size to zero.                             * 00003200
*                                                                     * 00003300
*                                                                     * 00003400
*      2.  LTVECENTRIES: to load and test a range of vector entries   * 00003500
*          associated with a local vector for either a list or cache  * 00003600
*          structure.  The output from this function is a bit string  * 00003700
*          with one bit per vector entry, starting with the specified * 00003800
*          vector index and continuing until either 32 bits are       * 00003900
*          loaded,  or the end of the vector is reached.  The bits in * 00004000
*          the bit string are interpreted as follows:                 * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*          o   0 - the vector entry corresponding to this bit         * 00004400
*              position indicates that the monitored list is NONEMPTY * 00004500
*              or that the monitored event queue is NONEMPTY (list    * 00004600
*              vector), or that the local cache entry is INVALID      * 00004700
*              (cache vector)                                         * 00004800
*                                                                     * 00004900
*          o   1 - the vector entry corresponding to this bit         * 00005000
*              position indicates that the monitored list is EMPTY or * 00005100
*              that the monitored event queue is EMPTY (list vector), * 00005200
*              or that the local cache entry is VALID (cache vector)  * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*      3.  TESTLISTSTATE: to test the empty/nonempty state of a list  * 00005800
*          header or event queue in a list structure.  The connector  * 00005900
*          must have previously registered a monitoring interest in   * 00006000
*          the list header or his event queue, and associated the     * 00006100
*          list header or event queue with an index into the local    * 00006200
*          vector.                                                    * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*      4.  TESTLOCALCACHE: to test for cache coherency and validation * 00006600
*          of cache buffers.                                          * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*          o   TESTLOCALCACHE: To validate cache coherency only.      * 00007000
*              Validate(Yes) and no VectorIndex specified.            * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*          o   TESTLOCALCACHE: to test the validity of a              * 00007400
*              locally-cached data item in which the user may have a  * 00007500
*              registered interest with validation of cache           * 00007600
*              coherency. Validate(Yes) and VectorIndex specified.    * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*          o   TESTLOCALCACHE: to test the validity of a              * 00008000
*              locally-cached data item in which the user may have a  * 00008100
*              registered interest. Validate(NO) and VectorIndex      * 00008200
*              specified.                                             * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00008900
*                                                                     * 00009000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00009100
*                                                                     * 00009200
*01* ENVIRONMENT:                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*      Dispatchable unit mode: Task or SRB mode.                      * 00009600
*                                                                     * 00009700
*      Minimum authorization: Supervisor State is required for the    * 00009800
*                        MODIFYVECTORSIZE function.  The              * 00009900
*                        LTVECENTRIES, TESTLISTSTATE, TESTLOCALCACHE  * 00010000
*                        functions may be invoked by either           * 00010100
*                        Supervisor State or Problem State programs.  * 00010200
*                                                                     * 00010300
*      AMODE:            31-bit.                                      * 00010400
*                                                                     * 00010500
*      ASC mode:         Primary or Access Register.                  * 00010600
*                                                                     * 00010700
*                        Addressability notes:                        * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                        1.  Access Register mode invokers must       * 00011100
*                            specify SYSSTATE ASCENV=AR prior to      * 00011200
*                            invoking this macro.                     * 00011300
*                                                                     * 00011400
*                        2.  All data areas passed to this interface  * 00011500
*                            must be in primary addressable storage.  * 00011600
*                            No secondary space storage or ALET       * 00011700
*                            qualified storage allowed.               * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*      Serialization:    Enabled or Disabled.  Enabled callers must   * 00012200
*                        hold no locks.  Disabled callers may hold no * 00012300
*                        locks other than the CPU lock.               * 00012400
*                                                                     * 00012500
*      Restrictions:     None                                         * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00013000
*                      GR2-GR13    Undefined                          * 00013100
*                      GR14-GR15   Reserved                           * 00013200
*                                                                     * 00013300
*Basing notes:                                                        * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*.   This is a register interface that uses registers 2-5 or 2-6      * 00013700
*   depending on type of the request. Therefore these registers may   * 00013800
*   not be used as base registers. DOING SO MAY CAUSE UNPREDICTABLE   * 00013900
*   RESULTS.                                                          * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*01* OUTPUT REGISTERS: GR0-GR1     Unpredictable                      * 00014400
*                      GR2-GR13    Unchanged                          * 00014500
*                      GR14        Unpredictable                      * 00014600
*                      GR15        return code                        * 00014700
*                                                                     * 00014800
*01* SYNTAX:                                                          * 00014900
*                                                                     * 00015000
*[xlabel]  IXLVECTR     VECTORTOKEN=xvectortoken                      * 00015100
*                      ,WORKAREA=xworkarea                            * 00015200
*                     ,REQUEST=MODIFYVECTORSIZE                      * 00015300
*                    |     ,VECTORLEN=xvectorlen                      * 00015400
*                    |     ,ACTUALVECLEN=xactualveclen                * 00015500
*                    |   [,BRANCHTABLE=NO]                           * 00015600
*                    |   [,BRANCHTABLE=YES                           * 00015700
*                    |         ,MODIFYDONE=xmodifydone                * 00015800
*                    |         ,LESSTHAN=xlessthan                    * 00015900
*                    |         ,NOSTORAGE=xnostorage                  * 00016000
*                    |         ,INVALIDTOKN=xinvalidtokn              * 00016100
*                    |         ,INVALIDLEN=xinvalidlen]               * 00016200
*                     ,REQUEST=LTVECENTRIES                          * 00016300
*                    |     ,VECTORINDEX=xvectorindex                  * 00016400
*                    |     ,BITSTRING=xbitstring                      * 00016500
*                    |   [,BRANCHTABLE=NO]                           * 00016600
*                    |   [,BRANCHTABLE=YES                           * 00016700
*                    |         ,ALLEMPVAL=xallempval                  * 00016800
*                    |         ,SOMENEINV=xsomeneinv                  * 00016900
*                    |         ,INDXINVALID=xindxinvalid              * 00017000
*                    |         ,INVALIDTOKN=xinvalidtokn]             * 00017100
*                     ,REQUEST=TESTLISTSTATE                         * 00017200
*                    |     ,VECTORINDEX=xvectorindex                  * 00017300
*                    |   [,BRANCHTABLE=NO]                           * 00017400
*                    |   [,BRANCHTABLE=YES                           * 00017500
*                    |         ,LSTEMPTY=xlstempty                    * 00017600
*                    |         ,LSTNONEMPTY=xlstnonempty              * 00017700
*                    |         ,INDXINVALID=xindxinvalid              * 00017800
*                    |         ,INVALIDTOKN=xinvalidtokn]             * 00017900
*                     ,REQUEST=TESTLOCALCACHE                        * 00018000
*                        [,VALIDATE=YES                              * 00018100
*                        |    [,VECTORINDEX                           * 00018200
*                        |                  =xvectorindex|NO_VECTORI * 00018300
*                        |                  NDEX]]                   * 00018400
*                        [,VALIDATE=NO                               * 00018500
*                              ,VECTORINDEX=xvectorindex]             * 00018600
*                     [,RETCODE=xretcode]                             * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*      Where:                                                         * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*      [xlabel]                                                       * 00019300
*          is an optional symbol, starting in column 1, that is the   * 00019400
*          name on the IXLVECTR macro invocation.  The name must      * 00019500
*          conform to the rules for an ordinary assembler language    * 00019600
*          symbol.                                                    * 00019700
*          DEFAULT: No name.                                          * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*      VECTORTOKEN=xvectortoken                                       * 00020300
*          is the name (RS-type), or address in register (2)-(12), of * 00020400
*          a required 12 character input field that specifies the     * 00020500
*          list notification or cache vector token that uniquely      * 00020600
*          identifies the local vector associated with the user's     * 00020700
*          connection to the structure.  The local vector was         * 00020800
*          initially created by the IXLCONN service, if requested,    * 00020900
*          and the vector token was returned in the Connect Answer    * 00021000
*          Area.  The vector token passed on this interface must      * 00021100
*          reside in primary addressable storage.                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*      WORKAREA=xworkarea                                             * 00021700
*          is the name (RS-type), or address in register (2)-(12), of * 00021800
*          a required 20 character input identifies an area to be     * 00021900
*          used as a register save area.  Registers 2-5 are saved for * 00022000
*          requests MODIFYVECTORSIZE, TESTLISTSTATE, TESTLOCALCACHE   * 00022100
*          VALIDATE(NO).  Registers 2-6 are saved for request both    * 00022200
*          kinds of the TESTLOCALCACHE VALIDATE(YES) request          * 00022300
*          (VectorIndex and No_VectorIndex), and for the LTVECENTRIES * 00022400
*          function.  The area passed on this interface must reside   * 00022500
*          in primary addressable storage.                            * 00022600
*                                                                     * 00022700
*          NOTE: The Workarea may not be based on a register that can * 00022800
*          be destroyed by this interface. The workarea must be on a  * 00022900
*          Word boundary.                                             * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*      REQUEST=MODIFYVECTORSIZE|LTVECENTRIES|TESTLISTSTATE|TESTLOCAL * 00023500
*          CACHE                                                     * 00023600
*          is a required keyword input that specifies the function    * 00023700
*          which is to be performed.                                  * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*          REQUEST=MODIFYVECTORSIZE                                   * 00024200
*              request to modify the size of the user's local vector, * 00024300
*              and thus either the number of monitored objects        * 00024400
*              (comprised of list list headers and/or the user's      * 00024500
*              event queue) which may be concurrently monitored for   * 00024600
*              empty/nonempty state,  or the number of cache data     * 00024700
*              items whose registration information may be            * 00024800
*              concurrently maintained locally.  Note that            * 00024900
*              MODIFYVECTORSIZE cannot be used to delete the local    * 00025000
*              vector by modifying its size to zero.                  * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*              VECTORLEN=xvectorlen                                   * 00025500
*                  is the name (RS-type), or address in register      * 00025600
*                  (2)-(12), of a required fullword input field that  * 00025700
*                  specifies the target number of entries which are   * 00025800
*                  requested for the user's vector.  This may be      * 00025900
*                  greater than or less than the number of entries    * 00026000
*                  currently in the vector: the request will attempt  * 00026100
*                  to expand or contract the user's vector            * 00026200
*                  accordingly.  However,  the size specified must be * 00026300
*                  greater than zero.                                 * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*              ACTUALVECLEN=xactualveclen                             * 00026900
*                  is the name (RS-type), or address in register      * 00027000
*                  (2)-(12), of a required fullword output field that * 00027100
*                  returns the actual size of the local vector which  * 00027200
*                  was obtained by the IXLVECTR service.  When        * 00027300
*                  expanding a local vector, it may not be possible   * 00027400
*                  to expand the vector to the requested target size. * 00027500
*                  In this case,  the actual size which was obtained  * 00027600
*                  is returned.  If the vector length is invalid the  * 00027700
*                  ActualVecLen value is irrelevant.                  * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*              [BRANCHTABLE=NO|YES]                                 * 00028300
*                  is an optional keyword input                       * 00028400
*                                                                     * 00028500
*                  DEFAULT: NO                                        * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                  [BRANCHTABLE=NO]                                   * 00028900
*                      indicates that a branch table is not to be     * 00029000
*                      generated.                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                  [BRANCHTABLE=YES                                   * 00029400
*                      indicates that a branch table is to be         * 00029500
*                      generated.                                     * 00029600
*                      DEFAULT: NO                                    * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                      MODIFYDONE=xmodifydone                         * 00030100
*                          is the name (RS-type) of a required        * 00030200
*                          character input field that contains the    * 00030300
*                          label to branch to if the vector was       * 00030400
*                          defined as requested.                      * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                      LESSTHAN=xlessthan                             * 00031000
*                          is the name (RS-type) of a required        * 00031100
*                          character input field that contains the    * 00031200
*                          label to branch to if storage could not be * 00031300
*                          obtained to define a vector of the         * 00031400
*                          requested target size. ACTUALVECLEN        * 00031500
*                          contains the actual size of the vector.    * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                      NOSTORAGE=xnostorage                           * 00032100
*                          is the name (RS-type) of a required        * 00032200
*                          character input field that contains the    * 00032300
*                          label to branch to if storage could not be * 00032400
*                          obtained to increase the vector length.    * 00032500
*                          The vector remains at its original size.   * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                      INVALIDTOKN=xinvalidtokn                       * 00033100
*                          is the name (RS-type) of a required        * 00033200
*                          character input field that contains the    * 00033300
*                          label to branch to if the specified vector * 00033400
*                          token is not valid.                        * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                      INVALIDLEN=xinvalidlen]                        * 00034000
*                          is the name (RS-type) of a required        * 00034100
*                          character input field that contains the    * 00034200
*                          label to branch to if the specified        * 00034300
*                          VECTORLEN is in error.                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*          REQUEST=LTVECENTRIES                                       * 00035200
*              request to load and test a range of vector entries for * 00035300
*              either a list or cache vector.                         * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*              VECTORINDEX=xvectorindex                               * 00035800
*                  is the name (RS-type), or address in register      * 00035900
*                  (2)-(12), of a required fullword input field that  * 00036000
*                  specifies the starting index of the range of       * 00036100
*                  vector entries which are to be loaded and tested.  * 00036200
*                  The index specified must be evenly divisible by    * 00036300
*                  32.  Up to 32 vector entries will be loaded and    * 00036400
*                  tested,  depending on whether the end of the       * 00036500
*                  vector is reached.                                 * 00036600
*                                                                     * 00036700
*                  NOTE: The vector index for a given vector of size  * 00036800
*                  N goes from 0 to N-1.                              * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*              BITSTRING=xbitstring                                   * 00037400
*                  is the name (RS-type), or address in register      * 00037500
*                  (2)-(12), of a required 32 bit output field that   * 00037600
*                  returns the bit string containing vector entry     * 00037700
*                  state information for the range of vector entries. * 00037800
*                  The bits in the bit string are interpreted as      * 00037900
*                  follows:                                           * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                  o   0 - the vector entry corresponding to this bit * 00038300
*                      position indicates that the monitored list is  * 00038400
*                      NONEMPTY or that the monitored event queue is  * 00038500
*                      NONEMPTY (list vector), or that the local      * 00038600
*                      cache entry is INVALID (cache vector)          * 00038700
*                                                                     * 00038800
*                  o   1 - the vector entry corresponding to this bit * 00038900
*                      position indicates that the monitored list is  * 00039000
*                      EMPTY or that the monitored event queue is     * 00039100
*                      EMPTY (list vector), or that the local cache   * 00039200
*                      entry is VALID (cache vector)                  * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*                                                                     * 00039900
*              [BRANCHTABLE=NO|YES]                                 * 00040000
*                  is an optional keyword input                       * 00040100
*                                                                     * 00040200
*                  DEFAULT: NO                                        * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*                  [BRANCHTABLE=NO]                                   * 00040600
*                      indicates that a branch table is not to be     * 00040700
*                      generated.                                     * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*                  [BRANCHTABLE=YES                                   * 00041100
*                      indicates that a branch table is to be         * 00041200
*                      generated.                                     * 00041300
*                      DEFAULT: NO                                    * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                      ALLEMPVAL=xallempval                           * 00041800
*                          is the name (RS-type) of a required        * 00041900
*                          character input field that contains the    * 00042000
*                          label to branch to if all monitored        * 00042100
*                          objects (comprised of lists and/or the     * 00042200
*                          user's event queue) in the range of vector * 00042300
*                          entries are EMPTY (list vector),  or if    * 00042400
*                          all local cache entries in the range of    * 00042500
*                          vector entries are VALID (cache vector).   * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*                      SOMENEINV=xsomeneinv                           * 00043100
*                          is the name (RS-type) of a required        * 00043200
*                          character input field that contains the    * 00043300
*                          label to branch to if some monitored       * 00043400
*                          object (comprised of lists and/or the      * 00043500
*                          user's event queue) in the range of vector * 00043600
*                          entries is NONEMPTY (list vector),  or if  * 00043700
*                          some local cache entry in the range of     * 00043800
*                          vector entries is INVALID (cache vector).  * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*                      INDXINVALID=xindxinvalid                       * 00044400
*                          is the name (RS-type) of a required        * 00044500
*                          character input field that contains the    * 00044600
*                          label to branch to if the vector index     * 00044700
*                          specified is not a valid vector index      * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                      INVALIDTOKN=xinvalidtokn]                      * 00045300
*                          is the name (RS-type) of a required        * 00045400
*                          character input field that contains the    * 00045500
*                          label to branch to if the vector token is  * 00045600
*                          not valid.                                 * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*          REQUEST=TESTLISTSTATE                                      * 00046500
*              request to test whether a monitored list header in a   * 00046600
*              list structure,  or a monitored event queue in a list  * 00046700
*              structure, is empty or nonempty.                       * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*              VECTORINDEX=xvectorindex                               * 00047200
*                  is the name (RS-type), or address in register      * 00047300
*                  (2)-(12), of a required fullword input field that  * 00047400
*                  specifies the list vector index number which is    * 00047500
*                  associated with the list header or event queue for * 00047600
*                  which the empty/nonempty state information is      * 00047700
*                  requested.  The association between a list header  * 00047800
*                  or event queue and a list vector index number was  * 00047900
*                  made at the time the connector registered for list * 00048000
*                  monitoring or event queue monitoring via the       * 00048100
*                  IXLLIST service.                                   * 00048200
*                                                                     * 00048300
*                  NOTE: The vector index for a given vector of size  * 00048400
*                  N goes from 0 to N-1.                              * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*              [BRANCHTABLE=NO|YES]                                 * 00049000
*                  is an optional keyword input                       * 00049100
*                                                                     * 00049200
*                  DEFAULT: NO                                        * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*                  [BRANCHTABLE=NO]                                   * 00049600
*                      indicates that a branch table is not to be     * 00049700
*                      generated.                                     * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*                  [BRANCHTABLE=YES                                   * 00050100
*                      indicates that a branch table is to be         * 00050200
*                      generated.                                     * 00050300
*                      DEFAULT: NO                                    * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                      LSTEMPTY=xlstempty                             * 00050800
*                          is the name (RS-type) of a required        * 00050900
*                          character input field that contains the    * 00051000
*                          label to branch to if the List or event    * 00051100
*                          queue is Empty.                            * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                      LSTNONEMPTY=xlstnonempty                       * 00051700
*                          is the name (RS-type) of a required        * 00051800
*                          character input field that contains the    * 00051900
*                          label to branch to if the List or event    * 00052000
*                          queue is nonempty.                         * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*                      INDXINVALID=xindxinvalid                       * 00052600
*                          is the name (RS-type) of a required        * 00052700
*                          character input field that contains the    * 00052800
*                          label to branch to if the vector index     * 00052900
*                          specified is not a valid vector index in   * 00053000
*                          the user's current local list notification * 00053100
*                          vector.                                    * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                                                                     * 00053600
*                      INVALIDTOKN=xinvalidtokn]                      * 00053700
*                          is the name (RS-type) of a required        * 00053800
*                          character input field that contains the    * 00053900
*                          label to branch to if the vector token is  * 00054000
*                          not valid.                                 * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*          REQUEST=TESTLOCALCACHE                                     * 00054900
*              request to test the validity of a locally-cached data  * 00055000
*              item or cache coherency.                               * 00055100
*                                                                     * 00055200
*              NOTE: The TESTLOCALCACHE request does not provide a    * 00055300
*              built in branch table mechanism.                       * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*              [VALIDATE=YES|NO]                                    * 00055800
*                  is an optional keyword input                       * 00055900
*                                                                     * 00056000
*                  DEFAULT: YES                                       * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*                  [VALIDATE=YES                                      * 00056400
*                      indicates that a validation of connectivity to * 00056500
*                      the facility containing the cache structure    * 00056600
*                      will be performed.                             * 00056700
*                                                                     * 00056800
*                      NOTE: If the VectorIndex is not specified with * 00056900
*                      this option, only cache coherency will be      * 00057000
*                      validated.                                     * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*                      [VECTORINDEX=xvectorindex|NO_VECTORINDEX]]   * 00057500
*                                                                     * 00057600
*                          is the name (RS-type), or address in       * 00057700
*                          register (2)-(12), of an optional fullword * 00057800
*                          input field that identifies the local      * 00057900
*                          cache vector index number which is         * 00058000
*                          associated with the a cached page. The     * 00058100
*                          association between the local cache vector * 00058200
*                          index number and the particular cache data * 00058300
*                          item whose validity is being checked,  was * 00058400
*                          established at the time that the connector * 00058500
*                          performed an IXLCACHE command which caused * 00058600
*                          interest to be registered for the data     * 00058700
*                          item.                                      * 00058800
*                                                                     * 00058900
*                          NOTE: The vector index for a given vector  * 00059000
*                          of size N goes from 0 to N-1.              * 00059100
*                          DEFAULT: NO_VECTORINDEX                    * 00059200
*                                                                     * 00059300
*                                                                     * 00059400
*                                                                     * 00059500
*                  [VALIDATE=NO                                       * 00059600
*                      indicates that a validation of connectivity to * 00059700
*                      the facility containing the cache structure    * 00059800
*                      will not be performed.                         * 00059900
*                                                                     * 00060000
*                      DEFAULT: YES                                   * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*                                                                     * 00060500
*                      VECTORINDEX=xvectorindex]                      * 00060600
*                          is the name (RS-type), or address in       * 00060700
*                          register (2)-(12), of a required fullword  * 00060800
*                          input field that identifies the local      * 00060900
*                          cache vector index number which is         * 00061000
*                          associated with the a cached page. The     * 00061100
*                          association between the local cache vector * 00061200
*                          index number and the particular cache data * 00061300
*                          item whose validity is being checked,  was * 00061400
*                          established at the time that the connector * 00061500
*                          performed an IXLCACHE command which caused * 00061600
*                          interest to be registered for the data     * 00061700
*                          item.                                      * 00061800
*                                                                     * 00061900
*                          NOTE: The vector index for a given vector  * 00062000
*                          of size N goes from 0 to N-1.              * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*      [RETCODE=xretcode]                                             * 00063400
*          is the name (RS-type) of an optional fullword output       * 00063500
*          variable, or register (2)-(12), into which the return code * 00063600
*          is to be copied from GPR 15.                               * 00063700
*                                                                     * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*01* RETURN CODES:                                                    * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*                 Results are communicated via a return code in the   * 00064400
*                 return code variable or register 15. All return     * 00064500
*                 codes are represented in hexadecimal values. Return * 00064600
*                 code constants are defined within IXLYCON.          * 00064700
*                                                                     * 00064800
*                                                                     * 00064900
*                 o   Return codes from the MODIFYVECTORSIZE request: * 00065000
*                                                                     * 00065100
*                                                                     * 00065200
*                     0         IxlRetCodeModifyDone:  Vector defined * 00065300
*                               as requested                          * 00065400
*                                                                     * 00065500
*                     4         IxlRetCodeLessThan:  Actual vector    * 00065600
*                               size is less than requested.          * 00065700
*                               ActualVecLen contains the current     * 00065800
*                               actual vector size.                   * 00065900
*                                                                     * 00066000
*                     8         IxlRetCodeNoStorage:  Storage could   * 00066100
*                               not be obtained to increase vector    * 00066200
*                               size.                                 * 00066300
*                                                                     * 00066400
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00066500
*                               is not valid.                         * 00066600
*                                                                     * 00066700
*                     10        IxlRetCodeInvalidLen:  Vector length  * 00066800
*                               is not valid.                         * 00066900
*                                                                     * 00067000
*                                                                     * 00067100
*                                                                     * 00067200
*                 o   Return codes from the LTVECENTRIES request:     * 00067300
*                                                                     * 00067400
*                                                                     * 00067500
*                     0         IxlRetCodeAllEmpVal:  All monitored   * 00067600
*                               objects (comprised of lists and/or    * 00067700
*                               the user's event queue) in the range  * 00067800
*                               of vector entries are empty (list     * 00067900
*                               vector), or all local cache entries   * 00068000
*                               in the range of vector entries are    * 00068100
*                               valid (cache vector)                  * 00068200
*                                                                     * 00068300
*                     4         IxlRetCodeSomeNeInv:  Some monitored  * 00068400
*                               object (comprised of lists and/or the * 00068500
*                               user's event queue) in the range of   * 00068600
*                               vector entries is nonempty (list      * 00068700
*                               vector), or some local cache entry in * 00068800
*                               the range of vector entries is        * 00068900
*                               invalid (cache vector)                * 00069000
*                                                                     * 00069100
*                     8         IxlRetCodeIndxInvalid:  Vector index  * 00069200
*                               is not valid.  The vector index may   * 00069300
*                               be beyond the end of the              * 00069400
*                               currently-defined vector,  or not     * 00069500
*                               evenly divisible by 32.               * 00069600
*                                                                     * 00069700
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00069800
*                               is not valid.                         * 00069900
*                                                                     * 00070000
*                                                                     * 00070100
*                                                                     * 00070200
*                 o   Return codes from the TESTLISTSTATE request:    * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*                     0         IxlRetCodeLstEmpty:  List or event    * 00070600
*                               queue is empty.                       * 00070700
*                                                                     * 00070800
*                     4         IxlRetCodeLstNonEmpty:  List or event * 00070900
*                               queue is nonempty.                    * 00071000
*                                                                     * 00071100
*                     8         IxlRetCodeIndxInvalid:  Vector index  * 00071200
*                               is not valid.                         * 00071300
*                                                                     * 00071400
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00071500
*                               is not valid.                         * 00071600
*                                                                     * 00071700
*                                                                     * 00071800
*                                                                     * 00071900
*                 o   Return codes from request TESTLOCALCACHE        * 00072000
*                     VALIDATE(YES/NO) with VectorIndex specified:    * 00072100
*                                                                     * 00072200
*                                                                     * 00072300
*                     0         IxlRetCodeBufValid:  Locally cached   * 00072400
*                               data item is valid                    * 00072500
*                                                                     * 00072600
*                     4         IxlRetCodeBufNotValid:  Locally       * 00072700
*                               cached data item is not valid         * 00072800
*                                                                     * 00072900
*                     8         IxlRetCodeIndxInvalid:  Vector index  * 00073000
*                               is not valid                          * 00073100
*                                                                     * 00073200
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00073300
*                               is not valid                          * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                 o   Return codes from the request TESTLOCALCACHE    * 00073800
*                     VALIDATE(YES) with VECTORINDEX not specified:   * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*                     0         IxlRetCodeConnected:  Cache coherent. * 00074200
*                                                                     * 00074300
*                     4         IxlRetCodeNotConnected:  Cache not    * 00074400
*                               coherent.                             * 00074500
*                                                                     * 00074600
*                     C         IxlRetCodeInvalidTokn:  Vector token  * 00074700
*                               is not valid                          * 00074800
*                                                                     * 00074900
*                                                                     * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*01* REASON CODES:  None.                                             * 00075600
*                                                                     * 00075700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00075800
*                                                                     * 00075900
*02*   PROCESSOR:  ASSEM                                              * 00076000
*                                                                     * 00076100
*01* COMPONENT:  SCIXL                                                * 00076200
*                                                                     * 00076300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00076400
*                                                                     * 00076500
*01* MACRO USAGE NOTES:                                               * 00076600
*                                                                     * 00076700
*                                                                     * 00076800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00076900
*        global macro variable.  Any value other than 'NO' will       * 00077000
*        result in the macro expansion being printed.  The default is * 00077100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00077200
*        variable should be set.                                      * 00077300
*                                                                     * 00077400
*                    GBLC &ZPRINT                                     * 00077500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*01* CHANGE ACTIVITY:                                                 * 00078000
*                                                                     * 00078100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00078200
*                                                                     * 00078300
*    $L0=SYSLKSMG HBB5510 901207 PD00EG:  Initial Release as IXLTLCE  * 00078400
*    $L1=SYSLKSMG HBB5510 920406 PD00EG:  Initial Release as IXLVECTR * 00078500
*    $P1=PIG0873  HBB5510 921105 PD00EG:  macro phase warning         * 00078600
*                                         message.                    * 00078700
*    $D1=DIG0018  HBB5510 921105 PD00EG:  >4k changes.                * 00078800
*    $D2=DIG0038  HBB5510 930325 PD00EG:  Test cache coherency only.  * 00078900
*    $P2=PIG1061  HBB5510 930325 PD00EG:  ModifyVector to length 0.   * 00079000
*    $P3=PIG2242  HBB5510 930909 PD00EG:  documentation changes.      * 00079100
*    $P4=PIG2473  HBB5510 930909 PD00EG:  No asm returncode.          * 00079200
*    $P5=PIG2475  HBB5510 930909 PD00EG:  documentation changes.      * 00079300
*    $P6=PIG2968  HBB5510 930909 PD00EG:  documentation changes.      * 00079400
*    $P7=PIG5178  HBB5510 940301 PD00FR:  Performance                 * 00079500
*    $01=OW16854  HBB5510 951120 PD00FR:  Correct output area         * 00079600
*                                         processing                  * 00079700
*    $02=OW15589  HBB5520 950712 PD00FR:  Event monitoring support    * 00079800
****** END OF SPECIFICATIONS *****************************************/ 00079900
*/********************************************************************* 00080000
         MACRO                                                          00080100
&XLABEL  IXLVECTR &VECTORTOKEN=,&WORKAREA=,&REQUEST=,&VECTORLEN=,      *00080200
               &ACTUALVECLEN=,&BRANCHTABLE=,&MODIFYDONE=,&LESSTHAN=,   *00080300
               &NOSTORAGE=,&INVALIDTOKN=,&INVALIDLEN=,&VECTORINDEX=,   *00080400
               &BITSTRING=,&ALLEMPVAL=,&SOMENEINV=,&INDXINVALID=,      *00080500
               &LSTEMPTY=,&LSTNONEMPTY=,&VALIDATE=,&RETCODE=            00080600
.*                                                                      00080700
*                      MACDATE -09/18/96-<0>                            00080800
.*                                                                      00080900
.*******************************************************************    00081000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00081100
.*******************************************************************    00081200
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00081300
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00081400
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00081500
.*                                                                      00081600
                      GBLC  &ZIXLVECTR  YES=MACRO USED AT LEAST ONCE    00081700
.*******************************************************************    00081800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00081900
.*******************************************************************    00082000
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00082100
                      LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS    00082200
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00082300
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00082400
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00082500
                      LCLA  &ZAWRK      USED AS A WORK AREA             00082600
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00082700
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00082800
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00082900
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00083000
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00083100
                      LCLA  &ZMACRET    MACRO RETURN CODE               00083200
&ZMACRET              SETA  0           ASSUME NO ERRORS                00083300
.*                                                                      00083400
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00083500
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00083600
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00083700
                      LCLC  &ZENDBASEPL         End of base PL          00083800
.*******************************************************************    00083900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00084000
.*******************************************************************    00084100
                      LCLC  &XVECTORTOKEN       ++ NAME                 00084200
                      LCLC  &XWORKAREA  ++ NAME                         00084300
                      LCLC  &XREQUEST   ++ VALUE                        00084400
                      LCLC  &XVECTORLEN         ++ NAME                 00084500
                      LCLC  &XACTUALVECLEN      ++ NAME                 00084600
                      LCLC  &XBRANCHTABLE       ++ VALUE                00084700
                      LCLC  &XMODIFYDONE        ++ NAME                 00084800
                      LCLC  &XLESSTHAN  ++ NAME                         00084900
                      LCLC  &XNOSTORAGE         ++ NAME                 00085000
                      LCLC  &XINVALIDTOKN       ++ NAME                 00085100
                      LCLC  &XINVALIDLEN        ++ NAME                 00085200
                      LCLC  &XVECTORINDEX       ++ NAME                 00085300
                      LCLC  &XBITSTRING         ++ NAME                 00085400
                      LCLC  &XALLEMPVAL         ++ NAME                 00085500
                      LCLC  &XSOMENEINV         ++ NAME                 00085600
                      LCLC  &XINDXINVALID       ++ NAME                 00085700
                      LCLC  &XLSTEMPTY  ++ NAME                         00085800
                      LCLC  &XLSTNONEMPTY       ++ NAME                 00085900
                      LCLC  &XVALIDATE  ++ VALUE                        00086000
                      LCLC  &XRETCODE   ++ NAME                         00086100
.*******************************************************************    00086200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00086300
.*******************************************************************    00086400
                      LCLC  &ZXVECTORTOKEN      ++ INPUT NAME           00086500
                      LCLC  &ZXWORKAREA         ++ INPUT NAME           00086600
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  00086700
                      LCLC  &ZXVECTORLEN        ++ INPUT NAME           00086800
                      LCLC  &ZXACTUALVECLEN     ++ OUTPUT NAME          00086900
                      LCLC  &ZXBRANCHTABLE      ++ INPUT VALUE          00087000
                      LCLC  &ZXMODIFYDONE       ++ INPUT NAME           00087100
                      LCLC  &ZXLESSTHAN         ++ INPUT NAME           00087200
                      LCLC  &ZXNOSTORAGE        ++ INPUT NAME           00087300
                      LCLC  &ZXINVALIDTOKN      ++ INPUT NAME           00087400
                      LCLC  &ZXINVALIDLEN       ++ INPUT NAME           00087500
                      LCLC  &ZXVECTORINDEX      ++ INPUT NAME           00087600
                      LCLC  &ZXBITSTRING        ++ OUTPUT NAME          00087700
                      LCLC  &ZXALLEMPVAL        ++ INPUT NAME           00087800
                      LCLC  &ZXSOMENEINV        ++ INPUT NAME           00087900
                      LCLC  &ZXINDXINVALID      ++ INPUT NAME           00088000
                      LCLC  &ZXLSTEMPTY         ++ INPUT NAME           00088100
                      LCLC  &ZXLSTNONEMPTY      ++ INPUT NAME           00088200
                      LCLC  &ZXVALIDATE         ++ INPUT VALUE          00088300
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00088400
.********************************************************************   00088500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00088600
.********************************************************************   00088700
                      ACTR  10000                                       00088800
.*----------------------------------------------------------------***   00088900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00089000
                      AIF   (N'&VECTORTOKEN LE 1).ZG2A  CK NUM          00089100
&ZMS                  SETC  '"VECTORTOKEN='     *KPOSA* MNOTE           00089200
&ZMS                  SETC  '&ZMS.&VECTORTOKEN"'                        00089300
&ZMS                  SETC  '&ZMS "VECTORTOKEN"'                        00089400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00089500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00089600
.ZG2A                 ANOP  ,                                           00089700
.*-------------------------------------------------------------------   00089800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00089900
&ZXVECTORTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00090000
&XVECTORTOKEN         SETC  '&VECTORTOKEN(1)'   SET XVARIABLE           00090100
                      AIF   (N'&VECTORTOKEN GT 1).ZG2B  MULTI PARMS     00090200
&XVECTORTOKEN         SETC  '&VECTORTOKEN'      SET XVARIABLE           00090300
.ZG2B                 AIF   (K'&VECTORTOKEN(1) GT 0).ZG2C               00090400
&ZXVECTORTOKEN        SETC  ''          RESET IN/OUTPUT                 00090500
&ZMS                  SETC  ' '         *KRQDA*                         00090600
&ZMS                  SETC  '&ZMS "VECTORTOKEN" KEY AND ITS ARGUMENT'   00090700
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00090800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00090900
.ZG2C                 ANOP  ,                                           00091000
.*-------------------------------------------------------------------   00091100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00091200
                      AIF   (K'&ZXVECTORTOKEN LE 0).ZG2R  NOT I/O       00091300
                      AIF   ('&XVECTORTOKEN'(1,1) NE '(').ZG2R          00091400
&ZCGPR                SETC  '&XVECTORTOKEN'(2,K'&XVECTORTOKEN-2)        00091500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 00091600
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        00091700
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      00091800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00091900
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    00092000
.ZG2P                 ANOP  ,                                           00092100
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         00092200
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      00092300
                      AIF   ('&ZCGPR' LE '12').ZG2R                     00092400
.ZG2Q                 ANOP  ,                                           00092500
&ZMS                  SETC  '"VECTORTOKEN='     *KGPRA* MNOTE           00092600
&ZMS                  SETC  '&ZMS.&VECTORTOKEN"'                        00092700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00092800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00092900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00093000
.ZG2R                 ANOP  ,                                           00093100
.*----------------------------------------------------------------***   00093200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00093300
                      AIF   (N'&WORKAREA LE 1).ZG5A  CK NUM             00093400
&ZMS                  SETC  '"WORKAREA='        *KPOSA* MNOTE           00093500
&ZMS                  SETC  '&ZMS.&WORKAREA"'                           00093600
&ZMS                  SETC  '&ZMS "WORKAREA"'                           00093700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00093800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00093900
.ZG5A                 ANOP  ,                                           00094000
.*-------------------------------------------------------------------   00094100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00094200
&ZXWORKAREA           SETC  'INPUT'     SET IN/OUTPUT                   00094300
&XWORKAREA            SETC  '&WORKAREA(1)'      SET XVARIABLE           00094400
                      AIF   (N'&WORKAREA GT 1).ZG5B  MULTI PARMS        00094500
&XWORKAREA            SETC  '&WORKAREA'         SET XVARIABLE           00094600
.ZG5B                 AIF   (K'&WORKAREA(1) GT 0).ZG5C                  00094700
&ZXWORKAREA           SETC  ''          RESET IN/OUTPUT                 00094800
&ZMS                  SETC  ' '         *KRQDA*                         00094900
&ZMS                  SETC  '&ZMS "WORKAREA" KEY AND ITS ARGUMENT'      00095000
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00095100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00095200
.ZG5C                 ANOP  ,                                           00095300
.*-------------------------------------------------------------------   00095400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00095500
                      AIF   (K'&ZXWORKAREA LE 0).ZG5R  NOT I/O          00095600
                      AIF   ('&XWORKAREA'(1,1) NE '(').ZG5R             00095700
&ZCGPR                SETC  '&XWORKAREA'(2,K'&XWORKAREA-2)              00095800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                 00095900
                      AIF   (K'&ZCGPR GT 2).ZG5Q                        00096000
                      AIF   ('&ZCGPR' EQ '0').ZG5Q                      00096100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00096200
                      AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME    00096300
.ZG5P                 ANOP  ,                                           00096400
                      AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC         00096500
                      AIF   ('&ZCGPR' LT '2').ZG5Q                      00096600
                      AIF   ('&ZCGPR' LE '12').ZG5R                     00096700
.ZG5Q                 ANOP  ,                                           00096800
&ZMS                  SETC  '"WORKAREA='        *KGPRA* MNOTE           00096900
&ZMS                  SETC  '&ZMS.&WORKAREA"'                           00097000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00097100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00097200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00097300
.ZG5R                 ANOP  ,                                           00097400
.*------------------------------------------------------------------    00097500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00097600
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            00097700
.*-------------------------------------------------------------------   00097800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00097900
.ZG9                  ANOP  ,                                           00098000
                      AIF   (K'&REQUEST(1) LE 0).ZG9A                   00098100
&ZTLC                 SETC 'MODIFYVECTORSIZE'                           00098200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG36             00098300
&XREQUEST             SETC  'MODIFYVECTORSIZE'  SET KEYWORD             00098400
                      AIF   (N'&REQUEST LE 1).ZG9A  CK NUM              00098500
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00098600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00098700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00098800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00098900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00099000
.ZG9A                 ANOP  ,                                           00099100
.*------------------------------------------------------------------    00099200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00099300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00099400
.ZG9A0                AIF   (K'&VECTORINDEX LE 0).ZG9A1  OK             00099500
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00099600
.ZG9A1                AIF   (K'&BITSTRING LE 0).ZG9A2  OK               00099700
&ZCVAL                SETC '&ZCVAL BITSTRING'   INCORRECT KEY USED      00099800
.ZG9A2                AIF   (K'&ALLEMPVAL LE 0).ZG9A3  OK               00099900
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00100000
.ZG9A3                AIF   (K'&SOMENEINV LE 0).ZG9A4  OK               00100100
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00100200
.ZG9A4                AIF   (K'&INDXINVALID LE 0).ZG9A5  OK             00100300
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00100400
.ZG9A5                AIF   (K'&LSTEMPTY LE 0).ZG9A6  OK                00100500
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00100600
.ZG9A6                AIF   (K'&LSTNONEMPTY LE 0).ZG9A7  OK             00100700
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00100800
.ZG9A7                AIF   (K'&VALIDATE LE 0).ZG9A8  OK                00100900
&ZCVAL                SETC '&ZCVAL VALIDATE'    INCORRECT KEY USED      00101000
.ZG9A8                AIF   (K'&ZCVAL LE 0).ZG9A9  OK                   00101100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00101200
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00101300
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00101400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00101500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00101600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00101700
.ZG9A9                ANOP  ,                                           00101800
.*----------------------------------------------------------------***   00101900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00102000
                      AIF   (N'&VECTORLEN LE 1).ZG11A  CK NUM           00102100
&ZMS                  SETC  '"VECTORLEN='       *KPOSA* MNOTE           00102200
&ZMS                  SETC  '&ZMS.&VECTORLEN"'                          00102300
&ZMS                  SETC  '&ZMS "VECTORLEN"'                          00102400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00102500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00102600
.ZG11A                ANOP  ,                                           00102700
.*-------------------------------------------------------------------   00102800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00102900
&ZXVECTORLEN          SETC  'INPUT'     SET IN/OUTPUT                   00103000
&XVECTORLEN           SETC  '&VECTORLEN(1)'     SET XVARIABLE           00103100
                      AIF   (N'&VECTORLEN GT 1).ZG11B  MULTI PARMS      00103200
&XVECTORLEN           SETC  '&VECTORLEN'        SET XVARIABLE           00103300
.ZG11B                AIF   (K'&VECTORLEN(1) GT 0).ZG11C                00103400
&ZXVECTORLEN          SETC  ''          RESET IN/OUTPUT                 00103500
&ZMS                  SETC  ' '         *KRQDA*                         00103600
&ZMS                  SETC  '&ZMS "VECTORLEN" KEY AND ITS ARGUMENT'     00103700
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00103800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00103900
.ZG11C                ANOP  ,                                           00104000
.*-------------------------------------------------------------------   00104100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00104200
                      AIF   (K'&ZXVECTORLEN LE 0).ZG11R  NOT I/O        00104300
                      AIF   ('&XVECTORLEN'(1,1) NE '(').ZG11R           00104400
&ZCGPR                SETC  '&XVECTORLEN'(2,K'&XVECTORLEN-2)            00104500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                00104600
                      AIF   (K'&ZCGPR GT 2).ZG11Q                       00104700
                      AIF   ('&ZCGPR' EQ '0').ZG11Q                     00104800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00104900
                      AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME   00105000
.ZG11P                ANOP  ,                                           00105100
                      AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC        00105200
                      AIF   ('&ZCGPR' LT '2').ZG11Q                     00105300
                      AIF   ('&ZCGPR' LE '12').ZG11R                    00105400
.ZG11Q                ANOP  ,                                           00105500
&ZMS                  SETC  '"VECTORLEN='       *KGPRA* MNOTE           00105600
&ZMS                  SETC  '&ZMS.&VECTORLEN"'                          00105700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00105800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00105900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00106000
.ZG11R                ANOP  ,                                           00106100
.*----------------------------------------------------------------***   00106200
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00106300
                      AIF   (N'&ACTUALVECLEN LE 1).ZG14A  CK NUM        00106400
&ZMS                  SETC  '"ACTUALVECLEN='    *KPOSA* MNOTE           00106500
&ZMS                  SETC  '&ZMS.&ACTUALVECLEN"'                       00106600
&ZMS                  SETC  '&ZMS "ACTUALVECLEN"'                       00106700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00106800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00106900
.ZG14A                ANOP  ,                                           00107000
.*-------------------------------------------------------------------   00107100
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00107200
&ZXACTUALVECLEN       SETC  'OUTPUT'    SET IN/OUTPUT                   00107300
&XACTUALVECLEN        SETC  '&ACTUALVECLEN(1)'  SET XVARIABLE           00107400
                      AIF   (N'&ACTUALVECLEN GT 1).ZG14B  MULTI PARMS   00107500
&XACTUALVECLEN        SETC  '&ACTUALVECLEN'     SET XVARIABLE           00107600
.ZG14B                AIF   (K'&ACTUALVECLEN(1) GT 0).ZG14C             00107700
&ZXACTUALVECLEN       SETC  ''          RESET IN/OUTPUT                 00107800
&ZMS                  SETC  ' '         *KRQDA*                         00107900
&ZMS                  SETC  '&ZMS "ACTUALVECLEN" KEY AND ITS ARGUMENT'  00108000
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00108100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00108200
.ZG14C                ANOP  ,                                           00108300
.*-------------------------------------------------------------------   00108400
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00108500
                      AIF   (K'&ZXACTUALVECLEN LE 0).ZG14R  NOT I/O     00108600
                      AIF   ('&XACTUALVECLEN'(1,1) NE '(').ZG14R        00108700
&ZCGPR                SETC  '&XACTUALVECLEN'(2,K'&XACTUALVECLEN-2)      00108800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                00108900
                      AIF   (K'&ZCGPR GT 2).ZG14Q                       00109000
                      AIF   ('&ZCGPR' EQ '0').ZG14Q                     00109100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00109200
                      AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME   00109300
.ZG14P                ANOP  ,                                           00109400
                      AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC        00109500
                      AIF   ('&ZCGPR' LT '2').ZG14Q                     00109600
                      AIF   ('&ZCGPR' LE '12').ZG14R                    00109700
.ZG14Q                ANOP  ,                                           00109800
&ZMS                  SETC  '"ACTUALVECLEN='    *KGPRA* MNOTE           00109900
&ZMS                  SETC  '&ZMS.&ACTUALVECLEN"'                       00110000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00110100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00110200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00110300
.ZG14R                ANOP  ,                                           00110400
.*------------------------------------------------------------------    00110500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110600
&XBRANCHTABLE         SETC  ''          INITIALIZE XVARIABLE            00110700
.*-------------------------------------------------------------------   00110800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110900
.ZG18                 ANOP  ,                                           00111000
                      AIF   (K'&BRANCHTABLE(1) LE 0).ZG18A              00111100
&ZTLC                 SETC 'NO'                                         00111200
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG19         00111300
&XBRANCHTABLE         SETC  'NO'        SET KEYWORD                     00111400
                      AIF   (N'&BRANCHTABLE LE 1).ZG18A  CK NUM         00111500
&ZMS                  SETC  '"BRANCHTABLE='     *KPOSA* MNOTE           00111600
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00111700
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00111800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00111900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00112000
.ZG18A                ANOP  ,                                           00112100
.*------------------------------------------------------------------    00112200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00112300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00112400
.ZG18A0               AIF   (K'&MODIFYDONE LE 0).ZG18A1  OK             00112500
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00112600
.ZG18A1               AIF   (K'&LESSTHAN LE 0).ZG18A2  OK               00112700
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00112800
.ZG18A2               AIF   (K'&NOSTORAGE LE 0).ZG18A3  OK              00112900
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00113000
.ZG18A3               AIF   (K'&INVALIDTOKN LE 0).ZG18A4  OK            00113100
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00113200
.ZG18A4               AIF   (K'&INVALIDLEN LE 0).ZG18A5  OK             00113300
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00113400
.ZG18A5               AIF   (K'&ZCVAL LE 0).ZG18A6  OK                  00113500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00113600
&ZMS                  SETC  '"BRANCHTABLE'      *KMEIA* MNOTE           00113700
&ZMS                  SETC  '&ZMS.=&BRANCHTABLE"'                       00113800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00113900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00114000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00114100
.ZG18A6               ANOP  ,                                           00114200
.*-------------------------------------------------------------------   00114300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00114400
.ZG19                 ANOP  ,                                           00114500
&ZTLC                 SETC 'YES'                                        00114600
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG35         00114700
&XBRANCHTABLE         SETC  'YES'       SET KEYWORD                     00114800
                      AIF   (N'&BRANCHTABLE LE 1).ZG19A  CK NUM         00114900
&ZMS                  SETC  '"BRANCHTABLE='     *KPOSA* MNOTE           00115000
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00115100
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00115200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00115300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00115400
.ZG19A                ANOP  ,                                           00115500
.*----------------------------------------------------------------***   00115600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00115700
                      AIF   (N'&MODIFYDONE LE 1).ZG21A  CK NUM          00115800
&ZMS                  SETC  '"MODIFYDONE='      *KPOSA* MNOTE           00115900
&ZMS                  SETC  '&ZMS.&MODIFYDONE"'                         00116000
&ZMS                  SETC  '&ZMS "MODIFYDONE"'                         00116100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00116200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00116300
.ZG21A                ANOP  ,                                           00116400
.*-------------------------------------------------------------------   00116500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00116600
&ZXMODIFYDONE         SETC  'INPUT'     SET IN/OUTPUT                   00116700
&XMODIFYDONE          SETC  '&MODIFYDONE(1)'    SET XVARIABLE           00116800
                      AIF   (N'&MODIFYDONE GT 1).ZG21B  MULTI PARMS     00116900
&XMODIFYDONE          SETC  '&MODIFYDONE'       SET XVARIABLE           00117000
.ZG21B                AIF   (K'&MODIFYDONE(1) GT 0).ZG21C               00117100
&ZXMODIFYDONE         SETC  ''          RESET IN/OUTPUT                 00117200
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00117300
&ZMS                  SETC  '&ZMS , "MODIFYDONE" KEY AND ITS ARGUMENT'  00117400
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00117500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00117600
.ZG21C                ANOP  ,                                           00117700
.*-------------------------------------------------------------------   00117800
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00117900
                      AIF   (K'&ZXMODIFYDONE LE 0).ZG21P  NOT I/O       00118000
                      AIF   ('&XMODIFYDONE'(1,1) NE '(').ZG21P          00118100
&ZXMODIFYDONE         SETC  ''          RESET IN/OUTPUT                 00118200
&ZMS                  SETC  '"MODIFYDONE='      *KGPRA* MNOTE           00118300
&ZMS                  SETC  '&ZMS.&MODIFYDONE"'                         00118400
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00118500
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00118600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00118700
.ZG21P                ANOP  ,                                           00118800
.*----------------------------------------------------------------***   00118900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00119000
                      AIF   (N'&LESSTHAN LE 1).ZG24A  CK NUM            00119100
&ZMS                  SETC  '"LESSTHAN='        *KPOSA* MNOTE           00119200
&ZMS                  SETC  '&ZMS.&LESSTHAN"'                           00119300
&ZMS                  SETC  '&ZMS "LESSTHAN"'                           00119400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00119500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00119600
.ZG24A                ANOP  ,                                           00119700
.*-------------------------------------------------------------------   00119800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00119900
&ZXLESSTHAN           SETC  'INPUT'     SET IN/OUTPUT                   00120000
&XLESSTHAN            SETC  '&LESSTHAN(1)'      SET XVARIABLE           00120100
                      AIF   (N'&LESSTHAN GT 1).ZG24B  MULTI PARMS       00120200
&XLESSTHAN            SETC  '&LESSTHAN'         SET XVARIABLE           00120300
.ZG24B                AIF   (K'&LESSTHAN(1) GT 0).ZG24C                 00120400
&ZXLESSTHAN           SETC  ''          RESET IN/OUTPUT                 00120500
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00120600
&ZMS                  SETC  '&ZMS , "LESSTHAN" KEY AND ITS ARGUMENT'    00120700
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00120800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00120900
.ZG24C                ANOP  ,                                           00121000
.*-------------------------------------------------------------------   00121100
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00121200
                      AIF   (K'&ZXLESSTHAN LE 0).ZG24P  NOT I/O         00121300
                      AIF   ('&XLESSTHAN'(1,1) NE '(').ZG24P            00121400
&ZXLESSTHAN           SETC  ''          RESET IN/OUTPUT                 00121500
&ZMS                  SETC  '"LESSTHAN='        *KGPRA* MNOTE           00121600
&ZMS                  SETC  '&ZMS.&LESSTHAN"'                           00121700
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00121800
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00121900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00122000
.ZG24P                ANOP  ,                                           00122100
.*----------------------------------------------------------------***   00122200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00122300
                      AIF   (N'&NOSTORAGE LE 1).ZG27A  CK NUM           00122400
&ZMS                  SETC  '"NOSTORAGE='       *KPOSA* MNOTE           00122500
&ZMS                  SETC  '&ZMS.&NOSTORAGE"'                          00122600
&ZMS                  SETC  '&ZMS "NOSTORAGE"'                          00122700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00122800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00122900
.ZG27A                ANOP  ,                                           00123000
.*-------------------------------------------------------------------   00123100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00123200
&ZXNOSTORAGE          SETC  'INPUT'     SET IN/OUTPUT                   00123300
&XNOSTORAGE           SETC  '&NOSTORAGE(1)'     SET XVARIABLE           00123400
                      AIF   (N'&NOSTORAGE GT 1).ZG27B  MULTI PARMS      00123500
&XNOSTORAGE           SETC  '&NOSTORAGE'        SET XVARIABLE           00123600
.ZG27B                AIF   (K'&NOSTORAGE(1) GT 0).ZG27C                00123700
&ZXNOSTORAGE          SETC  ''          RESET IN/OUTPUT                 00123800
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00123900
&ZMS                  SETC  '&ZMS , "NOSTORAGE" KEY AND ITS ARGUMENT'   00124000
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00124100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00124200
.ZG27C                ANOP  ,                                           00124300
.*-------------------------------------------------------------------   00124400
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00124500
                      AIF   (K'&ZXNOSTORAGE LE 0).ZG27P  NOT I/O        00124600
                      AIF   ('&XNOSTORAGE'(1,1) NE '(').ZG27P           00124700
&ZXNOSTORAGE          SETC  ''          RESET IN/OUTPUT                 00124800
&ZMS                  SETC  '"NOSTORAGE='       *KGPRA* MNOTE           00124900
&ZMS                  SETC  '&ZMS.&NOSTORAGE"'                          00125000
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00125100
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00125200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00125300
.ZG27P                ANOP  ,                                           00125400
.*----------------------------------------------------------------***   00125500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00125600
                      AIF   (N'&INVALIDTOKN LE 1).ZG30A  CK NUM         00125700
&ZMS                  SETC  '"INVALIDTOKN='     *KPOSA* MNOTE           00125800
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00125900
&ZMS                  SETC  '&ZMS "INVALIDTOKN"'                        00126000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00126100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00126200
.ZG30A                ANOP  ,                                           00126300
.*-------------------------------------------------------------------   00126400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00126500
&ZXINVALIDTOKN        SETC  'INPUT'     SET IN/OUTPUT                   00126600
&XINVALIDTOKN         SETC  '&INVALIDTOKN(1)'   SET XVARIABLE           00126700
                      AIF   (N'&INVALIDTOKN GT 1).ZG30B  MULTI PARMS    00126800
&XINVALIDTOKN         SETC  '&INVALIDTOKN'      SET XVARIABLE           00126900
.ZG30B                AIF   (K'&INVALIDTOKN(1) GT 0).ZG30C              00127000
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00127100
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00127200
&ZMS                  SETC  '&ZMS , "INVALIDTOKN" KEY AND ITS ARGUMENT' 00127300
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00127400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00127500
.ZG30C                ANOP  ,                                           00127600
.*-------------------------------------------------------------------   00127700
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00127800
                      AIF   (K'&ZXINVALIDTOKN LE 0).ZG30P  NOT I/O      00127900
                      AIF   ('&XINVALIDTOKN'(1,1) NE '(').ZG30P         00128000
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00128100
&ZMS                  SETC  '"INVALIDTOKN='     *KGPRA* MNOTE           00128200
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00128300
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00128400
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00128500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00128600
.ZG30P                ANOP  ,                                           00128700
.*----------------------------------------------------------------***   00128800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00128900
                      AIF   (N'&INVALIDLEN LE 1).ZG33A  CK NUM          00129000
&ZMS                  SETC  '"INVALIDLEN='      *KPOSA* MNOTE           00129100
&ZMS                  SETC  '&ZMS.&INVALIDLEN"'                         00129200
&ZMS                  SETC  '&ZMS "INVALIDLEN"'                         00129300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00129400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00129500
.ZG33A                ANOP  ,                                           00129600
.*-------------------------------------------------------------------   00129700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00129800
&ZXINVALIDLEN         SETC  'INPUT'     SET IN/OUTPUT                   00129900
&XINVALIDLEN          SETC  '&INVALIDLEN(1)'    SET XVARIABLE           00130000
                      AIF   (N'&INVALIDLEN GT 1).ZG33B  MULTI PARMS     00130100
&XINVALIDLEN          SETC  '&INVALIDLEN'       SET XVARIABLE           00130200
.ZG33B                AIF   (K'&INVALIDLEN(1) GT 0).ZG33C               00130300
&ZXINVALIDLEN         SETC  ''          RESET IN/OUTPUT                 00130400
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00130500
&ZMS                  SETC  '&ZMS , "INVALIDLEN" KEY AND ITS ARGUMENT'  00130600
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00130700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00130800
.ZG33C                ANOP  ,                                           00130900
.*-------------------------------------------------------------------   00131000
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00131100
                      AIF   (K'&ZXINVALIDLEN LE 0).ZG33P  NOT I/O       00131200
                      AIF   ('&XINVALIDLEN'(1,1) NE '(').ZG33P          00131300
&ZXINVALIDLEN         SETC  ''          RESET IN/OUTPUT                 00131400
&ZMS                  SETC  '"INVALIDLEN='      *KGPRA* MNOTE           00131500
&ZMS                  SETC  '&ZMS.&INVALIDLEN"'                         00131600
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00131700
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00131800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00131900
.ZG33P                ANOP  ,                                           00132000
.*------------------------------------------------------------------    00132100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00132200
.ZG35                 ANOP  ,                                           00132300
&ZXBRANCHTABLE        SETC  'INPUT'     SET IN/OUTPUT                   00132400
                      AIF   (K'&XBRANCHTABLE GT 0).ZG35E  VALID ARG     00132500
                      AIF   (T'&BRANCHTABLE EQ 'O').ZG35D  OMITTED      00132600
&ZASYSLNDX            SETA  0                                           00132700
.ZG35A                ANOP  ,           POSITIONAL MACRO KEY            00132800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00132900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG35C            00133000
&ZTLC                 SETC 'BRANCHTABLE'                                00133100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG35A   00133200
.ZG35B                ANOP  ,                                           00133300
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00133400
&ZMS                  SETC  'THE "BRANCHTABLE" KEY'  *KOPTA* MNOTE      00133500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00133600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00133700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00133800
                      AGO   .ZG35E                                      00133900
.ZG35C                ANOP  ,                                           00134000
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00134100
&ZMS                  SETC  '"BRANCHTABLE='     *KUKWA* MNOTE           00134200
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00134300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00134400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00134500
&ZMS                  SETC  '&ZMS "NO"'         VALID KEYWORD           00134600
&ZMS                  SETC  '&ZMS OR "YES".'    VALID KEYWORD           00134700
                      MNOTE 8,' &ZMS '                                  00134800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00134900
                      AGO   .ZG35E                                      00135000
.ZG35D                ANOP  ,                                           00135100
&XBRANCHTABLE         SETC  'NO'        SET DEFAULT KEYWORD             00135200
.ZG35E                ANOP  ,                                           00135300
.*-------------------------------------------------------------------   00135400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00135500
.ZG36                 ANOP  ,                                           00135600
&ZTLC                 SETC 'LTVECENTRIES'                               00135700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG60             00135800
&XREQUEST             SETC  'LTVECENTRIES'      SET KEYWORD             00135900
                      AIF   (N'&REQUEST LE 1).ZG36A  CK NUM             00136000
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00136100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00136200
&ZMS                  SETC  '&ZMS "REQUEST"'                            00136300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00136400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00136500
.ZG36A                ANOP  ,                                           00136600
.*------------------------------------------------------------------    00136700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00136800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00136900
.ZG36A0               AIF   (K'&VECTORLEN LE 0).ZG36A1  OK              00137000
&ZCVAL                SETC '&ZCVAL VECTORLEN'   INCORRECT KEY USED      00137100
.ZG36A1               AIF   (K'&ACTUALVECLEN LE 0).ZG36A2  OK           00137200
&ZCVAL                SETC '&ZCVAL ACTUALVECLEN'  INCORRECT KEY USED    00137300
.ZG36A2               AIF   (K'&MODIFYDONE LE 0).ZG36A3  OK             00137400
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00137500
.ZG36A3               AIF   (K'&LESSTHAN LE 0).ZG36A4  OK               00137600
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00137700
.ZG36A4               AIF   (K'&NOSTORAGE LE 0).ZG36A5  OK              00137800
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00137900
.ZG36A5               AIF   (K'&INVALIDLEN LE 0).ZG36A6  OK             00138000
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00138100
.ZG36A6               AIF   (K'&LSTEMPTY LE 0).ZG36A7  OK               00138200
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00138300
.ZG36A7               AIF   (K'&LSTNONEMPTY LE 0).ZG36A8  OK            00138400
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00138500
.ZG36A8               AIF   (K'&VALIDATE LE 0).ZG36A9  OK               00138600
&ZCVAL                SETC '&ZCVAL VALIDATE'    INCORRECT KEY USED      00138700
.ZG36A9               AIF   (K'&ZCVAL LE 0).ZG36A10  OK                 00138800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00138900
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00139000
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00139100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00139200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00139300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00139400
.ZG36A10              ANOP  ,                                           00139500
.*----------------------------------------------------------------***   00139600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00139700
                      AIF   (N'&VECTORINDEX LE 1).ZG38A  CK NUM         00139800
&ZMS                  SETC  '"VECTORINDEX='     *KPOSA* MNOTE           00139900
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00140000
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00140100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00140200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00140300
.ZG38A                ANOP  ,                                           00140400
.*-------------------------------------------------------------------   00140500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00140600
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00140700
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00140800
                      AIF   (N'&VECTORINDEX GT 1).ZG38B  MULTI PARMS    00140900
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00141000
.ZG38B                AIF   (K'&VECTORINDEX(1) GT 0).ZG38C              00141100
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00141200
&ZMS                  SETC  ' '         *KRQDA*                         00141300
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS ARGUMENT'   00141400
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00141500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00141600
.ZG38C                ANOP  ,                                           00141700
.*-------------------------------------------------------------------   00141800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00141900
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG38R  NOT I/O      00142000
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG38R         00142100
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00142200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                00142300
                      AIF   (K'&ZCGPR GT 2).ZG38Q                       00142400
                      AIF   ('&ZCGPR' EQ '0').ZG38Q                     00142500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00142600
                      AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME   00142700
.ZG38P                ANOP  ,                                           00142800
                      AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC        00142900
                      AIF   ('&ZCGPR' LT '2').ZG38Q                     00143000
                      AIF   ('&ZCGPR' LE '12').ZG38R                    00143100
.ZG38Q                ANOP  ,                                           00143200
&ZMS                  SETC  '"VECTORINDEX='     *KGPRA* MNOTE           00143300
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00143400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00143500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00143600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00143700
.ZG38R                ANOP  ,                                           00143800
.*----------------------------------------------------------------***   00143900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00144000
                      AIF   (N'&BITSTRING LE 1).ZG41A  CK NUM           00144100
&ZMS                  SETC  '"BITSTRING='       *KPOSA* MNOTE           00144200
&ZMS                  SETC  '&ZMS.&BITSTRING"'                          00144300
&ZMS                  SETC  '&ZMS "BITSTRING"'                          00144400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00144500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00144600
.ZG41A                ANOP  ,                                           00144700
.*-------------------------------------------------------------------   00144800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00144900
&ZXBITSTRING          SETC  'OUTPUT'    SET IN/OUTPUT                   00145000
&XBITSTRING           SETC  '&BITSTRING(1)'     SET XVARIABLE           00145100
                      AIF   (N'&BITSTRING GT 1).ZG41B  MULTI PARMS      00145200
&XBITSTRING           SETC  '&BITSTRING'        SET XVARIABLE           00145300
.ZG41B                AIF   (K'&BITSTRING(1) GT 0).ZG41C                00145400
&ZXBITSTRING          SETC  ''          RESET IN/OUTPUT                 00145500
&ZMS                  SETC  ' '         *KRQDA*                         00145600
&ZMS                  SETC  '&ZMS "BITSTRING" KEY AND ITS ARGUMENT'     00145700
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00145800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00145900
.ZG41C                ANOP  ,                                           00146000
.*-------------------------------------------------------------------   00146100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00146200
                      AIF   (K'&ZXBITSTRING LE 0).ZG41R  NOT I/O        00146300
                      AIF   ('&XBITSTRING'(1,1) NE '(').ZG41R           00146400
&ZCGPR                SETC  '&XBITSTRING'(2,K'&XBITSTRING-2)            00146500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                00146600
                      AIF   (K'&ZCGPR GT 2).ZG41Q                       00146700
                      AIF   ('&ZCGPR' EQ '0').ZG41Q                     00146800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00146900
                      AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME   00147000
.ZG41P                ANOP  ,                                           00147100
                      AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC        00147200
                      AIF   ('&ZCGPR' LT '2').ZG41Q                     00147300
                      AIF   ('&ZCGPR' LE '12').ZG41R                    00147400
.ZG41Q                ANOP  ,                                           00147500
&ZMS                  SETC  '"BITSTRING='       *KGPRA* MNOTE           00147600
&ZMS                  SETC  '&ZMS.&BITSTRING"'                          00147700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00147800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00147900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00148000
.ZG41R                ANOP  ,                                           00148100
.*------------------------------------------------------------------    00148200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00148300
&XBRANCHTABLE         SETC  ''          INITIALIZE XVARIABLE            00148400
.*-------------------------------------------------------------------   00148500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00148600
.ZG45                 ANOP  ,                                           00148700
                      AIF   (K'&BRANCHTABLE(1) LE 0).ZG45A              00148800
&ZTLC                 SETC 'NO'                                         00148900
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG46         00149000
&XBRANCHTABLE         SETC  'NO'        SET KEYWORD                     00149100
                      AIF   (N'&BRANCHTABLE LE 1).ZG45A  CK NUM         00149200
&ZMS                  SETC  '"BRANCHTABLE='     *KPOSA* MNOTE           00149300
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00149400
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00149500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00149600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00149700
.ZG45A                ANOP  ,                                           00149800
.*------------------------------------------------------------------    00149900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00150000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00150100
.ZG45A0               AIF   (K'&ALLEMPVAL LE 0).ZG45A1  OK              00150200
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00150300
.ZG45A1               AIF   (K'&SOMENEINV LE 0).ZG45A2  OK              00150400
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00150500
.ZG45A2               AIF   (K'&INDXINVALID LE 0).ZG45A3  OK            00150600
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00150700
.ZG45A3               AIF   (K'&INVALIDTOKN LE 0).ZG45A4  OK            00150800
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00150900
.ZG45A4               AIF   (K'&ZCVAL LE 0).ZG45A5  OK                  00151000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00151100
&ZMS                  SETC  '"BRANCHTABLE'      *KMEIA* MNOTE           00151200
&ZMS                  SETC  '&ZMS.=&BRANCHTABLE"'                       00151300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00151400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00151500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00151600
.ZG45A5               ANOP  ,                                           00151700
.*-------------------------------------------------------------------   00151800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00151900
.ZG46                 ANOP  ,                                           00152000
&ZTLC                 SETC 'YES'                                        00152100
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG59         00152200
&XBRANCHTABLE         SETC  'YES'       SET KEYWORD                     00152300
                      AIF   (N'&BRANCHTABLE LE 1).ZG46A  CK NUM         00152400
&ZMS                  SETC  '"BRANCHTABLE='     *KPOSA* MNOTE           00152500
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00152600
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00152700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00152800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00152900
.ZG46A                ANOP  ,                                           00153000
.*----------------------------------------------------------------***   00153100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00153200
                      AIF   (N'&ALLEMPVAL LE 1).ZG48A  CK NUM           00153300
&ZMS                  SETC  '"ALLEMPVAL='       *KPOSA* MNOTE           00153400
&ZMS                  SETC  '&ZMS.&ALLEMPVAL"'                          00153500
&ZMS                  SETC  '&ZMS "ALLEMPVAL"'                          00153600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00153700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00153800
.ZG48A                ANOP  ,                                           00153900
.*-------------------------------------------------------------------   00154000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00154100
&ZXALLEMPVAL          SETC  'INPUT'     SET IN/OUTPUT                   00154200
&XALLEMPVAL           SETC  '&ALLEMPVAL(1)'     SET XVARIABLE           00154300
                      AIF   (N'&ALLEMPVAL GT 1).ZG48B  MULTI PARMS      00154400
&XALLEMPVAL           SETC  '&ALLEMPVAL'        SET XVARIABLE           00154500
.ZG48B                AIF   (K'&ALLEMPVAL(1) GT 0).ZG48C                00154600
&ZXALLEMPVAL          SETC  ''          RESET IN/OUTPUT                 00154700
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00154800
&ZMS                  SETC  '&ZMS , "ALLEMPVAL" KEY AND ITS ARGUMENT'   00154900
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00155000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00155100
.ZG48C                ANOP  ,                                           00155200
.*-------------------------------------------------------------------   00155300
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00155400
                      AIF   (K'&ZXALLEMPVAL LE 0).ZG48P  NOT I/O        00155500
                      AIF   ('&XALLEMPVAL'(1,1) NE '(').ZG48P           00155600
&ZXALLEMPVAL          SETC  ''          RESET IN/OUTPUT                 00155700
&ZMS                  SETC  '"ALLEMPVAL='       *KGPRA* MNOTE           00155800
&ZMS                  SETC  '&ZMS.&ALLEMPVAL"'                          00155900
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00156000
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00156100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00156200
.ZG48P                ANOP  ,                                           00156300
.*----------------------------------------------------------------***   00156400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00156500
                      AIF   (N'&SOMENEINV LE 1).ZG51A  CK NUM           00156600
&ZMS                  SETC  '"SOMENEINV='       *KPOSA* MNOTE           00156700
&ZMS                  SETC  '&ZMS.&SOMENEINV"'                          00156800
&ZMS                  SETC  '&ZMS "SOMENEINV"'                          00156900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00157000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00157100
.ZG51A                ANOP  ,                                           00157200
.*-------------------------------------------------------------------   00157300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00157400
&ZXSOMENEINV          SETC  'INPUT'     SET IN/OUTPUT                   00157500
&XSOMENEINV           SETC  '&SOMENEINV(1)'     SET XVARIABLE           00157600
                      AIF   (N'&SOMENEINV GT 1).ZG51B  MULTI PARMS      00157700
&XSOMENEINV           SETC  '&SOMENEINV'        SET XVARIABLE           00157800
.ZG51B                AIF   (K'&SOMENEINV(1) GT 0).ZG51C                00157900
&ZXSOMENEINV          SETC  ''          RESET IN/OUTPUT                 00158000
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00158100
&ZMS                  SETC  '&ZMS , "SOMENEINV" KEY AND ITS ARGUMENT'   00158200
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00158300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00158400
.ZG51C                ANOP  ,                                           00158500
.*-------------------------------------------------------------------   00158600
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00158700
                      AIF   (K'&ZXSOMENEINV LE 0).ZG51P  NOT I/O        00158800
                      AIF   ('&XSOMENEINV'(1,1) NE '(').ZG51P           00158900
&ZXSOMENEINV          SETC  ''          RESET IN/OUTPUT                 00159000
&ZMS                  SETC  '"SOMENEINV='       *KGPRA* MNOTE           00159100
&ZMS                  SETC  '&ZMS.&SOMENEINV"'                          00159200
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00159300
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00159400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00159500
.ZG51P                ANOP  ,                                           00159600
.*----------------------------------------------------------------***   00159700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00159800
                      AIF   (N'&INDXINVALID LE 1).ZG54A  CK NUM         00159900
&ZMS                  SETC  '"INDXINVALID='     *KPOSA* MNOTE           00160000
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00160100
&ZMS                  SETC  '&ZMS "INDXINVALID"'                        00160200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00160300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00160400
.ZG54A                ANOP  ,                                           00160500
.*-------------------------------------------------------------------   00160600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00160700
&ZXINDXINVALID        SETC  'INPUT'     SET IN/OUTPUT                   00160800
&XINDXINVALID         SETC  '&INDXINVALID(1)'   SET XVARIABLE           00160900
                      AIF   (N'&INDXINVALID GT 1).ZG54B  MULTI PARMS    00161000
&XINDXINVALID         SETC  '&INDXINVALID'      SET XVARIABLE           00161100
.ZG54B                AIF   (K'&INDXINVALID(1) GT 0).ZG54C              00161200
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00161300
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00161400
&ZMS                  SETC  '&ZMS , "INDXINVALID" KEY AND ITS ARGUMENT' 00161500
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00161600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00161700
.ZG54C                ANOP  ,                                           00161800
.*-------------------------------------------------------------------   00161900
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00162000
                      AIF   (K'&ZXINDXINVALID LE 0).ZG54P  NOT I/O      00162100
                      AIF   ('&XINDXINVALID'(1,1) NE '(').ZG54P         00162200
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00162300
&ZMS                  SETC  '"INDXINVALID='     *KGPRA* MNOTE           00162400
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00162500
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00162600
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00162700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00162800
.ZG54P                ANOP  ,                                           00162900
.*----------------------------------------------------------------***   00163000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00163100
                      AIF   (N'&INVALIDTOKN LE 1).ZG57A  CK NUM         00163200
&ZMS                  SETC  '"INVALIDTOKN='     *KPOSA* MNOTE           00163300
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00163400
&ZMS                  SETC  '&ZMS "INVALIDTOKN"'                        00163500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00163600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00163700
.ZG57A                ANOP  ,                                           00163800
.*-------------------------------------------------------------------   00163900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00164000
&ZXINVALIDTOKN        SETC  'INPUT'     SET IN/OUTPUT                   00164100
&XINVALIDTOKN         SETC  '&INVALIDTOKN(1)'   SET XVARIABLE           00164200
                      AIF   (N'&INVALIDTOKN GT 1).ZG57B  MULTI PARMS    00164300
&XINVALIDTOKN         SETC  '&INVALIDTOKN'      SET XVARIABLE           00164400
.ZG57B                AIF   (K'&INVALIDTOKN(1) GT 0).ZG57C              00164500
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00164600
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00164700
&ZMS                  SETC  '&ZMS , "INVALIDTOKN" KEY AND ITS ARGUMENT' 00164800
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00164900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00165000
.ZG57C                ANOP  ,                                           00165100
.*-------------------------------------------------------------------   00165200
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00165300
                      AIF   (K'&ZXINVALIDTOKN LE 0).ZG57P  NOT I/O      00165400
                      AIF   ('&XINVALIDTOKN'(1,1) NE '(').ZG57P         00165500
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00165600
&ZMS                  SETC  '"INVALIDTOKN='     *KGPRA* MNOTE           00165700
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00165800
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00165900
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00166000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00166100
.ZG57P                ANOP  ,                                           00166200
.*------------------------------------------------------------------    00166300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00166400
.ZG59                 ANOP  ,                                           00166500
&ZXBRANCHTABLE        SETC  'INPUT'     SET IN/OUTPUT                   00166600
                      AIF   (K'&XBRANCHTABLE GT 0).ZG59E  VALID ARG     00166700
                      AIF   (T'&BRANCHTABLE EQ 'O').ZG59D  OMITTED      00166800
&ZASYSLNDX            SETA  0                                           00166900
.ZG59A                ANOP  ,           POSITIONAL MACRO KEY            00167000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00167100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG59C            00167200
&ZTLC                 SETC 'BRANCHTABLE'                                00167300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG59A   00167400
.ZG59B                ANOP  ,                                           00167500
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00167600
&ZMS                  SETC  'THE "BRANCHTABLE" KEY'  *KOPTA* MNOTE      00167700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00167800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00167900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00168000
                      AGO   .ZG59E                                      00168100
.ZG59C                ANOP  ,                                           00168200
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00168300
&ZMS                  SETC  '"BRANCHTABLE='     *KUKWA* MNOTE           00168400
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00168500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00168600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00168700
&ZMS                  SETC  '&ZMS "NO"'         VALID KEYWORD           00168800
&ZMS                  SETC  '&ZMS OR "YES".'    VALID KEYWORD           00168900
                      MNOTE 8,' &ZMS '                                  00169000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00169100
                      AGO   .ZG59E                                      00169200
.ZG59D                ANOP  ,                                           00169300
&XBRANCHTABLE         SETC  'NO'        SET DEFAULT KEYWORD             00169400
.ZG59E                ANOP  ,                                           00169500
.*-------------------------------------------------------------------   00169600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00169700
.ZG60                 ANOP  ,                                           00169800
&ZTLC                 SETC 'TESTLISTSTATE'                              00169900
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG81             00170000
&XREQUEST             SETC  'TESTLISTSTATE'     SET KEYWORD             00170100
                      AIF   (N'&REQUEST LE 1).ZG60A  CK NUM             00170200
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00170300
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00170400
&ZMS                  SETC  '&ZMS "REQUEST"'                            00170500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00170600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00170700
.ZG60A                ANOP  ,                                           00170800
.*------------------------------------------------------------------    00170900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00171100
.ZG60A0               AIF   (K'&VECTORLEN LE 0).ZG60A1  OK              00171200
&ZCVAL                SETC '&ZCVAL VECTORLEN'   INCORRECT KEY USED      00171300
.ZG60A1               AIF   (K'&ACTUALVECLEN LE 0).ZG60A2  OK           00171400
&ZCVAL                SETC '&ZCVAL ACTUALVECLEN'  INCORRECT KEY USED    00171500
.ZG60A2               AIF   (K'&MODIFYDONE LE 0).ZG60A3  OK             00171600
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00171700
.ZG60A3               AIF   (K'&LESSTHAN LE 0).ZG60A4  OK               00171800
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00171900
.ZG60A4               AIF   (K'&NOSTORAGE LE 0).ZG60A5  OK              00172000
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00172100
.ZG60A5               AIF   (K'&INVALIDLEN LE 0).ZG60A6  OK             00172200
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00172300
.ZG60A6               AIF   (K'&BITSTRING LE 0).ZG60A7  OK              00172400
&ZCVAL                SETC '&ZCVAL BITSTRING'   INCORRECT KEY USED      00172500
.ZG60A7               AIF   (K'&ALLEMPVAL LE 0).ZG60A8  OK              00172600
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00172700
.ZG60A8               AIF   (K'&SOMENEINV LE 0).ZG60A9  OK              00172800
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00172900
.ZG60A9               AIF   (K'&VALIDATE LE 0).ZG60A10  OK              00173000
&ZCVAL                SETC '&ZCVAL VALIDATE'    INCORRECT KEY USED      00173100
.ZG60A10              AIF   (K'&ZCVAL LE 0).ZG60A11  OK                 00173200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00173300
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00173400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00173500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00173600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00173700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00173800
.ZG60A11              ANOP  ,                                           00173900
.*----------------------------------------------------------------***   00174000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00174100
                      AIF   (N'&VECTORINDEX LE 1).ZG62A  CK NUM         00174200
&ZMS                  SETC  '"VECTORINDEX='     *KPOSA* MNOTE           00174300
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00174400
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00174500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00174600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00174700
.ZG62A                ANOP  ,                                           00174800
.*-------------------------------------------------------------------   00174900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00175000
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00175100
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00175200
                      AIF   (N'&VECTORINDEX GT 1).ZG62B  MULTI PARMS    00175300
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00175400
.ZG62B                AIF   (K'&VECTORINDEX(1) GT 0).ZG62C              00175500
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00175600
&ZMS                  SETC  ' '         *KRQDA*                         00175700
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS ARGUMENT'   00175800
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00175900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00176000
.ZG62C                ANOP  ,                                           00176100
.*-------------------------------------------------------------------   00176200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00176300
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG62R  NOT I/O      00176400
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG62R         00176500
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00176600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                00176700
                      AIF   (K'&ZCGPR GT 2).ZG62Q                       00176800
                      AIF   ('&ZCGPR' EQ '0').ZG62Q                     00176900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00177000
                      AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME   00177100
.ZG62P                ANOP  ,                                           00177200
                      AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC        00177300
                      AIF   ('&ZCGPR' LT '2').ZG62Q                     00177400
                      AIF   ('&ZCGPR' LE '12').ZG62R                    00177500
.ZG62Q                ANOP  ,                                           00177600
&ZMS                  SETC  '"VECTORINDEX='     *KGPRA* MNOTE           00177700
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00177800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00177900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00178000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00178100
.ZG62R                ANOP  ,                                           00178200
.*------------------------------------------------------------------    00178300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178400
&XBRANCHTABLE         SETC  ''          INITIALIZE XVARIABLE            00178500
.*-------------------------------------------------------------------   00178600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178700
.ZG66                 ANOP  ,                                           00178800
                      AIF   (K'&BRANCHTABLE(1) LE 0).ZG66A              00178900
&ZTLC                 SETC 'NO'                                         00179000
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG67         00179100
&XBRANCHTABLE         SETC  'NO'        SET KEYWORD                     00179200
                      AIF   (N'&BRANCHTABLE LE 1).ZG66A  CK NUM         00179300
&ZMS                  SETC  '"BRANCHTABLE='     *KPOSA* MNOTE           00179400
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00179500
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00179600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00179700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00179800
.ZG66A                ANOP  ,                                           00179900
.*------------------------------------------------------------------    00180000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00180200
.ZG66A0               AIF   (K'&LSTEMPTY LE 0).ZG66A1  OK               00180300
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00180400
.ZG66A1               AIF   (K'&LSTNONEMPTY LE 0).ZG66A2  OK            00180500
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00180600
.ZG66A2               AIF   (K'&INDXINVALID LE 0).ZG66A3  OK            00180700
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00180800
.ZG66A3               AIF   (K'&INVALIDTOKN LE 0).ZG66A4  OK            00180900
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00181000
.ZG66A4               AIF   (K'&ZCVAL LE 0).ZG66A5  OK                  00181100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00181200
&ZMS                  SETC  '"BRANCHTABLE'      *KMEIA* MNOTE           00181300
&ZMS                  SETC  '&ZMS.=&BRANCHTABLE"'                       00181400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00181500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00181600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00181700
.ZG66A5               ANOP  ,                                           00181800
.*-------------------------------------------------------------------   00181900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00182000
.ZG67                 ANOP  ,                                           00182100
&ZTLC                 SETC 'YES'                                        00182200
                      AIF   ('&BRANCHTABLE(1)' NE '&ZTLC').ZG80         00182300
&XBRANCHTABLE         SETC  'YES'       SET KEYWORD                     00182400
                      AIF   (N'&BRANCHTABLE LE 1).ZG67A  CK NUM         00182500
&ZMS                  SETC  '"BRANCHTABLE='     *KPOSA* MNOTE           00182600
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00182700
&ZMS                  SETC  '&ZMS "BRANCHTABLE"'                        00182800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00182900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00183000
.ZG67A                ANOP  ,                                           00183100
.*----------------------------------------------------------------***   00183200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00183300
                      AIF   (N'&LSTEMPTY LE 1).ZG69A  CK NUM            00183400
&ZMS                  SETC  '"LSTEMPTY='        *KPOSA* MNOTE           00183500
&ZMS                  SETC  '&ZMS.&LSTEMPTY"'                           00183600
&ZMS                  SETC  '&ZMS "LSTEMPTY"'                           00183700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00183800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00183900
.ZG69A                ANOP  ,                                           00184000
.*-------------------------------------------------------------------   00184100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00184200
&ZXLSTEMPTY           SETC  'INPUT'     SET IN/OUTPUT                   00184300
&XLSTEMPTY            SETC  '&LSTEMPTY(1)'      SET XVARIABLE           00184400
                      AIF   (N'&LSTEMPTY GT 1).ZG69B  MULTI PARMS       00184500
&XLSTEMPTY            SETC  '&LSTEMPTY'         SET XVARIABLE           00184600
.ZG69B                AIF   (K'&LSTEMPTY(1) GT 0).ZG69C                 00184700
&ZXLSTEMPTY           SETC  ''          RESET IN/OUTPUT                 00184800
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00184900
&ZMS                  SETC  '&ZMS , "LSTEMPTY" KEY AND ITS ARGUMENT'    00185000
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00185100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00185200
.ZG69C                ANOP  ,                                           00185300
.*-------------------------------------------------------------------   00185400
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00185500
                      AIF   (K'&ZXLSTEMPTY LE 0).ZG69P  NOT I/O         00185600
                      AIF   ('&XLSTEMPTY'(1,1) NE '(').ZG69P            00185700
&ZXLSTEMPTY           SETC  ''          RESET IN/OUTPUT                 00185800
&ZMS                  SETC  '"LSTEMPTY='        *KGPRA* MNOTE           00185900
&ZMS                  SETC  '&ZMS.&LSTEMPTY"'                           00186000
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00186100
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00186200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00186300
.ZG69P                ANOP  ,                                           00186400
.*----------------------------------------------------------------***   00186500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00186600
                      AIF   (N'&LSTNONEMPTY LE 1).ZG72A  CK NUM         00186700
&ZMS                  SETC  '"LSTNONEMPTY='     *KPOSA* MNOTE           00186800
&ZMS                  SETC  '&ZMS.&LSTNONEMPTY"'                        00186900
&ZMS                  SETC  '&ZMS "LSTNONEMPTY"'                        00187000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00187100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00187200
.ZG72A                ANOP  ,                                           00187300
.*-------------------------------------------------------------------   00187400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00187500
&ZXLSTNONEMPTY        SETC  'INPUT'     SET IN/OUTPUT                   00187600
&XLSTNONEMPTY         SETC  '&LSTNONEMPTY(1)'   SET XVARIABLE           00187700
                      AIF   (N'&LSTNONEMPTY GT 1).ZG72B  MULTI PARMS    00187800
&XLSTNONEMPTY         SETC  '&LSTNONEMPTY'      SET XVARIABLE           00187900
.ZG72B                AIF   (K'&LSTNONEMPTY(1) GT 0).ZG72C              00188000
&ZXLSTNONEMPTY        SETC  ''          RESET IN/OUTPUT                 00188100
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00188200
&ZMS                  SETC  '&ZMS , "LSTNONEMPTY" KEY AND ITS ARGUMENT' 00188300
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00188400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00188500
.ZG72C                ANOP  ,                                           00188600
.*-------------------------------------------------------------------   00188700
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00188800
                      AIF   (K'&ZXLSTNONEMPTY LE 0).ZG72P  NOT I/O      00188900
                      AIF   ('&XLSTNONEMPTY'(1,1) NE '(').ZG72P         00189000
&ZXLSTNONEMPTY        SETC  ''          RESET IN/OUTPUT                 00189100
&ZMS                  SETC  '"LSTNONEMPTY='     *KGPRA* MNOTE           00189200
&ZMS                  SETC  '&ZMS.&LSTNONEMPTY"'                        00189300
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00189400
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00189500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00189600
.ZG72P                ANOP  ,                                           00189700
.*----------------------------------------------------------------***   00189800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00189900
                      AIF   (N'&INDXINVALID LE 1).ZG75A  CK NUM         00190000
&ZMS                  SETC  '"INDXINVALID='     *KPOSA* MNOTE           00190100
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00190200
&ZMS                  SETC  '&ZMS "INDXINVALID"'                        00190300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00190400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00190500
.ZG75A                ANOP  ,                                           00190600
.*-------------------------------------------------------------------   00190700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00190800
&ZXINDXINVALID        SETC  'INPUT'     SET IN/OUTPUT                   00190900
&XINDXINVALID         SETC  '&INDXINVALID(1)'   SET XVARIABLE           00191000
                      AIF   (N'&INDXINVALID GT 1).ZG75B  MULTI PARMS    00191100
&XINDXINVALID         SETC  '&INDXINVALID'      SET XVARIABLE           00191200
.ZG75B                AIF   (K'&INDXINVALID(1) GT 0).ZG75C              00191300
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00191400
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00191500
&ZMS                  SETC  '&ZMS , "INDXINVALID" KEY AND ITS ARGUMENT' 00191600
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00191700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00191800
.ZG75C                ANOP  ,                                           00191900
.*-------------------------------------------------------------------   00192000
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00192100
                      AIF   (K'&ZXINDXINVALID LE 0).ZG75P  NOT I/O      00192200
                      AIF   ('&XINDXINVALID'(1,1) NE '(').ZG75P         00192300
&ZXINDXINVALID        SETC  ''          RESET IN/OUTPUT                 00192400
&ZMS                  SETC  '"INDXINVALID='     *KGPRA* MNOTE           00192500
&ZMS                  SETC  '&ZMS.&INDXINVALID"'                        00192600
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00192700
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00192800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00192900
.ZG75P                ANOP  ,                                           00193000
.*----------------------------------------------------------------***   00193100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00193200
                      AIF   (N'&INVALIDTOKN LE 1).ZG78A  CK NUM         00193300
&ZMS                  SETC  '"INVALIDTOKN='     *KPOSA* MNOTE           00193400
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00193500
&ZMS                  SETC  '&ZMS "INVALIDTOKN"'                        00193600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00193700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00193800
.ZG78A                ANOP  ,                                           00193900
.*-------------------------------------------------------------------   00194000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00194100
&ZXINVALIDTOKN        SETC  'INPUT'     SET IN/OUTPUT                   00194200
&XINVALIDTOKN         SETC  '&INVALIDTOKN(1)'   SET XVARIABLE           00194300
                      AIF   (N'&INVALIDTOKN GT 1).ZG78B  MULTI PARMS    00194400
&XINVALIDTOKN         SETC  '&INVALIDTOKN'      SET XVARIABLE           00194500
.ZG78B                AIF   (K'&INVALIDTOKN(1) GT 0).ZG78C              00194600
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00194700
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          00194800
&ZMS                  SETC  '&ZMS , "INVALIDTOKN" KEY AND ITS ARGUMENT' 00194900
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00195000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00195100
.ZG78C                ANOP  ,                                           00195200
.*-------------------------------------------------------------------   00195300
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00195400
                      AIF   (K'&ZXINVALIDTOKN LE 0).ZG78P  NOT I/O      00195500
                      AIF   ('&XINVALIDTOKN'(1,1) NE '(').ZG78P         00195600
&ZXINVALIDTOKN        SETC  ''          RESET IN/OUTPUT                 00195700
&ZMS                  SETC  '"INVALIDTOKN='     *KGPRA* MNOTE           00195800
&ZMS                  SETC  '&ZMS.&INVALIDTOKN"'                        00195900
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00196000
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'           00196100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00196200
.ZG78P                ANOP  ,                                           00196300
.*------------------------------------------------------------------    00196400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00196500
.ZG80                 ANOP  ,                                           00196600
&ZXBRANCHTABLE        SETC  'INPUT'     SET IN/OUTPUT                   00196700
                      AIF   (K'&XBRANCHTABLE GT 0).ZG80E  VALID ARG     00196800
                      AIF   (T'&BRANCHTABLE EQ 'O').ZG80D  OMITTED      00196900
&ZASYSLNDX            SETA  0                                           00197000
.ZG80A                ANOP  ,           POSITIONAL MACRO KEY            00197100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00197200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG80C            00197300
&ZTLC                 SETC 'BRANCHTABLE'                                00197400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG80A   00197500
.ZG80B                ANOP  ,                                           00197600
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00197700
&ZMS                  SETC  'THE "BRANCHTABLE" KEY'  *KOPTA* MNOTE      00197800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00197900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00198000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00198100
                      AGO   .ZG80E                                      00198200
.ZG80C                ANOP  ,                                           00198300
&ZXBRANCHTABLE        SETC  ''          RESET IN/OUTPUT                 00198400
&ZMS                  SETC  '"BRANCHTABLE='     *KUKWA* MNOTE           00198500
&ZMS                  SETC  '&ZMS.&BRANCHTABLE"'                        00198600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00198700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00198800
&ZMS                  SETC  '&ZMS "NO"'         VALID KEYWORD           00198900
&ZMS                  SETC  '&ZMS OR "YES".'    VALID KEYWORD           00199000
                      MNOTE 8,' &ZMS '                                  00199100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00199200
                      AGO   .ZG80E                                      00199300
.ZG80D                ANOP  ,                                           00199400
&XBRANCHTABLE         SETC  'NO'        SET DEFAULT KEYWORD             00199500
.ZG80E                ANOP  ,                                           00199600
.*-------------------------------------------------------------------   00199700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199800
.ZG81                 ANOP  ,                                           00199900
&ZTLC                 SETC 'TESTLOCALCACHE'                             00200000
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG93             00200100
&XREQUEST             SETC  'TESTLOCALCACHE'    SET KEYWORD             00200200
                      AIF   (N'&REQUEST LE 1).ZG81A  CK NUM             00200300
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00200400
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00200500
&ZMS                  SETC  '&ZMS "REQUEST"'                            00200600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00200700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00200800
.ZG81A                ANOP  ,                                           00200900
.*------------------------------------------------------------------    00201000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00201100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00201200
.ZG81A0               AIF   (K'&VECTORLEN LE 0).ZG81A1  OK              00201300
&ZCVAL                SETC '&ZCVAL VECTORLEN'   INCORRECT KEY USED      00201400
.ZG81A1               AIF   (K'&ACTUALVECLEN LE 0).ZG81A2  OK           00201500
&ZCVAL                SETC '&ZCVAL ACTUALVECLEN'  INCORRECT KEY USED    00201600
.ZG81A2               AIF   (K'&BRANCHTABLE LE 0).ZG81A3  OK            00201700
&ZCVAL                SETC '&ZCVAL BRANCHTABLE'  INCORRECT KEY USED     00201800
.ZG81A3               AIF   (K'&MODIFYDONE LE 0).ZG81A4  OK             00201900
&ZCVAL                SETC '&ZCVAL MODIFYDONE'  INCORRECT KEY USED      00202000
.ZG81A4               AIF   (K'&LESSTHAN LE 0).ZG81A5  OK               00202100
&ZCVAL                SETC '&ZCVAL LESSTHAN'    INCORRECT KEY USED      00202200
.ZG81A5               AIF   (K'&NOSTORAGE LE 0).ZG81A6  OK              00202300
&ZCVAL                SETC '&ZCVAL NOSTORAGE'   INCORRECT KEY USED      00202400
.ZG81A6               AIF   (K'&INVALIDTOKN LE 0).ZG81A7  OK            00202500
&ZCVAL                SETC '&ZCVAL INVALIDTOKN'  INCORRECT KEY USED     00202600
.ZG81A7               AIF   (K'&INVALIDLEN LE 0).ZG81A8  OK             00202700
&ZCVAL                SETC '&ZCVAL INVALIDLEN'  INCORRECT KEY USED      00202800
.ZG81A8               AIF   (K'&BITSTRING LE 0).ZG81A9  OK              00202900
&ZCVAL                SETC '&ZCVAL BITSTRING'   INCORRECT KEY USED      00203000
.ZG81A9               AIF   (K'&ALLEMPVAL LE 0).ZG81A10  OK             00203100
&ZCVAL                SETC '&ZCVAL ALLEMPVAL'   INCORRECT KEY USED      00203200
.ZG81A10              AIF   (K'&SOMENEINV LE 0).ZG81A11  OK             00203300
&ZCVAL                SETC '&ZCVAL SOMENEINV'   INCORRECT KEY USED      00203400
.ZG81A11              AIF   (K'&INDXINVALID LE 0).ZG81A12  OK           00203500
&ZCVAL                SETC '&ZCVAL INDXINVALID'  INCORRECT KEY USED     00203600
.ZG81A12              AIF   (K'&LSTEMPTY LE 0).ZG81A13  OK              00203700
&ZCVAL                SETC '&ZCVAL LSTEMPTY'    INCORRECT KEY USED      00203800
.ZG81A13              AIF   (K'&LSTNONEMPTY LE 0).ZG81A14  OK           00203900
&ZCVAL                SETC '&ZCVAL LSTNONEMPTY'  INCORRECT KEY USED     00204000
.ZG81A14              AIF   (K'&ZCVAL LE 0).ZG81A15  OK                 00204100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00204200
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00204300
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00204400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00204500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00204600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00204700
.ZG81A15              ANOP  ,                                           00204800
.*------------------------------------------------------------------    00204900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205000
&XVALIDATE            SETC  ''          INITIALIZE XVARIABLE            00205100
.*-------------------------------------------------------------------   00205200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205300
.ZG84                 ANOP  ,                                           00205400
                      AIF   (K'&VALIDATE(1) LE 0).ZG84A                 00205500
&ZTLC                 SETC 'YES'                                        00205600
                      AIF   ('&VALIDATE(1)' NE '&ZTLC').ZG88            00205700
&XVALIDATE            SETC  'YES'       SET KEYWORD                     00205800
                      AIF   (N'&VALIDATE LE 1).ZG84A  CK NUM            00205900
&ZMS                  SETC  '"VALIDATE='        *KPOSA* MNOTE           00206000
&ZMS                  SETC  '&ZMS.&VALIDATE"'                           00206100
&ZMS                  SETC  '&ZMS "VALIDATE"'                           00206200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00206300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00206400
.ZG84A                ANOP  ,                                           00206500
.*----------------------------------------------------------------***   00206600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00206700
                      AIF   (N'&VECTORINDEX LE 1).ZG86A  CK NUM         00206800
&ZMS                  SETC  '"VECTORINDEX='     *KPOSA* MNOTE           00206900
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00207000
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00207100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00207200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00207300
.ZG86A                ANOP  ,                                           00207400
.*-------------------------------------------------------------------   00207500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00207600
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00207700
&XVECTORINDEX         SETC  'NO_VECTORINDEX'                            00207800
                      AIF   (K'&VECTORINDEX(1) LE 0).ZG86B  PARM        00207900
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00208000
                      AIF   (N'&VECTORINDEX GT 1).ZG86B  MULTI PARMS    00208100
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00208200
.ZG86B                ANOP  ,                                           00208300
.*-------------------------------------------------------------------   00208400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00208500
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG86R  NOT I/O      00208600
                      AIF   ('&XVECTORINDEX' EQ 'NO_VECTORINDEX').ZG86R 00208700
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG86R         00208800
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00208900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                00209000
                      AIF   (K'&ZCGPR GT 2).ZG86Q                       00209100
                      AIF   ('&ZCGPR' EQ '0').ZG86Q                     00209200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00209300
                      AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME   00209400
.ZG86P                ANOP  ,                                           00209500
                      AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC        00209600
                      AIF   ('&ZCGPR' LT '2').ZG86Q                     00209700
                      AIF   ('&ZCGPR' LE '12').ZG86R                    00209800
.ZG86Q                ANOP  ,                                           00209900
&ZMS                  SETC  '"VECTORINDEX='     *KGPRA* MNOTE           00210000
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00210100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00210200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00210300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00210400
.ZG86R                ANOP  ,                                           00210500
.*-------------------------------------------------------------------   00210600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00210700
.ZG88                 ANOP  ,                                           00210800
&ZTLC                 SETC 'NO'                                         00210900
                      AIF   ('&VALIDATE(1)' NE '&ZTLC').ZG92            00211000
&XVALIDATE            SETC  'NO'        SET KEYWORD                     00211100
                      AIF   (N'&VALIDATE LE 1).ZG88A  CK NUM            00211200
&ZMS                  SETC  '"VALIDATE='        *KPOSA* MNOTE           00211300
&ZMS                  SETC  '&ZMS.&VALIDATE"'                           00211400
&ZMS                  SETC  '&ZMS "VALIDATE"'                           00211500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00211600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00211700
.ZG88A                ANOP  ,                                           00211800
.*----------------------------------------------------------------***   00211900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00212000
                      AIF   (N'&VECTORINDEX LE 1).ZG90A  CK NUM         00212100
&ZMS                  SETC  '"VECTORINDEX='     *KPOSA* MNOTE           00212200
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00212300
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00212400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00212500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00212600
.ZG90A                ANOP  ,                                           00212700
.*-------------------------------------------------------------------   00212800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00212900
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00213000
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00213100
                      AIF   (N'&VECTORINDEX GT 1).ZG90B  MULTI PARMS    00213200
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00213300
.ZG90B                AIF   (K'&VECTORINDEX(1) GT 0).ZG90C              00213400
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00213500
&ZMS                  SETC  'WHEN "NO" IS SPECIFIED'  *KRQDA*           00213600
&ZMS                  SETC  '&ZMS , "VECTORINDEX" KEY AND ITS ARGUMENT' 00213700
                      MNOTE 8,' &ZMS ARE REQUIRED.'                     00213800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00213900
.ZG90C                ANOP  ,                                           00214000
.*-------------------------------------------------------------------   00214100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00214200
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG90R  NOT I/O      00214300
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG90R         00214400
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00214500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                00214600
                      AIF   (K'&ZCGPR GT 2).ZG90Q                       00214700
                      AIF   ('&ZCGPR' EQ '0').ZG90Q                     00214800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00214900
                      AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME   00215000
.ZG90P                ANOP  ,                                           00215100
                      AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC        00215200
                      AIF   ('&ZCGPR' LT '2').ZG90Q                     00215300
                      AIF   ('&ZCGPR' LE '12').ZG90R                    00215400
.ZG90Q                ANOP  ,                                           00215500
&ZMS                  SETC  '"VECTORINDEX='     *KGPRA* MNOTE           00215600
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00215700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00215800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00215900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00216000
.ZG90R                ANOP  ,                                           00216100
.*------------------------------------------------------------------    00216200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00216300
.ZG92                 ANOP  ,                                           00216400
&ZXVALIDATE           SETC  'INPUT'     SET IN/OUTPUT                   00216500
                      AIF   (K'&XVALIDATE GT 0).ZG92E  VALID ARG        00216600
                      AIF   (T'&VALIDATE EQ 'O').ZG92D  OMITTED         00216700
&ZASYSLNDX            SETA  0                                           00216800
.ZG92A                ANOP  ,           POSITIONAL MACRO KEY            00216900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00217000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG92C            00217100
&ZTLC                 SETC 'VALIDATE'                                   00217200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG92A   00217300
.ZG92B                ANOP  ,                                           00217400
&ZXVALIDATE           SETC  ''          RESET IN/OUTPUT                 00217500
&ZMS                  SETC  'THE "VALIDATE" KEY'  *KOPTA* MNOTE         00217600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00217700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00217800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00217900
                      AGO   .ZG92E                                      00218000
.ZG92C                ANOP  ,                                           00218100
&ZXVALIDATE           SETC  ''          RESET IN/OUTPUT                 00218200
&ZMS                  SETC  '"VALIDATE='        *KUKWA* MNOTE           00218300
&ZMS                  SETC  '&ZMS.&VALIDATE"'                           00218400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00218500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00218600
&ZMS                  SETC  '&ZMS "YES"'        VALID KEYWORD           00218700
&ZMS                  SETC  '&ZMS OR "NO".'     VALID KEYWORD           00218800
                      MNOTE 8,' &ZMS '                                  00218900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00219000
                      AGO   .ZG92E                                      00219100
.ZG92D                ANOP  ,                                           00219200
&XVALIDATE            SETC  'YES'       SET DEFAULT KEYWORD             00219300
.ZG92E                ANOP  ,                                           00219400
.*------------------------------------------------------------------    00219500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00219600
.ZG93                 ANOP  ,                                           00219700
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   00219800
                      AIF   (K'&XREQUEST GT 0).ZG93E  VALID ARG         00219900
                      AIF   (T'&REQUEST EQ 'O').ZG93D  OMITTED          00220000
&ZASYSLNDX            SETA  0                                           00220100
.ZG93A                ANOP  ,           POSITIONAL MACRO KEY            00220200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00220300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG93C            00220400
&ZTLC                 SETC 'REQUEST'                                    00220500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG93A   00220600
.ZG93B                ANOP  ,                                           00220700
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00220800
&ZMS                  SETC  'THE "REQUEST" KEY'  *KOPTA* MNOTE          00220900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00221000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00221100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00221200
                      AGO   .ZG93E                                      00221300
.ZG93C                ANOP  ,                                           00221400
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00221500
&ZMS                  SETC  '"REQUEST='         *KUKWA* MNOTE           00221600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00221700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00221800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00221900
&ZMS                  SETC  '&ZMS "MODIFYVECTORSIZE",'  VALID KEYWORD   00222000
&ZMS                  SETC  '&ZMS "LTVECENTRIES",'  VALID KEYWORD       00222100
&ZMS                  SETC  '&ZMS "TESTLISTSTATE",'  VALID KEYWORD      00222200
&ZMS                  SETC  '&ZMS OR "TESTLOCALCACHE".'  VALID KEYWORD  00222300
                      MNOTE 8,' &ZMS '                                  00222400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00222500
                      AGO   .ZG93E                                      00222600
.ZG93D                ANOP  ,                                           00222700
&XREQUEST             SETC  'MODIFYVECTORSIZE'  SET DEFAULT KEYWORD     00222800
.ZG93E                ANOP  ,                                           00222900
.*------------------------------------------------------------------    00223000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00223100
                      AIF   (K'&REQUEST(1) GT 0).ZG93F  PARM            00223200
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             00223300
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00223400
&ZMS                  SETC  'THE'                                       00223500
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS ARGUMENT'       00223600
&ZMS                  SETC  '&ZMS ARE REQUIRED.'                        00223700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00223800
&ZMS                  SETC  '&ZMS "MODIFYVECTORSIZE",'  VALID KEYWORD   00223900
&ZMS                  SETC  '&ZMS "LTVECENTRIES",'  VALID KEYWORD       00224000
&ZMS                  SETC  '&ZMS "TESTLISTSTATE",'  VALID KEYWORD      00224100
&ZMS                  SETC  '&ZMS OR "TESTLOCALCACHE".'  VALID KEYWORD  00224200
                      MNOTE 8,' &ZMS '                                  00224300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00224400
.ZG93F                ANOP  ,                                           00224500
.*----------------------------------------------------------------***   00224600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00224700
                      AIF   (N'&RETCODE LE 1).ZG95A  CK NUM             00224800
&ZMS                  SETC  '"RETCODE='         *KPOSA* MNOTE           00224900
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00225000
&ZMS                  SETC  '&ZMS "RETCODE"'                            00225100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00225200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00225300
.ZG95A                ANOP  ,                                           00225400
.*-------------------------------------------------------------------   00225500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00225600
                      AIF   (K'&RETCODE(1) LE 0).ZG95C  NO PARM         00225700
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      00225800
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           00225900
                      AIF   (N'&RETCODE GT 1).ZG95C                     00226000
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   00226100
.ZG95C                ANOP  ,                                           00226200
.*-------------------------------------------------------------------   00226300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00226400
                      AIF   (K'&ZXRETCODE LE 0).ZG95R  NOT I/O          00226500
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG95R             00226600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00226700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG95P                00226800
                      AIF   (K'&ZCGPR GT 2).ZG95Q                       00226900
                      AIF   ('&ZCGPR' EQ '0').ZG95Q                     00227000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00227100
                      AIF   (T'&ZCGPR NE 'N').ZG95Q  INVALID REG NAME   00227200
.ZG95P                ANOP  ,                                           00227300
                      AIF   (T'&ZCGPR NE 'N').ZG95R  NON NUMERIC        00227400
                      AIF   ('&ZCGPR' LT '2').ZG95Q                     00227500
                      AIF   ('&ZCGPR' LE '12').ZG95R                    00227600
.ZG95Q                ANOP  ,                                           00227700
&ZMS                  SETC  '"RETCODE='         *KGPRA* MNOTE           00227800
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00227900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00228000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00228100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00228200
.ZG95R                ANOP  ,                                           00228300
.******************************************************************     00228400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00228500
.******************************************************************     00228600
                      ACTR  10000                                       00228700
.*----------------------------------------------------------------***   00228800
.***AH.P02 EXTRA POSITIONALS                                            00228900
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        00229000
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        00229100
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    00229200
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     00229300
.ZGLISTX1             ANOP  ,                                           00229400
&ZCVAL                SETC  ''          ERROR FIELD                     00229500
&ZAWRK                SETA  0           POSITIONAL NUMBER               00229600
.ZGLIST2              ANOP  ,                                           00229700
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 00229800
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        00229900
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             00230000
                      AGO   .ZGLIST2                                    00230100
.*                                                                      00230200
.ZGLIST3              ANOP  ,                                           00230300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          00230400
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE    00230500
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             00230600
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      00230700
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              00230800
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      00230900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00231000
.ZGLISTX              ANOP  ,                                           00231100
&ZASYSLNDX            SETA  0                                           00231200
.*******************************************************************    00231300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00231400
.*******************************************************************    00231500
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        00231600
.*******************************************************************    00231700
.***AE.01  START OF IXLVECTR MACRO CODE                                 00231800
.*******************************************************************    00231900
                      LCLC  &M0M0001                 NAME               00232000
&M0M0001              SETC  '&XLABEL'                SET NAME           00232100
                      AIF   (K'&XLABEL NE 0).XLAB2                      00232200
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       00232300
.*                                                                      00232400
.XLAB2                ANOP  ,                                           00232500
&M0M0001 DS    0H                             IXLVECTR-0                00232600
.*******************************************************************    00232700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00232800
.*******************************************************************    00232900
              PUSH  PRINT                                               00233000
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  00233100
                      PRINT OFF         ++ PR01                         00233200
                      AGO   .ZPRNTXX                                    00233300
.ZPRINTX              PRINT ON                                          00233400
.ZPRNTXX              ANOP  ,                                           00233500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00233600
         LCLC  &ZYES                      CHARACTER TOO LONG VARIABLE   00233700
         LCLC  &ZNO                       CHARACTER TOO LONG VARIABLE   00233800
         LCLC  &PVPASM                    CHARACTER TOO LONG VARIABLE   00233900
&BRREG   SETC '(15)'                                                    00234000
&ZYES    SETC 'YES'                                                     00234100
.********************************************************************   00234200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00234300
.********************************************************************   00234400
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL  @D1A   00234500
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  00234600
.*                                                                      00234700
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  00234800
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   00234900
                      SPLEVEL  TEST                                     00235000
.ZSYS2                ANOP  ,                                           00235100
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       00235200
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       00235300
                      SYSSTATE TEST                                     00235400
                      AGO   .ZSYS4                                      00235500
.ZSYS3                ANOP  ,                                           00235600
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         00235700
.ZSYS4                ANOP  ,                                           00235800
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC1  SYSTATE PRIMARY    00235900
         SAC  0                                                         00236000
.SETUPPRIMARYASC1 ANOP ,                                                00236100
.LOADTKN AIF  ('&VECTORTOKEN='(1,1) EQ '(').DHS1                        00236200
         LA   1,&VECTORTOKEN                                            00236300
         AGO  .DHS2                                                     00236400
.DHS1    ANOP ,                                                         00236500
         LR   1,&VECTORTOKEN                                            00236600
.DHS2    ANOP ,                                                         00236700
.REQ1    AIF   ('&REQUEST(1)' NE 'MODIFYVECTORSIZE').REQ2               00236800
.SAVE1   AIF  ('&WORKAREA='(1,1) EQ '(').GLK11                          00236900
         STM  2,5,&WORKAREA                                             00237000
         AGO  .GLK21                                                    00237100
.GLK11   ANOP ,                                                         00237200
         STM  2,5,0&WORKAREA                                            00237300
.GLK21   ANOP ,                                                         00237400
         AIF  ('&VECTORLEN='(1,1) EQ '(').PVP5                          00237500
         L    4,&VECTORLEN                                              00237600
         AGO  .PVP6                                                     00237700
.PVP5    ANOP ,                                                         00237800
         L    4,0&VECTORLEN                                             00237900
.PVP6    ANOP ,                                                         00238000
         L     15,16(0,0)              Get CVT address                  00238100
         L     15,140(15,0)            Get ECVT address                 00238200
         L     15,256(15,0)            Get Xrat address                 00238300
         L     15,52(15,0)             Get entry-point address          00238400
         BALR  14,15                   Branch to routine                00238500
         LR    0,4                                                      00238600
.RSTOR1  AIF  ('&WORKAREA='(1,1) EQ '(').GLK31                          00238700
         LM   2,5,&WORKAREA                                             00238800
         AGO  .GLK41                                                    00238900
.GLK31   ANOP ,                                                         00239000
         LM   2,5,0&WORKAREA                                            00239100
.GLK41   ANOP ,                                                         00239200
         AIF  ('&ACTUALVECLEN='(1,1) EQ '(').RET5                       00239300
         ST   0,&ACTUALVECLEN                                    @01C   00239400
         AGO  .MVS1                                                     00239500
.RET5    ANOP ,                                                         00239600
         ST   0,0&ACTUALVECLEN                                   @01C   00239700
.MVS1    ANOP ,                                                         00239800
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC2  SYSTATE PRIMARY    00239900
         SAC  512                                                       00240000
.SETUPPRIMARYASC2 ANOP ,                                                00240100
         AIF   ('&BRANCHTABLE(1)' NE '&ZYES').MVS2                      00240200
&PVPASM  SETC  'PVPASM'                                                 00240300
&PVPASM  SETC  '&PVPASM&SYSNDX'                                         00240400
&PVPASM2 SETC '&PVPASM&BRREG'                                           00240500
         B    &PVPASM2                                                  00240600
&PVPASM  DS   0H                                                        00240700
         B    &MODIFYDONE                                               00240800
         B    &LESSTHAN                                                 00240900
         B    &NOSTORAGE                                                00241000
         B    &INVALIDTOKN                                              00241100
         B    &INVALIDLEN                                               00241200
.MVS2    AGO  .ZEND                                                     00241300
.REQ2    AIF   ('&REQUEST(1)' NE 'TESTLISTSTATE').REQ2B                 00241400
.SAVE2   AIF  ('&WORKAREA='(1,1) EQ '(').GLK12                          00241500
         STM  2,5,&WORKAREA                                             00241600
         AGO  .GLK22                                                    00241700
.GLK12   ANOP ,                                                         00241800
         STM  2,5,0&WORKAREA                                            00241900
.GLK22   ANOP ,                                                         00242000
         AIF  ('&VECTORINDEX='(1,1) EQ '(').PVP7                        00242100
         L    4,&VECTORINDEX                                            00242200
         AGO  .PVP8                                                     00242300
.PVP7    ANOP ,                                                         00242400
         L    4,0&VECTORINDEX                                           00242500
.PVP8    ANOP ,                                                         00242600
         L     15,16(0,0)              Get CVT address                  00242700
         L     15,140(15,0)            Get ECVT address                 00242800
         L     15,256(15,0)            Get Xrat address                 00242900
         L     15,56(15,0)             Get entry-point address          00243000
         BALR  14,15                   Branch to routine                00243100
.RSTOR2  AIF  ('&WORKAREA='(1,1) EQ '(').GLK32                          00243200
         LM   2,5,&WORKAREA                                             00243300
         AGO  .GLK42                                                    00243400
.GLK32   ANOP ,                                                         00243500
         LM   2,5,0&WORKAREA                                            00243600
.GLK42   ANOP ,                                                         00243700
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC3  SYSTATE PRIMARY    00243800
         SAC  512                                                       00243900
.SETUPPRIMARYASC3 ANOP ,                                                00244000
         AIF   ('&BRANCHTABLE(1)' NE '&ZYES').TLS1                      00244100
&PVPASM  SETC  'PVPASM'                                                 00244200
&PVPASM  SETC  '&PVPASM&SYSNDX'                                         00244300
&PVPASM2 SETC '&PVPASM&BRREG'                                           00244400
         B    &PVPASM2                                                  00244500
&PVPASM  DS   0H                                                        00244600
         B    &LSTEMPTY                                                 00244700
         B    &LSTNONEMPTY                                              00244800
         B    &INDXINVALID                                              00244900
         B    &INVALIDTOKN                                              00245000
.TLS1    AGO  .ZEND                                                     00245100
.REQ2B   AIF   ('&REQUEST(1)' NE 'LTVECENTRIES').REQ3                   00245200
.SAVE2B  AIF  ('&WORKAREA='(1,1) EQ '(').GLK12B                         00245300
         STM  2,6,&WORKAREA                                             00245400
         AGO  .GLK22B                                                   00245500
.GLK12B  ANOP ,                                                         00245600
         STM  2,6,0&WORKAREA                                            00245700
.GLK22B  ANOP ,                                                         00245800
         AIF  ('&VECTORINDEX='(1,1) EQ '(').PVP7B                       00245900
         L    4,&VECTORINDEX                                            00246000
         AGO  .PVP8B                                                    00246100
.PVP7B   ANOP ,                                                         00246200
         L    4,0&VECTORINDEX                                           00246300
.PVP8B   ANOP ,                                                         00246400
         L     15,16(0,0)              Get CVT address                  00246500
         L     15,140(15,0)            Get ECVT address                 00246600
         L     15,256(15,0)            Get Xrat address                 00246700
         L     15,76(15,0)             Get entry-point address          00246800
         BALR  14,15                   Branch to routine                00246900
         LR    0,4                                              @01A    00247000
         AIF  ('&WORKAREA='(1,1) EQ '(').GLK32B                 @01M    00247100
         LM   2,6,&WORKAREA                                     @01M    00247200
         AGO  .GLK42B                                           @01M    00247300
.GLK32B  ANOP ,                                                 @01M    00247400
         LM   2,6,0&WORKAREA                                    @01M    00247500
.GLK42B  ANOP ,                                                 @01M    00247600
.RSTOR2B AIF  ('&BITSTRING='(1,1) EQ '(').RET5B                         00247700
         ST   0,&BITSTRING                                      @01C    00247800
         AGO  .MVS1B                                                    00247900
.RET5B   ANOP ,                                                         00248000
         ST   0,0&BITSTRING                                     @01C    00248100
.MVS1B   ANOP ,                                                         00248200
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC3B SYSTATE PRIMARY    00248300
         SAC  512                                                       00248400
.SETUPPRIMARYASC3B ANOP ,                                               00248500
         AIF   ('&BRANCHTABLE(1)' NE '&ZYES').TLS1B                     00248600
&PVPASM  SETC  'PVPASM'                                                 00248700
&PVPASM  SETC  '&PVPASM&SYSNDX'                                         00248800
&PVPASM2 SETC '&PVPASM&BRREG'                                           00248900
         B    &PVPASM2                                                  00249000
&PVPASM  DS   0H                                                        00249100
         B    &ALLEMPVAL                                                00249200
         B    &SOMENEINV                                                00249300
         B    &INDXINVALID                                              00249400
         B    &INVALIDTOKN                                              00249500
.TLS1B   AGO  .ZEND                                                     00249600
.REQ3    AIF   ('&REQUEST(1)' NE 'TESTLOCALCACHE').REQ4                 00249700
         AIF   ('&XVALIDATE' NE '&ZYES').VALNO                          00249800
.VALYES  AIF   (K'&VECTORINDEX LE 0).REQ4                       @D2C    00249900
.SAVE3   AIF  ('&WORKAREA='(1,1) EQ '(').GLK13                          00250000
         STM  2,6,&WORKAREA                                             00250100
         AGO  .GLK23                                                    00250200
.GLK13   ANOP ,                                                         00250300
         STM  2,6,0&WORKAREA                                            00250400
.GLK23   ANOP ,                                                         00250500
         AIF  ('&VECTORINDEX='(1,1) EQ '(').PVP9                        00250600
         L    4,&VECTORINDEX                                            00250700
         AGO  .PVP0                                                     00250800
.PVP9    ANOP ,                                                         00250900
         L    4,0&VECTORINDEX                                           00251000
.PVP0    ANOP ,                                                         00251100
         L     15,16(0,0)              Get CVT address                  00251200
         L     15,140(15,0)            Get ECVT address                 00251300
         L     15,256(15,0)            Get Xrat address                 00251400
         L     15,64(15,0)             Get entry-point address          00251500
         BALR  14,15                   Branch to routine                00251600
.RESTR3  AIF  ('&WORKAREA='(1,1) EQ '(').GLK33                          00251700
         LM   2,6,&WORKAREA                                             00251800
         AGO  .GLK43                                                    00251900
.GLK33   ANOP ,                                                         00252000
         LM   2,6,0&WORKAREA                                            00252100
.GLK43   ANOP ,                                                         00252200
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC4  SYSTATE PRIMARY    00252300
         SAC  512                                                       00252400
.SETUPPRIMARYASC4 ANOP ,                                                00252500
         AGO   .ZEND                   GO TO THE END             @D2C   00252600
.VALNO   ANOP ,                                                         00252700
.SAVE4   AIF  ('&WORKAREA='(1,1) EQ '(').GLK14                          00252800
         STM  2,5,&WORKAREA                                             00252900
         AGO  .GLK24                                                    00253000
.GLK14   ANOP ,                                                         00253100
         STM  2,5,0&WORKAREA                                            00253200
.GLK24   ANOP ,                                                         00253300
         AIF  ('&VECTORINDEX='(1,1) EQ '(').DHS3                        00253400
         L    4,&VECTORINDEX                                            00253500
         AGO  .DHS4                                                     00253600
.DHS3    ANOP ,                                                         00253700
         L    4,0&VECTORINDEX                                           00253800
.DHS4    ANOP ,                                                         00253900
         L     15,16(0,0)              Get CVT address                  00254000
         L     15,140(15,0)            Get ECVT address                 00254100
         L     15,256(15,0)            Get Xrat address                 00254200
         L     15,60(15,0)             Get entry-point address          00254300
         BALR  14,15                   Branch to routine                00254400
.RESTR4  AIF  ('&WORKAREA='(1,1) EQ '(').GLK34                          00254500
         LM   2,5,&WORKAREA                                             00254600
         AGO  .GLK44                                                    00254700
.GLK34   ANOP ,                                                         00254800
         LM   2,5,0&WORKAREA                                            00254900
.GLK44   ANOP ,                                                         00255000
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC5  SYSTATE PRIMARY    00255100
         SAC  512                                                       00255200
.SETUPPRIMARYASC5 ANOP ,                                                00255300
         AGO  .ZEND                   GO TO THE END             @D2C    00255400
.REQ4    ANOP ,                                                @D2A     00255500
.SAVE5   AIF  ('&WORKAREA='(1,1) EQ '(').GLK15                 @D2A     00255600
         STM  2,6,&WORKAREA                                    @D2A     00255700
         AGO  .GLK25                                           @D2A     00255800
.GLK15   ANOP ,                                                @D2A     00255900
         STM  2,6,0&WORKAREA                                   @D2A     00256000
.GLK25   ANOP ,                                                @D2A     00256100
         L     15,16(0,0)              Get CVT address         @D2A     00256200
         L     15,140(15,0)            Get ECVT address        @D2A     00256300
         L     15,256(15,0)            Get Xrat address        @D2A     00256400
         L     15,72(15,0)             Get entry-point address @D2A     00256500
         BALR  14,15                   Branch to routine       @D2A     00256600
.RESTR5  AIF  ('&WORKAREA='(1,1) EQ '(').GLK35                 @D2A     00256700
         LM   2,6,&WORKAREA                                    @D2A     00256800
         AGO  .GLK45                                           @D2A     00256900
.GLK35   ANOP ,                                                @D2A     00257000
         LM   2,6,0&WORKAREA                                   @D2A     00257100
.GLK45   ANOP ,                                                @D2A     00257200
         AIF   ('&SYSASCE' EQ 'P').SETUPPRIMARYASC6 SYSTATE  PRIMARY    00257300
         SAC  512                                              @D2A     00257400
.SETUPPRIMARYASC6 ANOP ,                                                00257500
.ZEND    ANOP ,                                                         00257600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00257700
.********************************************************************   00257800
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00257900
.********************************************************************   00258000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00258100
                      LCLA  &ZOPN1         INVOCATION INDEX             00258200
                      LCLC  &ZOPL(4095)    LABEL                        00258300
                      LCLC  &ZOPO(4095)    OPERATION                    00258400
                      LCLC  &ZOPV(4095)    VALUE                        00258500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00258600
.*                                                                      00258700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00258800
.*******************************************************************    00258900
.***AO.X02  RETURN CODE PROCESSING                                      00259000
.*******************************************************************    00259100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00259200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00259300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00259400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00259500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00259600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00259700
&ZOPN                 SETA  &ZOPN+1                                     00259800
&ZOPL(&ZOPN)          SETC  ' '                                         00259900
&ZOPO(&ZOPN)          SETC  'ST'                                        00260000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00260100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00260200
                      AGO   .ZMRETX                                     00260300
.*                                                                      00260400
.ZMRET2               ANOP  ,                                           00260500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00260600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00260700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00260800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00260900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00261000
&ZOPN                 SETA  &ZOPN+1                                     00261100
&ZOPL(&ZOPN)          SETC  ' '                                         00261200
&ZOPO(&ZOPN)          SETC  'LR'                                        00261300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00261400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00261500
.ZMRETX               ANOP  ,                                           00261600
.*******************************************************************    00261700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00261800
.*******************************************************************    00261900
                      ACTR  10000                                       00262000
.*                                                                      00262100
                      LCLA  &ZLC           COLUMN POSITION              00262200
                      LCLA  &ZOPX          LIST TABLE INDEX             00262300
                      LCLC  &ZLL           LABEL                        00262400
                      LCLC  &ZLOP          OPERATION                    00262500
                      LCLC  &ZLV           VALUE                        00262600
                      LCLC  &ZLD           DESCRIPTION                  00262700
.*                                                                      00262800
&ZOPX                 SETA  1                                           00262900
.*******************************************************************    00263000
.***AP.X01  FORMAT GENERATED CODE                                       00263100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00263200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00263300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00263400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00263500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00263600
                      AIF   (K'&ZLD LE 0).ZL51                          00263700
&ZLC                  SETA  35             COMMENT COLUMN               00263800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00263900
&ZLC                  SETA  33             COMMENT COLUMN               00264000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00264100
&ZLV                  SETC  '&ZLV'.' '                                  00264200
                      AGO   .ZL31                                       00264300
.*                                                                      00264400
.ZL41                 ANOP  ,                                           00264500
&ZLV                  SETC  '&ZLV'.' '                                  00264600
.ZL51                 ANOP  ,                                           00264700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00264800
.*                                                                      00264900
&ZLL     &ZLOP &ZLV                                                     00265000
.*                                                                      00265100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00265200
                      AGO   .ZL21          CONTINUE LOOPING             00265300
.*                                                                      00265400
.ZLX1                 ANOP  ,                                           00265500
.*******************************************************************    00265600
.***AP.X02  END OF IXLVECTR MACRO                                       00265700
&ZIXLVECTR            SETC  'YES'          SET IXLVECTR USED            00265800
         POP   PRINT                                                    00265900
*                                            IXLVECTR-0                 00266000
         SPACE 1                                                        00266100
.ZLX2                 ANOP  ,                                           00266200
         MEND                                                           00266300
**********************************************************************/ 00266400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00266500
*%IXLVECTR: MACRO KEYS(VECTORTOKEN,WORKAREA,REQUEST,VECTORLEN,          00266600
*                 ACTUALVECLEN,BRANCHTABLE,MODIFYDONE,LESSTHAN,         00266700
*                 NOSTORAGE,INVALIDTOKN,INVALIDLEN,VECTORINDEX,         00266800
*                 BITSTRING,ALLEMPVAL,SOMENEINV,INDXINVALID,LSTEMPTY,   00266900
*                 LSTNONEMPTY,VALIDATE,RETCODE);                        00267000
*  ANS('?'||MACLABEL||' '||'IXLVECTP '||MACLIST||                       00267100
*         ' '||MACKEYS||';') COL(MACLMAR);                              00267200
*%END IXLVECTR;                                                         00267300
