*/****************************** Module Header ***********************/ 00001000
*/*                                                                  */ 00002000
*/* Module Name: GIMMPLX                                             */ 00003000
*/*                                                                  */ 00004000
*/* SMP/E API Macro for PL/X                                         */ 00005000
*/*                                                                  */ 00006000
*/* Copyright (c) International Business Machines                    */ 00007000
*/*Corporation 1981, 1988-1                                          */ 00008000
*/****************************** Module Header ***********************/ 00009000
*   %IF XPND_MAC_SW^='N'                                                00010000
*     %THEN                                                             00011000
*     %GOTO PLX_EXPAND;                                                 00012000
*@LIST OFF;                                                             00013000
*%PLX_EXPAND:;                                                          00014000
*/*                                                                  */ 00015000
*/********************************************************************/ 00016000
*/*                                                                  */ 00017000
*/* The following PLX macro variables are used to control the        */ 00018000
*/*      expansion of the mappings in this macro.                    */ 00019000
*/*                                                                  */ 00020000
*/*      QPRM_ATTR                                                   */ 00021000
*/*        QUERY_PARMS is expanced with an attribute equal to        */ 00022000
*/*          it's value plus 'BDY(WORD)'                             */ 00023000
*/*        If QPRM_ATTR is blank                                     */ 00024000
*/*        QUERY_PARMS is expanded as a simple structure 'BDY(WORD)' */ 00025000
*/*                                                                  */ 00026000
*/********************************************************************/ 00027000
*/*                                                                  */ 00028000
*/* ---------------------------------------------------------------- */ 00029000
*/* FLAG REASON  RELEASE   DATE   ORG  DESCRIPTION                   */ 00030000
*/* ---- ------- ------- -------- ---  ----------------------------- */ 00031000
*/* $L0= SV1001A  1A.00  03/28/96 MUD: GIMAPI SUPPORT                */ 00032000
*/* $L1= SVV001B  1B.00  10/04/96 DMM: API Version Support           */ 00033000
*/*                                                                  */ 00034000
*/********************************************************************/ 00035000
*/*   CHANGE FLAG KEY: M@PNC                                         */ 00036000
*/*   WHERE:                                                         */ 00037000
*/*                                                                  */ 00038000
*/* M= MULTIPLE    P= DCRS = D,E,F,G    N= 0-9,A-Z     C= A = ADD    */ 00039000
*/*    FOR DELETE     RMPS = H,I,J,K    (USE '0' ONLY     C = CHANGE */ 00040000
*/*    FLAGS ONLY     LINE = L,M,N,O     WHEN ELEMENT     P = COPY   */ 00041000
*/*                   PTMS = P,Q,R,S     IS BEING         M = MOVE   */ 00042000
*/*                   APARS = 0-9        CREATED)         D = DELETE */ 00043000
*/********************************************************************/ 00044000
* %IF QPRM_ATTR = ' '                                                   00045000
*   %THEN                                                               00046000
*     %ATTRIB_CHAR='BDY(WORD)';                                         00047000
*   %ELSE                                                               00048000
*     %ATTRIB_CHAR='BDY(WORD)'||'QPRM_ATTR';                            00049000
*                                                                       00050000
* DECLARE                                                               00051000
*  1 QUERY_PARMS ATTRIB_CHAR, /* Parameters for QUERY command        */ 00052000
*    3 PCSI         PTR(31),  /* PTR to global CSI dataset           */ 00053000
*    3 CSILEN       FIXED(31),/* Length of data set name             */ 00054000
*    3 PZONE        PTR(31),  /* PTR to list of zones                */ 00055000
*    3 ZONELEN      FIXED(31),/* Length of zone list                 */ 00056000
*    3 PENTRY       PTR(31),  /* PTR to list of entries              */ 00057000
*    3 ENTRYLEN     FIXED(31),/* Length of entry list                */ 00058000
*    3 PSUBENTRY    PTR(31),  /* PTR to list of subentries           */ 00059000
*    3 SUBENTRYLEN  FIXED(31),/* Length of subentry list             */ 00060000
*    3 PFILTER      PTR(31),  /* PTR to query filter                 */ 00061000
*    3 FILTERLEN    FIXED(31);/* Length of filter                    */ 00062000
* DECLARE                                                               00063000
*  1 ENTRY_LIST BASED,        /* List of entry types                 */ 00064000
*    3 NEXT      PTR(31),     /* PTR to next item in linked list     */ 00065000
*    3 ENTRIES   PTR(31),     /* PTR to head of linked list of          00066000
*                                CSIENTRY structures listing the        00067000
*                                instances of this entry type        */ 00068000
*    3 TYPE      CHAR(12);    /* Entry type                          */ 00069000
*                                                                       00070000
* DECLARE                                                               00071000
*  1 CSIENTRY BASED,          /* Description of a specific entry     */ 00072000
*    3 NEXT       PTR(31),    /* PTR to next item in linked list     */ 00073000
*    3 SUBENTRIES PTR(31),    /* PTR to head of linked list of          00074000
*                                 SUBENTRY structures listing the       00075000
                                  subentry values returned for          00076000
                                  this entry                         */ 00077000
*    3 ENTRYNAME  CHAR(8),    /* Name of entry                       */ 00078000
*    3 ZONENAME   CHAR(7);    /* Zone where entry was retrieved      */ 00079000
*                                                                       00080000
* DECLARE                                                               00081000
*  1 SUBENTRY BASED,          /* Contains subentry data              */ 00082000
*    3 NEXT       PTR(31),    /* PTR to next item in linked list     */ 00083000
*    3 SUBENTDATA PTR(31),    /* PTR to head of linked list of data     00084000
*                                values for this subentry            */ 00085000
*    3 TYPE      CHAR(12);    /* Subentry type                       */ 00086000
*                                                                       00087000
* DECLARE                                                               00088000
*  1 VER BASED,               /* Placeholder for subentries             00089000
*                                 associated with ++VER records of a    00090000
*                                 a SYSMOD                           */ 00091000
*    3 NEXT       PTR(31),    /* PTR to next item in linked list     */ 00092000
*    3 VERDATA    PTR(31),    /* PTR to head of linked list of          00093000
*                                 subentries associated with a ++VER */ 00094000
*    3 VERNUM     CHAR(3);    /* ++VER statement number              */ 00095000
*                                                                       00096000
* DECLARE                                                               00097000
*  1 ITEM_LIST BASED,         /* Holds piece of subentry data        */ 00098000
*    3 NEXT       PTR(31),    /* PTR to next item in linked list     */ 00099000
*    3 DATALEN    FIXED(31),  /* Number of characters of real data   */ 00100000
*    3 DATA       PTR(31);    /* Pointer to storage containing data  */ 00101000
*                                                                       00102000
* DECLARE                     /* API VERSION command output          */ 00103000
*  1 API_VERSION BASED,       /*   structure                         */ 00104000
*    2 APIVER     CHAR(2),    /* current SMP/E level for version     */ 00105000
*    2 APIREL     CHAR(2),    /*    "                "   release     */ 00106000
*    2 APIMOD     CHAR(2),    /*    "                "   modification*/ 00107000
*    2 APIPTF     CHAR(2);    /*    "                "   PTF     @L1A*/ 00108000
*                                                                       00109000
* %PLX_END:;                                                            00110000
*@LIST ON;                                                              00111000
