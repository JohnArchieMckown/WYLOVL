*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMABNL                              -11/04/93-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitor environment abnormal event            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1993                           * 00001300
*     SEE COPYRIGHT INSTRUCTIONS                                      * 00001400
*                                                                     * 00001500
* STATUS= HBB5510                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*                                                                     * 00002200
*      The purpose of this service is to indicate that an abnormal    * 00002300
*      event has occurred for the work request represented by the     * 00002400
*      input monitoring environment. This condition will supplement   * 00002500
*      any existing abnormal conditions recorded in the input         * 00002600
*      monitoring environment (multiple conditions may exist).        * 00002700
*                                                                     * 00002800
*      Note that abnormal conditions are propagated to the parent     * 00002900
*      monitoring environment via IWMMXFER Function(Return).          * 00003000
*                                                                     * 00003100
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003200
*                                                                     * 00003300
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003400
*                                                                     * 00003500
*01* ENVIRONMENT:                                                     * 00003600
*                                                                     * 00003700
*                                                                     * 00003800
*      Dispatchable unit mode: Task or SRB mode.                      * 00003900
*                                                                     * 00004000
*      Minimum authorization:                                         * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*                        o   Either problem state or supervisor       * 00004400
*                            state.                                   * 00004500
*                                                                     * 00004600
*                        o   PSW key must either be 0 or match the    * 00004700
*                            value supplied on IWMMCREA for the input * 00004800
*                            monitoring token when MONENVKEYP(PSWKEY) * 00004900
*                            is specified.                            * 00005000
*                                                                     * 00005100
*                        o   MONENVKEYP(VALUE) may only be specified  * 00005200
*                            in supervisor state or with PKM          * 00005300
*                            authority to the key specified by        * 00005400
*                            MONENVKEY.                               * 00005500
*                                                                     * 00005600
*                            Note that the key for IWMMABNL is        * 00005700
*                            located in bit positions 0-3 (using 0    * 00005800
*                            origin), which is the machine            * 00005900
*                            orientation to keeping keys, not the     * 00006000
*                            "natural" way of declaring the key       * 00006100
*                            value.                                   * 00006200
*                                                                     * 00006300
*                        o   MONENVKEYP(UNKNOWN) may only be          * 00006400
*                            specified in supervisor state or with    * 00006500
*                            PKM authority to key 0.                  * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*      AMODE:            31-bit.                                      * 00007000
*                                                                     * 00007100
*      ASC mode:         Primary.  Any P,S,H.                         * 00007200
*                                                                     * 00007300
*      Serialization:    Enabled.  Unlocked, but FRRs are allowed.    * 00007400
*                                                                     * 00007500
*      Restrictions:                                                  * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*                        1.  This macro may not be used prior to the  * 00007900
*                            completion of WLM address space          * 00008000
*                            initialization                           * 00008100
*                                                                     * 00008200
*                        2.  All parameter areas must reside in       * 00008300
*                            current primary.                         * 00008400
*                                                                     * 00008500
*                        3.  If the key specified on IWMMCREA for the * 00008600
*                            input environment was a user key (8-F),  * 00008700
*                            then either primary OR secondary         * 00008800
*                            addressability must exist to the         * 00008900
*                            performance block.                       * 00009000
*                                                                     * 00009100
*                        4.  The caller must serialize to prevent any * 00009200
*                            delay monitoring services from being     * 00009300
*                            invoked concurrently for the input       * 00009400
*                            monitoring environment.                  * 00009500
*                                                                     * 00009600
*                        5.  Only limited validity checking is done   * 00009700
*                            on the input monitoring token.           * 00009800
*                                                                     * 00009900
*                        6.  Caller is responsible for error          * 00010000
*                            recovery.                                * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00010700
*                      GR2-GR13    Undefined                          * 00010800
*                      GR14-GR15   Reserved                           * 00010900
*                      AR0-AR1     Reserved                           * 00011000
*                      AR2-AR13    Undefined                          * 00011100
*                      AR14-AR15   Reserved                           * 00011200
*                                                                     * 00011300
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00011400
*                                  non-zero                           * 00011500
*                      GR1         Used as a work register by the     * 00011600
*                                  macro                              * 00011700
*                      GR2-GR13    Unchanged                          * 00011800
*                      GR14        Used as a work register by the     * 00011900
*                                  macro                              * 00012000
*                      GR15        Return code                        * 00012100
*                      AR0-AR1     Used as a work register by the     * 00012200
*                                  macro                              * 00012300
*                      AR2-AR13    Unchanged                          * 00012400
*                      AR14-AR15   Used as a work register by the     * 00012500
*                                  macro                              * 00012600
*                                                                     * 00012700
*01* SYNTAX:                                                          * 00012800
*                                                                     * 00012900
*[xlabel]  IWMMABNL     ABNORMAL=xabnormal                            * 00013000
*                      ,MONTKN=xmontkn                                * 00013100
*                     ,MONENVKEYP=VALUE                              * 00013200
*                    |     ,MONENVKEY=xmonenvkey                      * 00013300
*                     ,MONENVKEYP=PSWKEY                             * 00013400
*                     ,MONENVKEYP=UNKNOWN                            * 00013500
*                     ,MONENV=NOSWITCH                               * 00013600
*                     ,MONENV=SECONDARY                              * 00013700
*                     [,RETCODE=xretcode]                             * 00013800
*                     [,RSNCODE=xrsncode]                             * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*      Where:                                                         * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*      [xlabel]                                                       * 00014500
*          is an optional symbol, starting in column 1, that is the   * 00014600
*          name on the IWMMABNL macro invocation.  The name must      * 00014700
*          conform to the rules for an ordinary assembler language    * 00014800
*          symbol.                                                    * 00014900
*          DEFAULT: No name.                                          * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*      ABNORMAL=xabnormal                                             * 00015500
*          is the name (RS-type), or address in register (2)-(12), of * 00015600
*          a required 32 bit input which indicates the abnormal mask  * 00015700
*          to use to reflect the abnormality.  Macro IWMYCON contains * 00015800
*          the defined abnormal masks. The mask variable names begin  * 00015900
*          with IWMMABNL, for example - IWMMABNL_SCOPE_LOCALMVS.      * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*      MONTKN=xmontkn                                                 * 00016500
*          is the name (RS-type), or address in register (2)-(12), of * 00016600
*          a required 32 bit input which contains the delay           * 00016700
*          monitoring token for the environment affected by the       * 00016800
*          abnormality.                                               * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*      MONENVKEYP=VALUE|PSWKEY|UNKNOWN                              * 00017400
*          is a required keyword input which describes whether a key  * 00017500
*          switch is needed to access the input monitoring            * 00017600
*          environment.                                               * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*          MONENVKEYP=VALUE                                           * 00018000
*                                                                     * 00018100
*              indicates that the key is being passed explicitly via  * 00018200
*              MONENVKEY.                                             * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*              MONENVKEY=xmonenvkey                                   * 00018600
*                  is the name (RS-type), or address in register      * 00018700
*                  (2)-(12), of a required 8 bit input which contains * 00018800
*                  the key in which the input monitoring environment  * 00018900
*                  must be accessed.  Use of this keyword value       * 00019000
*                  requires that the invoker be in supervisor state   * 00019100
*                  or that the caller have PKM authority to the key   * 00019200
*                  specified.  The leftmost, i.e. high order, 4 bits  * 00019300
*                  contain the key value.                             * 00019400
*                                                                     * 00019500
*                  Note that this is different from the "natural" way * 00019600
*                  of declaring the key, and uses the machine         * 00019700
*                  orientation for keeping the storage key in the     * 00019800
*                  high order bits.                                   * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*          MONENVKEYP=PSWKEY                                          * 00020300
*                                                                     * 00020400
*              indicates that the current PSW key should be used.     * 00020500
*              Use of this keyword value requires that the input      * 00020600
*              monitoring environment was established with the same   * 00020700
*              key as the current PSW.                                * 00020800
*                                                                     * 00020900
*          MONENVKEYP=UNKNOWN                                         * 00021000
*                                                                     * 00021100
*              indicates that the key associated with the input       * 00021200
*              monitoring environment is unknown.  Use of this        * 00021300
*              keyword value requires that the invoker be in          * 00021400
*              supervisor state or that the caller have PKM authority * 00021500
*              to key 0.                                              * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*      MONENV=NOSWITCH|SECONDARY                                    * 00022300
*          is a required keyword input which describes whether a      * 00022400
*          space switch is needed to access the input monitoring      * 00022500
*          environment.                                               * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*          MONENV=NOSWITCH                                            * 00022900
*                                                                     * 00023000
*              indicates that NO space switch is needed to access the * 00023100
*              input monitoring environment.  This would be           * 00023200
*              appropriate if the input monitoring environment was    * 00023300
*              established (by IWMMCREA) to be used by routines in a  * 00023400
*              specific system key or if it was established to be     * 00023500
*              used in a specific user key in the current primary.    * 00023600
*                                                                     * 00023700
*          MONENV=SECONDARY                                           * 00023800
*                                                                     * 00023900
*              indicates that the input monitoring environment was    * 00024000
*              established in current secondary (for use by a         * 00024100
*              specific user key).                                    * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*      [RETCODE=xretcode]                                             * 00024900
*          is the name (RS-type) of an optional fullword output       * 00025000
*          variable, or register (2)-(12), into which the return code * 00025100
*          is to be copied from GPR 15.                               * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*      [RSNCODE=xrsncode]                                             * 00025700
*          is the name (RS-type) of an optional fullword output       * 00025800
*          variable, or register (2)-(12), into which the reason code * 00025900
*          is to be copied from GPR 0.                                * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*01* RETURN CODES:                                                    * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*            0    IwmRetCodeOk:  Successful completion.               * 00026700
*                                                                     * 00026800
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00026900
*                 conditions noted.                                   * 00027000
*                                                                     * 00027100
*                 HEX REASON  MEANING                                 * 00027200
*                 CODE                                                * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                 xxxx0402    IwmRsncodeNoMonEnv:  Input monitoring   * 00027600
*                             token indicates no monitoring           * 00027700
*                             environment was established.            * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00028300
*                 environment or parameters                           * 00028400
*                                                                     * 00028500
*                 HEX REASON  MEANING                                 * 00028600
*                 CODE                                                * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                 xxxx0820    IwmRsnCodeBadMonEnv:  Monitoring        * 00029000
*                             environment does not pass verification. * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*01* REASON CODES:                                                    * 00029800
*                                                                     * 00029900
*       A unique reason code will be returned whenever the return     * 00030000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00030100
*       under their corresponding return code.  Reason code and       * 00030200
*       return code constants are defined within IWMYCON.  Note that  * 00030300
*       the high order halfword of register 0, and the reason code    * 00030400
*       variable when specified, may be non-zero and represents       * 00030500
*       diagnostic data which is NOT part of the external interface.  * 00030600
*       The high order halfword should thus be excluded from          * 00030700
*       comparison with the reason code values described above.  The  * 00030800
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00030900
*       used for this purpose.                                        * 00031000
*                                                                     * 00031100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00031200
*                                                                     * 00031300
*02*   PROCESSOR:  ASSEM                                              * 00031400
*                                                                     * 00031500
*01* COMPONENT:  SCWLM                                                * 00031600
*                                                                     * 00031700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00031800
*                                                                     * 00031900
*01* MACRO USAGE NOTES:                                               * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00032300
*        global macro variable.  Any value other than 'NO' will       * 00032400
*        result in the macro expansion being printed.  The default is * 00032500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00032600
*        variable should be set.                                      * 00032700
*                                                                     * 00032800
*                    GBLC &ZPRINT                                     * 00032900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00033000
*                                                                     * 00033100
*    2.  This  macro  may  only  be  used  on  MVS/ESA  (version 3 or * 00033200
*        higher), NOT versions 1 or 2 of MVS.                         * 00033300
*                                                                     * 00033400
*    3.  The macro IWMYCON must be included to use this macro.        * 00033500
*                                                                     * 00033600
*    4.  The  macro IWMPB must be in the library concatenation, since * 00033700
*        it is included by IWMYCON.                                   * 00033800
*                                                                     * 00033900
*    5.  Note  that  the  high  order halfword of register 0, and the * 00034000
*        reason  code  variable  when  specified, may be non-zero and * 00034100
*        represents diagnostic data which is NOT part of the external * 00034200
*        interface.   The high order halfword should thus be excluded * 00034300
*        from comparison with the reason code values described above. * 00034400
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00034500
*        be used for this purpose.                                    * 00034600
*                                                                     * 00034700
*    6.  The  PL/AS version of the macro needs the EPILOG macro to be * 00034800
*        included.                                                    * 00034900
*                                                                     * 00035000
*    7.  Registers  0,  1,  14,  and  15 are not preserved across the * 00035100
*        expansion.   In the PL/AS form, Register 2 is also destroyed * 00035200
*        when MONENV(SECONDARY) is specified.                         * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*01* CHANGE ACTIVITY:                                                 * 00035700
*                                                                     * 00035800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00035900
*                                                                     * 00036000
*    $L0=WLMI     HBB5510 930430 PD16:  Workload Manager I            * 00036100
****** END OF SPECIFICATIONS *****************************************/ 00036200
*/********************************************************************* 00036300
         MACRO                                                          00036400
&XLABEL  IWMMABNL &ABNORMAL=,&MONTKN=,&MONENVKEYP=,&MONENVKEY=,        *00036500
               &MONENV=,&RETCODE=,&RSNCODE=                             00036600
.*                                                                      00036700
*                MACDATE -11/04/93-<0>                                  00036800
.*                                                                      00036900
.*******************************************************************    00037000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00037100
.*******************************************************************    00037200
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00037300
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00037400
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00037500
.*                                                                      00037600
                GBLC  &ZIWMMABNL  YES=MACRO USED AT LEAST ONCE          00037700
.*******************************************************************    00037800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00037900
.*******************************************************************    00038000
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00038100
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00038200
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00038300
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00038400
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00038500
                LCLA  &ZAWRK      USED AS A WORK AREA                   00038600
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00038700
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00038800
                LCLC  &ZC         CHARACTER WORK VARIABLE               00038900
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00039000
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00039100
                LCLA  &ZMACRET    MACRO RETURN CODE                     00039200
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00039300
.*                                                                      00039400
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00039500
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00039600
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00039700
.*******************************************************************    00039800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00039900
.*******************************************************************    00040000
                LCLC  &XABNORMAL  ++ NAME                               00040100
                LCLC  &XMONTKN    ++ NAME                               00040200
                LCLC  &XMONENVKEYP              ++ VALUE                00040300
                LCLC  &XMONENVKEY               ++ NAME                 00040400
                LCLC  &XMONENV    ++ VALUE                              00040500
                LCLC  &XRETCODE   ++ NAME                               00040600
                LCLC  &XRSNCODE   ++ NAME                               00040700
.*******************************************************************    00040800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00040900
.*******************************************************************    00041000
                LCLC  &ZXABNORMAL               ++ INPUT NAME           00041100
                LCLC  &ZXMONTKN   ++ INPUT NAME                         00041200
                LCLC  &ZXMONENVKEYP             ++ INPUT VALUE          00041300
                LCLC  &ZXMONENVKEY              ++ INPUT NAME           00041400
                LCLC  &ZXMONENV   ++ INPUT VALUE                        00041500
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00041600
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00041700
.********************************************************************   00041800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00041900
.********************************************************************   00042000
                ACTR  10000                                             00042100
.*----------------------------------------------------------------***   00042200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00042300
                AIF   (N'&ABNORMAL LE 1).ZG2A   CK NUM                  00042400
&ZMS            SETC  '"ABNORMAL='              *KPOSA* MNOTE           00042500
&ZMS            SETC  '&ZMS.&ABNORMAL"'                                 00042600
&ZMS            SETC  '&ZMS "ABNORMAL"'                                 00042700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00042800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00042900
.ZG2A           ANOP  ,                                                 00043000
.*-------------------------------------------------------------------   00043100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00043200
&ZXABNORMAL     SETC  'INPUT'     SET IN/OUTPUT                         00043300
&XABNORMAL      SETC  '&ABNORMAL(1)'            SET XVARIABLE           00043400
                AIF   (N'&ABNORMAL GT 1).ZG2B   MULTI PARMS             00043500
&XABNORMAL      SETC  '&ABNORMAL'               SET XVARIABLE           00043600
.ZG2B           AIF   (K'&ABNORMAL(1) GT 0).ZG2C                        00043700
&ZXABNORMAL     SETC  ''          RESET IN/OUTPUT                       00043800
&ZMS            SETC  ' '         *KRQDA*                               00043900
&ZMS            SETC  '&ZMS "ABNORMAL" KEY AND ITS ARGUMENT'            00044000
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00044100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00044200
.ZG2C           ANOP  ,                                                 00044300
.*-------------------------------------------------------------------   00044400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00044500
                AIF   (K'&ZXABNORMAL LE 0).ZG2R  NOT I/O                00044600
                AIF   ('&XABNORMAL'(1,1) NE '(').ZG2R                   00044700
&ZCGPR          SETC  '&XABNORMAL'(2,K'&XABNORMAL-2)                    00044800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00044900
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00045000
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00045100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00045200
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00045300
.ZG2P           ANOP  ,                                                 00045400
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00045500
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00045600
                AIF   ('&ZCGPR' LE '12').ZG2R                           00045700
.ZG2Q           ANOP  ,                                                 00045800
&ZMS            SETC  '"ABNORMAL='              *KGPRA* MNOTE           00045900
&ZMS            SETC  '&ZMS.&ABNORMAL"'                                 00046000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00046100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00046200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00046300
.ZG2R           ANOP  ,                                                 00046400
.*----------------------------------------------------------------***   00046500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00046600
                AIF   (N'&MONTKN LE 1).ZG5A     CK NUM                  00046700
&ZMS            SETC  '"MONTKN='  *KPOSA* MNOTE                         00046800
&ZMS            SETC  '&ZMS.&MONTKN"'                                   00046900
&ZMS            SETC  '&ZMS "MONTKN"'                                   00047000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00047100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00047200
.ZG5A           ANOP  ,                                                 00047300
.*-------------------------------------------------------------------   00047400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00047500
&ZXMONTKN       SETC  'INPUT'     SET IN/OUTPUT                         00047600
&XMONTKN        SETC  '&MONTKN(1)'              SET XVARIABLE           00047700
                AIF   (N'&MONTKN GT 1).ZG5B     MULTI PARMS             00047800
&XMONTKN        SETC  '&MONTKN'   SET XVARIABLE                         00047900
.ZG5B           AIF   (K'&MONTKN(1) GT 0).ZG5C                          00048000
&ZXMONTKN       SETC  ''          RESET IN/OUTPUT                       00048100
&ZMS            SETC  ' '         *KRQDA*                               00048200
&ZMS            SETC  '&ZMS "MONTKN" KEY AND ITS ARGUMENT'              00048300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00048400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00048500
.ZG5C           ANOP  ,                                                 00048600
.*-------------------------------------------------------------------   00048700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00048800
                AIF   (K'&ZXMONTKN LE 0).ZG5R   NOT I/O                 00048900
                AIF   ('&XMONTKN'(1,1) NE '(').ZG5R                     00049000
&ZCGPR          SETC  '&XMONTKN'(2,K'&XMONTKN-2)                        00049100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00049200
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00049300
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00049400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00049500
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00049600
.ZG5P           ANOP  ,                                                 00049700
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00049800
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00049900
                AIF   ('&ZCGPR' LE '12').ZG5R                           00050000
.ZG5Q           ANOP  ,                                                 00050100
&ZMS            SETC  '"MONTKN='  *KGPRA* MNOTE                         00050200
&ZMS            SETC  '&ZMS.&MONTKN"'                                   00050300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00050400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00050500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00050600
.ZG5R           ANOP  ,                                                 00050700
.*------------------------------------------------------------------    00050800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00050900
&XMONENVKEYP    SETC  ''          INITIALIZE XVARIABLE                  00051000
.*-------------------------------------------------------------------   00051100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00051200
.ZG9            ANOP  ,                                                 00051300
                AIF   (K'&MONENVKEYP(1) LE 0).ZG9A                      00051400
&ZTLC           SETC 'VALUE'                                            00051500
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG13                00051600
&XMONENVKEYP    SETC  'VALUE'     SET KEYWORD                           00051700
                AIF   (N'&MONENVKEYP LE 1).ZG9A  CK NUM                 00051800
&ZMS            SETC  '"MONENVKEYP='            *KPOSA* MNOTE           00051900
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00052000
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00052100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00052200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00052300
.ZG9A           ANOP  ,                                                 00052400
.*----------------------------------------------------------------***   00052500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00052600
                AIF   (N'&MONENVKEY LE 1).ZG11A  CK NUM                 00052700
&ZMS            SETC  '"MONENVKEY='             *KPOSA* MNOTE           00052800
&ZMS            SETC  '&ZMS.&MONENVKEY"'                                00052900
&ZMS            SETC  '&ZMS "MONENVKEY"'                                00053000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00053100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00053200
.ZG11A          ANOP  ,                                                 00053300
.*-------------------------------------------------------------------   00053400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00053500
&ZXMONENVKEY    SETC  'INPUT'     SET IN/OUTPUT                         00053600
&XMONENVKEY     SETC  '&MONENVKEY(1)'           SET XVARIABLE           00053700
                AIF   (N'&MONENVKEY GT 1).ZG11B  MULTI PARMS            00053800
&XMONENVKEY     SETC  '&MONENVKEY'              SET XVARIABLE           00053900
.ZG11B          AIF   (K'&MONENVKEY(1) GT 0).ZG11C                      00054000
&ZXMONENVKEY    SETC  ''          RESET IN/OUTPUT                       00054100
&ZMS            SETC  ' '         *KRQDA*                               00054200
&ZMS            SETC  '&ZMS "MONENVKEY" KEY AND ITS ARGUMENT'           00054300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00054400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00054500
.ZG11C          ANOP  ,                                                 00054600
.*-------------------------------------------------------------------   00054700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00054800
                AIF   (K'&ZXMONENVKEY LE 0).ZG11R  NOT I/O              00054900
                AIF   ('&XMONENVKEY'(1,1) NE '(').ZG11R                 00055000
&ZCGPR          SETC  '&XMONENVKEY'(2,K'&XMONENVKEY-2)                  00055100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00055200
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00055300
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00055400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00055500
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00055600
.ZG11P          ANOP  ,                                                 00055700
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00055800
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00055900
                AIF   ('&ZCGPR' LE '12').ZG11R                          00056000
.ZG11Q          ANOP  ,                                                 00056100
&ZMS            SETC  '"MONENVKEY='             *KGPRA* MNOTE           00056200
&ZMS            SETC  '&ZMS.&MONENVKEY"'                                00056300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00056400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00056500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00056600
.ZG11R          ANOP  ,                                                 00056700
.*-------------------------------------------------------------------   00056800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00056900
.ZG13           ANOP  ,                                                 00057000
&ZTLC           SETC 'PSWKEY'                                           00057100
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG14                00057200
&XMONENVKEYP    SETC  'PSWKEY'    SET KEYWORD                           00057300
                AIF   (N'&MONENVKEYP LE 1).ZG13A  CK NUM                00057400
&ZMS            SETC  '"MONENVKEYP='            *KPOSA* MNOTE           00057500
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00057600
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00057700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00057800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00057900
.ZG13A          ANOP  ,                                                 00058000
.*------------------------------------------------------------------    00058100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00058200
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00058300
.ZG13A0         AIF   (K'&MONENVKEY LE 0).ZG13A1  OK                    00058400
&ZCVAL          SETC '&ZCVAL MONENVKEY'         INCORRECT KEY USED      00058500
.ZG13A1         AIF   (K'&ZCVAL LE 0).ZG13A2    OK                      00058600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00058700
&ZMS            SETC  '"MONENVKEYP'             *KMEIA* MNOTE           00058800
&ZMS            SETC  '&ZMS.=&MONENVKEYP"'                              00058900
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00059000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00059100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00059200
.ZG13A2         ANOP  ,                                                 00059300
.*-------------------------------------------------------------------   00059400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00059500
.ZG14           ANOP  ,                                                 00059600
&ZTLC           SETC 'UNKNOWN'                                          00059700
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG15                00059800
&XMONENVKEYP    SETC  'UNKNOWN'   SET KEYWORD                           00059900
                AIF   (N'&MONENVKEYP LE 1).ZG14A  CK NUM                00060000
&ZMS            SETC  '"MONENVKEYP='            *KPOSA* MNOTE           00060100
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00060200
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00060300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00060400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00060500
.ZG14A          ANOP  ,                                                 00060600
.*------------------------------------------------------------------    00060700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00060800
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00060900
.ZG14A0         AIF   (K'&MONENVKEY LE 0).ZG14A1  OK                    00061000
&ZCVAL          SETC '&ZCVAL MONENVKEY'         INCORRECT KEY USED      00061100
.ZG14A1         AIF   (K'&ZCVAL LE 0).ZG14A2    OK                      00061200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00061300
&ZMS            SETC  '"MONENVKEYP'             *KMEIA* MNOTE           00061400
&ZMS            SETC  '&ZMS.=&MONENVKEYP"'                              00061500
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00061600
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00061700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061800
.ZG14A2         ANOP  ,                                                 00061900
.*------------------------------------------------------------------    00062000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062100
.ZG15           ANOP  ,                                                 00062200
&ZXMONENVKEYP   SETC  'INPUT'     SET IN/OUTPUT                         00062300
                AIF   (K'&XMONENVKEYP GT 0).ZG15E  VALID ARG            00062400
                AIF   (T'&MONENVKEYP EQ 'O').ZG15D  OMITTED             00062500
&ZASYSLNDX      SETA  0                                                 00062600
.ZG15A          ANOP  ,           POSITIONAL MACRO KEY                  00062700
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00062800
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG15C                  00062900
&ZTLC           SETC 'MONENVKEYP'                                       00063000
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG15A         00063100
.ZG15B          ANOP  ,                                                 00063200
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00063300
&ZMS            SETC  'THE "MONENVKEYP" KEY'    *KOPTA* MNOTE           00063400
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00063500
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00063600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00063700
                AGO   .ZG15E                                            00063800
.ZG15C          ANOP  ,                                                 00063900
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00064000
&ZMS            SETC  '"MONENVKEYP='            *KUKWA* MNOTE           00064100
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00064200
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00064300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00064400
&ZMS            SETC  '&ZMS "VALUE",'           VALID KEYWORD           00064500
&ZMS            SETC  '&ZMS "PSWKEY",'          VALID KEYWORD           00064600
&ZMS            SETC  '&ZMS OR "UNKNOWN".'      VALID KEYWORD           00064700
                MNOTE 8,' &ZMS '                                        00064800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064900
                AGO   .ZG15E                                            00065000
.ZG15D          ANOP  ,                                                 00065100
&XMONENVKEYP    SETC  'VALUE'     SET DEFAULT KEYWORD                   00065200
.ZG15E          ANOP  ,                                                 00065300
.*------------------------------------------------------------------    00065400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065500
                AIF   (K'&MONENVKEYP(1) GT 0).ZG15F  PARM               00065600
&XMONENVKEYP    SETC  ''          ENSURE NULL KEYWORD                   00065700
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00065800
&ZMS            SETC  'THE'                                             00065900
&ZMS            SETC  '&ZMS "MONENVKEYP" KEY AND ITS ARGUMENT'          00066000
&ZMS            SETC  '&ZMS ARE REQUIRED.'                              00066100
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00066200
&ZMS            SETC  '&ZMS "VALUE",'           VALID KEYWORD           00066300
&ZMS            SETC  '&ZMS "PSWKEY",'          VALID KEYWORD           00066400
&ZMS            SETC  '&ZMS OR "UNKNOWN".'      VALID KEYWORD           00066500
                MNOTE 8,' &ZMS '                                        00066600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066700
.ZG15F          ANOP  ,                                                 00066800
.*------------------------------------------------------------------    00066900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067000
&XMONENV        SETC  ''          INITIALIZE XVARIABLE                  00067100
.*-------------------------------------------------------------------   00067200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067300
.ZG18           ANOP  ,                                                 00067400
                AIF   (K'&MONENV(1) LE 0).ZG18A                         00067500
&ZTLC           SETC 'NOSWITCH'                                         00067600
                AIF   ('&MONENV(1)' NE '&ZTLC').ZG19                    00067700
&XMONENV        SETC  'NOSWITCH'  SET KEYWORD                           00067800
                AIF   (N'&MONENV LE 1).ZG18A    CK NUM                  00067900
&ZMS            SETC  '"MONENV='  *KPOSA* MNOTE                         00068000
&ZMS            SETC  '&ZMS.&MONENV"'                                   00068100
&ZMS            SETC  '&ZMS "MONENV"'                                   00068200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00068300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00068400
.ZG18A          ANOP  ,                                                 00068500
.*-------------------------------------------------------------------   00068600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068700
.ZG19           ANOP  ,                                                 00068800
&ZTLC           SETC 'SECONDARY'                                        00068900
                AIF   ('&MONENV(1)' NE '&ZTLC').ZG20                    00069000
&XMONENV        SETC  'SECONDARY'               SET KEYWORD             00069100
                AIF   (N'&MONENV LE 1).ZG19A    CK NUM                  00069200
&ZMS            SETC  '"MONENV='  *KPOSA* MNOTE                         00069300
&ZMS            SETC  '&ZMS.&MONENV"'                                   00069400
&ZMS            SETC  '&ZMS "MONENV"'                                   00069500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00069600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069700
.ZG19A          ANOP  ,                                                 00069800
.*------------------------------------------------------------------    00069900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00070000
.ZG20           ANOP  ,                                                 00070100
&ZXMONENV       SETC  'INPUT'     SET IN/OUTPUT                         00070200
                AIF   (K'&XMONENV GT 0).ZG20E   VALID ARG               00070300
                AIF   (T'&MONENV EQ 'O').ZG20D  OMITTED                 00070400
&ZASYSLNDX      SETA  0                                                 00070500
.ZG20A          ANOP  ,           POSITIONAL MACRO KEY                  00070600
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00070700
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20C                  00070800
&ZTLC           SETC 'MONENV'                                           00070900
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG20A         00071000
.ZG20B          ANOP  ,                                                 00071100
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00071200
&ZMS            SETC  'THE "MONENV" KEY'        *KOPTA* MNOTE           00071300
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00071400
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00071500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071600
                AGO   .ZG20E                                            00071700
.ZG20C          ANOP  ,                                                 00071800
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00071900
&ZMS            SETC  '"MONENV='  *KUKWA* MNOTE                         00072000
&ZMS            SETC  '&ZMS.&MONENV"'                                   00072100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00072200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00072300
&ZMS            SETC  '&ZMS "NOSWITCH"'         VALID KEYWORD           00072400
&ZMS            SETC  '&ZMS OR "SECONDARY".'    VALID KEYWORD           00072500
                MNOTE 8,' &ZMS '                                        00072600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072700
                AGO   .ZG20E                                            00072800
.ZG20D          ANOP  ,                                                 00072900
&XMONENV        SETC  'NOSWITCH'  SET DEFAULT KEYWORD                   00073000
.ZG20E          ANOP  ,                                                 00073100
.*------------------------------------------------------------------    00073200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073300
                AIF   (K'&MONENV(1) GT 0).ZG20F  PARM                   00073400
&XMONENV        SETC  ''          ENSURE NULL KEYWORD                   00073500
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00073600
&ZMS            SETC  'THE'                                             00073700
&ZMS            SETC  '&ZMS "MONENV" KEY AND ITS ARGUMENT'              00073800
&ZMS            SETC  '&ZMS ARE REQUIRED.'                              00073900
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00074000
&ZMS            SETC  '&ZMS "NOSWITCH"'         VALID KEYWORD           00074100
&ZMS            SETC  '&ZMS OR "SECONDARY".'    VALID KEYWORD           00074200
                MNOTE 8,' &ZMS '                                        00074300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074400
.ZG20F          ANOP  ,                                                 00074500
.*----------------------------------------------------------------***   00074600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00074700
                AIF   (N'&RETCODE LE 1).ZG22A   CK NUM                  00074800
&ZMS            SETC  '"RETCODE='               *KPOSA* MNOTE           00074900
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00075000
&ZMS            SETC  '&ZMS "RETCODE"'                                  00075100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00075200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075300
.ZG22A          ANOP  ,                                                 00075400
.*-------------------------------------------------------------------   00075500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00075600
                AIF   (K'&RETCODE(1) LE 0).ZG22C  NO PARM               00075700
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00075800
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00075900
                AIF   (N'&RETCODE GT 1).ZG22C                           00076000
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00076100
.ZG22C          ANOP  ,                                                 00076200
.*-------------------------------------------------------------------   00076300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00076400
                AIF   (K'&ZXRETCODE LE 0).ZG22R  NOT I/O                00076500
                AIF   ('&XRETCODE'(1,1) NE '(').ZG22R                   00076600
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00076700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                      00076800
                AIF   (K'&ZCGPR GT 2).ZG22Q                             00076900
                AIF   ('&ZCGPR' EQ '0').ZG22Q                           00077000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00077100
                AIF   (T'&ZCGPR NE 'N').ZG22Q   INVALID REG NAME        00077200
.ZG22P          ANOP  ,                                                 00077300
                AIF   (T'&ZCGPR NE 'N').ZG22R   NON NUMERIC             00077400
                AIF   ('&ZCGPR' LT '2').ZG22Q                           00077500
                AIF   ('&ZCGPR' LE '12').ZG22R                          00077600
.ZG22Q          ANOP  ,                                                 00077700
&ZMS            SETC  '"RETCODE='               *KGPRA* MNOTE           00077800
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00077900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00078000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00078100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078200
.ZG22R          ANOP  ,                                                 00078300
.*----------------------------------------------------------------***   00078400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00078500
                AIF   (N'&RSNCODE LE 1).ZG25A   CK NUM                  00078600
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00078700
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00078800
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00078900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00079000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079100
.ZG25A          ANOP  ,                                                 00079200
.*-------------------------------------------------------------------   00079300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00079400
                AIF   (K'&RSNCODE(1) LE 0).ZG25C  NO PARM               00079500
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00079600
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00079700
                AIF   (N'&RSNCODE GT 1).ZG25C                           00079800
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00079900
.ZG25C          ANOP  ,                                                 00080000
.*-------------------------------------------------------------------   00080100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00080200
                AIF   (K'&ZXRSNCODE LE 0).ZG25R  NOT I/O                00080300
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG25R                   00080400
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00080500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                      00080600
                AIF   (K'&ZCGPR GT 2).ZG25Q                             00080700
                AIF   ('&ZCGPR' EQ '0').ZG25Q                           00080800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00080900
                AIF   (T'&ZCGPR NE 'N').ZG25Q   INVALID REG NAME        00081000
.ZG25P          ANOP  ,                                                 00081100
                AIF   (T'&ZCGPR NE 'N').ZG25R   NON NUMERIC             00081200
                AIF   ('&ZCGPR' LT '2').ZG25Q                           00081300
                AIF   ('&ZCGPR' LE '12').ZG25R                          00081400
.ZG25Q          ANOP  ,                                                 00081500
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00081600
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00081700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00081800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00081900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082000
.ZG25R          ANOP  ,                                                 00082100
.******************************************************************     00082200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00082300
.******************************************************************     00082400
                ACTR  10000                                             00082500
.*----------------------------------------------------------------***   00082600
.***AH.P02 EXTRA POSITIONALS                                            00082700
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00082800
&ZCVAL          SETC  ''          ERROR FIELD                           00082900
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00083000
.ZGLIST2        ANOP  ,                                                 00083100
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00083200
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00083300
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00083400
                AGO   .ZGLIST2                                          00083500
.*                                                                      00083600
.ZGLIST3        ANOP  ,                                                 00083700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00083800
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00083900
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00084000
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00084100
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00084200
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00084300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084400
.ZGLISTX        ANOP  ,                                                 00084500
&ZASYSLNDX      SETA  0                                                 00084600
.*******************************************************************    00084700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00084800
.*******************************************************************    00084900
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00085000
.*******************************************************************    00085100
.***AE.01  START OF IWMMABNL MACRO CODE                                 00085200
.*******************************************************************    00085300
                LCLC  &M0M0001                 NAME                     00085400
&M0M0001        SETC  '&XLABEL'                SET NAME                 00085500
                AIF   (K'&XLABEL NE 0).XLAB2                            00085600
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00085700
.*                                                                      00085800
.XLAB2          ANOP  ,                                                 00085900
&M0M0001 DS    0H                             IWMMABNL-0                00086000
.*******************************************************************    00086100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00086200
.*******************************************************************    00086300
              PUSH  PRINT                                               00086400
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00086500
                PRINT OFF         ++ PR01                               00086600
                AGO   .ZPRNTXX                                          00086700
.ZPRINTX        PRINT ON                                                00086800
.ZPRNTXX        ANOP  ,                                                 00086900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00087000
         LCLC  &T1                                                      00087100
&T1      SETC  '&MONTKN'                                                00087200
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00087300
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00087400
&T1      SETC  '0(&T1.)'                                                00087500
.MONTKNRS  ANOP                                                         00087600
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00087700
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00087800
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00087900
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00088000
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00088100
         B     END&SYSNDX              BRANCH TO END LABEL              00088200
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00088300
&T1      SETC  '&ABNORMAL'                                              00088400
         AIF   ('&ABNORMAL'(1,1) NE '(').ABNORMRS                       00088500
&T1      SETC  '&ABNORMAL'(2,K'&ABNORMAL-2)                             00088600
&T1      SETC  '0(&T1.)'                                                00088700
.ABNORMRS  ANOP                                                         00088800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00088900
         L     15,&T1                      SET ABNORMAL FLAG MASK       00089000
.*                                                                      00089100
.*                                                                      00089200
.*                                                                      00089300
          LCLC  &KEYVALUE                                               00089400
&KEYVALUE SETC  'NO'                                                    00089500
.*                                                                      00089600
.*                                                                      00089700
.*                                                                      00089800
.*                                                                      00089900
.*                                                                      00090000
         LCLC  &SACTO1                                                  00090100
         LCLC  &SACTO2                                                  00090200
         LCLC  &SACBACK1                                                00090300
         LCLC  &SACBACK2                                                00090400
&SACTO1  SETC  'DS'                                                     00090500
&SACTO2  SETC  '0H'                                                     00090600
&SACBACK1 SETC  'DS'                                                    00090700
&SACBACK2 SETC  '0H'                                                    00090800
.*                                                                      00090900
         AIF   ('&XMONENV' NE 'NOSWITCH').ENDNOSWITCH1                  00091000
.*                                                                      00091100
.*                                                                      00091200
.*   THE FOLLOWING CODE HANDLES                                         00091300
.*   ===========================>    MONENV(NOSWITCH)                   00091400
.*                                                                      00091500
.*                                                                      00091600
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00091700
         AGO   .COMMONSFVER1                                            00091800
.*                                                                      00091900
.ENDNOSWITCH1   ANOP                                                    00092000
.*                                                                      00092100
.*   THE FOLLOWING CODE HANDLES                                         00092200
.*   ===========================>    MONENV(SECONDARY)                  00092300
.*                                                                      00092400
&SACTO1  SETC  'SAC'                                                    00092500
&SACTO2  SETC  '256'                                                    00092600
&SACBACK1 SETC  'SAC'                                                   00092700
&SACBACK2 SETC  '0'                                                     00092800
.*                                                                      00092900
.*       THE PB ACRONYM, REFERENCED AS A LITERAL, RESIDES IN CURRENT    00093000
.*         PRIMARY, AND MUST BE LOADED BEFORE CHANGING PSWKEY (SINCE    00093100
.*         THE MODULE MAY BE IN FETCH-PROTECTED STORAGE) AND BEFORE     00093200
.*         CHANGING ASC MODES.                                          00093300
.*                                                                      00093400
.*                       LOGIC:                                         00093500
.*       REG 0 HAS PB_ID (ALL FLOWS FOR SECONDARY)                      00093600
.*       MONENVKEYP(VALUE) ==> REG 1 HAS KEY NEEDED TO UPDATE MONENV    00093700
.*                             SET UP AR14 FOR MONENV PB                00093800
.*                             SAC TO AR                                00093900
.*                             SET REG 1 TO DESIRED VALUE               00094000
.*                                 USING INDEX REGISTER NOTATION        00094100
.*                                                                      00094200
.*       MONENVKEYP(PSWKEY|UNKNOWN) ==> SET REG 1 TO DESIRED VALUE      00094300
.*                             SAC TO SECONDARY                         00094400
.*                                                                      00094500
         L     0,=CL4'PB  '                                             00094600
         AIF   ('&MONENVKEYP' NE 'VALUE').COMSECSFVER1 BRANCH IF ^VALUE 00094700
         LA    1,1                                                      00094800
         SAR   14,1                    SET AR15 FOR SECONDARY           00094900
.*                                                                      00095000
.*       MUST ANTICIPATE NEED TO CHANGE PSW KEY,KEPT IN CURRENT PRIMARY 00095100
.*                                                                      00095200
&T1      SETC  '&MONENVKEY'                                             00095300
         AIF   ('&MONENVKEY'(1,1) NE '(').MONENVKEY1                    00095400
&T1      SETC  '&MONENVKEY'(2,K'&MONENVKEY-2)                           00095500
&T1      SETC  '0(&T1.)'                                                00095600
.MONENVKEY1 ANOP                                                        00095700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00095800
         IC    1,&T1                                                    00095900
&SACTO1  SETC  'SAC'                                                    00096000
&SACTO2  SETC  '512'                                                    00096100
&KEYVALUE SETC  'YES'                                                   00096200
.*                                                                      00096300
         AGO  .COMSECSFVER1                                             00096400
.COMSECSFVER1 ANOP                                                      00096500
.* COMMON CODE FOR MONENV(SECONDARY)                                    00096600
.*                                                                      00096700
         &SACTO1 &SACTO2                                                00096800
&SACTO1  SETC  'DS'                                                     00096900
&SACTO2  SETC  '0H'                                                     00097000
         CL    0,PB_ID-PB(0,14)                                         00097100
.*                                                                      00097200
.COMMONSFVER1 ANOP                                                      00097300
.*             COMMON CODE FOR SHORT-FORM VERIFICATION                  00097400
         BE    MONENVOK&SYSNDX         BRANCH WHEN MONENV PASSES        00097500
         &SACBACK1 &SACBACK2                                            00097600
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00097700
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00097800
         B     END&SYSNDX              BRANCH TO END LABEL              00097900
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00098000
.*                                                                      00098100
.*     THE CODE TO SET THE PSW KEY MUST TOLERATE RUNNING IN AR MODE.    00098200
.*     FOR THIS REASON, THE ADDRESS OF THE BYTE CONTAINING THE KEY      00098300
.*        HAS BEEN SAVED IN GPR01 WHEN NECESSARY (I.E. KEYVALUE=YES)    00098400
.*                                                                      00098500
         AIF   ('&MONENVKEYP' EQ 'PSWKEY').PSWKEY   BRANCH IF PSWKEY OK 00098600
         LR    0,2                 SAVE GPR 2 BEFORE USING IPK          00098700
         IPK                       SAVE PSWKEY IN BITS 24-27 OF GPR2    00098800
         AIF   ('&KEYVALUE' EQ 'YES').SPKAINST      BRANCH IF KEY IN R1 00098900
         AIF   ('&MONENVKEYP' EQ 'VALUE').VALUE     BRANCH IF VALUE     00099000
         SPKA  0(0)                SET THE PSW KEY TO 0                 00099100
         AGO   .PSWKEY                                                  00099200
.*                                                                      00099300
.VALUE   ANOP                                                           00099400
&T1      SETC  '&MONENVKEY'                                             00099500
         AIF   ('&MONENVKEY'(1,1) NE '(').MONENVKEY                     00099600
&T1      SETC  '&MONENVKEY'(2,K'&MONENVKEY-2)                           00099700
&T1      SETC  '0(&T1.)'                                                00099800
.MONENVKEY ANOP                                                         00099900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00100000
         IC    1,&T1                                                    00100100
.SPKAINST ANOP                                                          00100200
         SPKA  0(1)               SET THE PSW KEY FROM GPR 1 BITS 24-27 00100300
.*                                                                      00100400
.PSWKEY ANOP                                                            00100500
.*                                                                      00100600
         &SACTO1 &SACTO2                                                00100700
         USING PB,14                                                    00100800
         O    15,PB_ABNORMAL_FLAGS       OR IN NEW FLAG                 00100900
         ST   15,PB_ABNORMAL_FLAGS       STORE NEW MASK                 00101000
         DROP 14                                                        00101100
         &SACBACK1 &SACBACK2                                            00101200
.*                                                                      00101300
         AIF   ('&MONENVKEYP' EQ 'PSWKEY').PSWKEY2 BRANCH IF PSWKEY OK  00101400
         SPKA  0(2)                    RESTORE PSWKEY FROM GPR 2        00101500
         LR    2,0                     RESTORE GPR 2 TO ORIGINAL VALUE  00101600
.*                                                                      00101700
.PSWKEY2       ANOP                                                     00101800
         LA    15,IWMRETCODEOK SET RETURN CODE = OK                     00101900
END&SYSNDX DS    0H                    END LABEL                        00102000
.*******************************************************************    00102100
.***        RETURN CODE PROCESSING                                      00102200
.*******************************************************************    00102300
         AIF   (N'&RETCODE LE 0).IWMMABNL_ENDRC_EXP                     00102400
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMABNL_RC_REG                00102500
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMABNL_ENDRC_EXP              00102600
         AIF   ('&XRETCODE' EQ 'REG15').IWMMABNL_ENDRC_EXP              00102700
         AIF   ('&XRETCODE' EQ 'R15').IWMMABNL_ENDRC_EXP                00102800
         AIF   ('&XRETCODE' EQ '15').IWMMABNL_ENDRC_EXP                 00102900
         ST    15,&XRETCODE                                             00103000
         AGO   .IWMMABNL_ENDRC_EXP                                      00103100
.*                                                                      00103200
.IWMMABNL_RC_REG      ANOP  ,                                           00103300
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00103400
         AIF   ('&T1' EQ 'GPR15').IWMMABNL_ENDRC_EXP                    00103500
         AIF   ('&T1' EQ 'REG15').IWMMABNL_ENDRC_EXP                    00103600
         AIF   ('&T1' EQ 'R15').IWMMABNL_ENDRC_EXP                      00103700
         AIF   ('&T1' EQ '15').IWMMABNL_ENDRC_EXP                       00103800
         LR    &T1,15                                                   00103900
.IWMMABNL_ENDRC_EXP   ANOP  ,                                           00104000
.*******************************************************************    00104100
.***        REASON CODE PROCESSING                                      00104200
.*******************************************************************    00104300
         AIF   (N'&RSNCODE LE 0).IWMMABNL_ENDRSN_EXP                    00104400
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMABNL_RSN_REG               00104500
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMABNL_ENDRSN_EXP              00104600
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMABNL_ENDRSN_EXP             00104700
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMABNL_ENDRSN_EXP              00104800
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMABNL_ENDRSN_EXP             00104900
         AIF   ('&XRSNCODE' EQ 'R0').IWMMABNL_ENDRSN_EXP                00105000
         AIF   ('&XRSNCODE' EQ '0').IWMMABNL_ENDRSN_EXP                 00105100
         AIF   ('&XRSNCODE' EQ '00').IWMMABNL_ENDRSN_EXP                00105200
         ST    0,&XRSNCODE                                              00105300
         AGO   .IWMMABNL_ENDRSN_EXP                                     00105400
.*                                                                      00105500
.IWMMABNL_RSN_REG     ANOP  ,                                           00105600
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00105700
         AIF  ('&ZCGPR' EQ 'GPR0').IWMMABNL_ENDRSN_EXP                  00105800
         AIF  ('&ZCGPR' EQ 'GPR00').IWMMABNL_ENDRSN_EXP                 00105900
         AIF  ('&ZCGPR' EQ 'REG0').IWMMABNL_ENDRSN_EXP                  00106000
         AIF  ('&ZCGPR' EQ 'REG00').IWMMABNL_ENDRSN_EXP                 00106100
         AIF  ('&ZCGPR' EQ 'R0').IWMMABNL_ENDRSN_EXP                    00106200
         AIF  ('&ZCGPR' EQ '0').IWMMABNL_ENDRSN_EXP                     00106300
         AIF  ('&ZCGPR' EQ '00').IWMMABNL_ENDRSN_EXP                    00106400
         LR   &T1,0                                                     00106500
.IWMMABNL_ENDRSN_EXP  ANOP  ,                                           00106600
.*******************************************************************    00106700
&ZIWMMABNL            SETC  'YES'          SET IWMMABNL USED            00106800
         POP   PRINT                                                    00106900
*                                            IWMMABNL END               00107000
         SPACE 1                                                        00107100
         MEXIT                                                          00107200
.NOCODENEEDED ANOP                                                      00107300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00107400
.********************************************************************   00107500
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00107600
.********************************************************************   00107700
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00107800
                      LCLA  &ZOPN1         INVOCATION INDEX             00107900
                      LCLC  &ZOPL(4095)    LABEL                        00108000
                      LCLC  &ZOPO(4095)    OPERATION                    00108100
                      LCLC  &ZOPV(4095)    VALUE                        00108200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00108300
.*                                                                      00108400
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00108500
.*******************************************************************    00108600
.***AO.X02  RETURN CODE PROCESSING                                      00108700
.*******************************************************************    00108800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00108900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00109000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00109100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00109200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00109300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00109400
&ZOPN                 SETA  &ZOPN+1                                     00109500
&ZOPL(&ZOPN)          SETC  ' '                                         00109600
&ZOPO(&ZOPN)          SETC  'ST'                                        00109700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00109800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00109900
                      AGO   .ZMRETX                                     00110000
.*                                                                      00110100
.ZMRET2               ANOP  ,                                           00110200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00110300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00110400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00110500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00110600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00110700
&ZOPN                 SETA  &ZOPN+1                                     00110800
&ZOPL(&ZOPN)          SETC  ' '                                         00110900
&ZOPO(&ZOPN)          SETC  'LR'                                        00111000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00111100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00111200
.ZMRETX               ANOP  ,                                           00111300
.*******************************************************************    00111400
.***AO.X03  REASON CODE PROCESSING                                      00111500
.*******************************************************************    00111600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00111700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00111800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00111900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00112000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00112100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00112200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00112300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00112400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00112500
&ZOPN                 SETA  &ZOPN+1                                     00112600
&ZOPL(&ZOPN)          SETC  ' '                                         00112700
&ZOPO(&ZOPN)          SETC  'ST'                                        00112800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00112900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00113000
                      AGO   .ZMRSNX                                     00113100
.*                                                                      00113200
.ZMRSN2               ANOP  ,                                           00113300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00113400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00113500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00113600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00113700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00113800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00113900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00114000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00114100
&ZOPN                 SETA  &ZOPN+1                                     00114200
&ZOPL(&ZOPN)          SETC  ' '                                         00114300
&ZOPO(&ZOPN)          SETC  'LR'                                        00114400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00114500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00114600
.ZMRSNX               ANOP  ,                                           00114700
.*******************************************************************    00114800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00114900
.*******************************************************************    00115000
                      ACTR  10000                                       00115100
.*                                                                      00115200
                      LCLA  &ZLC           COLUMN POSITION              00115300
                      LCLA  &ZOPX          LIST TABLE INDEX             00115400
                      LCLC  &ZLL           LABEL                        00115500
                      LCLC  &ZLOP          OPERATION                    00115600
                      LCLC  &ZLV           VALUE                        00115700
                      LCLC  &ZLD           DESCRIPTION                  00115800
.*                                                                      00115900
&ZOPX                 SETA  1                                           00116000
.*******************************************************************    00116100
.***AP.X01  FORMAT GENERATED CODE                                       00116200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00116300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00116400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00116500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00116600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00116700
                      AIF   (K'&ZLD LE 0).ZL51                          00116800
&ZLC                  SETA  35             COMMENT COLUMN               00116900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00117000
&ZLC                  SETA  33             COMMENT COLUMN               00117100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00117200
&ZLV                  SETC  '&ZLV'.' '                                  00117300
                      AGO   .ZL31                                       00117400
.*                                                                      00117500
.ZL41                 ANOP  ,                                           00117600
&ZLV                  SETC  '&ZLV'.' '                                  00117700
.ZL51                 ANOP  ,                                           00117800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00117900
.*                                                                      00118000
&ZLL     &ZLOP &ZLV                                                     00118100
.*                                                                      00118200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00118300
                      AGO   .ZL21          CONTINUE LOOPING             00118400
.*                                                                      00118500
.ZLX1                 ANOP  ,                                           00118600
.*******************************************************************    00118700
.***AP.X02  END OF IWMMABNL MACRO                                       00118800
&ZIWMMABNL            SETC  'YES'          SET IWMMABNL USED            00118900
         POP   PRINT                                                    00119000
*                                            IWMMABNL-0                 00119100
         SPACE 1                                                        00119200
.ZLX2                 ANOP  ,                                           00119300
         MEND                                                           00119400
**********************************************************************/ 00119500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00119600
*%IWMMABNL: MACRO KEYS(ABNORMAL,MONTKN,MONENVKEYP,MONENVKEY,MONENV,     00119700
*                 RETCODE,RSNCODE);                                     00119800
*  ANS('?'||MACLABEL||' '||'IWMMABNP '||MACLIST||                       00119900
*         ' '||MACKEYS||';') COL(MACLMAR);                              00120000
*%END IWMMABNL;                                                         00120100
