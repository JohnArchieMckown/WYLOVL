         MACRO                                                          00050000
&NAME    SYNCDEV  &DCB=,&BUFBLK=,&ABUFBLK=,&INQ=,&ECB=,            @00CX00083300
               &PLISTVER=,&MF=I                                    @00A 00116600
.**START OF SPECIFICATIONS**********************************            00150000
.* $MAC(SYNCDEV): SYNCHRONIZE DEVICE                                    00200000
.*                                                                      00250000
.*PROPRIETARY V3 STATEMENT                                              00281200
.*LICENSED MATERIALS - PROPERTY OF IBM                                  00312400
.*"RESTRICTED MATERIALS OF IBM"                                         00343600
.*5695-DF1                                                              00374800
.*(C) COPYRIGHT 1984, 1996  IBM CORP.                                   00413900
.*END PROPRIETARY V3 STATEMENT                                          00453000
.*                                                                      00500000
.* STATUS = DFSMS/MVS 1.3                                               00550000
.*                                                                      00600000
.* FUNCTION = This macro is provided to control data synchronization    00650000
.*     for buffered devices.  In a buffered-type of device, data as     00700000
.*     seen by the program (i.e., data  still in the buffer) may not    00750000
.*     yet reside on the final recording medium; this is referred to    00800000
.*     as data that is "not synchronized."  The user can either:        00850000
.*     (1) request information regarding synchronization,               00900000
.*     (2) demand that synchronization occur based on a specified       00950000
.*     number of data blocks be allowed to be buffered.  If the         01000000
.*     number is zero, synchronization will always take place if        01050000
.*     any data blocks are buffered.                                    01100000
.*                                                                      01150000
.* NOTES = N/A                                                          01200000
.*                                                                      01250000
.* MODULE TYPE = MACRO                                                  01300000
.*                                                                      01350000
.* ENTRY POINT = N/A                                                    01400000
.*                                                                      01450000
.* INPUT - MACRO PARAMETERS:                                            01500000
.*                                                                      01550000
.* - DCB= (required for I form) address of a DCB.                       01560000
.*         This can be an RX-type address (valid as an assembler        01570000
.*      instruction address), or a register whose symbol results        01580000
.*      in a value of (2) through (12),                                 01590000
.*                                                                      01600000
.* - BUFBLK='max-bufr-depth': This specifies the maximum number         01610000
.*      of data blocks that can be buffered (i.e., not yet recorded     01620000
.*      on the final medium) without causing synchronization to occur.  01630000
.*         BUFBLK can be omitted, for a default of 0, or an absolute    01640000
.*      or symbolic expression in the range of 0 to 65535.  For    @00C 01650000
.*      the standard or execute forms BUFBLK is not allowed if     @00C 01660000
.*      ABUFBLK is used.                                                01670000
.*         The BUFBLK value can be in the two low order bytes of a      01680000
.*      specified register (2-12).                                      01690000
.*                                                                      01700000
.* - ABUFBLK.  This specifies the address of a halfword that has the    01728500
.*      value to be used for BUFBLK.  This can be an RX-type address    01757000
.*      (valid as an assembler instruction address), or a register      01785500
.*      whose symbol results in a value of (2) through (12).            01814000
.*         ABUFBLK is not allowed for MF=L and is not allowed if        01842500
.*      BUFBLK is used.                                                 01871000
.*                                                                      01900000
.* - INQ=YES or NO to only request information about the degree         01950000
.*      of synchronization.  For MF=I or L the default is 'no'.         02000000
.*      For INQ=YES, the value in the BUFBLK parameter may be in the    02050000
.*      parameter list but will not be used by the the SVC routine.     02100000
.*                                                                      02150000
.* - ECB= to request asynchronous synchronization.  When the       @00A 02200000
.*      device becomes synchronized or it fails, the system will   @00A 02250000
.*      post the specified ECB.  If the environment does not       @00A 02300000
.*      support asynchronous synchronization, SYNCDEV will post    @00A 02350000
.*      the ECB before returning.  Otherwise the posting will be   @00A 02400000
.*      after returning to the caller.                             @00A 02450000
.*                                                                 @00A 02500000
.* - PLISTVER= specifies the version of the parameter list.        @00A 02550000
.*      0   Supports DCB, BUFBLK, ABUFBLK, INQ, MF and possible    @00A 02600000
.*          future parameters that fit in the 8-byte parm list.    @00A 02650000
.*      1   Supports ECB and the above parameters.  12 bytes.      @00A 02700000
.*         The default is the latest version that supports all the @00A 02750000
.*      parameters coded on the macro.  The purpose of the keyword @00A 02800000
.*      is to force the list and execute forms to be the same      @00A 02850000
.*      form.                                                      @00A 02900000
.*                                                                 @00A 02950000
.* - MF specifies the form of the macro.  Omit it or code MF=I to       03000000
.*      get the standard form, code L for the list form, or code        03050000
.*      MF=(E,addr) or MF=(E,addr,COMPLETE) for the execute form.  @00C 03100000
.*         With the execute form the word COMPLETE means that the  @00A 03150000
.*      execute form contains all the parameters and the list form @00A 03200000
.*      has not been initialized.                                  @00A 03250000
.*                                                                      03400000
.* OUTPUT -                                                             03450000
.*                                                                      03500000
.* - MF=I or MF not specified: (standard form)                          03550000
.*      Inline code will be generated to build a parameter list         03600000
.*      and issue an SVC 109 with register 15 set to 31.                03650000
.*                                                                      03700000
.* - MF=L: a parameter list only, with no executable instructions.      03750000
.*                                                                      03850000
.* - MF=E: the parameter list passed will be modified by any            03900000
.*      parameters passed and an SVC 109 will be issued with            03950000
.*      register 15 set to 31.                                          04000000
.*                                                                      04050000
.* EXTERNAL REFERENCES = N/A                                            04100000
.*                                                                      04150000
.* MACROS = IHBINNRA, IHBERMAC, IGGERMAC                           @00C 04200000
.*                                                                      04250000
.* CHANGE ACTIVITY =                                                    04300000
.* $H0=3480,JDP1111,,STLPKH                                             04350000
.* $00=OW23737,HDZ11C0,961025,SJPLWER: ECB PARAMETER               @00A 04383300
.**END OF SPECIFICATIONS*************************************           04416600
.*                                                                      04450000
         LCLB  &ERR           On if any parameter error            @00C 04480500
         LCLB  &B0ON,&B1ON,&B2ON,&B3ON,&B4ON,&B5ON,&B6ON,&B7ON     @00AX04511000
                              Bits to turn on in flag byte         @00A 04541500
         LCLB  &B0OFF,&B1OFF,&B2OFF,&B3OFF,&B4OFF,&B5OFF,&B6OFF,   @00AX04572000
               &B7OFF         Bits to turn off in flag byte (1     @00AX04602500
                              means not to change)                 @00A 04633000
         LCLA  &VER           PLISTVER value (possibly defaulted)  @00C 04663500
         LCLA  &LISTLEN       Length of parameter list             @00A 04694000
         LCLB  &COMPLETE      COMPLETE coded in MF=(E,xx,COMPLETE) @00A 04724500
         LCLB  &BLK           BUFBLK PASSED                             04755000
         LCLB  &BLKA          ABUFBLK PASSED                            04785500
         LCLB  &BLKREG        BUFBLK=(REG)                              04816000
         LCLB  &BLKAREG       ABUFBLK=(REG)                             04846500
         LCLC  &TEST          BUFBLK VALUE                              04877000
         LCLC  &BLADCON       ABUFBLK ADCON ADDRESS                     04907500
         LCLC  &DCBAD         DCB ADCON ADDRESS                         04938000
         LCLC  &TEMP          Temporary value                      @00A 04968500
&TEST    SETC  '0'                                                      05000000
&B0OFF   SETB  1              Set to avoid changing bit 0          @00A 05005500
&B1OFF   SETB  1              Set to avoid changing bit 1          @00A 05011000
&B2OFF   SETB  1              Set to avoid changing bit 2          @00A 05016500
&B3OFF   SETB  1              Set to avoid changing bit 3          @00A 05022000
&B4OFF   SETB  1              Set to avoid changing bit 4          @00A 05027500
&B5OFF   SETB  1              Set to avoid changing bit 5          @00A 05033000
&B6OFF   SETB  1              Set to avoid changing bit 6          @00A 05038500
&B7OFF   SETB  1              Set to avoid changing bit 7          @00A 05044000
.***********************************************************            05050000
.*  CHECK FOR INVALID PARAMETER                                         05100000
.***********************************************************            05150000
.CHK0    AIF   (N'&SYSLIST EQ 0 ).CHK2        ANY POSITIONAL PARMS      05200000
         IHBERMAC 238         Complain about positional parameter  @00C 05250000
&ERR     SETB  1              Prevent macro expansion              @00C 05300000
.***********************************************************            05350000
.*  CHECK FOR VALID MF PARAMETER                                        05400000
.***********************************************************            05450000
.CHK2    AIF   ('&MF' EQ 'I').CHKVER       MF PARAMETER = 'I'      @00C 05455300
         AIF   ('&MF' EQ 'L').CHKVER       MF PARAMETER = 'L'      @00C 05460600
         AIF   ('&MF(1)' EQ 'E' AND N'&MF EQ 2).CHKVER             @00C 05465900
         AIF   ('&MF(1)' NE 'E' OR N'&MF NE 3).BADMF               @00A 05471200
&COMPLETE SETB ('&MF(3)' EQ 'COMPLETE')  Set the COMPLETE flag     @00A 05476500
         AIF   (&COMPLETE).CHKVER  Go if third value is COMPLETE   @00A 05481800
.BADMF   IGGERMAC 112         Message complaining about MF         @00C 05487100
         AGO   .DIE           MACRO EXIT                           @00C 05492400
.***********************************************************       @00A 05497700
.*  CHECK FOR VALID PLISTVER AND ASSOCIATED PARAMETERS             @00A 05503000
.***********************************************************       @00A 05508300
.CHKVER  AIF   ('&PLISTVER' EQ '' OR ('&PLISTVER' GE '0' AND           X05513600
               '&PLISTVER' LE '1')).CHKVER0  Go if valid value     @00A 05518900
         MNOTE 8,'PLISTVER= MUST BE 0, 1 OR OMITTED'               @00A 05524200
&ERR     SETB  1              Prevent macro expansion              @00A 05529500
         AGO   .CHK4                                               @00A 05534800
.CHKVER0 AIF   (('&PLISTVER' EQ '0' OR '&PLISTVER' EQ '') AND          X05540100
               '&ECB' EQ '').DOVER0                                @00A 05545400
.***     AIF   ('&PLISTVER' EQ '1' AND '&xxx' EQ '').DOVER1 future @00A 05550700
.* Insert code here for PLISTVER=2 and change the above line.      @00A 05556000
.DOVER1  ANOP       Handle PLISTVER=1 or ECB was coded             @00A 05561300
&VER     SETA  1              Remember we are doing PLISTVER=1     @00A 05566600
&LISTLEN SETA  12             Remember length of parameter list    @00A 05571900
&B5OFF   SETB  0              Force flag bit 5 off                 @00A 05577200
&B6OFF   SETB  0              Force flag bit 6 off                 @00A 05582500
&B7ON    SETB  1              Force flag bit 7 on                  @00A 05587800
         AIF   ('&PLISTVER' NE '0').DOVER1B  Check for conflict    @00A 05593100
         IHBERMAC 1020,''PLISTVER=0'',ECB  PLISTVER=0 & ECB        @00A 05598400
&ERR     SETB  1              Prevent macro expansion              @00A 05603700
         AGO   .CHK4                                               @00A 05609000
.***********************************************************       @00A 05614300
.*  CHECK FOR VALID ECB VALUE.  PLISTVER>=1 required or defaulted. @00A 05619600
.***********************************************************       @00A 05624900
.DOVER1B AIF   ('&ECB' EQ '').CHK4                                 @00A 05630200
         AIF   ('&ECB'(1,1) NE '(').CHK4  Go if not register form  @00A 05635500
         AIF   ('&MF' NE 'L').CHKECB2                              @00A 05640800
         MNOTE 8,'ECB CANNOT BE A REGISTER VALUE WITH MF=L'        @00A 05646100
&ERR     SETB  1              Prevent macro expansion              @00A 05651400
         AGO   .CHK4                                               @00A 05656700
.CHKECB2 AIF   (T'&ECB NE 'N').CHK4                                @00A 05662000
         AIF   (&ECB(1) GE 2 AND &ECB(1) LE 12).CHK4               @00A 05667300
         MNOTE 8,'REGISTER FOR ECB MUST BE IN RANGE 2-12'          @00A 05672600
&ERR     SETB  1              Prevent macro expansion              @00A 05677900
         AGO   .CHK4                                               @00A 05683200
.*  END OF PARAMETERS THAT REQUIRE PLISTVER>1.                     @00A 05688500
.DOVER0  ANOP       Handle PLISTVER=0.  &VER already is 0.         @00A 05693800
.* We know that nothing was coded to conflict with PLISTVER.       @00A 05699100
&LISTLEN SETA  8              Remember length of parameter list    @00A 05704400
.* If PLISTVER not explicitly coded, then do not force bits off.   @00A 05709700
         AIF   ('&PLISTVER' EQ '').CHK4                            @00A 05715000
&B5OFF   SETB  0              Force flag bit 5 off                 @00A 05720300
&B6OFF   SETB  0              Force flag bit 6 off                 @00A 05725600
&B7OFF   SETB  0              Force flag bit 7 off                 @00A 05730900
         AGO   .CHK4                                               @00A 05736200
.* End of handling PLISTVER and parameters that require it.        @00A 05741500
.***********************************************************            05750000
.*  CHECK FOR VALID DCB VALUE.                                     @00C 05800000
.***********************************************************            05850000
.CHK4    AIF   ('&DCB' EQ '').CHK6         DCB NULL                     05900000
         AIF   (N'&DCB EQ 1).CHK8          ONLY ONE PARAMETER           05950000
         MNOTE 8,'DCB PARAMETER &DCB INVALID'       ERROR MESSAGE       06000000
&ERR     SETB  1              Prevent macro expansion              @00C 06035700
         AGO   .CHK12                                              @00A 06071400
.CHK6    AIF   ('&MF' NE 'I' AND NOT &COMPLETE).CHK8   MF NOT = I  @00C 06107100
         IHBERMAC 1006,DCB    Complain about missing DCB value     @00C 06142800
&ERR     SETB  1              Prevent macro expansion              @00C 06178500
         AGO   .CHK12                                              @00A 06214200
.CHK8    AIF   ('&DCB' EQ '&DCB(1)').CHK12 NOT EQUAL REGISTER           06250000
         AIF   ('&MF' NE 'L').CHK10       MF NOT = 'L'                  06300000
         MNOTE 8,'DCB CAN''T BE A REGISTER WHEN MF = ''L'''             06350000
&ERR     SETB  1              Prevent macro expansion              @00C 06383300
         AGO   .CHK12                                              @00A 06416600
.CHK10   AIF   (T'&DCB(1)  NE 'N').CHK12 ALLOW NAMED REGISTER           06450000
         AIF   (&DCB(1) GE 2 AND &DCB(1) LE 12).CHK12                   06500000
         MNOTE 8,'REGISTER &DCB SPECIFIED FOR DCB IS NOT 2-12'          06550000
&ERR     SETB  1              Prevent macro expansion              @00C 06570000
.***********************************************************       @00A 06590000
.*  CHECK FOR VALID BUFBLK or ABUFBLK VALUES.                      @00A 06610000
.***********************************************************       @00A 06630000
.CHK12   AIF   ('&BUFBLK' EQ '' AND '&ABUFBLK' EQ '').CHKI              06650000
         AIF   ('&BUFBLK' NE '' AND '&ABUFBLK' NE '').CHK14             06700000
         AIF   ('&BUFBLK' NE '').CHK16     BUFBLK NOT NULL              06750000
         AIF   ('&ABUFBLK' NE '').CHK24    ABUFBLK NOT NULL             06800000
.CHK14   IHBERMAC 1304,ABUFBLK,BUFBLK  Mutually exclusive params   @00C 06837500
&ERR     SETB  1              Prevent macro expansion              @00C 06875000
         AGO   .CHKI                                               @00A 06912500
.CHK16   ANOP                                                           06950000
&BLK     SETB  1              Remember BUFBLK was coded                 07000000
         AIF   (N'&BUFBLK EQ 1).CHK18         ONLY ONE PARAMETER        07050000
         IHBERMAC 1007,BUFBLK Complain about invalid BUFBLK value  @00C 07087500
&ERR     SETB  1              Prevent macro expansion              @00C 07125000
         AGO   .CHKI                                               @00A 07162500
.CHK18   AIF   ('&BUFBLK' EQ '&BUFBLK(1)').CHK22 NO REGISTER PASSED     07200000
         AIF   ('&MF' NE 'L').CHK20       MF NOT = 'L'                  07250000
         MNOTE 8,'BUFBLK PARM MUST NOT BE A REGISTER FOR MF = ''L'''    07300000
&ERR     SETB  1              Prevent macro expansion              @00C 07333300
         AGO   .CHKI                                               @00A 07366600
.CHK20   ANOP                                                           07400000
&BLKREG  SETB  1                                 INDICATE REG PASSED    07450000
         AIF   (T'&BUFBLK(1) NE 'N').CHKI        ALLOWED NAMED REGISTER 07500000
         AIF   (&BUFBLK(1) GE 2 AND &BUFBLK(1) LE 12).CHKI              07550000
         MNOTE 8,'REGISTER &BUFBLK SPECIFIED FOR BUFBLK IS NOT 2-12'    07600000
&ERR     SETB  1              Prevent macro expansion              @00C 07641600
         AGO   .CHKI                                               @00A 07683200
.*                                                                      07724800
.*  CHECK FOR VALID BUFBLK NUMERIC VALUE.                          @00C 07766400
.*                                                                      07808000
.CHK22   ANOP                                                           07850000
&TEST    SETC  '&BUFBLK'                                                07900000
         AIF   (T'&BUFBLK(1) NE 'N').CHKI     NON NUMERIC               07950000
         AIF   ('&TEST' LE '65535').CHKI                                08000000
         MNOTE 8,'BUFBLK VALUE NOT BETWEEN 0 - 65535'                   08050000
&ERR     SETB  1              Prevent macro expansion              @00C 08083300
         AGO   .CHKI                                               @00A 08116600
.*                                                                      08150000
.*  CHECK ABUFBLK                                                       08200000
.*                                                                      08250000
.CHK24   AIF   ('&MF' NE 'L').CHK26       MF NOT = 'L'                  08300000
         MNOTE 8,'ABUFBLK PARM NOT ALLOWED FOR MF = ''L'''              08350000
&ERR     SETB  1              Prevent macro expansion              @00C 08383300
         AGO   .CHKI                                               @00A 08416600
.CHK26   ANOP                                                           08450000
&BLKA    SETB  1              Remember ABUFBLK was coded           @00C 08500000
         AIF   (N'&ABUFBLK EQ 1).CHK28         ONLY ONE PARAMETER       08550000
         MNOTE 8,'ABUFBLK PARAMETER &ABUFBLK INVALID'                   08600000
&ERR     SETB  1              Prevent macro expansion              @00C 08633300
         AGO   .CHKI                                               @00A 08666600
.CHK28   AIF   ('&ABUFBLK' EQ '&ABUFBLK(1)').CHKI NO REGISTER PASSED    08700000
         AIF   ('&MF' NE 'L').CHK30       MF NOT = 'L'                  08750000
         MNOTE 8,'ABUFBLK PARM MUST NOT BE A REGISTER FOR MF = ''L'''  X08780000
                                                                   @00C 08810000
&ERR     SETB  1              Prevent macro expansion              @00C 08840000
         AGO   .CHKI                                               @00A 08870000
.CHK30   ANOP                                                           08900000
&BLKAREG SETB  1                                 INDICATE REG PASSED    08950000
         AIF   (T'&ABUFBLK(1) NE 'N').CHKI       ALLOWED NAMED REGISTER 09000000
         AIF   (&ABUFBLK(1) GE 2 AND &ABUFBLK(1) LE 12).CHKI            09050000
         MNOTE 8,'REGISTER &ABUFBLK SPECIFIED FOR ABUFBLK IS NOT 2-12'  09100000
&ERR     SETB  1              Prevent macro expansion              @00C 09150000
.***********************************************************            09200000
.*  CHECK FOR VALID INQ PARAMETER                                       09250000
.***********************************************************            09300000
.CHKI    ANOP                                                           09350000
         AIF   ('&INQ' EQ '').TESTERR   INQ PARAMETER=NULL         @00A 09400000
         AIF   ('&INQ' EQ 'YES').CHKI1  INQ PARAMETER='YES'             09450000
         AIF   ('&INQ' EQ 'NO').CHKI20  INQ PARAMETER='NO'         @00A 09500000
         MNOTE 8,'INQ PARAMETER  &INQ  INVALID'                         09550000
&ERR     SETB  1              Prevent macro expansion              @00C 09583300
         AGO   .TESTERR                                            @00A 09616600
.CHKI1   ANOP                                                           09650000
&B0ON    SETB  1              Remember to set flag bit 0 on        @00C 09658300
         AGO   .TESTERR                                            @00A 09666600
.CHKI20  ANOP                                                      @00A 09674900
&B0OFF   SETB  0              Remember to set flag bit 0 off       @00A 09683200
.***********************************************************       @00A 09691500
.*  TEST WHETHER THERE HAS BEEN ANY ERROR SO FAR.                  @00A 09699800
.***********************************************************       @00A 09708100
.TESTERR AIF   (NOT &ERR).GOMF   Go if no error detected           @00A 09716400
.DIE     ANOP                                                      @00A 09724700
&NAME    DC    0H'0'          DECREASE ASSEMBLY ERRORS             @00A 09733000
         MEXIT                                                          09741300
.***********************************************************            09750000
.*  TEST THE MF PARAMETER                                               09800000
.***********************************************************            09850000
.GOMF    AIF   ('&MF' EQ 'I').MFEQI        MF PARAMETER = 'I'           09900000
         AIF   ('&MF' EQ 'L').MFEQL        MF PARAMETER = 'L'           09950000
         AIF   ('&MF(1)' EQ 'E').MFEQE     MF PARMAETER = 'E'           10000000
         MEXIT                                MACRO EXIT                10100000
.***********************************************************            10150000
.*  GENERATE THE STANDARD FORM (MF=I OR OMITTED)                   @00C 10200000
.***********************************************************            10250000
.MFEQI   CNOP  0,4                      ALIGN BOUNDARY                  10300000
&NAME    BAS   1,*+4+&LISTLEN           LOAD R1, BRANCH OVER DC'S  @00C 10350000
.GETDCB  AIF   ('&DCB' EQ '&DCB(1)').GETDCB2  DCB NOT IN REGISTER  @00A 10400000
.GETDCB1 ANOP                                                           10500000
         DC    A(0)                  +0 DCB ADDRESS                     10550000
         AGO   .GETBLK                                                  10600000
.GETDCB2 ANOP                                                           10650000
         AIF   ('&DCB'(2,1) NE '(').GETDCB3       ADCON PASSED          10700000
         DC    &DCB                  +0 DCB ADDRESS                     10750000
         AGO   .GETBLK                                                  10800000
.GETDCB3 DC    A(&DCB)               +0 DCB ADDRESS                     10814200
.GETBLK  ANOP                                                      @00A 10828400
&TEMP    SETC  '&B0ON.&B1ON.&B2ON.&B3ON.&B4ON.&B5ON.&B6ON.&B7ON.'  @00A 10842600
         DC    B'&TEMP',AL1(0)       +4 FLAGS AND RESERVED FIELD   @00C 10856800
         DC    AL2(&TEST)            +6 BUFBLK                     @00A 10871000
         AIF   (&LISTLEN EQ 8).GETBLK2 Go if end of version 1 list @00A 10885200
         AIF   ('&ECB' EQ '').GETECB1    Go if ECB omitted         @00A 10899400
         AIF   ('&ECB'(1,1) NE '(').GETECB2  Go if ECB not in reg  @00A 10913600
.GETECB1 DC    A(0)                  +8 ADDRESS OF ECB             @00A 10927800
         AGO   .GETBLK2                                            @00A 10942000
.GETECB2 DC    A(&ECB)               +8 ADDRESS OF ECB             @00A 10956200
.* Parameter list area now is defined.  Change whatever is needed. @00A 10970400
.GETBLK2 AIF   (&BLK EQ 0 AND &BLKA EQ 0).TESTDCB BOTH NULL        @00C 10984600
         AIF   (&BLK EQ 0).GETBLK6            BUFBLK NOT PASSED         11000000
         AIF   (&BLKREG  EQ  0 ).TESTDCB      BUFBLK NOT IN REGISTER    11050000
         STH   &BUFBLK(1),6(0,1)     +6 STORE BUFBLK                    11100000
         AGO   .TESTDCB                                                 11150000
.GETBLK6 AIF   (&BLKAREG  EQ  0 ).GETBLK8    ADDRESS NOT IN REGISTER    11200000
         LH    15,0(0,&ABUFBLK(1))      GET BUFFER VALUE                11250000
         STH   15,6(0,1)             +6 STORE IN PARM LIST              11300000
         AGO   .TESTDCB                                                 11350000
.GETBLK8 AIF   ('&ABUFBLK'(2,1) NE '(').GETBLK9       ADCON PASSED      11400000
&BLADCON SETC  '&ABUFBLK'(3,K'&ABUFBLK-3)             GET ADDRESS       11450000
         LH    15,&BLADCON              GET  BUFFER VALUE               11500000
         STH   15,6(0,1)             +6 STORE IN PARM LIST              11550000
         AGO   .TESTDCB                                                 11600000
.GETBLK9 LH    15,&ABUFBLK              GET BUFFER VALUE                11650000
         STH   15,6(0,1)             +6 STORE IN PARM LIST              11683300
.TESTDCB AIF   ('&DCB(1)' EQ '&DCB').GETECB8  Go if DCB not in reg @00A 11716600
         ST    &DCB,0(0,1)           +0 STORE DCB ADDRESS               11749900
.GETECB8 AIF   ('&ECB(1)' EQ '&ECB').IEND   Go if ECB not in reg   @00A 11783200
         ST    &ECB(1),8(,1)         +8 STORE ECB ADDRESS          @00A 11816500
.IEND    ANOP                                                           11850000
         SR    0,0                      ZERO REGISTER 0                 11900000
         LA    15,31                    SVC ROUTER CODE                 11950000
         SVC   109                      SUPERVISOR CALL                 12000000
         MEXIT                                                          12050000
.***********************************************************            12100000
.*  GENERATE THE LIST FORM (MF=L)                                  @00C 12150000
.***********************************************************            12200000
.MFEQL   ANOP                                                           12250000
         AIF   ('&DCB' EQ '').MFEQL1A      BUFBLK = NULL?               12300000
         AIF   ('&DCB'(2,1) NE '(').MFEQL1    NO  ADCON PASSED          12350000
&NAME    DC    &DCB                  +0 DCB ADDRESS                     12400000
         AGO   .MFEQL2                                                  12450000
.MFEQL1  ANOP                                                           12500000
&NAME    DC    A(&DCB)               +0 DCB ADDRESS                     12550000
         AGO   .MFEQL2                                                  12600000
.MFEQL1A ANOP                                                           12650000
&NAME    DC    A(0)                  +0 DCB ADDRESS                     12663600
.MFEQL2  ANOP                                                      @00A 12677200
&TEMP    SETC  '&B0ON.&B1ON.&B2ON.&B3ON.&B4ON.&B5ON.&B6ON.&B7ON.'  @00A 12690800
         DC    B'&TEMP',AL1(0)       +4 FLAGS AND RESERVED         @00C 12704400
         DC    AL2(&TEST)            +6 BUFBLK                     @00A 12718000
         AIF   (&LISTLEN EQ 8).LEND     End of list if PLISTVER=0  @00A 12731600
         AIF   ('&ECB' EQ '').MFLECB    Go if ECB not coded        @00A 12745200
         DC    A(&ECB)               +8 Address of ECB             @00A 12758800
         AGO   .LEND                                               @00A 12772400
.MFLECB  DC    A(0)                  +8 Address of ECB             @00A 12786000
.LEND    MEXIT                          END OF L FORM                   12800000
.*                                                                      12850000
.***********************************************************            12900000
.*  GENERATE THE EXECUTE FORM (MF=(E,XXX) OR MF=(E,XXX,COMPLETE))  @00C 12950000
.***********************************************************            13000000
.MFEQE   ANOP                           NO-OP                           13050000
&NAME    IHBINNRA &MF(2)                LOAD PARAMETER ADDR             13075000
         AIF   (NOT &COMPLETE).MFEDCB4  Go if COMPLETE not coded   @00A 13100000
         XC    4(&LISTLEN.-4,1),4(1)    CLEAR THE PARAMETER LIST   @00A 13125000
.***********************************************************            13150000
.*  SET THE DCB PARAMETER.  It is required on list or execute.          13200000
.***********************************************************            13250000
.MFEDCB4 AIF   ('&DCB' EQ '').SETFLAG   If no DCB, go check flags  @00C 13300000
         AIF   ('&DCB' NE '&DCB(1)').EQREG    DCB = REGISTER?           13350000
         AIF   ('&DCB'(2,1) EQ '(').EDCB          ADCON PASSED          13400000
         LA    15,&DCB                  LOAD DCB ADDRESS                13450000
         AGO   .STDCB                         END OF MACRO              13500000
.EDCB    ANOP                                                           13550000
&DCBAD   SETC  '&DCB'(3,K'&DCB-3)             GET ADDRESS               13600000
         LA    15,&DCBAD                GET DCB ADDRESS                 13650000
.STDCB   ST    15,0(0,1)             +0 STORE IN PARAMETER LIST         13700000
         AGO   .SETFLAG                 END OF MACRO               @00C 13750000
.EQREG   ST    &DCB(1),0(0,1)        +0 STORE DCB IN PARM LIST          13800000
.***********************************************************            13850000
.*  SET THE FLAGS BYTE                                             @00C 13900000
.***********************************************************            13950000
.* If we do not have to turn off any of the first five bits, then  @00A 13977200
.* skip it.  The three version bits should already be correct.     @00A 14004400
.SETFLAG AIF   ('&B0OFF&B1OFF&B2OFF&B3OFF&B4OFF' EQ '11111').SETFLAG2  X14031600
                                                                   @00C 14058800
&TEMP    SETC  '&B0OFF&B1OFF&B2OFF&B3OFF&B4OFF&B5OFF&B6OFF&B7OFF'  @00A 14086000
         NI    4(1),B'&TEMP'         +4 SET FLAG BITS OFF          @00C 14113200
.SETFLAG2 AIF  ('&B0ON&B1ON&B2ON&B3ON&B4ON&B5ON&B6ON&B7ON' EQ          X14140400
               '00000000').BLKE         Go if no bits to set on    @00A 14167600
&TEMP    SETC  '&B0ON&B1ON&B2ON&B3ON&B4ON&B5ON&B6ON&B7ON'          @00A 14194800
         OI    4(1),B'&TEMP'         +4 SET FLAG BITS ON           @00C 14222000
.***********************************************************            14250000
.*  SET THE BUFBLK/ABUFBLK PARAMETER                                    14300000
.***********************************************************            14350000
.BLKE    AIF   (&BLK EQ 0 AND &BLKA EQ 0).MFEECB  BOTH NULL        @00C 14393700
         AIF   (&BLK EQ 0).BLKE6        BUFBLK NOT PASSED               14437400
         AIF   (&BLKREG  EQ  0 ).NEREG  BUFBLK NOT IN REGISTER          14481100
         STH   &BUFBLK(1),6(0,1)     +6 STORE BUFBLK                    14524800
         AGO   .MFEECB                  GO ISSUE SVC               @00C 14568500
.NEREG   AIF   (T'&BUFBLK(1) NE 'N').BLKE2  If not self-defining   @00C 14612200
         AIF   (&BUFBLK GT 4095).BLKE2  Go if too large for LA     @00A 14655900
         LA    15,&BUFBLK               LOAD BUFBLK PARAMETER           14700000
         AGO   .STBUFB                  STORE IN BUFFER                 14750000
.BLKE2   LH    15,=AL2(&TEST)           LOAD BUFBLK PARAMETER      @00C 14800000
         AGO   .STBUFB                  STORE IN BUFFER                 14850000
.BLKE6   AIF   (&BLKAREG EQ 0).BLKE8    ADDRESS NOT IN REGISTER         14900000
         LH    15,0(0,&ABUFBLK(1))      GET BUFFER VALUE                14950000
         AGO   .STBUFB                                                  15000000
.BLKE8   AIF   ('&ABUFBLK'(2,1) NE '(').BLKE10   ADCON PASSED           15050000
&BLADCON SETC  '&ABUFBLK'(3,K'&ABUFBLK-3)   GET ADDRESS                 15100000
         LH    15,&BLADCON              GET BUFFER VALUE                15150000
         AGO   .STBUFB                                                  15200000
.BLKE10  LH    15,&ABUFBLK              GET BUFFER VALUE                15250000
.STBUFB  STH   15,6(0,1)             +6 STORE BUFBLK VALUE              15262500
.MFEECB  AIF   ('&ECB' EQ '').END       Go if ECB omitted          @00A 15275000
         AIF   ('&ECB'(1,1) EQ '(').MFEECB2                        @00A 15287500
         LA    15,&ECB                  GET ECB ADDRESS            @00A 15300000
         ST    15,8(,1)              +8 STORE ECB ADDRESS          @00A 15312500
         AGO   .END                     Go to end of expansion     @00A 15325000
.MFEECB2 ST    &ECB(1),8(,1)         +8 STORE ECB ADDRESS          @00A 15337500
.END     SR    0,0                      ZERO REGISTER 0                 15350000
         LA    15,31                    SVC ROUTER CODE                 15400000
         SVC   109                      SUPERVISOR CALL                 15450000
         MEND                                                           15500000
