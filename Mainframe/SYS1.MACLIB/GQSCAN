*/*  START OF SPECIFICATIONS ****************************************** 00050000
*                                                                     * 00100000
*01*  MACRO-NAME = GQSCAN                                             * 00150000
*                                                                     * 00166600
*01*  MACRO-DATE = 11/01/95                                           * 00183300
*                                                                     * 00200000
*01*  DESCRIPTIVE-NAME = GLOBAL RESOURCE SERIALIZATION QUEUE          * 00233300
*                        SCAN MACRO                                   * 00266600
*                                                                     * 00300000
*01*  PROPRIETARY STATEMENT =                                         * 00350000
*                                                                     * 00600000
*      LICENSED MATERIALS - PROPERTY OF IBM                           * 00611100
*      THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    * 00622200
*      5645-001 (C) COPYRIGHT IBM CORP. 1981, 1996                    * 00633300
*                                                                     * 00644400
*01*  STATUS = JBB6602                                                * 00655500
*                                                                     * 00666600
*01* EXTERNAL CLASSIFICATION: GUPI                                    * 00677700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00688800
*                                                                     * 00700000
*01*  FUNCTION = INTERFACE TO THE GRS QUEUE SCAN SERVICE.             * 00750000
*                EACH OPERAND IS SYNTAX CHECKED AND CHECKS            * 00787400
*                ARE MADE FOR INVALID COMBINATIONS OF                 * 00824800
*                OPERANDS.                                            * 00862200
*                                                                     * 00900000
*01*  MODULE-TYPE = MACRO                                             * 00950000
*                                                                     * 01000000
*01*  PROCESSOR = ASSEMBLER                                           * 01050000
*                                                                     * 01100000
*01*  MACROS = NONE                                                   * 01150000
*                                                                     * 01200000
*01*  OUTPUT = PARAMETER LIST TO ISGQSCAN MAPPED AS FOLLOWS:          * 01201300
*                                                                     * 01202600
*             OFFSET   LENGTH    NAME      DESCRIPTION                * 01203900
*               0        4     AREAADDR    ADDRESS OF USER SPECIFIED  * 01205200
*                                          AREA                       * 01206500
*               4        4     AREASIZE    SIZE OF USER SPECIFIED AREA* 01207800
*               8        4     QNAME       QNAME (MAJOR NAME) ADDRESS * 01209100
*              12        4     RNAME       RNAME (MINOR NAME) ADDRESS * 01210400
*              16        4     SYSNM       SYSNAME ADDRESS            * 01211700
*              20        4     ASID        ASID VALUE                 * 01213000
*              24        4     REQCNT      REQUEST COUNT              * 01214300
*              28        4     OWNCNT      OWNER COUNT                * 01215600
*              32        4     WAITCNT     WAIT COUNT                 * 01216900
*              36        4     TOKEN       TOKEN ADDRESS              * 01218200
*              40        4     REQLIM      REQUEST LIMIT              * 01219500
*              44        1     FLAGSA      RESERVE/QUIT/SCOPE FLAGS   * 01220800
*                             1.......     SCOPE=STEP                 * 01222100
*                             .1......     SCOPE=SYSTEM               * 01223400
*                             ..1.....     SCOPE=SYSTEMS              * 01224700
*                             ...1....     SCOPE=LOCAL                * 01226000
*                             ....1...     SCOPE=GLOBAL               * 01227300
*                             .....1..     RESERVE=NO                 * 01228600
*                             ......1.     RESERVE=YES                * 01229900
*                             .......1     QUIT=YES           @ZA58541* 01231200
*              45        1     FLAGSB      VARIABLE SPECIFIED FLAGS   * 01232500
*                             1.......     SYSNAME SPECIFIED          * 01233800
*                             .1......     REQCNT SPECIFIED           * 01235100
*                             ..1.....     OWNCNT SPECIFIED           * 01236400
*                             ...1....     WAITCNT SPECIFIED          * 01237700
*                             ....1...     TOKEN SPECIFIED            * 01239000
*                             .....1..     GENERIC RNAME          @L1A* 01240300
*                             ......1.     QNAME LENGTH SPECIFIED     * 01241600
*                             .......1     XSYS=NO                @L2C* 01242900
*              46        1     RNMLEN      RNAME LENGTH               * 01244200
*              47        1     QNMLEN      QNAME LENGTH               * 01244800
*                                                                     * 01245500
*01*  CHANGE-ACTIVITY =                                               * 01252300
*            SUPPORTS THE FOLLOWING PTM(S):                           * 01259100
*   $P1=PAJ0087 ,JBB2125,830608,PDG3: COMMENT CHANGES             @P1A* 01279500
*                                                                     * 01300000
*            SUPPORTS THE FOLLOWING APARS:                            * 01310000
*             OZ58541 - PQCB'S ARE NOT FREED IF A USER DOES NOT       * 01320000
*                       RETURN TO GQSCAN AFTER RC=8. GQSCAN AND       * 01330000
*                       ISGQSCAN WILL CHANGE TO ADD A NEW             * 01340000
*                       FUNCTION: QUIT=YES/NO WHICH WILL ALLOW        * 01350000
*                       A USER TO TERMINATE THE CURRENT SCAN          * 01360000
*                       REQUEST. ALSO USAGE OF IHBERMAC (MNOTE        * 01370000
*                       MACRO) HAS BEEN REPLACED BY CONTAINING        * 01380000
*                       THE MNOTES IN GQSCAN.                 @ZA58541* 01390000
*                                                                     * 01400000
*                                                                     * 01402500
*             OZ62246 - WHEN USING THE LIST AND EXECUTE FORM OF       * 01403500
*                       THE MACRO, GQSCAN WILL NOT GENERATE THE       * 01407000
*                       CORRECT ENTRY POINT TO ISGQSCAN IF SCOPE=     * 01410500
*                       LOCAL OR SCOPE=GLOBAL IS SPECIFIED ON THE     * 01414000
*                       LIST FORM AND NOT THE EXECUTE FORM.   @ZA62246* 01417500
*                                                                     * 01421000
*             OZ63621 - IF QUIT=YES IS SPECIFIED ON THE STANDARD      * 01421500
*                       FORM OF THE GQSCAN MACRO, THE DEFAULT         * 01422000
*                       REQUEST LIMIT PARAMETER IS STILL PUT INTO     * 01422500
*                       THE PLIST CAUSING AN ABEND09A-A138    @ZA63621* 01423000
*                                                                     * 01423500
*             OZ64734 - WHEN USING THE EXECUTE FORM OF THE MACRO,     * 01424500
*                       GQSCAN WILL RESET THE RESERVE FLAGS IN        * 01428000
*                       THE PLIST AT THE CORRECT DISPLACEMENT.        * 01431500
*                                                             @ZA64734* 01435000
*                                                                     * 01436000
*             OZ81795 - When using register form for QNAME            * 01436100
*                       and no QNAME LENGTH, GQSCAN will set          * 01436200
*                       the default QNAME LENGTH incorrectly.         * 01436300
*                                                             @ZA81795* 01436400
*                                                                     * 01436500
*             OY21314 - When a QNAME value of zero is specified       * 01436600
*                       a default QNAME length is supplied and        * 01436700
*                       the QNAME length specified bit is set.        * 01436800
*                       This forces ISGQSCAN to issue an ABEND09A     * 01436900
*                       RCA114 since it can not distinguish between   * 01437000
*                       a zero QNAME and no QNAME.  Code has been     * 01437100
*                       changed so that the QNAME length specified    * 01437200
*                       bit is not set unless the user supplies a     * 01437300
*                       QNAME length.  An ABEND09A RCA114 will not    * 01437400
*                       be issued if the QNAME is specified but       * 01437500
*                       has a value of zero; however, if a            * 01437600
*                       user were to specify a QNAME length he would  * 01437700
*                       still be abended.                     @YA21314* 01437800
*                                                                     * 01437900
*             OY24718 - When the execute form of the macro is         * 01438000
*                       invoked without using the list form the       * 01438100
*                       default qname length does not get generated   * 01438200
*                       correctly.                            @YA24718* 01438300
*                                                                     * 01438400
*   $L1=DISGRSEN,JBB2125,830608,PDG3:DISPLAY GRS ENHANCEMENTS     @L1A* 01438500
*                                    add generic RNAME support        * 01439200
*   $D1=23      ,JBB2125,830608,PDG3:DISPLAY GRS enhancements     @D1A* 01441300
*                                    add generic QNAME support        * 01443400
*   $L2=GRS32   ,JBB6602,951101,PDBD:GRS STAR                         * 01444100
*                                    Add XSYS support             @L2A* 01444800
*                                                                     * 01445500
*01*  MNOTES =                                                        * 01450000
*              ISG001 - &OPERAND1 OPERAND(S) REQUIRED, NOT SPECIFIED  * 01500000
*                                                                     * 01550000
*              ISG002 - NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR       * 01583300
*                       &OPERAND1 PARAMETER.                          * 01616600
*                                                                     * 01650000
*              ISG003 - INVALID VALUE SPECIFIED FOR &OPERAND1.        * 01700000
*                                                                     * 01800000
*              ISG004 - &OPERAND1 MUST BE SPECIFIED WHEN &OPERAND2 IS * 01833300
*                       A REGISTER.                                   * 01866600
*                                                                     * 01900000
*              ISG005 - INVALID REGISTER NOTATION WITH MF=L FORM.     * 01950000
*                                                                     * 02000000
*              ISG006 - RX-TYPE ADDRESS INVALID FOR &OPERAND1.        * 02016600
*                                                                     * 02033200
*              ISG007 - &OPERAND1 OPERAND SPECIFIED WITHOUT &OPERAND2 * 02050000
*                       OPERAND.                                      * 02100000
*                                                                     * 02150000
*              ISG008 - &OPERAND1 INVALID WITH &OPERAND2.             * 02200000
*                                                                     * 02250000
*              ISG009 - &OPERAND1 AND &OPERAND2 ARE MUTUALLY          * 02283300
*                       EXCLUSIVE.                                    * 02316600
*                                                                     * 02350000
*              ISG010 - &OPERAND1 SPECIFIED WITH ANY OTHER OPERANDS   * 02361200
*                       EXCEPT &OPERAND2 IS INVALID.          @ZA58541* 02372400
*                                                                     * 02383600
*              ISG011 - &OPERAND1 OR &OPERAND2 OPERANDS CANNOT BE     * 02385500
*                       SPECIFIED WITH MF=L FORM.             @ZA62246* 02387400
*                                                                     * 02393100
*              ISG012 - THE FOURTH ARGUMENT OF THE RESNAME PARAMETER  * 02393300
*                       MUST BE "GENERIC" OR "SPECIFIC"           @L1A* 02393500
*                                                                     * 02393700
*              ISG013 - AN RNAME NEEDS TO BE SPECIFIED WHEN A SPECIFIC* 02393900
*                       RNAME IS SPECIFIED IN THE STANDARD FORM   @L1A* 02394100
*                                                                     * 02394300
*01*  SYSGEN = COPIED INTO SYS1.MACLIB FROM LIBRARY AMACLIB.          * 02395000
*                                                                     * 02440000
***  END OF SPECIFICATIONS  ******************************************* 02460000
*/*A000000-999999                                           @G384P1M */ 02480000
         MACRO                                                          02500000
&LABEL   GQSCAN &AREA=,                                                X02550000
               &REQLIM=,                                               X02750000
               &SCOPE=,                                                X02800000
               &RESNAME=,                                              X02850000
               &RESERVE=,                                              X02900000
               &SYSNAME=,                                              X02950000
               &REQCNT=,                                               X03000000
               &OWNERCT=,                                              X03050000
               &WAITCNT=,                                              X03100000
               &TOKEN=,                                                X03150000
               &XSYS=,                                                 X03162500
               &QUIT=,                                                 X03175000
               &MF=                                                     03200000
*        MACDATE = 95.305                                          @L2C 03225000
.********************************************************************** 03250000
.*                                                                    * 03300000
.*                 DECLARE BIT VARIABLES                              * 03350000
.*                                                                    * 03400000
.********************************************************************** 03450000
        LCLB  &ERROR     ERROR FLAG                                     03456200
        LCLB  &EI2       INDICATES DC REQUIRED FOR AREA SIZE            03462400
        LCLB  &EI3       INDICATES DC REQUIRED FOR REQLIM               03468600
        LCLB  &EI7       INDICATES DC REQUIRED FOR RNAME LENGTH         03474800
        LCLB  &EI8       INDICATES DC REQUIRED FOR QNAME LENGTH    @D1A 03477900
        LCLB  &EI10      INDICATES DC REQUIRED FOR ADDRESS SPACE ID     03481000
        LCLB  &EI11      INDICATES DC REQUIRED FOR REQUEST COUNT        03487200
        LCLB  &EI12      INDICATES DC REQUIRED FOR OWNER COUNT          03493400
        LCLB  &EI13      INDICATES DC REQUIRED FOR WAIT COUNT           03499600
        LCLB  &OTHER     USED TO DETERMINE IF ANOTHER OPERAND IS        03505800
.*                       SPECIFIED WITH TOKEN AND QUIT=YES     @ZA58541 03512000
        LCLB  &QT        INDICATES QUIT = YES                  @ZA58541 03518200
        LCLB  &RS(2)     RESERVE OPTION BITS                            03524400
.*            &RS(1)     INDICATES RESERVE = NO                         03530600
.*            &RS(2)     INDICATES RESERVE = YES                        03536800
        LCLB  &S(22)     OPTIONS SPECIFIED BITS                    @L2C 03543400
.*            &S(1)      INDICATES IF AREA ADDR IS SPECIFIED            03550000
.*            &S(2)      INDICATES IF AREA SIZE IS SPECIFIED            03600000
.*            &S(3)      INDICATES IF REQLIM IS SPECIFIED               03650000
.*            &S(4)      INDICATES IF SCOPE IS SPECIFIED                03700000
.*            &S(5)      INDICATES IF QNAME IS SPECIFIED                03750000
.*            &S(6)      INDICATES IF RNAME IS SPECIFIED                03800000
.*            &S(7)      INDICATES IF RNMLEN IS SPECIFIED               03850000
.*            &S(8)      INDICATES IF RESERVE IS SPECIFIED              03900000
.*            &S(9)      INDICATES IF SYSTEM NAME IS SPECIFIED          03950000
.*            &S(10)     INDICATES IF ASID IS SPECIFIED                 04000000
.*            &S(11)     INDICATES IF REQCNT IS SPECIFIED               04050000
.*            &S(12)     INDICATES IF OWNERCT IS SPECIFIED              04100000
.*            &S(13)     INDICATES IF WAITCNT IS SPECIFIED              04150000
.*            &S(14)     INDICATES IF TOKEN IS SPECIFIED                04200000
.*            &S(15)     INDICATES IF QUIT IS SPECIFIED        @ZA58541 04250000
.*            &S(16)     INDICATES IF MF IS SPECIFIED                   04300000
.*            &S(17)     INDICATES IF PARMLIST IS SPECIFIED             04550000
.*            &S(18)     RESNAME RNAME TYPE SPECIFIED FLAG         @L1A 04566600
.*            &S(19)     RESNAME RNAME TYPE FLAG, 1 = GENERIC      @L1A 04583200
.*            &S(20)     RESNAME QNAME LENGTH SPECIFIED FLAG       @D1A 04588800
.*            &S(21)     RESNAME OPERAND SPECIFIED                 @D1A 04594400
.*            &S(22)     Indicates if XSYS is specified            @L2A 04597200
        LCLB  &SC(6)     SCOPE OPTION BITS                              04600000
.*            &SC(1)     INDICATES SCOPE = STEP                         04650000
.*            &SC(2)     INDICATES SCOPE = SYSTEM                       04700000
.*            &SC(3)     INDICATES SCOPE = SYSTEMS                      04750000
.*            &SC(4)     INDICATES SCOPE = ALL (STEP,SYSTEM,SYSTEMS)    04800000
.*            &SC(5)     INDICATES SCOPE = LOCAL                        04816600
.*            &SC(6)     INDICATES SCOPE = GLOBAL                       04833200
        LCLB  &XS(2)     XSYS option bits                          @L2A 04857400
.*            &XS(1)     Indicates XSYS=NO                         @L2A 04881600
.*            &XS(2)     Indicates XSYS=YES                        @L2A 04905800
        LCLB  &T         TEMPORARY VALUE OF '0'B FOR BIT STRINGS        04930000
.********************************************************************** 05050000
.*                                                                    * 05100000
.*                 DECLARE CHARACTER VARIABLES                        * 05150000
.*                                                                    * 05200000
.********************************************************************** 05250000
        LCLC  &LT1       LOAD TYPE-1 - THIS VARIABLE WILL BE:           05300000
.*                           'R' IF AREA IS A REG TYPE ADDR OR          05350000
.*                           'A' IF AREA IS A RX TYPE ADDR              05400000
        LCLC  &LT2       LOAD TYPE-2 - THIS VARIABLE WILL BE:           05450000
.*                           'R' IF AREASZ IS A REG TYPE ADDR OR        05500000
.*                           'U' IF AREASZ IS AN EQUATED VALUE OR       05550000
.*                           'N' IF AREASZ IS A SELF-DEFINING TERM      05583300
        LCLC  &LT3       LOAD TYPE-3 - THIS VARIABLE WILL BE:           05616600
.*                           'R' IF REQLIM IS A REG TYPE ADDR OR        05649900
.*                           'U' IF REQLIM IS AN EQUATED VALUE OR       05683200
.*                           'N' IF REQLIM IS A SELF-DEFINING TERM      05716500
        LCLC  &LT5       LOAD TYPE-5 - THIS VARIABLE WILL BE:           05750000
.*                           'R' IF QNAME IS A REG TYPE ADDR OR         05800000
.*                           'A' IF QNAME IS A RX TYPE ADDR             05850000
        LCLC  &LT6       LOAD TYPE-6 - THIS VARIABLE WILL BE:           05900000
.*                           'R' IF RNAME IS A REG TYPE ADDR OR         05950000
.*                           'A' IF RNAME IS A RX TYPE ADDR             06000000
        LCLC  &LT7       LOAD TYPE-7 - THIS VARIABLE WILL BE:           06050000
.*                           'R' IF RNMLEN IS A REG TYPE ADDR OR        06100000
.*                           'U' IF RNMLEN IS AN EQUTED VALUE OR        06150000
.*                           'N' IF RNMLEN IS A SELF-DEFINING TERM      06175000
        LCLC  &LT8       LOAD TYPE-8 - THIS VARIABLE WILL BE:      @D1A 06180000
.*                           'R' IF QNMLEN IS A REG TYPE ADDR OR   @D1A 06185000
.*                           'U' IF QNMLEN IS AN EQUATED VALUE OR  @D1A 06190000
.*                           'N' IF QNMLEN IS A SELF-DEFINING TERM @D1A 06195000
        LCLC  &LT9       LOAD TYPE-9 - THIS VARIABLE WILL BE:           06200000
.*                           'R' IF SYSNAME IS A REG TYPE ADDR OR       06250000
.*                           'A' IF SYSNAME IS A RX TYPE ADDR           06300000
        LCLC  &LT10      LOAD TYPE-10 - THIS VARIABLE WILL BE:          06350000
.*                           'R' IF ASID IS A REG TYPE ADDR OR          06400000
.*                           'U' IF ASID IS AN EQUATED VALUE OR         06450000
.*                           'N' IF ASID IS A SELF-DEFINING TERM        06485700
        LCLC  &LT11      LOAD TYPE-11 - THIS VARIABLE WILL BE:          06521400
.*                           'R' IF REQCNT IS A REG TYPE ADDR OR        06557100
.*                           'U' IF REQCNT IS AN EQUATED VALUE OR       06592800
.*                           'N' IF REQCNT IS A SELF-DEFINING TERM      06628500
        LCLC  &LT12      LOAD TYPE-12 - THIS VARIABLE WILL BE:          06664200
.*                           'R' IF OWNERCT IS A REG TYPE ADDR OR       06699900
.*                           'U' IF OWNERCT IS AN EQUAYED VALUE OR      06735600
.*                           'N' IF OWNERCT IS A SELF-DEFINING TERM     06771300
        LCLC  &LT13      LOAD TYPE-13 - THIS VARIABLE WILL BE:          06807000
.*                           'R' IF WAITCNT IS A REG TYPE ADDR OR       06842700
.*                           'U' IF WAITCNT IS AN EQUATED VALUE OR      06878400
.*                           'N' IF WAITCNT IS A SELF-DEFINING TERM     06914100
        LCLC  &LT14      LOAD TYPE-14 - THIS VARIABLE WILL BE:          06950000
.*                           'R' IF TOKEN IS A REG TYPE ADDR OR         07000000
.*                           'A' IF TOKEN IS A RX TYPE ADDR             07050000
        LCLC  &LT16      LOAD TYPE-16 - THIS VARIABLE WILL BE:          07100000
.*                           'S' IF MACRO FORM IS STANDARD OR           07150000
.*                           'L' IF MACRO FORM IS LIST OR               07200000
.*                           'E' IF MACRO FORM IS EXECUTE               07250000
        LCLC  &LT17      LOAD TYPE-17 - THIS VARIABLE WILL BE:          07300000
.*                           'R' IF PARM LIST IS A REG TYPE ADDR OR     07350000
.*                           'A' IF PARM LIST IS A RX TYPE ADDR         07400000
        LCLC  &AREAADR   HOLDS VALUE OF AREA FOR USE IN LA/R INSTR.     07650000
        LCLC  &AREASZ    HOLDS VALUE OF AREASZ FOR USE IN LA/R INSTR.   07700000
        LCLC  &REQLIMA   HOLDS VALUE OF REQLIM FOR USE IN LA/R INSTR.   07750000
        LCLC  &QNAME     HOLDS VALUE OF QNAME FOR USE IN LA/R INSTR.    07850000
        LCLC  &SYSNMA    HOLDS VALUE OF SYSNAME FOR USE IN LA/R INSTR.  07950000
        LCLC  &ASID      HOLDS VALUE OF ASID FOR USE IN LA/R INSTR.     08000000
        LCLC  &RNAME     HOLDS VALUE OF RNAME FOR USE IN LA/R INSTR.    08050000
        LCLC  &RNMLEN    HOLDS VALUE OF RNMLEN FOR USE IN LA/R INSTR.   08100000
        LCLC  &QNMLEN    HOLDS VALUE OF QNMLEN FOR USE IN LA/R     @D1A 08125000
        LCLC  &REQCNTA   HOLDS VALUE OF REQCNT FOR USE IN LA/R INSTR.   08150000
        LCLC  &OWNCNTA   HOLDS VALUE OF OWNERCT FOR USE IN LA/R INSTR.  08200000
        LCLC  &WTCNTA    HOLDS VALUE OF WAITCNT FOR USE IN LA/R INSTR.  08250000
        LCLC  &TOKENA    HOLDS VALUE OF TOKEN FOR USE IN LA/R INSTR.    08300000
        LCLC  &PARMLST   PARAMETER LIST PASSED TO ISGQSCAN              08350000
        LCLC  &VAR1      AREA ADDRESS                                   08400000
        LCLC  &VAR2      AREA SIZE                                      08450000
        LCLC  &VAR3      REQUEST LIMIT                                  08500000
        LCLC  &VAR4      SCOPE FLAGS                                    08550000
        LCLC  &VAR5      QNAME - MAJOR NAME                             08600000
        LCLC  &VAR6      RNAME - MINOR NAME                             08650000
        LCLC  &VAR7      RNAME LENGTH                                   08700000
        LCLC  &VAR8      RESERVE FLAGS                                  08750000
        LCLC  &VAR9      SYSTEM NAME                                    08800000
        LCLC  &VAR10     ADDRESS SPACE IDENTIFICATION                   08850000
        LCLC  &VAR11     REQUEST COUNT LIMIT                            08900000
        LCLC  &VAR12     OWNER COUNT LIMIT                              08950000
        LCLC  &VAR13     WAIT COUNT LIMIT                               09000000
        LCLC  &VAR14     TOKEN ADDRESS                                  09050000
        LCLC  &VAR15     QNAME LENGTH                              @D1A 09075000
        LCLC  &LQUOTE    USED TO GENERATE AN L'                         09100000
        LCLC  &SYMBOL    USED TO GENERATE A LABEL                       09150000
.********************************************************************** 09200000
.*                                                                    * 09250000
.*            DECLARE ARITHMETIC VARIABLES                            * 09300000
.*                                                                    * 09350000
.********************************************************************** 09400000
         LCLA  &RNMLENA  RNAME LENGTH VALUE                             09450000
         LCLA  &QNMLENA  QNAME LENGTH VALUE                        @D1A 09500000
.********************************************************************** 10700000
.*                                                                    * 10750000
.*                 VALIDATE AREA PARAMETER                            * 10800000
.*                                                                    * 10850000
.*                                                                    * 10862400
.* FORMAT: AREA=(AREA ADDR,AREA SIZE)                                 * 10874800
.*                                                                    * 10887200
.********************************************************************** 10900000
.*                                                                      10950000
.* DETERMINE IF AREA PARAMETER IS SPECIFIED                             11000000
.*                                                                      11050000
&S(1)    SETB  (T'&AREA(1) NE 'O')      SET BIT IF AREA ADDR IS         11100000
.*                                      SPECIFIED                       11150000
&S(2)    SETB  (T'&AREA(2) NE 'O')      SET BIT IF AREA SIZE IS         11200000
.*                                      SPECIFIED                       11250000
         AIF   (&S(1) EQ 0 AND &S(2) EQ 0).CKREQLM GO CHECK REQLIM PARM 11300000
.*                                      IF BOTH AREA ADDR & AREA SIZE   11350000
.*                                      ARE NOT SPECIFIED               11400000
.*                                                                      11550000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    11600000
.*                                                                      11650000
         AIF   (N'&AREA EQ 2).CKTYP1    BRANCH IF TWO ARGUMENTS         11700000
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR AREAX11750000
                PARAMETER'                                     @ZA58451 11800000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      11900000
         AGO   .CKREQLM                 GO CHECK REQLIM PARM            11950000
.*                                                                      12000000
.* DETERMINE ADDRESS TYPE FOR AREAADR SUB-ARGUMENT - RX OR REG          12050000
.*                                                                      12100000
.CKTYP1  AIF   (&S(1) EQ 0).CKARESZ     BRANCH IF AREA ADDR IS NOT      12150000
.*                                      SPECIFIED                       12250000
         AIF   ('&AREA(1)'(1,1) EQ '(').A2 BRANCH IF REGISTER TYPE      12300000
&AREAADR SETC  '&AREA(1)'               SET VALUE FOR USE IN LOAD INSTR 12350000
&LT1     SETC  'A'                      SET TO 'A' FOR RX TYPE ADDR.    12400000
         AGO   .CKARESZ                 GO CHECK AREASZ SUB-ARGUMENT    12450000
.A2      ANOP                                                           12500000
&AREAADR SETC  '&AREA(1)'(2,K'&AREA(1)-2) EXTRACT REGISTER NAME         12550000
&LT1     SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  12600000
.*                                                                      12650000
.* DETERMINE ADDRESS TYPE OF AREASZ SUB-ARGUMENT - EQUATE OR REG        12684300
.*                                                 OR DIGIT             12718600
.*                                                                      12752900
.CKARESZ AIF   (&S(2) EQ 0).CKREQLM     BRANCH IF AREA SIZE IS NOT      12787200
.*                                      SPECIFIED                       12821700
         AIF   ('&AREA(2)'(1,1) EQ '(').B3 BRANCH IF REGISTER TYPE      12845600
         AIF   (T'&AREA(2) EQ 'U').B2   BRANCH IF AN EQUATED VALUE      12869500
         AIF   (T'&AREA(2) EQ 'N').B4   BRANCH IF A SELF-DEFINING TERM  12893400
         MNOTE 12,'ISG008  RX-TYPE ADDRESS INVALID WITH AREA SIZE'     X12925200
                                                               @ZA58451 12957000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      12989000
         AGO   .CKREQLM                 GO CHECK REQLIM PARM            13012900
.B2      ANOP                                                           13036800
&AREASZ  SETC  '&AREA(2)'               SET VALUE FOR USE IN LOAD INSTR 13060700
&LT2     SETC  'U'                      SET TO 'U' FOR EQUATED TERM     13084600
         AGO   .CKREQLM                 GO CHECK REQLIM PARM            13108500
.B3      ANOP                                                           13132400
&AREASZ  SETC  '&AREA(2)'(2,K'&AREA(2)-2) EXTRACT REGISTER NAME         13156300
&LT2     SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  13180200
         AGO   .CKREQLM                 GO CHECK REQLIM PARM            13204100
.B4      ANOP                                                           13228000
&LT2     SETC  'N'                      SET TO N FOR SELF-DEFINING TERM 13251900
&AREASZ  SETC  '&AREA(2)'               SET VALUE FOR USE IN LOAD INSTR 13275800
.********************************************************************** 13300000
.*                                                                    * 13350000
.*                 VALIDATE REQLIM PARAMETER                          * 13400000
.*                                                                    * 13450000
.*                                                                    * 13459900
.* FORMAT: REQLIM=VALUE OR                                            * 13469800
.*         REQLIM=MAX                                                 * 13479700
.*                                                                    * 13489600
.********************************************************************** 13500000
.CKREQLM ANOP                                                           13550000
.*                                                                      13600000
.* DETERMINE IF REQLIM PARAMETER IS SPECIFIED                           13650000
.*                                                                      13700000
&S(3)    SETB  (T'&REQLIM NE 'O')       SET BIT IF REQLIM IS SPECIFIED  13750000
         AIF   (&S(3) EQ 0).CKSCOPE     GO CHECK SCOPE PARM IF REQLIM   13800000
.*                                      IS NOT SPECIFIED                13850000
.*                                                                      14000000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    14050000
.*                                                                      14100000
         AIF   (N'&REQLIM EQ 1).CKTYP3  BRANCH IF ONE ARGUMENT          14150000
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR REQLX14200000
               IM PARAMETER'                                   @ZA58451 14250000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      14350000
         AGO   .CKSCOPE                 GO CHECK SCOPE PARM             14400000
.*                                                                      14450000
.* DETERMINE ADDRESS TYPE - EQUATE OR REG OR DIGIT                      14497500
.*                                                                      14545000
.CKTYP3  AIF   ('&REQLIM'(1,1) EQ '(').C2 BRANCH IF REGISTER TYPE       14592500
         AIF   ('&REQLIM' EQ 'MAX').REQMAX BRANCH IF MAXIMUM REQUEST    14640000
         AIF   (T'&REQLIM EQ 'U').C3    BRANCH IF AN EQUATED VALUE      14670000
         AIF   (T'&REQLIM EQ 'N').C4    BRANCH IF SELF-DEFINING TERM    14700000
         MNOTE 12,'ISG003  INVALID VALUE SPECIFIED FOR REQLIM PARAMETERX14730000
               '                                               @ZA58451 14760000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      14790000
         AGO   .CKSCOPE                 GO CHECK SCOPE PARAMETER        14820000
.REQMAX  ANOP                                                           14850000
&REQLIMA SETC  '32767'                  SET MAXIMUM REQUEST LIMIT       14880000
&LT3     SETC  'U'                      SET TO 'U' FOR AN EQUATED VALUE 14910000
         AGO   .CKSCOPE                 GO CHECK SCOPE PARM             14940000
.C3      ANOP                                                           14970000
&REQLIMA SETC  '&REQLIM'                SET VALUE FOR USE IN LOAD INSTR 15000000
&LT3     SETC  'U'                      SET TO 'U' FOR AN EQUATED VALUE 15050000
         AGO   .CKSCOPE                 GO CHECK SCOPE PARM             15100000
.C2      ANOP                                                           15150000
&REQLIMA SETC  '&REQLIM'(2,K'&REQLIM-2) EXTRACT REGISTER NAME           15200000
&LT3     SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  15250000
         AGO   .CKSCOPE                 GO CHECK SCOPE PARM             15259900
.C4      ANOP                                                           15269800
&REQLIMA SETC  '&REQLIM'                SET VALUE FOR USE IN LOAD INSTR 15279700
&LT3     SETC  'N'                      SET TO 'N' FOR SELF-DEFINING    15289600
.********************************************************************** 15300000
.*                                                                    * 15350000
.*                 VALIDATE SCOPE PARAMETER                           * 15400000
.*                                                                    * 15450000
.*                                                                    * 15455500
.* FORMAT: SCOPE=ALL OR                                               * 15461000
.*         SCOPE=STEP OR                                              * 15466500
.*         SCOPE=SYSTEM OR                                            * 15472000
.*         SCOPE=SYSTEMS OR                                           * 15477500
.*         SCOPE=LOCAL OR                                             * 15483000
.*         SCOPE=GLOBAL                                               * 15488500
.*                                                                    * 15494000
.********************************************************************** 15500000
.CKSCOPE ANOP                                                           15550000
.*                                                                      15600000
.* DETERMINE IF SCOPE PARAMETER IS SPECIFIED                            15650000
.*                                                                      15700000
&S(4)    SETB  (T'&SCOPE NE 'O')        SET BIT IF SCOPE IS SPECIFIED   15750000
         AIF   (&S(4) EQ 0).CKRESNM     GO CHECK RESNAME PARM IF        15800000
.*                                      SCOPE IS NOT SPECIFIED          15850000
.*                                                                      16050000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    16100000
.*                                                                      16150000
         AIF   (N'&SCOPE EQ 1).SCSTEP   BRANCH IF ONE ARGUMENT          16200000
         MNOTE 12,'ISG002 NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR SCOPEX16250000
                PARAMETER'                                     @ZA58451 16300000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      16400000
         AGO   .CKRESNM                 GO CHECK RESNAME PARM           16450000
.*                                                                      16500000
.* DETERMINE IF A VALID OPERAND                                         16550000
.*                                                                      16600000
.SCSTEP  AIF   ('&SCOPE' NE 'STEP').SCSYSTM BRANCH IF NOT SCOPE=STEP    16650000
&SC(1)   SETB 1                         INDICATE SCOPE = STEP           16700000
         AGO   .CKRESNM                 GO CHECK RESNAME PARM           16750000
.SCSYSTM AIF   ('&SCOPE' NE 'SYSTEM').SCSYSTS BRANCH IF NOT SCOPE=SYSTM 16800000
&SC(2)   SETB  1                        INDICATE SCOPE = SYSTEM         16850000
         AGO   .CKRESNM                 GO CHECK RESNAME PARM           16880500
.SCSYSTS AIF   ('&SCOPE' NE 'SYSTEMS').SCALL BRANCH IF NOT SCOPE=SYSTMS 16911000
&SC(3)   SETB  1                        INDICATE SCOPE = SYSTEMS        16941500
         AGO   .CKRESNM                 GO CHECK RESNAME PARM           16972000
.SCALL   AIF   ('&SCOPE' NE 'ALL').SCLOCAL BRANCH IF NOT SCOPE=ALL      17002500
&SC(4)   SETB  1                        INDICATE SCOPE = ALL (STEP,     17033000
.*                                      SYSTEM, AND SYSTEMS)            17063500
&SC(1)   SETB  1                                                        17094000
&SC(2)   SETB  1                                                        17124500
&SC(3)   SETB  1                                                        17155000
         AGO   .CKRESNM                 GO CHECK RESNAME PARM           17185500
.SCLOCAL AIF   ('&SCOPE' NE 'LOCAL').SCGLBL BRANCH IF NOT SCOPE = LOCAL 17216000
&SC(5)   SETB  1                        INDICATE SCOPE = LOCAL          17246500
         AGO   .CKRESNM                 GO CHECK RESNAME PARM           17277000
.SCGLBL  AIF   ('&SCOPE' NE 'GLOBAL').SCERR BRANCH IF NOT SCOPE =       17307500
.*                                      GLOBAL                          17338000
&SC(6)   SETB  1                        INDICATE SCOPE = GLOBAL         17368500
         AGO   .CKRESNM                 GO CHECK RESNAME PARM           17400000
.SCERR   MNOTE 12,'ISG003  INVALID VALUE SPECIFIED FOR SCOPE PARAMETER'X17450000
                                                               @ZA58451 17500000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      17550000
.********************************************************************** 17600000
.*                                                                    * 17650000
.*                 VALIDATE RESNAME PARAMETER                         * 17700000
.*                                                                    * 17750000
.*                                                                    * 17762400
.* FORMAT: RESNAME=(QNAME ADDR,RNAME ADDR,RNAME LENGTH,               * 17770600
.*                   GENERIC/SPECIFIC, QNAME LENGTH )             @D1C* 17778800
.*                                                                    * 17787200
.********************************************************************** 17800000
.CKRESNM ANOP                                                           17850000
.*                                                                      17900000
.* DETERMINE IF RESNAME PARAMETER IS SPECIFIED                          17950000
.*                                                                      18000000
&S(5)    SETB  (T'&RESNAME(1) NE 'O')   SET BIT IF QNAME IS SPECIFIED   18050000
&S(6)    SETB  (T'&RESNAME(2) NE 'O')   SET BIT IF RNAME IS SPECIFIED   18100000
&S(7)    SETB  (T'&RESNAME(3) NE 'O')   SET BIT IF RNMLEN IS SPECIFIED  18150000
&S(18)   SETB  ( T'&RESNAME(4)  NE  'O' )   SET FLAG IF RNAME TYPE @L1A 18200000
&S(20)   SETB  ( T'&RESNAME(5)  NE  'O' )   SET FLAG IF QNAME LEN  @D1A 18225000
.*                                                                 @L1A 18250000
         AIF   ( &S(5)  EQ  0                                          X18270800
               AND  &S(6)  EQ  0                                       X18291600
               AND  &S(7)  EQ  0                                       X18312400
               AND  &S(18)  EQ  0                                      X18333200
               AND  &S(20)  EQ  0 ).ENDRESN                        @D1C 18354000
&S(21)   SETB  1                            RESNAME SPECIFIED      @D1A 18375000
.*                                          IF NO RESNAME PARMS GO @L1C 18400000
.*                                                                      18550000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    18600000
.*                                                                      18650000
         AIF   (N'&RESNAME LE 5).CKTYP5  BRANCH IF NO MORE THAN    @D1C 18700000
.*                                       FOUR AGUMENTS ARE SPECIFIED    18725000
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR RESNX18775000
               AME PARAMETER'                                  @ZA58451 18825000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      18900000
         AGO   .ENDRESN                 GO CHECK RESERVE PARM           18950000
.*                                                                      19000000
.* DETERMINE ADDRESS TYPE FOR QNAME SUB-ARGUMENT - RX OR REG            19050000
.*                                                                      19100000
.CKTYP5  AIF   (&S(5) EQ 0).CKRNAME     BRANCH IF QNAME IS NOT          19150000
.*                                      SPECIFIED                       19250000
         AIF   ('&RESNAME(1)'(1,1) EQ '(').E2 BRANCH IF REGISTER TYPE   19300000
&QNAME   SETC  '&RESNAME(1)'            SET VALUE FOR USE IN LOAD INSTR 19350000
&LT5     SETC  'A'                      SET TO 'A' FOR RX TYPE ADDR.    19400000
         AGO   .CKRNAME                 GO CHECK RNAME SUB-ARGUMENT     19450000
.E2      ANOP                                                           19500000
&QNAME   SETC  '&RESNAME(1)'(2,K'&RESNAME(1)-2) EXTRACT REGISTER NAME   19550000
&LT5     SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  19600000
.*                                                                      19650000
.* DETERMINE ADDRESS TYPE OF RNAME SUB-ARGUMENT - RX OR REG             19700000
.*                                                                      19750000
.CKRNAME AIF   (&S(6) EQ 0).CKRNMLN     BRANCH IF RNAME IS NOT          19800000
.*                                      SPECIFIED                       19900000
         AIF   ('&RESNAME(2)'(1,1) EQ '(').F2 BRANCH IF REGISTER TYPE   19950000
&RNAME   SETC  '&RESNAME(2)'            SET VALUE FOR USE IN LOAD INSTR 20000000
&LT6     SETC  'A'                      SET TO 'A' FOR RX TYPE ADDR.    20050000
         AGO   .CKRNMLN                 GO CHECK RNMLEN PARM            20100000
.F2      ANOP                                                           20150000
&RNAME   SETC  '&RESNAME(2)'(2,K'&RESNAME(2)-2) EXTRACT REGISTER NAME   20200000
&LT6     SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  20250000
.*                                                                      20300000
.* DETERMINE ADDRESS TYPE OF RNMLEN - EQUATE OR REG OR DIGIT            20342900
.*                                                                      20385800
.CKRNMLN AIF   (&S(7) EQ 0).ENDRNLN     BRANCH IF RNMLEN IS NOT    @L1C 20428700
.*                                      SPECIFIED                       20471700
         AIF   ('&RESNAME(3)'(1,1) EQ '(').G3 BRANCH IF REGISTER TYPE   20495600
         AIF   (T'&RESNAME(3) EQ 'U').G2 BRANCH IF AN EQUATED VALUE     20519500
         AIF   (T'&RESNAME(3) EQ 'N').G4 BRANCH IF SELF-DEFINING TERM   20543400
         MNOTE 12,'ISG006  RX TYPE ADDRESS INVALID FOR RNAME LENGTH'   X20575200
                                                               @ZA58451 20607000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      20639000
         AGO   .ENDRNLN                 GO CHECK RESERVE PARM      @L1C 20662900
.G2      ANOP                                                           20686800
&RNMLEN  SETC  '&RESNAME(3)'            SET VALUE FOR USE IN LOAD INSTR 20710700
&LT7     SETC  'U'                      SET TO 'U' FOR AN EQUATED VALUE 20734600
         AGO   .ENDRNLN                 GO CHECK RESERVE PARM      @L1C 20758500
.G3      ANOP                                                           20782400
&RNMLEN  SETC  '&RESNAME(3)'(2,K'&RESNAME(3)-2) EXTRACT REGISTER NAME   20806300
&LT7     SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  20830200
         AGO   .ENDRNLN                 GO CHECK RESERVE PARM      @L1C 20854100
.G4      ANOP                                                           20878000
&RNMLEN  SETC  '&RESNAME(3)'            SET VALUE FOR USE IN LOAD INSTR 20901900
&LT7     SETC  'N'                      SET TO 'N' FOR SELF-DEFINING    20925800
.ENDRNLN ANOP  ,                             END OF RNAME LENGTH   @L1A 20927100
         AIF   ( &S(18)  EQ  0 ).ENDREST     IF NO RNAME TYPE GO   @L1A 20928700
         AIF   ( '&RESNAME(4)' NE 'GENERIC' ).NORESTG   IF NOT     @L1AX20930300
                                                        GENERIC GO @L1A 20931900
&S(19)   SETB  1                                 INDICATE GENERIC  @L1A 20933500
         AGO   .ENDREST                        END OF RESNAME TYPE @L1A 20935400
.NORESTG ANOP  ,                                                   @L1A 20937000
         AIF   ( '&RESNAME(4)' NE 'SPECIFIC' ).RESTERR   IF NOT    @L1AX20938200
                                                       SPECIFIC GO @L1A 20939400
&S(19)   SETB  0                                 INDICATE SPECIFIC @L1A 20940600
         AGO   .ENDREST                        END OF RESNAME TYPE @L1A 20941800
.RESTERR ANOP  ,                                RESNAME TYPE ERROR @L1A 20942600
         MNOTE 12,'ISG012 - THE FOURTH ARGUMENT OF THE RESNAME PARAMETEX20943400
               R MUST BE "GENERIC" OR "SPECIFIC"'                  @L1A 20945000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT @L1A 20945800
.ENDREST ANOP  ,                               END OF RESNAME TYPE @L1A 20946600
.*                                                                      20946700
.* DETERMINE ADDRESS TYPE OF QNMLEN - EQUATE OR REG OR DIGIT            20946800
.*                                                                      20946900
.CKQNMLN AIF   (&S(20) EQ 0).ENDQNLN    BRANCH IF QNAME LENGTH IS      X20947000
                                        NOT SPECIFIED              @D1A 20947100
         AIF   ( '&RESNAME(5)'(1,1)                                    X20947200
               EQ  '(' ).CKQNML3        BRANCH IF REGISTER VALUE   @D1A 20947300
         AIF   ( T'&RESNAME(5)                                         X20947400
               EQ  'U' ).CKQNML2        BRANCH IF AN EQUATED VALUE @D1A 20947500
         AIF   ( T'&RESNAME(5)                                         X20947600
               EQ  'N' ).CKQNML4        IF SELF-DEFINING TERM,GOTO @D1A 20947700
         MNOTE 12,'ISG001  RX TYPE ADDRESS INVALID FOR QNAME LENGTH'   X20947800
                                                                   @D1A 20947900
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT @D1A 20948000
         AGO   .ENDQNLN                 GO CHECK RESERVE PARM      @D1A 20948100
.CKQNML2 ANOP  ,                                                   @D1A 20948200
&QNMLEN  SETC  '&RESNAME(5)'            SET VALUE FOR USE IN LOAD  @D1A 20948300
&LT8     SETC  'U'                      SET TO 'U' FOR AN EQUATED  @D1A 20948400
         AGO   .ENDQNLN                 GO CHECK RESERVE PARM      @D1A 20948500
.CKQNML3 ANOP  ,                                                   @D1A 20948600
&QNMLEN  SETC  '&RESNAME(5)'(2,K'&RESNAME(5)-2) EXTRACT REGISTER   @D1A 20948700
&LT8     SETC  'R'                      SET TO 'R' FOR REG. TYPE   @D1A 20948800
         AGO   .ENDQNLN                 GO CHECK RESERVE PARM      @D1A 20948900
.CKQNML4 ANOP  ,                                                   @D1A 20949000
&QNMLEN  SETC  '&RESNAME(5)'            SET VALUE FOR USE IN LOAD  @D1A 20949100
&LT8     SETC  'N'                      SET TO 'N' FOR SELF-DEFINE @D1A 20949200
.ENDQNLN ANOP  ,                             END OF QNAME LENGTH   @D1A 20949300
.ENDRESN ANOP  ,                               END OF RESNAME      @L1A 20949400
.********************************************************************** 20950000
.*                                                                    * 21000000
.*                 VALIDATE RESERVE PARAMETER                         * 21050000
.*                                                                    * 21100000
.*                                                                    * 21109900
.* FORMAT: RESERVE=YES OR                                             * 21119800
.*         RESERVE=NO                                                 * 21129700
.*                                                                    * 21139600
.********************************************************************** 21150000
.CKRES   ANOP                                                           21200000
.*                                                                      21250000
.* DETERMINE IF RESERVE PARAMETER IS SPECIFIED                          21300000
.*                                                                      21350000
&S(8)    SETB  (T'&RESERVE NE 'O')      SET BIT IF RESERVE SPECIFIED    21400000
         AIF   (&S(8) EQ 0).CKSYSNM     GO CHECK SYSNAME PARM IF        21450000
.*                                      RESERVE IS NOT SPECIFIED        21500000
.*                                                                      21700000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    21750000
.*                                                                      21800000
         AIF   (N'&RESERVE EQ 1).RESNO  BRANCH IF ONE ARGUMENT          21850000
         MNOTE 12,'ISG002 NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR RESERX21900000
               VE PARAMETER'                                   @ZA58451 21950000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      22050000
         AGO   .CKSYSNM                 GO CHECK SYSNAME PARM           22100000
.*                                                                      22150000
.* DETERMINE IF A VALID OPERAND                                         22200000
.*                                                                      22250000
.RESNO   AIF   ('&RESERVE' NE 'NO').RESYES  BRANCH IF NOT RESERVE=NO    22300000
&RS(1)   SETB  1                        INDICATE RESERVE = NO           22350000
         AGO   .CKSYSNM                 GO CHECK SYSNAME PARM           22400000
.RESYES  AIF   ('&RESERVE' NE 'YES').RESERR BRANCH IF NOT RESERVE=YES   22450000
&RS(2)   SETB  1                        INDICATE RESERVE = YES          22500000
         AGO   .CKSYSNM                 GO CHECK SYSNAME PARM           22550000
.RESERR  MNOTE 12,'ISG003  INVALID VALUE SPECIFIED FOR RESERVE PARAMETEX22600000
               R'                                              @ZA58451 22650000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      22700000
.********************************************************************** 22750000
.*                                                                    * 22800000
.*                 VALIDATE SYSNAME PARAMETER                         * 22850000
.*                                                                    * 22893100
.*                                                                    * 22936200
.* FORMAT: SYSNAME=(SYSNAME ADDR(,ASID ADDR))                         * 22979300
.*                                                                    * 23022400
.********************************************************************** 23065500
.CKSYSNM ANOP                                                           23108600
.*                                                                      23151700
.* DETERMINE IF SYSNAME PARAMETER IS SPECIFIED                          23194800
.*                                                                      23237900
&S(9)    SETB  (T'&SYSNAME(1) NE 'O')   SET BIT IF SYSTEM NAME IS GIVEN 23281000
&S(10)   SETB  (T'&SYSNAME(2) NE 'O')   SET BIT IF ASID IS GIVEN        23324100
         AIF   (&S(9) EQ 0 AND &S(10) EQ 0).CKREQCT GO CHECK REQCNT     23367200
.*                                      PARM IF SYSNAME NOT SPECIFIED   23410300
.*                                                                      23496500
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    23539600
.*                                                                      23582700
         AIF   (N'&SYSNAME LE 2).CKTYP9 BRANCH IF ONE OR TWO ARGUMENTS  23625800
.*                                      ARE SPECIFIED                   23668900
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR SYSNX23718900
               AME PARAMETER'                                  @ZA58451 23768900
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      23850000
         AGO   .CKREQCT                 GO CHECK REQCNT PARM            23900000
.*                                                                      23950000
.* DETERMINE ADDRESS TYPE OF SYSNAME SUBARGUMENT - RX OR REG            24000000
.*                                                                      24050000
.CKTYP9  AIF   (&S(9) EQ 0).CKASID      BRANCH IF SYSTEM NAME IS        24100000
.*                                      NOT SPECIFIED                   24150000
         AIF   ('&SYSNAME(1)'(1,1) EQ '(').H2  BRANCH IF REGISTER TYPE  24200000
&SYSNMA  SETC  '&SYSNAME(1)'            SET VALUE FOR USE IN LOAD INSTR 24250000
&LT9     SETC  'A'                      SET TO 'A' FOR RX TYPE ADDR.    24300000
         AGO   .CKASID                  GO CHECK ASID PARM              24350000
.H2      ANOP                                                           24400000
&SYSNMA  SETC  '&SYSNAME(1)'(2,K'&SYSNAME(1)-2) EXTRACT REGISTER NAME   24450000
&LT9     SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  24550000
.*                                                                      24600000
.* DETERMINE ADDRESS TYPE OF ASID SUB-ARGUMENT - EQUATE OR REG OR DIGIT 24642900
.*                                                                      24685800
.CKASID  AIF   (&S(10) EQ 0).CKREQCT    BRANCH IF ADDRESS SPACE ID      24728700
.*                                      IS NOT SPECIFIED                24771700
         AIF   ('&SYSNAME(2)'(1,1) EQ '(').I3 BRANCH IF REGISTER TYPE   24795600
         AIF   (T'&SYSNAME(2) EQ 'U').I2 BRANCH IF AN EQUATED VALUE     24819500
         AIF   (T'&SYSNAME(2) EQ 'N').I4 BRANCH IF SELF-DEFINING TERM   24843400
         MNOTE 12,'ISG006  RX-TYPE ADDRESS IS INVALID WITH ASID ADDR'  X24875200
                                                               @ZA58451 24907000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      24939000
         AGO   .CKREQCT                 GO CHECK REQCNT PARM            24962900
.I2      ANOP                                                           24986800
&ASID    SETC  '&SYSNAME(2)'            SET VALUE FOR USE IN LOAD INSTR 25010700
&LT10    SETC  'U'                      SET TO 'U' FOR AN EQUATED VALUE 25034600
         AGO   .CKREQCT                 GO CHECK REQCNT PARM            25058500
.I3      ANOP                                                           25082400
&ASID    SETC  '&SYSNAME(2)'(2,K'&SYSNAME(2)-2) EXTRACT REGISTER NAME   25106300
&LT10    SETC  'R'                      SET TO 'L' FOR REG. TYPE ADDR.  25130200
         AGO   .CKREQCT                 GO CHECK REQCNT PARM            25154100
.I4      ANOP                                                           25178000
&ASID    SETC  '&SYSNAME(2)'            SET VALUE FOR USE IN LOAD INSTR 25201900
&LT10    SETC  'N'                      SET TO 'N' FOR SELF-DEFINING    25225800
.********************************************************************** 25250000
.*                                                                    * 25300000
.*                 VALIDATE REQCNT PARAMETER                          * 25350000
.*                                                                    * 25400000
.*                                                                    * 25412400
.* FORMAT: REQCNT=VALUE                                               * 25424800
.*                                                                    * 25437200
.********************************************************************** 25450000
.CKREQCT ANOP                                                           25500000
.*                                                                      25550000
.* DETERMINE IF REQCNT PARAMETER IS SPECIFIED                           25600000
.*                                                                      25650000
&S(11)   SETB  (T'&REQCNT NE 'O')       SET BIT IF REQCNT IS SPECIFIED  25700000
         AIF   (&S(11) EQ 0).CKOWNCT    GO CHECK OWNERCT PARM IF        25750000
.*                                      REQCNT IS NOT SPECIFIED         25800000
.*                                                                      25950000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    26000000
.*                                                                      26050000
         AIF   (N'&REQCNT EQ 1).CKTYP11 BRANCH IF ONE ARGUMENT          26100000
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR REQCX26150000
               NT PARAMETER'                                   @ZA58451 26200000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      26300000
         AGO   .CKOWNCT                 GO CHECK OWNERCT PARM           26350000
.*                                                                      26400000
.* DETERMINE ADDRESS TYPE - EQUATE OR REG OR DIGIT                      26441000
.*                                                                      26482000
.CKTYP11 AIF   ('&REQCNT'(1,1) EQ '(').K3 BRANCH IF REGISTER TYPE       26523000
         AIF   (T'&REQCNT EQ 'U').K2    BRANCH IF AN EQUATED VALUE      26564200
         AIF   (T'&REQCNT EQ 'N').K4    BRANCH IF SELF-DEFINING TERM    26585600
         MNOTE 12,'ISG006  RX-TYPE ADDRESS IS INVALID WITH REQCNT'     X26614100
                                                               @ZA58451 26642600
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      26671200
         AGO   .CKOWNCT                 GO CHECK OWNERCT PARM           26692600
.K2      ANOP                                                           26714000
&REQCNTA SETC  '&REQCNT'                SET VALUE FOR USE IN LOAD INSTR 26735400
&LT11    SETC  'U'                      SET TO 'U' FOR AN EQUATED VALUE 26756800
         AGO   .CKOWNCT                 GO CHECK OWNERCT PARM           26778200
.K3      ANOP                                                           26799600
&REQCNTA SETC  '&REQCNT'(2,K'&REQCNT-2) EXTRACT REGISTER NAME           26821000
&LT11    SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  26842400
         AGO   .CKOWNCT                 GO CHECK OWNERCT PARM           26863800
.K4      ANOP                                                           26885200
&REQCNTA SETC  '&REQCNT'                SET VALUE FOR USE IN LOAD INSTR 26906600
&LT11    SETC  'N'                      SET TO 'N' FOR SELF-DEFINING    26928000
.********************************************************************** 26950000
.*                                                                    * 27000000
.*                 VALIDATE OWNERCT PARAMETER                         * 27050000
.*                                                                    * 27100000
.*                                                                    * 27112400
.* FORMAT: OWNERCT=VALUE                                              * 27124800
.*                                                                    * 27137200
.********************************************************************** 27150000
.CKOWNCT  ANOP                                                          27200000
.*                                                                      27250000
.* DETERMINE IF OWNERCT PARAMETER IS SPECIFIED                          27300000
.*                                                                      27350000
&S(12)   SETB  (T'&OWNERCT NE 'O')      SET BIT IF OWNERCT IS           27400000
.*                                      SPECIFIED                       27450000
         AIF   (&S(12) EQ 0).CKWTCNT    GO CHECK WAITCNT PARM IF        27500000
.*                                      OWNERCT IS NOT SPECIFIED        27550000
.*                                                                      27700000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    27750000
.*                                                                      27800000
         AIF   (N'&OWNERCT EQ 1).CKTYP12 BRANCH IF ONE ARGUMENT         27850000
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR OWNEX27900000
               RCT PARAMETER'                                  @ZA58451 27950000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      28050000
         AGO   .CKWTCNT                 GO CHECK WAITCNT PARM           28100000
.*                                                                      28150000
.* DETERMINE ADDRESS TYPE - EQUATE OR REG OR DIGIT                      28191000
.*                                                                      28232000
.CKTYP12 AIF   ('&OWNERCT'(1,1) EQ '(').L3 BRANCH IF REGISTER TYPE      28273000
         AIF   (T'&OWNERCT EQ 'U').L2   BRANCH IF AN EQUATED VALUE      28314200
         AIF   (T'&OWNERCT EQ 'N').L4   BRANCH IF SELF-DEFINING TERM    28335600
         MNOTE 12,'ISG006  RX-TYPE ADDRESS INVALID FOR OWNERCT'        X28364100
                                                               @ZA58451 28392600
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      28421200
         AGO   .CKWTCNT                 GO CHECK WAITCNT PARM           28442600
.L2      ANOP                                                           28464000
&OWNCNTA SETC  '&OWNERCT'               SET VALUE FOR USE IN LOAD INSTR 28485400
&LT12    SETC  'U'                      SET TO 'U' FOR AN EQUATED VALUE 28506800
         AGO   .CKWTCNT                 GO CHECK WAITCNT PARM           28528200
.L3      ANOP                                                           28549600
&OWNCNTA SETC  '&OWNERCT'(2,K'&OWNERCT-2) EXTRACT REGISTER NAME         28571000
&LT12    SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  28592400
         AGO   .CKWTCNT                 GO CHECK WAITCNT PARM           28613800
.L4      ANOP                                                           28635200
&OWNCNTA SETC  '&OWNERCT'               SET VALUE FOR USE IN LOAD INSTR 28656600
&LT12    SETC  'N'                      SET TO 'N' FOR SELF-DEFINING    28678000
.********************************************************************** 28700000
.*                                                                    * 28750000
.*                 VALIDATE WAITCNT PARAMETER                         * 28800000
.*                                                                    * 28850000
.*                                                                    * 28862400
.* FORMAT: WAITCNT=VALUE                                              * 28874800
.*                                                                    * 28887200
.********************************************************************** 28900000
.CKWTCNT  ANOP                                                          28950000
.*                                                                      29000000
.* DETERMINE IF WAITCNT PARAMETER IS SPECIFIED                          29050000
.*                                                                      29100000
&S(13)   SETB  (T'&WAITCNT NE 'O')      SET BIT IF WAITCNT IS           29150000
.*                                      SPECIFIED                       29200000
         AIF   (&S(13) EQ 0).CKTOKEN    GO CHECK TOKEN PARM IF WAITCNT  29250000
.*                                      IS NOT SPECIFIED                29300000
.*                                                                      29450000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    29500000
.*                                                                      29550000
         AIF   (N'&WAITCNT EQ 1).CKTYP13 BRANCH IF ONE ARGUMENT         29600000
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR WAITX29650000
               CNT PARAMETER'                                  @ZA58451 29700000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      29800000
         AGO   .CKTOKEN                 GO CHECK TOKEN PARM             29850000
.*                                                                      29900000
.* DETERMINE ADDRESS TYPE - EQUATE OR REG OR DIGIT                      29941000
.*                                                                      29982000
.CKTYP13 AIF   ('&WAITCNT'(1,1) EQ '(').M3 BRANCH IF REGISTER TYPE      30023000
         AIF   (T'&WAITCNT EQ 'U').M2   BRANCH IF AN EQUATED VALUE      30064200
         AIF   (T'&WAITCNT EQ 'N').M4   BRANCH IF SELF-DEFINING TERM    30085600
         MNOTE 12,'ISG006  RX-TYPE ADDRESS INVALID FOR WAITCNT'        X30114100
                                                               @ZA58451 30142600
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      30171200
         AGO   .CKTOKEN                 GO CHECK TOKEN PARM             30192600
.M2      ANOP                                                           30214000
&WTCNTA  SETC  '&WAITCNT'               SET VALUE FOR USE IN LOAD INSTR 30235400
&LT13    SETC  'U'                      SET TO 'U' FOR AN EQUATED VALUE 30256800
         AGO   .CKTOKEN                 GO CHECK TOKEN PARM             30278200
.M3      ANOP                                                           30299600
&WTCNTA  SETC  '&WAITCNT'(2,K'&WAITCNT-2) EXTRACT REGISTER NAME         30321000
&LT13    SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  30342400
         AGO   .CKTOKEN                 GO CHECK TOKEN  PARM            30363800
.M4      ANOP                                                           30385200
&WTCNTA  SETC  '&WAITCNT'               SET VALUE FOR USE IN LOAD INSTR 30406600
&LT13    SETC  'N'                      SET TO 'N' FOR SELF-DEFINING    30428000
.********************************************************************** 30450000
.*                                                                    * 30500000
.*                VALIDATE TOKEN PARAMETER                            * 30550000
.*                                                                    * 30600000
.*                                                                    * 30612400
.* FORMAT: TOKEN=ADDR                                                 * 30624800
.*                                                                    * 30637200
.********************************************************************** 30650000
.CKTOKEN ANOP                                                           30700000
.*                                                                      30750000
.* DETERMINE IF TOKEN PARAMETER IS SPECIFIED                            30800000
.*                                                                      30850000
&S(14)   SETB  (T'&TOKEN NE 'O')        SET BIT IF TOKEN IS SPECIFIED   30900000
         AIF   (&S(14) EQ 0).CKTERM     GO CHECK QUIT PARM IF TOKEN     30950000
.*                                      IS NOT SPECIFIED       @ZA58541 31000000
.*                                                                      31150000
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    31200000
.*                                                                      31250000
         AIF   (N'&TOKEN EQ 1).CKTYP14  BRANCH IF ONE ARGUMENT          31300000
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR TOKEX31350000
               N PARAMETER'                                    @ZA58451 31400000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      31500000
         AGO   .CKTERM                  GO CHECK QUIT PARM     @ZA58541 31550000
.*                                                                      31600000
.* DETERMINE ADDRESS TYPE - RX OR REG                                   31650000
.*                                                                      31700000
.CKTYP14 AIF   ('&TOKEN'(1,1) EQ '(').N2 BRANCH IF REGISTER TYPE        31750000
&TOKENA  SETC  '&TOKEN'                 SET VALUE FOR USE IN LOAD INSTR 31850000
&LT14    SETC  'A'                      SET TO 'A' FOR RX TYPE ADDR.    31900000
         AGO   .CKTERM                  GO CHECK QUIT PARM     @ZA58541 31950000
.N2      ANOP                                                           32000000
&TOKENA  SETC  '&TOKEN'(2,K'&TOKEN-2)   EXTRACT REGISTER NAME           32050000
&LT14    SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  32100000
.********************************************************************** 32150000
.*                                                                    * 32200000
.*                VALIDATE QUIT PARAMETER                             * 32201100
.*                                                                    * 32202200
.*                                                                    * 32203300
.* FORMAT: QUIT=YES OR                                                * 32204400
.*         QUIT=NO                                                    * 32205500
.*                                                                    * 32206600
.********************************************************************** 32207700
.CKTERM ANOP                                                   @ZA58541 32208800
.*                                                                      32209900
.* DETERMINE IF QUIT PARAMETER IS SPECIFIED                             32211000
.*                                                                      32212100
&S(15)   SETB  (T'&QUIT NE 'O')         SET BIT IF QUIT SPECIFIED      X32213200
                                                               @ZA58541 32214300
         AIF   (&S(15) EQ 0).CKXSYS     Go check XSYS parm if QUIT is  X32215400
                                        not specified              @L2C 32216500
.*                                                                      32217600
.* DETERMINE IF TOO MANY SUB-ARGUMENTS ARE SPECIFIED                    32218700
.*                                                                      32219800
         AIF   (N'&QUIT EQ 1).QUITNO   BRANCH IF ONE ARGUMENT  @ZA58541 32220900
         MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR QUITX32222000
                PARAMETER'                                     @ZA58541 32223100
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT     X32224200
                                                               @ZA58541 32225300
         AGO   .CKXSYS                  Go check XSYS parm         @L2C 32226400
.*                                                                      32227500
.* DETERMINE IF A VALID OPERAND                                         32228600
.*                                                                      32229700
.QUITNO AIF    ('&QUIT' NE 'NO').QUITYES  BRANCH IF NOT QUIT=NO        X32230800
                                                               @ZA58541 32231900
&QT      SETB  0                        INDICATE QUIT = NO     @ZA58541 32233000
         AGO   .CKXSYS                  Go check XSYS parm         @L2C 32234100
.QUITYES AIF   ('&QUIT' NE 'YES').QUITERR  BRANCH IF NOT QUIT=YES      X32235200
                                                               @ZA58541 32236300
&QT      SETB  1                        INDICATE QUIT = YES    @ZA58541 32237400
         AGO   .CKXSYS                  Go check XSYS parm         @L2C 32238500
.QUITERR MNOTE 12,'ISG003  INVALID VALUE SPECIFIED FOR QUIT PARAMETER' X32239600
                                                               @ZA58451 32240700
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT     X32241800
                                                               @ZA58541 32242900
.********************************************************************** 32243000
.*                                                                    * 32243100
.*                 Validate XSYS parameter                            * 32243200
.*                                                                    * 32243300
.*                                                                    * 32243400
.* Format: XSYS=YES or                                                * 32243500
.*         XSYS=NO                                                    * 32243600
.*                                                                @L2A* 32243700
.********************************************************************** 32243800
.CKXSYS  ANOP                                                           32243900
.*                                                                      32244000
.* Determine if XSYS parameter is specified                        @L2A 32244100
.*                                                                      32244200
&S(22)   SETB  (T'&XSYS NE 'O')         Set bit if XSYS specified  @L2A 32244300
         AIF   (&S(22) EQ 0).CKMF       Go check MF parm if XSYS is    X32244400
                                        not specified              @L2A 32244500
.*                                                                      32244600
.* Determine if too many sub-arguments are specified               @L2A 32244700
.*                                                                      32244800
         AIF   (N'&XSYS EQ 1).XSYSNO    Branch if one argument          32244900
         MNOTE 12,'ISG002 NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR XSYS X32245000
               PARAMETER'                                          @L2A 32245100
&ERROR   SETB  1                        Set error flag - kill text @L2A 32245200
         AGO   .CKMF                    Go check MF parm           @L2A 32245300
.*                                                                      32245400
.* Determine if a valid operand was specified                      @L2A 32245500
.*                                                                      32245600
.XSYSNO  AIF   ('&XSYS' NE 'NO').XSYSYES Branch if not XSYS=NO     @L2A 32245700
&XS(1)   SETB  1                        Indicate XSYS=NO           @L2A 32245800
         AGO   .CKMF                    Go check MF parm           @L2A 32245900
.XSYSYES AIF   ('&XSYS' NE 'YES').XSYSERR Branch if not XSYS=YES   @L2A 32246000
&XS(2)   SETB  1                        Indicate XSYS=YES          @L2A 32246100
         AGO   .CKMF                    Go check MF parm           @L2A 32246200
.XSYSERR MNOTE 12,'ISG003  INVALID VALUE SPECIFIED FOR XSYS PARAMETER'  32246300
.*             '                                                   @L2A 32246400
&ERROR   SETB  1                        Set error flag - kill text @L2A 32246500
.********************************************************************** 32246600
.*                                                                    * 32246700
.*                VALIDATE MF PARAMETER                               * 32250000
.*                                                                    * 32300000
.*                                                                    * 32309900
.* FORMAT: MF=L OR                                                    * 32319800
.*         MF=(E,PARM LIST ADDR)                                      * 32329700
.*                                                                    * 32339600
.********************************************************************** 32350000
.CKMF    ANOP                                                           32400000
.*                                                                      32450000
.* DETERMINE IF MF PARAMETER IS SPECIFIED                               32500000
.*                                                                      32550000
&S(16)   SETB  (T'&MF(1) NE 'O')        SET BIT IF MF IS SPECIFIED      32600000
&S(17)   SETB  (T'&MF(2) NE 'O')        SET BIT IF PARMLIST ADDR IS     32650000
.*                                      SPECIFIED                       32700000
         AIF   (&S(16) EQ 1).CKMFA      BRANCH IF MF=L OR MF=E IS       32750000
.*                                      SPECIFIED                       32760000
&LT16    SETC  'S'                      INDICATE STANDARD FORM IF       32770000
.*                                      NO MACRO FORMAT IS SPECIFIED    32780000
.CKMFA   AIF   (&S(16) EQ 0 AND &S(17) EQ 0).CHECK01 GO CHECK FOR       32790000
.*                                      ERRORS IF BOTH MF & PARMLIST    32800000
.*                                      ADDR ARE NOT SPECIFIED          32850000
.*                                                                      32900000
.* DETERMINE IF A VALID OPERAND                                         32918000
.*                                                                      32936000
         AIF   ('&MF(1)' EQ 'L').CKMFL  BRANCH IF MF=L                  32954000
         AIF   ('&MF(1)' EQ 'E').CKMFE  BRANCH IF MF=E                  32990000
         MNOTE 12,'ISG003 INVALID VALUE SPECIFIED FOR MF PARAMETER'    X33026000
                                                               @ZA58451 33062000
         MEXIT                                                          33098000
.*                                                                      33116000
.* DETERMINE IF TOO MANY SUBARGUMENTS ARE SPECIFIED FOR MF=L            33134000
.*                                                                      33152000
.CKMFL   ANOP                                                           33170000
&LT16    SETC  'L'                      INDICATE MF=L                   33188000
.CKAMTL  AIF   (N'&MF EQ 1).CHECK01     BRANCH IF ONE SUBARGUMENT IS    33206000
.*                                      SPECIFIED FOR MF=L TO CHECK FOR 33224000
.*                                      POSSIBLE ERRORS                 33242000
         AGO   .AMTMFER                 BRANCH TO PRINT ERROR MESSAGE   33278000
.*                                      INDICATING WRONG AMOUNT OF      33296000
.*                                      SUBARGUMENTS                    33314000
.*                                                                      33332000
.* DETERMINE IF TOO MANY SUBARGUMENTS ARE SPECIFIED FOR MF=E            33350000
.*                                                                      33368000
.CKMFE   ANOP                                                           33386000
&LT16    SETC  'E'                      INDICATE MF=E                   33404000
         AIF   (N'&MF EQ 2).CKTYP16     BRANCH IF TWO SUBARGUMENTS      33422000
.*                                      ARE SPECIFIED FOR MF=E TO CHECK 33440000
.*                                      FOR THE PARM LIST ADDRESS       33458000
.*                                      TYPE                            33476000
.*                                      ERROR                           33512000
.AMTMFER MNOTE 12,'ISG002  NOT ENOUGH OR TOO MANY SUBARGUMENTS FOR MF=LX33554000
                OR MF=E PARAMETER'                             @ZA58451 33596000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      33638000
         AGO   .CHECK01                 GO CHECK FOR OTHER ERRORS       33656000
.*                                                                      33674000
.* DETERMINE ADDRESS TYPE - RX OR REG                                   33692000
.*                                                                      33710000
.CKTYP16 AIF   (&S(17) EQ 0).CHECK01    BRANCH IF THE PARM LIST         33728000
.*                                      ADDR IS NOT SPECIFIED           33768600
         AIF   ('&MF(2)'(1,1) EQ '(').O2 BRANCH IF REGISTER TYPE        33809200
&PARMLST SETC  '&MF(2)'                 SET VALUE FOR USE IN LOAD INSTR 33850000
&LT17    SETC  'A'                      SET TO 'A' FOR RX TYPE ADDR.    33900000
         AGO   .CHECK01                 GO CHECK FOR OTHER ERRORS       33950000
.O2      ANOP                                                           34000000
&PARMLST SETC  '&MF(2)'(2,K'&MF(2)-2)   EXTRACT REGISTER NAME           34050000
&LT17    SETC  'R'                      SET TO 'R' FOR REG. TYPE ADDR.  34100000
.********************************************************************** 35000000
.*                                                                    * 35050000
.* CHECKING FOR ERRORS. IF AN ERROR IS DETECTED, NO TEXT IS GENERATED.* 35100000
.*                                                                    * 35150000
.********************************************************************** 35200000
.CHECK01 AIF   ( &RS(1)  EQ  1                                         X35219100
               AND  &S(21)  EQ 1 ).ERROR01  BRANCH IF RESERVE=NO AND   X35238200
                                            RESNAME ARE SPECIFIED  @D1C 35257300
         AGO   .CHECK02                 GO CHECK FOR OTHER ERRORS       35276400
.ERROR01 ANOP                                                           35295900
         MNOTE 12,'ISG009  RESERVE=NO AND RESNAME ARE MUTUALLY EXCLUSIVX35321400
               E'                                              @ZA58451 35346900
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      35372400
.CHECK02 AIF   ( &RS(2)  EQ  1                                         X35383800
               AND  &S(21)  EQ  1 ).ERROR02  BRANCH IF RESERVE=YES AND X35395200
                                            RESNAME IS SPECIFIED   @D1C 35406600
         AGO   .CHECK03                 GO CHECK FOR OTHER ERRORS       35418300
.ERROR02 ANOP                                                           35433600
         MNOTE 12,'ISG009  RESERVE=YES AND RESNAME ARE MUTUALLY EXCLUSIX35483600
               VE'                                             @ZA58451 35533600
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      35650000
.CHECK03 AIF   (&RS(1) EQ 1 AND &S(9) EQ 1).ERROR03 BRANCH IF RESERVE=  35700000
.*                                      NO & SYSNAME IS SPECIFIED       35713600
         AGO   .CHECK05                 GO CHECK FOR OTHER ERRORS       35727200
.ERROR03 ANOP                                                           35740800
         MNOTE 12,'ISG009  RESERVE=NO AND SYSNAME ARE MUTUALLY EXCLUSIVX35768000
               E'                                              @ZA58451 35795200
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      35822400
.CHECK05 AIF   (&RS(2) EQ 1 AND &S(9) EQ 1).ERROR05 BRANCH IF RESERVE=  35836000
.*                                      YES & SYSNAME IS SPECIFIED      35849600
         AGO   .CHECK07                 GO CHECK FOR OTHER ERRORS       35863200
.ERROR05 ANOP                                                           35876800
         MNOTE 12,'ISG009  RESERVE=YES AND SYSNAME ARE MUTUALLY EXCLUSIX35926800
               VE'                                             @ZA58451 35976800
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      36124400
.CHECK07 AIF   ( &S(21)  EQ  1                                         X36159500
               AND  &S(9)  EQ  1).ERROR07  BRANCH IF BOTH RESNAME AND  X36194600
                                          SYSNAME ARE SPECIFIED    @D1C 36229700
         AGO   .CHECK09                 GO CHECK FOR OTHER ERRORS       36264800
.ERROR07 ANOP                                                           36311600
         MNOTE 12,'ISG009  RESNAME AND SYSNAME ARE MUTUALLY EXCLUSIVE' X36361600
                                                               @ZA58451 36411600
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      36550000
.CHECK09 ANOP  ,                                                  5@D1D 36600000
.CHECK10 AIF   (&XS(1) EQ 0 OR &S(9) EQ 0).CHECK11 Bypass XSYS=NO and  X36650000
                                        SYSNAME mutual exclusivity     X36700000
                                        check if both aren't specified X36750000
                                                                   @L2A 36800000
         AIF   ('&LT9' NE 'A' OR '&SYSNMA' NE '0').ERROR10 Branch if   X36850000
                                        SYSNAME is not an address type X36900000
                                        parameter or SYSNAME ^= 0  @L2A 36950000
         AGO   .CHECK11                 Go check for other errors  @L2A 37000000
.ERROR10 ANOP                                                      @L2A 37050000
         MNOTE 12,'ISG009  XSYS=NO AND SYSNAME^=0 ARE MUTUALLY EXCLUSIVX37100000
               E'                                                  @L2A 37150000
&ERROR   SETB  1                                                   @L2A 37200000
.CHECK11 AIF   (&S(7) EQ 1 AND &S(6) NE 1 AND '&LT16' EQ 'S').ERROR11   38100000
.*                                      BRANCH IF RNMLEN IS             38140000
.*                                      SPECIFIED AND RNAME IS NOT      38180000
         AGO   .CHECK13                 GO CHECK FOR OTHER ERRORS       38220000
.ERROR11 ANOP                                                           38260000
         MNOTE 12,'ISG007  RNMLEN OPERAND SPECIFIED WITHOUT RNAME OPERAX38310000
               ND'                                             @ZA58451 38360000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      38550000
.CHECK13 AIF   (&S(10) EQ 1 AND &S(9) NE 1 AND '&LT16' EQ 'S').ERROR13  38600000
.*                                      BRANCH IF ASID IS               38640000
.*                                      SPECIFIED AND SYSNAME IS NOT    38680000
         AGO   .CHECK15                 GO CHECK FOR OTHER ERRORS       38720000
.ERROR13 ANOP                                                           38760000
         MNOTE 12,'ISG007  ASID OPERAND SPECIFIED WITHOUT SYSNAME OPERAX38810000
               ND'                                             @ZA58451 38860000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      39050000
.CHECK15 AIF   (&S(11) EQ 1 AND &S(12) EQ 1).ERROR15 BRANCH IF BOTH     39600000
.*                                      REQCNT AND WAITCNT ARE          39650000
.*                                      SPECIFIED                       39700000
         AGO   .CHECK17                 GO CHECK FOR OTHER ERRORS       39750000
.ERROR15 ANOP                                                           39800000
         MNOTE 12,'ISG009  REQCNT AND OWNERCT ARE MUTUALLY EXCLUSIVE'  X39850000
                                                               @ZA58451 39900000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      40050000
.CHECK17 AIF   (&S(11) EQ 1 AND &S(13) EQ 1).ERROR17 BRANCH IF BOTH     40100000
.*                                      REQCNT AND OWNERCT ARE          40150000
.*                                      SPECIFIED                       40200000
         AGO   .CHECK19                 GO CHECK FOR OTHER ERRORS       40250000
.ERROR17 ANOP                                                           40300000
         MNOTE 12,'ISG009  REQCNT AND WAITCNT ARE MUTUALLY EXCLUSIVE'  X40350000
                                                               @ZA58451 40400000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      40550000
.CHECK19 AIF   ('&LT6' EQ 'R' AND &S(7) EQ 0).ERROR19 BRANCH IF RNAME   40600000
.*                                      ADDR IS A REG TYPE AND RNMLEN   40650000
.*                                      IS NOT SPECIFIED                40700000
         AGO   .CHECK23                 GO CHECK FOR OTHER ERRORS       40750000
.ERROR19 ANOP                                                           40800000
         MNOTE 12,'ISG004  RNMLEN MUST BE SPECIFIED WHEN RNAME IS A REGX40850000
               ISTER VALUE'                                    @ZA58451 40900000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      41100000
.CHECK23 AIF   ((&S(1) EQ 1 AND &S(2) EQ 1 AND '&LT16' EQ 'S') OR      X41177600
               (&S(14) EQ 1 AND &QT EQ 1 AND '&LT16' EQ 'S') OR        X41177700
               ('&LT16' EQ 'L' OR '&LT16' EQ 'E')).CHECK25              41177800
.*                                      BRANCH IF AREA OPERAND IS       41177900
.*                                      SPECIFIED (BOTH AREA ADDR AND   41178000
.*                                      AREA SIZE)                      41178100
         MNOTE 12,'ISG001  BOTH AREA ADDR AND AREA SIZE OPERAND(S) REQUX41178600
               IRED, NOT SPECIFIED'                            @ZA58451 41179200
&ERROR   SETB   1                       SET ERROR FLAG - KILL TEXT      41179900
.CHECK25 AIF    ('&LT16' NE 'E').CHECK27  BRANCH IF NOT MF=E            41180400
         AIF    (&S(17) EQ 1).CHECK27   BRANCH IF PARMLIST ADDR IS      41180500
.*                                      SPECIFIED WHEN MF=E             41180600
         MNOTE 12,'ISG001  PARMLIST ADDR REQUIRED, NOT SPECIFIED'      X41180700
                                                               @ZA58451 41180800
&ERROR   SETB  1                       SET ERROR FLAG - KILL TEXT       41180900
.CHECK27 AIF   (&S(14) EQ 0 AND &QT EQ 1 AND '&LT16' EQ 'S').ERROR27   X41181000
                                        BRANCH IF QUIT=YES IS SPECIFIEDX41181100
                                        AND TOKEN IS NOT FOR THE       X41181200
                                        STANDARD MACRO FORM        @L1C 41181300
         AGO   .CHECK28                 GO CHECK FOR OTHER ERRORS  @L1C 41181400
.ERROR27 ANOP                                                      @L1C 41181500
         MNOTE 12,'ISG007  QUIT=YES OPERAND SPECIFIED WITHOUT TOKEN OPEX41181700
               RAND'                                           @ZA58541 41181800
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      41181900
.CHECK28 AIF   (('&LT16' EQ 'L') AND (&SC(5) EQ 1 OR &SC(6) EQ 1)).ERROX41182000
               R28                       BRANCH IF SCOPE=LOCAL OR SCOPEX41182100
                                         =GLOBAL SPECIFIED     @ZA62246 41182200
         AGO   .CHECK31                  GO CHECK FOR OTHER ERRORS      41182300
.ERROR28 ANOP                                                  @ZA62246 41182500
         MNOTE 12,'ISG011    SCOPE=LOCAL OR SCOPE=GLOBAL OPERANDS CANNOX41182600
               T BE         SPECIFIED WITH MF=L FORM'          @ZA62246 41182700
&ERROR   SETB  1                         SET ERROR FLAG - KILL TEXT     41182800
.*                                                             @ZA62246 41182900
.CHECK31 AIF   ('&LT16' NE 'S' OR &QT EQ 0).CHECK33 BRANCH IF STANDARD X41183000
                                        MACRO FORM OR IF QUIT=NO IS    X41183100
                                        SPECIFIED                  @L1C 41183200
&OTHER   SETB  (&S(1) OR &S(2) OR &S(3) OR &S(4) OR &S(5) OR &S(6))     41183300
.*                                      DETERMINE IF AREA ADDR, AREA    41183400
.*                                      SIZE, REQLIM, SCOPE, QNAME, OR  41183500
.*                                      RNAME ARE SPECIFIED    @ZA58541 41183600
&OTHER   SETB  (&S(7) OR &S(8) OR &S(9) OR &S(10) OR &OTHER) DETERMINE  41183700
.*                                      IF RNMLEN, RESERVE, SYSNAME, OR 41183800
.*                                      ASID ARE SPECIFIED     @ZA58541 41183900
&OTHER   SETB  (&S(11) OR &S(12) OR &S(13) OR &OTHER) DETERMINE IF      41184000
.*                                      REQCNT, OWNERCT, OR WAITCNT     41184100
.*                                      ARE SPECIFIED          @ZA58541 41184200
&OTHER   SETB  (&S(22) OR &OTHER)       Determine if XSYS is specified X41184300
                                                                   @L2A 41184400
         AIF   (&OTHER EQ 0).CHECK33    BRANCH IF TOKEN AND QUIT=YES   X41184500
                                        ARE SPECIFIED AND NO OTHER     X41184600
                                        OPERANDS ARE SPECIFIED TO AVOIDX41184700
                                        MNOTE                      @L1C 41184800
         MNOTE 12,'ISG010  QUIT=YES SPECIFIED WITH ANY OTHER OPERANDS EX41184900
               XCEPT TOKEN AND MF IS INVALID'                  @ZA58541 41185000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT     X41185100
                                                               @ZA58541 41185200
.CHECK33 AIF   (    '&LT16'  EQ  'S'                                   X41185300
               AND  &S(18)  EQ  1                                      X41185400
               AND  &S(19)  EQ  0                                      X41185600
               AND  &S(6)  EQ  0 ).ERROR33  WHEN THE STANDARD FORM @L1A 41185800
.*                                          IS INDICATED AND THE   @L1A 41186000
.*                                         RNAME TYPE IS SPECIFIED @L1A 41186200
.*                                        AS SPECIFIC AND NO RNAME @L1A 41186400
.*                                       IS SPECIFIED, THEN ERROR  @L1A 41186600
         AGO   .CHECK35                 NO ERROR, GO TO NEXT CHECK @L1A 41186800
.ERROR33 ANOP  ,                                                   @L1A 41187000
         MNOTE 12,'ISG013    AN RNAME NEEDS TO BE SPECIFIED WHEN A SPECX41187200
               IFIC RNAME IS SPECIFIED IN THE STANDARD FORM'       @L1A 41187400
&ERROR   SETB  1                         SET ERROR FLAG - KILL TEXT@L1A 41187600
.CHECK35 ANOP  ,                                                   @L1A 41187800
.CHECK99 AIF   (('&LT16' EQ 'L' OR '&LT16' EQ 'E' OR '&LT16' EQ 'S')   X41188000
               AND &ERROR NE 1).PICK    BRANCH IF A VALID MACRO FORMAT  41188200
.*                                      IS SPECIFIED AND NO ERRORS      41188400
.*                                      HAVE BEEN ENCOUNTERED           41188600
         MEXIT                                                          41189600
.********************************************************************** 41200000
.*                                                                    * 41250000
.* BRANCH TO CORRECT MACRO FORMAT                                     * 41300000
.*                                                                    * 41350000
.********************************************************************** 41400000
.PICK    AIF   ('&LT16' EQ 'L').LISTFRM BRANCH IF LIST FORM IS          41450000
.*                                      SPECIFIED                       41500000
         AIF   ('&LT16' EQ 'E').EXECFRM BRANCH IF EXECUTE FORM IS       41550000
.*                                      SPECIFIED, OTHERWISE            41600000
.*                                      BRANCH TO STANDARD FORM         41650000
.********************************************************************** 41700000
.*                                                                    * 41750000
.*                 STANDARD FORM SPECIFIED                            * 41800000
.*                                                                    * 41850000
.********************************************************************** 41900000
.STANFRM ANOP                           GQSCAN STANDARD FORM TEXT       41950000
.*                                      GENERATION                      42000000
.*                                                                      42683800
.* GENERATE CODE TO INITIALIZE PARAMETER LIST                           42715200
.*                                                                      42746600
.MFS12   ANOP                           EXPAND TEXT FOR STANDARD FORM   42778000
&VAR1    SETC  'ISG'.'&SYSNDX'.'1'      AREA ADDRESS                    42809400
&VAR2    SETC  'ISG'.'&SYSNDX'.'2'      AREA SIZE                       42840800
&VAR3    SETC  'ISG'.'&SYSNDX'.'3'      REQUEST LIMIT                   42872200
&VAR4    SETC  'ISG'.'&SYSNDX'.'4'      FLAGS - SCOPE OF REQUEST        42903600
&VAR5    SETC  'ISG'.'&SYSNDX'.'5'      QNAME (MAJOR NAME) ADDRESS      42935000
&VAR6    SETC  'ISG'.'&SYSNDX'.'6'      RNAME (MINOR NAME) ADDRESS      42966400
&VAR7    SETC  'ISG'.'&SYSNDX'.'7'      RNAME LENGTH                    42997800
&VAR15   SETC  'ISG'.'&SYSNDX'.'F'      QNAME LENGTH               @D1A 43013500
&VAR8    SETC  'ISG'.'&SYSNDX'.'8'      FLAGS - RESERVE                 43029200
&VAR9    SETC  'ISG'.'&SYSNDX'.'9'      SYSTEM NAME                     43060600
&VAR10   SETC  'ISG'.'&SYSNDX'.'A'      ADDRESS SPACE IDENTIFICATION    43092000
&VAR11   SETC  'ISG'.'&SYSNDX'.'B'      REQUEST COUNT LIMIT             43123400
&VAR12   SETC  'ISG'.'&SYSNDX'.'C'      OWNER COUNT LIMIT               43154800
&VAR13   SETC  'ISG'.'&SYSNDX'.'D'      WAIT COUNT LIMIT                43186200
&VAR14   SETC  'ISG'.'&SYSNDX'.'E'      TOKEN ADDRESS                   43217600
.RXORA1  AIF   (&S(1) EQ 0).OUTRX1A     DON'T STORE AREA ADDR IN        43238200
.*                                      PARMS                  @ZA58541 43258800
         AIF   ('&LT1' EQ 'A').OUTRX1   BRANCH IF RX TYPE ADDR          43279400
&LABEL   DS    0H                                                       43300000
         ST    &AREAADR,&VAR1     .STORE AREA ADDR IN PARM LIST         43350000
.OUTRX1A ANOP                                                  @ZA58541 43358300
&AREAADR SETC  '0'                      SET TO ZERO IF AREA ADDRESS     43366600
.*                                      IS A REGISTER                   43383200
         AGO   .RXORA2                  GO CHECK ADDR TYPE OF AREASZ    43400000
.OUTRX1  ANOP                                                           43450000
&LABEL   DS    0H                                                       43500000
.RXORA2  AIF   (&S(2) EQ 0).OUTRX2A     DON'T STORE AREA SIZE IN        43520000
.*                                      PARMS                  @ZA58541 43540000
         AIF   ('&LT2' EQ 'U' OR '&LT2' EQ 'N').OUTRX2  BRANCH IF RX    43560000
.*                                      TYPE ADDR                       43580000
         ST    &AREASZ,&VAR2      .STORE AREA SIZE IN PARM LIST         43600000
.OUTRX2A ANOP                                                  @ZA58541 43625000
&AREASZ  SETC  '0'                      SET TO ZERO IF AREA SIZE        43650000
.*                                      IS A REGISTER                   43666600
.OUTRX2  ANOP                                                           43683200
         AIF   (&S(3) EQ 0 AND &QT EQ 1).RXORA3C DON'T STORE DEFAULT    43686500
.*                                      REQUEST LIMIT IF NONE WAS       43689800
.*                                      SPECIFIED AND QUIT=YES         X43693100
                                                               @ZA63621 43696400
.RXORA3A AIF   (&S(3) EQ 1).RXORA3B     BRANCH IF REQUEST LIMIT IS      43700000
.*                                      SPECIFIED                       43750000
&REQLIMA SETC  '32767'                  SET REQLIM=MAX FOR DEFAULT CASE 43800000
&LT3     SETC  'U'                      INDICATE RX TYPE ADDR           43850000
.RXORA3B AIF   ('&LT3' EQ 'U' OR '&LT3' EQ 'N').OUTRX3 BRANCH IF RX     43883300
.*                                      TYPE ADDRESS                    43916600
         ST    &REQLIMA,&VAR3     .STORE REQUEST LIMIT IN PARM LIST     43950000
.RXORA3C ANOP                                                 @ZA63621  43960000
&REQLIMA SETC  '0'                      SET REQUEST LIMIT TO ZERO       43970000
.*                                      FOR QUIT=YES                   X43980000
                                                               @ZA63621 43990000
.OUTRX3  ANOP                                                           44000000
.RXORA4  AIF   (&S(4) EQ 1 OR &QT EQ 1).OUTRX4 BRANCH IF SCOPE OR IF   X44033300
                                        QUIT=YES IS SPECIFIED  @ZA58451 44066600
&SC(1)   SETB  1                        SET SCOPE=STEP FOR DEFAULT CASE 44100000
.OUTRX4  ANOP                                                           44150000
.RXORA5  AIF   (&S(5) EQ 0).OUTRX5A     DON'T STORE QNAME IN PARMS      44200000
         AIF   ('&LT5' EQ 'A').RXORA6   BRANCH IF RX TYPE ADDR          44250000
         ST    &QNAME,&VAR5       .STORE QNAME IN PARM LIST             44300000
.OUTRX5A ANOP                                                           44350000
&QNAME   SETC  '0'                      INITIALIZE TO ZERO IF           44400000
.*                                      QNAME IS NOT SPECIFIED          44450000
.RXORA6  AIF   (&S(6) EQ 0).OUTRX6A     DON'T STORE RNAME IN PARMS      44500000
         AIF   ('&LT6' EQ 'A').RXORA7A  BRANCH IF RX TYPE ADDRESS       44550000
         ST    &RNAME,&VAR6       .STORE RNAME IN PARAMETER LIST        44600000
.OUTRX6A ANOP                                                           44650000
&RNAME   SETC  '0'                      INITIALIZE TO ZERO IF           44700000
.*                                      RNAME IS NOT SPECIFIED          44750000
.RXORA7A AIF   (&S(6) EQ 0).RXORA7C     DON'T CALCULATE RNAME LENGTH IF 44800000
.*                                      RNAME IS NOT SPECIFIED          44850000
         AIF   (&S(7) EQ 1).RXORA7B     BRANCH IF RNMLEN IS SPECIFIED   44900000
&LT7     SETC  'U'                      INDICATE RX TYPE ADDR           44950000
&LQUOTE  SETC  'L'''                    USED TO GET RNAME LENGTH        45000000
&RNMLEN  SETC  '&RESNAME(2)'            GET RNAME VALUE                 45033300
&RNMLEN  SETC  '&LQUOTE'.'&RNMLEN'      GET RNAME LENGTH                45066600
.RXORA7B AIF   ( '&LT7'  EQ  'U'                                       X45093200
               OR  '&LT7'  EQ  'N'                                     X45128800
               ).RXORA8A                IF RNMLEN CONSTANT, BRANCH @D1C 45164400
         STC   &RNMLEN,&VAR7      .STORE RNAME LENGTH IN PARM LIST      45200000
.RXORA7C ANOP                                                           45250000
&RNMLEN  SETC  '0'                      INITIALIZE TO ZERO IF          X45300000
                                        RNAME LENGTH IS NOT SPECIFIED   45350000
.RXORA8A ANOP  ,                                                   @D1A 45361100
         AIF   (&S(5) EQ 0).RXORA8C     DON'T CALCULATE QNAME LENGT@D1A 45372200
.*                                      QNAME IS NOT SPECIFIED     @D1A 45383300
         AIF   (&S(20) EQ 1).RXORA8B    BRANCH IF QNMLEN IS SPECIFI@D1A 45394400
.*                                                                      45401500
.*  QNAME LENGTH NOT SPECIFIED, SET DEFAULT LENGTH             @ZA81795 45408600
.*                                                                      45415700
&LT8     SETC  'U'                      INDICATE RX TYPE ADDRESS   @D1A 45422800
&QNMLEN  SETC  '8'                      SET DEFAULT QNAME LENGTH        45429900
.*                                                             @ZA81795 45437000
.*  DELETED LINE, USER DID NOT SPECIFY QNAME LENGTH            @YA21314 45444300
.RXORA8B ANOP  ,                                                   @D1A 45449900
         AIF   ( '&LT8'  EQ  'U'                                       X45461000
               OR  '&LT8'  EQ  'N'                                     X45475800
               ).RXORA9                 IF QNMLEN CONSTANT, BRANCH @D1A 45490600
         STC   &QNMLEN,&VAR15     .STORE QNAME LENGTH IN PARM LIST @D1A 45505400
.RXORA8C ANOP  ,                                                   @D1A 45516500
&QNMLEN  SETC  '0'                     INITIALIZE TO ZERO IF QNAME @D1AX45527600
                                       LENGTH IS NOT SPECIFIED     @D1A 45538700
.RXORA9  AIF   (&S(9) EQ 0).OUTRX9A     DON'T STORE SYSNAME IN PARMS    45550000
         AIF   ('&LT9' EQ 'A').RXORA10  BRANCH IF RX TYPE ADDR          45600000
         ST    &SYSNMA,&VAR9      .STORE SYSTEM NAME ADDR IN PARM LIST  45650000
.OUTRX9A ANOP                                                           45700000
&SYSNMA  SETC  '0'                      INITIALIZE TO ZERO IF           45750000
.*                                      SYSNAME IS NOT SPECIFIED        45800000
.RXORA10 AIF   (&S(10) EQ 0).OUTRX10    DON'T STORE ASID IN PARMS       45850000
         AIF   ('&LT10' EQ 'U' OR '&LT10' EQ 'N').RXORA11 BRANCH IF RX  45900000
.*                                      TYPE ADDRESS                    45950000
         ST    &ASID,&VAR10       .STORE ADDRESS SPACE ID IN PARM LIST  46000000
.OUTRX10 ANOP                                                           46050000
&ASID    SETC  '0'                       INITILIZE TO ZERO IF           46100000
.*                                       ASID IS NOT SPECIFIED          46150000
.RXORA11 AIF   (&S(11) EQ 0).OUTRX11     DON'T STORE REQCNT IN PARMS    46200000
         AIF   ('&LT11' EQ 'U' OR '&LT11' EQ 'N').RXORA12 BRANCH IF RX  46250000
.*                                       TYPE ADDRESS                   46300000
         ST    &REQCNTA,&VAR11    .STORE REQUEST COUNT IN PARM LIST     46350000
.OUTRX11 ANOP                                                           46400000
&REQCNTA SETC  '0'                      INITIALIZE TO ZERO IF           46450000
.*                                      REQUEST COUNT IS NOT SPECIFIED  46500000
.RXORA12 AIF   (&S(12) EQ 0).OUTRX12    DON'T STORE OWNCNT IN PARMS     46550000
         AIF   ('&LT12' EQ 'U' OR '&LT12' EQ 'N').RXORA13 BRANCH IF RX  46600000
.*                                      TYPE ADDRESS                    46650000
         ST    &OWNCNTA,&VAR12    .STORE OWNER COUNT IN PARM LIST       46700000
.OUTRX12 ANOP                                                           46750000
&OWNCNTA SETC  '0'                      INITIALIZE TO ZERO IF           46800000
.*                                      OWNER COUNT IS NOT SPECIFIED    46850000
.RXORA13 AIF   (&S(13) EQ 0).OUTRX13    DON'T STORE WAITCNT IN PARMS    46900000
         AIF   ('&LT13' EQ 'U' OR '&LT13' EQ 'N').RXORA14 BRANCH IF RX  46950000
.*                                      TYPE ADDRESS                    47000000
         ST    &WTCNTA,&VAR13     .STORE WAIT COUNT IN PARM LIST        47050000
.OUTRX13 ANOP                                                           47100000
&WTCNTA  SETC  '0'                      INITIALIZE TO ZERO IF           47150000
.*                                      WAIT COUNT IS NOT SPECIFIED     47200000
.RXORA14 AIF   (&S(14) EQ 0).OUTRX14    DON'T STORE TOKEN IN PARMS      47250000
         AIF   ('&LT14' EQ 'A').MFS16   BRANCH IF RX TYPE ADDRESS       47300000
         ST    &TOKENA,&VAR14     .STORE TOKEN ADDR IN PARM LIST        47350000
.OUTRX14 ANOP                                                           47400000
&TOKENA  SETC  '0'                      INITIALIZE TO ZERO IF           47450000
.*                                      TOKEN IS NOT SPECIFIED          47500000
.MFS16   CNOP  0,4                .FORCE PARM LIST TO WORD BOUNDARY     47550000
&SYMBOL  SETC  'ISG'.'&SYSNDX'.'X'      FORM LABEL                      47600000
         BAL   1,&SYMBOL          .BRANCH AROUND PARM LIST              47650000
&VAR1    DC    A(&AREAADR)        .AREA ADDRESS                         47700000
&VAR2    DC    A(&AREASZ)         .AREA SIZE                            47750000
&VAR5    DC    A(&QNAME)          .QNAME (MAJOR NAME) ADDR              47800000
&VAR6    DC    A(&RNAME)          .RNAME (MINOR NAME) ADDR              47850000
&VAR9    DC    A(&SYSNMA)         .SYSTEM NAME                          47900000
&VAR10   DC    A(&ASID)           .ADDRESS SPACE IDENTIFICATION         47950000
&VAR11   DC    A(&REQCNTA)        .REQUEST COUNT                        48000000
&VAR12   DC    A(&OWNCNTA)        .OWNER COUNT                          48050000
&VAR13   DC    A(&WTCNTA)         .WAIT COUNT                           48100000
&VAR14   DC    A(&TOKENA)         .TOKEN ADDR                           48150000
&VAR3    DC    A(&REQLIMA)        .REQUEST LIMIT                        48200000
&VAR4    DC    BL2'&SC(1).&SC(2).&SC(3).&SC(5).&SC(6).&RS(1).&RS(2).&QTX48250000
               .&S(9).&S(11).&S(12).&S(13).&S(14).&S(19).&S(20).&XS(1)'X48271800
                                  .SCOPE AND RESERVE FLAGS AS WELL AS  X48293700
                                  .QUIT,SYSNAME,REQCNT,OWNERCT,WAITCNT,X48312400
                                  .TOKEN SPECIFIED, RNAME TYPE,        X48324900
                                  .QNAME LENGTH and XSYS flags     @L2C 48337400
&VAR7    DC    AL1(&RNMLEN)       .RNAME LENGTH                         48350000
&VAR15   DC    AL1(&QNMLEN)       .QNAME LENGTH                    @D1C 48375000
&SYMBOL  STM   14,12,12(13)       .SAVE CALLER'S REGS                   48400000
         ESAR  2                  .OBTAIN SECONDARY ASID                48416600
         ST    2,16(,13)          .SAVE SECONDARY ASID                  48433200
         L     2,16(,0)           .GET ADDR OF CVT                      48450000
         L     2,772(,2)          .GET ADDR OF IEAVXSFT LX/EX TABLE     48500000
         AIF   (&SC(5) EQ 1 OR &SC(6) EQ 1).MFS90 BRANCH IF RESTRICTED  48550000
.*                                      INTERFACE (I.E.SCOPE=LOCAL      48560000
.*                                      OR GLOBAL)                      48570000
.* ENTRY POINT OF ISGQSCAN FOR SCOPE=STEP, SYSTEM, OR SYSTEMS           48580000
.* (I.E. GENERAL INTERFACE)                                             48585000
         L     2,64(,2)           .GET LX/EX FOR GRS QUEUE SCAN         48590000
         AGO   .MFS91                   BRANCH IF GENERAL               48600000
.*                                      INTERFACE                       48610000
.* ENTRY POINT OF ISGQSCAN FOR SCOPE=LOCAL OR GLOBAL                    48620000
.* (I.E. RESTRICTED INTERFACE)                                          48625000
.MFS90   L     2,104(,2)          .GET LX/EX FOR GRS QUEUE SCAN         48630000
.MFS91   PC    0(2)               .PC TO GRS QUEUE SCAN SERVICE         48640000
         L     2,16(,13)          .OBTAIN SAVED SECONDARY ASID          48643300
         SSAR  2                  .RESTORE SECONDARY ASID               48646600
         LM    2,12,28(13)        .RESTORE REGS 2 - 12                  48650000
         L     14,12(,13)         .RESTORE REG 14                       48700000
         MEXIT                          TEXT GENERATION COMPLETE        48750000
.********************************************************************** 50600000
.*                                                                    * 50650000
.*                 LIST FORM SPECIFIED (MF=L)                         * 50700000
.*                                                                    * 50750000
.********************************************************************** 50800000
.LISTFRM ANOP                           GQSCAN LIST FORM TEXT           50831200
.*                                      GENERATION                      50862400
&ERROR   SETB  0                        INDICATE NO ERRORS FOUND.       50893600
.*                                      NOTE - CONTROL WOULD NOT REACH  50924800
.*                                      HERE IF ERRORS WERE FOUND.      50956000
.*                                                                      50987200
.*                                                                      51018400
.* DETERMINE IF A REG IS SPECIFIED FOR KEYWORDS WHEN MF=L               51050000
.*                                                                      51100000
.CKLT1   AIF   ('&LT1' NE 'R').CKLT2    AREA ADDR A REGISTER?           51150000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51200000
.CKLT2   AIF   ('&LT2' NE 'R').CKLT3    AREA SIZE A REGISTER ?          51250000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51300000
.CKLT3   AIF   ('&LT3' NE 'R').CKLT5    REQLIM A REGISTER ?             51350000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51400000
.CKLT5   AIF   ('&LT5' NE 'R').CKLT6    QNAME A REGISTER ?              51450000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51500000
.CKLT6   AIF   ('&LT6' NE 'R').CKLT7    RNAME A REGISTER ?              51550000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51600000
.CKLT7   AIF   ('&LT7' NE 'R').CKLT8    RNMLEN A REGISTER ?        @D1C 51650000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51700000
.CKLT8   ANOP  ,                                                   @D1A 51712500
         AIF   ( '&LT8' NE 'R' ).CKLT9  QNMLEN A REGISTER ?        @D1A 51725000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51737500
.CKLT9   AIF   ('&LT9' NE 'R').CKLT10   SYSNAME A REGISTER ?            51750000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51800000
.CKLT10  AIF   ('&LT10' NE 'R').CKLT11  ASID A REGISTER ?               51850000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      51900000
.CKLT11  AIF   ('&LT11' NE 'R').CKLT12  REQCNT A REGISTER ?             51950000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      52000000
.CKLT12  AIF   ('&LT12' NE 'R').CKLT13  OWNERCT A REGISTER ?            52050000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      52100000
.CKLT13  AIF   ('&LT13' NE 'R').CKLT14  WAITCNT A REGISTER ?            52150000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      52200000
.CKLT14  AIF   ('&LT14' NE 'R').CKLT15  TOKEN A REGISTER ?              52250000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      52300000
.CKLT15  AIF   (&ERROR EQ 0).MFL16                                      52350000
.MFLER14 MNOTE 12,'ISG005  INVALID REGISTER NOTATION WITH MF=L FORM'   X52400000
                                                               @ZA58451 52450000
&ERROR   SETB  1                        SET ERROR FLAG - KILL TEXT      52500000
.MFL16   AIF   (&ERROR NE 1).MFL20      BRANCH IF NO ERROR FOR MF=L     52550000
         MEXIT                          ERROR(S) EXIST - TERMINATE TEXT 55207200
.*                                      GENERATION                      55220300
.*                                                                      55233400
.* GENERATE PARAMETER LIST FOR MF=L                                     55246500
.*                                                                      55259600
.MFL20   ANOP                           EXPAND TEXT FOR LIST FORM       55272700
&LABEL   DC    0F'0'              .GQSCAN PC PARAMETER LIST             55285800
         AIF   (&S(1) EQ 1).MFL22       BRANCH IF AREA ADDR SPECIFIED   55300000
&AREAADR SETC  '0'                      SET DEFAULT VALUE               55350000
.MFL22   DC    A(&AREAADR)        .AREA ADDRESS                         55400000
.MFL23   AIF   (&S(2) EQ 1).MFL24       BRANCH IF AREA SIZE SPECIFIED   55450000
&AREASZ  SETC  '0'                      SET DEFAULT VALUE               55500000
.MFL24   DC    A(&AREASZ)         .AREA SIZE                            55550000
.MFL25   AIF   (&S(5) EQ 1).MFL26       BRANCH IF QNAME SPECIFIED       55600000
&QNAME   SETC  '0'                      SET DEFAULT VALUE               55650000
.MFL26   DC    A(&QNAME)          .QNAME (MAJOR NAME) ADDRESS           55700000
.MFL27   AIF   (&S(6) EQ 1).MFL28       BRANCH IF RNAME SPECIFIED       55750000
&RNAME   SETC  '0'                      SET DEFAULT VALUE               55800000
.MFL28   DC    A(&RNAME)          .RNAME (MINOR NAME) ADDRESS           55850000
.MFL29   AIF   (&S(9) EQ 1).MFL30       BRANCH IF SYSNAME SPECIFIED     55900000
&SYSNMA  SETC  '0'                      SET DEFAULT VALUE               55950000
.MFL30   DC    A(&SYSNMA)         .SYSTEM NAME                          56000000
.MFL31   AIF   (&S(10) EQ 1).MFL32      BRANCH IF ASID SPECIFIED        56050000
&ASID    SETC  '0'                      SET DEFAULT VALUE               56100000
.MFL32   DC    A(&ASID)           .ADDRESS SPACE IDENTIFICATION         56150000
.MFL33   AIF   (&S(11) EQ 1).MFL34      BRANCH IF REQCNT SPECIFIED      56200000
&REQCNTA SETC  '0'                      SET DEFAULT VALUE               56250000
.MFL34   DC    A(&REQCNTA)        .REQUEST COUNT                        56300000
.MFL35   AIF   (&S(12) EQ 1).MFL36      BRANCH IF OWNERCT SPECIFIED     56350000
&OWNCNTA SETC  '0'                      SET DEFAULT VALUE               56400000
.MFL36   DC    A(&OWNCNTA)        .OWNER COUNT                          56450000
.MFL37   AIF   (&S(13) EQ 1).MFL38      BRANCH IF WAITCNT SPECIFIED     56500000
&WTCNTA  SETC  '0'                      SET DEFAULT VALUE               56550000
.MFL38   DC    A(&WTCNTA)         .WAIT COUNT                           56600000
.MFL39   AIF   (&S(14) EQ 1).MFL40      BRANCH IF TOKEN SPECIFIED       56650000
&TOKENA  SETC  '0'                      SET DEFAULT VALUE               56700000
.MFL40   DC    A(&TOKENA)         .TOKEN ADDRESS                        56750000
.MFL50   AIF   (&S(3) EQ 1).MFL63       BRANCH IF REQLIM IS SPECIFIED   56800000
&REQLIMA SETC  'MAX'                    SET UP FOR DEFAULT CASE         56850000
.*                                      (REQLIM = MAX)                  56900000
.MFL63   AIF   ('&REQLIMA' NE 'MAX').MFL64 BRANCH IF NOT REQLIM=MAX     56950000
&REQLIMA SETC  '32767'                  SET DEFAULT LIMIT               57000000
.MFL64   ANOP                                                           57050000
         DC    A(&REQLIMA)        .REQUEST LIMIT                        57100000
         AIF   (&S(4) EQ 1 OR &QT EQ 1).MFL70 BRANCH IF SCOPE OR IF    X57133300
                                        QUIT=YES IS SPECIFIED  @ZA58451 57166600
&SC(1)   SETB  1                        SET UP FOR DEFAULT CASE         57200000
.*                                      (SCOPE = STEP)                  57250000
.MFL70   ANOP                                                           57300000
         AIF   ( &S(20)  EQ  1 ).MFL75  IF QNMLEN SPECIFIED,BRANCH @D1A 57306200
         AIF   ( &S(5)  EQ  0 ).MFL75   NO QNAME SPECIFIED, BRANCH @D1A 57312400
.*                                                                      57316800
.*  QNAME LENGTH NOT SPECIFIED, SET DEFAULT LENGTH             @ZA81795 57321200
.*                                                                      57325600
.*  DELETED LINE, USER DID NOT SPECIFY QNAME LENGTH            @YA21314 57327800
&LT8     SETC  'U'                      QNAME LENGTH TYPE IS UNDEFINED  57330000
.*                                                             @YA21314 57332200
&QNMLEN  SETC  '8'                      SET DEFAULT QNAME LENGTH        57334400
.*                                                             @ZA81795 57338800
.MFL75   ANOP  ,                                                   @D1A 57343400
&VAR4    DC    BL2'&SC(1).&SC(2).&SC(3).&SC(5).&SC(6).&RS(1).&RS(2).&QTX57350000
               .&S(9).&S(11).&S(12).&S(13).&S(14).&S(19).&S(20).&XS(1)'X57400000
                                  .SCOPE AND RESERVE FLAGS AS WELL AS  X57450000
                                  .QUIT,SYSNAME,REQCNT,OWNERCT,WAITCNT,X57500000
                                  .TOKEN SPECIFIED, RNAME TYPE, QNAME  X57550000
                                  .length and XSYS flags           @L2C 57600000
         AIF   (&S(7) EQ 1).MFL81       BRANCH IF RNMLEN IS SPECIFIED   57800000
         AIF   (&S(6) EQ 1).MFL82       BRANCH IF RNAME IS SPECIFIED    57850000
         DC    AL1(0)             .RNAME LENGTH                         57900000
         AGO   .MFL85                   BYPASS OTHER RNMLEN        @D1C 57950000
.MFL81   DC    AL1(&RNMLEN)       .RNAME LENGTH                         58000000
         AGO   .MFL85              BYPASS OTHER RNMLEN DEFINITIONS @D1C 58050000
.MFL82   ANOP                                                           58100000
&LQUOTE  SETC  'L'''                    USED TO GET RNAME LENGTH        58150000
&RNMLEN  SETC  '&RESNAME(2)'            GET RNAME VALUE                 58200000
&RNMLEN  SETC  '&LQUOTE'.'&RNMLEN'      GET RNAME LENGTH                58250000
         DC    AL1(&RNMLEN)       .RNAME LENGTH                         58300000
.MFL85   ANOP  ,                                                   @D1C 58350000
         AIF   ( &S(20)  EQ  1 ).MFL86  IF QNMLEN SPECIFIED,BRANCH @D1A 58400000
         AIF   ( &S(5)  EQ  1 ).MFL87   IF QNAME SPECIFIED, BRANCH @D1A 58450000
         DC    AL1(0)             .QNAME LENGTH                    @D1A 58500000
         AGO   .MFL90                   DONE WITH QNAME LENGTH     @D1A 58550000
.MFL86   DC    AL1(&QNMLEN)       .QNAME LENGTH                    @D1A 58600000
         AGO   .MFL90                   DONE WITH QNAME LENGTH     @D1A 58650000
.MFL87   ANOP  ,                                                   @D1A 58700000
         DC    AL1(&QNMLEN)       .QNAME LENGTH                    @D1A 58900000
.MFL90   ANOP  ,                                                   @D1A 58950000
         MEXIT                     TEXT GENERATION COMPLETE (MF=L) @D1A 59000000
.********************************************************************** 60150000
.*                                                                    * 60200000
.*                 EXECUTE FORM SPECIFIED (MF=E)                      * 60250000
.*                                                                    * 60300000
.********************************************************************** 60350000
.EXECFRM ANOP                           GQSCAN EXECUTE FORM TEXT        60400000
.*                                      GENERATION                      60848200
.*                                                                      60897300
.* GENERATE CODE TO INITIALIZE PARAMETER LIST FOR MF=E                  60935800
.*                                                                      60974300
.MFE05   ANOP                                                           61012800
&VAR2    SETC  'ISG'.'&SYSNDX'.'2'      AREA SIZE                       61051300
&VAR3    SETC  'ISG'.'&SYSNDX'.'3'      REQUEST LIMIT                   61089800
&VAR7    SETC  'ISG'.'&SYSNDX'.'7'      RNAME LENGTH                    61128300
&VAR15   SETC  'ISG'.'&SYSNDX'.'F'      QNAME LENGTH               @D1A 61147500
&VAR10   SETC  'ISG'.'&SYSNDX'.'A'      ADDRESS SPACE IDENTIFICATION    61166800
&VAR11   SETC  'ISG'.'&SYSNDX'.'B'      REQUEST COUNT LIMIT             61205300
&VAR12   SETC  'ISG'.'&SYSNDX'.'C'      OWNER COUNT LIMIT               61243800
&VAR13   SETC  'ISG'.'&SYSNDX'.'D'      WAIT COUNT LIMIT                61282300
&LABEL   DS    0H                                                       61320800
         AIF   ('&LT17' EQ 'R').MFE07   BRANCH IF REG TYPE ADDR         61359300
         LA    1,&PARMLST         .LOAD ADDR OF PARM LIST               61397800
         AGO   .MFE09                   BRANCH TO START EXPANSION       61437400
.MFE07   LR    1,&PARMLST         .LOAD ADDR OF PARM LIST               61486500
.MFE09   AIF   (&S(1) EQ 0).MFE13       BRANCH IF AREA ADDR NOT GIVEN   61535600
         AIF   ('&LT1' EQ 'A').MFE11    BRANCH IF RX TYPE ADDR          61584700
         ST    &AREAADR,0(,1)     .STORE AREA ADDR IN PARM LIST         61633800
         AGO   .MFE13                   GO CHECK ADDR TYPE OF AREASZ    61682900
.MFE11   LA    15,&AREAADR        .GET AREA ADDRESS                     61732000
         ST    15,0(,1)           .STORE AREA ADDR IN PARM LIST         61781100
.MFE13   AIF   (&S(2) EQ 0).MFE17       BRANCH IF AREA SIZE NOT GIVEN   61830200
         AIF   ('&LT2' EQ 'U' OR '&LT2' EQ 'N').MFE15 BRANCH IF AN      61879300
.*                                      EQUATED VALUE OR A SELF-        61928400
.*                                      DEFINING TERM                   61977500
         ST    &AREASZ,4(,1)      .STORE AREA SIZE IN PARM LIST         62026600
         AGO   .MFE17                   GO CHECK ADDR TYPE OF REQLIM    62075700
.MFE15   L     0,&VAR2            .GET AREA SIZE                        62124800
         ST    0,4(,1)            .STORE AREA SIZE IN PARM LIST         62174800
.MFE17   AIF   (&S(3) EQ 0).MFE31       BRANCH IF REQLIM NOT GIVEN      62224800
.MFE18   AIF   ('&LT3' EQ 'U' OR '&LT3' EQ 'N').MFE19 BRANCH IF AN      62274800
.*                                      EQUATED VALUE OR A SELF-        62324800
.*                                      DEFINING TERM                   62374800
         ST    &REQLIMA,40(,1)    .STORE REQUEST LIMIT IN PARM LIST     62424800
         AGO   .MFE31                   GO CHECK TYPE OF SCOPE          62508100
.MFE19   L     0,&VAR3            .GET REQUEST LIMIT                    62541400
         ST    0,40(,1)           .STORE REQUEST LIMIT IN PARM LIST     62574800
.MFE31   AIF   (&S(5) EQ 0).MFE35       DON'T STORE QNAME IN PARMS      63057700
         AIF   ('&LT5' EQ 'A').MFE33    BRANCH IF RX TYPE ADDR          63106800
         ST    &QNAME,8(,1)       .STORE QNAME IN PARM LIST             63155900
         AGO   .MFE35                   GO CHECK ADDR TYPE OF RNAME     63205000
.MFE33   LA    15,&QNAME          .GET QNAME ADDR                       63254100
         ST    15,8(,1)           .STORE QNAME ADDR IN PARM LIST        63303200
.MFE35   AIF   (&S(6) EQ 0).MFE39       DON'T STORE RNAME IN PARMS      63352300
         AIF   ('&LT6' EQ 'A').MFE37    BRANCH IF RX TYPE ADDRESS       63401400
         ST    &RNAME,12(,1)      .STORE RNAME IN PARAMETER LIST        63450500
         AGO   .MFE39                   GO CHECK ADDR TYPE OF RNMLEN    63499600
.MFE37   LA    15,&RNAME          .GET RNAME ADDR                       63548700
         ST    15,12(,1)          .STORE RNAME ADDR IN PARAMETER LIST   63585500
.MFE39   AIF   (&S(7) EQ 0).MFE43       DON'T STORE RNAME LENGTH   @D1C 63622300
.*                                      IN PARAMETER LIST               63659100
         AIF   ('&LT7' EQ 'U' OR '&LT7' EQ 'N').MFE41 BRANCH IF AN      63696000
.*                                      EQUATED VALUE OR A SELF-        63745100
.*                                      DEFINING TERM                   63794200
         STC   &RNMLEN,46(,1)     .STORE RNAME LENGTH IN PARM LIST      63843300
         AGO   .MFE43                   GO TO END OF RNAME LENGTH       63893000
.MFE41   L     0,&VAR7            .GET RNAME LENGTH                     63942700
         STC   0,46(,1)           .STORE RNAME LENGTH IN PARM LIST      63992400
.MFE43   ANOP  ,                                                   @D1A 63999500
         AIF   ( &S(20)  EQ  1 ).MFE44 USER SUPPLIED QNAME LENGTH       64002000
.*                                                             @YA21314 64004500
         AIF   ( &S(5)  EQ  0 ).MFE51  DON'T STORE QNAME LENGTH@YA21314 64007000
.*                                     NO QNAME, THEREFORE NO  @YA21314 64009500
.*                                     ASSOCIATED QNAME LENGTH @YA21314 64012000
&LT8     SETC  'U'                     QNAME LENGTH TYPE IS UNDEFINED   64014500
.*                                                             @YA21314 64017000
&QNMLEN  SETC  '8'                     IN CASE QNAME IS NOT SPECIFIED   64019500
.*                                     IN THE LIST FORMAT      @YA24718 64022000
.MFE44   AIF   ( '&LT8'  EQ  'U'                                       X64024500
               OR  '&LT8'  EQ  'N'                                     X64027900
               ).MFE45                  BRANCH IF AN EQUATED VALUE     X64035000
                                        OR A SELF-DEFINING TERM    @D1A 64042100
         STC   &QNMLEN,47(,1)     .STORE QNAME LENGTH IN PARM LIST @D1A 64049200
         AGO   .MFE51                   GO TO END OF QNAME LENGTH  @D1A 64056300
.MFE45   L     0,&VAR15           .GET QNAME LENGTH                @D1A 64063400
         STC   0,47(,1)           .STORE QNAME LENGTH IN PARM LIST      64068100
.*                                                             @YA24718 64072800
.MFE51   ANOP  ,                                                   @D1A 64077600
         AIF   (&S(9) EQ 0).MFE55     DON'T STORE SYSNAME IN PARMS @D1C 64084700
         AIF   ('&LT9' EQ 'A').MFE53    BRANCH IF RX TYPE ADDR          64092400
         ST    &SYSNMA,16(,1)     .STORE SYSTEM NAME IN PARM LIST       64142400
         AGO   .MFE55                   GO CHECK ADDR TYPE OF ASID      64192400
.MFE53   LA    15,&SYSNMA         .GET SYSTEM NAME                      64242400
         ST    15,16(,1)          .STORE SYSTEM NAME IN PARM LIST       64292400
.MFE55   AIF   (&S(10) EQ 0).MFE59      DON'T STORE ASID IN PARMS       64383400
         AIF   ('&LT10' EQ 'U' OR '&LT10' EQ 'N').MFE57 BRANCH IF AN    64432500
.*                                      EQUATED VALUE OR A SELF-        64481600
.*                                      DEFINING TERM                   64530700
         ST    &ASID,20(,1)       .STORE ADDRESS SPACE ID IN PARM LIST  64579800
         AGO   .MFE59                   GO CHECK ADDR TYPE OF REQCNT    64628900
.MFE57   L     0,&VAR10           .GET ADDRESS SPACE ID                 64678000
         ST    0,20(,1)           .STORE ADDRESS SPACE ID IN PARM LIST  64776200
.MFE59   AIF   (&S(11) EQ 0).MFE67      DON'T STORE REQCNT IN PARMS     64825300
         AIF   ('&LT11' EQ 'U' OR '&LT11' EQ 'N').MFE65 BRANCH IF AN    64874400
.*                                      EQUATED VALUE OR A SELF-        64923500
.*                                      DEFINING TERM                   64972600
         ST    &REQCNTA,24(,1)    .STORE REQUEST COUNT IN PARM LIST     65021700
         AGO   .MFE67                   GO CHECK ADDR TYPE OF WAITCNT   65070800
.MFE65   L     0,&VAR11           .GET REQUEST COUNT                    65119900
         ST    0,24(,1)           .STORE REQUEST COUNT IN PARM LIST     65218100
.MFE67   AIF   (&S(12) EQ 0).MFE71      DON'T STORE OWNCNT IN PARMS     65267200
         AIF   ('&LT12' EQ 'U' OR '&LT12' EQ 'N').MFE69 BRANCH IF AN    65316300
.*                                      EQUATED VALUE OR A SELF-        65365400
.*                                      DEFINING TERM                   65414500
         ST    &OWNCNTA,28(,1)    .STORE OWNER COUNT IN PARM LIST       65463600
         AGO   .MFE71                   GO CHECK ADDR TYPE OF WAITCNT   65512700
.MFE69   L     0,&VAR12           .GET OWNER COUNT                      65561800
         ST    0,28(,1)           .STORE OWNER COUNT IN PARM LIST       65660000
.MFE71   AIF   (&S(13) EQ 0).MFE75      DON'T STORE WAITCNT IN PARMS    65709100
         AIF   ('&LT13' EQ 'U' OR '&LT13' EQ 'N').MFE73 BRANCH IF AN    65758200
.*                                      EQUATED VALUE OR A SELF-        65807300
.*                                      DEFINING TERM                   65856400
         ST    &WTCNTA,32(,1)     .STORE WAIT COUNT IN PARM LIST        65905500
         AGO   .MFE75                                                   65954600
.MFE73   L     0,&VAR13           .GET WAIT COUNT                       66003700
         ST    0,32(,1)           .STORE WAIT COUNT IN PARM LIST        66101900
.MFE75   ANOP  ,                        RESET RESNAME TYPE FLAG    @L1C 66110000
.*                                         UNLESS GENERIC RNAME    @L1A 66118100
         AIF   ( &S(18) EQ 0  OR  &S(19) EQ 1 ).MFE77              @L1A 66126200
         NI    45(1),B'11111011'  .RESET RNAME TYPE FLAG           @L1A 66134600
.MFE77   ANOP  ,                                                   @L1A 66145500
         AIF   (&S(14) EQ 0).MFE80      DON'T STORE TOKEN IN PARM  @L1C 66156400
         AIF   ('&LT14' EQ 'A').MFE79   BRANCH IF RX TYPE ADDRESS       66200100
         ST    &TOKENA,36(,1)     .STORE TOKEN ADDR IN PARM LIST        66249200
         AGO   .MFE80                                                   66298300
.MFE79   LA    15,&TOKENA         .GET TOKEN ADDR                       66347400
         ST    15,36(,1)          .STORE TOKEN ADDR IN PARM LIST        66385200
.MFE80   AIF   (&S(4) EQ 0).MFE81       BRANCH IF SCOPE PAMAMETER       66393400
.*                                      IS NOT SPECIFIED                66401600
         NI    44(1),X'07'        .RESET SCOPE FLAGS                    66422100
.MFE81   AIF   (&S(8) EQ 0).MFE81A      BRANCH IF RESERVE PARAMETER     66442600
.*                                      IS NOT SPECIFIED                66450800
         NI    44(1),X'F9'        .RESET RESERVE FLAGS         @ZA64734 66463100
.MFE81A  AIF   (&S(15) EQ 0).MFE82      BRANCH IF QUIT PARAMETER        66466100
.*                                      IS NOT SPECIFIED       @ZA58541 66469100
         NI    44(1),X'FE'        .RESET QUIT FLAG             @ZA58541 66472100
.MFE82   AIF   (&S(4) EQ 0 AND &S(8) EQ 0 AND &S(9) EQ 0 AND &S(11) EQ X66475400
               0 AND &S(12) EQ 0 AND &S(13) EQ 0 AND &S(14) EQ 0 AND   X66487700
               &S(15) EQ 0                                             X66489900
               AND  &S(18)  EQ  0                                      X66492100
               AND  &S(20)  EQ  0                                      X66494300
               ).MFE83                  BRANCH IF SCOPE,               X66496500
                                        RESERVE,SYSNAME, REQUEST COUNT,X66499100
                                        OWNER COUNT, WAIT COUNT,       X66502500
                                        QUIT, TOKEN, RNAME TYPE        X66505900
                                        AND QNAME LENGTH               X66509300
                                        ARE NOT SPECIFIED         @D1C  66512700
&SYMBOL  SETC  'ISG'.'&SYSNDX'.'S'      FORM LABEL                      66516400
         OI    44(1),&SYMBOL      .SET SCOPE, RESERVE, AND QUIT FLAGS   66525000
&SYMBOL  EQU   B'&SC(1).&SC(2).&SC(3).&SC(5).&SC(6).&RS(1).&RS(2).&QT'  66533600
.*                                                             @ZA58541 66542200
*                                 .SCOPE AND RESERVE FLAGS              66551000
&SYMBOL  SETC  'ISG'.'&SYSNDX'.'T'      FORM LABEL                      66559700
         OI    45(1),&SYMBOL      .SET SYSNAME, REQCNT, OWNERCT,        66565500
*                                 .WAITCNT AND TOKEN SPECIFIED FLAGS    66571300
&SYMBOL  EQU   B'&S(9).&S(11).&S(12).&S(13).&S(14).&S(19).&S(20).&XS(1)X66578900
               '                  .SYSNAME, REQCNT, OWNERCT, WAITCNT,  X66586500
                                  .TOKEN SPECIFIED, RNAME TYPE, QNAME  X66594100
                                  .length and XSYS flags           @L2C 66601700
.MFE83   STM   14,12,12(13)       .SAVE CALLER'S REGS                   66609400
         ESAR  2                  .OBTAIN SECONDARY ASID                66611900
         ST    2,16(,13)          .SAVE SECONDARY ASID                  66614400
         L     2,16(,0)           .GET ADDR OF CVT                      66616900
         L     2,772(,2)          .GET ADDR OF IEAVXSFT TABLE           66624400
         AIF   (&SC(5) EQ 1 OR &SC(6) EQ 1).MFE84 BRANCH IF RESTRICTED  66631900
.*                                      INTERFACE (I.E.SCOPE=LOCAL      66639400
.*                                      OR GLOBAL)                      66646900
.* ENTRY POINT OF ISGQSCAN FOR SCOPE=STEP, SYSTEM, OR SYSTEMS           66654400
.* (I.E. GENERAL INTERFACE)                                             66658100
         L     2,64(,2)           .GET LX/EX FOR GRS QUEUE SCAN         66661900
         AGO   .MFE85                   BRANCH IF GENERAL               66669400
.*                                      INTERFACE                       66676900
.* ENTRY POINT OF ISGQSCAN FOR SCOPE=LOCAL OR GLOBAL                    66684400
.* (I.E. RESTRICTED INTERFACE)                                          66686200
.MFE84   L     2,104(,2)          .GET LX/EX FOR GRS QUEUE SCAN         66688100
.MFE85   PC    0(2)               .PC TO GRS QUEUE SCAN SERVICE         66695600
         L     2,16(,13)          .OBTAIN SAVED SECONDARY ASID          66699300
         SSAR  2                  .RESTORE SECONDARY ASID               66703000
         LM    2,12,28(13)        .RESTORE REGS 2 - 12                  66707000
         L     14,12(,13)         .RESTORE REG 14                       66711400
&EI2     SETB  (&S(2) EQ 0 OR '&LT2' EQ 'R') SET FLAG IF AREA SIZE WAS  66715800
.*                                      NOT SPECIFIED OR IF IT IS       66720200
.*                                      CONTAINED IN A REGISTER         66724600
&EI3     SETB  (&S(3) EQ 0 OR '&LT3' EQ 'R') SET FLAG IF REQLIM WAS     66729000
.*                                      NOT SPECIFIED OR IF IT IS       66733400
.*                                      CONTAINED IN A REGISTER         66737800
&EI7     SETB  (&S(7) EQ 0 OR '&LT7' EQ 'R') SET FLAG IF RNAME LENGTH   66742200
.*                                      WAS NOT SPECIFIED OR IF IT IS   66746600
.*                                      CONTAINED IN A REGISTER         66751000
&EI8     SETB  ((&S(5) EQ 0 AND &S(20) EQ 0) OR '&LT8' EQ 'R')          66751700
.*                                      SET FLAG IF QNAME AND QNAME     66752400
.*                                      LENGTH WERE NOT SPECIFIED OR    66753100
.*                                      IF QNAME LENGTH IS CONTAINED    66753800
.*                                      IN A REGISTER          @YA24718 66754500
&EI10    SETB  (&S(10) EQ 0 OR '&LT10' EQ 'R') SET FLAG IF ASID         66755400
.*                                      NOT SPECIFIED OR IF IT IS       66759800
.*                                      CONTAINED IN A REGISTER         66764200
&EI11    SETB  (&S(11) EQ 0 OR '&LT11' EQ 'R') SET FLAG IF REQCNT       66768600
.*                                      NOT SPECIFIED OR IF IT IS       66773000
.*                                      CONTAINED IN A REGISTER         66777400
&EI12    SETB  (&S(12) EQ 0 OR '&LT12' EQ 'R') SET FLAG IF OWNERCNT     66781800
.*                                      NOT SPECIFIED OR IF IT IS       66786200
.*                                      CONTAINED IN A REGISTER         66790600
&EI13    SETB  (&S(13) EQ 0 OR '&LT13' EQ 'R') SET FLAG IF WAITCNT      66795000
.*                                      NOT SPECIFIED OR IF IT IS       66799400
.*                                      CONTAINED IN A REGISTER         66803800
         AIF   ( &EI2  EQ  1                                           X66809900
               AND  &EI3  EQ  1                                        X66816000
               AND  &EI7  EQ  1                                        X66822100
               AND  &EI8  EQ  1                                        X66828200
               AND  &EI10  EQ  1                                       X66834300
               AND  &EI11  EQ  1                                       X66840400
               AND  &EI12  EQ  1                                       X66846500
               AND  &EI13  EQ  1 ).MFE99 IF NOT NEEDED, BRANCH AROUND  X66852600
                                         CONSTANT VALUE EXPANSION  @D1C 66858700
&SYMBOL  SETC  'ISG'.'&SYSNDX'.'Z'      FORM LABEL                      66865700
         B     &SYMBOL            .BRANCH AROUND REQUIRED DECLARES      66889000
.* GENERATE CONSTANT VALUES                                             66925000
.*                                                                      66937500
         CNOP  0,4                .FORCE ALIGNMENT TO WORD BOUNDARY     66950000
         AIF   ('&LT2' NE 'U' AND '&LT2' NE 'N').MFE86 BRANCH IF NOT    67000000
.*                                      AN EQUATED VALUE OR SELF-       67050000
.*                                      DEFINING TERM                   67100000
&VAR2    DC    A(&AREASZ)         .AREA SIZE                            67150000
.MFE86   AIF   ('&LT3' NE 'U' AND '&LT3' NE 'N').MFE87 BRANCH IF NOT    67200000
.*                                      AN EQUATED VALUE OR SELF-       67250000
.*                                      DEFINING TERM                   67300000
&VAR3    DC    A(&REQLIMA)        .REQUEST LIMIT                        67350000
.MFE87   AIF   ('&LT7' NE 'U' AND '&LT7' NE 'N').MFE88 BRANCH IF NOT   X67400000
                                        AN EQUATED VALUE OR SELF-      X67450000
                                        DEFINING TERM              @D1C 67500000
&VAR7    DC    A(&RNMLEN)         .RNAME LENGTH                         67550000
.MFE88   ANOP  ,                                                   @D1A 67600000
         AIF   ( '&LT8'  NE  'U'                                       X67650000
               AND  '&LT8'  NE  'N'                                    X67700000
               ).MFE89                  BRANCH IF NOT AN EQUATED VALUE X67750000
                                        OR SELF-DEFINING TERM      @D1A 67800000
&VAR15   DC    A(&QNMLEN)         .QNAME LENGTH                    @D1A 67850000
.MFE89   AIF   ('&LT10' NE 'U' AND '&LT10' NE 'N').MFE91 BRANCH IF      67900000
.*                                      AN EQUATED VALUE OR SELF-       67950000
.*                                      DEFINING TERM                   68000000
&VAR10   DC    A(&ASID)           .ADDRESS SPACE ID                     68050000
.MFE91   AIF   ('&LT11' NE 'U' AND '&LT11' NE 'N').MFE93 BRANCH IF      68100000
.*                                      NOT AN EQUATED VALUE OR SELF-   68150000
.*                                      DEFINING TERM                   68200000
&VAR11   DC    A(&REQCNTA)        .REQUEST COUNT                        68250000
.MFE93   AIF   ('&LT12' NE 'U' AND '&LT12' NE 'N').MFE95 BRANCH IF      68300000
.*                                      NOT AN EQUATED VALUE OR SELF-   68350000
.*                                      DEFINING TERM                   68400000
&VAR12   DC    A(&OWNCNTA)        .OWNER COUNT                          68450000
.MFE95   AIF   ('&LT13' NE 'U' AND '&LT13' NE 'N').MFE97 BRANCH IF      68500000
.*                                      NOT AN EQUATED VALUE OR SELF-   68550000
.*                                      DEFINING TERM                   68600000
&VAR13   DC    A(&WTCNTA)         .WAIT COUNT                           68650000
.MFE97   ANOP                                                           68700000
&SYMBOL  CNOP  0,4                                                      68750000
.MFE99   MEND                           TEXT GENERATION COMPLETE (MF=E) 68800000
