*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMSWCH                              -11/04/93-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitoring environment switch                 * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1993                           * 00001300
*     SEE COPYRIGHT INSTRUCTIONS                                      * 00001400
*                                                                     * 00001500
* STATUS= HBB5510                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*                                                                     * 00002200
*      The purpose of this service is to reflect that the delay       * 00002300
*      information for a work request may now also reside in another  * 00002400
*      monitoring environment which is not Related to the current     * 00002500
*      environment (Continue) OR that there is no further information * 00002600
*      for the current work request beyond the current environment    * 00002700
*      (Return).                                                      * 00002800
*                                                                     * 00002900
*      The scope of this service is restricted to the input           * 00003000
*      monitoring environment and no other monitoring environments    * 00003100
*      are accessed or otherwise involved.                            * 00003200
*                                                                     * 00003300
*      It is preferable to use IWMMXFER, where the necessary          * 00003400
*      information is available, and the restrictions can be met,     * 00003500
*      since this gives more specific information to MVS about the    * 00003600
*      status of the work request.                                    * 00003700
*                                                                     * 00003800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003900
*                                                                     * 00004000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004100
*                                                                     * 00004200
*01* ENVIRONMENT:                                                     * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*      Dispatchable unit mode: Task or SRB mode.                      * 00004600
*                                                                     * 00004700
*      Minimum authorization:                                         * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*                        o   Either problem state or supervisor       * 00005100
*                            state.                                   * 00005200
*                                                                     * 00005300
*                        o   PSW key must either be 0 or match the    * 00005400
*                            value supplied on IWMMCREA.              * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*      AMODE:            31-bit.                                      * 00005900
*                                                                     * 00006000
*      ASC mode:         Primary.  Any P,S,H.                         * 00006100
*                                                                     * 00006200
*      Serialization:    Enabled.  FRRs are allowed.                  * 00006300
*                                                                     * 00006400
*      Restrictions:                                                  * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*                        1.  This macro may not be used prior to the  * 00006800
*                            completion of WLM address space          * 00006900
*                            initialization                           * 00007000
*                                                                     * 00007100
*                        2.  All parameter areas must reside in       * 00007200
*                            current primary.                         * 00007300
*                                                                     * 00007400
*                        3.  Caller is responsible for error recovery * 00007500
*                                                                     * 00007600
*                        4.  Suspend locks are allowed                * 00007700
*                                                                     * 00007800
*                        5.  Only limited checking is done against    * 00007900
*                            the input monitoring token.              * 00008000
*                                                                     * 00008100
*                        6.  If the key specified on IWMMCREA was a   * 00008200
*                            user key (8-F), then the primary         * 00008300
*                            addressability must exist to the         * 00008400
*                            performance block IWMMCREA obtained.     * 00008500
*                            This condition is satisfied by ensuring  * 00008600
*                            that current primary matches primary at  * 00008700
*                            the time that IWMMCREA was invoked.  If  * 00008800
*                            this service is invoked in a subspace,   * 00008900
*                            the condition may be satisfied by        * 00009000
*                            ensuring that the performance block is   * 00009100
*                            shared with the base space.              * 00009200
*                                                                     * 00009300
*                        7.  FUNCTION(CONTINUE) may not be used when  * 00009400
*                            there is an outstanding continuation     * 00009500
*                            established by use of Transfer Continue  * 00009600
*                                                                     * 00009700
*                        8.  The caller must serialize to prevent any * 00009800
*                            delay monitoring services from being     * 00009900
*                            invoked concurrently for the input       * 00010000
*                            monitoring environment.                  * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00010700
*                      GR2-GR13    Undefined                          * 00010800
*                      GR14-GR15   Reserved                           * 00010900
*                      AR0-AR1     Reserved                           * 00011000
*                      AR2-AR13    Undefined                          * 00011100
*                      AR14-AR15   Reserved                           * 00011200
*                                                                     * 00011300
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00011400
*                                  non-zero                           * 00011500
*                      GR1         Used as a work register by the     * 00011600
*                                  macro                              * 00011700
*                      GR2-GR13    Unchanged                          * 00011800
*                      GR14        Used as a work register by the     * 00011900
*                                  macro                              * 00012000
*                      GR15        Return code                        * 00012100
*                      AR0-AR1     Used as a work register by the     * 00012200
*                                  macro                              * 00012300
*                      AR2-AR13    Unchanged                          * 00012400
*                      AR14-AR15   Used as a work register by the     * 00012500
*                                  macro                              * 00012600
*                                                                     * 00012700
*01* SYNTAX:                                                          * 00012800
*                                                                     * 00012900
*[xlabel]  IWMMSWCH    FUNCTION=CONTINUE                             * 00013000
*                    |   [,RUNTIME_VER=SHORT_FORM]                   * 00013100
*                    |   [,RUNTIME_VER=MINIMAL]                      * 00013200
*                    |    ,WHERE=LOCALMVS                            * 00013300
*                    |    ,WHERE=SYSPLEX                             * 00013400
*                    |    ,WHERE=NETWORK                             * 00013500
*                     ,FUNCTION=RETURN                               * 00013600
*                        [,RUNTIME_VER=SHORT_FORM]                   * 00013700
*                        [,RUNTIME_VER=MINIMAL]                      * 00013800
*                      ,MONTKN=xmontkn                                * 00013900
*                    [,COMPCODE=YES]                                 * 00014000
*                    [,COMPCODE=NO]                                  * 00014100
*                     [,RETCODE=xretcode]                             * 00014200
*                     [,RSNCODE=xrsncode]                             * 00014300
*                    [,MF=S]                                         * 00014400
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00014500
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*      Where:                                                         * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*      [xlabel]                                                       * 00015200
*          is an optional symbol, starting in column 1, that is the   * 00015300
*          name on the IWMMSWCH macro invocation.  The name must      * 00015400
*          conform to the rules for an ordinary assembler language    * 00015500
*          symbol.                                                    * 00015600
*          DEFAULT: No name.                                          * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*      FUNCTION=CONTINUE|RETURN                                     * 00016200
*          is a required keyword input which indicates where there    * 00016300
*          may be one or more other monitoring environments which     * 00016400
*          represent current information about the work request.      * 00016500
*          This is meant to cover further continuations of the work   * 00016600
*          request, and does not deal with any parent environment     * 00016700
*          that may exist.                                            * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*          FUNCTION=CONTINUE                                          * 00017100
*              indicates that the current environment is creating     * 00017200
*              only a single continuation elsewhere.                  * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*              [RUNTIME_VER=SHORT_FORM|MINIMAL]                     * 00017600
*                  is an optional keyword input which indicates what  * 00017700
*                  level of runtime verification will be performed.   * 00017800
*                  DEFAULT: SHORT_FORM                                * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*                  [RUNTIME_VER=SHORT_FORM]                           * 00018200
*                      indicates that checking should verify that a   * 00018300
*                      monitoring environment is established and      * 00018400
*                      passes a short form of verification prior to   * 00018500
*                      being used.                                    * 00018600
*                                                                     * 00018700
*                  [RUNTIME_VER=MINIMAL]                              * 00018800
*                      indicates that checking will only be done to   * 00018900
*                      verify that a monitoring environment may be    * 00019000
*                      established, assuming that it would be valid   * 00019100
*                      and useable if established.                    * 00019200
*                      DEFAULT: SHORT_FORM indicates that short form  * 00019300
*                      checking is desired.                           * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*              WHERE=LOCALMVS|SYSPLEX|NETWORK                       * 00020100
*                  is a required keyword input which indicates where  * 00020200
*                  there may be another monitoring environment        * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                  WHERE=LOCALMVS                                     * 00020600
*                      indicates that such an environment may exist   * 00020700
*                      on the current MVS.                            * 00020800
*                                                                     * 00020900
*                  WHERE=SYSPLEX                                      * 00021000
*                      indicates that such an environment may exist   * 00021100
*                      in the current syplex, but is not expected to  * 00021200
*                      be on the current MVS image.                   * 00021300
*                                                                     * 00021400
*                  WHERE=NETWORK                                      * 00021500
*                      indicates that such an environment may exist,  * 00021600
*                      but is not expected to be in the current       * 00021700
*                      sysplex.                                       * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*          FUNCTION=RETURN                                            * 00022400
*              indicates that any continuations of the work request   * 00022500
*              have completed.  These continuations may have been     * 00022600
*              established through use of Transfer or Switch.         * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*              [RUNTIME_VER=SHORT_FORM|MINIMAL]                     * 00023000
*                  is an optional keyword input which indicates what  * 00023100
*                  level of runtime verification will be performed.   * 00023200
*                  DEFAULT: SHORT_FORM                                * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*                  [RUNTIME_VER=SHORT_FORM]                           * 00023600
*                      indicates that checking should verify that a   * 00023700
*                      monitoring environment is established and      * 00023800
*                      passes a short form of verification prior to   * 00023900
*                      being used.                                    * 00024000
*                                                                     * 00024100
*                  [RUNTIME_VER=MINIMAL]                              * 00024200
*                      indicates that checking will only be done to   * 00024300
*                      verify that a monitoring environment may be    * 00024400
*                      established, assuming that it would be valid   * 00024500
*                      and useable if established.                    * 00024600
*                      DEFAULT: SHORT_FORM indicates that short form  * 00024700
*                      checking is desired.                           * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*      MONTKN=xmontkn                                                 * 00025900
*          is the name (RS-type), or address in register (2)-(12), of * 00026000
*          a required 32 bit input which contains the delay           * 00026100
*          monitoring token for the current environment.              * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*      [COMPCODE=YES|NO]                                            * 00026700
*          is an optional keyword input which indicates whether       * 00026800
*          completion status for this service is needed.              * 00026900
*          DEFAULT: YES                                               * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*          [COMPCODE=YES]                                             * 00027300
*              indicates that completion status is needed.            * 00027400
*                                                                     * 00027500
*          [COMPCODE=NO]                                              * 00027600
*              indicates that completion status is not needed.        * 00027700
*              Registers 0, 15 cannot be used as reason code and      * 00027800
*              return code registers upon completion of the macro     * 00027900
*              expansion. For this reason neither RETCODE NOR RSNCODE * 00028000
*              may be specified when COMPCODE(NO) is specified.       * 00028100
*              DEFAULT: YES indicates that completion status is       * 00028200
*              needed.                                                * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*      [RETCODE=xretcode]                                             * 00029000
*          is the name (RS-type) of an optional fullword output       * 00029100
*          variable, or register (2)-(12), into which the return code * 00029200
*          is to be copied from GPR 15.                               * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*      [RSNCODE=xrsncode]                                             * 00029800
*          is the name (RS-type) of an optional fullword output       * 00029900
*          variable, or register (2)-(12), into which the reason code * 00030000
*          is to be copied from GPR 0.                                * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*      [MF=S|L|E]                                                   * 00030600
*          is an optional keyword input which specifies the macro     * 00030700
*          form.                                                      * 00030800
*          DEFAULT: S                                                 * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*          [MF=S]                                                     * 00031200
*              specifies the standard form of the macro.  The "S"     * 00031300
*              form generates code to put the parameters into an      * 00031400
*              in-line parameter list and invoke the desired service. * 00031500
*              Full checking for required macro keys is done along    * 00031600
*              with supplying defaults for omitted optional           * 00031700
*              parameters.                                            * 00031800
*                                                                     * 00031900
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00032000
*              specifies the list form of the macro.  The "L" form    * 00032100
*              defines an area to be used for the parameter list.     * 00032200
*              Any other macro parameters are flagged as errors.      * 00032300
*                                                                     * 00032400
*            ,xmfctrl                                                 * 00032500
*              is a required input.  It is the name of a storage area * 00032600
*              for the parameter list.                                * 00032700
*                                                                     * 00032800
*            ,xmfattr|0D                                            * 00032900
*              is an optional 60 character input string that varies   * 00033000
*              from 1 to 60 characters. It can contain any value that * 00033100
*              is valid on an assembler DS pseudo-op. You can use     * 00033200
*              this parameter to force boundary alignment of the      * 00033300
*              parameter list.                                        * 00033400
*              DEFAULT: 0D which forces the parameter list to a       * 00033500
*              doubleword boundary.                                   * 00033600
*                                                                     * 00033700
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00033800
*              specifies the execute form of the macro.  The "E" form * 00033900
*              generates code to put the parameters into the          * 00034000
*              parameter list specified by xmfctrl and provides full  * 00034100
*              syntax checking with default setting.                  * 00034200
*                                                                     * 00034300
*            ,xmfctrl                                                 * 00034400
*              is a required input.  It is the name (RS-type), or     * 00034500
*              address in register (1)-(12), of a storage area for    * 00034600
*              the parameter list.                                    * 00034700
*                                                                     * 00034800
*            ,COMPLETE                                              * 00034900
*              is an optional keyword input which specifies the       * 00035000
*              degree of macro parameter syntax checking.             * 00035100
*              DEFAULT: COMPLETE                                      * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*              COMPLETE   Checking for required macro keys is done    * 00035500
*                        and defaults are supplied for omitted        * 00035600
*                        optional parameters.                         * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*01* RETURN CODES:                                                    * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*            0    IwmRetCodeOk:  Successful completion.               * 00036800
*                                                                     * 00036900
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00037000
*                 conditions noted.                                   * 00037100
*                                                                     * 00037200
*                 HEX REASON  MEANING                                 * 00037300
*                 CODE                                                * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                 xxxx0401    IwmRsnCodeNoWLM:  System does not       * 00037700
*                             support delay monitoring services.      * 00037800
*                             This return code is only set when the   * 00037900
*                             MVS release is prior to MVS/ESA         * 00038000
*                             SP5.1.0.                                * 00038100
*                                                                     * 00038200
*                 xxxx0402    IwmRsncodeNoMonEnv:  Input monitoring   * 00038300
*                             token indicates no monitoring           * 00038400
*                             environment was established.            * 00038500
*                                                                     * 00038600
*                 xxxx0407    IwmRsncodeReturnCont:  Switch Return    * 00038700
*                             was from a monitoring environment with  * 00038800
*                             an outstanding continuation.            * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00039400
*                 environment or parameters                           * 00039500
*                                                                     * 00039600
*                 HEX REASON  MEANING                                 * 00039700
*                 CODE                                                * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*                 xxxx081C    IwmRsnCodeContExists:  Outstanding      * 00040100
*                             continuation exists.                    * 00040200
*                                                                     * 00040300
*                 xxxx0820    IwmRsnCodeBadMonEnv:  Monitoring        * 00040400
*                             environment does not pass short form    * 00040500
*                             verification.                           * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*            10   IwmRetCodeCompError:  Component Error               * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*01* REASON CODES:                                                    * 00041800
*                                                                     * 00041900
*       A unique reason code will be returned whenever the return     * 00042000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00042100
*       under their corresponding return code.  Reason code and       * 00042200
*       return code constants are defined within IWMYCON.  Note that  * 00042300
*       the high order halfword of register 0, and the reason code    * 00042400
*       variable when specified, may be non-zero and represents       * 00042500
*       diagnostic data which is NOT part of the external interface.  * 00042600
*       The high order halfword should thus be excluded from          * 00042700
*       comparison with the reason code values described above.  The  * 00042800
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00042900
*       used for this purpose.                                        * 00043000
*                                                                     * 00043100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00043200
*                                                                     * 00043300
*02*   PROCESSOR:  ASSEM                                              * 00043400
*                                                                     * 00043500
*01* COMPONENT:  SCWLM                                                * 00043600
*                                                                     * 00043700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00043800
*                                                                     * 00043900
*01* MACRO USAGE NOTES:                                               * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00044300
*        global macro variable.  Any value other than 'NO' will       * 00044400
*        result in the macro expansion being printed.  The default is * 00044500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00044600
*        variable should be set.                                      * 00044700
*                                                                     * 00044800
*                    GBLC &ZPRINT                                     * 00044900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00045000
*                                                                     * 00045100
*    2.  The  macro  CVT  must  be  included  to  use this macro when * 00045200
*        FUNCTION(RETURN) is specified.                               * 00045300
*                                                                     * 00045400
*    3.  This  macro  may  only  be  used  on  MVS/ESA  (version 3 or * 00045500
*        higher), NOT versions 1 or 2 of MVS.                         * 00045600
*                                                                     * 00045700
*    4.  The macro IWMYCON must be included to use this macro.        * 00045800
*                                                                     * 00045900
*    5.  The  macro IWMPB must be in the library concatenation, since * 00046000
*        it is included by IWMYCON.                                   * 00046100
*                                                                     * 00046200
*    6.  Note  that  the  high  order halfword of register 0, and the * 00046300
*        reason  code  variable  when  specified, may be non-zero and * 00046400
*        represents diagnostic data which is NOT part of the external * 00046500
*        interface.   The high order halfword should thus be excluded * 00046600
*        from comparison with the reason code values described above. * 00046700
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00046800
*        be used for this purpose.                                    * 00046900
*                                                                     * 00047000
*    7.  The  PL/AS version of the macro needs the EPILOG macro to be * 00047100
*        included.                                                    * 00047200
*                                                                     * 00047300
*    8.  The  macro  CVT  must  be  included  to  use this macro when * 00047400
*        FUNCTION(RETURN) is specified.                               * 00047500
*                                                                     * 00047600
*    9.  Note  that  specification  of FUNCTION(CONTINUE) produces an * 00047700
*        inline expansion rather than an out-of-line service, so that * 00047800
*        no  parameter  list  is needed.   Thus the MF keyword is not * 00047900
*        applicable  when  this  option  is  specified,  and  is  not * 00048000
*        allowed.    Registers  0,  1,  14,  and 15 are not preserved * 00048100
*        across the expansion.                                        * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*01* CHANGE ACTIVITY:                                                 * 00048600
*                                                                     * 00048700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00048800
*                                                                     * 00048900
*    $L0=WLMI     HBB5510 920309 PD16:  Workload Manager I            * 00049000
****** END OF SPECIFICATIONS *****************************************/ 00049100
*/********************************************************************* 00049200
         MACRO                                                          00049300
&XLABEL  IWMMSWCH &FUNCTION=,&RUNTIME_VER=,&WHERE=,&MONTKN=,&COMPCODE=,*00049400
               &RETCODE=,&RSNCODE=,&MF=                                 00049500
.*                                                                      00049600
*                 MACDATE -11/04/93-<0>                                 00049700
.*                                                                      00049800
.*******************************************************************    00049900
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00050000
.*******************************************************************    00050100
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00050200
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00050300
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00050400
.*                                                                      00050500
                 GBLC  &ZIWMMSWCH  YES=MACRO USED AT LEAST ONCE         00050600
.*******************************************************************    00050700
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00050800
.*******************************************************************    00050900
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00051000
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         00051100
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00051200
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00051300
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00051400
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00051500
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00051600
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00051700
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00051800
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00051900
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00052000
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00052100
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00052200
.*                                                                      00052300
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00052400
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00052500
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00052600
.********************************************************************   00052700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00052800
.********************************************************************   00052900
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00053000
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00053100
.*                                                                      00053200
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00053300
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00053400
                 SPLEVEL  TEST                                          00053500
.ZSYS2           ANOP  ,                                                00053600
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00053700
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00053800
                 SYSSTATE TEST                                          00053900
                 AGO   .ZSYS4                                           00054000
.ZSYS3           ANOP  ,                                                00054100
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00054200
.ZSYS4           ANOP  ,                                                00054300
.*******************************************************************    00054400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00054500
.*******************************************************************    00054600
                 LCLC  &XFUNCTION  ++ VALUE                             00054700
                 LCLC  &XRUNTIME_VER            ++ VALUE                00054800
                 LCLC  &XWHERE     ++ VALUE                             00054900
                 LCLC  &XMONTKN    ++ NAME                              00055000
                 LCLC  &XCOMPCODE  ++ VALUE                             00055100
                 LCLC  &XRETCODE   ++ NAME                              00055200
                 LCLC  &XRSNCODE   ++ NAME                              00055300
                 LCLC  &XMF        ++ VALUE                             00055400
                 LCLC  &XMFCTRL    ++ NAME                              00055500
                 LCLC  &XMFATTR    ++ VALUE                             00055600
                 LCLC  &XMFSCK     ++ VALUE                             00055700
.*******************************************************************    00055800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00055900
.*******************************************************************    00056000
                 LCLC  &ZXFUNCTION              ++ INPUT VALUE          00056100
                 LCLC  &ZXRUNTIME_VER           ++ INPUT VALUE          00056200
                 LCLC  &ZXWHERE    ++ INPUT VALUE                       00056300
                 LCLC  &ZXMONTKN   ++ INPUT NAME                        00056400
                 LCLC  &ZXCOMPCODE              ++ INPUT VALUE          00056500
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00056600
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00056700
                 LCLC  &ZXMF       ++ INPUT VALUE                       00056800
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00056900
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00057000
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00057100
.********************************************************************   00057200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00057300
.********************************************************************   00057400
                 ACTR  10000                                            00057500
.*------------------------------------------------------------------    00057600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00057700
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00057800
.*-------------------------------------------------------------------   00057900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00058000
.ZG38            ANOP  ,                                                00058100
&ZTLC            SETC 'S'                                               00058200
                 AIF   ('&MF(1)' NE '&ZTLC').ZG39                       00058300
&XMF             SETC  'S'         SET KEYWORD                          00058400
                 AIF   (N'&MF LE 1).ZG38A       CK NUM                  00058500
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00058600
&ZMS             SETC  '&ZMS.&MF"'                                      00058700
&ZMS             SETC  '&ZMS "MF"'                                      00058800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00058900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00059000
.ZG38A           ANOP  ,                                                00059100
.*-------------------------------------------------------------------   00059200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00059300
.ZG39            ANOP  ,                                                00059400
&ZTLC            SETC 'L'                                               00059500
                 AIF   ('&MF(1)' NE '&ZTLC').ZG46                       00059600
&XMF             SETC  'L'         SET KEYWORD                          00059700
                 AIF   (N'&MF LE 3).ZG39A       CK NUM                  00059800
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00059900
&ZMS             SETC  '&ZMS.&MF"'                                      00060000
&ZMS             SETC  '&ZMS "MF"'                                      00060100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00060200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00060300
.ZG39A           ANOP  ,                                                00060400
.*-------------------------------------------------------------------   00060500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00060600
                 AIF   (N'&SYSLIST NE 0).ZG39B  POSITIONALS?            00060700
                 AIF   ('&FUNCTION' NE '').ZG39B  KEYS?                 00060800
                 AIF   ('&RUNTIME_VER' NE '').ZG39B  KEYS?              00060900
                 AIF   ('&WHERE' NE '').ZG39B   KEYS?                   00061000
                 AIF   ('&MONTKN' NE '').ZG39B  KEYS?                   00061100
                 AIF   ('&COMPCODE' NE '').ZG39B  KEYS?                 00061200
                 AIF   ('&RETCODE' NE '').ZG39B  KEYS?                  00061300
                 AIF   ('&RSNCODE' NE '').ZG39B  KEYS?                  00061400
                 AGO    .ZG39C     INVOCATION OKAY                      00061500
.ZG39B           ANOP  ,                                                00061600
&ZMS             SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE      00061700
&ZMS             SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                00061800
&ZMS             SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'           00061900
                 MNOTE 8,' &ZMS ON THE INVOCATION.'                     00062000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00062100
.ZG39C           ANOP  ,                                                00062200
.*-------------------------------------------------------------------   00062300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00062400
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00062500
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00062600
                 AIF   (N'&MF(2) GT 1).ZG41B    MULTI PARMS             00062700
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00062800
.ZG41B           AIF   (K'&MF(2) GT 0).ZG41C                            00062900
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00063000
&ZMS             SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                 00063100
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00063200
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00063300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00063400
.ZG41C           ANOP  ,                                                00063500
.*-------------------------------------------------------------------   00063600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00063700
                 AIF   (K'&ZXMFCTRL LE 0).ZG41P  NOT I/O                00063800
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG41P                   00063900
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00064000
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00064100
&ZMS             SETC  '&ZMS.&MF"'                                      00064200
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00064300
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00064400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00064500
.ZG41P           ANOP  ,                                                00064600
.*-------------------------------------------------------------------   00064700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00064800
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00064900
&XMFATTR         SETC  '0D'                                             00065000
                 AIF   (K'&MF(3) LE 0).ZG44B    PARM                    00065100
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00065200
                 AIF   (N'&MF(3) GT 1).ZG44B    MULTI PARMS             00065300
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00065400
.ZG44B           ANOP  ,                                                00065500
.*-------------------------------------------------------------------   00065600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00065700
                 AIF   (K'&ZXMFATTR LE 0).ZG44P  NOT I/O                00065800
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG44P                   00065900
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00066000
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00066100
&ZMS             SETC  '&ZMS.&MF"'                                      00066200
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00066300
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00066400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00066500
.ZG44P           ANOP  ,                                                00066600
.*-------------------------------------------------------------------   00066700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00066800
                 AIF   (K'&ZXMFATTR LE 0).ZG44S  NOT I/O                00066900
                 AIF   (K'&XMFATTR LE 60).ZG44S  LNG OK                 00067000
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00067100
&ZMS             SETC  '"MF='      *KLNGA* MNOTE                        00067200
&ZMS             SETC  '&ZMS.&MF"'                                      00067300
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00067400
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00067500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00067600
.ZG44S           ANOP  ,                                                00067700
.*-------------------------------------------------------------------   00067800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067900
.ZG46            ANOP  ,                                                00068000
&ZTLC            SETC 'E'                                               00068100
                 AIF   ('&MF(1)' NE '&ZTLC').ZG54                       00068200
&XMF             SETC  'E'         SET KEYWORD                          00068300
                 AIF   (N'&MF LE 3).ZG46A       CK NUM                  00068400
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00068500
&ZMS             SETC  '&ZMS.&MF"'                                      00068600
&ZMS             SETC  '&ZMS "MF"'                                      00068700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00068800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00068900
.ZG46A           ANOP  ,                                                00069000
.*-------------------------------------------------------------------   00069100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00069200
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00069300
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00069400
                 AIF   (N'&MF(2) GT 1).ZG48B    MULTI PARMS             00069500
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00069600
.ZG48B           AIF   (K'&MF(2) GT 0).ZG48C                            00069700
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00069800
&ZMS             SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                 00069900
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00070000
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00070100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00070200
.ZG48C           ANOP  ,                                                00070300
.*-------------------------------------------------------------------   00070400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00070500
                 AIF   (K'&ZXMFCTRL LE 0).ZG48R  NOT I/O                00070600
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG48R                   00070700
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00070800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                     00070900
                 AIF   (K'&ZCGPR GT 2).ZG48Q                            00071000
                 AIF   ('&ZCGPR' EQ '0').ZG48Q                          00071100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00071200
                 AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME        00071300
.ZG48P           ANOP  ,                                                00071400
                 AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC             00071500
                 AIF   ('&ZCGPR' LT '1').ZG48Q                          00071600
                 AIF   ('&ZCGPR' LE '12').ZG48R                         00071700
.ZG48Q           ANOP  ,                                                00071800
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00071900
&ZMS             SETC  '&ZMS.&MF"'                                      00072000
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00072100
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00072200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00072300
.ZG48R           ANOP  ,                                                00072400
.*-------------------------------------------------------------------   00072500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00072600
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00072700
.ZG52A   AIF   ('&MF(3)' NE 'COMPLETE').ZG53A                           00072800
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00072900
.*-------------------------------------------------------------------   00073000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00073100
.ZG53A           AIF   (K'&XMFSCK GT 0).ZG53C   KEYWORD                 00073200
                 AIF   (K'&MF(3) LE 0).ZG53B                            00073300
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00073400
&ZMS             SETC  '&ZMS.&MF"'                                      00073500
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00073600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00073700
&ZMS             SETC  '&ZMS "COMPLETE".'       VALID KEYWORD           00073800
                 MNOTE 8,' &ZMS '                                       00073900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00074000
.ZG53B           ANOP  ,                                                00074100
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00074200
.ZG53C           ANOP  ,                                                00074300
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00074400
.*------------------------------------------------------------------    00074500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074600
.ZG54            ANOP  ,                                                00074700
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00074800
                 AIF   (K'&XMF GT 0).ZG54E      VALID ARG               00074900
                 AIF   (T'&MF EQ 'O').ZG54D     OMITTED                 00075000
&ZASYSLNDX       SETA  0                                                00075100
.ZG54A           ANOP  ,           POSITIONAL MACRO KEY                 00075200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00075300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG54C                 00075400
&ZTLC            SETC 'MF'                                              00075500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG54A        00075600
.ZG54B           ANOP  ,                                                00075700
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00075800
&ZMS             SETC  'THE "MF" KEY'           *KOPTA* MNOTE           00075900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00076000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00076100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00076200
                 AGO   .ZG54E                                           00076300
.ZG54C           ANOP  ,                                                00076400
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00076500
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00076600
&ZMS             SETC  '&ZMS.&MF"'                                      00076700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00076800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00076900
&ZMS             SETC  '&ZMS "S",'              VALID KEYWORD           00077000
&ZMS             SETC  '&ZMS "L",'              VALID KEYWORD           00077100
&ZMS             SETC  '&ZMS OR "E".'           VALID KEYWORD           00077200
                 MNOTE 8,' &ZMS '                                       00077300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00077400
                 AGO   .ZG54E                                           00077500
.ZG54D           ANOP  ,                                                00077600
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00077700
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00077800
.ZG54E           ANOP  ,                                                00077900
.********************************************************************   00078000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00078100
.********************************************************************   00078200
                 ACTR  10000                                            00078300
.*-------------------------------------------------------------------   00078400
.***AG.MF03 MF=(SLE)                                                    00078500
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00078600
.*------------------------------------------------------------------    00078700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078800
&XFUNCTION       SETC  ''          INITIALIZE XVARIABLE                 00078900
.*-------------------------------------------------------------------   00079000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079100
.ZG3             ANOP  ,                                                00079200
                 AIF   (K'&FUNCTION(1) LE 0).ZG3A                       00079300
&ZTLC            SETC 'CONTINUE'                                        00079400
                 AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG15                 00079500
&XFUNCTION       SETC  'CONTINUE'  SET KEYWORD                          00079600
                 AIF   (N'&FUNCTION LE 1).ZG3A  CK NUM                  00079700
&ZMS             SETC  '"FUNCTION='             *KPOSA* MNOTE           00079800
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00079900
&ZMS             SETC  '&ZMS "FUNCTION"'                                00080000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00080100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00080200
.ZG3A            ANOP  ,                                                00080300
.*------------------------------------------------------------------    00080400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00080500
&XRUNTIME_VER    SETC  ''          INITIALIZE XVARIABLE                 00080600
.*-------------------------------------------------------------------   00080700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00080800
.ZG6             ANOP  ,                                                00080900
                 AIF   (K'&RUNTIME_VER(1) LE 0).ZG6A                    00081000
&ZTLC            SETC 'SHORT_FORM'                                      00081100
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG7               00081200
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET KEYWORD             00081300
                 AIF   (N'&RUNTIME_VER LE 1).ZG6A  CK NUM               00081400
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00081500
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00081600
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00081700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00081800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00081900
.ZG6A            ANOP  ,                                                00082000
.*-------------------------------------------------------------------   00082100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00082200
.ZG7             ANOP  ,                                                00082300
&ZTLC            SETC 'MINIMAL'                                         00082400
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG8               00082500
&XRUNTIME_VER    SETC  'MINIMAL'   SET KEYWORD                          00082600
                 AIF   (N'&RUNTIME_VER LE 1).ZG7A  CK NUM               00082700
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00082800
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00082900
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00083000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00083100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00083200
.ZG7A            ANOP  ,                                                00083300
.*------------------------------------------------------------------    00083400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083500
.ZG8             ANOP  ,                                                00083600
&ZXRUNTIME_VER   SETC  'INPUT'     SET IN/OUTPUT                        00083700
                 AIF   (K'&XRUNTIME_VER GT 0).ZG8E  VALID ARG           00083800
                 AIF   (T'&RUNTIME_VER EQ 'O').ZG8D  OMITTED            00083900
&ZASYSLNDX       SETA  0                                                00084000
.ZG8A            ANOP  ,           POSITIONAL MACRO KEY                 00084100
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00084200
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG8C                  00084300
&ZTLC            SETC 'RUNTIME_VER'                                     00084400
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG8A         00084500
.ZG8B            ANOP  ,                                                00084600
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00084700
&ZMS             SETC  'THE "RUNTIME_VER" KEY'  *KOPTA* MNOTE           00084800
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00084900
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00085000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00085100
                 AGO   .ZG8E                                            00085200
.ZG8C            ANOP  ,                                                00085300
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00085400
&ZMS             SETC  '"RUNTIME_VER='          *KUKWA* MNOTE           00085500
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00085600
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00085700
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00085800
&ZMS             SETC  '&ZMS "SHORT_FORM"'      VALID KEYWORD           00085900
&ZMS             SETC  '&ZMS OR "MINIMAL".'     VALID KEYWORD           00086000
                 MNOTE 8,' &ZMS '                                       00086100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00086200
                 AGO   .ZG8E                                            00086300
.ZG8D            ANOP  ,                                                00086400
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET DEFAULT KEYWORD     00086500
.ZG8E            ANOP  ,                                                00086600
.*------------------------------------------------------------------    00086700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00086800
&XWHERE          SETC  ''          INITIALIZE XVARIABLE                 00086900
.*-------------------------------------------------------------------   00087000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00087100
.ZG11            ANOP  ,                                                00087200
                 AIF   (K'&WHERE(1) LE 0).ZG11A                         00087300
&ZTLC            SETC 'LOCALMVS'                                        00087400
                 AIF   ('&WHERE(1)' NE '&ZTLC').ZG12                    00087500
&XWHERE          SETC  'LOCALMVS'  SET KEYWORD                          00087600
                 AIF   (N'&WHERE LE 1).ZG11A    CK NUM                  00087700
&ZMS             SETC  '"WHERE='   *KPOSA* MNOTE                        00087800
&ZMS             SETC  '&ZMS.&WHERE"'                                   00087900
&ZMS             SETC  '&ZMS "WHERE"'                                   00088000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00088100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00088200
.ZG11A           ANOP  ,                                                00088300
.*-------------------------------------------------------------------   00088400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088500
.ZG12            ANOP  ,                                                00088600
&ZTLC            SETC 'SYSPLEX'                                         00088700
                 AIF   ('&WHERE(1)' NE '&ZTLC').ZG13                    00088800
&XWHERE          SETC  'SYSPLEX'   SET KEYWORD                          00088900
                 AIF   (N'&WHERE LE 1).ZG12A    CK NUM                  00089000
&ZMS             SETC  '"WHERE='   *KPOSA* MNOTE                        00089100
&ZMS             SETC  '&ZMS.&WHERE"'                                   00089200
&ZMS             SETC  '&ZMS "WHERE"'                                   00089300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00089400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00089500
.ZG12A           ANOP  ,                                                00089600
.*-------------------------------------------------------------------   00089700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089800
.ZG13            ANOP  ,                                                00089900
&ZTLC            SETC 'NETWORK'                                         00090000
                 AIF   ('&WHERE(1)' NE '&ZTLC').ZG14                    00090100
&XWHERE          SETC  'NETWORK'   SET KEYWORD                          00090200
                 AIF   (N'&WHERE LE 1).ZG13A    CK NUM                  00090300
&ZMS             SETC  '"WHERE='   *KPOSA* MNOTE                        00090400
&ZMS             SETC  '&ZMS.&WHERE"'                                   00090500
&ZMS             SETC  '&ZMS "WHERE"'                                   00090600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00090700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00090800
.ZG13A           ANOP  ,                                                00090900
.*------------------------------------------------------------------    00091000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00091100
.ZG14            ANOP  ,                                                00091200
&ZXWHERE         SETC  'INPUT'     SET IN/OUTPUT                        00091300
                 AIF   (K'&XWHERE GT 0).ZG14E   VALID ARG               00091400
                 AIF   (T'&WHERE EQ 'O').ZG14D  OMITTED                 00091500
&ZASYSLNDX       SETA  0                                                00091600
.ZG14A           ANOP  ,           POSITIONAL MACRO KEY                 00091700
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00091800
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG14C                 00091900
&ZTLC            SETC 'WHERE'                                           00092000
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG14A        00092100
.ZG14B           ANOP  ,                                                00092200
&ZXWHERE         SETC  ''          RESET IN/OUTPUT                      00092300
&ZMS             SETC  'THE "WHERE" KEY'        *KOPTA* MNOTE           00092400
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00092500
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00092600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00092700
                 AGO   .ZG14E                                           00092800
.ZG14C           ANOP  ,                                                00092900
&ZXWHERE         SETC  ''          RESET IN/OUTPUT                      00093000
&ZMS             SETC  '"WHERE='   *KUKWA* MNOTE                        00093100
&ZMS             SETC  '&ZMS.&WHERE"'                                   00093200
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00093300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00093400
&ZMS             SETC  '&ZMS "LOCALMVS",'       VALID KEYWORD           00093500
&ZMS             SETC  '&ZMS "SYSPLEX",'        VALID KEYWORD           00093600
&ZMS             SETC  '&ZMS OR "NETWORK".'     VALID KEYWORD           00093700
                 MNOTE 8,' &ZMS '                                       00093800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00093900
                 AGO   .ZG14E                                           00094000
.ZG14D           ANOP  ,                                                00094100
&XWHERE          SETC  'LOCALMVS'  SET DEFAULT KEYWORD                  00094200
.ZG14E           ANOP  ,                                                00094300
.*------------------------------------------------------------------    00094400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094500
                 AIF   (K'&WHERE(1) GT 0).ZG14F  PARM                   00094600
&XWHERE          SETC  ''          ENSURE NULL KEYWORD                  00094700
&ZXWHERE         SETC  ''          RESET IN/OUTPUT                      00094800
&ZMS             SETC  'THE'                                            00094900
&ZMS             SETC  '&ZMS "WHERE" KEY AND ITS ARGUMENT'              00095000
&ZMS             SETC  '&ZMS ARE REQUIRED.'                             00095100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00095200
&ZMS             SETC  '&ZMS "LOCALMVS",'       VALID KEYWORD           00095300
&ZMS             SETC  '&ZMS "SYSPLEX",'        VALID KEYWORD           00095400
&ZMS             SETC  '&ZMS OR "NETWORK".'     VALID KEYWORD           00095500
                 MNOTE 8,' &ZMS '                                       00095600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00095700
.ZG14F           ANOP  ,                                                00095800
.*-------------------------------------------------------------------   00095900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00096000
.ZG15            ANOP  ,                                                00096100
&ZTLC            SETC 'RETURN'                                          00096200
                 AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG21                 00096300
&XFUNCTION       SETC  'RETURN'    SET KEYWORD                          00096400
                 AIF   (N'&FUNCTION LE 1).ZG15A  CK NUM                 00096500
&ZMS             SETC  '"FUNCTION='             *KPOSA* MNOTE           00096600
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00096700
&ZMS             SETC  '&ZMS "FUNCTION"'                                00096800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00096900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00097000
.ZG15A           ANOP  ,                                                00097100
.*------------------------------------------------------------------    00097200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00097300
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00097400
.ZG15A0          AIF   (K'&WHERE LE 0).ZG15A1   OK                      00097500
&ZCVAL           SETC '&ZCVAL WHERE'            INCORRECT KEY USED      00097600
.ZG15A1          AIF   (K'&ZCVAL LE 0).ZG15A2   OK                      00097700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00097800
&ZMS             SETC  '"FUNCTION'              *KMEIA* MNOTE           00097900
&ZMS             SETC  '&ZMS.=&FUNCTION"'                               00098000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00098100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00098200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00098300
.ZG15A2          ANOP  ,                                                00098400
.*------------------------------------------------------------------    00098500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00098600
&XRUNTIME_VER    SETC  ''          INITIALIZE XVARIABLE                 00098700
.*-------------------------------------------------------------------   00098800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00098900
.ZG18            ANOP  ,                                                00099000
                 AIF   (K'&RUNTIME_VER(1) LE 0).ZG18A                   00099100
&ZTLC            SETC 'SHORT_FORM'                                      00099200
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG19              00099300
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET KEYWORD             00099400
                 AIF   (N'&RUNTIME_VER LE 1).ZG18A  CK NUM              00099500
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00099600
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00099700
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00099800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00099900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00100000
.ZG18A           ANOP  ,                                                00100100
.*-------------------------------------------------------------------   00100200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00100300
.ZG19            ANOP  ,                                                00100400
&ZTLC            SETC 'MINIMAL'                                         00100500
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG20              00100600
&XRUNTIME_VER    SETC  'MINIMAL'   SET KEYWORD                          00100700
                 AIF   (N'&RUNTIME_VER LE 1).ZG19A  CK NUM              00100800
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00100900
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00101000
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00101100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00101200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00101300
.ZG19A           ANOP  ,                                                00101400
.*------------------------------------------------------------------    00101500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00101600
.ZG20            ANOP  ,                                                00101700
&ZXRUNTIME_VER   SETC  'INPUT'     SET IN/OUTPUT                        00101800
                 AIF   (K'&XRUNTIME_VER GT 0).ZG20E  VALID ARG          00101900
                 AIF   (T'&RUNTIME_VER EQ 'O').ZG20D  OMITTED           00102000
&ZASYSLNDX       SETA  0                                                00102100
.ZG20A           ANOP  ,           POSITIONAL MACRO KEY                 00102200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00102300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20C                 00102400
&ZTLC            SETC 'RUNTIME_VER'                                     00102500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG20A        00102600
.ZG20B           ANOP  ,                                                00102700
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00102800
&ZMS             SETC  'THE "RUNTIME_VER" KEY'  *KOPTA* MNOTE           00102900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00103000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00103100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00103200
                 AGO   .ZG20E                                           00103300
.ZG20C           ANOP  ,                                                00103400
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00103500
&ZMS             SETC  '"RUNTIME_VER='          *KUKWA* MNOTE           00103600
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00103700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00103800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00103900
&ZMS             SETC  '&ZMS "SHORT_FORM"'      VALID KEYWORD           00104000
&ZMS             SETC  '&ZMS OR "MINIMAL".'     VALID KEYWORD           00104100
                 MNOTE 8,' &ZMS '                                       00104200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00104300
                 AGO   .ZG20E                                           00104400
.ZG20D           ANOP  ,                                                00104500
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET DEFAULT KEYWORD     00104600
.ZG20E           ANOP  ,                                                00104700
.*------------------------------------------------------------------    00104800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00104900
.ZG21            ANOP  ,                                                00105000
&ZXFUNCTION      SETC  'INPUT'     SET IN/OUTPUT                        00105100
                 AIF   (K'&XFUNCTION GT 0).ZG21E  VALID ARG             00105200
                 AIF   (T'&FUNCTION EQ 'O').ZG21D  OMITTED              00105300
&ZASYSLNDX       SETA  0                                                00105400
.ZG21A           ANOP  ,           POSITIONAL MACRO KEY                 00105500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00105600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG21C                 00105700
&ZTLC            SETC 'FUNCTION'                                        00105800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG21A        00105900
.ZG21B           ANOP  ,                                                00106000
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00106100
&ZMS             SETC  'THE "FUNCTION" KEY'     *KOPTA* MNOTE           00106200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00106300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00106400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00106500
                 AGO   .ZG21E                                           00106600
.ZG21C           ANOP  ,                                                00106700
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00106800
&ZMS             SETC  '"FUNCTION='             *KUKWA* MNOTE           00106900
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00107000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00107100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00107200
&ZMS             SETC  '&ZMS "CONTINUE"'        VALID KEYWORD           00107300
&ZMS             SETC  '&ZMS OR "RETURN".'      VALID KEYWORD           00107400
                 MNOTE 8,' &ZMS '                                       00107500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00107600
                 AGO   .ZG21E                                           00107700
.ZG21D           ANOP  ,                                                00107800
&XFUNCTION       SETC  'CONTINUE'  SET DEFAULT KEYWORD                  00107900
.ZG21E           ANOP  ,                                                00108000
.*------------------------------------------------------------------    00108100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00108200
                 AIF   (K'&FUNCTION(1) GT 0).ZG21F  PARM                00108300
&XFUNCTION       SETC  ''          ENSURE NULL KEYWORD                  00108400
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00108500
&ZMS             SETC  'THE'                                            00108600
&ZMS             SETC  '&ZMS "FUNCTION" KEY AND ITS ARGUMENT'           00108700
&ZMS             SETC  '&ZMS ARE REQUIRED.'                             00108800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00108900
&ZMS             SETC  '&ZMS "CONTINUE"'        VALID KEYWORD           00109000
&ZMS             SETC  '&ZMS OR "RETURN".'      VALID KEYWORD           00109100
                 MNOTE 8,' &ZMS '                                       00109200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00109300
.ZG21F           ANOP  ,                                                00109400
.*----------------------------------------------------------------***   00109500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00109600
                 AIF   (N'&MONTKN LE 1).ZG23A   CK NUM                  00109700
&ZMS             SETC  '"MONTKN='  *KPOSA* MNOTE                        00109800
&ZMS             SETC  '&ZMS.&MONTKN"'                                  00109900
&ZMS             SETC  '&ZMS "MONTKN"'                                  00110000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00110100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00110200
.ZG23A           ANOP  ,                                                00110300
.*-------------------------------------------------------------------   00110400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00110500
&ZXMONTKN        SETC  'INPUT'     SET IN/OUTPUT                        00110600
&XMONTKN         SETC  '&MONTKN(1)'             SET XVARIABLE           00110700
                 AIF   (N'&MONTKN GT 1).ZG23B   MULTI PARMS             00110800
&XMONTKN         SETC  '&MONTKN'   SET XVARIABLE                        00110900
.ZG23B           AIF   (K'&MONTKN(1) GT 0).ZG23C                        00111000
&ZXMONTKN        SETC  ''          RESET IN/OUTPUT                      00111100
&ZMS             SETC  ' '         *KRQDA*                              00111200
&ZMS             SETC  '&ZMS "MONTKN" KEY AND ITS ARGUMENT'             00111300
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00111400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00111500
.ZG23C           ANOP  ,                                                00111600
.*-------------------------------------------------------------------   00111700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00111800
                 AIF   (K'&ZXMONTKN LE 0).ZG23R  NOT I/O                00111900
                 AIF   ('&XMONTKN'(1,1) NE '(').ZG23R                   00112000
&ZCGPR           SETC  '&XMONTKN'(2,K'&XMONTKN-2)                       00112100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                     00112200
                 AIF   (K'&ZCGPR GT 2).ZG23Q                            00112300
                 AIF   ('&ZCGPR' EQ '0').ZG23Q                          00112400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00112500
                 AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME        00112600
.ZG23P           ANOP  ,                                                00112700
                 AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC             00112800
                 AIF   ('&ZCGPR' LT '2').ZG23Q                          00112900
                 AIF   ('&ZCGPR' LE '12').ZG23R                         00113000
.ZG23Q           ANOP  ,                                                00113100
&ZMS             SETC  '"MONTKN='  *KGPRA* MNOTE                        00113200
&ZMS             SETC  '&ZMS.&MONTKN"'                                  00113300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00113400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00113500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00113600
.ZG23R           ANOP  ,                                                00113700
.*------------------------------------------------------------------    00113800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00113900
&XCOMPCODE       SETC  ''          INITIALIZE XVARIABLE                 00114000
.*-------------------------------------------------------------------   00114100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00114200
.ZG27            ANOP  ,                                                00114300
                 AIF   (K'&COMPCODE(1) LE 0).ZG27A                      00114400
&ZTLC            SETC 'YES'                                             00114500
                 AIF   ('&COMPCODE(1)' NE '&ZTLC').ZG28                 00114600
&XCOMPCODE       SETC  'YES'       SET KEYWORD                          00114700
                 AIF   (N'&COMPCODE LE 1).ZG27A  CK NUM                 00114800
&ZMS             SETC  '"COMPCODE='             *KPOSA* MNOTE           00114900
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00115000
&ZMS             SETC  '&ZMS "COMPCODE"'                                00115100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00115200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00115300
.ZG27A           ANOP  ,                                                00115400
.*-------------------------------------------------------------------   00115500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00115600
.ZG28            ANOP  ,                                                00115700
&ZTLC            SETC 'NO'                                              00115800
                 AIF   ('&COMPCODE(1)' NE '&ZTLC').ZG29                 00115900
&XCOMPCODE       SETC  'NO'        SET KEYWORD                          00116000
                 AIF   (N'&COMPCODE LE 1).ZG28A  CK NUM                 00116100
&ZMS             SETC  '"COMPCODE='             *KPOSA* MNOTE           00116200
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00116300
&ZMS             SETC  '&ZMS "COMPCODE"'                                00116400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00116500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00116600
.ZG28A           ANOP  ,                                                00116700
.*------------------------------------------------------------------    00116800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00116900
.ZG29            ANOP  ,                                                00117000
&ZXCOMPCODE      SETC  'INPUT'     SET IN/OUTPUT                        00117100
                 AIF   (K'&XCOMPCODE GT 0).ZG29E  VALID ARG             00117200
                 AIF   (T'&COMPCODE EQ 'O').ZG29D  OMITTED              00117300
&ZASYSLNDX       SETA  0                                                00117400
.ZG29A           ANOP  ,           POSITIONAL MACRO KEY                 00117500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00117600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG29C                 00117700
&ZTLC            SETC 'COMPCODE'                                        00117800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG29A        00117900
.ZG29B           ANOP  ,                                                00118000
&ZXCOMPCODE      SETC  ''          RESET IN/OUTPUT                      00118100
&ZMS             SETC  'THE "COMPCODE" KEY'     *KOPTA* MNOTE           00118200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00118300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00118400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00118500
                 AGO   .ZG29E                                           00118600
.ZG29C           ANOP  ,                                                00118700
&ZXCOMPCODE      SETC  ''          RESET IN/OUTPUT                      00118800
&ZMS             SETC  '"COMPCODE='             *KUKWA* MNOTE           00118900
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00119000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00119100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00119200
&ZMS             SETC  '&ZMS "YES"'             VALID KEYWORD           00119300
&ZMS             SETC  '&ZMS OR "NO".'          VALID KEYWORD           00119400
                 MNOTE 8,' &ZMS '                                       00119500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00119600
                 AGO   .ZG29E                                           00119700
.ZG29D           ANOP  ,                                                00119800
&XCOMPCODE       SETC  'YES'       SET DEFAULT KEYWORD                  00119900
.ZG29E           ANOP  ,                                                00120000
.*----------------------------------------------------------------***   00120100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00120200
                 AIF   (N'&RETCODE LE 1).ZG31A  CK NUM                  00120300
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00120400
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00120500
&ZMS             SETC  '&ZMS "RETCODE"'                                 00120600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00120700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00120800
.ZG31A           ANOP  ,                                                00120900
.*-------------------------------------------------------------------   00121000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00121100
                 AIF   (K'&RETCODE(1) LE 0).ZG31C  NO PARM              00121200
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00121300
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00121400
                 AIF   (N'&RETCODE GT 1).ZG31C                          00121500
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00121600
.ZG31C           ANOP  ,                                                00121700
.*-------------------------------------------------------------------   00121800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00121900
                 AIF   (K'&ZXRETCODE LE 0).ZG31R  NOT I/O               00122000
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG31R                  00122100
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00122200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                     00122300
                 AIF   (K'&ZCGPR GT 2).ZG31Q                            00122400
                 AIF   ('&ZCGPR' EQ '0').ZG31Q                          00122500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00122600
                 AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME        00122700
.ZG31P           ANOP  ,                                                00122800
                 AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC             00122900
                 AIF   ('&ZCGPR' LT '2').ZG31Q                          00123000
                 AIF   ('&ZCGPR' LE '12').ZG31R                         00123100
.ZG31Q           ANOP  ,                                                00123200
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00123300
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00123400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00123500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00123600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00123700
.ZG31R           ANOP  ,                                                00123800
.*----------------------------------------------------------------***   00123900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00124000
                 AIF   (N'&RSNCODE LE 1).ZG34A  CK NUM                  00124100
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00124200
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00124300
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00124400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00124500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00124600
.ZG34A           ANOP  ,                                                00124700
.*-------------------------------------------------------------------   00124800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00124900
                 AIF   (K'&RSNCODE(1) LE 0).ZG34C  NO PARM              00125000
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00125100
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00125200
                 AIF   (N'&RSNCODE GT 1).ZG34C                          00125300
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00125400
.ZG34C           ANOP  ,                                                00125500
.*-------------------------------------------------------------------   00125600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00125700
                 AIF   (K'&ZXRSNCODE LE 0).ZG34R  NOT I/O               00125800
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG34R                  00125900
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00126000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                     00126100
                 AIF   (K'&ZCGPR GT 2).ZG34Q                            00126200
                 AIF   ('&ZCGPR' EQ '0').ZG34Q                          00126300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00126400
                 AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME        00126500
.ZG34P           ANOP  ,                                                00126600
                 AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC             00126700
                 AIF   ('&ZCGPR' LT '2').ZG34Q                          00126800
                 AIF   ('&ZCGPR' LE '12').ZG34R                         00126900
.ZG34Q           ANOP  ,                                                00127000
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00127100
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00127200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00127300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00127400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00127500
.ZG34R           ANOP  ,                                                00127600
.******************************************************************     00127700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00127800
.******************************************************************     00127900
                 ACTR  10000                                            00128000
.*----------------------------------------------------------------***   00128100
.***AH.P02 EXTRA POSITIONALS                                            00128200
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00128300
&ZCVAL           SETC  ''          ERROR FIELD                          00128400
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00128500
.ZGLIST2         ANOP  ,                                                00128600
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00128700
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00128800
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00128900
                 AGO   .ZGLIST2                                         00129000
.*                                                                      00129100
.ZGLIST3         ANOP  ,                                                00129200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00129300
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00129400
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00129500
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00129600
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00129700
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00129800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00129900
.ZGLISTX         ANOP  ,                                                00130000
&ZASYSLNDX       SETA  0                                                00130100
.*-------------------------------------------------------------------   00130200
.***AG.MF04 MF=(SLE)                                                    00130300
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00130400
.*******************************************************************    00130500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00130600
.*******************************************************************    00130700
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00130800
.*******************************************************************    00130900
.***AE.01  START OF IWMMSWCH MACRO CODE                                 00131000
.*******************************************************************    00131100
                 LCLC  &M0M0001                 NAME                    00131200
&M0M0001         SETC  '&XLABEL'                SET NAME                00131300
                 AIF   (K'&XLABEL NE 0).XLAB2                           00131400
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00131500
.*                                                                      00131600
.XLAB2           ANOP  ,                                                00131700
&M0M0001 DS    0H                             IWMMSWCH-0                00131800
.*******************************************************************    00131900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00132000
.*******************************************************************    00132100
              PUSH  PRINT                                               00132200
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00132300
                 PRINT OFF         ++ PR01                              00132400
                 AGO   .ZPRNTXX                                         00132500
.ZPRINTX         PRINT ON                                               00132600
.ZPRNTXX         ANOP  ,                                                00132700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00132800
         LCLC  &T1                                                      00132900
         AIF   ('&XCOMPCODE' EQ 'YES').MFCHECKING                       00133000
         AIF   ('&XRETCODE' EQ '').RSNCODECHK                           00133100
&T1      SETC  'RETCODE, RSNCODE MAY NOT BE USED WITH COMPCODE(NO)'     00133200
         MNOTE 8,'&T1'                                                  00133300
         MEXIT                                                          00133400
.RSNCODECHK ANOP                                                        00133500
         AIF   ('&XRSNCODE' EQ '').MFCHECKING                           00133600
&T1      SETC  'RETCODE, RSNCODE MAY NOT BE USED WITH COMPCODE(NO)'     00133700
         MNOTE 8,'&T1'                                                  00133800
         MEXIT                                                          00133900
.MFCHECKING ANOP                                                        00134000
         AIF   ('&XFUNCTION' EQ 'CONTINUE').TESTMF                      00134100
         AIF   ('&XFUNCTION' EQ 'RETURN').MFOK                          00134200
         AGO   .LINKAGELOGIC                                            00134300
.TESTMF  ANOP                                                           00134400
    AIF ('&MF' EQ '').MFOK                                              00134500
&T1      SETC  'MF IS NOT VALID WITH FUNCTION(CONTINUE)'                00134600
         MNOTE 4,'&T1'                                                  00134700
.MFOK    ANOP                                                           00134800
&T1      SETC  '&MONTKN'                                                00134900
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00135000
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00135100
&T1      SETC  '0(&T1.)'                                                00135200
.MONTKNRS  ANOP                                                         00135300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00135400
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00135500
.* GENERATE CODE WHICH DEPENDS ON HOW COMPCODE WAS SPECIFIED            00135600
         AIF   ('&XCOMPCODE' NE 'YES').NOCOMPCODE1                      00135700
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00135800
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00135900
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00136000
         B     END&SYSNDX              BRANCH TO END LABEL              00136100
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00136200
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').ENDCOMPCODE1              00136300
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00136400
         BE    MONENVOK&SYSNDX         BRANCH WHEN MON ENV PASSES       00136500
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00136600
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00136700
         B     END&SYSNDX              BRANCH TO END LABEL              00136800
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00136900
                AGO .ENDCOMPCODE1                                       00137000
.* NOW GENERATE CODE WHEN COMPCODE(NO) WAS SPECIFIED                    00137100
.NOCOMPCODE1    ANOP                                                    00137200
         BZ    END&SYSNDX              BRANCH TO END LABEL              00137300
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').ENDCOMPCODE1              00137400
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00137500
         BNE   END&SYSNDX              BRANCH TO END LABEL              00137600
.ENDCOMPCODE1    ANOP                                                   00137700
         USING PB,14                                                    00137800
         ICM   15,15,PB_DEP_MIRROR_TKN  EXTRACT DEPENDENT MIRROR TOKEN  00137900
.*                                                                      00138000
         AIF   ('&XFUNCTION' NE 'CONTINUE').ENDCONTINUE                 00138100
.*                                                                      00138200
.*******************************************************************    00138300
.*                                                                      00138400
.*       FOLLOWING IS LOGIC FOR FUNCTION(CONTINUE)                      00138500
.*                                                                      00138600
.*******************************************************************    00138700
.* GENERATE CODE WHICH DEPENDS ON HOW COMPCODE WAS SPECIFIED            00138800
         AIF   ('&XCOMPCODE' NE 'YES').NOCOMPCODE2                      00138900
         BC    8,IWMMSWCH_NOCONT&SYSNDX BRANCH IF NO CUR CONTINUATION   00139000
         LA    0,IWMRSNCODECONTEXISTS  SET RSN = CONTINUATION EXISTS    00139100
         LA    15,IWMRETCODEINVOCERROR SET RC = INVOCATION ERROR        00139200
         B     END&SYSNDX              BRANCH TO END LABEL              00139300
IWMMSWCH_NOCONT&SYSNDX DS 0H       BRANCH LABEL FOR NO CUR CONTINUATION 00139400
         LA    15,IWMRETCODEOK SET RETURN CODE = OK                     00139500
                AGO .ENDCOMPCODE2                                       00139600
.* NOW GENERATE CODE WHEN COMPCODE(NO) WAS SPECIFIED                    00139700
.NOCOMPCODE2    ANOP                                                    00139800
         BNZ   END&SYSNDX              BRANCH TO END LABEL              00139900
.ENDCOMPCODE2    ANOP                                                   00140000
.*                                                                      00140100
         MVI   PB_SWITCH_INFO,PB_SWITCH_&XWHERE REFLECT CONTINUATION    00140200
         DROP  14                                                       00140300
END&SYSNDX DS    0H                    END LABEL                        00140400
.*******************************************************************    00140500
.***        RETURN CODE PROCESSING                                      00140600
.*******************************************************************    00140700
         AIF   (N'&RETCODE LE 0).IWMMSWCH_ENDRC_EXP                     00140800
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMSWCH_RC_REG                00140900
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMSWCH_ENDRC_EXP              00141000
         AIF   ('&XRETCODE' EQ 'REG15').IWMMSWCH_ENDRC_EXP              00141100
         AIF   ('&XRETCODE' EQ 'R15').IWMMSWCH_ENDRC_EXP                00141200
         AIF   ('&XRETCODE' EQ '15').IWMMSWCH_ENDRC_EXP                 00141300
         ST    15,&XRETCODE                                             00141400
         AGO   .IWMMSWCH_ENDRC_EXP                                      00141500
.*                                                                      00141600
.IWMMSWCH_RC_REG      ANOP  ,                                           00141700
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00141800
         AIF   ('&T1' EQ 'GPR15').IWMMSWCH_ENDRC_EXP                    00141900
         AIF   ('&T1' EQ 'REG15').IWMMSWCH_ENDRC_EXP                    00142000
         AIF   ('&T1' EQ 'R15').IWMMSWCH_ENDRC_EXP                      00142100
         AIF   ('&T1' EQ '15').IWMMSWCH_ENDRC_EXP                       00142200
         LR    &T1,15                                                   00142300
.IWMMSWCH_ENDRC_EXP   ANOP  ,                                           00142400
.*******************************************************************    00142500
.***        REASON CODE PROCESSING                                      00142600
.*******************************************************************    00142700
         AIF   (N'&RSNCODE LE 0).IWMMSWCH_ENDRSN_EXP                    00142800
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMSWCH_RSN_REG               00142900
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMSWCH_ENDRSN_EXP              00143000
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMSWCH_ENDRSN_EXP             00143100
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMSWCH_ENDRSN_EXP              00143200
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMSWCH_ENDRSN_EXP             00143300
         AIF   ('&XRSNCODE' EQ 'R0').IWMMSWCH_ENDRSN_EXP                00143400
         AIF   ('&XRSNCODE' EQ '0').IWMMSWCH_ENDRSN_EXP                 00143500
         AIF   ('&XRSNCODE' EQ '00').IWMMSWCH_ENDRSN_EXP                00143600
         ST    0,&XRSNCODE                                              00143700
         AGO   .IWMMSWCH_ENDRSN_EXP                                     00143800
.*                                                                      00143900
.IWMMSWCH_RSN_REG     ANOP  ,                                           00144000
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00144100
         AIF  ('&ZCGPR' EQ 'GPR0').IWMMSWCH_ENDRSN_EXP                  00144200
         AIF  ('&ZCGPR' EQ 'GPR00').IWMMSWCH_ENDRSN_EXP                 00144300
         AIF  ('&ZCGPR' EQ 'REG0').IWMMSWCH_ENDRSN_EXP                  00144400
         AIF  ('&ZCGPR' EQ 'REG00').IWMMSWCH_ENDRSN_EXP                 00144500
         AIF  ('&ZCGPR' EQ 'R0').IWMMSWCH_ENDRSN_EXP                    00144600
         AIF  ('&ZCGPR' EQ '0').IWMMSWCH_ENDRSN_EXP                     00144700
         AIF  ('&ZCGPR' EQ '00').IWMMSWCH_ENDRSN_EXP                    00144800
         LR   &T1,0                                                     00144900
.IWMMSWCH_ENDRSN_EXP  ANOP  ,                                           00145000
.*******************************************************************    00145100
&ZIWMMSWCH            SETC  'YES'          SET IWMMSWCH USED            00145200
         POP   PRINT                                                    00145300
*                                            IWMMSWCH END               00145400
         SPACE 1                                                        00145500
         MEXIT                                                          00145600
.ENDCONTINUE ANOP                                                       00145700
.*                                                                      00145800
.*******************************************************************    00145900
.*                                                                      00146000
.*       FOLLOWING IS LOGIC FOR FUNCTION(RETURN)                        00146100
.*                                                                      00146200
.*******************************************************************    00146300
         BC    7,IWMMSWCH_RET&SYSNDX    BRANCH IF CURRENT CONTINUATION  00146400
         MVI   PB_SWITCH_INFO,X'00'     REFLECT NO SWITCH OUTSTANDING   00146500
.* GENERATE CODE WHICH DEPENDS ON HOW COMPCODE WAS SPECIFIED            00146600
         AIF   ('&XCOMPCODE' NE 'YES').NOCOMPCODE3                      00146700
         LA    15,IWMRETCODEOK          SET RETURN CODE = OK            00146800
.NOCOMPCODE3    ANOP                                                    00146900
         B     END&SYSNDX               BRANCH TO END LABEL             00147000
IWMMSWCH_RET&SYSNDX DS    0H            CURRENT CONTINUATION EXISTS     00147100
         C     15,PB_MIRROR_TKN                                         00147200
         BE    IWMMSWCH_PC&SYSNDX       BRANCH TO FUNCTION(RETURN) PC   00147300
         MVI   PB_SWITCH_INFO,X'00'     REFLECT NO SWITCH OUTSTANDING   00147400
         SLR   1,1                                                      00147500
         ST    1,PB_DEP_MIRROR_TKN      CLEAR THE CONTINUATION INFO     00147600
         ST    1,PB_DEP_MONTKN          CLEAR THE CONTINUATION INFO     00147700
.* GENERATE CODE WHICH DEPENDS ON HOW COMPCODE WAS SPECIFIED            00147800
         AIF   ('&XCOMPCODE' NE 'YES').NOCOMPCODE4                      00147900
         LA    15,IWMRETCODEWARNING     SET RETURN CODE = WARNING       00148000
         LA    0,IWMRSNCODERETURNCONT   SET RSN CODE = RETURN FROM CONT 00148100
.NOCOMPCODE4    ANOP                                                    00148200
         B     END&SYSNDX               BRANCH TO END LABEL             00148300
         DROP  14                                                       00148400
.*                                                                      00148500
IWMMSWCH_PC&SYSNDX DS    0H             FUNCTION(RETURN) PC RTN NEEDED  00148600
.*                                                                      00148700
.LINKAGELOGIC ANOP                                                      00148800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00148900
.********************************************************************   00149000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00149100
.********************************************************************   00149200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00149300
                      LCLA  &ZOPN1         INVOCATION INDEX             00149400
                      LCLC  &ZOPL(4095)    LABEL                        00149500
                      LCLC  &ZOPO(4095)    OPERATION                    00149600
                      LCLC  &ZOPV(4095)    VALUE                        00149700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00149800
.*                                                                      00149900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00150000
.******************************************************************     00150100
.***AL.L10 IWMMSWCH FMT=LIST MF=S|L PARAMETERS                          00150200
.******************************************************************     00150300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00150400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00150500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00150600
&XMFATTR              SETC  '0D'                                        00150700
.*                                                                      00150800
&ZOPN                 SETA  &ZOPN+1                                     00150900
&ZOPL(&ZOPN)          SETC  ' '                                         00151000
&ZOPO(&ZOPN)          SETC  'B'                                         00151100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00151200
&ZOPD(&ZOPN)          SETC  '++ IWMMSWCH ARG PARMS'                     00151300
.*                                                                      00151400
&ZOPN                 SETA  &ZOPN+1                                     00151500
&ZOPL(&ZOPN)          SETC  ' '                                         00151600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00151700
&ZOPV(&ZOPN)          SETC  '1'                                         00151800
&ZOPD(&ZOPN)          SETC  ' '                                         00151900
.*                                                                      00152000
.ZLMFSL2              ANOP  ,                                           00152100
.*-------------------------------------------------------------------   00152200
.***AM.L01  IWMMSWCH FMT=LIST PARAMETERS                                00152300
&ZOPN                 SETA &ZOPN+1                                      00152400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00152500
&ZOPO(&ZOPN)          SETC 'DS'                                         00152600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00152700
&ZOPD(&ZOPN)          SETC '++ IWMMSWCH PARM LIST'                      00152800
.*-------------------------------------------------------------------   00152900
.***AM.L02 XVERSION XL1                                                 00153000
&ZOPN                 SETA &ZOPN+1                                      00153100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00153200
&ZOPO(&ZOPN)          SETC 'DS'                                         00153300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00153400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00153500
.*-------------------------------------------------------------------   00153600
.***AM.L03 XSWCH_OPTIONS BL.8                                           00153700
&ZOPN                 SETA &ZOPN+1                                      00153800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSWCH_OPTIONS'                    00153900
&ZOPO(&ZOPN)          SETC 'DS'                                         00154000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00154100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00154200
.*                                                                      00154300
&ZOPN                 SETA  &ZOPN+1                                     00154400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_RETURN'                00154500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00154600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00154700
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00154800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RETURN'                       00154900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00155000
.*-------------------------------------------------------------------   00155100
.***AM.L09  XRSV0002 CL2                                                00155200
&ZOPN                 SETA &ZOPN+1                                      00155300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00155400
&ZOPO(&ZOPN)          SETC 'DS'                                         00155500
&ZOPV(&ZOPN)          SETC 'CL2'                                        00155600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00155700
.*-------------------------------------------------------------------   00155800
.***AM.L09  XMONTKN BL.32                                               00155900
&ZOPN                 SETA &ZOPN+1                                      00156000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN'                          00156100
&ZOPO(&ZOPN)          SETC 'DS'                                         00156200
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00156300
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN  XMONTKN'                      00156400
.*-------------------------------------------------------------------   00156500
.***AM.L09  XRSV0008 CL4                                                00156600
&ZOPN                 SETA &ZOPN+1                                      00156700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0008'                         00156800
&ZOPO(&ZOPN)          SETC 'DS'                                         00156900
&ZOPV(&ZOPN)          SETC 'CL4'                                        00157000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0008'                      00157100
.*-------------------------------------------------------------------   00157200
.***AM.L10 END OF IWMMSWCH LIST PARAMETERS                              00157300
&ZOPN                 SETA &ZOPN+1                                      00157400
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00157500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00157600
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00157700
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00157800
.*                                                                      00157900
&ZOPN                 SETA &ZOPN+1                                      00158000
&ZOPL(&ZOPN)          SETC ' '                                          00158100
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00158200
&ZOPV(&ZOPN)          SETC '1'                                          00158300
&ZOPD(&ZOPN)          SETC ' '                                          00158400
.*-------------------------------------------------------------------   00158500
.***AL.L12 IWMMSWCH FMT=LIST MF=S|L PARAMETERS                          00158600
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00158700
.*                                                                      00158800
&ZOPN                 SETA  &ZOPN+1                                     00158900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00159000
&ZOPO(&ZOPN)          SETC  'DC'                                        00159100
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00159200
&ZOPD(&ZOPN)          SETC  '++ IWMMSWCH ARG PARMS'                     00159300
.*                                                                      00159400
.ZLMFSLX              ANOP  ,                                           00159500
.*-------------------------------------------------------------------   00159600
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00159700
&ZPLLEN               SETA 12                                           00159800
.*                                                                      00159900
.******************************************************************     00160000
.***AI.L01 IWMMSWCH FMT=LIST FILL IN PARAMETER AREA                     00160100
.******************************************************************     00160200
                      ACTR  10000                                       00160300
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00160400
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00160500
&ZCVAL                SETC  'LAE'          XAX MODE                     00160600
.ZIMFXA               ANOP ,                                            00160700
.*                                                                      00160800
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00160900
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00161000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00161100
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00161200
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00161300
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00161400
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00161500
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00161600
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00161700
&ZOPN                 SETA  &ZOPN+1                                     00161800
&ZOPL(&ZOPN)          SETC  ' '                                         00161900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00162000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00162100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00162200
                      AGO   .ZIMFNX                                     00162300
.*                                                                      00162400
.ZIMFN2               ANOP ,                                            00162500
&ZOPN                 SETA  &ZOPN+1                                     00162600
&ZOPL(&ZOPN)          SETC  ' '                                         00162700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00162800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00162900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00163000
.ZIMFNX               ANOP ,                                            00163100
.********************************************************************   00163200
.***AI.L02 IWMMSWCH FMT=LIST INITIALIZE PARAMETER AREA                  00163300
.********************************************************************   00163400
.***AI.L03 MF=(SLE)                                                     00163500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00163600
.*                                                                      00163700
&ZOPN                 SETA  &ZOPN+1                                     00163800
&ZOPL(&ZOPN)          SETC  ' '                                         00163900
&ZOPO(&ZOPN)          SETC  'XC'                                        00164000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00164100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00164200
.ZIMFLX               ANOP  ,                                           00164300
.*-------------------------------------------------------------------   00164400
.***AI.L05 XSWCH_OPTIONS BL1                                            00164500
&ZW                   SETC  ''                                          00164600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00164700
.*-------------------------------------------------------------------   00164800
.***AI.L08 XSWCH_OPTIONS "RETURN"                                       00164900
.***      BL1'1XXXXXXX'                                                 00165000
         AIF   ('&XFUNCTION' NE 'RETURN').ZI3A                          00165100
&ZW                   SETC  '&ZW.10000000'                              00165200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00165300
                      AGO   .ZI3C                                       00165400
.*                                                                      00165500
.ZI3A                 ANOP  ,                                           00165600
&ZW                   SETC  '&ZW.00000000'                              00165700
.ZI3C                 ANOP  ,                                           00165800
.*-------------------------------------------------------------------   00165900
.***AI.L11 XSWCH_OPTIONS BL1                                            00166000
                      AIF   ('&ZCLNG' NE 'YES').ZI3E  ALL ZERO BITS     00166100
&ZOPN                 SETA  &ZOPN+1                                     00166200
&ZOPL(&ZOPN)          SETC  ' '                                         00166300
&ZOPO(&ZOPN)          SETC  'OI'                                        00166400
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00166500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00166600
.ZI3E                 ANOP  ,                                           00166700
.*-------------------------------------------------------------------   00166800
.***AI.L25  XMONTKN XL4                                                 00166900
                      AIF   ('&ZXMONTKN' EQ '').ZI5E  NOT USED          00167000
                      AIF   ('&ZXMONTKN' EQ 'OUTPUT').ZI5E              00167100
&ZCGPR                SETC  '&XMONTKN'                                  00167200
.*                                                                      00167300
                      AIF   ('&XMONTKN'(1,1) NE '(').ZI5B               00167400
&ZCGPR   SETC  '0('.'&XMONTKN'(2,K'&XMONTKN-2).')'                      00167500
                      AGO   .ZI5D                                       00167600
.ZI5B                 ANOP  ,                                           00167700
.*                                                                      00167800
&ZC                   SETC  '&XMONTKN'(1,1)                             00167900
                      AIF   (T'&ZC NE 'N').ZI5D                         00168000
&ZC                   SETC  '&XMONTKN'                                  00168100
                      AIF   ('&ZC'(K'&ZC,K'&ZC) EQ ')').ZI5D            00168200
&ZCGPR                SETC  '=BL4''&XMONTKN'''                          00168300
.*                                                                      00168400
.ZI5D                 ANOP  ,                                           00168500
.*                                                                      00168600
&ZOPN                 SETA  &ZOPN+1                                     00168700
&ZOPL(&ZOPN)          SETC  ' '                                         00168800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00168900
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00169000
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN XMONTKN XL4'                  00169100
.*                                                                      00169200
.ZI5E                 ANOP  ,                                           00169300
.*-------------------------------------------------------------------   00169400
&ZOPN1                SETA &ZOPN                                        00169500
.*******************************************************************    00169600
.***  PROCESS IWMMSWCH OUTPUT PARAMETERS                                00169700
.*******************************************************************    00169800
                      ACTR  10000                                       00169900
.*******************************************************************    00170000
.***AO.X02  RETURN CODE PROCESSING                                      00170100
.*******************************************************************    00170200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00170300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00170400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00170500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00170600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00170700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00170800
&ZOPN                 SETA  &ZOPN+1                                     00170900
&ZOPL(&ZOPN)          SETC  ' '                                         00171000
&ZOPO(&ZOPN)          SETC  'ST'                                        00171100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00171200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00171300
                      AGO   .ZMRETX                                     00171400
.*                                                                      00171500
.ZMRET2               ANOP  ,                                           00171600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00171700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00171800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00171900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00172000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00172100
&ZOPN                 SETA  &ZOPN+1                                     00172200
&ZOPL(&ZOPN)          SETC  ' '                                         00172300
&ZOPO(&ZOPN)          SETC  'LR'                                        00172400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00172500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00172600
.ZMRETX               ANOP  ,                                           00172700
.*******************************************************************    00172800
.***AO.X03  REASON CODE PROCESSING                                      00172900
.*******************************************************************    00173000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00173100
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00173200
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00173300
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00173400
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00173500
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00173600
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00173700
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00173800
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00173900
&ZOPN                 SETA  &ZOPN+1                                     00174000
&ZOPL(&ZOPN)          SETC  ' '                                         00174100
&ZOPO(&ZOPN)          SETC  'ST'                                        00174200
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00174300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00174400
                      AGO   .ZMRSNX                                     00174500
.*                                                                      00174600
.ZMRSN2               ANOP  ,                                           00174700
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00174800
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00174900
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00175000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00175100
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00175200
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00175300
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00175400
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00175500
&ZOPN                 SETA  &ZOPN+1                                     00175600
&ZOPL(&ZOPN)          SETC  ' '                                         00175700
&ZOPO(&ZOPN)          SETC  'LR'                                        00175800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00175900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00176000
.ZMRSNX               ANOP  ,                                           00176100
.*******************************************************************    00176200
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00176300
.*******************************************************************    00176400
.ZMFLX                ANOP  ,              MF=L PROCESSING              00176500
.*******************************************************************    00176600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00176700
.*******************************************************************    00176800
                      ACTR  10000                                       00176900
.*                                                                      00177000
                      LCLA  &ZLC           COLUMN POSITION              00177100
                      LCLA  &ZOPX          LIST TABLE INDEX             00177200
                      LCLC  &ZLL           LABEL                        00177300
                      LCLC  &ZLOP          OPERATION                    00177400
                      LCLC  &ZLV           VALUE                        00177500
                      LCLC  &ZLD           DESCRIPTION                  00177600
.*                                                                      00177700
&ZOPX                 SETA  1                                           00177800
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00177900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00178000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00178100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00178200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00178300
                      AIF   (K'&ZLD LE 0).ZL5                           00178400
&ZLC                  SETA  35             COMMENT COLUMN               00178500
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00178600
&ZLC                  SETA  33             COMMMENT COLUMN              00178700
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00178800
&ZLV                  SETC  '&ZLV'.' '                                  00178900
                      AGO   .ZL3                                        00179000
.*                                                                      00179100
.ZL4                  ANOP  ,                                           00179200
&ZLV                  SETC  '&ZLV'.' '                                  00179300
.ZL5                  ANOP  ,                                           00179400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00179500
.*                                                                      00179600
&ZLL     &ZLOP &ZLV                                                     00179700
.*                                                                      00179800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00179900
                      AGO   .ZL2           CONTINUE LOOPING             00180000
.*                                                                      00180100
.ZLX                  ANOP  ,                                           00180200
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00180300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00180400
         L     14,16(0,0)              GET CVT ADDRESS                  00180500
         TM    CVTOSLV1-CVT(14),X'40'    TEST FOR WLM PRESENCE          00180600
.* GENERATE CODE WHICH DEPENDS ON HOW COMPCODE WAS SPECIFIED            00180700
         AIF   ('&XCOMPCODE' NE 'YES').NOCC1                            00180800
         BO    WLM&SYSNDX              BRANCH WHEN WLM IS PRESENT       00180900
         LA    0,IWMRSNCODENOWLM       SET REASON CODE = NO WLM         00181000
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00181100
         B     END&SYSNDX              BRANCH TO END LABEL              00181200
WLM&SYSNDX DS    0H                    BRANCH LABEL FOR WLM PRESENT     00181300
                AGO .ENDCC1                                             00181400
.NOCC1          ANOP                                                    00181500
         BZ    END&SYSNDX              BRANCH TO END LABEL              00181600
.ENDCC1         ANOP                                                    00181700
         L     14,772(14,0)            GET SFT ADDRESS                  00181800
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00181900
         LA    15,5                    GET EX FOR SERVICE ROUTINE       00182000
         OR    14,15                   GET PC NUMBER                    00182100
         PC    0(14)                                                    00182200
END&SYSNDX DS    0H                    END LABEL                        00182300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00182400
.ZLINKX               ANOP  ,                                           00182500
.*******************************************************************    00182600
.***AP.X01  FORMAT GENERATED CODE                                       00182700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00182800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00182900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00183000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00183100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00183200
                      AIF   (K'&ZLD LE 0).ZL51                          00183300
&ZLC                  SETA  35             COMMENT COLUMN               00183400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00183500
&ZLC                  SETA  33             COMMENT COLUMN               00183600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00183700
&ZLV                  SETC  '&ZLV'.' '                                  00183800
                      AGO   .ZL31                                       00183900
.*                                                                      00184000
.ZL41                 ANOP  ,                                           00184100
&ZLV                  SETC  '&ZLV'.' '                                  00184200
.ZL51                 ANOP  ,                                           00184300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00184400
.*                                                                      00184500
&ZLL     &ZLOP &ZLV                                                     00184600
.*                                                                      00184700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00184800
                      AGO   .ZL21          CONTINUE LOOPING             00184900
.*                                                                      00185000
.ZLX1                 ANOP  ,                                           00185100
.*******************************************************************    00185200
.***AP.X02  END OF IWMMSWCH MACRO                                       00185300
&ZIWMMSWCH            SETC  'YES'          SET IWMMSWCH USED            00185400
         POP   PRINT                                                    00185500
*                                            IWMMSWCH-0                 00185600
         SPACE 1                                                        00185700
.ZLX2                 ANOP  ,                                           00185800
         MEND                                                           00185900
**********************************************************************/ 00186000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00186100
*%IWMMSWCH: MACRO KEYS(FUNCTION,RUNTIME_VER,WHERE,MONTKN,COMPCODE,      00186200
*                 RETCODE,RSNCODE,MF);                                  00186300
*  ANS('?'||MACLABEL||' '||'IWMMSWCP '||MACLIST||                       00186400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00186500
*%END IWMMSWCH;                                                         00186600
