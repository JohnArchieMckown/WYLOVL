*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMSGI                               -05/19/97-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Message In                                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1993, 1997                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IXCMSGI macro is the interface to the Cross System         * 00002200
*      Coupling Facility (XCF) Message-In service.  The Message-In    * 00002300
*      service copies message data from XCF managed storage into a    * 00002400
*      user specified storage area.  The Message-In service can only  * 00002500
*      be invoked from within a message exit routine or a notify exit * 00002600
*      routine that received control from XCF, and then only for the  * 00002700
*      message(s) identified in the parameter list passed to the exit * 00002800
*      routine.                                                       * 00002900
*                                                                     * 00003000
*      A message exit routine is given control to process a message   * 00003100
*      sent by another active member of the same group.  The message  * 00003200
*      exit routine defined by a member when it joined (IXCJOIN) an   * 00003300
*      XCF group is given control by XCF when a message is ready for  * 00003400
*      delivery.  This message exit routine may invoke the Message-In * 00003500
*      service to receive the message data. ,                         * 00003600
*                                                                     * 00003700
*      A notify exit routine is given control to process signalling   * 00003800
*      related events.  One such event is the completion of a         * 00003900
*      Message-Out request for which the sender requested that XCF    * 00004000
*      manage response collection for the message.  The notify exit   * 00004100
*      routine to process such a completion was identified by the     * 00004200
*      sender when the Message-Out service was invoked.  For such an  * 00004300
*      event, the notify exit routine can invoke the Message-In       * 00004400
*      service to receive the message data for each response that was * 00004500
*      gathered.                                                      * 00004600
*                                                                     * 00004700
*      The Message-In routine is given control from the IXCMSGI       * 00004800
*      macro.  The Message-In macro will complete the parameter list  * 00004900
*      with caller provided data and generate a stacking, space       * 00005000
*      switching, program call to the Message-In service.  The        * 00005100
*      Message-In macro is provided in list and execute form.  The    * 00005200
*      list form accepts no variable parameters and is used only to   * 00005300
*      reserve space for the Message-In parameter list.  The execute  * 00005400
*      form is provided for use with the list format for reentrant    * 00005500
*      routines.  The Message-In macro is provided in PL/AS and       * 00005600
*      assembler formats.                                             * 00005700
*                                                                     * 00005800
*      The parameter list must be located in the caller's primary     * 00005900
*      address space.                                                 * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*      INPUT REGISTERS:                                               * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*                          GR0-GR1     reserved                       * 00006700
*                                                                     * 00006800
*                          GR2-GR13    undefined                      * 00006900
*                                                                     * 00007000
*                          GR14-GR15   reserved                       * 00007100
*                                                                     * 00007200
*                          AR0-AR1     reserved                       * 00007300
*                                                                     * 00007400
*                          AR2-AR13    undefined                      * 00007500
*                                                                     * 00007600
*                          AR14-AR15   reserved                       * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00008100
*                                                                     * 00008200
*      OUTPUT REGISTERS:                                              * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*                          GR0         Reason code based on GR15 when * 00008600
*                                      applicable                     * 00008700
*                                                                     * 00008800
*                          GR1         used as work register by the   * 00008900
*                                      system                         * 00009000
*                                                                     * 00009100
*                          GR2-GR13    unchanged                      * 00009200
*                                                                     * 00009300
*                          GR14        used as work register by the   * 00009400
*                                      system                         * 00009500
*                                                                     * 00009600
*                          GR15        return code                    * 00009700
*                                                                     * 00009800
*                          AR0-AR1     used as work registers by the  * 00009900
*                                      system                         * 00010000
*                                                                     * 00010100
*                          AR2-AR13    unchanged                      * 00010200
*                                                                     * 00010300
*                          AR14-AR15   used as work registers by the  * 00010400
*                                      system                         * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00011100
*                                                                     * 00011200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00011300
*                                                                     * 00011400
*01* ENVIRONMENT:                                                     * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*      Dispatchable unit mode: Task or SRB mode.                      * 00011800
*                                                                     * 00011900
*                        Note that the XCF Message-In service may     * 00012000
*                        only be invoked from a message exit routine  * 00012100
*                        or a notify exit routine.                    * 00012200
*                                                                     * 00012300
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00012400
*                        0-7.                                         * 00012500
*                                                                     * 00012600
*      AMODE:            31-bit.                                      * 00012700
*                                                                     * 00012800
*      ASC mode:         Primary or Access Register.                  * 00012900
*                                                                     * 00013000
*                        If in Access Register ASC mode, specify      * 00013100
*                        SYSSTATE ASCENV=AR before invoking this      * 00013200
*                        macro.                                       * 00013300
*                                                                     * 00013400
*                        Primary equal to the requesting member's     * 00013500
*                        primary at the time the group was joined;    * 00013600
*                        any secondary address space; home address    * 00013700
*                        space equal to the requesting member's       * 00013800
*                        primary                                      * 00013900
*                                                                     * 00014000
*                        Swappable or non-swappable primary address   * 00014100
*                        space                                        * 00014200
*                                                                     * 00014300
*      Serialization:                                                 * 00014400
*                                                                     * 00014500
*                        Enabled for I/O and external interrupts      * 00014600
*                                                                     * 00014700
*                        No locks held                                * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*01* SYNTAX:                                                          * 00015200
*                                                                     * 00015300
*[xlabel]  IXCMSGI    TOKEN=xtoken                                   * 00015400
*                    ,MSGTOKEN=xmsgtoken                             * 00015500
*                   [,MULTIPART=NO                                   * 00015600
*                   |     ,MSGBUF=xmsgbuf]                            * 00015700
*                   [,MULTIPART=YES                                  * 00015800
*                        [,#MSGPARTS=x#msgparts|AS_NEEDED]          * 00015900
*                         ,ELEMENT=xelement                           * 00016000
*                        ,ELEMFORM=TABLE                             * 00016100
*                       |     ,NEXTOFF=xnextoff                       * 00016200
*                        ,ELEMFORM=QUEUE                             * 00016300
*                             ,NEXTPTROFF=xnextptroff                 * 00016400
*                            [,ENDOFQUEUE=xendofqueue|ZERO]         * 00016500
*                        ,PARTOFF=xpartoff                           * 00016600
*                        ,PARTPTROFF=xpartptroff                     * 00016700
*                           [,PARTALET=xpartalet|ZERO              * 00016800
*                            ,PARTALETOFF=xpartaletoff             * 00016900
*                            ,PARTALETTBL=xpartalettbl]            * 00017000
*                        ,PARTLEN=xpartlen                           * 00017100
*                        ,PARTLENOFF=xpartlenoff                     * 00017200
*                        ,PARTLENTBL=xpartlentbl]                    * 00017300
*                    [,MSGSTGKEY=xmsgstgkey|JOINKEY]                * 00017400
*                    [,RETCODE=xretcode]                              * 00017500
*                    [,RSNCODE=xrsncode]                              * 00017600
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00017700
*                   [,MF=S]                                          * 00017800
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00017900
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*      Where:                                                         * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*      [xlabel]                                                       * 00018600
*          is an optional symbol, starting in column 1, that is the   * 00018700
*          name on the IXCMSGI macro invocation.  The name must       * 00018800
*          conform to the rules for an ordinary assembler language    * 00018900
*          symbol.                                                    * 00019000
*          DEFAULT: No name.                                          * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*      The following is a set of mutually exclusive keys.  This set   * 00019600
*      is required; only one key must be specified.                   * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*      TOKEN=xtoken                                                   * 00020000
*          belongs to a set of mutually exclusive keys. It is the     * 00020100
*          name (RS-type), or address in register (2)-(12), of a 16   * 00020200
*          character input variable which contains a token to         * 00020300
*          identify the message whose message data is to be           * 00020400
*          delivered.                                                 * 00020500
*                                                                     * 00020600
*          The value passed as TOKEN is either the token              * 00020700
*          (MeplMsgiToken) for a message presented to a message exit  * 00020800
*          routine, or the token (MnplTrMsgiToken) for a response     * 00020900
*          message presented to a notify exit routine.  On entry to a * 00021000
*          message exit routine, R1 contains the address of the       * 00021100
*          Message Exit Parameter List (IXCYMEPL) that contains the   * 00021200
*          token.  On entry to a notify exit routine, R1 contains the * 00021300
*          address of the Message Notification Parameter List         * 00021400
*          (IXCYMNPL) that contains the token(s).  Such tokens are    * 00021500
*          valid inputs to the message-in service while the exit      * 00021600
*          routine is in control.                                     * 00021700
*                                                                     * 00021800
*      MSGTOKEN=xmsgtoken                                             * 00021900
*          belongs to a set of mutually exclusive keys. It is the     * 00022000
*          name (RS-type), or address in register (2)-(12), of a 32   * 00022100
*          bit input variable which contains the message token        * 00022200
*          (MEPLMTOK) from the Message Exit Parameter List (IXCYMEPL) * 00022300
*          that was pointed to by GR1 when the message exit was given * 00022400
*          control.  Note that this is a *message* token, not a       * 00022500
*          member token.                                              * 00022600
*                                                                     * 00022700
*          This keyword is provided for compatibility with message    * 00022800
*          exit routines that must execute on systems running         * 00022900
*          releases of MVS prior to JBB6602.  As of MVS JBB6602, the  * 00023000
*          keyword TOKEN should be used instead.                      * 00023100
*                                                                     * 00023200
*          The message token is valid only while the unit of work     * 00023300
*          that gave control to the message exit routine is running.  * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*      End of a set of mutually exclusive required keys.              * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*      [MULTIPART=NO|YES                                            * 00024200
*          is an optional keyword input indicating whether or not the * 00024300
*          message data is to be received into more than one buffer   * 00024400
*          area.                                                      * 00024500
*          DEFAULT: NO                                                * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*          [MULTIPART=NO                                              * 00024900
*              indicates that the message data is to be received into * 00025000
*              one contiguous buffer area.                            * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*              MSGBUF=xmsgbuf]                                        * 00025400
*                  is the name (RS-type), or address in register      * 00025500
*                  (2)-(12), of a required character input buffer     * 00025600
*                  area which is to contain the message being         * 00025700
*                  delivered.  The buffer area must be at least as    * 00025800
*                  long as the MEPLMLEN value contained in the        * 00025900
*                  Message Exit Parameter List (IXCYMEPL) pointed to  * 00026000
*                  by GR1 when the message exit was given control.    * 00026100
*                                                                     * 00026200
*                  The buffer area must either reside in the caller's * 00026300
*                  primary address space, or in a space that is       * 00026400
*                  accessible via a public entry on the caller's      * 00026500
*                  Dispatchable Unit Access List (DU-AL), or in a     * 00026600
*                  common area data space.                            * 00026700
*                                                                     * 00026800
*                  The storage key of the buffer area must match the  * 00026900
*                  storage protect key indicated by the MSGSTGKEY     * 00027000
*                  keyword.                                           * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*          [MULTIPART=YES                                             * 00027500
*              indicates that the message data is to be received into * 00027600
*              one or more buffer areas.                              * 00027700
*                                                                     * 00027800
*              The message parts and the buffer areas to receive them * 00027900
*              are described by elements.  The Message-In service     * 00028000
*              scatters the message data to the indicated buffer      * 00028100
*              areas, thereby breaking the message data into one or   * 00028200
*              more parts.  Processing each element consecutively,    * 00028300
*              the Message-In service moves message data into a       * 00028400
*              buffer area until the part is complete or no message   * 00028500
*              data remains.  A part is complete when the number of   * 00028600
*              bytes of message data moved into the buffer area       * 00028700
*              equals the length of the part.  If there is not enough * 00028800
*              message data to complete a part, the remaining space   * 00028900
*              in the part as well as any remaining parts, remains    * 00029000
*              unchanged.  When a part is complete and message data   * 00029100
*              remains, the next element, if any, is used to scatter  * 00029200
*              the message data into another buffer area.             * 00029300
*                                                                     * 00029400
*              If the number of bytes of message data available       * 00029500
*              exceeds the sum of the lengths of the parts, as much   * 00029600
*              message data as will fit in the parts is returned to   * 00029700
*              the caller.  The receiving member can, from within the * 00029800
*              currently executing instance of the message exit,      * 00029900
*              reissue the Message-In service to receive the          * 00030000
*              remainder of the message.                              * 00030100
*                                                                     * 00030200
*              The scattering of message data into the indicated      * 00030300
*              parts ends when one of the following conditions is     * 00030400
*              met:                                                   * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*              o   No more message data remains                       * 00030800
*                                                                     * 00030900
*              o   Specified number of message parts processed        * 00031000
*                                                                     * 00031100
*              o   End of queue of elements reached                   * 00031200
*                                                                     * 00031300
*              o   Number of message parts was not specified and more * 00031400
*                  than 65,536 zero length parts processed            * 00031500
*                  consecutively (message data is not returned for    * 00031600
*                  this case)                                         * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*              Message parts will overlay each other if the buffer    * 00032100
*              areas that receive those parts overlap.                * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*              [#MSGPARTS=x#msgparts|AS_NEEDED]                     * 00032500
*                  is the name (RS-type), or address in register      * 00032600
*                  (2)-(12), of an optional fullword input containing * 00032700
*                  the number of message parts into which the message * 00032800
*                  data is to be scattered.  If specified, the number * 00032900
*                  of message parts must be greater than zero.  At    * 00033000
*                  most #MSGPARTS part elements will be processed.    * 00033100
*                  Usually specified when the invoker does not intend * 00033200
*                  to receive all the available message data.         * 00033300
*                                                                     * 00033400
*                  If #MSGPARTS is not coded and more than 65,536     * 00033500
*                  zero length parts are processed consecutively, the * 00033600
*                  Message-In service returns to the caller with a    * 00033700
*                  failure indicating that progress could not be      * 00033800
*                  made.  This lack of progress could be caused by a  * 00033900
*                  circular queue of elements.                        * 00034000
*                                                                     * 00034100
*                  DEFAULT: AS_NEEDED                                 * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*              ELEMENT=xelement                                       * 00034700
*                  is the name (RS-type), or address in register      * 00034800
*                  (2)-(12), of a required character input area which * 00034900
*                  is the first element containing the data that      * 00035000
*                  describes the parts of the message.  The           * 00035100
*                  Message-In service scatters the message into       * 00035200
*                  various parts based on information provided by     * 00035300
*                  these elements.                                    * 00035400
*                                                                     * 00035500
*                  The elements can be structured either as a table   * 00035600
*                  or as a queue.  The elements must either reside in * 00035700
*                  the caller's primary address space, or in a space  * 00035800
*                  that is accessible via a public entry on the       * 00035900
*                  caller's Dispatchable Unit Access List (DU-AL), or * 00036000
*                  in a common area data space.  All the elements     * 00036100
*                  must reside in the same space so that a single     * 00036200
*                  ALET can be used to access them.  The keyword      * 00036300
*                  ELEMENT identifies the first element to be         * 00036400
*                  processed.  The i'th element describes the i'th    * 00036500
*                  message part.  The location of the next element is * 00036600
*                  indicated by the keyword NEXTOFF (for tables) or   * 00036700
*                  NEXTPTROFF (for queues).                           * 00036800
*                                                                     * 00036900
*                  The caller is responsible for maintaining the      * 00037000
*                  integrity of the element structure until the       * 00037100
*                  Message-In service returns.  If the elements or    * 00037200
*                  their structure change while being processed by    * 00037300
*                  the Message-In service, the message data actually  * 00037400
*                  received may be corrupted (missing, replicated, or * 00037500
*                  out of order).                                     * 00037600
*                                                                     * 00037700
*                  Each element describes a buffer area that is to    * 00037800
*                  receive a part of the message.  The keyword        * 00037900
*                  PARTOFF or PARTPTROFF is used to indicate whether  * 00038000
*                  the element contains the buffer area or a pointer  * 00038100
*                  to the buffer area.                                * 00038200
*                                                                     * 00038300
*                  The length in bytes of each part is indicated by   * 00038400
*                  the keyword PARTLENTBL, PARTLEN, or PARTLENOFF.    * 00038500
*                  PARTLENTBL is used when the part lengths are       * 00038600
*                  contained in a separately addressable table.       * 00038700
*                  PARTLEN is used when each part has the same        * 00038800
*                  length.  PARTLENOFF is used when the element       * 00038900
*                  itself contains the length of the part that it     * 00039000
*                  describes.  The buffer area into which the text of * 00039100
*                  the message part is to be stored must be at least  * 00039200
*                  as long as the corresponding part length.          * 00039300
*                                                                     * 00039400
*                  The PARTALETTBL, PARTALET, or PARTALETOFF keyword  * 00039500
*                  can further qualify the address of each buffer     * 00039600
*                  area when the elements contain a pointer to the    * 00039700
*                  buffer area that is to receive the message part    * 00039800
*                  (PARTPTROFF).  PARTALETTBL is used when the ALETs  * 00039900
*                  of the buffer areas for the parts are contained in * 00040000
*                  a separately addressable table.  PARTALET is used  * 00040100
*                  when the buffer area for each part has the same    * 00040200
*                  ALET.  PARTALETOFF is used when the element itself * 00040300
*                  contains the ALET of the buffer area for the part  * 00040400
*                  that it describes.                                 * 00040500
*                                                                     * 00040600
*                  If the text of the message part is to be stored    * 00040700
*                  within the element (PARTOFF), the ALET that        * 00040800
*                  qualifies the address of the buffer area is the    * 00040900
*                  ALET that qualifies the address of the element.    * 00041000
*                                                                     * 00041100
*                  The storage key of each buffer area must match the * 00041200
*                  storage protect key indicated by the MSGSTGKEY     * 00041300
*                  keyword.                                           * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*              ELEMFORM=TABLE|QUEUE]                                * 00041900
*                  is a required keyword input indicating whether the * 00042000
*                  elements describing the message parts are          * 00042100
*                  structured as a table or as a queue.               * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                  ELEMFORM=TABLE                                     * 00042500
*                      indicates that the elements describing the     * 00042600
*                      message parts are structured as a table.       * 00042700
*                                                                     * 00042800
*                      Processing of the elements concludes when all  * 00042900
*                      available message data has been scattered or   * 00043000
*                      all the message parts have been processed      * 00043100
*                      (#MSGPARTS).                                   * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*                      NEXTOFF=xnextoff                               * 00043500
*                          is the name (RS-type), or address in       * 00043600
*                          register (2)-(12), of a required fullword  * 00043700
*                          input that indicates, in bytes, the        * 00043800
*                          relative location of the next element in   * 00043900
*                          the table.  The next element is located by * 00044000
*                          adding the indicated value to the location * 00044100
*                          of the current element.  Typically this    * 00044200
*                          value equals the number of bytes in one    * 00044300
*                          table entry.                               * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                  ELEMFORM=QUEUE                                     * 00044800
*                      indicates that the elements describing the     * 00044900
*                      message parts are structured as a queue.       * 00045000
*                                                                     * 00045100
*                      Processing of the elements concludes when all  * 00045200
*                      available message data has been scattered, or  * 00045300
*                      all the message parts have been processed      * 00045400
*                      (ENDOFQUEUE or #MSGPARTS).                     * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                      NEXTPTROFF=xnextptroff                         * 00045800
*                          is the name (RS-type), or address in       * 00045900
*                          register (2)-(12), of a required fullword  * 00046000
*                          input containing the number of bytes to    * 00046100
*                          offset within an element in order to       * 00046200
*                          locate a PTR(31) field that contains the   * 00046300
*                          address of the next element.  This keyword * 00046400
*                          is used when the elements are structured   * 00046500
*                          as a queue, in which case it provides the  * 00046600
*                          location of the pointer to the next        * 00046700
*                          element.  May be required if the invoker   * 00046800
*                          does not intend to receive all the         * 00046900
*                          available message data.                    * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                      [ENDOFQUEUE=xendofqueue|ZERO]                * 00047500
*                          is the name (RS-type), or address in       * 00047600
*                          register (2)-(12), of an optional 4 byte   * 00047700
*                          input that contains the address which      * 00047800
*                          denotes the end of the queue.  When the    * 00047900
*                          next element pointer located at offset     * 00048000
*                          NEXTPTROFF equals this value, no more      * 00048100
*                          elements remain and scattering of the      * 00048200
*                          message data into parts ends.              * 00048300
*                          DEFAULT: ZERO                              * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*              The following is a set of mutually exclusive keys.     * 00049300
*              This set is required; only one key must be specified.  * 00049400
*                                                                     * 00049500
*                                                                     * 00049600
*              PARTOFF=xpartoff                                       * 00049700
*                  belongs to a set of mutually exclusive keys. It is * 00049800
*                  the name (RS-type), or address in register         * 00049900
*                  (2)-(12), of a fullword input containing the       * 00050000
*                  number of bytes to offset within an element in     * 00050100
*                  order to locate the buffer area into which the     * 00050200
*                  text of the message part is to be received.  This  * 00050300
*                  keyword is used when the message text is to be     * 00050400
*                  received directly into the element.  The ALET used * 00050500
*                  to access the element is used to access the buffer * 00050600
*                  area that receives the text of the message part.   * 00050700
*                                                                     * 00050800
*              PARTPTROFF=xpartptroff                                 * 00050900
*                  belongs to a set of mutually exclusive keys. It is * 00051000
*                  the name (RS-type), or address in register         * 00051100
*                  (2)-(12), of a fullword input containing the       * 00051200
*                  number of bytes to offset within an element in     * 00051300
*                  order to locate a PTR(31) field that contains the  * 00051400
*                  address of the buffer area into which the text of  * 00051500
*                  the message part is to be received.  This keyword  * 00051600
*                  is used when the elements contain a pointer to the * 00051700
*                  buffer area that is to receive the message part.   * 00051800
*                  One of the keywords PARTALETTBL, PARTALET, or      * 00051900
*                  PARTALETOFF is coded to indicate the ALET that     * 00052000
*                  qualifies the address of the buffer area.          * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*                  The following is a set of mutually exclusive keys. * 00052400
*                  This set is optional; only one key may be          * 00052500
*                  specified.                                         * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*                  [PARTALET=xpartalet|ZERO                         * 00052900
*                      belongs to a set of mutually exclusive keys.   * 00053000
*                      It is the name (RS-type), or address in        * 00053100
*                      register (2)-(12), of an optional fullword     * 00053200
*                      input that contains the one ALET that          * 00053300
*                      qualifies the address of every buffer area     * 00053400
*                      that is to receive the text of a message part. * 00053500
*                      The ALET must be zero or a valid public entry  * 00053600
*                      on the caller's Dispatchable Unit Access List  * 00053700
*                      (DU-AL), or a valid entry for a common area    * 00053800
*                      data space.                                    * 00053900
*                      DEFAULT: ZERO - the message buffer areas       * 00054000
*                      reside in the caller's primary address space.  * 00054100
*                                                                     * 00054200
*                  PARTALETOFF=xpartaletoff                         * 00054300
*                      belongs to a set of mutually exclusive keys.   * 00054400
*                      It is the name (RS-type), or address in        * 00054500
*                      register (2)-(12), of an optional fullword     * 00054600
*                      input containing the number of bytes to offset * 00054700
*                      within an element in order to locate a         * 00054800
*                      FIXED(32) field that contains the ALET that    * 00054900
*                      qualifies the address of the buffer area that  * 00055000
*                      is to receive the text of the message part.    * 00055100
*                      The ALET must be zero or a valid public entry  * 00055200
*                      on the caller's Dispatchable Unit Access List  * 00055300
*                      (DU-AL), or a valid entry for a common area    * 00055400
*                      data space.                                    * 00055500
*                                                                     * 00055600
*                  PARTALETTBL=xpartalettbl]                        * 00055700
*                      belongs to a set of mutually exclusive keys.   * 00055800
*                      It is the name (RS-type), or address in        * 00055900
*                      register (2)-(12), of an optional character    * 00056000
*                      input containing a table of FIXED(32) ALETs.   * 00056100
*                      The PARTALETTBL must either reside in the      * 00056200
*                      caller's primary address space, or in a space  * 00056300
*                      that is accessible via a public entry on the   * 00056400
*                      caller's Dispatchable Unit Access List         * 00056500
*                      (DU-AL), or in a common area data space.       * 00056600
*                      There must be an entry in the table for each   * 00056700
*                      element processed.  The table must be aligned  * 00056800
*                      on a word boundary.  Each entry in the table   * 00056900
*                      indicates the ALET that qualifies the address  * 00057000
*                      of a buffer area that is to receive a part of  * 00057100
*                      the message.  The i'th entry in the table      * 00057200
*                      provides the ALET of the buffer area that is   * 00057300
*                      to receive the i'th message part.  The ALET    * 00057400
*                      must be zero or a valid public entry on the    * 00057500
*                      caller's Dispatchable Unit Access List         * 00057600
*                      (DU-AL), or a valid entry for a common area    * 00057700
*                      data space.                                    * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                  End of a set of mutually exclusive optional keys.  * 00058200
*                  DEFAULT: PARTALET                                  * 00058300
*                                                                     * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*              End of a set of mutually exclusive required keys.      * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*              The following is a set of mutually exclusive keys.     * 00059200
*              This set is required; only one key must be specified.  * 00059300
*                                                                     * 00059400
*                                                                     * 00059500
*                  The MEPLMLEN value contained in the Message Exit   * 00059600
*                  Parameter List (IXCYMEPL) pointed to by GR1 when   * 00059700
*                  the message exit was given control will provide    * 00059800
*                  the entire length of the message. The              * 00059900
*                  MNPLTRRESPMLEN value contained in the Message      * 00060000
*                  Notification Parameter List (IXCYMNPL) pointed to  * 00060100
*                  by GR1 when the notification exit was given        * 00060200
*                  control will provide the entire length of the      * 00060300
*                  response.                                          * 00060400
*                                                                     * 00060500
*              PARTLEN=xpartlen                                       * 00060600
*                  belongs to a set of mutually exclusive keys. It is * 00060700
*                  the name (RS-type), or address in register         * 00060800
*                  (2)-(12), of a fullword input containing the       * 00060900
*                  length in bytes of an individual message part.     * 00061000
*                  PARTLEN is coded when the message data is to be    * 00061100
*                  scattered into one or more equal size parts.  Each * 00061200
*                  buffer area indicated by an element must be at     * 00061300
*                  least as long as PARTLEN.  To receive the entire   * 00061400
*                  message, the number PARTLEN times the number of    * 00061500
*                  elements processed must be at least as long as the * 00061600
*                  entire length of the message or response.          * 00061700
*                                                                     * 00061800
*              PARTLENOFF=xpartlenoff                                 * 00061900
*                  belongs to a set of mutually exclusive keys. It is * 00062000
*                  the name (RS-type), or address in register         * 00062100
*                  (2)-(12), of a fullword input containing the       * 00062200
*                  number of bytes to offset within an element in     * 00062300
*                  order to locate a FIXED(32) field that contains    * 00062400
*                  the length in bytes of an individual message part. * 00062500
*                  The buffer area indicated by the i'th element must * 00062600
*                  be at least as long as the length of the i'th      * 00062700
*                  message part.  If the length of the part is zero,  * 00062800
*                  the address and ALET of the associated buffer area * 00062900
*                  are ignored and processing continues with the next * 00063000
*                  element.  To receive the entire message, the sum   * 00063100
*                  of the lengths at offset PARTLENOFF within each    * 00063200
*                  element must be at least as long as the entire     * 00063300
*                  length of the message or response.                 * 00063400
*                                                                     * 00063500
*              PARTLENTBL=xpartlentbl]                                * 00063600
*                  belongs to a set of mutually exclusive keys. It is * 00063700
*                  the name (RS-type), or address in register         * 00063800
*                  (2)-(12), of a character input containing a table  * 00063900
*                  of FIXED(32) lengths.  The PARTLENTBL must either  * 00064000
*                  reside in the caller's primary address space, or   * 00064100
*                  in a space that is accessible via a public entry   * 00064200
*                  on the caller's Dispatchable Unit Access List      * 00064300
*                  (DU-AL), or in a common area data space.  There    * 00064400
*                  must be an entry in the table for each element     * 00064500
*                  processed.  The table must be aligned on a word    * 00064600
*                  boundary.  Each entry in the table indicates the   * 00064700
*                  length in bytes of one part of the message.  The   * 00064800
*                  i'th entry in the table provides the length of the * 00064900
*                  i'th message part.  The buffer area indicated by   * 00065000
*                  the i'th element must be at least as long as the   * 00065100
*                  length of the i'th message part.  If the i'th      * 00065200
*                  entry in PARTLENTBL is zero, the buffer area       * 00065300
*                  address and ALET indicated by the i'th element are * 00065400
*                  ignored and processing continues with the next     * 00065500
*                  element.  To receive the entire message, the sum   * 00065600
*                  of the entries in PARTLENTBL must be at least as   * 00065700
*                  long as the entire length of the message or        * 00065800
*                  response.                                          * 00065900
*                                                                     * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*              End of a set of mutually exclusive required keys.      * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*                                                                     * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*                                                                     * 00067000
*      [MSGSTGKEY=xmsgstgkey|JOINKEY]                               * 00067100
*          is the name (RS-type), or address in register (2)-(12), of * 00067200
*          an optional 8 bit input containing the storage key to be   * 00067300
*          used when storing the message data.  The message data is   * 00067400
*          stored into either the buffer area indicated by the MSGBUF * 00067500
*          keyword, or the buffer area at offset PARTOFF within the   * 00067600
*          i'th element, or the buffer area pointed to by the pointer * 00067700
*          at offset PARTPTROFF within the i'th element.  The high    * 00067800
*          order nibble contains the storage key, the low order       * 00067900
*          nibble is ignored.  For example, set 'kkkk' in the binary  * 00068000
*          bit string 'kkkkxxxx'B to correspond to the desired        * 00068100
*          storage key.                                               * 00068200
*                                                                     * 00068300
*          If MSGSTGKEY is not specified, then the message data is    * 00068400
*          stored into the buffer area(s) using the PSW key that was  * 00068500
*          current when the receiving member JOINed the group.        * 00068600
*          DEFAULT: JOINKEY                                           * 00068700
*                                                                     * 00068800
*                                                                     * 00068900
*                                                                     * 00069000
*                                                                     * 00069100
*      [RETCODE=xretcode]                                             * 00069200
*          is the name (RS-type) of an optional fullword output       * 00069300
*          variable, or register (2)-(12), into which the return code * 00069400
*          is to be copied from GPR 15.                               * 00069500
*                                                                     * 00069600
*                                                                     * 00069700
*                                                                     * 00069800
*                                                                     * 00069900
*      [RSNCODE=xrsncode]                                             * 00070000
*          is the name (RS-type) of an optional fullword output       * 00070100
*          variable, or register (2)-(12), into which the reason code * 00070200
*          is to be copied from GPR 0.                                * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00070800
*          is an optional byte input decimal value in the "0-2" range * 00070900
*          that specifies the macro version.  PLISTVER is the only    * 00071000
*          key allowed on the list form of MF and determines which    * 00071100
*          parameter list is generated.  The macro keys associated    * 00071200
*          with each supported version of the macro are listed in     * 00071300
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00071400
*          instead of a number, and the parameter list will be of the * 00071500
*          largest size currently supported. This size may grow from  * 00071600
*          release to release (thus possibly affecting the amount of  * 00071700
*          storage needed by your program).  If your program can      * 00071800
*          tolerate this, IBM recommends that you always specify MAX  * 00071900
*          when creating the list form parameter list as that will    * 00072000
*          ensure that the list form parameter list is always long    * 00072100
*          enough to hold whatever parameters might be specified on   * 00072200
*          the execute form.                                          * 00072300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00072400
*          default is the lowest version which allows all of the      * 00072500
*          parameters specified on the invocation to be processed.    * 00072600
*                                                                     * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*      [MF=S|L|E]                                                   * 00073100
*          is an optional keyword input which specifies the macro     * 00073200
*          form.                                                      * 00073300
*          DEFAULT: S                                                 * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*          [MF=S]                                                     * 00073700
*              specifies the standard form of the macro.  The "S"     * 00073800
*              form generates code to put the parameters into an      * 00073900
*              in-line parameter list and invoke the desired service. * 00074000
*              Full checking for required macro keys is done along    * 00074100
*              with supplying defaults for omitted optional           * 00074200
*              parameters.                                            * 00074300
*                                                                     * 00074400
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00074500
*              specifies the list form of the macro.  The "L" form    * 00074600
*              defines an area to be used for the parameter list.     * 00074700
*              Only the PLISTVER key may be specified on the          * 00074800
*              invocation.  All other macro parameters are flagged as * 00074900
*              errors.  If PLISTVER is not specified, the original    * 00075000
*              parameter list definition is used.                     * 00075100
*                                                                     * 00075200
*            ,xmfctrl                                                 * 00075300
*              is a required input.  It is the name of a storage area * 00075400
*              for the parameter list.                                * 00075500
*                                                                     * 00075600
*            ,xmfattr|0D                                            * 00075700
*              is an optional 60 character input string that varies   * 00075800
*              from 1 to 60 characters. Use it to force boundary      * 00075900
*              alignment of the parameter list. Use only 0F or 0D.    * 00076000
*              DEFAULT: 0D which forces the parameter list to a       * 00076100
*              doubleword boundary.                                   * 00076200
*                                                                     * 00076300
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00076400
*              specifies the execute form of the macro.  The "E" form * 00076500
*              generates code to put the parameters into the          * 00076600
*              parameter list specified by xmfctrl and provides full  * 00076700
*              syntax checking with default setting.                  * 00076800
*                                                                     * 00076900
*            ,xmfctrl                                                 * 00077000
*              is a required input.  It is the name (RS-type), or     * 00077100
*              address in register (1)-(12), of a storage area for    * 00077200
*              the parameter list.                                    * 00077300
*                                                                     * 00077400
*            ,COMPLETE                                              * 00077500
*              is an optional keyword input which specifies the       * 00077600
*              degree of macro parameter syntax checking.             * 00077700
*              DEFAULT: COMPLETE                                      * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*              COMPLETE                                               * 00078100
*                  Checking for required macro keys is done and       * 00078200
*                  defaults are supplied for omitted optional         * 00078300
*                  parameters.                                        * 00078400
*                                                                     * 00078500
*                                                                     * 00078600
*                                                                     * 00078700
*                                                                     * 00078800
*                                                                     * 00078900
*                                                                     * 00079000
*                                                                     * 00079100
*01* RETURN CODES:                                                    * 00079200
*                                                                     * 00079300
*                                                                     * 00079400
*       0         Successful completion.  Message data has been       * 00079500
*                 placed in buffer area(s).                           * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*       4         Warning.  The request completed, but with           * 00079900
*                 exceptional circumstances.                          * 00080000
*                                                                     * 00080100
*                 HEX REASON       MEANING                            * 00080200
*                 CODE                                                * 00080300
*                                                                     * 00080400
*                                                                     * 00080500
*                 224         As much message data as will fit has    * 00080600
*                             been placed in buffer area(s).  More    * 00080700
*                             message data remains.  Reinvoke the     * 00080800
*                             Message-In service to receive the       * 00080900
*                             remainder of the message.               * 00081000
*                                                                     * 00081100
*                             Note that this reason code is           * 00081200
*                             applicable only when MULTIPART is YES.  * 00081300
*                             When MULTIPART is NO, the buffer area   * 00081400
*                             indicated by MSGBUF must be large       * 00081500
*                             enough to receive all the message or    * 00081600
*                             response data.                          * 00081700
*                                                                     * 00081800
*                                                                     * 00081900
*                                                                     * 00082000
*                                                                     * 00082100
*       8         Parameters are not valid.  Unless the explanation   * 00082200
*                 for a specific reason code states otherwise, the    * 00082300
*                 message data is still available and can be received * 00082400
*                 by reinvoking the Message-In service with valid     * 00082500
*                 parameters.                                         * 00082600
*                                                                     * 00082700
*                 If the error was detected while scattering message  * 00082800
*                 or response data into more than one buffer area     * 00082900
*                 (MULTIPART is YES) and the error can be associated  * 00083000
*                 with a particular part, the index of the part and   * 00083100
*                 the address of the element that describes the part  * 00083200
*                 are placed in the parameter list.                   * 00083300
*                                                                     * 00083400
*                 HEX REASON       MEANING                            * 00083500
*                 CODE                                                * 00083600
*                                                                     * 00083700
*                                                                     * 00083800
*                 4           Buffer area not accessible.  The        * 00083900
*                             storage named by MSGBUF is not          * 00084000
*                             accessible.                             * 00084100
*                                                                     * 00084200
*                 8           The message or response was previously  * 00084300
*                             delivered, saved, or discarded, and is  * 00084400
*                             no longer available.                    * 00084500
*                                                                     * 00084600
*                 9           The message is no longer available      * 00084700
*                             because the member is no longer active. * 00084800
*                                                                     * 00084900
*                 C           Buffer area ALET is not valid.  The     * 00085000
*                             ALET that qualifies the address of      * 00085100
*                             MSGBUF is neither zero nor a valid      * 00085200
*                             entry on the caller's Dispatchable Unit * 00085300
*                             Access List (DU-AL), nor a valid entry  * 00085400
*                             for a common area data space.           * 00085500
*                                                                     * 00085600
*                 40          Reserved field is not 0.  The parameter * 00085700
*                             list has been corrupted.                * 00085800
*                                                                     * 00085900
*                 44          The message token is not valid.  The    * 00086000
*                             token indicated by MSGTOKEN or TOKEN    * 00086100
*                             may have been corrupted, or it is not a * 00086200
*                             token from the parameter list presented * 00086300
*                             to the exit routine, or the invoker is  * 00086400
*                             not invoking the Message-In service     * 00086500
*                             from within an exit routine, or the     * 00086600
*                             member is no longer active.  This error * 00086700
*                             can occur if the exit routine is not    * 00086800
*                             correctly coded as a reentrant routine. * 00086900
*                                                                     * 00087000
*                 45          MSGTOKEN not valid, use TOKEN.          * 00087100
*                                                                     * 00087200
*                             The TOKEN keyword is required for a     * 00087300
*                             message exit routine that receives      * 00087400
*                             control via a notify exit routine.  In  * 00087500
*                             such cases, it is clear that the user   * 00087600
*                             is exploiting a level of the signalling * 00087700
*                             service that supports the use of TOKEN. * 00087800
*                             Use of the TOKEN keyword is therefore   * 00087900
*                             required.                               * 00088000
*                                                                     * 00088100
*                 100         The ALET that qualifies the address of  * 00088200
*                             the parameter list is not zero.         * 00088300
*                                                                     * 00088400
*                 104         Version number in parameter list is not * 00088500
*                             valid.  The release level of XCF on     * 00088600
*                             which the caller is running does not    * 00088700
*                             support this version of the Message-In  * 00088800
*                             service.                                * 00088900
*                                                                     * 00089000
*                 10C         Parameter list is not accessible.       * 00089100
*                                                                     * 00089200
*                 20C         Buffer area key mismatch.  The buffer   * 00089300
*                             area named by MSGBUF can not be stored  * 00089400
*                             into using the storage key indicated by * 00089500
*                             MSGSTGKEY.                              * 00089600
*                                                                     * 00089700
*                 20D         Buffer area not accessible.  The buffer * 00089800
*                             area named by MSGBUF is page protected. * 00089900
*                             Stores into this area are not           * 00090000
*                             permitted.                              * 00090100
*                                                                     * 00090200
*                 210         Element not accessible.  The part       * 00090300
*                             pointer at offset PARTPTROFF within an  * 00090400
*                             element (ELEMENT) is not accessible.    * 00090500
*                             The fields PART# and ELEMENTPTR in the  * 00090600
*                             parameter list identify the index of    * 00090700
*                             the part and the address of the element * 00090800
*                             that describes the erroneous part.      * 00090900
*                                                                     * 00091000
*                 212         The ALET that qualifies the address of  * 00091100
*                             an element (ELEMENT) is neither zero    * 00091200
*                             nor a valid entry on the caller's       * 00091300
*                             Dispatchable Unit Access List (DU-AL),  * 00091400
*                             nor a valid entry for a common area     * 00091500
*                             data space.                             * 00091600
*                                                                     * 00091700
*                 213         Element not accessible.  The next       * 00091800
*                             element pointer at offset NEXTPTROFF    * 00091900
*                             within an element (ELEMENT) is not      * 00092000
*                             accessible.  The fields PART# and       * 00092100
*                             ELEMENTPTR in the parameter list        * 00092200
*                             identify the index of the part and the  * 00092300
*                             address of the element that describes   * 00092400
*                             the erroneous part.                     * 00092500
*                                                                     * 00092600
*                 214         Number of message parts (#MSGPARTS) is  * 00092700
*                             zero.                                   * 00092800
*                                                                     * 00092900
*                 215         Not making progress.  The number of     * 00093000
*                             message parts (#MSGPARTS) was not       * 00093100
*                             specified and more than 65,536          * 00093200
*                             consecutive zero length parts were      * 00093300
*                             processed.  The elements are assumed to * 00093400
*                             be damaged.                             * 00093500
*                                                                     * 00093600
*                 218         Buffer area not accessible.  The        * 00093700
*                             storage area pointed to by the pointer  * 00093800
*                             field at offset PARTPTROFF within an    * 00093900
*                             element (ELEMENT) is not accessible.    * 00094000
*                             The fields PART# and ELEMENTPTR in the  * 00094100
*                             parameter list identify the index of    * 00094200
*                             the part and the address of the element * 00094300
*                             that describes the erroneous part.      * 00094400
*                                                                     * 00094500
*                 219         Buffer area not accessible.  The        * 00094600
*                             storage area at offset PARTOFF within   * 00094700
*                             an element (ELEMENT) is not accessible. * 00094800
*                             The fields PART# and ELEMENTPTR in the  * 00094900
*                             parameter list identify the index of    * 00095000
*                             the part and the address of the element * 00095100
*                             that describes the erroneous part.      * 00095200
*                                                                     * 00095300
*                 21A         Buffer area not accessible.  The        * 00095400
*                             storage area pointed to by the pointer  * 00095500
*                             field at offset PARTPTROFF within an    * 00095600
*                             element (ELEMENT) is page protected.    * 00095700
*                             Stores into this area are not           * 00095800
*                             permitted.  The fields PART# and        * 00095900
*                             ELEMENTPTR in the parameter list        * 00096000
*                             identify the index of the part and the  * 00096100
*                             address of the element that describes   * 00096200
*                             the erroneous part.                     * 00096300
*                                                                     * 00096400
*                 21B         Buffer area not accessible.  The        * 00096500
*                             storage area at offset PARTOFF within   * 00096600
*                             an element (ELEMENT) is page protected. * 00096700
*                             Stores into this area are not           * 00096800
*                             permitted.  The fields PART# and        * 00096900
*                             ELEMENTPTR in the parameter list        * 00097000
*                             identify the index of the part and the  * 00097100
*                             address of the element that describes   * 00097200
*                             the erroneous part.                     * 00097300
*                                                                     * 00097400
*                 21C         Buffer area key mismatch.  The storage  * 00097500
*                             area pointed to by the pointer field at * 00097600
*                             offset PARTPTROFF within an element     * 00097700
*                             (ELEMENT) can not be stored into using  * 00097800
*                             the storage key indicated by MSGSTGKEY. * 00097900
*                             The fields PART# and ELEMENTPTR in the  * 00098000
*                             parameter list identify the index of    * 00098100
*                             the part and the address of the element * 00098200
*                             that describes the erroneous part.      * 00098300
*                                                                     * 00098400
*                 21D         Buffer area key mismatch.  The storage  * 00098500
*                             area at offset PARTOFF within an        * 00098600
*                             element (ELEMENT) can not be stored     * 00098700
*                             into using the storage key indicated by * 00098800
*                             MSGSTGKEY.  The fields PART# and        * 00098900
*                             ELEMENTPTR in the parameter list        * 00099000
*                             identify the index of the part and the  * 00099100
*                             address of the element that describes   * 00099200
*                             the erroneous part.                     * 00099300
*                                                                     * 00099400
*                 220         Table of message or response part       * 00099500
*                             lengths (PARTLENTBL) is not accessible. * 00099600
*                                                                     * 00099700
*                 221         Table of message or response part       * 00099800
*                             lengths (PARTLENTBL) is not aligned on  * 00099900
*                             a word boundary.                        * 00100000
*                                                                     * 00100100
*                 222         The ALET that qualifies the address of  * 00100200
*                             the message or response parts lengths   * 00100300
*                             table (PARTLENTBL) is neither zero nor  * 00100400
*                             a valid entry on the caller's           * 00100500
*                             Dispatchable Unit Access List (DU-AL),  * 00100600
*                             nor a valid entry for a common area     * 00100700
*                             data space.                             * 00100800
*                                                                     * 00100900
*                 223         The part length at offset PARTLENOFF    * 00101000
*                             within an element (ELEMENT) is not      * 00101100
*                             accessible.  The fields PART# and       * 00101200
*                             ELEMENTPTR in the parameter list        * 00101300
*                             identify the index of the part and the  * 00101400
*                             address of the element that describes   * 00101500
*                             the erroneous part.                     * 00101600
*                                                                     * 00101700
*                 230         Table of message or response part ALETs * 00101800
*                             (PARTALETTBL) is not accessible.        * 00101900
*                                                                     * 00102000
*                 231         Table of message part ALETs             * 00102100
*                             (PARTALETTBL) is not aligned on a word  * 00102200
*                             boundary.                               * 00102300
*                                                                     * 00102400
*                 232         The ALET that qualifies the address of  * 00102500
*                             the message parts ALET table            * 00102600
*                             (PARTALETTBL) is neither zero nor a     * 00102700
*                             valid entry on the caller's             * 00102800
*                             Dispatchable Unit Access List (DU-AL),  * 00102900
*                             nor a valid entry for a common area     * 00103000
*                             data space.                             * 00103100
*                                                                     * 00103200
*                 233         Element not accessible.  The part ALET  * 00103300
*                             at offset PARTALETOFF within an element * 00103400
*                             (ELEMENT) is not accessible.  The       * 00103500
*                             fields PART# and ELEMENTPTR in the      * 00103600
*                             parameter list identify the index of    * 00103700
*                             the part and the address of the element * 00103800
*                             that describes the erroneous part.      * 00103900
*                                                                     * 00104000
*                 234         Buffer area ALET is not valid.  The     * 00104100
*                             ALET indicated by PARTALET is neither   * 00104200
*                             zero nor a valid entry on the caller's  * 00104300
*                             Dispatchable Unit Access List (DU-AL),  * 00104400
*                             nor a valid entry for a common area     * 00104500
*                             data space.                             * 00104600
*                                                                     * 00104700
*                 235         Buffer area ALET is not valid.  The     * 00104800
*                             ALET indicated by an entry in           * 00104900
*                             PARTALETTBL is neither zero nor a valid * 00105000
*                             entry on the caller's Dispatchable Unit * 00105100
*                             Access List (DU-AL), nor a valid entry  * 00105200
*                             for a common area data space.  The      * 00105300
*                             fields PART# and ELEMENTPTR in the      * 00105400
*                             parameter list identify the index of    * 00105500
*                             the part and the address of the element * 00105600
*                             that describes the erroneous part.      * 00105700
*                                                                     * 00105800
*                 236         Buffer area ALET is not valid.  The     * 00105900
*                             ALET at offset PARTALETOFF within an    * 00106000
*                             element (ELEMENT) is neither zero nor a * 00106100
*                             valid entry on the caller's             * 00106200
*                             Dispatchable Unit Access List (DU-AL),  * 00106300
*                             nor a valid entry for a common area     * 00106400
*                             data space.  The fields PART# and       * 00106500
*                             ELEMENTPTR in the parameter list        * 00106600
*                             identify the index of the part and the  * 00106700
*                             address of the element that describes   * 00106800
*                             the erroneous part.                     * 00106900
*                                                                     * 00107000
*                 010Cxxxx    Parameter list not accessible.  A       * 00107100
*                             parameter associated with one of the    * 00107200
*                             parts of a multipart message is not     * 00107300
*                             valid, but the Message-In service was   * 00107400
*                             not able to store the index of the part * 00107500
*                             and the address of the element that     * 00107600
*                             describes the part in the parameter     * 00107700
*                             list.  The low order halfword of the    * 00107800
*                             reason code (xxxx) indicates the reason * 00107900
*                             code that would have been returned if   * 00108000
*                             the part information could have been    * 00108100
*                             placed in the parameter list.           * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*                                                                     * 00108500
*                                                                     * 00108600
*       10        Failure in XCF processing                           * 00108700
*                                                                     * 00108800
*                                                                     * 00108900
*                                                                     * 00109000
*01* REASON CODES:                                                    * 00109100
*                                                                     * 00109200
*       A unique reason code will be returned whenever the return     * 00109300
*       code is non-zero.                                             * 00109400
*                                                                     * 00109500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00109600
*                                                                     * 00109700
*02*   PROCESSOR:  ASSEM                                              * 00109800
*                                                                     * 00109900
*01* COMPONENT:  SCXCF                                                * 00110000
*                                                                     * 00110100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00110200
*                                                                     * 00110300
*01* MACRO USAGE NOTES:                                               * 00110400
*                                                                     * 00110500
*                                                                     * 00110600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00110700
*        global macro variable.  Any value other than 'NO' will       * 00110800
*        result in the macro expansion being printed.  The default is * 00110900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00111000
*        variable should be set.                                      * 00111100
*                                                                     * 00111200
*                    GBLC &ZPRINT                                     * 00111300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00111400
*                                                                     * 00111500
*                                                                     * 00111600
*    2.  The  IXCMSGI macro supports multiple versions. The macro key * 00111700
*        list  below  contains the version level in which the key was * 00111800
*        first  introduced.  Positionals  are  identified by the word * 00111900
*        'Positional'  followed by the numeric value of its position. * 00112000
*        Nested  positionals  are  preceded  by their outer key.  The * 00112100
*        lowest value represents the original version and the highest * 00112200
*        value  represents  the  most  recent  version of the IXCMSGI * 00112300
*        macro.    When  specifying  PLISTVER,  be sure that it is as * 00112400
*        least  as high as the highest version number of all the keys * 00112500
*        being used.                                                  * 00112600
*                                                                     * 00112700
*        VERSION   KEY                                                * 00112800
*                                                                     * 00112900
*              0      MSGBUF                                          * 00113000
*                     MSGTOKEN                                        * 00113100
*                     MULTIPART                                       * 00113200
*              1      #MSGPARTS                                       * 00113300
*                     ELEMENT                                         * 00113400
*                     ELEMFORM                                        * 00113500
*                     ENDOFQUEUE                                      * 00113600
*                     MSGSTGKEY                                       * 00113700
*                     NEXTOFF                                         * 00113800
*                     NEXTPTROFF                                      * 00113900
*                     PARTALET                                        * 00114000
*                     PARTALETOFF                                     * 00114100
*                     PARTALETTBL                                     * 00114200
*                     PARTLEN                                         * 00114300
*                     PARTLENOFF                                      * 00114400
*                     PARTLENTBL                                      * 00114500
*                     PARTOFF                                         * 00114600
*                     PARTPTROFF                                      * 00114700
*              2      TOKEN                                           * 00114800
*                                                                     * 00114900
*                                                                     * 00115000
*                                                                     * 00115100
*01* CHANGE ACTIVITY:                                                 * 00115200
*                                                                     * 00115300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00115400
*                                                                     * 00115500
*    $L0=SYSLKXMG HBB4410 860901 PDXB:  Coupling Support COUPLXSI     * 00115600
*                                         line item                   * 00115700
*    $L1=SYSLKTSG HBB5510 910923 PD00CJ:  Scatter message table       * 00115800
*                                         support                     * 00115900
*    $P1=PKB2941  HBB4430 920617 PD00T8:  Update prolog to state only * 00116000
*                                         31 bit addressing mode is   * 00116100
*                                         supported                   * 00116200
*    $L2=SYSLKTSG HBB5510 920812 PD00BJ:  Scatter message queue       * 00116300
*                                         support                     * 00116400
*    $P2=PIG0970  HBB5510 921223 PD00BJ:  ASAP unit test fixes        * 00116500
*    $P3=PIG2739  HBB5510 930909 PD00CJ:  Remove HP3/HP2 GML tags     * 00116600
*                                         from the prologue since     * 00116700
*                                         they no longer work with    * 00116800
*                                         AMG.                        * 00116900
*    $L3=XCFBCXMG JBB6602 950501 PD00BJ:  Add TOKEN keyword           * 00117000
*    $P4=PSD0665  JBB6602 960122 PD00DT:  Add TOKEN keyword           * 00117100
*    $P5=PSD0965  JBB6602 960404 PD00DT:  Update reason code          * 00117200
*                                         documentation               * 00117300
*    $P6=PQC2435  HBB6603 960911 PD00DT:  Update reason code          * 00117400
*                                         documentation               * 00117500
****** END OF SPECIFICATIONS *****************************************/ 00117600
*/* TLINE 1 *********************************************************** 00117700
         MACRO                                                          00117800
&XLABEL  IXCMSGI &TOKEN=,&MSGTOKEN=,&MULTIPART=,&MSGBUF=,&#MSGPARTS=,  *00117900
               &ELEMENT=,&ELEMFORM=,&NEXTOFF=,&NEXTPTROFF=,            *00118000
               &ENDOFQUEUE=,&PARTOFF=,&PARTPTROFF=,&PARTALET=,         *00118100
               &PARTALETOFF=,&PARTALETTBL=,&PARTLEN=,&PARTLENOFF=,     *00118200
               &PARTLENTBL=,&MSGSTGKEY=,&RETCODE=,&RSNCODE=,&PLISTVER=,*00118300
               &MF=                                                     00118400
.*                                                                      00118500
*                 MACDATE -05/19/97-<2>                                 00118600
.*                                                                      00118700
.*******************************************************************    00118800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00118900
.*******************************************************************    00119000
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00119100
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00119200
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00119300
.*                                                                      00119400
                 GBLC  &ZIXCMSGI   YES=MACRO USED AT LEAST ONCE         00119500
.*******************************************************************    00119600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00119700
.*******************************************************************    00119800
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00119900
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         00120000
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00120100
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00120200
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00120300
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00120400
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00120500
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00120600
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00120700
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00120800
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00120900
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00121000
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00121100
.*                                                                      00121200
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00121300
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00121400
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00121500
                 LCLC  &ZENDBASEPL              End of base PL          00121600
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00121700
.*******************************************************************    00121800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00121900
.*******************************************************************    00122000
                 LCLA  &ZI         INDEX FOR ARRAY                      00122100
                 LCLA  &ZJ         INDEX FOR PARMS                      00122200
                 LCLA  &ZK         INDEX FOR PARSE                      00122300
                 LCLA  &ZLO        LOW RANGE VALUE                      00122400
                 LCLA  &ZHI        HIGH RANGE VALUE                     00122500
                 LCLC  &ZW         WORK AREA FOR PARM                   00122600
.********************************************************************   00122700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00122800
.********************************************************************   00122900
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00123000
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00123100
.*                                                                      00123200
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00123300
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00123400
                 SPLEVEL  TEST                                          00123500
.ZSYS2           ANOP  ,                                                00123600
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00123700
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00123800
                 SYSSTATE TEST                                          00123900
                 AGO   .ZSYS4                                           00124000
.ZSYS3           ANOP  ,                                                00124100
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00124200
.ZSYS4           ANOP  ,                                                00124300
.*******************************************************************    00124400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00124500
.*******************************************************************    00124600
                 LCLC  &XFULLTOKEN              ++ NAME                 00124700
                 LCLC  &XTOKEN     ++ NAME                              00124800
                 LCLC  &XMSGTOKEN  ++ NAME                              00124900
                 LCLC  &XMULTIPART              ++ VALUE                00125000
                 LCLC  &XMSGBUF    ++ NAME                              00125100
                 LCLC  &X#MSGPARTS              ++ NAME                 00125200
                 LCLC  &XELEMENT   ++ NAME                              00125300
                 LCLC  &XELEMFORM  ++ VALUE                             00125400
                 LCLC  &XNEXTOFF   ++ NAME                              00125500
                 LCLC  &XNEXTPTROFF             ++ NAME                 00125600
                 LCLC  &XENDOFQUEUE             ++ NAME                 00125700
                 LCLC  &XPARTMODE  ++ NAME                              00125800
                 LCLC  &XPARTOFF   ++ NAME                              00125900
                 LCLC  &XPARTPTROFF             ++ NAME                 00126000
                 LCLC  &XDELLIST3  ++ NAME                              00126100
                 LCLC  &XPARTALET  ++ NAME                              00126200
                 LCLC  &XPARTALETOFF            ++ NAME                 00126300
                 LCLC  &XPARTALETTBL            ++ NAME                 00126400
                 LCLC  &XDELLIST2  ++ NAME                              00126500
                 LCLC  &XPARTLEN   ++ NAME                              00126600
                 LCLC  &XPARTLENOFF             ++ NAME                 00126700
                 LCLC  &XPARTLENTBL             ++ NAME                 00126800
                 LCLC  &XMSGSTGKEY              ++ NAME                 00126900
                 LCLC  &XRETCODE   ++ NAME                              00127000
                 LCLC  &XRSNCODE   ++ NAME                              00127100
                 LCLA  &XPLISTVER  ++ VALUE                             00127200
                 LCLC  &XMF        ++ VALUE                             00127300
                 LCLC  &XMFCTRL    ++ NAME                              00127400
                 LCLC  &XMFATTR    ++ VALUE                             00127500
                 LCLC  &XMFSCK     ++ VALUE                             00127600
.*******************************************************************    00127700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00127800
.*******************************************************************    00127900
                 LCLC  &ZXFULLTOKEN             ++ INPUT NAME           00128000
                 LCLC  &ZXTOKEN    ++ INPUT NAME                        00128100
                 LCLC  &ZXMSGTOKEN              ++ INPUT NAME           00128200
                 LCLC  &ZXMULTIPART             ++ INPUT VALUE          00128300
                 LCLC  &ZXMSGBUF   ++ INPUT NAME                        00128400
                 LCLC  &ZX#MSGPARTS             ++ INPUT NAME           00128500
                 LCLC  &ZXELEMENT  ++ INPUT NAME                        00128600
                 LCLC  &ZXELEMFORM              ++ INPUT VALUE          00128700
                 LCLC  &ZXNEXTOFF  ++ INPUT NAME                        00128800
                 LCLC  &ZXNEXTPTROFF            ++ INPUT NAME           00128900
                 LCLC  &ZXENDOFQUEUE            ++ INPUT NAME           00129000
                 LCLC  &ZXPARTMODE              ++ INPUT NAME           00129100
                 LCLC  &ZXPARTOFF  ++ INPUT NAME                        00129200
                 LCLC  &ZXPARTPTROFF            ++ INPUT NAME           00129300
                 LCLC  &ZXDELLIST3              ++ INPUT NAME           00129400
                 LCLC  &ZXPARTALET              ++ INPUT NAME           00129500
                 LCLC  &ZXPARTALETOFF           ++ INPUT NAME           00129600
                 LCLC  &ZXPARTALETTBL           ++ INPUT NAME           00129700
                 LCLC  &ZXDELLIST2              ++ INPUT NAME           00129800
                 LCLC  &ZXPARTLEN  ++ INPUT NAME                        00129900
                 LCLC  &ZXPARTLENOFF            ++ INPUT NAME           00130000
                 LCLC  &ZXPARTLENTBL            ++ INPUT NAME           00130100
                 LCLC  &ZXMSGSTGKEY             ++ INPUT NAME           00130200
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00130300
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00130400
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00130500
                 LCLC  &ZXMF       ++ INPUT VALUE                       00130600
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00130700
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00130800
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00130900
.********************************************************************   00131000
.***AC.PLV01  PROCESS PLISTVER                                      *   00131100
.********************************************************************   00131200
&XPLISTVER      SETA  0                                                 00131300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00131400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00131500
&XPLISTVER      SETA  2                                                 00131600
.ZPLV0          ANOP  ,                                                 00131700
.*                                                                      00131800
                AIF   ('&TOKEN' EQ '').ZPLV1E                           00131900
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00132000
&XPLISTVER      SETA  2                                                 00132100
.ZPLV1E         ANOP  ,                                                 00132200
.*                                                                      00132300
                AIF   ('&#MSGPARTS' EQ '').ZPLV2E                       00132400
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00132500
&XPLISTVER      SETA  1                                                 00132600
.ZPLV2E         ANOP  ,                                                 00132700
.*                                                                      00132800
                AIF   ('&ELEMENT' EQ '').ZPLV3E                         00132900
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00133000
&XPLISTVER      SETA  1                                                 00133100
.ZPLV3E         ANOP  ,                                                 00133200
.*                                                                      00133300
                AIF   ('&ELEMFORM' EQ '').ZPLV4E                        00133400
                AIF   (&XPLISTVER GE 1).ZPLV4E                          00133500
&XPLISTVER      SETA  1                                                 00133600
.ZPLV4E         ANOP  ,                                                 00133700
.*                                                                      00133800
                AIF   ('&NEXTOFF' EQ '').ZPLV5E                         00133900
                AIF   (&XPLISTVER GE 1).ZPLV5E                          00134000
&XPLISTVER      SETA  1                                                 00134100
.ZPLV5E         ANOP  ,                                                 00134200
.*                                                                      00134300
                AIF   ('&NEXTPTROFF' EQ '').ZPLV6E                      00134400
                AIF   (&XPLISTVER GE 1).ZPLV6E                          00134500
&XPLISTVER      SETA  1                                                 00134600
.ZPLV6E         ANOP  ,                                                 00134700
.*                                                                      00134800
                AIF   ('&ENDOFQUEUE' EQ '').ZPLV7E                      00134900
                AIF   (&XPLISTVER GE 1).ZPLV7E                          00135000
&XPLISTVER      SETA  1                                                 00135100
.ZPLV7E         ANOP  ,                                                 00135200
.*                                                                      00135300
                AIF   ('&PARTOFF' EQ '').ZPLV8E                         00135400
                AIF   (&XPLISTVER GE 1).ZPLV8E                          00135500
&XPLISTVER      SETA  1                                                 00135600
.ZPLV8E         ANOP  ,                                                 00135700
.*                                                                      00135800
                AIF   ('&PARTPTROFF' EQ '').ZPLV9E                      00135900
                AIF   (&XPLISTVER GE 1).ZPLV9E                          00136000
&XPLISTVER      SETA  1                                                 00136100
.ZPLV9E         ANOP  ,                                                 00136200
.*                                                                      00136300
                AIF   ('&PARTALET' EQ '').ZPLV10E                       00136400
                AIF   (&XPLISTVER GE 1).ZPLV10E                         00136500
&XPLISTVER      SETA  1                                                 00136600
.ZPLV10E        ANOP  ,                                                 00136700
.*                                                                      00136800
                AIF   ('&PARTALETOFF' EQ '').ZPLV11E                    00136900
                AIF   (&XPLISTVER GE 1).ZPLV11E                         00137000
&XPLISTVER      SETA  1                                                 00137100
.ZPLV11E        ANOP  ,                                                 00137200
.*                                                                      00137300
                AIF   ('&PARTALETTBL' EQ '').ZPLV12E                    00137400
                AIF   (&XPLISTVER GE 1).ZPLV12E                         00137500
&XPLISTVER      SETA  1                                                 00137600
.ZPLV12E        ANOP  ,                                                 00137700
.*                                                                      00137800
                AIF   ('&PARTLEN' EQ '').ZPLV13E                        00137900
                AIF   (&XPLISTVER GE 1).ZPLV13E                         00138000
&XPLISTVER      SETA  1                                                 00138100
.ZPLV13E        ANOP  ,                                                 00138200
.*                                                                      00138300
                AIF   ('&PARTLENOFF' EQ '').ZPLV14E                     00138400
                AIF   (&XPLISTVER GE 1).ZPLV14E                         00138500
&XPLISTVER      SETA  1                                                 00138600
.ZPLV14E        ANOP  ,                                                 00138700
.*                                                                      00138800
                AIF   ('&PARTLENTBL' EQ '').ZPLV15E                     00138900
                AIF   (&XPLISTVER GE 1).ZPLV15E                         00139000
&XPLISTVER      SETA  1                                                 00139100
.ZPLV15E        ANOP  ,                                                 00139200
.*                                                                      00139300
                AIF   ('&MSGSTGKEY' EQ '').ZPLV16E                      00139400
                AIF   (&XPLISTVER GE 1).ZPLV16E                         00139500
&XPLISTVER      SETA  1                                                 00139600
.ZPLV16E        ANOP  ,                                                 00139700
.*                                                                      00139800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00139900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00140000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00140100
.*-------------------------------------------------------------------   00140200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00140300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00140400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00140500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00140600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00140700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00140800
                AGO   .ZPVCK2                                           00140900
.ZPVCK3         ANOP  ,                                                 00141000
.*-------------------------------------------------------------------   00141100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00141200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00141300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00141400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00141500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00141600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00141700
                AGO   .ZPVCKE                                           00141800
.ZPVCK2         ANOP  ,                                                 00141900
.*-------------------------------------------------------------------   00142000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00142100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00142200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00142300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00142400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00142500
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00142600
.ZPVCK6         ANOP  ,                                                 00142700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00142800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00142900
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00143000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00143100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00143200
&XPLISTVER      SETA  2                                                 00143300
                AGO   .ZPVCKE                                           00143400
.*-------------------------------------------------------------------   00143500
.ZPVCK4A        ANOP  ,                                                 00143600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00143700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00143800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00143900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00144000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00144100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00144200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00144300
                AGO   .ZPVCK5                                           00144400
.ZPVCK4         ANOP  ,                                                 00144500
&XPLISTVER      SETA  &PLISTVER(1)                                      00144600
.ZPVCK5         ANOP  ,                                                 00144700
.ZPVCKE         ANOP  ,                                                 00144800
.********************************************************************   00144900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00145000
.********************************************************************   00145100
                 ACTR  10000                                            00145200
.*------------------------------------------------------------------    00145300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145400
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00145500
.*-------------------------------------------------------------------   00145600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145700
.ZG61            ANOP  ,                                                00145800
&ZTLC            SETC 'S'                                               00145900
                 AIF   ('&MF(1)' NE '&ZTLC').ZG62                       00146000
&XMF             SETC  'S'         SET KEYWORD                          00146100
                 AIF   (N'&MF LE 1).ZG61A       CK NUM                  00146200
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00146300
&ZMS             SETC  '&ZMS.&MF"'                                      00146400
&ZMS             SETC  '&ZMS "MF"'                                      00146500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00146600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00146700
.ZG61A           ANOP  ,                                                00146800
.*-------------------------------------------------------------------   00146900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00147000
.ZG62            ANOP  ,                                                00147100
&ZTLC            SETC 'L'                                               00147200
                 AIF   ('&MF(1)' NE '&ZTLC').ZG69                       00147300
&XMF             SETC  'L'         SET KEYWORD                          00147400
                 AIF   (N'&MF LE 3).ZG62A       CK NUM                  00147500
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00147600
&ZMS             SETC  '&ZMS.&MF"'                                      00147700
&ZMS             SETC  '&ZMS "MF"'                                      00147800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00147900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00148000
.ZG62A           ANOP  ,                                                00148100
.*-------------------------------------------------------------------   00148200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00148300
                 AIF   (N'&SYSLIST NE 0).ZG62B  POSITIONALS?            00148400
                 AIF   ('&TOKEN' NE '').ZG62B   KEYS?                   00148500
                 AIF   ('&MSGTOKEN' NE '').ZG62B  KEYS?                 00148600
                 AIF   ('&MULTIPART' NE '').ZG62B  KEYS?                00148700
                 AIF   ('&MSGBUF' NE '').ZG62B  KEYS?                   00148800
                 AIF   ('&#MSGPARTS' NE '').ZG62B  KEYS?                00148900
                 AIF   ('&ELEMENT' NE '').ZG62B  KEYS?                  00149000
                 AIF   ('&ELEMFORM' NE '').ZG62B  KEYS?                 00149100
                 AIF   ('&NEXTOFF' NE '').ZG62B  KEYS?                  00149200
                 AIF   ('&NEXTPTROFF' NE '').ZG62B  KEYS?               00149300
                 AIF   ('&ENDOFQUEUE' NE '').ZG62B  KEYS?               00149400
                 AIF   ('&PARTOFF' NE '').ZG62B  KEYS?                  00149500
                 AIF   ('&PARTPTROFF' NE '').ZG62B  KEYS?               00149600
                 AIF   ('&PARTALET' NE '').ZG62B  KEYS?                 00149700
                 AIF   ('&PARTALETOFF' NE '').ZG62B  KEYS?              00149800
                 AIF   ('&PARTALETTBL' NE '').ZG62B  KEYS?              00149900
                 AIF   ('&PARTLEN' NE '').ZG62B  KEYS?                  00150000
                 AIF   ('&PARTLENOFF' NE '').ZG62B  KEYS?               00150100
                 AIF   ('&PARTLENTBL' NE '').ZG62B  KEYS?               00150200
                 AIF   ('&MSGSTGKEY' NE '').ZG62B  KEYS?                00150300
                 AIF   ('&RETCODE' NE '').ZG62B  KEYS?                  00150400
                 AIF   ('&RSNCODE' NE '').ZG62B  KEYS?                  00150500
                 AGO    .ZG62C     INVOCATION OKAY                      00150600
.ZG62B           ANOP  ,                                                00150700
&ZMS             SETC  'THE "L" FORM OF "MF"'   *MFLA* MNOTE            00150800
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00150900
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00151000
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00151100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00151200
.ZG62C           ANOP  ,                                                00151300
.*-------------------------------------------------------------------   00151400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00151500
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00151600
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00151700
                 AIF   (N'&MF(2) GT 1).ZG64B    MULTI PARMS             00151800
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00151900
.ZG64B           AIF   (K'&MF(2) GT 0).ZG64C                            00152000
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00152100
&ZMS             SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                 00152200
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00152300
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00152400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00152500
.ZG64C           ANOP  ,                                                00152600
.*-------------------------------------------------------------------   00152700
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00152800
                 AIF   (K'&ZXMFCTRL LE 0).ZG64P  NOT I/O                00152900
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG64P                   00153000
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00153100
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00153200
&ZMS             SETC  '&ZMS.&MF"'                                      00153300
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00153400
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00153500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00153600
.ZG64P           ANOP  ,                                                00153700
.*-------------------------------------------------------------------   00153800
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00153900
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00154000
&XMFATTR         SETC  '0D'                                             00154100
                 AIF   (K'&MF(3) LE 0).ZG67B    PARM                    00154200
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00154300
                 AIF   (N'&MF(3) GT 1).ZG67B    MULTI PARMS             00154400
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00154500
.ZG67B           ANOP  ,                                                00154600
.*-------------------------------------------------------------------   00154700
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00154800
                 AIF   (K'&ZXMFATTR LE 0).ZG67P  NOT I/O                00154900
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG67P                   00155000
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00155100
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00155200
&ZMS             SETC  '&ZMS.&MF"'                                      00155300
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00155400
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00155500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00155600
.ZG67P           ANOP  ,                                                00155700
.*-------------------------------------------------------------------   00155800
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00155900
                 AIF   (K'&ZXMFATTR LE 0).ZG67S  NOT I/O                00156000
                 AIF   (K'&XMFATTR LE 60).ZG67S  LNG OK                 00156100
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00156200
&ZMS             SETC  '"MF='      *KLNGA* MNOTE                        00156300
&ZMS             SETC  '&ZMS.&MF"'                                      00156400
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00156500
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00156600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00156700
.ZG67S           ANOP  ,                                                00156800
.*-------------------------------------------------------------------   00156900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00157000
.ZG69            ANOP  ,                                                00157100
&ZTLC            SETC 'E'                                               00157200
                 AIF   ('&MF(1)' NE '&ZTLC').ZG77                       00157300
&XMF             SETC  'E'         SET KEYWORD                          00157400
                 AIF   (N'&MF LE 3).ZG69A       CK NUM                  00157500
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00157600
&ZMS             SETC  '&ZMS.&MF"'                                      00157700
&ZMS             SETC  '&ZMS "MF"'                                      00157800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00157900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00158000
.ZG69A           ANOP  ,                                                00158100
.*-------------------------------------------------------------------   00158200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00158300
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00158400
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00158500
                 AIF   (N'&MF(2) GT 1).ZG71B    MULTI PARMS             00158600
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00158700
.ZG71B           AIF   (K'&MF(2) GT 0).ZG71C                            00158800
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00158900
&ZMS             SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                 00159000
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00159100
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00159200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00159300
.ZG71C           ANOP  ,                                                00159400
.*-------------------------------------------------------------------   00159500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00159600
                 AIF   (K'&ZXMFCTRL LE 0).ZG71R  NOT I/O                00159700
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG71R                   00159800
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00159900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                     00160000
                 AIF   (K'&ZCGPR GT 2).ZG71Q                            00160100
                 AIF   ('&ZCGPR' EQ '0').ZG71Q                          00160200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00160300
                 AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME        00160400
.ZG71P           ANOP  ,                                                00160500
                 AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC             00160600
                 AIF   ('&ZCGPR' LT '1').ZG71Q                          00160700
                 AIF   ('&ZCGPR' LE '12').ZG71R                         00160800
.ZG71Q           ANOP  ,                                                00160900
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00161000
&ZMS             SETC  '&ZMS.&MF"'                                      00161100
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00161200
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00161300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00161400
.ZG71R           ANOP  ,                                                00161500
.*-------------------------------------------------------------------   00161600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00161700
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00161800
.ZG75A   AIF   ('&MF(3)' NE 'COMPLETE').ZG76A                           00161900
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00162000
.*-------------------------------------------------------------------   00162100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00162200
.ZG76A           AIF   (K'&XMFSCK GT 0).ZG76C   KEYWORD                 00162300
                 AIF   (K'&MF(3) LE 0).ZG76B                            00162400
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00162500
&ZMS             SETC  '&ZMS.&MF"'                                      00162600
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00162700
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00162800
&ZMS             SETC  '&ZMS "COMPLETE".'       VALID KEYWORD           00162900
                 MNOTE 8,' &ZMS '                                       00163000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00163100
.ZG76B           ANOP  ,                                                00163200
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00163300
.ZG76C           ANOP  ,                                                00163400
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00163500
.*------------------------------------------------------------------    00163600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00163700
.ZG77            ANOP  ,                                                00163800
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00163900
                 AIF   (K'&XMF GT 0).ZG77E      VALID ARG               00164000
                 AIF   (T'&MF EQ 'O').ZG77D     OMITTED                 00164100
&ZASYSLNDX       SETA  0                                                00164200
.ZG77A           ANOP  ,           POSITIONAL MACRO KEY                 00164300
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00164400
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG77C                 00164500
&ZTLC            SETC 'MF'                                              00164600
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG77A        00164700
.ZG77B           ANOP  ,                                                00164800
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00164900
&ZMS             SETC  'THE "MF" KEY'           *KOPTA* MNOTE           00165000
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00165100
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00165200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00165300
                 AGO   .ZG77E                                           00165400
.ZG77C           ANOP  ,                                                00165500
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00165600
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00165700
&ZMS             SETC  '&ZMS.&MF"'                                      00165800
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00165900
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00166000
&ZMS             SETC  '&ZMS "S",'              VALID KEYWORD           00166100
&ZMS             SETC  '&ZMS "L",'              VALID KEYWORD           00166200
&ZMS             SETC  '&ZMS OR "E".'           VALID KEYWORD           00166300
                 MNOTE 8,' &ZMS '                                       00166400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00166500
                 AGO   .ZG77E                                           00166600
.ZG77D           ANOP  ,                                                00166700
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00166800
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00166900
.ZG77E           ANOP  ,                                                00167000
.********************************************************************   00167100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00167200
.********************************************************************   00167300
                 ACTR  10000                                            00167400
.*-------------------------------------------------------------------   00167500
.***AG.MF03 MF=(SLE)                                                    00167600
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00167700
.*----------------------------------------------------------------***   00167800
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00167900
&XFULLTOKEN      SETC  ''          INITIALIZE XVARIABLE                 00168000
                 AIF   (K'&TOKEN LE 0).ZG2C                             00168100
&ZXFULLTOKEN     SETC  'INPUT'     SET IN/OUTPUT                        00168200
&XFULLTOKEN      SETC  'TOKEN'     SET XVARIABLE                        00168300
&ZXTOKEN         SETC  'INPUT'     SET IN/OUTPUT                        00168400
&XTOKEN          SETC  '&TOKEN(1)'              SET XVARIABLE PARM      00168500
                 AIF   (N'&TOKEN GT 1).ZG2A     MULTIPLE PARMS          00168600
&XTOKEN          SETC  '&TOKEN'    SET XVARIABLE PARM                   00168700
.ZG2A            AIF   (N'&TOKEN LE 1).ZG2B     CK NUM                  00168800
&ZMS             SETC  '"TOKEN='   *KPOSA* MNOTE                        00168900
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00169000
&ZMS             SETC  '&ZMS "TOKEN"'                                   00169100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00169200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00169300
.ZG2B            AIF   (K'&XTOKEN GT 0).ZG2C    ONE PARM                00169400
&ZXFULLTOKEN     SETC  ''          RESET IN/OUTPUT                      00169500
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00169600
&ZMS             SETC  ' '         *KRQDA*                              00169700
&ZMS             SETC  '&ZMS "TOKEN" KEY AND ITS ARGUMENT'              00169800
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00169900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00170000
.ZG2C            ANOP  ,                                                00170100
.*----------------------------------------------------------------***   00170200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00170300
                 AIF   (K'&MSGTOKEN LE 0).ZG3D  NO ME KEY               00170400
                 AIF   (N'&MSGTOKEN LE 1).ZG3A  CK NUM                  00170500
&ZMS             SETC  '"MSGTOKEN='             *KPOSA* MNOTE           00170600
&ZMS             SETC  '&ZMS.&MSGTOKEN"'                                00170700
&ZMS             SETC  '&ZMS "MSGTOKEN"'                                00170800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00170900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00171000
.ZG3A            AIF   (K'&XFULLTOKEN LE 0).ZG3B                        00171100
&ZMS             SETC  '"MSGTOKEN'              *KMEKA* MNOTE           00171200
&ZMS             SETC  '&ZMS.=&MSGTOKEN"'                               00171300
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00171400
&ZMS             SETC  '&ZMS "&XFULLTOKEN"'                             00171500
                 MNOTE 8,' &ZMS KEY.'                                   00171600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00171700
                 AGO   .ZG3D                                            00171800
.*                                                                      00171900
.ZG3B            ANOP  ,                                                00172000
&ZXFULLTOKEN     SETC  'INPUT'     SET IN/OUTPUT                        00172100
&XFULLTOKEN      SETC  'MSGTOKEN'  SET XVARIABLE                        00172200
&ZXMSGTOKEN      SETC  'INPUT'     SET IN/OUTPUT                        00172300
&XMSGTOKEN       SETC  '&MSGTOKEN(1)'           SET XVARIABLE PARM      00172400
                 AIF   (N'&MSGTOKEN GT 1).ZG3C  MULTIPLE PARMS          00172500
&XMSGTOKEN       SETC  '&MSGTOKEN'              SET XVARIABLE PARM      00172600
.ZG3C            AIF   (K'&XMSGTOKEN GT 0).ZG3D  ONE PARM               00172700
&ZXFULLTOKEN     SETC  ''          RESET IN/OUTPUT                      00172800
&ZXMSGTOKEN      SETC  ''          RESET IN/OUTPUT                      00172900
&ZMS             SETC  ' '         *KRQDA*                              00173000
&ZMS             SETC  '&ZMS "MSGTOKEN" KEY AND ITS ARGUMENT'           00173100
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00173200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00173300
.ZG3D            ANOP  ,                                                00173400
.*------------------------------------------------------------------    00173500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00173600
                 AIF   (K'&XFULLTOKEN GT 0).ZG4B                        00173700
&ZXFULLTOKEN     SETC  ''          RESET IN/OUTPUT                      00173800
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00173900
&XFULLTOKEN      SETC  ''          ENSURE NULL                          00174000
&XTOKEN          SETC  ''          ENSURE NULL                          00174100
&ZMS             SETC  'ONE OF THE FOLLOWING'   *KMERA* MNOTE           00174200
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00174300
&ZMS             SETC  '&ZMS REQUIRED:'                                 00174400
&ZMS             SETC  '&ZMS "TOKEN"'           VALID ME KEY            00174500
&ZMS             SETC  '&ZMS OR "MSGTOKEN".'    VALID ME KEY            00174600
                 MNOTE 8,' &ZMS '                                       00174700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00174800
.ZG4B            ANOP  ,                                                00174900
.*-------------------------------------------------------------------   00175000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00175100
.ZG2             AIF   ('&XFULLTOKEN' NE 'TOKEN').ZG3                   00175200
.*-------------------------------------------------------------------   00175300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00175400
                 AIF   (K'&ZXTOKEN LE 0).ZG2R   NOT I/O                 00175500
                 AIF   ('&XTOKEN'(1,1) NE '(').ZG2R                     00175600
&ZCGPR           SETC  '&XTOKEN'(2,K'&XTOKEN-2)                         00175700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                      00175800
                 AIF   (K'&ZCGPR GT 2).ZG2Q                             00175900
                 AIF   ('&ZCGPR' EQ '0').ZG2Q                           00176000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00176100
                 AIF   (T'&ZCGPR NE 'N').ZG2Q   INVALID REG NAME        00176200
.ZG2P            ANOP  ,                                                00176300
                 AIF   (T'&ZCGPR NE 'N').ZG2R   NON NUMERIC             00176400
                 AIF   ('&ZCGPR' LT '2').ZG2Q                           00176500
                 AIF   ('&ZCGPR' LE '12').ZG2R                          00176600
.ZG2Q            ANOP  ,                                                00176700
&ZMS             SETC  '"TOKEN='   *KGPRA* MNOTE                        00176800
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00176900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00177000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00177100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00177200
.ZG2R            ANOP  ,                                                00177300
.*-------------------------------------------------------------------   00177400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00177500
.ZG3             AIF   ('&XFULLTOKEN' NE 'MSGTOKEN').ZG4                00177600
.*-------------------------------------------------------------------   00177700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00177800
                 AIF   (K'&ZXMSGTOKEN LE 0).ZG3R  NOT I/O               00177900
                 AIF   ('&XMSGTOKEN'(1,1) NE '(').ZG3R                  00178000
&ZCGPR           SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                   00178100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                      00178200
                 AIF   (K'&ZCGPR GT 2).ZG3Q                             00178300
                 AIF   ('&ZCGPR' EQ '0').ZG3Q                           00178400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00178500
                 AIF   (T'&ZCGPR NE 'N').ZG3Q   INVALID REG NAME        00178600
.ZG3P            ANOP  ,                                                00178700
                 AIF   (T'&ZCGPR NE 'N').ZG3R   NON NUMERIC             00178800
                 AIF   ('&ZCGPR' LT '2').ZG3Q                           00178900
                 AIF   ('&ZCGPR' LE '12').ZG3R                          00179000
.ZG3Q            ANOP  ,                                                00179100
&ZMS             SETC  '"MSGTOKEN='             *KGPRA* MNOTE           00179200
&ZMS             SETC  '&ZMS.&MSGTOKEN"'                                00179300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00179400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00179500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00179600
.ZG3R            ANOP  ,                                                00179700
.*-------------------------------------------------------------------   00179800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00179900
.ZG4             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00180000
.*------------------------------------------------------------------    00180100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180200
&XMULTIPART      SETC  ''          INITIALIZE XVARIABLE                 00180300
.*-------------------------------------------------------------------   00180400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180500
.ZG7             ANOP  ,                                                00180600
                 AIF   (K'&MULTIPART(1) LE 0).ZG7A                      00180700
&ZTLC            SETC 'NO'                                              00180800
                 AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG11                00180900
&XMULTIPART      SETC  'NO'        SET KEYWORD                          00181000
                 AIF   (N'&MULTIPART LE 1).ZG7A  CK NUM                 00181100
&ZMS             SETC  '"MULTIPART='            *KPOSA* MNOTE           00181200
&ZMS             SETC  '&ZMS.&MULTIPART"'                               00181300
&ZMS             SETC  '&ZMS "MULTIPART"'                               00181400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00181500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00181600
.ZG7A            ANOP  ,                                                00181700
.*------------------------------------------------------------------    00181800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00182000
.ZG7A0           AIF   (K'&#MSGPARTS LE 0).ZG7A1  OK                    00182100
&ZCVAL           SETC '&ZCVAL #MSGPARTS'        INCORRECT KEY USED      00182200
.ZG7A1           AIF   (K'&ELEMENT LE 0).ZG7A2  OK                      00182300
&ZCVAL           SETC '&ZCVAL ELEMENT'          INCORRECT KEY USED      00182400
.ZG7A2           AIF   (K'&ELEMFORM LE 0).ZG7A3  OK                     00182500
&ZCVAL           SETC '&ZCVAL ELEMFORM'         INCORRECT KEY USED      00182600
.ZG7A3           AIF   (K'&NEXTOFF LE 0).ZG7A4  OK                      00182700
&ZCVAL           SETC '&ZCVAL NEXTOFF'          INCORRECT KEY USED      00182800
.ZG7A4           AIF   (K'&NEXTPTROFF LE 0).ZG7A5  OK                   00182900
&ZCVAL           SETC '&ZCVAL NEXTPTROFF'       INCORRECT KEY USED      00183000
.ZG7A5           AIF   (K'&ENDOFQUEUE LE 0).ZG7A6  OK                   00183100
&ZCVAL           SETC '&ZCVAL ENDOFQUEUE'       INCORRECT KEY USED      00183200
.ZG7A6           AIF   (K'&PARTOFF LE 0).ZG7A7  OK                      00183300
&ZCVAL           SETC '&ZCVAL PARTOFF'          INCORRECT KEY USED      00183400
.ZG7A7           AIF   (K'&PARTPTROFF LE 0).ZG7A8  OK                   00183500
&ZCVAL           SETC '&ZCVAL PARTPTROFF'       INCORRECT KEY USED      00183600
.ZG7A8           AIF   (K'&PARTALET LE 0).ZG7A9  OK                     00183700
&ZCVAL           SETC '&ZCVAL PARTALET'         INCORRECT KEY USED      00183800
.ZG7A9           AIF   (K'&PARTALETOFF LE 0).ZG7A10  OK                 00183900
&ZCVAL           SETC '&ZCVAL PARTALETOFF'      INCORRECT KEY USED      00184000
.ZG7A10          AIF   (K'&PARTALETTBL LE 0).ZG7A11  OK                 00184100
&ZCVAL           SETC '&ZCVAL PARTALETTBL'      INCORRECT KEY USED      00184200
.ZG7A11          AIF   (K'&PARTLEN LE 0).ZG7A12  OK                     00184300
&ZCVAL           SETC '&ZCVAL PARTLEN'          INCORRECT KEY USED      00184400
.ZG7A12          AIF   (K'&PARTLENOFF LE 0).ZG7A13  OK                  00184500
&ZCVAL           SETC '&ZCVAL PARTLENOFF'       INCORRECT KEY USED      00184600
.ZG7A13          AIF   (K'&PARTLENTBL LE 0).ZG7A14  OK                  00184700
&ZCVAL           SETC '&ZCVAL PARTLENTBL'       INCORRECT KEY USED      00184800
.ZG7A14          AIF   (K'&ZCVAL LE 0).ZG7A15   OK                      00184900
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00185000
&ZMS             SETC  '"MULTIPART'             *KMEIA* MNOTE           00185100
&ZMS             SETC  '&ZMS.=&MULTIPART"'                              00185200
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00185300
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00185400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00185500
.ZG7A15          ANOP  ,                                                00185600
.*----------------------------------------------------------------***   00185700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00185800
                 AIF   (N'&MSGBUF LE 1).ZG9A    CK NUM                  00185900
&ZMS             SETC  '"MSGBUF='  *KPOSA* MNOTE                        00186000
&ZMS             SETC  '&ZMS.&MSGBUF"'                                  00186100
&ZMS             SETC  '&ZMS "MSGBUF"'                                  00186200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00186300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00186400
.ZG9A            ANOP  ,                                                00186500
.*-------------------------------------------------------------------   00186600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00186700
&ZXMSGBUF        SETC  'INPUT'     SET IN/OUTPUT                        00186800
&XMSGBUF         SETC  '&MSGBUF(1)'             SET XVARIABLE           00186900
                 AIF   (N'&MSGBUF GT 1).ZG9B    MULTI PARMS             00187000
&XMSGBUF         SETC  '&MSGBUF'   SET XVARIABLE                        00187100
.ZG9B            AIF   (K'&MSGBUF(1) GT 0).ZG9C                         00187200
&ZXMSGBUF        SETC  ''          RESET IN/OUTPUT                      00187300
&ZMS             SETC  'WHEN "NO" IS SPECIFIED'  *KRQDA*                00187400
&ZMS             SETC  '&ZMS , "MSGBUF" KEY AND ITS ARGUMENT'           00187500
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00187600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00187700
.ZG9C            ANOP  ,                                                00187800
.*-------------------------------------------------------------------   00187900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00188000
                 AIF   (K'&ZXMSGBUF LE 0).ZG9R  NOT I/O                 00188100
                 AIF   ('&XMSGBUF'(1,1) NE '(').ZG9R                    00188200
&ZCGPR           SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                       00188300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                      00188400
                 AIF   (K'&ZCGPR GT 2).ZG9Q                             00188500
                 AIF   ('&ZCGPR' EQ '0').ZG9Q                           00188600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00188700
                 AIF   (T'&ZCGPR NE 'N').ZG9Q   INVALID REG NAME        00188800
.ZG9P            ANOP  ,                                                00188900
                 AIF   (T'&ZCGPR NE 'N').ZG9R   NON NUMERIC             00189000
                 AIF   ('&ZCGPR' LT '2').ZG9Q                           00189100
                 AIF   ('&ZCGPR' LE '12').ZG9R                          00189200
.ZG9Q            ANOP  ,                                                00189300
&ZMS             SETC  '"MSGBUF='  *KGPRA* MNOTE                        00189400
&ZMS             SETC  '&ZMS.&MSGBUF"'                                  00189500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00189600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00189700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00189800
.ZG9R            ANOP  ,                                                00189900
.*-------------------------------------------------------------------   00190000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00190100
.ZG11            ANOP  ,                                                00190200
&ZTLC            SETC 'YES'                                             00190300
                 AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG46                00190400
&XMULTIPART      SETC  'YES'       SET KEYWORD                          00190500
                 AIF   (N'&MULTIPART LE 1).ZG11A  CK NUM                00190600
&ZMS             SETC  '"MULTIPART='            *KPOSA* MNOTE           00190700
&ZMS             SETC  '&ZMS.&MULTIPART"'                               00190800
&ZMS             SETC  '&ZMS "MULTIPART"'                               00190900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00191000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00191100
.ZG11A           ANOP  ,                                                00191200
.*------------------------------------------------------------------    00191300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00191500
.ZG11A0          AIF   (K'&MSGBUF LE 0).ZG11A1  OK                      00191600
&ZCVAL           SETC '&ZCVAL MSGBUF'           INCORRECT KEY USED      00191700
.ZG11A1          AIF   (K'&ZCVAL LE 0).ZG11A2   OK                      00191800
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00191900
&ZMS             SETC  '"MULTIPART'             *KMEIA* MNOTE           00192000
&ZMS             SETC  '&ZMS.=&MULTIPART"'                              00192100
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00192200
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00192300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00192400
.ZG11A2          ANOP  ,                                                00192500
.*----------------------------------------------------------------***   00192600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00192700
                 AIF   (N'&#MSGPARTS LE 1).ZG13A  CK NUM                00192800
&ZMS             SETC  '"#MSGPARTS='            *KPOSA* MNOTE           00192900
&ZMS             SETC  '&ZMS.&#MSGPARTS"'                               00193000
&ZMS             SETC  '&ZMS "#MSGPARTS"'                               00193100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00193200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00193300
.ZG13A           ANOP  ,                                                00193400
.*-------------------------------------------------------------------   00193500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00193600
&ZX#MSGPARTS     SETC  'INPUT'     SET IN/OUTPUT                        00193700
&X#MSGPARTS      SETC  'AS_NEEDED'                                      00193800
                 AIF   (K'&#MSGPARTS(1) LE 0).ZG13B  PARM               00193900
&X#MSGPARTS      SETC  '&#MSGPARTS(1)'          SET XVARIABLE           00194000
                 AIF   (N'&#MSGPARTS GT 1).ZG13B  MULTI PARMS           00194100
&X#MSGPARTS      SETC  '&#MSGPARTS'             SET XVARIABLE           00194200
.ZG13B           ANOP  ,                                                00194300
.*-------------------------------------------------------------------   00194400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00194500
                 AIF   (K'&ZX#MSGPARTS LE 0).ZG13R  NOT I/O             00194600
                 AIF   ('&X#MSGPARTS' EQ 'AS_NEEDED').ZG13R             00194700
                 AIF   ('&X#MSGPARTS'(1,1) NE '(').ZG13R                00194800
&ZCGPR           SETC  '&X#MSGPARTS'(2,K'&X#MSGPARTS-2)                 00194900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                     00195000
                 AIF   (K'&ZCGPR GT 2).ZG13Q                            00195100
                 AIF   ('&ZCGPR' EQ '0').ZG13Q                          00195200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00195300
                 AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME        00195400
.ZG13P           ANOP  ,                                                00195500
                 AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC             00195600
                 AIF   ('&ZCGPR' LT '2').ZG13Q                          00195700
                 AIF   ('&ZCGPR' LE '12').ZG13R                         00195800
.ZG13Q           ANOP  ,                                                00195900
&ZMS             SETC  '"#MSGPARTS='            *KGPRA* MNOTE           00196000
&ZMS             SETC  '&ZMS.&#MSGPARTS"'                               00196100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00196200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00196300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00196400
.ZG13R           ANOP  ,                                                00196500
.*----------------------------------------------------------------***   00196600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00196700
                 AIF   (N'&ELEMENT LE 1).ZG16A  CK NUM                  00196800
&ZMS             SETC  '"ELEMENT='              *KPOSA* MNOTE           00196900
&ZMS             SETC  '&ZMS.&ELEMENT"'                                 00197000
&ZMS             SETC  '&ZMS "ELEMENT"'                                 00197100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00197200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00197300
.ZG16A           ANOP  ,                                                00197400
.*-------------------------------------------------------------------   00197500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00197600
&ZXELEMENT       SETC  'INPUT'     SET IN/OUTPUT                        00197700
&XELEMENT        SETC  '&ELEMENT(1)'            SET XVARIABLE           00197800
                 AIF   (N'&ELEMENT GT 1).ZG16B  MULTI PARMS             00197900
&XELEMENT        SETC  '&ELEMENT'  SET XVARIABLE                        00198000
.ZG16B           AIF   (K'&ELEMENT(1) GT 0).ZG16C                       00198100
&ZXELEMENT       SETC  ''          RESET IN/OUTPUT                      00198200
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*               00198300
&ZMS             SETC  '&ZMS , "ELEMENT" KEY AND ITS ARGUMENT'          00198400
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00198500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00198600
.ZG16C           ANOP  ,                                                00198700
.*-------------------------------------------------------------------   00198800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00198900
                 AIF   (K'&ZXELEMENT LE 0).ZG16R  NOT I/O               00199000
                 AIF   ('&XELEMENT'(1,1) NE '(').ZG16R                  00199100
&ZCGPR           SETC  '&XELEMENT'(2,K'&XELEMENT-2)                     00199200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                     00199300
                 AIF   (K'&ZCGPR GT 2).ZG16Q                            00199400
                 AIF   ('&ZCGPR' EQ '0').ZG16Q                          00199500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00199600
                 AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME        00199700
.ZG16P           ANOP  ,                                                00199800
                 AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC             00199900
                 AIF   ('&ZCGPR' LT '2').ZG16Q                          00200000
                 AIF   ('&ZCGPR' LE '12').ZG16R                         00200100
.ZG16Q           ANOP  ,                                                00200200
&ZMS             SETC  '"ELEMENT='              *KGPRA* MNOTE           00200300
&ZMS             SETC  '&ZMS.&ELEMENT"'                                 00200400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00200500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00200600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00200700
.ZG16R           ANOP  ,                                                00200800
.*------------------------------------------------------------------    00200900
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00201000
&XELEMFORM       SETC  ''          INITIALIZE XVARIABLE                 00201100
.*-------------------------------------------------------------------   00201200
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00201300
.ZG20            ANOP  ,                                                00201400
                 AIF   (K'&ELEMFORM(1) LE 0).ZG20A                      00201500
&ZTLC            SETC 'TABLE'                                           00201600
                 AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG24                 00201700
&XELEMFORM       SETC  'TABLE'     SET KEYWORD                          00201800
                 AIF   (N'&ELEMFORM LE 1).ZG20A  CK NUM                 00201900
&ZMS             SETC  '"ELEMFORM='             *KPOSA* MNOTE           00202000
&ZMS             SETC  '&ZMS.&ELEMFORM"'                                00202100
&ZMS             SETC  '&ZMS "ELEMFORM"'                                00202200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00202300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00202400
.ZG20A           ANOP  ,                                                00202500
.*------------------------------------------------------------------    00202600
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00202700
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00202800
.ZG20A0          AIF   (K'&NEXTPTROFF LE 0).ZG20A1  OK                  00202900
&ZCVAL           SETC '&ZCVAL NEXTPTROFF'       INCORRECT KEY USED      00203000
.ZG20A1          AIF   (K'&ENDOFQUEUE LE 0).ZG20A2  OK                  00203100
&ZCVAL           SETC '&ZCVAL ENDOFQUEUE'       INCORRECT KEY USED      00203200
.ZG20A2          AIF   (K'&ZCVAL LE 0).ZG20A3   OK                      00203300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00203400
&ZMS             SETC  '"ELEMFORM'              *KMEIA* MNOTE           00203500
&ZMS             SETC  '&ZMS.=&ELEMFORM"'                               00203600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00203700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00203800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00203900
.ZG20A3          ANOP  ,                                                00204000
.*----------------------------------------------------------------***   00204100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00204200
                 AIF   (N'&NEXTOFF LE 1).ZG22A  CK NUM                  00204300
&ZMS             SETC  '"NEXTOFF='              *KPOSA* MNOTE           00204400
&ZMS             SETC  '&ZMS.&NEXTOFF"'                                 00204500
&ZMS             SETC  '&ZMS "NEXTOFF"'                                 00204600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00204700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00204800
.ZG22A           ANOP  ,                                                00204900
.*-------------------------------------------------------------------   00205000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00205100
&ZXNEXTOFF       SETC  'INPUT'     SET IN/OUTPUT                        00205200
&XNEXTOFF        SETC  '&NEXTOFF(1)'            SET XVARIABLE           00205300
                 AIF   (N'&NEXTOFF GT 1).ZG22B  MULTI PARMS             00205400
&XNEXTOFF        SETC  '&NEXTOFF'  SET XVARIABLE                        00205500
.ZG22B           AIF   (K'&NEXTOFF(1) GT 0).ZG22C                       00205600
&ZXNEXTOFF       SETC  ''          RESET IN/OUTPUT                      00205700
&ZMS             SETC  'WHEN "TABLE" IS SPECIFIED'  *KRQDA*             00205800
&ZMS             SETC  '&ZMS , "NEXTOFF" KEY AND ITS ARGUMENT'          00205900
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00206000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00206100
.ZG22C           ANOP  ,                                                00206200
.*-------------------------------------------------------------------   00206300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00206400
                 AIF   (K'&ZXNEXTOFF LE 0).ZG22R  NOT I/O               00206500
                 AIF   ('&XNEXTOFF'(1,1) NE '(').ZG22R                  00206600
&ZCGPR           SETC  '&XNEXTOFF'(2,K'&XNEXTOFF-2)                     00206700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                     00206800
                 AIF   (K'&ZCGPR GT 2).ZG22Q                            00206900
                 AIF   ('&ZCGPR' EQ '0').ZG22Q                          00207000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00207100
                 AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME        00207200
.ZG22P           ANOP  ,                                                00207300
                 AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC             00207400
                 AIF   ('&ZCGPR' LT '2').ZG22Q                          00207500
                 AIF   ('&ZCGPR' LE '12').ZG22R                         00207600
.ZG22Q           ANOP  ,                                                00207700
&ZMS             SETC  '"NEXTOFF='              *KGPRA* MNOTE           00207800
&ZMS             SETC  '&ZMS.&NEXTOFF"'                                 00207900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00208000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00208100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00208200
.ZG22R           ANOP  ,                                                00208300
.*-------------------------------------------------------------------   00208400
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00208500
.ZG24            ANOP  ,                                                00208600
&ZTLC            SETC 'QUEUE'                                           00208700
                 AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG31                 00208800
&XELEMFORM       SETC  'QUEUE'     SET KEYWORD                          00208900
                 AIF   (N'&ELEMFORM LE 1).ZG24A  CK NUM                 00209000
&ZMS             SETC  '"ELEMFORM='             *KPOSA* MNOTE           00209100
&ZMS             SETC  '&ZMS.&ELEMFORM"'                                00209200
&ZMS             SETC  '&ZMS "ELEMFORM"'                                00209300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00209400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00209500
.ZG24A           ANOP  ,                                                00209600
.*------------------------------------------------------------------    00209700
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00209800
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00209900
.ZG24A0          AIF   (K'&NEXTOFF LE 0).ZG24A1  OK                     00210000
&ZCVAL           SETC '&ZCVAL NEXTOFF'          INCORRECT KEY USED      00210100
.ZG24A1          AIF   (K'&ZCVAL LE 0).ZG24A2   OK                      00210200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00210300
&ZMS             SETC  '"ELEMFORM'              *KMEIA* MNOTE           00210400
&ZMS             SETC  '&ZMS.=&ELEMFORM"'                               00210500
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00210600
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00210700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00210800
.ZG24A2          ANOP  ,                                                00210900
.*----------------------------------------------------------------***   00211000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00211100
                 AIF   (N'&NEXTPTROFF LE 1).ZG26A  CK NUM               00211200
&ZMS             SETC  '"NEXTPTROFF='           *KPOSA* MNOTE           00211300
&ZMS             SETC  '&ZMS.&NEXTPTROFF"'                              00211400
&ZMS             SETC  '&ZMS "NEXTPTROFF"'                              00211500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00211600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00211700
.ZG26A           ANOP  ,                                                00211800
.*-------------------------------------------------------------------   00211900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00212000
&ZXNEXTPTROFF    SETC  'INPUT'     SET IN/OUTPUT                        00212100
&XNEXTPTROFF     SETC  '&NEXTPTROFF(1)'         SET XVARIABLE           00212200
                 AIF   (N'&NEXTPTROFF GT 1).ZG26B  MULTI PARMS          00212300
&XNEXTPTROFF     SETC  '&NEXTPTROFF'            SET XVARIABLE           00212400
.ZG26B           AIF   (K'&NEXTPTROFF(1) GT 0).ZG26C                    00212500
&ZXNEXTPTROFF    SETC  ''          RESET IN/OUTPUT                      00212600
&ZMS             SETC  'WHEN "QUEUE" IS SPECIFIED'  *KRQDA*             00212700
&ZMS             SETC  '&ZMS , "NEXTPTROFF" KEY AND ITS ARGUMENT'       00212800
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00212900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00213000
.ZG26C           ANOP  ,                                                00213100
.*-------------------------------------------------------------------   00213200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00213300
                 AIF   (K'&ZXNEXTPTROFF LE 0).ZG26R  NOT I/O            00213400
                 AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZG26R               00213500
&ZCGPR           SETC  '&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2)               00213600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                     00213700
                 AIF   (K'&ZCGPR GT 2).ZG26Q                            00213800
                 AIF   ('&ZCGPR' EQ '0').ZG26Q                          00213900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00214000
                 AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME        00214100
.ZG26P           ANOP  ,                                                00214200
                 AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC             00214300
                 AIF   ('&ZCGPR' LT '2').ZG26Q                          00214400
                 AIF   ('&ZCGPR' LE '12').ZG26R                         00214500
.ZG26Q           ANOP  ,                                                00214600
&ZMS             SETC  '"NEXTPTROFF='           *KGPRA* MNOTE           00214700
&ZMS             SETC  '&ZMS.&NEXTPTROFF"'                              00214800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00214900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00215000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00215100
.ZG26R           ANOP  ,                                                00215200
.*----------------------------------------------------------------***   00215300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00215400
                 AIF   (N'&ENDOFQUEUE LE 1).ZG29A  CK NUM               00215500
&ZMS             SETC  '"ENDOFQUEUE='           *KPOSA* MNOTE           00215600
&ZMS             SETC  '&ZMS.&ENDOFQUEUE"'                              00215700
&ZMS             SETC  '&ZMS "ENDOFQUEUE"'                              00215800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00215900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00216000
.ZG29A           ANOP  ,                                                00216100
.*-------------------------------------------------------------------   00216200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00216300
&ZXENDOFQUEUE    SETC  'INPUT'     SET IN/OUTPUT                        00216400
&XENDOFQUEUE     SETC  'ZERO'                                           00216500
                 AIF   (K'&ENDOFQUEUE(1) LE 0).ZG29B  PARM              00216600
&XENDOFQUEUE     SETC  '&ENDOFQUEUE(1)'         SET XVARIABLE           00216700
                 AIF   (N'&ENDOFQUEUE GT 1).ZG29B  MULTI PARMS          00216800
&XENDOFQUEUE     SETC  '&ENDOFQUEUE'            SET XVARIABLE           00216900
.ZG29B           ANOP  ,                                                00217000
.*-------------------------------------------------------------------   00217100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00217200
                 AIF   (K'&ZXENDOFQUEUE LE 0).ZG29R  NOT I/O            00217300
                 AIF   ('&XENDOFQUEUE' EQ 'ZERO').ZG29R                 00217400
                 AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZG29R               00217500
&ZCGPR           SETC  '&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2)               00217600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                     00217700
                 AIF   (K'&ZCGPR GT 2).ZG29Q                            00217800
                 AIF   ('&ZCGPR' EQ '0').ZG29Q                          00217900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00218000
                 AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME        00218100
.ZG29P           ANOP  ,                                                00218200
                 AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC             00218300
                 AIF   ('&ZCGPR' LT '2').ZG29Q                          00218400
                 AIF   ('&ZCGPR' LE '12').ZG29R                         00218500
.ZG29Q           ANOP  ,                                                00218600
&ZMS             SETC  '"ENDOFQUEUE='           *KGPRA* MNOTE           00218700
&ZMS             SETC  '&ZMS.&ENDOFQUEUE"'                              00218800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00218900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00219000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00219100
.ZG29R           ANOP  ,                                                00219200
.*------------------------------------------------------------------    00219300
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00219400
.ZG31            ANOP  ,                                                00219500
&ZXELEMFORM      SETC  'INPUT'     SET IN/OUTPUT                        00219600
                 AIF   (K'&XELEMFORM GT 0).ZG31E  VALID ARG             00219700
                 AIF   (T'&ELEMFORM EQ 'O').ZG31D  OMITTED              00219800
&ZASYSLNDX       SETA  0                                                00219900
.ZG31A           ANOP  ,           POSITIONAL MACRO KEY                 00220000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00220100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                 00220200
&ZTLC            SETC 'ELEMFORM'                                        00220300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A        00220400
.ZG31B           ANOP  ,                                                00220500
&ZXELEMFORM      SETC  ''          RESET IN/OUTPUT                      00220600
&ZMS             SETC  'THE "ELEMFORM" KEY'     *KOPTA* MNOTE           00220700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00220800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00220900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00221000
                 AGO   .ZG31E                                           00221100
.ZG31C           ANOP  ,                                                00221200
&ZXELEMFORM      SETC  ''          RESET IN/OUTPUT                      00221300
&ZMS             SETC  '"ELEMFORM='             *KUKWA* MNOTE           00221400
&ZMS             SETC  '&ZMS.&ELEMFORM"'                                00221500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00221600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00221700
&ZMS             SETC  '&ZMS "TABLE"'           VALID KEYWORD           00221800
&ZMS             SETC  '&ZMS OR "QUEUE".'       VALID KEYWORD           00221900
                 MNOTE 8,' &ZMS '                                       00222000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00222100
                 AGO   .ZG31E                                           00222200
.ZG31D           ANOP  ,                                                00222300
&XELEMFORM       SETC  'TABLE'     SET DEFAULT KEYWORD                  00222400
.ZG31E           ANOP  ,                                                00222500
.*------------------------------------------------------------------    00222600
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00222700
                 AIF   (K'&ELEMFORM(1) GT 0).ZG31F  PARM                00222800
&XELEMFORM       SETC  ''          ENSURE NULL KEYWORD                  00222900
&ZXELEMFORM      SETC  ''          RESET IN/OUTPUT                      00223000
&ZMS             SETC  'WHEN "YES" IS SPECIFIED, THE'                   00223100
&ZMS             SETC  '&ZMS "ELEMFORM" KEY AND ITS ARGUMENT'           00223200
&ZMS             SETC  '&ZMS ARE REQUIRED.'                             00223300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00223400
&ZMS             SETC  '&ZMS "TABLE"'           VALID KEYWORD           00223500
&ZMS             SETC  '&ZMS OR "QUEUE".'       VALID KEYWORD           00223600
                 MNOTE 8,' &ZMS '                                       00223700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00223800
.ZG31F           ANOP  ,                                                00223900
.*----------------------------------------------------------------***   00224000
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00224100
&XPARTMODE       SETC  ''          INITIALIZE XVARIABLE                 00224200
                 AIF   (K'&PARTOFF LE 0).ZG33C                          00224300
&ZXPARTMODE      SETC  'INPUT'     SET IN/OUTPUT                        00224400
&XPARTMODE       SETC  'PARTOFF'   SET XVARIABLE                        00224500
&ZXPARTOFF       SETC  'INPUT'     SET IN/OUTPUT                        00224600
&XPARTOFF        SETC  '&PARTOFF(1)'            SET XVARIABLE PARM      00224700
                 AIF   (N'&PARTOFF GT 1).ZG33A  MULTIPLE PARMS          00224800
&XPARTOFF        SETC  '&PARTOFF'  SET XVARIABLE PARM                   00224900
.ZG33A           AIF   (N'&PARTOFF LE 1).ZG33B  CK NUM                  00225000
&ZMS             SETC  '"PARTOFF='              *KPOSA* MNOTE           00225100
&ZMS             SETC  '&ZMS.&PARTOFF"'                                 00225200
&ZMS             SETC  '&ZMS "PARTOFF"'                                 00225300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00225400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00225500
.ZG33B           AIF   (K'&XPARTOFF GT 0).ZG33C  ONE PARM               00225600
&ZXPARTMODE      SETC  ''          RESET IN/OUTPUT                      00225700
&ZXPARTOFF       SETC  ''          RESET IN/OUTPUT                      00225800
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*               00225900
&ZMS             SETC  '&ZMS , "PARTOFF" KEY AND ITS ARGUMENT'          00226000
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00226100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00226200
.ZG33C           ANOP  ,                                                00226300
.*----------------------------------------------------------------***   00226400
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00226500
                 AIF   (K'&PARTPTROFF LE 0).ZG34D  NO ME KEY            00226600
                 AIF   (N'&PARTPTROFF LE 1).ZG34A  CK NUM               00226700
&ZMS             SETC  '"PARTPTROFF='           *KPOSA* MNOTE           00226800
&ZMS             SETC  '&ZMS.&PARTPTROFF"'                              00226900
&ZMS             SETC  '&ZMS "PARTPTROFF"'                              00227000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00227100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00227200
.ZG34A           AIF   (K'&XPARTMODE LE 0).ZG34B                        00227300
&ZMS             SETC  '"PARTPTROFF'            *KMEKA* MNOTE           00227400
&ZMS             SETC  '&ZMS.=&PARTPTROFF"'                             00227500
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00227600
&ZMS             SETC  '&ZMS "&XPARTMODE"'                              00227700
                 MNOTE 8,' &ZMS KEY.'                                   00227800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00227900
                 AGO   .ZG34D                                           00228000
.*                                                                      00228100
.ZG34B           ANOP  ,                                                00228200
&ZXPARTMODE      SETC  'INPUT'     SET IN/OUTPUT                        00228300
&XPARTMODE       SETC  'PARTPTROFF'             SET XVARIABLE           00228400
&ZXPARTPTROFF    SETC  'INPUT'     SET IN/OUTPUT                        00228500
&XPARTPTROFF     SETC  '&PARTPTROFF(1)'         SET XVARIABLE PARM      00228600
                 AIF   (N'&PARTPTROFF GT 1).ZG34C  MULTIPLE PARMS       00228700
&XPARTPTROFF     SETC  '&PARTPTROFF'            SET XVARIABLE PARM      00228800
.ZG34C           AIF   (K'&XPARTPTROFF GT 0).ZG34D  ONE PARM            00228900
&ZXPARTMODE      SETC  ''          RESET IN/OUTPUT                      00229000
&ZXPARTPTROFF    SETC  ''          RESET IN/OUTPUT                      00229100
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*               00229200
&ZMS             SETC  '&ZMS , "PARTPTROFF" KEY AND ITS ARGUMENT'       00229300
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00229400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00229500
.ZG34D           ANOP  ,                                                00229600
.*------------------------------------------------------------------    00229700
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00229800
                 AIF   (K'&XPARTMODE GT 0).ZG40B                        00229900
&ZXPARTMODE      SETC  ''          RESET IN/OUTPUT                      00230000
&ZXPARTOFF       SETC  ''          RESET IN/OUTPUT                      00230100
&XPARTMODE       SETC  ''          ENSURE NULL                          00230200
&XPARTOFF        SETC  ''          ENSURE NULL                          00230300
&ZMS             SETC  'ONE OF THE FOLLOWING'   *KMERA* MNOTE           00230400
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00230500
&ZMS             SETC  '&ZMS REQUIRED:'                                 00230600
&ZMS             SETC  '&ZMS "PARTOFF"'         VALID ME KEY            00230700
&ZMS             SETC  '&ZMS OR "PARTPTROFF".'  VALID ME KEY            00230800
                 MNOTE 8,' &ZMS '                                       00230900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00231000
.ZG40B           ANOP  ,                                                00231100
.*-------------------------------------------------------------------   00231200
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00231300
.ZG33            AIF   ('&XPARTMODE' NE 'PARTOFF').ZG34                 00231400
.*-------------------------------------------------------------------   00231500
.***AG.KMEKY14 NAME, OPT RQD INPUT, ME KEYS -DISALLOWED KEYS            00231600
&ZCVAL           SETC ''           ERROR KEY FIELD                      00231700
.ZG33I0          AIF   (K'&PARTALET LE 0).ZG33I1                        00231800
&ZCVAL           SETC '&ZCVAL PARTALET'         DISALLOWED KEY          00231900
.ZG33I1          AIF   (K'&PARTALETOFF LE 0).ZG33I2                     00232000
&ZCVAL           SETC '&ZCVAL PARTALETOFF'      DISALLOWED KEY          00232100
.ZG33I2          AIF   (K'&PARTALETTBL LE 0).ZG33I3                     00232200
&ZCVAL           SETC '&ZCVAL PARTALETTBL'      DISALLOWED KEY          00232300
.ZG33I3          AIF   (K'&ZCVAL LE 0).ZG33J    KEY                     00232400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00232500
&ZMS             SETC  '"PARTOFF'  *KMEIA* MNOTE                        00232600
&ZMS             SETC  '&ZMS.=&PARTOFF"'                                00232700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00232800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00232900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00233000
.ZG33J           ANOP  ,                                                00233100
.*-------------------------------------------------------------------   00233200
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00233300
                 AIF   (K'&ZXPARTOFF LE 0).ZG33R  NOT I/O               00233400
                 AIF   ('&XPARTOFF'(1,1) NE '(').ZG33R                  00233500
&ZCGPR           SETC  '&XPARTOFF'(2,K'&XPARTOFF-2)                     00233600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                     00233700
                 AIF   (K'&ZCGPR GT 2).ZG33Q                            00233800
                 AIF   ('&ZCGPR' EQ '0').ZG33Q                          00233900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00234000
                 AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME        00234100
.ZG33P           ANOP  ,                                                00234200
                 AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC             00234300
                 AIF   ('&ZCGPR' LT '2').ZG33Q                          00234400
                 AIF   ('&ZCGPR' LE '12').ZG33R                         00234500
.ZG33Q           ANOP  ,                                                00234600
&ZMS             SETC  '"PARTOFF='              *KGPRA* MNOTE           00234700
&ZMS             SETC  '&ZMS.&PARTOFF"'                                 00234800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00234900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00235000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00235100
.ZG33R           ANOP  ,                                                00235200
.*-------------------------------------------------------------------   00235300
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00235400
.ZG34            AIF   ('&XPARTMODE' NE 'PARTPTROFF').ZG40              00235500
.*-------------------------------------------------------------------   00235600
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00235700
                 AIF   (K'&ZXPARTPTROFF LE 0).ZG34R  NOT I/O            00235800
                 AIF   ('&XPARTPTROFF'(1,1) NE '(').ZG34R               00235900
&ZCGPR           SETC  '&XPARTPTROFF'(2,K'&XPARTPTROFF-2)               00236000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                     00236100
                 AIF   (K'&ZCGPR GT 2).ZG34Q                            00236200
                 AIF   ('&ZCGPR' EQ '0').ZG34Q                          00236300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00236400
                 AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME        00236500
.ZG34P           ANOP  ,                                                00236600
                 AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC             00236700
                 AIF   ('&ZCGPR' LT '2').ZG34Q                          00236800
                 AIF   ('&ZCGPR' LE '12').ZG34R                         00236900
.ZG34Q           ANOP  ,                                                00237000
&ZMS             SETC  '"PARTPTROFF='           *KGPRA* MNOTE           00237100
&ZMS             SETC  '&ZMS.&PARTPTROFF"'                              00237200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00237300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00237400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00237500
.ZG34R           ANOP  ,                                                00237600
.*----------------------------------------------------------------***   00237700
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00237800
&XDELLIST3       SETC  ''          INITIALIZE XVARIABLE                 00237900
                 AIF   (K'&PARTALET LE 0).ZG36C                         00238000
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00238100
&XDELLIST3       SETC  'PARTALET'  SET XVARIABLE                        00238200
&ZXPARTALET      SETC  'INPUT'     SET IN/OUTPUT                        00238300
&XPARTALET       SETC  '&PARTALET(1)'           SET XVARIABLE PARM      00238400
                 AIF   (N'&PARTALET GT 1).ZG36A  MULTIPLE PARMS         00238500
&XPARTALET       SETC  '&PARTALET'              SET XVARIABLE PARM      00238600
.ZG36A           AIF   (N'&PARTALET LE 1).ZG36B  CK NUM                 00238700
&ZMS             SETC  '"PARTALET='             *KPOSA* MNOTE           00238800
&ZMS             SETC  '&ZMS.&PARTALET"'                                00238900
&ZMS             SETC  '&ZMS "PARTALET"'                                00239000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00239100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00239200
.ZG36B           AIF   (K'&XPARTALET GT 0).ZG36C  ONE PARM              00239300
&ZXDELLIST3      SETC  ''          RESET IN/OUTPUT                      00239400
&ZXPARTALET      SETC  ''          RESET IN/OUTPUT                      00239500
&ZMS             SETC  'WHEN "PARTPTROFF" IS SPECIFIED'  *KRQDA*        00239600
&ZMS             SETC  '&ZMS , "PARTALET" KEY AND ITS ARGUMENT'         00239700
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00239800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00239900
.ZG36C           ANOP  ,                                                00240000
.*----------------------------------------------------------------***   00240100
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00240200
                 AIF   (K'&PARTALETOFF LE 0).ZG37D  NO ME KEY           00240300
                 AIF   (N'&PARTALETOFF LE 1).ZG37A  CK NUM              00240400
&ZMS             SETC  '"PARTALETOFF='          *KPOSA* MNOTE           00240500
&ZMS             SETC  '&ZMS.&PARTALETOFF"'                             00240600
&ZMS             SETC  '&ZMS "PARTALETOFF"'                             00240700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00240800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00240900
.ZG37A           AIF   (K'&XDELLIST3 LE 0).ZG37B                        00241000
&ZMS             SETC  '"PARTALETOFF'           *KMEKA* MNOTE           00241100
&ZMS             SETC  '&ZMS.=&PARTALETOFF"'                            00241200
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00241300
&ZMS             SETC  '&ZMS "&XDELLIST3"'                              00241400
                 MNOTE 8,' &ZMS KEY.'                                   00241500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00241600
                 AGO   .ZG37D                                           00241700
.*                                                                      00241800
.ZG37B           ANOP  ,                                                00241900
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00242000
&XDELLIST3       SETC  'PARTALETOFF'            SET XVARIABLE           00242100
&ZXPARTALETOFF   SETC  'INPUT'     SET IN/OUTPUT                        00242200
&XPARTALETOFF    SETC  '&PARTALETOFF(1)'        SET XVARIABLE PARM      00242300
                 AIF   (N'&PARTALETOFF GT 1).ZG37C  MULTIPLE PARMS      00242400
&XPARTALETOFF    SETC  '&PARTALETOFF'           SET XVARIABLE PARM      00242500
.ZG37C           AIF   (K'&XPARTALETOFF GT 0).ZG37D  ONE PARM           00242600
&ZXDELLIST3      SETC  ''          RESET IN/OUTPUT                      00242700
&ZXPARTALETOFF   SETC  ''          RESET IN/OUTPUT                      00242800
&ZMS             SETC  'WHEN "PARTPTROFF" IS SPECIFIED'  *KRQDA*        00242900
&ZMS             SETC  '&ZMS , "PARTALETOFF" KEY AND ITS ARGUMENT'      00243000
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00243100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00243200
.ZG37D           ANOP  ,                                                00243300
.*----------------------------------------------------------------***   00243400
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00243500
                 AIF   (K'&PARTALETTBL LE 0).ZG38D  NO ME KEY           00243600
                 AIF   (N'&PARTALETTBL LE 1).ZG38A  CK NUM              00243700
&ZMS             SETC  '"PARTALETTBL='          *KPOSA* MNOTE           00243800
&ZMS             SETC  '&ZMS.&PARTALETTBL"'                             00243900
&ZMS             SETC  '&ZMS "PARTALETTBL"'                             00244000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00244100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244200
.ZG38A           AIF   (K'&XDELLIST3 LE 0).ZG38B                        00244300
&ZMS             SETC  '"PARTALETTBL'           *KMEKA* MNOTE           00244400
&ZMS             SETC  '&ZMS.=&PARTALETTBL"'                            00244500
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00244600
&ZMS             SETC  '&ZMS "&XDELLIST3"'                              00244700
                 MNOTE 8,' &ZMS KEY.'                                   00244800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244900
                 AGO   .ZG38D                                           00245000
.*                                                                      00245100
.ZG38B           ANOP  ,                                                00245200
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00245300
&XDELLIST3       SETC  'PARTALETTBL'            SET XVARIABLE           00245400
&ZXPARTALETTBL   SETC  'INPUT'     SET IN/OUTPUT                        00245500
&XPARTALETTBL    SETC  '&PARTALETTBL(1)'        SET XVARIABLE PARM      00245600
                 AIF   (N'&PARTALETTBL GT 1).ZG38C  MULTIPLE PARMS      00245700
&XPARTALETTBL    SETC  '&PARTALETTBL'           SET XVARIABLE PARM      00245800
.ZG38C           AIF   (K'&XPARTALETTBL GT 0).ZG38D  ONE PARM           00245900
&ZXDELLIST3      SETC  ''          RESET IN/OUTPUT                      00246000
&ZXPARTALETTBL   SETC  ''          RESET IN/OUTPUT                      00246100
&ZMS             SETC  'WHEN "PARTPTROFF" IS SPECIFIED'  *KRQDA*        00246200
&ZMS             SETC  '&ZMS , "PARTALETTBL" KEY AND ITS ARGUMENT'      00246300
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00246400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00246500
.ZG38D           ANOP  ,                                                00246600
.*------------------------------------------------------------------    00246700
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00246800
                 AIF   (K'&XDELLIST3 GT 0).ZG39B                        00246900
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00247000
&XDELLIST3       SETC  'PARTALET'  SET DEFAULT                          00247100
&ZXPARTALET      SETC  'INPUT'     SET IN/OUTPUT                        00247200
&XPARTALET       SETC  'ZERO'      SET DEFAULT PARM                     00247300
.ZG39B           ANOP  ,                                                00247400
.*-------------------------------------------------------------------   00247500
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00247600
                 AIF   (K'&ZXPARTALETTBL LE 0).ZG39R  NOT I/O           00247700
                 AIF   ('&XPARTALETTBL' EQ 'ZERO').ZG39R                00247800
                 AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG39R              00247900
&ZCGPR           SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)             00248000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                     00248100
                 AIF   (K'&ZCGPR GT 2).ZG39Q                            00248200
                 AIF   ('&ZCGPR' EQ '0').ZG39Q                          00248300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00248400
                 AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME        00248500
.ZG39P           ANOP  ,                                                00248600
                 AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC             00248700
                 AIF   ('&ZCGPR' LT '2').ZG39Q                          00248800
                 AIF   ('&ZCGPR' LE '12').ZG39R                         00248900
.ZG39Q           ANOP  ,                                                00249000
&ZMS             SETC  '"PARTALETTBL='          *KGPRA* MNOTE           00249100
&ZMS             SETC  '&ZMS.&PARTALETTBL"'                             00249200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00249300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00249400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00249500
.ZG39R           ANOP  ,                                                00249600
.*-------------------------------------------------------------------   00249700
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00249800
.ZG36            AIF   ('&XDELLIST3' NE 'PARTALET').ZG37                00249900
.*-------------------------------------------------------------------   00250000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00250100
                 AIF   (K'&ZXPARTALET LE 0).ZG36R  NOT I/O              00250200
                 AIF   ('&XPARTALET' EQ 'ZERO').ZG36R                   00250300
                 AIF   ('&XPARTALET'(1,1) NE '(').ZG36R                 00250400
&ZCGPR           SETC  '&XPARTALET'(2,K'&XPARTALET-2)                   00250500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                     00250600
                 AIF   (K'&ZCGPR GT 2).ZG36Q                            00250700
                 AIF   ('&ZCGPR' EQ '0').ZG36Q                          00250800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00250900
                 AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME        00251000
.ZG36P           ANOP  ,                                                00251100
                 AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC             00251200
                 AIF   ('&ZCGPR' LT '2').ZG36Q                          00251300
                 AIF   ('&ZCGPR' LE '12').ZG36R                         00251400
.ZG36Q           ANOP  ,                                                00251500
&ZMS             SETC  '"PARTALET='             *KGPRA* MNOTE           00251600
&ZMS             SETC  '&ZMS.&PARTALET"'                                00251700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00251800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00251900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00252000
.ZG36R           ANOP  ,                                                00252100
.*-------------------------------------------------------------------   00252200
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00252300
.ZG37            AIF   ('&XDELLIST3' NE 'PARTALETOFF').ZG38             00252400
.*-------------------------------------------------------------------   00252500
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00252600
                 AIF   (K'&ZXPARTALETOFF LE 0).ZG37R  NOT I/O           00252700
                 AIF   ('&XPARTALETOFF'(1,1) NE '(').ZG37R              00252800
&ZCGPR           SETC  '&XPARTALETOFF'(2,K'&XPARTALETOFF-2)             00252900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                     00253000
                 AIF   (K'&ZCGPR GT 2).ZG37Q                            00253100
                 AIF   ('&ZCGPR' EQ '0').ZG37Q                          00253200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00253300
                 AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME        00253400
.ZG37P           ANOP  ,                                                00253500
                 AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC             00253600
                 AIF   ('&ZCGPR' LT '2').ZG37Q                          00253700
                 AIF   ('&ZCGPR' LE '12').ZG37R                         00253800
.ZG37Q           ANOP  ,                                                00253900
&ZMS             SETC  '"PARTALETOFF='          *KGPRA* MNOTE           00254000
&ZMS             SETC  '&ZMS.&PARTALETOFF"'                             00254100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00254200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00254300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00254400
.ZG37R           ANOP  ,                                                00254500
.*-------------------------------------------------------------------   00254600
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00254700
.ZG38            AIF   ('&XDELLIST3' NE 'PARTALETTBL').ZG39             00254800
.*-------------------------------------------------------------------   00254900
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00255000
                 AIF   (K'&ZXPARTALETTBL LE 0).ZG38R  NOT I/O           00255100
                 AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG38R              00255200
&ZCGPR           SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)             00255300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                     00255400
                 AIF   (K'&ZCGPR GT 2).ZG38Q                            00255500
                 AIF   ('&ZCGPR' EQ '0').ZG38Q                          00255600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00255700
                 AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME        00255800
.ZG38P           ANOP  ,                                                00255900
                 AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC             00256000
                 AIF   ('&ZCGPR' LT '2').ZG38Q                          00256100
                 AIF   ('&ZCGPR' LE '12').ZG38R                         00256200
.ZG38Q           ANOP  ,                                                00256300
&ZMS             SETC  '"PARTALETTBL='          *KGPRA* MNOTE           00256400
&ZMS             SETC  '&ZMS.&PARTALETTBL"'                             00256500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00256600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00256700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00256800
.ZG38R           ANOP  ,                                                00256900
.*-------------------------------------------------------------------   00257000
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00257100
.ZG39            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00257200
.*-------------------------------------------------------------------   00257300
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00257400
.ZG40            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00257500
.*----------------------------------------------------------------***   00257600
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00257700
&XDELLIST2       SETC  ''          INITIALIZE XVARIABLE                 00257800
                 AIF   (K'&PARTLEN LE 0).ZG42C                          00257900
&ZXDELLIST2      SETC  'INPUT'     SET IN/OUTPUT                        00258000
&XDELLIST2       SETC  'PARTLEN'   SET XVARIABLE                        00258100
&ZXPARTLEN       SETC  'INPUT'     SET IN/OUTPUT                        00258200
&XPARTLEN        SETC  '&PARTLEN(1)'            SET XVARIABLE PARM      00258300
                 AIF   (N'&PARTLEN GT 1).ZG42A  MULTIPLE PARMS          00258400
&XPARTLEN        SETC  '&PARTLEN'  SET XVARIABLE PARM                   00258500
.ZG42A           AIF   (N'&PARTLEN LE 1).ZG42B  CK NUM                  00258600
&ZMS             SETC  '"PARTLEN='              *KPOSA* MNOTE           00258700
&ZMS             SETC  '&ZMS.&PARTLEN"'                                 00258800
&ZMS             SETC  '&ZMS "PARTLEN"'                                 00258900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00259000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00259100
.ZG42B           AIF   (K'&XPARTLEN GT 0).ZG42C  ONE PARM               00259200
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00259300
&ZXPARTLEN       SETC  ''          RESET IN/OUTPUT                      00259400
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*               00259500
&ZMS             SETC  '&ZMS , "PARTLEN" KEY AND ITS ARGUMENT'          00259600
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00259700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00259800
.ZG42C           ANOP  ,                                                00259900
.*----------------------------------------------------------------***   00260000
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00260100
                 AIF   (K'&PARTLENOFF LE 0).ZG43D  NO ME KEY            00260200
                 AIF   (N'&PARTLENOFF LE 1).ZG43A  CK NUM               00260300
&ZMS             SETC  '"PARTLENOFF='           *KPOSA* MNOTE           00260400
&ZMS             SETC  '&ZMS.&PARTLENOFF"'                              00260500
&ZMS             SETC  '&ZMS "PARTLENOFF"'                              00260600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00260700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00260800
.ZG43A           AIF   (K'&XDELLIST2 LE 0).ZG43B                        00260900
&ZMS             SETC  '"PARTLENOFF'            *KMEKA* MNOTE           00261000
&ZMS             SETC  '&ZMS.=&PARTLENOFF"'                             00261100
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00261200
&ZMS             SETC  '&ZMS "&XDELLIST2"'                              00261300
                 MNOTE 8,' &ZMS KEY.'                                   00261400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00261500
                 AGO   .ZG43D                                           00261600
.*                                                                      00261700
.ZG43B           ANOP  ,                                                00261800
&ZXDELLIST2      SETC  'INPUT'     SET IN/OUTPUT                        00261900
&XDELLIST2       SETC  'PARTLENOFF'             SET XVARIABLE           00262000
&ZXPARTLENOFF    SETC  'INPUT'     SET IN/OUTPUT                        00262100
&XPARTLENOFF     SETC  '&PARTLENOFF(1)'         SET XVARIABLE PARM      00262200
                 AIF   (N'&PARTLENOFF GT 1).ZG43C  MULTIPLE PARMS       00262300
&XPARTLENOFF     SETC  '&PARTLENOFF'            SET XVARIABLE PARM      00262400
.ZG43C           AIF   (K'&XPARTLENOFF GT 0).ZG43D  ONE PARM            00262500
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00262600
&ZXPARTLENOFF    SETC  ''          RESET IN/OUTPUT                      00262700
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*               00262800
&ZMS             SETC  '&ZMS , "PARTLENOFF" KEY AND ITS ARGUMENT'       00262900
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00263000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00263100
.ZG43D           ANOP  ,                                                00263200
.*----------------------------------------------------------------***   00263300
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00263400
                 AIF   (K'&PARTLENTBL LE 0).ZG44D  NO ME KEY            00263500
                 AIF   (N'&PARTLENTBL LE 1).ZG44A  CK NUM               00263600
&ZMS             SETC  '"PARTLENTBL='           *KPOSA* MNOTE           00263700
&ZMS             SETC  '&ZMS.&PARTLENTBL"'                              00263800
&ZMS             SETC  '&ZMS "PARTLENTBL"'                              00263900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00264000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00264100
.ZG44A           AIF   (K'&XDELLIST2 LE 0).ZG44B                        00264200
&ZMS             SETC  '"PARTLENTBL'            *KMEKA* MNOTE           00264300
&ZMS             SETC  '&ZMS.=&PARTLENTBL"'                             00264400
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00264500
&ZMS             SETC  '&ZMS "&XDELLIST2"'                              00264600
                 MNOTE 8,' &ZMS KEY.'                                   00264700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00264800
                 AGO   .ZG44D                                           00264900
.*                                                                      00265000
.ZG44B           ANOP  ,                                                00265100
&ZXDELLIST2      SETC  'INPUT'     SET IN/OUTPUT                        00265200
&XDELLIST2       SETC  'PARTLENTBL'             SET XVARIABLE           00265300
&ZXPARTLENTBL    SETC  'INPUT'     SET IN/OUTPUT                        00265400
&XPARTLENTBL     SETC  '&PARTLENTBL(1)'         SET XVARIABLE PARM      00265500
                 AIF   (N'&PARTLENTBL GT 1).ZG44C  MULTIPLE PARMS       00265600
&XPARTLENTBL     SETC  '&PARTLENTBL'            SET XVARIABLE PARM      00265700
.ZG44C           AIF   (K'&XPARTLENTBL GT 0).ZG44D  ONE PARM            00265800
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00265900
&ZXPARTLENTBL    SETC  ''          RESET IN/OUTPUT                      00266000
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*               00266100
&ZMS             SETC  '&ZMS , "PARTLENTBL" KEY AND ITS ARGUMENT'       00266200
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00266300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00266400
.ZG44D           ANOP  ,                                                00266500
.*------------------------------------------------------------------    00266600
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00266700
                 AIF   (K'&XDELLIST2 GT 0).ZG45B                        00266800
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00266900
&ZXPARTLEN       SETC  ''          RESET IN/OUTPUT                      00267000
&XDELLIST2       SETC  ''          ENSURE NULL                          00267100
&XPARTLEN        SETC  ''          ENSURE NULL                          00267200
&ZMS             SETC  'ONE OF THE FOLLOWING'   *KMERA* MNOTE           00267300
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00267400
&ZMS             SETC  '&ZMS REQUIRED:'                                 00267500
&ZMS             SETC  '&ZMS "PARTLEN",'        VALID ME KEY            00267600
&ZMS             SETC  '&ZMS "PARTLENOFF",'     VALID ME KEY            00267700
&ZMS             SETC  '&ZMS OR "PARTLENTBL".'  VALID ME KEY            00267800
                 MNOTE 8,' &ZMS '                                       00267900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00268000
.ZG45B           ANOP  ,                                                00268100
.*-------------------------------------------------------------------   00268200
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00268300
.ZG42            AIF   ('&XDELLIST2' NE 'PARTLEN').ZG43                 00268400
.*-------------------------------------------------------------------   00268500
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00268600
                 AIF   (K'&ZXPARTLEN LE 0).ZG42R  NOT I/O               00268700
                 AIF   ('&XPARTLEN'(1,1) NE '(').ZG42R                  00268800
&ZCGPR           SETC  '&XPARTLEN'(2,K'&XPARTLEN-2)                     00268900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                     00269000
                 AIF   (K'&ZCGPR GT 2).ZG42Q                            00269100
                 AIF   ('&ZCGPR' EQ '0').ZG42Q                          00269200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00269300
                 AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME        00269400
.ZG42P           ANOP  ,                                                00269500
                 AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC             00269600
                 AIF   ('&ZCGPR' LT '2').ZG42Q                          00269700
                 AIF   ('&ZCGPR' LE '12').ZG42R                         00269800
.ZG42Q           ANOP  ,                                                00269900
&ZMS             SETC  '"PARTLEN='              *KGPRA* MNOTE           00270000
&ZMS             SETC  '&ZMS.&PARTLEN"'                                 00270100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00270200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00270300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00270400
.ZG42R           ANOP  ,                                                00270500
.*-------------------------------------------------------------------   00270600
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00270700
.ZG43            AIF   ('&XDELLIST2' NE 'PARTLENOFF').ZG44              00270800
.*-------------------------------------------------------------------   00270900
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00271000
                 AIF   (K'&ZXPARTLENOFF LE 0).ZG43R  NOT I/O            00271100
                 AIF   ('&XPARTLENOFF'(1,1) NE '(').ZG43R               00271200
&ZCGPR           SETC  '&XPARTLENOFF'(2,K'&XPARTLENOFF-2)               00271300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                     00271400
                 AIF   (K'&ZCGPR GT 2).ZG43Q                            00271500
                 AIF   ('&ZCGPR' EQ '0').ZG43Q                          00271600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00271700
                 AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME        00271800
.ZG43P           ANOP  ,                                                00271900
                 AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC             00272000
                 AIF   ('&ZCGPR' LT '2').ZG43Q                          00272100
                 AIF   ('&ZCGPR' LE '12').ZG43R                         00272200
.ZG43Q           ANOP  ,                                                00272300
&ZMS             SETC  '"PARTLENOFF='           *KGPRA* MNOTE           00272400
&ZMS             SETC  '&ZMS.&PARTLENOFF"'                              00272500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00272600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00272700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00272800
.ZG43R           ANOP  ,                                                00272900
.*-------------------------------------------------------------------   00273000
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00273100
.ZG44            AIF   ('&XDELLIST2' NE 'PARTLENTBL').ZG45              00273200
.*-------------------------------------------------------------------   00273300
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00273400
                 AIF   (K'&ZXPARTLENTBL LE 0).ZG44R  NOT I/O            00273500
                 AIF   ('&XPARTLENTBL'(1,1) NE '(').ZG44R               00273600
&ZCGPR           SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)               00273700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                     00273800
                 AIF   (K'&ZCGPR GT 2).ZG44Q                            00273900
                 AIF   ('&ZCGPR' EQ '0').ZG44Q                          00274000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00274100
                 AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME        00274200
.ZG44P           ANOP  ,                                                00274300
                 AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC             00274400
                 AIF   ('&ZCGPR' LT '2').ZG44Q                          00274500
                 AIF   ('&ZCGPR' LE '12').ZG44R                         00274600
.ZG44Q           ANOP  ,                                                00274700
&ZMS             SETC  '"PARTLENTBL='           *KGPRA* MNOTE           00274800
&ZMS             SETC  '&ZMS.&PARTLENTBL"'                              00274900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00275000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00275100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00275200
.ZG44R           ANOP  ,                                                00275300
.*-------------------------------------------------------------------   00275400
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00275500
.ZG45            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00275600
.*------------------------------------------------------------------    00275700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00275800
.ZG46            ANOP  ,                                                00275900
&ZXMULTIPART     SETC  'INPUT'     SET IN/OUTPUT                        00276000
                 AIF   (K'&XMULTIPART GT 0).ZG46E  VALID ARG            00276100
                 AIF   (T'&MULTIPART EQ 'O').ZG46D  OMITTED             00276200
&ZASYSLNDX       SETA  0                                                00276300
.ZG46A           ANOP  ,           POSITIONAL MACRO KEY                 00276400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00276500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG46C                 00276600
&ZTLC            SETC 'MULTIPART'                                       00276700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG46A        00276800
.ZG46B           ANOP  ,                                                00276900
&ZXMULTIPART     SETC  ''          RESET IN/OUTPUT                      00277000
&ZMS             SETC  'THE "MULTIPART" KEY'    *KOPTA* MNOTE           00277100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00277200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00277300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00277400
                 AGO   .ZG46E                                           00277500
.ZG46C           ANOP  ,                                                00277600
&ZXMULTIPART     SETC  ''          RESET IN/OUTPUT                      00277700
&ZMS             SETC  '"MULTIPART='            *KUKWA* MNOTE           00277800
&ZMS             SETC  '&ZMS.&MULTIPART"'                               00277900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00278000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00278100
&ZMS             SETC  '&ZMS "NO"'              VALID KEYWORD           00278200
&ZMS             SETC  '&ZMS OR "YES".'         VALID KEYWORD           00278300
                 MNOTE 8,' &ZMS '                                       00278400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00278500
                 AGO   .ZG46E                                           00278600
.ZG46D           ANOP  ,                                                00278700
&XMULTIPART      SETC  'NO'        SET DEFAULT KEYWORD                  00278800
.ZG46E           ANOP  ,                                                00278900
.*----------------------------------------------------------------***   00279000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00279100
                 AIF   (N'&MSGSTGKEY LE 1).ZG48A  CK NUM                00279200
&ZMS             SETC  '"MSGSTGKEY='            *KPOSA* MNOTE           00279300
&ZMS             SETC  '&ZMS.&MSGSTGKEY"'                               00279400
&ZMS             SETC  '&ZMS "MSGSTGKEY"'                               00279500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00279600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00279700
.ZG48A           ANOP  ,                                                00279800
.*-------------------------------------------------------------------   00279900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00280000
&ZXMSGSTGKEY     SETC  'INPUT'     SET IN/OUTPUT                        00280100
&XMSGSTGKEY      SETC  'JOINKEY'                                        00280200
                 AIF   (K'&MSGSTGKEY(1) LE 0).ZG48B  PARM               00280300
&XMSGSTGKEY      SETC  '&MSGSTGKEY(1)'          SET XVARIABLE           00280400
                 AIF   (N'&MSGSTGKEY GT 1).ZG48B  MULTI PARMS           00280500
&XMSGSTGKEY      SETC  '&MSGSTGKEY'             SET XVARIABLE           00280600
.ZG48B           ANOP  ,                                                00280700
.*-------------------------------------------------------------------   00280800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00280900
                 AIF   (K'&ZXMSGSTGKEY LE 0).ZG48R  NOT I/O             00281000
                 AIF   ('&XMSGSTGKEY' EQ 'JOINKEY').ZG48R               00281100
                 AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZG48R                00281200
&ZCGPR           SETC  '&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2)                 00281300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                     00281400
                 AIF   (K'&ZCGPR GT 2).ZG48Q                            00281500
                 AIF   ('&ZCGPR' EQ '0').ZG48Q                          00281600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00281700
                 AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME        00281800
.ZG48P           ANOP  ,                                                00281900
                 AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC             00282000
                 AIF   ('&ZCGPR' LT '2').ZG48Q                          00282100
                 AIF   ('&ZCGPR' LE '12').ZG48R                         00282200
.ZG48Q           ANOP  ,                                                00282300
&ZMS             SETC  '"MSGSTGKEY='            *KGPRA* MNOTE           00282400
&ZMS             SETC  '&ZMS.&MSGSTGKEY"'                               00282500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00282600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00282700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00282800
.ZG48R           ANOP  ,                                                00282900
.*----------------------------------------------------------------***   00283000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00283100
                 AIF   (N'&RETCODE LE 1).ZG51A  CK NUM                  00283200
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00283300
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00283400
&ZMS             SETC  '&ZMS "RETCODE"'                                 00283500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00283600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00283700
.ZG51A           ANOP  ,                                                00283800
.*-------------------------------------------------------------------   00283900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00284000
                 AIF   (K'&RETCODE(1) LE 0).ZG51C  NO PARM              00284100
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00284200
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00284300
                 AIF   (N'&RETCODE GT 1).ZG51C                          00284400
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00284500
.ZG51C           ANOP  ,                                                00284600
.*-------------------------------------------------------------------   00284700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00284800
                 AIF   (K'&ZXRETCODE LE 0).ZG51R  NOT I/O               00284900
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG51R                  00285000
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00285100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                     00285200
                 AIF   (K'&ZCGPR GT 2).ZG51Q                            00285300
                 AIF   ('&ZCGPR' EQ '0').ZG51Q                          00285400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00285500
                 AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME        00285600
.ZG51P           ANOP  ,                                                00285700
                 AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC             00285800
                 AIF   ('&ZCGPR' LT '2').ZG51Q                          00285900
                 AIF   ('&ZCGPR' LE '12').ZG51R                         00286000
.ZG51Q           ANOP  ,                                                00286100
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00286200
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00286300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00286400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00286500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00286600
.ZG51R           ANOP  ,                                                00286700
.*----------------------------------------------------------------***   00286800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00286900
                 AIF   (N'&RSNCODE LE 1).ZG54A  CK NUM                  00287000
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00287100
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00287200
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00287300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00287400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00287500
.ZG54A           ANOP  ,                                                00287600
.*-------------------------------------------------------------------   00287700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00287800
                 AIF   (K'&RSNCODE(1) LE 0).ZG54C  NO PARM              00287900
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00288000
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00288100
                 AIF   (N'&RSNCODE GT 1).ZG54C                          00288200
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00288300
.ZG54C           ANOP  ,                                                00288400
.*-------------------------------------------------------------------   00288500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00288600
                 AIF   (K'&ZXRSNCODE LE 0).ZG54R  NOT I/O               00288700
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG54R                  00288800
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00288900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                     00289000
                 AIF   (K'&ZCGPR GT 2).ZG54Q                            00289100
                 AIF   ('&ZCGPR' EQ '0').ZG54Q                          00289200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00289300
                 AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME        00289400
.ZG54P           ANOP  ,                                                00289500
                 AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC             00289600
                 AIF   ('&ZCGPR' LT '2').ZG54Q                          00289700
                 AIF   ('&ZCGPR' LE '12').ZG54R                         00289800
.ZG54Q           ANOP  ,                                                00289900
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00290000
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00290100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00290200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00290300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00290400
.ZG54R           ANOP  ,                                                00290500
.******************************************************************     00290600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00290700
.******************************************************************     00290800
                 ACTR  10000                                            00290900
.*----------------------------------------------------------------***   00291000
.***AH.P02 EXTRA POSITIONALS                                            00291100
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00291200
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00291300
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00291400
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00291500
.ZGLISTX1        ANOP  ,                                                00291600
&ZCVAL           SETC  ''          ERROR FIELD                          00291700
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00291800
.ZGLIST2         ANOP  ,                                                00291900
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00292000
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00292100
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00292200
                 AGO   .ZGLIST2                                         00292300
.*                                                                      00292400
.ZGLIST3         ANOP  ,                                                00292500
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00292600
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00292700
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00292800
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00292900
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00293000
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00293100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00293200
.ZGLISTX         ANOP  ,                                                00293300
&ZASYSLNDX       SETA  0                                                00293400
.*-------------------------------------------------------------------   00293500
.***AG.MF04 MF=(SLE)                                                    00293600
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00293700
.*******************************************************************    00293800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00293900
.*******************************************************************    00294000
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00294100
.*******************************************************************    00294200
.***AE.01  START OF IXCMSGI MACRO CODE                                  00294300
.*******************************************************************    00294400
                 LCLC  &M0M0001                 NAME                    00294500
&M0M0001         SETC  '&XLABEL'                SET NAME                00294600
                 AIF   (K'&XLABEL NE 0).XLAB2                           00294700
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00294800
.*                                                                      00294900
.XLAB2           ANOP  ,                                                00295000
                 AIF   ('&XMF' EQ 'L').XLAB3                            00295100
&M0M0001 DS    0H                             IXCMSGI-2                 00295200
.XLAB3           ANOP  ,                                                00295300
.*******************************************************************    00295400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00295500
.*******************************************************************    00295600
              PUSH  PRINT                                               00295700
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00295800
                 PRINT OFF         ++ PR01                              00295900
                 AGO   .ZPRNTXX                                         00296000
.ZPRINTX         PRINT ON                                               00296100
.ZPRNTXX         ANOP  ,                                                00296200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00296300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00296400
.********************************************************************   00296500
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00296600
.********************************************************************   00296700
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00296800
                      LCLA  &ZOPN1         INVOCATION INDEX             00296900
                      LCLC  &ZOPL(4095)    LABEL                        00297000
                      LCLC  &ZOPO(4095)    OPERATION                    00297100
                      LCLC  &ZOPV(4095)    VALUE                        00297200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00297300
.*                                                                      00297400
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00297500
.******************************************************************     00297600
.***AL.L10 IXCMSGI FMT=LIST MF=S|L PARAMETERS                           00297700
.******************************************************************     00297800
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00297900
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00298000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00298100
&XMFATTR              SETC  '0D'                                        00298200
.*                                                                      00298300
&ZOPN                 SETA  &ZOPN+1                                     00298400
&ZOPL(&ZOPN)          SETC  ' '                                         00298500
&ZOPO(&ZOPN)          SETC  'B'                                         00298600
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00298700
&ZOPD(&ZOPN)          SETC  '++ IXCMSGI ARG PARMS'                      00298800
.*                                                                      00298900
&ZOPN                 SETA  &ZOPN+1                                     00299000
&ZOPL(&ZOPN)          SETC  ' '                                         00299100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00299200
&ZOPV(&ZOPN)          SETC  '1'                                         00299300
&ZOPD(&ZOPN)          SETC  ' '                                         00299400
.*                                                                      00299500
.ZLMFSL2              ANOP  ,                                           00299600
.*-------------------------------------------------------------------   00299700
.***AM.L00  IXCMSGI FMT=LIST name                                       00299800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00299900
&ZOPN                 SETA &ZOPN+1                                      00300000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00300100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00300200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00300300
&ZOPD(&ZOPN)          SETC '++ IXCMSGI NAME'                            00300400
.ZLMFSL2M             ANOP  ,                                           00300500
.*-------------------------------------------------------------------   00300600
.***AM.L01  IXCMSGI FMT=LIST PARAMETERS                                 00300700
&ZOPN                 SETA &ZOPN+1                                      00300800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00300900
&ZOPO(&ZOPN)          SETC 'DS'                                         00301000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00301100
&ZOPD(&ZOPN)          SETC '++ IXCMSGI PARM LIST'                       00301200
.*-------------------------------------------------------------------   00301300
.***AM.L02 XVERSION XL1                                                 00301400
&ZOPN                 SETA &ZOPN+1                                      00301500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00301600
&ZOPO(&ZOPN)          SETC 'DS'                                         00301700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00301800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00301900
.*-------------------------------------------------------------------   00302000
.***AM.L03 XKEYUSED1 BL.8                                               00302100
&ZOPN                 SETA &ZOPN+1                                      00302200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED1'                        00302300
&ZOPO(&ZOPN)          SETC 'DS'                                         00302400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00302500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00302600
.*                                                                      00302700
&ZOPN                 SETA  &ZOPN+1                                     00302800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MULTIPART_MSG'                   00302900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00303000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00303100
&ZOPD(&ZOPN)          SETC  '++ XMULTIPART.'                            00303200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00303300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00303400
.*                                                                      00303500
&ZOPN                 SETA  &ZOPN+1                                     00303600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ELEMENTS_QUEUED'                 00303700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00303800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00303900
&ZOPD(&ZOPN)          SETC  '++ XELEMFORM.'                             00304000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUEUE'                        00304100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00304200
.*                                                                      00304300
&ZOPN                 SETA  &ZOPN+1                                     00304400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGSTGKEY'               00304500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00304600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00304700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00304800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGSTGKEY'                    00304900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00305000
.*                                                                      00305100
&ZOPN                 SETA  &ZOPN+1                                     00305200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTPTROFF'              00305300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00305400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00305500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00305600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTPTROFF'                   00305700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00305800
.*                                                                      00305900
&ZOPN                 SETA  &ZOPN+1                                     00306000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETTBL'             00306100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00306200
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00306300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00306400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETTBL'                  00306500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00306600
.*                                                                      00306700
&ZOPN                 SETA  &ZOPN+1                                     00306800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETOFF'             00306900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00307000
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00307100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00307200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETOFF'                  00307300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00307400
.*                                                                      00307500
&ZOPN                 SETA  &ZOPN+1                                     00307600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENTBL'              00307700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00307800
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00307900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00308000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENTBL'                   00308100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00308200
.*                                                                      00308300
&ZOPN                 SETA  &ZOPN+1                                     00308400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENOFF'              00308500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00308600
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00308700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00308800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENOFF'                   00308900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00309000
.*-------------------------------------------------------------------   00309100
.***AM.L03 XKEYUSED2 BL.8                                               00309200
&ZOPN                 SETA &ZOPN+1                                      00309300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED2'                        00309400
&ZOPO(&ZOPN)          SETC 'DS'                                         00309500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00309600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00309700
.*                                                                      00309800
&ZOPN                 SETA  &ZOPN+1                                     00309900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_#MSGPARTS'               00310000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00310100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00310200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00310300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).#MSGPARTS'                    00310400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00310500
.*                                                                      00310600
&ZOPN                 SETA  &ZOPN+1                                     00310700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._FULLTOKEN'                       00310800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00310900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00311000
&ZOPD(&ZOPN)          SETC  '++ XFULLTOKEN.'                            00311100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TOKEN'                        00311200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00311300
.*-------------------------------------------------------------------   00311400
.***AM.L09  XMSGSTGKEY BL.8                                             00311500
&ZOPN                 SETA &ZOPN+1                                      00311600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGSTGKEY'                       00311700
&ZOPO(&ZOPN)          SETC 'DS'                                         00311800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00311900
&ZOPD(&ZOPN)          SETC '++ &ZXMSGSTGKEY  XMSGSTGKEY'                00312000
.*-------------------------------------------------------------------   00312100
.***AM.L09  XMSGTOKEN BL.32                                             00312200
&ZOPN                 SETA &ZOPN+1                                      00312300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKEN'                        00312400
&ZOPO(&ZOPN)          SETC 'DS'                                         00312500
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00312600
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKEN  XMSGTOKEN'                  00312700
.*-------------------------------------------------------------------   00312800
.***AM.L09 ADDR XMSGBUF A                                               00312900
&ZOPN                 SETA &ZOPN+1                                      00313000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ADDR'                     00313100
&ZOPO(&ZOPN)          SETC 'DS'                                         00313200
&ZOPV(&ZOPN)          SETC 'A'                                          00313300
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ADDR XMSGBUF'                  00313400
.*-------------------------------------------------------------------   00313500
.***AM.L09 ALET XMSGBUF F                                               00313600
&ZOPN                 SETA &ZOPN+1                                      00313700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ALET'                     00313800
&ZOPO(&ZOPN)          SETC 'DS'                                         00313900
&ZOPV(&ZOPN)          SETC 'F'                                          00314000
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ALET XMSGBUF'                  00314100
.*-------------------------------------------------------------------   00314200
.***AM.MLM2 SAVED LOCATION COUNTER                                      00314300
                      AIF  (&XPLISTVER GE 1).ZL18LA                     00314400
                      AIF  ('&ZENDBASEPL' NE '').ZL18LA                 00314500
&ZENDBASEPL           SETC 'YES'                                        00314600
&ZOPN                 SETA &ZOPN+1                                      00314700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00314800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00314900
&ZOPV(&ZOPN)          SETC '*'                                          00315000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00315100
.ZL18LA               ANOP  ,                                           00315200
.*-------------------------------------------------------------------   00315300
.***AM.LVER1                                                            00315400
                      AIF  (&XPLISTVER LT 1).ZL18L                      00315500
.*-------------------------------------------------------------------   00315600
.*-------------------------------------------------------------------   00315700
.***AM.L09  XPART# F                                                    00315800
&ZOPN                 SETA &ZOPN+1                                      00315900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPART#'                           00316000
&ZOPO(&ZOPN)          SETC 'DS'                                         00316100
&ZOPV(&ZOPN)          SETC 'F'                                          00316200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XPART#'                     00316300
.*-------------------------------------------------------------------   00316400
.***AM.LVER2                                                            00316500
.ZL18L                ANOP  ,                                           00316600
.*-------------------------------------------------------------------   00316700
.*-------------------------------------------------------------------   00316800
.***AM.LVER1                                                            00316900
                      AIF  (&XPLISTVER LT 1).ZL19L                      00317000
.*-------------------------------------------------------------------   00317100
.*-------------------------------------------------------------------   00317200
.***AM.L09  XELEMENTPTR A                                               00317300
&ZOPN                 SETA &ZOPN+1                                      00317400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENTPTR'                      00317500
&ZOPO(&ZOPN)          SETC 'DS'                                         00317600
&ZOPV(&ZOPN)          SETC 'A'                                          00317700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XELEMENTPTR'                00317800
.*-------------------------------------------------------------------   00317900
.***AM.LVER2                                                            00318000
.ZL19L                ANOP  ,                                           00318100
.*-------------------------------------------------------------------   00318200
.*-------------------------------------------------------------------   00318300
.***AM.LVER1                                                            00318400
                      AIF  (&XPLISTVER LT 1).ZL20L                      00318500
.*-------------------------------------------------------------------   00318600
.*-------------------------------------------------------------------   00318700
.***AM.L09 ADDR XPARTLENTBL A                                           00318800
&ZOPN                 SETA &ZOPN+1                                      00318900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ADDR'                 00319000
&ZOPO(&ZOPN)          SETC 'DS'                                         00319100
&ZOPV(&ZOPN)          SETC 'A'                                          00319200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ADDR XPARTLENTBL'          00319300
.*-------------------------------------------------------------------   00319400
.***AM.LVER2                                                            00319500
.ZL20L                ANOP  ,                                           00319600
.*-------------------------------------------------------------------   00319700
.*-------------------------------------------------------------------   00319800
.***AM.LVER1                                                            00319900
                      AIF  (&XPLISTVER LT 1).ZL21L                      00320000
.*-------------------------------------------------------------------   00320100
.*-------------------------------------------------------------------   00320200
.***AM.L09 ADDR XPARTALETTBL A                                          00320300
&ZOPN                 SETA &ZOPN+1                                      00320400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ADDR'                00320500
&ZOPO(&ZOPN)          SETC 'DS'                                         00320600
&ZOPV(&ZOPN)          SETC 'A'                                          00320700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ADDR XPARTALETTBL'        00320800
.*-------------------------------------------------------------------   00320900
.***AM.LVER2                                                            00321000
.ZL21L                ANOP  ,                                           00321100
.*-------------------------------------------------------------------   00321200
.*-------------------------------------------------------------------   00321300
.***AM.LVER1                                                            00321400
                      AIF  (&XPLISTVER LT 1).ZL22L                      00321500
.*-------------------------------------------------------------------   00321600
.*-------------------------------------------------------------------   00321700
.***AM.L09 ADDR XELEMENT A                                              00321800
&ZOPN                 SETA &ZOPN+1                                      00321900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ADDR'                    00322000
&ZOPO(&ZOPN)          SETC 'DS'                                         00322100
&ZOPV(&ZOPN)          SETC 'A'                                          00322200
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ADDR XELEMENT'                00322300
.*-------------------------------------------------------------------   00322400
.***AM.LVER2                                                            00322500
.ZL22L                ANOP  ,                                           00322600
.*-------------------------------------------------------------------   00322700
.*-------------------------------------------------------------------   00322800
.***AM.LVER1                                                            00322900
                      AIF  (&XPLISTVER LT 1).ZL23L                      00323000
.*-------------------------------------------------------------------   00323100
.*-------------------------------------------------------------------   00323200
.***AM.L09 ALET XELEMENT F                                              00323300
&ZOPN                 SETA &ZOPN+1                                      00323400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ALET'                    00323500
&ZOPO(&ZOPN)          SETC 'DS'                                         00323600
&ZOPV(&ZOPN)          SETC 'F'                                          00323700
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ALET XELEMENT'                00323800
.*-------------------------------------------------------------------   00323900
.***AM.LVER2                                                            00324000
.ZL23L                ANOP  ,                                           00324100
.*-------------------------------------------------------------------   00324200
.*-------------------------------------------------------------------   00324300
.***AM.LVER1                                                            00324400
                      AIF  (&XPLISTVER LT 1).ZL24L                      00324500
.*-------------------------------------------------------------------   00324600
.*-------------------------------------------------------------------   00324700
.***AM.L09 ALET XPARTLENTBL F                                           00324800
&ZOPN                 SETA &ZOPN+1                                      00324900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ALET'                 00325000
&ZOPO(&ZOPN)          SETC 'DS'                                         00325100
&ZOPV(&ZOPN)          SETC 'F'                                          00325200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ALET XPARTLENTBL'          00325300
.*-------------------------------------------------------------------   00325400
.***AM.LVER2                                                            00325500
.ZL24L                ANOP  ,                                           00325600
.*-------------------------------------------------------------------   00325700
.*-------------------------------------------------------------------   00325800
.***AM.LVER1                                                            00325900
                      AIF  (&XPLISTVER LT 1).ZL25L                      00326000
.*-------------------------------------------------------------------   00326100
.*-------------------------------------------------------------------   00326200
.***AM.L09 ALET XPARTALETTBL F                                          00326300
&ZOPN                 SETA &ZOPN+1                                      00326400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ALET'                00326500
&ZOPO(&ZOPN)          SETC 'DS'                                         00326600
&ZOPV(&ZOPN)          SETC 'F'                                          00326700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ALET XPARTALETTBL'        00326800
.*-------------------------------------------------------------------   00326900
.***AM.LVER2                                                            00327000
.ZL25L                ANOP  ,                                           00327100
.*-------------------------------------------------------------------   00327200
.*-------------------------------------------------------------------   00327300
.***AM.LVER1                                                            00327400
                      AIF  (&XPLISTVER LT 1).ZL26L                      00327500
.*-------------------------------------------------------------------   00327600
.*-------------------------------------------------------------------   00327700
.***AM.L09  XPARTALET F                                                 00327800
&ZOPN                 SETA &ZOPN+1                                      00327900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALET'                        00328000
&ZOPO(&ZOPN)          SETC 'DS'                                         00328100
&ZOPV(&ZOPN)          SETC 'F'                                          00328200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALET  XPARTALET'                  00328300
.*-------------------------------------------------------------------   00328400
.***AM.LVER2                                                            00328500
.ZL26L                ANOP  ,                                           00328600
.*-------------------------------------------------------------------   00328700
.*-------------------------------------------------------------------   00328800
.***AM.LVER1                                                            00328900
                      AIF  (&XPLISTVER LT 1).ZL27L                      00329000
.*-------------------------------------------------------------------   00329100
.*-------------------------------------------------------------------   00329200
.***AM.L09  XPARTALETOFF F                                              00329300
&ZOPN                 SETA &ZOPN+1                                      00329400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETOFF'                     00329500
&ZOPO(&ZOPN)          SETC 'DS'                                         00329600
&ZOPV(&ZOPN)          SETC 'F'                                          00329700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETOFF  XPARTALETOFF'            00329800
.*-------------------------------------------------------------------   00329900
.***AM.LVER2                                                            00330000
.ZL27L                ANOP  ,                                           00330100
.*-------------------------------------------------------------------   00330200
.*-------------------------------------------------------------------   00330300
.***AM.LVER1                                                            00330400
                      AIF  (&XPLISTVER LT 1).ZL28L                      00330500
.*-------------------------------------------------------------------   00330600
.*-------------------------------------------------------------------   00330700
.***AM.L09  XPARTOFF F                                                  00330800
&ZOPN                 SETA &ZOPN+1                                      00330900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTOFF'                         00331000
&ZOPO(&ZOPN)          SETC 'DS'                                         00331100
&ZOPV(&ZOPN)          SETC 'F'                                          00331200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTOFF  XPARTOFF'                    00331300
.*-------------------------------------------------------------------   00331400
.***AM.LVER2                                                            00331500
.ZL28L                ANOP  ,                                           00331600
.*-------------------------------------------------------------------   00331700
.*-------------------------------------------------------------------   00331800
.***AM.LVER1                                                            00331900
                      AIF  (&XPLISTVER LT 1).ZL29L                      00332000
.*-------------------------------------------------------------------   00332100
.*-------------------------------------------------------------------   00332200
.***AM.L09  XPARTPTROFF F                                               00332300
&ZOPN                 SETA &ZOPN+1                                      00332400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTPTROFF'                      00332500
&ZOPO(&ZOPN)          SETC 'DS'                                         00332600
&ZOPV(&ZOPN)          SETC 'F'                                          00332700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTPTROFF  XPARTPTROFF'              00332800
.*-------------------------------------------------------------------   00332900
.***AM.LVER2                                                            00333000
.ZL29L                ANOP  ,                                           00333100
.*-------------------------------------------------------------------   00333200
.*-------------------------------------------------------------------   00333300
.***AM.LVER1                                                            00333400
                      AIF  (&XPLISTVER LT 1).ZL30L                      00333500
.*-------------------------------------------------------------------   00333600
.*-------------------------------------------------------------------   00333700
.***AM.L09  XPARTLEN F                                                  00333800
&ZOPN                 SETA &ZOPN+1                                      00333900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLEN'                         00334000
&ZOPO(&ZOPN)          SETC 'DS'                                         00334100
&ZOPV(&ZOPN)          SETC 'F'                                          00334200
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLEN  XPARTLEN'                    00334300
.*-------------------------------------------------------------------   00334400
.***AM.LVER2                                                            00334500
.ZL30L                ANOP  ,                                           00334600
.*-------------------------------------------------------------------   00334700
.*-------------------------------------------------------------------   00334800
.***AM.LVER1                                                            00334900
                      AIF  (&XPLISTVER LT 1).ZL31L                      00335000
.*-------------------------------------------------------------------   00335100
.*-------------------------------------------------------------------   00335200
.***AM.L09  XPARTLENOFF F                                               00335300
&ZOPN                 SETA &ZOPN+1                                      00335400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENOFF'                      00335500
&ZOPO(&ZOPN)          SETC 'DS'                                         00335600
&ZOPV(&ZOPN)          SETC 'F'                                          00335700
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENOFF  XPARTLENOFF'              00335800
.*-------------------------------------------------------------------   00335900
.***AM.LVER2                                                            00336000
.ZL31L                ANOP  ,                                           00336100
.*-------------------------------------------------------------------   00336200
.*-------------------------------------------------------------------   00336300
.***AM.LVER1                                                            00336400
                      AIF  (&XPLISTVER LT 1).ZL32L                      00336500
.*-------------------------------------------------------------------   00336600
.*-------------------------------------------------------------------   00336700
.***AM.L09  X#MSGPARTS F                                                00336800
&ZOPN                 SETA &ZOPN+1                                      00336900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#MSGPARTS'                       00337000
&ZOPO(&ZOPN)          SETC 'DS'                                         00337100
&ZOPV(&ZOPN)          SETC 'F'                                          00337200
&ZOPD(&ZOPN)          SETC '++ &ZX#MSGPARTS  X#MSGPARTS'                00337300
.*-------------------------------------------------------------------   00337400
.***AM.LVER2                                                            00337500
.ZL32L                ANOP  ,                                           00337600
.*-------------------------------------------------------------------   00337700
.*-------------------------------------------------------------------   00337800
.***AM.LVER1                                                            00337900
                      AIF  (&XPLISTVER LT 1).ZL33L                      00338000
.*-------------------------------------------------------------------   00338100
.*-------------------------------------------------------------------   00338200
.***AM.L09  XNEXTOFF F                                                  00338300
&ZOPN                 SETA &ZOPN+1                                      00338400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTOFF'                         00338500
&ZOPO(&ZOPN)          SETC 'DS'                                         00338600
&ZOPV(&ZOPN)          SETC 'F'                                          00338700
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTOFF  XNEXTOFF'                    00338800
.*-------------------------------------------------------------------   00338900
.***AM.LVER2                                                            00339000
.ZL33L                ANOP  ,                                           00339100
.*-------------------------------------------------------------------   00339200
.*-------------------------------------------------------------------   00339300
.***AM.LVER1                                                            00339400
                      AIF  (&XPLISTVER LT 1).ZL34L                      00339500
.*-------------------------------------------------------------------   00339600
.*-------------------------------------------------------------------   00339700
.***AM.L09  XNEXTPTROFF F                                               00339800
&ZOPN                 SETA &ZOPN+1                                      00339900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTPTROFF'                      00340000
&ZOPO(&ZOPN)          SETC 'DS'                                         00340100
&ZOPV(&ZOPN)          SETC 'F'                                          00340200
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTPTROFF  XNEXTPTROFF'              00340300
.*-------------------------------------------------------------------   00340400
.***AM.LVER2                                                            00340500
.ZL34L                ANOP  ,                                           00340600
.*-------------------------------------------------------------------   00340700
.*-------------------------------------------------------------------   00340800
.***AM.LVER1                                                            00340900
                      AIF  (&XPLISTVER LT 1).ZL35L                      00341000
.*-------------------------------------------------------------------   00341100
.*-------------------------------------------------------------------   00341200
.***AM.L09  XENDOFQUEUE A                                               00341300
&ZOPN                 SETA &ZOPN+1                                      00341400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDOFQUEUE'                      00341500
&ZOPO(&ZOPN)          SETC 'DS'                                         00341600
&ZOPV(&ZOPN)          SETC 'A'                                          00341700
&ZOPD(&ZOPN)          SETC '++ &ZXENDOFQUEUE  XENDOFQUEUE'              00341800
.*-------------------------------------------------------------------   00341900
.***AM.LVER2                                                            00342000
.ZL35L                ANOP  ,                                           00342100
.*-------------------------------------------------------------------   00342200
.*-------------------------------------------------------------------   00342300
.***AM.MLM2 SAVED LOCATION COUNTER                                      00342400
                      AIF  (&XPLISTVER GE 2).ZL36LA                     00342500
                      AIF  ('&ZENDBASEPL' NE '').ZL36LA                 00342600
&ZENDBASEPL           SETC 'YES'                                        00342700
&ZOPN                 SETA &ZOPN+1                                      00342800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00342900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00343000
&ZOPV(&ZOPN)          SETC '*'                                          00343100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00343200
.ZL36LA               ANOP  ,                                           00343300
.*-------------------------------------------------------------------   00343400
.***AM.LVER1                                                            00343500
                      AIF  (&XPLISTVER LT 2).ZL36L                      00343600
.*-------------------------------------------------------------------   00343700
.*-------------------------------------------------------------------   00343800
.***AM.L09  XTOKEN CL16                                                 00343900
&ZOPN                 SETA &ZOPN+1                                      00344000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN'                           00344100
&ZOPO(&ZOPN)          SETC 'DS'                                         00344200
&ZOPV(&ZOPN)          SETC 'CL16'                                       00344300
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN  XTOKEN'                        00344400
.*-------------------------------------------------------------------   00344500
.***AM.LVER2                                                            00344600
.ZL36L                ANOP  ,                                           00344700
.*-------------------------------------------------------------------   00344800
.*-------------------------------------------------------------------   00344900
.***AM.L10 END OF IXCMSGI LIST PARAMETERS                               00345000
&ZOPN                 SETA &ZOPN+1                                      00345100
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00345200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00345300
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00345400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00345500
.*                                                                      00345600
&ZOPN                 SETA &ZOPN+1                                      00345700
&ZOPL(&ZOPN)          SETC ' '                                          00345800
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00345900
&ZOPV(&ZOPN)          SETC '1'                                          00346000
&ZOPD(&ZOPN)          SETC ' '                                          00346100
.*-------------------------------------------------------------------   00346200
.***AL.L12 IXCMSGI FMT=LIST MF=S|L PARAMETERS                           00346300
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00346400
.*                                                                      00346500
&ZOPN                 SETA  &ZOPN+1                                     00346600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00346700
&ZOPO(&ZOPN)          SETC  'DC'                                        00346800
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00346900
&ZOPD(&ZOPN)          SETC  '++ IXCMSGI ARG PARMS'                      00347000
.*                                                                      00347100
.ZLMFSLX              ANOP  ,                                           00347200
.*-------------------------------------------------------------------   00347300
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00347400
&ZPLLEN               SETA 16                                           00347500
.*                                                                      00347600
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00347700
&ZPLLEN               SETA 88                                           00347800
.ZLLEN2Z              ANOP  ,                                           00347900
.*                                                                      00348000
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00348100
&ZPLLEN               SETA 104                                          00348200
.ZLLEN3Z              ANOP  ,                                           00348300
.*                                                                      00348400
.******************************************************************     00348500
.***AI.L01 IXCMSGI FMT=LIST FILL IN PARAMETER AREA                      00348600
.******************************************************************     00348700
                      ACTR  10000                                       00348800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00348900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00349000
&ZCVAL                SETC  'LAE'          XAX MODE                     00349100
.ZIMFXA               ANOP ,                                            00349200
.*                                                                      00349300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00349400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00349500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00349600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00349700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00349800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00349900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00350000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00350100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00350200
&ZOPN                 SETA  &ZOPN+1                                     00350300
&ZOPL(&ZOPN)          SETC  ' '                                         00350400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00350500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00350600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00350700
                      AGO   .ZIMFNX                                     00350800
.*                                                                      00350900
.ZIMFN2               ANOP ,                                            00351000
&ZOPN                 SETA  &ZOPN+1                                     00351100
&ZOPL(&ZOPN)          SETC  ' '                                         00351200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00351300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00351400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00351500
.ZIMFNX               ANOP ,                                            00351600
.********************************************************************   00351700
.***AI.L02 IXCMSGI FMT=LIST INITIALIZE PARAMETER AREA                   00351800
.********************************************************************   00351900
.***AI.L03 MF=(SLE)                                                     00352000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00352100
.*                                                                      00352200
&ZOPN                 SETA  &ZOPN+1                                     00352300
&ZOPL(&ZOPN)          SETC  ' '                                         00352400
&ZOPO(&ZOPN)          SETC  'XC'                                        00352500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00352600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00352700
.ZIMFLX               ANOP  ,                                           00352800
.*-------------------------------------------------------------------   00352900
.***AI.L04B XVERSION XL1                                                00353000
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00353100
&ZOPN                 SETA  &ZOPN+1                                     00353200
&ZOPL(&ZOPN)          SETC  ' '                                         00353300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00353400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00353500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00353600
.ZIMFVZ               ANOP  ,                                           00353700
.*-------------------------------------------------------------------   00353800
.***AI.L05 XKEYUSED1 BL1                                                00353900
&ZW                   SETC  ''                                          00354000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00354100
.*-------------------------------------------------------------------   00354200
.***AI.L08 XKEYUSED1 "YES"                                              00354300
.***      BL1'1XXXXXXX'                                                 00354400
         AIF   ('&XMULTIPART' NE 'YES').ZI3A                            00354500
&ZW                   SETC  '&ZW.1'                                     00354600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00354700
                      AGO   .ZI3C                                       00354800
.*                                                                      00354900
.ZI3A                 ANOP  ,                                           00355000
&ZW                   SETC  '&ZW.0'                                     00355100
.ZI3C                 ANOP  ,                                           00355200
.*-------------------------------------------------------------------   00355300
.***AI.L08 XKEYUSED1 "QUEUE"                                            00355400
.***      BL1'X1XXXXXX'                                                 00355500
         AIF   ('&XELEMFORM' NE 'QUEUE').ZI4A                           00355600
&ZW                   SETC  '&ZW.1'                                     00355700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00355800
                      AGO   .ZI4C                                       00355900
.*                                                                      00356000
.ZI4A                 ANOP  ,                                           00356100
&ZW                   SETC  '&ZW.0'                                     00356200
.ZI4C                 ANOP  ,                                           00356300
.*-------------------------------------------------------------------   00356400
.***AI.L08 XKEYUSED1 "MSGSTGKEY"                                        00356500
.***      BL1'XX1XXXXX'                                                 00356600
         AIF   ('&MSGSTGKEY' EQ '').ZI5A                                00356700
         AIF   ('&MSGSTGKEY' EQ 'JOINKEY').ZI5A                         00356800
&ZW                   SETC  '&ZW.1'                                     00356900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00357000
                      AGO   .ZI5C                                       00357100
.*                                                                      00357200
.ZI5A                 ANOP  ,                                           00357300
&ZW                   SETC  '&ZW.0'                                     00357400
.ZI5C                 ANOP  ,                                           00357500
.*-------------------------------------------------------------------   00357600
.***AI.L08 XKEYUSED1 "PARTPTROFF"                                       00357700
.***      BL1'XXX1XXXX'                                                 00357800
         AIF   ('&PARTPTROFF' EQ '').ZI6A                               00357900
&ZW                   SETC  '&ZW.1'                                     00358000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00358100
                      AGO   .ZI6C                                       00358200
.*                                                                      00358300
.ZI6A                 ANOP  ,                                           00358400
&ZW                   SETC  '&ZW.0'                                     00358500
.ZI6C                 ANOP  ,                                           00358600
.*-------------------------------------------------------------------   00358700
.***AI.L08 XKEYUSED1 "PARTALETTBL"                                      00358800
.***      BL1'XXXX1XXX'                                                 00358900
         AIF   ('&PARTALETTBL' EQ '').ZI7A                              00359000
&ZW                   SETC  '&ZW.1'                                     00359100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00359200
                      AGO   .ZI7C                                       00359300
.*                                                                      00359400
.ZI7A                 ANOP  ,                                           00359500
&ZW                   SETC  '&ZW.0'                                     00359600
.ZI7C                 ANOP  ,                                           00359700
.*-------------------------------------------------------------------   00359800
.***AI.L08 XKEYUSED1 "PARTALETOFF"                                      00359900
.***      BL1'XXXXX1XX'                                                 00360000
         AIF   ('&PARTALETOFF' EQ '').ZI8A                              00360100
&ZW                   SETC  '&ZW.1'                                     00360200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00360300
                      AGO   .ZI8C                                       00360400
.*                                                                      00360500
.ZI8A                 ANOP  ,                                           00360600
&ZW                   SETC  '&ZW.0'                                     00360700
.ZI8C                 ANOP  ,                                           00360800
.*-------------------------------------------------------------------   00360900
.***AI.L08 XKEYUSED1 "PARTLENTBL"                                       00361000
.***      BL1'XXXXXX1X'                                                 00361100
         AIF   ('&PARTLENTBL' EQ '').ZI9A                               00361200
&ZW                   SETC  '&ZW.1'                                     00361300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00361400
                      AGO   .ZI9C                                       00361500
.*                                                                      00361600
.ZI9A                 ANOP  ,                                           00361700
&ZW                   SETC  '&ZW.0'                                     00361800
.ZI9C                 ANOP  ,                                           00361900
.*-------------------------------------------------------------------   00362000
.***AI.L08 XKEYUSED1 "PARTLENOFF"                                       00362100
.***      BL1'XXXXXXX1'                                                 00362200
         AIF   ('&PARTLENOFF' EQ '').ZI10A                              00362300
&ZW                   SETC  '&ZW.1'                                     00362400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00362500
                      AGO   .ZI10C                                      00362600
.*                                                                      00362700
.ZI10A                ANOP  ,                                           00362800
&ZW                   SETC  '&ZW.0'                                     00362900
.ZI10C                ANOP  ,                                           00363000
.*-------------------------------------------------------------------   00363100
.***AI.L11 XKEYUSED1 BL1                                                00363200
                      AIF   ('&ZCLNG' NE 'YES').ZI10E  ALL ZERO BITS    00363300
&ZOPN                 SETA  &ZOPN+1                                     00363400
&ZOPL(&ZOPN)          SETC  ' '                                         00363500
&ZOPO(&ZOPN)          SETC  'OI'                                        00363600
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00363700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00363800
.ZI10E                ANOP  ,                                           00363900
.*-------------------------------------------------------------------   00364000
.***AI.L05 XKEYUSED2 BL1                                                00364100
&ZW                   SETC  ''                                          00364200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00364300
.*-------------------------------------------------------------------   00364400
.***AI.L08 XKEYUSED2 "#MSGPARTS"                                        00364500
.***      BL1'1XXXXXXX'                                                 00364600
         AIF   ('&#MSGPARTS' EQ '').ZI12A                               00364700
         AIF   ('&#MSGPARTS' EQ 'AS_NEEDED').ZI12A                      00364800
&ZW                   SETC  '&ZW.1'                                     00364900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00365000
                      AGO   .ZI12C                                      00365100
.*                                                                      00365200
.ZI12A                ANOP  ,                                           00365300
&ZW                   SETC  '&ZW.0'                                     00365400
.ZI12C                ANOP  ,                                           00365500
.*-------------------------------------------------------------------   00365600
.***AI.L08 XKEYUSED2 "TOKEN"                                            00365700
.***      BL1'X1XXXXXX'                                                 00365800
         AIF   ('&XFULLTOKEN' NE 'TOKEN').ZI13A                         00365900
&ZW                   SETC  '&ZW.1000000'                               00366000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00366100
                      AGO   .ZI13C                                      00366200
.*                                                                      00366300
.ZI13A                ANOP  ,                                           00366400
&ZW                   SETC  '&ZW.0000000'                               00366500
.ZI13C                ANOP  ,                                           00366600
.*-------------------------------------------------------------------   00366700
.***AI.L11 XKEYUSED2 BL1                                                00366800
                      AIF   ('&ZCLNG' NE 'YES').ZI13E  ALL ZERO BITS    00366900
&ZOPN                 SETA  &ZOPN+1                                     00367000
&ZOPL(&ZOPN)          SETC  ' '                                         00367100
&ZOPO(&ZOPN)          SETC  'OI'                                        00367200
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00367300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00367400
.ZI13E                ANOP  ,                                           00367500
.*-------------------------------------------------------------------   00367600
.***AI.L18  XMSGSTGKEY XL1                                              00367700
         AIF   ('&XMSGSTGKEY' NE 'JOINKEY').ZI14                        00367800
&ZXMSGSTGKEY          SETC  ''             RESET INPUT/OUTPUT           00367900
.ZI14                 ANOP  ,                                           00368000
.*-------------------------------------------------------------------   00368100
.***AI.L25  XMSGSTGKEY XL1                                              00368200
                      AIF   ('&ZXMSGSTGKEY' EQ '').ZI14E                00368300
                      AIF   ('&ZXMSGSTGKEY' EQ 'OUTPUT').ZI14E          00368400
&ZCGPR                SETC  '&XMSGSTGKEY'                               00368500
.*                                                                      00368600
                      AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZI14B           00368700
&ZCGPR   SETC  '0('.'&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2).')'                00368800
                      AGO   .ZI14D                                      00368900
.ZI14B                ANOP  ,                                           00369000
.*                                                                      00369100
&ZC                   SETC  '&XMSGSTGKEY'(1,1)                          00369200
                      AIF   (T'&ZC NE 'N').ZI14D                        00369300
&ZC                   SETC  '&XMSGSTGKEY'                               00369400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00369500
&ZCGPR                SETC  '=BL1''&XMSGSTGKEY'''                       00369600
.*                                                                      00369700
.ZI14D                ANOP  ,                                           00369800
.*                                                                      00369900
&ZOPN                 SETA  &ZOPN+1                                     00370000
&ZOPL(&ZOPN)          SETC  ' '                                         00370100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00370200
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00370300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGSTGKEY XMSGSTGKEY'                00370400
.*                                                                      00370500
.ZI14E                ANOP  ,                                           00370600
.*-------------------------------------------------------------------   00370700
.***AI.L25  XMSGTOKEN XL4                                               00370800
                      AIF   ('&ZXMSGTOKEN' EQ '').ZI15E                 00370900
                      AIF   ('&ZXMSGTOKEN' EQ 'OUTPUT').ZI15E           00371000
&ZCGPR                SETC  '&XMSGTOKEN'                                00371100
.*                                                                      00371200
                      AIF   ('&XMSGTOKEN'(1,1) NE '(').ZI15B            00371300
&ZCGPR   SETC  '0('.'&XMSGTOKEN'(2,K'&XMSGTOKEN-2).')'                  00371400
                      AGO   .ZI15D                                      00371500
.ZI15B                ANOP  ,                                           00371600
.*                                                                      00371700
&ZC                   SETC  '&XMSGTOKEN'(1,1)                           00371800
                      AIF   (T'&ZC NE 'N').ZI15D                        00371900
&ZC                   SETC  '&XMSGTOKEN'                                00372000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00372100
&ZCGPR                SETC  '=BL4''&XMSGTOKEN'''                        00372200
.*                                                                      00372300
.ZI15D                ANOP  ,                                           00372400
.*                                                                      00372500
&ZOPN                 SETA  &ZOPN+1                                     00372600
&ZOPL(&ZOPN)          SETC  ' '                                         00372700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00372800
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00372900
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTOKEN XMSGTOKEN'                  00373000
.*                                                                      00373100
.ZI15E                ANOP  ,                                           00373200
.*-------------------------------------------------------------------   00373300
.***AI.L19 ADDR XMSGBUF A                                               00373400
                      AIF   ('&ZXMSGBUF' EQ '').ZI16H                   00373500
&ZCLNG                SETC  '&XMSGBUF'                                  00373600
&ZCGPR                SETC  '14'                                        00373700
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI16F  IN GPR                   00373800
.*                                                                      00373900
&ZOPN                 SETA  &ZOPN+1                                     00374000
&ZOPL(&ZOPN)          SETC  ' '                                         00374100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00374200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00374300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00374400
.*                                                                      00374500
                      AGO   .ZI16G                                      00374600
.*                                                                      00374700
.ZI16F                ANOP  ,                                           00374800
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00374900
.*                                                                      00375000
.ZI16G                ANOP  ,                                           00375100
.*                                                                      00375200
&ZOPN                 SETA  &ZOPN+1                                     00375300
&ZOPL(&ZOPN)          SETC  ' '                                         00375400
&ZOPO(&ZOPN)          SETC  'ST'                                        00375500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00375600
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00375700
.*                                                                      00375800
.ZI16H                ANOP  ,                                           00375900
.*-------------------------------------------------------------------   00376000
.***AI.L23 ALET XMSGBUF F                                               00376100
         AIF   ('&ZXMSGBUF' EQ '').ZI17G                                00376200
         AIF   ('&SYSASCE' EQ 'P').ZI17G   SYSSTATE PRIMARY             00376300
&ZCLNG                SETC  '&XMSGBUF'                                  00376400
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI17E  IN AR                    00376500
.*                                                                      00376600
&ZCGPR                SETC  '14'                                        00376700
                      AGO   .ZI17F                                      00376800
.*                                                                      00376900
.ZI17E                ANOP  ,                                           00377000
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00377100
.*                                                                      00377200
.ZI17F                ANOP  ,                                           00377300
.*                                                                      00377400
&ZOPN                 SETA  &ZOPN+1                                     00377500
&ZOPL(&ZOPN)          SETC  ' '                                         00377600
&ZOPO(&ZOPN)          SETC  'STAM'                                      00377700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,12(1)'                       00377800
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00377900
.*                                                                      00378000
.ZI17G                ANOP  ,                                           00378100
.*-------------------------------------------------------------------   00378200
.***AI.LVER01                                                           00378300
                      AIF  (&XPLISTVER LT 1).ZI18Z                      00378400
.*-------------------------------------------------------------------   00378500
.***AI.LVER02                                                           00378600
.ZI18Z                ANOP  ,                                           00378700
.*-------------------------------------------------------------------   00378800
.***AI.LVER01                                                           00378900
                      AIF  (&XPLISTVER LT 1).ZI19Z                      00379000
.*-------------------------------------------------------------------   00379100
.***AI.LVER02                                                           00379200
.ZI19Z                ANOP  ,                                           00379300
.*-------------------------------------------------------------------   00379400
.***AI.LVER01                                                           00379500
                      AIF  (&XPLISTVER LT 1).ZI20Z                      00379600
.*-------------------------------------------------------------------   00379700
.***AI.L19 ADDR XPARTLENTBL A                                           00379800
                      AIF   ('&ZXPARTLENTBL' EQ '').ZI20H               00379900
&ZCLNG                SETC  '&XPARTLENTBL'                              00380000
&ZCGPR                SETC  '14'                                        00380100
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI20F  IN GPR               00380200
.*                                                                      00380300
&ZOPN                 SETA  &ZOPN+1                                     00380400
&ZOPL(&ZOPN)          SETC  ' '                                         00380500
&ZOPO(&ZOPN)          SETC  'LA'                                        00380600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00380700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00380800
.*                                                                      00380900
                      AGO   .ZI20G                                      00381000
.*                                                                      00381100
.ZI20F                ANOP  ,                                           00381200
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00381300
.*                                                                      00381400
.ZI20G                ANOP  ,                                           00381500
.*                                                                      00381600
&ZOPN                 SETA  &ZOPN+1                                     00381700
&ZOPL(&ZOPN)          SETC  ' '                                         00381800
&ZOPO(&ZOPN)          SETC  'ST'                                        00381900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00382000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00382100
.*                                                                      00382200
.ZI20H                ANOP  ,                                           00382300
.*-------------------------------------------------------------------   00382400
.***AI.LVER02                                                           00382500
.ZI20Z                ANOP  ,                                           00382600
.*-------------------------------------------------------------------   00382700
.***AI.LVER01                                                           00382800
                      AIF  (&XPLISTVER LT 1).ZI21Z                      00382900
.*-------------------------------------------------------------------   00383000
.***AI.L19 ADDR XPARTALETTBL A                                          00383100
                      AIF   ('&ZXPARTALETTBL' EQ '').ZI21H              00383200
&ZCLNG                SETC  '&XPARTALETTBL'                             00383300
&ZCGPR                SETC  '14'                                        00383400
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI21F  IN GPR              00383500
.*                                                                      00383600
&ZOPN                 SETA  &ZOPN+1                                     00383700
&ZOPL(&ZOPN)          SETC  ' '                                         00383800
&ZOPO(&ZOPN)          SETC  'LA'                                        00383900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00384000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00384100
.*                                                                      00384200
                      AGO   .ZI21G                                      00384300
.*                                                                      00384400
.ZI21F                ANOP  ,                                           00384500
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00384600
.*                                                                      00384700
.ZI21G                ANOP  ,                                           00384800
.*                                                                      00384900
&ZOPN                 SETA  &ZOPN+1                                     00385000
&ZOPL(&ZOPN)          SETC  ' '                                         00385100
&ZOPO(&ZOPN)          SETC  'ST'                                        00385200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,28(,1)'                             00385300
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00385400
.*                                                                      00385500
.ZI21H                ANOP  ,                                           00385600
.*-------------------------------------------------------------------   00385700
.***AI.LVER02                                                           00385800
.ZI21Z                ANOP  ,                                           00385900
.*-------------------------------------------------------------------   00386000
.***AI.LVER01                                                           00386100
                      AIF  (&XPLISTVER LT 1).ZI22Z                      00386200
.*-------------------------------------------------------------------   00386300
.***AI.L19 ADDR XELEMENT A                                              00386400
                      AIF   ('&ZXELEMENT' EQ '').ZI22H                  00386500
&ZCLNG                SETC  '&XELEMENT'                                 00386600
&ZCGPR                SETC  '14'                                        00386700
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI22F  IN GPR                  00386800
.*                                                                      00386900
&ZOPN                 SETA  &ZOPN+1                                     00387000
&ZOPL(&ZOPN)          SETC  ' '                                         00387100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00387200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00387300
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00387400
.*                                                                      00387500
                      AGO   .ZI22G                                      00387600
.*                                                                      00387700
.ZI22F                ANOP  ,                                           00387800
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00387900
.*                                                                      00388000
.ZI22G                ANOP  ,                                           00388100
.*                                                                      00388200
&ZOPN                 SETA  &ZOPN+1                                     00388300
&ZOPL(&ZOPN)          SETC  ' '                                         00388400
&ZOPO(&ZOPN)          SETC  'ST'                                        00388500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00388600
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00388700
.*                                                                      00388800
.ZI22H                ANOP  ,                                           00388900
.*-------------------------------------------------------------------   00389000
.***AI.LVER02                                                           00389100
.ZI22Z                ANOP  ,                                           00389200
.*-------------------------------------------------------------------   00389300
.***AI.LVER01                                                           00389400
                      AIF  (&XPLISTVER LT 1).ZI23Z                      00389500
.*-------------------------------------------------------------------   00389600
.***AI.L23 ALET XELEMENT F                                              00389700
         AIF   ('&ZXELEMENT' EQ '').ZI23G                               00389800
         AIF   ('&SYSASCE' EQ 'P').ZI23G   SYSSTATE PRIMARY             00389900
&ZCLNG                SETC  '&XELEMENT'                                 00390000
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI23E  IN AR                   00390100
.*                                                                      00390200
&ZCGPR                SETC  '14'                                        00390300
                      AGO   .ZI23F                                      00390400
.*                                                                      00390500
.ZI23E                ANOP  ,                                           00390600
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00390700
.*                                                                      00390800
.ZI23F                ANOP  ,                                           00390900
.*                                                                      00391000
&ZOPN                 SETA  &ZOPN+1                                     00391100
&ZOPL(&ZOPN)          SETC  ' '                                         00391200
&ZOPO(&ZOPN)          SETC  'STAM'                                      00391300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,36(1)'                       00391400
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00391500
.*                                                                      00391600
.ZI23G                ANOP  ,                                           00391700
.*-------------------------------------------------------------------   00391800
.***AI.LVER02                                                           00391900
.ZI23Z                ANOP  ,                                           00392000
.*-------------------------------------------------------------------   00392100
.***AI.LVER01                                                           00392200
                      AIF  (&XPLISTVER LT 1).ZI24Z                      00392300
.*-------------------------------------------------------------------   00392400
.***AI.L23 ALET XPARTLENTBL F                                           00392500
         AIF   ('&ZXPARTLENTBL' EQ '').ZI24G                            00392600
         AIF   ('&SYSASCE' EQ 'P').ZI24G   SYSSTATE PRIMARY             00392700
&ZCLNG                SETC  '&XPARTLENTBL'                              00392800
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI24E  IN AR                00392900
.*                                                                      00393000
&ZCGPR                SETC  '14'                                        00393100
&ZOPN                 SETA  &ZOPN+1                                     00393200
&ZOPL(&ZOPN)          SETC  ' '                                         00393300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00393400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00393500
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00393600
                      AGO   .ZI24F                                      00393700
.*                                                                      00393800
.ZI24E                ANOP  ,                                           00393900
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00394000
.*                                                                      00394100
.ZI24F                ANOP  ,                                           00394200
.*                                                                      00394300
&ZOPN                 SETA  &ZOPN+1                                     00394400
&ZOPL(&ZOPN)          SETC  ' '                                         00394500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00394600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       00394700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00394800
.*                                                                      00394900
.ZI24G                ANOP  ,                                           00395000
.*-------------------------------------------------------------------   00395100
.***AI.LVER02                                                           00395200
.ZI24Z                ANOP  ,                                           00395300
.*-------------------------------------------------------------------   00395400
.***AI.LVER01                                                           00395500
                      AIF  (&XPLISTVER LT 1).ZI25Z                      00395600
.*-------------------------------------------------------------------   00395700
.***AI.L23 ALET XPARTALETTBL F                                          00395800
         AIF   ('&ZXPARTALETTBL' EQ '').ZI25G                           00395900
         AIF   ('&SYSASCE' EQ 'P').ZI25G   SYSSTATE PRIMARY             00396000
&ZCLNG                SETC  '&XPARTALETTBL'                             00396100
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI25E  IN AR               00396200
.*                                                                      00396300
&ZCGPR                SETC  '14'                                        00396400
&ZOPN                 SETA  &ZOPN+1                                     00396500
&ZOPL(&ZOPN)          SETC  ' '                                         00396600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00396700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00396800
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00396900
                      AGO   .ZI25F                                      00397000
.*                                                                      00397100
.ZI25E                ANOP  ,                                           00397200
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00397300
.*                                                                      00397400
.ZI25F                ANOP  ,                                           00397500
.*                                                                      00397600
&ZOPN                 SETA  &ZOPN+1                                     00397700
&ZOPL(&ZOPN)          SETC  ' '                                         00397800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00397900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,44(1)'                       00398000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00398100
.*                                                                      00398200
.ZI25G                ANOP  ,                                           00398300
.*-------------------------------------------------------------------   00398400
.***AI.LVER02                                                           00398500
.ZI25Z                ANOP  ,                                           00398600
.*-------------------------------------------------------------------   00398700
.***AI.LVER01                                                           00398800
                      AIF  (&XPLISTVER LT 1).ZI26Z                      00398900
.*-------------------------------------------------------------------   00399000
.***AI.L18  XPARTALET F                                                 00399100
         AIF   ('&XPARTALET' NE 'ZERO').ZI26                            00399200
&ZXPARTALET           SETC  ''             RESET INPUT/OUTPUT           00399300
.ZI26                 ANOP  ,                                           00399400
.*-------------------------------------------------------------------   00399500
.***AI.L25  XPARTALET F                                                 00399600
                      AIF   ('&ZXPARTALET' EQ '').ZI26E                 00399700
                      AIF   ('&ZXPARTALET' EQ 'OUTPUT').ZI26E           00399800
&ZCGPR                SETC  '&XPARTALET'                                00399900
.*                                                                      00400000
                      AIF   ('&XPARTALET'(1,1) NE '(').ZI26B            00400100
&ZCGPR   SETC  '0('.'&XPARTALET'(2,K'&XPARTALET-2).')'                  00400200
.ZI26B                ANOP  ,                                           00400300
.*                                                                      00400400
&ZC                   SETC  '&XPARTALET'(1,1)                           00400500
                      AIF   (T'&ZC NE 'N').ZI26D                        00400600
&ZC                   SETC  '&XPARTALET'                                00400700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI26D               00400800
&ZCGPR                SETC  '=FL4''&XPARTALET'''                        00400900
.*                                                                      00401000
.ZI26D                ANOP  ,                                           00401100
.*                                                                      00401200
&ZOPN                 SETA  &ZOPN+1                                     00401300
&ZOPL(&ZOPN)          SETC  ' '                                         00401400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00401500
&ZOPV(&ZOPN)          SETC  '48(4,1),&ZCGPR'                            00401600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALET XPARTALET'                  00401700
.*                                                                      00401800
.ZI26E                ANOP  ,                                           00401900
.*-------------------------------------------------------------------   00402000
.***AI.LVER02                                                           00402100
.ZI26Z                ANOP  ,                                           00402200
.*-------------------------------------------------------------------   00402300
.***AI.LVER01                                                           00402400
                      AIF  (&XPLISTVER LT 1).ZI27Z                      00402500
.*-------------------------------------------------------------------   00402600
.***AI.L25  XPARTALETOFF F                                              00402700
                      AIF   ('&ZXPARTALETOFF' EQ '').ZI27E              00402800
                      AIF   ('&ZXPARTALETOFF' EQ 'OUTPUT').ZI27E        00402900
&ZCGPR                SETC  '&XPARTALETOFF'                             00403000
.*                                                                      00403100
                      AIF   ('&XPARTALETOFF'(1,1) NE '(').ZI27B         00403200
&ZCGPR   SETC  '0('.'&XPARTALETOFF'(2,K'&XPARTALETOFF-2).')'            00403300
                      AGO   .ZI27D                                      00403400
.ZI27B                ANOP  ,                                           00403500
.*                                                                      00403600
&ZC                   SETC  '&XPARTALETOFF'(1,1)                        00403700
                      AIF   (T'&ZC NE 'N').ZI27D                        00403800
&ZC                   SETC  '&XPARTALETOFF'                             00403900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI27D               00404000
&ZCGPR                SETC  '=FL4''&XPARTALETOFF'''                     00404100
.*                                                                      00404200
.ZI27D                ANOP  ,                                           00404300
.*                                                                      00404400
&ZOPN                 SETA  &ZOPN+1                                     00404500
&ZOPL(&ZOPN)          SETC  ' '                                         00404600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00404700
&ZOPV(&ZOPN)          SETC  '52(4,1),&ZCGPR'                            00404800
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETOFF XPARTALETOFF'            00404900
.*                                                                      00405000
.ZI27E                ANOP  ,                                           00405100
.*-------------------------------------------------------------------   00405200
.***AI.LVER02                                                           00405300
.ZI27Z                ANOP  ,                                           00405400
.*-------------------------------------------------------------------   00405500
.***AI.LVER01                                                           00405600
                      AIF  (&XPLISTVER LT 1).ZI28Z                      00405700
.*-------------------------------------------------------------------   00405800
.***AI.L25  XPARTOFF F                                                  00405900
                      AIF   ('&ZXPARTOFF' EQ '').ZI28E                  00406000
                      AIF   ('&ZXPARTOFF' EQ 'OUTPUT').ZI28E            00406100
&ZCGPR                SETC  '&XPARTOFF'                                 00406200
.*                                                                      00406300
                      AIF   ('&XPARTOFF'(1,1) NE '(').ZI28B             00406400
&ZCGPR   SETC  '0('.'&XPARTOFF'(2,K'&XPARTOFF-2).')'                    00406500
                      AGO   .ZI28D                                      00406600
.ZI28B                ANOP  ,                                           00406700
.*                                                                      00406800
&ZC                   SETC  '&XPARTOFF'(1,1)                            00406900
                      AIF   (T'&ZC NE 'N').ZI28D                        00407000
&ZC                   SETC  '&XPARTOFF'                                 00407100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00407200
&ZCGPR                SETC  '=FL4''&XPARTOFF'''                         00407300
.*                                                                      00407400
.ZI28D                ANOP  ,                                           00407500
.*                                                                      00407600
&ZOPN                 SETA  &ZOPN+1                                     00407700
&ZOPL(&ZOPN)          SETC  ' '                                         00407800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00407900
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            00408000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTOFF XPARTOFF'                    00408100
.*                                                                      00408200
.ZI28E                ANOP  ,                                           00408300
.*-------------------------------------------------------------------   00408400
.***AI.LVER02                                                           00408500
.ZI28Z                ANOP  ,                                           00408600
.*-------------------------------------------------------------------   00408700
.***AI.LVER01                                                           00408800
                      AIF  (&XPLISTVER LT 1).ZI29Z                      00408900
.*-------------------------------------------------------------------   00409000
.***AI.L25  XPARTPTROFF F                                               00409100
                      AIF   ('&ZXPARTPTROFF' EQ '').ZI29E               00409200
                      AIF   ('&ZXPARTPTROFF' EQ 'OUTPUT').ZI29E         00409300
&ZCGPR                SETC  '&XPARTPTROFF'                              00409400
.*                                                                      00409500
                      AIF   ('&XPARTPTROFF'(1,1) NE '(').ZI29B          00409600
&ZCGPR   SETC  '0('.'&XPARTPTROFF'(2,K'&XPARTPTROFF-2).')'              00409700
                      AGO   .ZI29D                                      00409800
.ZI29B                ANOP  ,                                           00409900
.*                                                                      00410000
&ZC                   SETC  '&XPARTPTROFF'(1,1)                         00410100
                      AIF   (T'&ZC NE 'N').ZI29D                        00410200
&ZC                   SETC  '&XPARTPTROFF'                              00410300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI29D               00410400
&ZCGPR                SETC  '=FL4''&XPARTPTROFF'''                      00410500
.*                                                                      00410600
.ZI29D                ANOP  ,                                           00410700
.*                                                                      00410800
&ZOPN                 SETA  &ZOPN+1                                     00410900
&ZOPL(&ZOPN)          SETC  ' '                                         00411000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00411100
&ZOPV(&ZOPN)          SETC  '60(4,1),&ZCGPR'                            00411200
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTPTROFF XPARTPTROFF'              00411300
.*                                                                      00411400
.ZI29E                ANOP  ,                                           00411500
.*-------------------------------------------------------------------   00411600
.***AI.LVER02                                                           00411700
.ZI29Z                ANOP  ,                                           00411800
.*-------------------------------------------------------------------   00411900
.***AI.LVER01                                                           00412000
                      AIF  (&XPLISTVER LT 1).ZI30Z                      00412100
.*-------------------------------------------------------------------   00412200
.***AI.L25  XPARTLEN F                                                  00412300
                      AIF   ('&ZXPARTLEN' EQ '').ZI30E                  00412400
                      AIF   ('&ZXPARTLEN' EQ 'OUTPUT').ZI30E            00412500
&ZCGPR                SETC  '&XPARTLEN'                                 00412600
.*                                                                      00412700
                      AIF   ('&XPARTLEN'(1,1) NE '(').ZI30B             00412800
&ZCGPR   SETC  '0('.'&XPARTLEN'(2,K'&XPARTLEN-2).')'                    00412900
                      AGO   .ZI30D                                      00413000
.ZI30B                ANOP  ,                                           00413100
.*                                                                      00413200
&ZC                   SETC  '&XPARTLEN'(1,1)                            00413300
                      AIF   (T'&ZC NE 'N').ZI30D                        00413400
&ZC                   SETC  '&XPARTLEN'                                 00413500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI30D               00413600
&ZCGPR                SETC  '=FL4''&XPARTLEN'''                         00413700
.*                                                                      00413800
.ZI30D                ANOP  ,                                           00413900
.*                                                                      00414000
&ZOPN                 SETA  &ZOPN+1                                     00414100
&ZOPL(&ZOPN)          SETC  ' '                                         00414200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00414300
&ZOPV(&ZOPN)          SETC  '64(4,1),&ZCGPR'                            00414400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLEN XPARTLEN'                    00414500
.*                                                                      00414600
.ZI30E                ANOP  ,                                           00414700
.*-------------------------------------------------------------------   00414800
.***AI.LVER02                                                           00414900
.ZI30Z                ANOP  ,                                           00415000
.*-------------------------------------------------------------------   00415100
.***AI.LVER01                                                           00415200
                      AIF  (&XPLISTVER LT 1).ZI31Z                      00415300
.*-------------------------------------------------------------------   00415400
.***AI.L25  XPARTLENOFF F                                               00415500
                      AIF   ('&ZXPARTLENOFF' EQ '').ZI31E               00415600
                      AIF   ('&ZXPARTLENOFF' EQ 'OUTPUT').ZI31E         00415700
&ZCGPR                SETC  '&XPARTLENOFF'                              00415800
.*                                                                      00415900
                      AIF   ('&XPARTLENOFF'(1,1) NE '(').ZI31B          00416000
&ZCGPR   SETC  '0('.'&XPARTLENOFF'(2,K'&XPARTLENOFF-2).')'              00416100
                      AGO   .ZI31D                                      00416200
.ZI31B                ANOP  ,                                           00416300
.*                                                                      00416400
&ZC                   SETC  '&XPARTLENOFF'(1,1)                         00416500
                      AIF   (T'&ZC NE 'N').ZI31D                        00416600
&ZC                   SETC  '&XPARTLENOFF'                              00416700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI31D               00416800
&ZCGPR                SETC  '=FL4''&XPARTLENOFF'''                      00416900
.*                                                                      00417000
.ZI31D                ANOP  ,                                           00417100
.*                                                                      00417200
&ZOPN                 SETA  &ZOPN+1                                     00417300
&ZOPL(&ZOPN)          SETC  ' '                                         00417400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00417500
&ZOPV(&ZOPN)          SETC  '68(4,1),&ZCGPR'                            00417600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENOFF XPARTLENOFF'              00417700
.*                                                                      00417800
.ZI31E                ANOP  ,                                           00417900
.*-------------------------------------------------------------------   00418000
.***AI.LVER02                                                           00418100
.ZI31Z                ANOP  ,                                           00418200
.*-------------------------------------------------------------------   00418300
.***AI.LVER01                                                           00418400
                      AIF  (&XPLISTVER LT 1).ZI32Z                      00418500
.*-------------------------------------------------------------------   00418600
.***AI.L18  X#MSGPARTS F                                                00418700
         AIF   ('&X#MSGPARTS' NE 'AS_NEEDED').ZI32                      00418800
&ZX#MSGPARTS          SETC  ''             RESET INPUT/OUTPUT           00418900
.ZI32                 ANOP  ,                                           00419000
.*-------------------------------------------------------------------   00419100
.***AI.L25  X#MSGPARTS F                                                00419200
                      AIF   ('&ZX#MSGPARTS' EQ '').ZI32E                00419300
                      AIF   ('&ZX#MSGPARTS' EQ 'OUTPUT').ZI32E          00419400
&ZCGPR                SETC  '&X#MSGPARTS'                               00419500
.*                                                                      00419600
                      AIF   ('&X#MSGPARTS'(1,1) NE '(').ZI32B           00419700
&ZCGPR   SETC  '0('.'&X#MSGPARTS'(2,K'&X#MSGPARTS-2).')'                00419800
                      AGO   .ZI32D                                      00419900
.ZI32B                ANOP  ,                                           00420000
.*                                                                      00420100
&ZC                   SETC  '&X#MSGPARTS'(1,1)                          00420200
                      AIF   (T'&ZC NE 'N').ZI32D                        00420300
&ZC                   SETC  '&X#MSGPARTS'                               00420400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00420500
&ZCGPR                SETC  '=FL4''&X#MSGPARTS'''                       00420600
.*                                                                      00420700
.ZI32D                ANOP  ,                                           00420800
.*                                                                      00420900
&ZOPN                 SETA  &ZOPN+1                                     00421000
&ZOPL(&ZOPN)          SETC  ' '                                         00421100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00421200
&ZOPV(&ZOPN)          SETC  '72(4,1),&ZCGPR'                            00421300
&ZOPD(&ZOPN)          SETC  '++ &ZX#MSGPARTS X#MSGPARTS'                00421400
.*                                                                      00421500
.ZI32E                ANOP  ,                                           00421600
.*-------------------------------------------------------------------   00421700
.***AI.LVER02                                                           00421800
.ZI32Z                ANOP  ,                                           00421900
.*-------------------------------------------------------------------   00422000
.***AI.LVER01                                                           00422100
                      AIF  (&XPLISTVER LT 1).ZI33Z                      00422200
.*-------------------------------------------------------------------   00422300
.***AI.L25  XNEXTOFF F                                                  00422400
                      AIF   ('&ZXNEXTOFF' EQ '').ZI33E                  00422500
                      AIF   ('&ZXNEXTOFF' EQ 'OUTPUT').ZI33E            00422600
&ZCGPR                SETC  '&XNEXTOFF'                                 00422700
.*                                                                      00422800
                      AIF   ('&XNEXTOFF'(1,1) NE '(').ZI33B             00422900
&ZCGPR   SETC  '0('.'&XNEXTOFF'(2,K'&XNEXTOFF-2).')'                    00423000
                      AGO   .ZI33D                                      00423100
.ZI33B                ANOP  ,                                           00423200
.*                                                                      00423300
&ZC                   SETC  '&XNEXTOFF'(1,1)                            00423400
                      AIF   (T'&ZC NE 'N').ZI33D                        00423500
&ZC                   SETC  '&XNEXTOFF'                                 00423600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI33D               00423700
&ZCGPR                SETC  '=FL4''&XNEXTOFF'''                         00423800
.*                                                                      00423900
.ZI33D                ANOP  ,                                           00424000
.*                                                                      00424100
&ZOPN                 SETA  &ZOPN+1                                     00424200
&ZOPL(&ZOPN)          SETC  ' '                                         00424300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00424400
&ZOPV(&ZOPN)          SETC  '76(4,1),&ZCGPR'                            00424500
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTOFF XNEXTOFF'                    00424600
.*                                                                      00424700
.ZI33E                ANOP  ,                                           00424800
.*-------------------------------------------------------------------   00424900
.***AI.LVER02                                                           00425000
.ZI33Z                ANOP  ,                                           00425100
.*-------------------------------------------------------------------   00425200
.***AI.LVER01                                                           00425300
                      AIF  (&XPLISTVER LT 1).ZI34Z                      00425400
.*-------------------------------------------------------------------   00425500
.***AI.L25  XNEXTPTROFF F                                               00425600
                      AIF   ('&ZXNEXTPTROFF' EQ '').ZI34E               00425700
                      AIF   ('&ZXNEXTPTROFF' EQ 'OUTPUT').ZI34E         00425800
&ZCGPR                SETC  '&XNEXTPTROFF'                              00425900
.*                                                                      00426000
                      AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZI34B          00426100
&ZCGPR   SETC  '0('.'&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2).')'              00426200
                      AGO   .ZI34D                                      00426300
.ZI34B                ANOP  ,                                           00426400
.*                                                                      00426500
&ZC                   SETC  '&XNEXTPTROFF'(1,1)                         00426600
                      AIF   (T'&ZC NE 'N').ZI34D                        00426700
&ZC                   SETC  '&XNEXTPTROFF'                              00426800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               00426900
&ZCGPR                SETC  '=FL4''&XNEXTPTROFF'''                      00427000
.*                                                                      00427100
.ZI34D                ANOP  ,                                           00427200
.*                                                                      00427300
&ZOPN                 SETA  &ZOPN+1                                     00427400
&ZOPL(&ZOPN)          SETC  ' '                                         00427500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00427600
&ZOPV(&ZOPN)          SETC  '80(4,1),&ZCGPR'                            00427700
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTPTROFF XNEXTPTROFF'              00427800
.*                                                                      00427900
.ZI34E                ANOP  ,                                           00428000
.*-------------------------------------------------------------------   00428100
.***AI.LVER02                                                           00428200
.ZI34Z                ANOP  ,                                           00428300
.*-------------------------------------------------------------------   00428400
.***AI.LVER01                                                           00428500
                      AIF  (&XPLISTVER LT 1).ZI35Z                      00428600
.*-------------------------------------------------------------------   00428700
.***AI.L18  XENDOFQUEUE AL4                                             00428800
         AIF   ('&XENDOFQUEUE' NE 'ZERO').ZI35                          00428900
&ZXENDOFQUEUE         SETC  ''             RESET INPUT/OUTPUT           00429000
.ZI35                 ANOP  ,                                           00429100
.*-------------------------------------------------------------------   00429200
.***AI.L25  XENDOFQUEUE AL4                                             00429300
                      AIF   ('&ZXENDOFQUEUE' EQ '').ZI35E               00429400
                      AIF   ('&ZXENDOFQUEUE' EQ 'OUTPUT').ZI35E         00429500
&ZCGPR                SETC  '&XENDOFQUEUE'                              00429600
.*                                                                      00429700
                      AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZI35B          00429800
&ZCGPR   SETC  '0('.'&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2).')'              00429900
                      AGO   .ZI35D                                      00430000
.ZI35B                ANOP  ,                                           00430100
.*                                                                      00430200
&ZC                   SETC  '&XENDOFQUEUE'(1,1)                         00430300
                      AIF   (T'&ZC NE 'N').ZI35D                        00430400
&ZC                   SETC  '&XENDOFQUEUE'                              00430500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               00430600
&ZCGPR                SETC  '=AL4(&XENDOFQUEUE)'                        00430700
.*                                                                      00430800
.ZI35D                ANOP  ,                                           00430900
.*                                                                      00431000
&ZOPN                 SETA  &ZOPN+1                                     00431100
&ZOPL(&ZOPN)          SETC  ' '                                         00431200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00431300
&ZOPV(&ZOPN)          SETC  '84(4,1),&ZCGPR'                            00431400
&ZOPD(&ZOPN)          SETC  '++ &ZXENDOFQUEUE XENDOFQUEUE'              00431500
.*                                                                      00431600
.ZI35E                ANOP  ,                                           00431700
.*-------------------------------------------------------------------   00431800
.***AI.LVER02                                                           00431900
.ZI35Z                ANOP  ,                                           00432000
.*-------------------------------------------------------------------   00432100
.***AI.LVER01                                                           00432200
                      AIF  (&XPLISTVER LT 2).ZI36Z                      00432300
.*-------------------------------------------------------------------   00432400
.***AI.L25  XTOKEN CL16                                                 00432500
                      AIF   ('&ZXTOKEN' EQ '').ZI36E                    00432600
                      AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZI36E              00432700
&ZCGPR                SETC  '&XTOKEN'                                   00432800
.*                                                                      00432900
                      AIF   ('&XTOKEN'(1,1) NE '(').ZI36B               00433000
&ZCGPR   SETC  '0('.'&XTOKEN'(2,K'&XTOKEN-2).')'                        00433100
.ZI36B                ANOP  ,                                           00433200
.*                                                                      00433300
&ZOPN                 SETA  &ZOPN+1                                     00433400
&ZOPL(&ZOPN)          SETC  ' '                                         00433500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00433600
&ZOPV(&ZOPN)          SETC  '88(16,1),&ZCGPR'                           00433700
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN'                        00433800
.*                                                                      00433900
.ZI36E                ANOP  ,                                           00434000
.*-------------------------------------------------------------------   00434100
.***AI.LVER02                                                           00434200
.ZI36Z                ANOP  ,                                           00434300
.*-------------------------------------------------------------------   00434400
&ZOPN1                SETA &ZOPN                                        00434500
.*******************************************************************    00434600
.***  PROCESS IXCMSGI OUTPUT PARAMETERS                                 00434700
.*******************************************************************    00434800
                      ACTR  10000                                       00434900
.*******************************************************************    00435000
.***AO.X02  RETURN CODE PROCESSING                                      00435100
.*******************************************************************    00435200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00435300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00435400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00435500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00435600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00435700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00435800
&ZOPN                 SETA  &ZOPN+1                                     00435900
&ZOPL(&ZOPN)          SETC  ' '                                         00436000
&ZOPO(&ZOPN)          SETC  'ST'                                        00436100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00436200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00436300
                      AGO   .ZMRETX                                     00436400
.*                                                                      00436500
.ZMRET2               ANOP  ,                                           00436600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00436700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00436800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00436900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00437000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00437100
&ZOPN                 SETA  &ZOPN+1                                     00437200
&ZOPL(&ZOPN)          SETC  ' '                                         00437300
&ZOPO(&ZOPN)          SETC  'LR'                                        00437400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00437500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00437600
.ZMRETX               ANOP  ,                                           00437700
.*******************************************************************    00437800
.***AO.X03  REASON CODE PROCESSING                                      00437900
.*******************************************************************    00438000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00438100
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00438200
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00438300
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00438400
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00438500
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00438600
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00438700
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00438800
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00438900
&ZOPN                 SETA  &ZOPN+1                                     00439000
&ZOPL(&ZOPN)          SETC  ' '                                         00439100
&ZOPO(&ZOPN)          SETC  'ST'                                        00439200
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00439300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00439400
                      AGO   .ZMRSNX                                     00439500
.*                                                                      00439600
.ZMRSN2               ANOP  ,                                           00439700
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00439800
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00439900
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00440000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00440100
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00440200
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00440300
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00440400
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00440500
&ZOPN                 SETA  &ZOPN+1                                     00440600
&ZOPL(&ZOPN)          SETC  ' '                                         00440700
&ZOPO(&ZOPN)          SETC  'LR'                                        00440800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00440900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00441000
.ZMRSNX               ANOP  ,                                           00441100
.*******************************************************************    00441200
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00441300
.*******************************************************************    00441400
.ZMFLX                ANOP  ,              MF=L PROCESSING              00441500
.*******************************************************************    00441600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00441700
.*******************************************************************    00441800
                      ACTR  10000                                       00441900
.*                                                                      00442000
                      LCLA  &ZLC           COLUMN POSITION              00442100
                      LCLA  &ZOPX          LIST TABLE INDEX             00442200
                      LCLC  &ZLL           LABEL                        00442300
                      LCLC  &ZLOP          OPERATION                    00442400
                      LCLC  &ZLV           VALUE                        00442500
                      LCLC  &ZLD           DESCRIPTION                  00442600
.*                                                                      00442700
&ZOPX                 SETA  1                                           00442800
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00442900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00443000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00443100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00443200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00443300
                      AIF   (K'&ZLD LE 0).ZL5                           00443400
&ZLC                  SETA  35             COMMENT COLUMN               00443500
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00443600
&ZLC                  SETA  33             COMMMENT COLUMN              00443700
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00443800
&ZLV                  SETC  '&ZLV'.' '                                  00443900
                      AGO   .ZL3                                        00444000
.*                                                                      00444100
.ZL4                  ANOP  ,                                           00444200
&ZLV                  SETC  '&ZLV'.' '                                  00444300
.ZL5                  ANOP  ,                                           00444400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00444500
.*                                                                      00444600
&ZLL     &ZLOP &ZLV                                                     00444700
.*                                                                      00444800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00444900
                      AGO   .ZL2           CONTINUE LOOPING             00445000
.*                                                                      00445100
.ZLX                  ANOP  ,                                           00445200
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00445300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00445400
         L     14,16(0,0)              GET CVT ADDRESS                  00445500
         L     14,772(14,0)            GET SFT ADDRESS                  00445600
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00445700
         LA    15,1                    GET EX FOR SERVICE ROUTINE       00445800
         OR    14,15                   GET PC NUMBER                    00445900
         PC    0(14)                                                    00446000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00446100
.ZLINKX               ANOP  ,                                           00446200
.*******************************************************************    00446300
.***AP.X01  FORMAT GENERATED CODE                                       00446400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00446500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00446600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00446700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00446800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00446900
                      AIF   (K'&ZLD LE 0).ZL51                          00447000
&ZLC                  SETA  35             COMMENT COLUMN               00447100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00447200
&ZLC                  SETA  33             COMMENT COLUMN               00447300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00447400
&ZLV                  SETC  '&ZLV'.' '                                  00447500
                      AGO   .ZL31                                       00447600
.*                                                                      00447700
.ZL41                 ANOP  ,                                           00447800
&ZLV                  SETC  '&ZLV'.' '                                  00447900
.ZL51                 ANOP  ,                                           00448000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00448100
.*                                                                      00448200
&ZLL     &ZLOP &ZLV                                                     00448300
.*                                                                      00448400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00448500
                      AGO   .ZL21          CONTINUE LOOPING             00448600
.*                                                                      00448700
.ZLX1                 ANOP  ,                                           00448800
.*******************************************************************    00448900
.***AP.X02  END OF IXCMSGI MACRO                                        00449000
&ZIXCMSGI             SETC  'YES'          SET IXCMSGI USED             00449100
         POP   PRINT                                                    00449200
*                                            IXCMSGI-2                  00449300
         SPACE 1                                                        00449400
.ZLX2                 ANOP  ,                                           00449500
         MEND                                                           00449600
**********************************************************************/ 00449700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00449800
*%IXCMSGI: MACRO KEYS(TOKEN,MSGTOKEN,MULTIPART,MSGBUF,#MSGPARTS,        00449900
*                 ELEMENT,ELEMFORM,NEXTOFF,NEXTPTROFF,ENDOFQUEUE,       00450000
*                 PARTOFF,PARTPTROFF,PARTALET,PARTALETOFF,PARTALETTBL,  00450100
*                 PARTLEN,PARTLENOFF,PARTLENTBL,MSGSTGKEY,RETCODE,      00450200
*                 RSNCODE,PLISTVER,MF);                                 00450300
*  ANS('?'||MACLABEL||' '||'IXCMSGIP '||MACLIST||                       00450400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00450500
*%END IXCMSGI;                                                          00450600
