*%       GOTO SDWABSL1;  /*                                             00650000
         MACRO                                                          00800000
         IHASDWA &DSECT=YES,&VRAMAP=YES                        @G81EP11 00810000
.*A000000                                                        Y02704 00850000
*                                                                    */ 00900000
*%SDWABSL1 : ;                                                          01312000
*/** START OF SPECIFICATIONS *****************************************/ 01312300
*/*                                                                  */ 01312600
*/* PROPRIETARY STATEMENT:                                           */ 01312900
*/* 5647-A01                                                         */ 01313200
*/* THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                     */ 01313500
*/* (C) COPYRIGHT IBM CORP. 1980,2000                                */ 01313800
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01314100
*/*                                                                  */ 01314400
*/* STATUS = HBB7703                                                 */ 01314700
*/*                                                                  */ 01315000
*/*01* EXTERNAL CLASSIFICATION:                                      */ 01315100
*/*02* NOTPI: BASE                                                   */ 01315200
*/*02* PI: FIELDS                                                    */ 01315300
*/*  SDWAABCC SDWACOMP SDWAFMID SDWAOCRC SDWASC   SDWAXFLG           */ 01315400
*/*  SDWAABTM SDWACOMU SDWAFPRX SDWAPARM SDWASDRC SDWAXPAD           */ 01315500
*/*  SDWAAEC1 SDWACRC  SDWAGRSV SDWAPCHK SDWASRSV SDWALSLV           */ 01315600
*/*  SDWAAEC2 SDWACRGS SDWAIDNT SDWAPGIO SDWASRVP SDWAG64        @LIC*/ 01315700
*/*  SDWAARER SDWACTS  SDWAIOFS SDWAPSWU SDWASTAE                    */ 01315800
*/*  SDWAARGU SDWAEC1  SDWAMABD SDWARA   SDWASVCD                    */ 01315900
*/*  SDWAARSV SDWAEC2  SDWAMCHK SDWAREGU SDWASVCE                    */ 01316000
*/*  SDWAASCB SDWAEPA  SDWAMCIV SDWARKEY SDWATEAR                    */ 01316100
*/*  SDWACID  SDWAERRB SDWAMLVL SDWARPIV SDWATEXC                    */ 01316200
*/*  SDWACIDB SDWAERRC SDWANAME SDWARRL  SDWATYPE                    */ 01316300
*/*  SDWACLUP SDWAFIOB SDWANRBE SDWASABC SDWAVRIV                    */ 01316400
*/*                                                                  */ 01316500
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 01316600
*/*                                                                  */ 01316700
*/* MACRO NAME:  IHASDWA                                             */ 01316800
*/*                                                                  */ 01316900
*/* DESCRIPTIVE NAME:  SYSTEM DIAGNOSTIC WORK AREA                   */ 01317000
*/*                                                                  */ 01317100
*/* DSECT NAME: SDWA, SDWARC1, SDWARC2, SDWARC3, SDWARC4,            */ 01317300
*/*             SDWAPTS, SDWANRC1, SDWANRC2, SDWANRC3            @LIC*/ 01317500
*/*                                                                  */ 01317700
*/* COMPONENT: RECOVERY TERMINATION MANAGER (SCRTM)              @PCC*/ 01318000
*/*                                                                  */ 01318300
*/* EYE CATCHER: SDWA                                                */ 01318600
*/* OFFSET: X'293'                                                   */ 01318900
*/* LENGTH: 5                                                        */ 01319200
*/*                                                                  */ 01319500
*/* STORAGE ATTRIBUTES:                                              */ 01319800
*/*  SUBPOOL:  0 OR 230 OR 239                                       */ 01320100
*/*  KEY:  TCB KEY FOR SUBPOOL 0, OTHERWISE KEY 0                    */ 01320400
*/*  RESIDENCY:  Above or below the 16M line, depending on the       */ 01320600
*/*              recovery routine that the SDWA is provided for      */ 01320800
*/*                                                                  */ 01321000
*/* SIZE:                                                            */ 01321300
*/*     Variable, depending on which which extensions are            */ 01321900
*/*     provided with the SDWA.                                  @LIC*/ 01322500
*/*                                                                  */ 01323100
*/* CREATED BY:                                                      */ 01323400
*/*     GLOBAL SDWAS ARE PREALLOCATED, GETMAINED SDWAS ARE           */ 01323700
*/*     OBTAINED BY IEAVTR1S, TASK MODE SDWAS ARE OBTAINED           */ 01324000
*/*     BY IEAVTRT2 AND IEAVTAS1                                     */ 01324300
*/*                                                                  */ 01324600
*/* POINTED TO BY:                                                   */ 01324900
*/*     REGISTER 1 UPON ENTRY TO AN FRR, REGISTER 1 UPON ENTRY TO    */ 01325000
*/*     AN ESTAE-TYPE RECOVERY ROUTINE IF REGISTER 0 DOES NOT        */ 01325100
*/*     CONTAIN 12 (X'0C').                                          */ 01325200
*/*     ADJACENT TO EACH SUPER FRR STACK (GLOBAL SDWA)               */ 01325300
*/*     RT1WRTCA FIELD OF THE RT1W DATA AREA                         */ 01325500
*/*     RTM2RTCA AND RTM2SDW2 FIELD OF THE RTM2WA DATA AREA          */ 01325800
*/*     FOR TASK MODE SDWAS                                          */ 01326100
*/*                                                                  */ 01326400
*/* SERIALIZATION:                                                   */ 01326700
*/*     GLOBAL SDWA - PHYSICALLY DISABLED OR GLOBALLY LOCKED         */ 01327000
*/*     GETMAINED SDWA - SRB MODE, LOCALLY LOCKED, OR NONE           */ 01327300
*/*                                                                  */ 01327600
*/* FUNCTION:                                                        */ 01327900
*/*     THE SDWA PROVIDES FOR COMMUNICATION BETWEEN THE RTM AND      */ 01328200
*/*     FRRS OR ESTAE-TYPE RECOVERY ROUTINES.  IT CONTAINS DATA      */ 01328500
*/*     ABOUT THE ORIGINAL ERROR AND ALSO CONCERNING ACTIONS         */ 01328800
*/*     OF PREVIOUSLY ENTERED RECOVERY ROUTINES.  THE SDWA IS        */ 01329100
*/*     ALSO KNOWN AS THE RTCA.                                      */ 01329400
*/*                                                                  */ 01329700
*/*     THE SDWA IS USED FOR RECORDING ERRORS IN LOGREC              */ 01330000
*/*     AS SOFTWARE RECORDS.                                         */ 01330300
*/*                                                                  */ 01330600
*/* METHOD OF ACCESS:                                                */ 01330700
*/* ASM:                                                             */ 01330800
*/*             IHASDWA DSECT=YES,VRAMAP=YES                 @G81EP11*/ 01330900
*/*                           NO         NO                  @G81EP11*/ 01331000
*/* DSECT = YES IS THE DEFAULT AND WILL PRODUCE THE SDWA             */ 01331100
*/*            AS A DSECT.                                           */ 01331200
*/* DSECT = NO WILL PRODUCE THE SDWA AS A CONTINUATION OF            */ 01331300
*/*            DEFINED STORAGE. (NO DSECT CARD PRODUCED)             */ 01331400
*/* VRAMAP=YES IS THE DEFAULT AND WILL PRODUCE THE IHAVRA    @G81EP11*/ 01331500
*/*            MAPPING MACRO FIELDS FOLLOWING THE SDWA       @G81EP11*/ 01331600
*/*            FIELDS.                                       @G81EP11*/ 01331700
*/* VRAMAP=NO  WILL PRODUCE THE SDWA, BUT NOT THE IHAVRA     @G81EP11*/ 01331800
*/*            MAPPING MACRO.                                @G81EP11*/ 01331900
*/* PL/AS:                                                           */ 01332000
*/*   IF MACRO VARIABLE                                              */ 01332100
*/*   %SDWALVL IS NULL, THE SDWA WILL BE INCLUDED                    */ 01332200
*/*   AS A LEVEL 1 STRUCTURE BASED ON SDWAPTR.                       */ 01332300
*/*                                                                  */ 01332400
*/*   IF %SDWALVL IS SPECIFIED AS A NUMBER FROM 1 TO 4               */ 01332500
*/*   THE SDWA WILL BE A NON-BASED STRUCTURE WITH THE                */ 01332600
*/*   TOP LEVEL EQUAL TO %SDWALVL.                                   */ 01332700
*/*                                                                  */ 01332800
*/*   THE DEFAULT INCLUSION OF THE IHAVRA MAPPING MACRO      @G81EP11*/ 01332900
*/*   ALONG WITH THE SDWA CAN BE SUPPRESSED BY SETTING       @G81EP11*/ 01333000
*/*   MACRO VARIABLE SDWAVRAMAP EQUAL TO 'NO'.               @G81EP11*/ 01333100
*/*                                                                  */ 01333200
*/*   VIA ATTRIBUTE - SPECIFY %IHAVIA='YES' BEFORE %INCLUDE.         */ 01333300
*/*                   DECLARE SDWAALET.                              */ 01333400
*/*                                                                  */ 01333500
*/*   Note: In order to access SDWARC4, that DSECT must be based     */ 01333600
*/*         upon SDWAXEME.  See the SDWARC4 section for details. @LIA*/ 01333700
*/*                                                                  */ 01333800
*/* DEPENDENCIES =                                                   */ 01333900
*/*                CHANGES TO THE SIZE OF THIS MACRO REQUIRE A NEW   */ 01334000
*/*                VERSION NUMBER.  WHEN THE SIZE OF THIS MACRO IS   */ 01334100
*/*                CHANGED, IT MUST BE DONE IN DOUBLE WORD           */ 01334200
*/*                INCREMENTS.  SIZE CHANGES TO THE SDWA ARE         */ 01334300
*/*                REFLECTED IN IHART1W.  MODULES THAT USE EITHER    */ 01334400
*/*                MACRO TO GET OR RELEASE SDWA STORAGE MUST BE      */ 01334500
*/*                RECOMPILED.  ALSO, IHASFPL MUST BE UPDATED TO     */ 01334600
*/*                MATCH THE NEW VERSION AND ITS ASSOCIATED MODULES  */ 01334700
*/*                MUST BE RECOMPILED.                               */ 01334800
*/*                THE HARD CODED VALUES IN WSACSTKA AND WSACSTKB    */ 01334900
*/*                IN THE IHAWSAVT MACRO MUST BE UPDATED, AND ANY    */ 01335000
*/*                MODULES THAT USE THOSE FIELDS SHOULD BE           */ 01335100
*/*                RECOMPILED.                                   @P6C*/ 01335200
*/*                                                                  */ 01335300
*/*                                                                  */ 01335400
*/* USAGE =                                                          */ 01335500
*/*     THE SDWA HAS EXTENSIONS.  THE SDWAXPAD (X'170') POINTS TO    */ 01335600
*/*     AN EXTENSION WHICH IS MADE UP OF POINTERS TO ALL THE OTHER   */ 01335700
*/*     EXTENSIONS.  THE MAIN BODY AND POINTERS EXTENSION WILL       */ 01335800
*/*     ALWAYS EXIST WHILE THE OTHER EXTENSIONS MAY NOT DEPENDING    */ 01335900
*/*     ON THE ERROR ENVIRONMENT.  PHYSICALLY, THE MAIN BODY OF THE  */ 01336000
*/*     SDWA COMES FIRST, FOLLOWED BY THE RECORDABLE EXTENSIONS,     */ 01336100
*/*     THEN THE POINTERS EXTENSION, AND LAST THE NON-RECORDABLE     */ 01336200
*/*     EXTENSIONS.                                                  */ 01336300
*/*                                                                  */ 01336400
*/*                   ***************                                */ 01336500
*/*                   *             *                                */ 01336600
*/*                   *    SDWA     *                                */ 01336700
*/*                   *             *                                */ 01336800
*/*                   ***************                                */ 01336900
*/*                   *  SDWARC1    *                                */ 01337000
*/*                   ***************                                */ 01337100
*/*                   *  SDWARC2    *                                */ 01337200
*/*                   ***************                                */ 01337300
*/*                   *  SDWARC3    *                                */ 01337400
*/*                   ***************                                */ 01337500
*/*                   *  SDWARC4    *                            @LIA*/ 01337600
*/*                   ***************                                */ 01337700
*/*                   *  SDWAPTRS   *                                */ 01337800
*/*                   *  --------   *                                */ 01337900
*/*                   *    ORDER    *                                */ 01338100
*/*                   * => SDWANRC1 *                                */ 01338400
*/*                   * => SDWARC1  *                                */ 01338700
*/*                   * => SDWARC2  *                                */ 01339000
*/*                   * => SDWANRC2 *                            @01C*/ 01339300
*/*                   * => SDWARC3  *                            @01C*/ 01339600
*/*                   * => SDWANRC3 *                            @L7A*/ 01339900
*/*                   * => SDWARC4  *                            @LIA*/ 01340000
*/*                   ***************                                */ 01340200
*/*                   *  SDWANRC1   *                                */ 01340500
*/*                   ***************                                */ 01340800
*/*                   *  SDWANRC2   *                                */ 01341100
*/*                   ***************                            @L1C*/ 01341400
*/*                   *  SDWANRC3   *                                */ 01341700
*/*                   ***************                            @L7A*/ 01342000
*/*                                                                  */ 01354000
*/*                                                                  */ 01354300
*/* CHANGE ACTIVITY:                                                 */ 01354600
*/* MACMEAN SDWA MEANS SYSTEM DIAGNOSTIC WORK AREA                   */ 01354900
*/* MACCOMP SCRTM                                                @PCC*/ 01355200
*/* UPDATED 9/23/76 SU33                                     @G33SPHW*/ 01355500
*/* UPDATED 8/14/79 OS/VS2 JBB1126  (ADD VRA MAPPING)        @G81EP11*/ 01355800
*/* UPDATED 2/1/79  MVS/SYSTEM PRODUCT RELEASE 2             @G381P2F*/ 01356100
*/* UPDATED 10/28/80 MVS/SYSTEM PRODUCT VERSION 2 RELEASE 1  @G860P1S*/ 01356400
*/* UPDATED 3/2/81   MVS/SYSTEM PRODUCT VERSION 2 RELEASE 1  @G860P38*/ 01356700
*/* UPDATED 11/17/81 MVS/SYSTEM PRODUCT VERSION 2 RELEASE 1  @G860P1F*/ 01357000
*/*$L1=RAPRAS ,JBB2110,820604,PDA8: ADDED NEW FIELDS IN SDWARC1  @L1A*/ 01357300
*/*$L2=DAE    ,JBB2110,820801,PDA8: ADDED SUPPORT FOR DAE        @L2A*/ 01357600
*/*$P1=PAB0071,JBB2110,820915,PDA8: CHANGED COMMENTS FOR DAE     @P1A*/ 01357900
*/* OZ73969 - MAKE BAL THE SAME AS PL/S.                     @ZA73969*/ 01358200
*/*$01=OZ73969,JBB2133,831027,PDA8: APAR OZ73969                 @01A*/ 01358500
*/*$H1=VF     ,JBB2214,840202,PDA8: VECTOR FEATURE SUPPORT       @H1A*/ 01358800
*/*$L3=RASENH ,JBB2220,840622,PDA8: SUPPORT FOR RETRY OPTIONS    @L3A*/ 01359100
*/*$L4=AR     ,HBB3310,850916,PDA8: ACCESS REGISTER SUPPORT      @L4A*/ 01359400
*/*$L5=AR     ,HBB3310,850916,PDPY: ACCESS REGISTER SUPPORT      @L5A*/ 01359700
*/*$D1=DCR0031,HBB3310,860423,PDT9: IOS LOCK SUPPORT             @D1A*/ 01360000
*/*$L6=DATASPAC,HBB3310,860728,PDA8: RSMDS LOCK SUPPORT          @L6A*/ 01360300
*/*$L7=DATASPAC,HBB3310,861029,PDT9: PROPAGATION OF DATA SPACE       */ 01360600
*/*                                  STORAGE RANGES FOR ABDUMP   @L7A*/ 01360900
*/*$D2=DCR0088,HBB3310,861029,PDBD: LOCATING REGS SAVED BY A     @D2A*/ 01361200
*/*                                 STACKING PC WITHIN A DUMP    @D2A*/ 01361500
*/*$P2=PC40412,HBB3310,861029,PDT9: MOVE SDWAXLST FIELD          @P2A*/ 01361800
*/*$P3=PC40460,HBB3310,861215,PDT9: NO LOCKWORD FOR IOS LOCK     @P3A*/ 01362100
*/*$P4=PC40713,HBB3310,870225,PDT9: MOVE IOS LOCK BIT            @P4A*/ 01362400
*/*$L8=LOCKR  ,HBB4410,870701,PDT9: LOCK RESTRUCTURE             @L8A*/ 01362700
*/*$L9=LOCKR  ,HBB4410,870916,PDT9: LOCK RESTRUCTURE             @L9A*/ 01363000
*/*$LA=CLOCK  ,HBB4410,870916,PDT9: NEW LOCKS FOR ETR            @LAA*/ 01363300
*/*$LB=COUPLRTM,HBB4410,870916,PDT9: NEW LOCKS FOR XCF           @LBA*/ 01363600
*/*$LC=JUP03   ,HBB4410,870916,PDT9: NEW LOCKS FOR SMSX          @LCA*/ 01363900
*/*$LD=USERV   ,HBB4410,890626,PDCI: NEW IOSULUT LOCK            @LDA*/ 01364200
*/*$LE=ANVALPUR,HBB4430,910327,PD00XB: SDWAESTX                  @LEA*/ 01364500
*/*                                                                  */ 01364800
*/*$LF=SYSLKRTM,HBB5510,900112,PD00XB: NEW IXL LOCKS UPDATE VERSION  */ 01365100
*/*$P5=PIG0446 ,HBB5510,911021,PD00CK: DOCUMENT VERSION UPDATE       */ 01365400
*/*                                  PROCEDURE.                      */ 01365700
*/*$LG=SUBSPRTM,HBB5510,930329,PDKD: NEW FIELDS FOR SUBSPACE     @LGA*/ 01366000
*/*$P6=PIG1487 ,HBB5510,930429,PDKD: UPDATE DEPENDENCIES TO INCLUDE  */ 01366600
*/*                                  CHANGING THE IHASFPL, AND MINOR */ 01367200
*/*                                  COMMENT AND PROLOG UPDATES.     */ 01367800
*/*                                  ALSO ADD USABLE LENGTH          */ 01368400
*/*                                  CONSTANTS                   @P6A*/ 01369000
*/*$P7=PIG1553 ,HBB5510,030507,PDKD: REMOVE A COMMENT * FROM THE     */ 01369600
*/*                                  RESERVED FIELD ADDED FOR SUBSP  */ 01370200
*/*                                  SUPPORT                     @P7A*/ 01370800
*/*$P8=PIG2130 ,HBB5510,930717,PDCJ: ADDED BIT SDWARFXM              */ 01371100
*/*$LH=PARADRTM,HBB5510,930909,PDKD: ADDED BIT SDWAPDIP          @LHA*/ 01371200
*/*$02=OY66732 ,HBB3310,930908,PDEI: CORRECTED THE DOCUMENTATION     */ 01371300
*/*                                  FOR SDWAEC2 AND SDWAINTF    @02A*/ 01371400
*/*$P9=PN70279 ,HBB5520,940307,PDKD: CDPI UPDATES                @P9A*/ 01371500
*/*$03=OW02796 ,HBB5510,931207,PDKD: TRSQ FOR IXLREQST LOCK      @03A*/ 01371600
*/*$LI=RTMLS   ,HBB5520,940315,PDXB: SDWALSLV                        */ 01372300
*/*$PA=PN70828  HBB5520 940606 PDKD: CORRECT CONTINUATION COLUMNS    */ 01373000
*/*                                  FOR SDWALSLV                @PAA*/ 01374300
*/*$04=OW04284  HBB4410 940331 PDKD: ADDED MCHO                  @04A*/ 01374900
*/*$PB=PN71617  HBB5520 941007 PDKD: CLARIFY REASON CODE FIELDS  @PBA*/ 01375200
*/*$05=OW13819  HBB5520 950614 PDKD: System Name support         @05A*/ 01375400
*/*$PC=PR20011  HBB6601 950908 PDKD: SC1CM compid split          @PCA*/ 01375500
*/*$LJ=WLMPSAM ,HBB6603,950929,PDKD: WLM locks and RRS locks     @LJA*/ 01375900
*/*$PD=PQC0553  HBB6603 951030 PDKD: Remove SETRP support for recent */ 01376000
*/*                                  class locks                 @PDA*/ 01376200
*/*$PE=PQC0626  HBB6603 951204 PDKD: Update HBB6603 lock order   @PEA*/ 01376400
*/*$PF=PQC0643  HBB6603 951207 PDKD: Reinstate SETRP support for     */ 01376500
*/*                                  class locks - lockword is NOT   */ 01376600
*/*                                  required for SETRP usage    @PFA*/ 01376700
*/*$LK=IEEERTM  HBB6606 970807 PDXB: FP simulation                   */ 01377000
*/*$LI=64BITRTM HBB7703 971031 PDKD: 64-bit register support         */ 01377100
*/*$PG=PXD0681  HBB7703 991110 PDKD: move SDWAKEAX                   */ 01377200
*/*$PH=PXD1313  HBB7703 000211 PDKD: add SDWAARCH                    */ 01377300
*/*                                                                  */ 01377400
*/* CAUTION: when the size of SDWA sections changes, be sure to      */ 01377500
*/* regenerate IHART1WF and recompile IEAVWSAT                       */ 01377600
*/*                                                                  */ 01377700
*/*** END OF SPECIFICATIONS ******************************************/ 01377800
*%       GOTO SDWABSL;  /*                                              01378200
         AIF ('&DSECT' EQ 'YES').SDWA001                                01379800
SDWA     DS   0D -                                                      01387600
         AGO  .SDWA002                                                  01395400
.SDWA001 ANOP                                                           01403200
SDWA     DSECT ,       SDWAPTR                                          01411000
.SDWA002 SPACE 2                                                        01418800
SDWAPARM DS    A -     PARAMETER LIST ADDRESS IF (E)STAE MACRO          01426600
*                      SPECIFIED PARAM OPTION OR 0. FOR FRRS THIS       01434400
*                      IS THE ADDRESS OF THE 6 WORD PARM AREA           01436400
*                      RETURNED BY THE SETFRR MACRO WHEN THE            01438400
*                      PARMAD KEYWORD IS SPECIFIED ON THE SETFRR        01440400
*                      FOR AN ARR, THIS IS THE ADDRESS OF THE 8-BYTES   01440700
*                       OF THE MSTA AREA.                               01441000
*                      FOR ESTAEX, THIS IS THE ADDRESS OF 8-BYTES       01441300
*                      CONTAINING THE ADDRESS AND ALET OF THE           01441600
*                      PARAMETER LIST.                                  01441900
SDWAFIOB DS    0A -    ADDRESS OF PURGE I/O REQUEST LIST (PIRL)         01442200
*                      OR 0 IF HALT I/O IS REQUESTED ON ENTRY TO        01450000
*                      RETRY ROUTINE FOR (E)STAE.                       01460000
SDWAABCC DS    0BL4 -  ABEND COMPLETION CODE ON ENTRY TO EXIT ROUTINE.  01500000
SDWACMPF DS    B -     FLAG BITS IN COMPLETION CODE.                    01550000
SDWAREQ  EQU   X'80' - ON, SYSABEND/SYSMDUMP/SYSUDUMP DUMP TO BE        01560000
*                      GIVEN.  SET IF DUMP=YES REQUESTED ON ABEND,      01610000
*                      CALLRTM OR SETRP MACRO.                          01660000
SDWASTEP EQU   X'40' - ON, JOBSTEP TO BE TERMINATED.                    07200000
*                      SET IF STEP OPTION SPECIFIED                     07250000
*                      ON ABEND MACRO.                                  07300000
SDWASTCC EQU   X'10' - ON, DON'T STORE COMPLETION CODE.                 07600000
*                      NOT USED IN OS/VS2 R2.                           08000000
SDWARCF  EQU   X'04' - ON, REASON CODE IN SDWACRC IS VALID         @PBC 08050000
SDWACMPC DS    BL3 -   SYSTEM COMPLETION CODE (FIRST 12 BITS) AND       08400000
*                      USER COMPLETION CODE (SECOND 12 BITS).           08800000
SDWACTL1 DS    0CL8 -  BC MODE PSW AT TIME OF ERROR                     09200000
*                      NOT INITIALIZED FOR FRRS.                        09250000
SDWACMKA DS    B -     CHANNEL INTERRUPT MASKS.                         09600000
SDWAIOA  EQU   X'FE' - I/O INTERRUPTS (ALL ZEROS OR ALL ONES).          10000000
SDWAEXTA EQU   X'01' - EXTERNAL INTERRUPT.                              10400000
SDWAMWPA DS    B -     PSW KEY AND 'M-W-P'.                             10800000
SDWAKEYA EQU   X'F0' - PSW KEY.                                         11200000
SDWAMCKA EQU   X'04' - MACHINE CHECK INTERRUPT.                         11600000
SDWAWATA EQU   X'02' - WAIT STATE.                                      12000000
SDWASPVA EQU   X'01' - SUPERVISOR/PROBLEM-PROGRAM MODE.                 12400000
SDWAINTA DS    CL2 -   INTERRUPT CODE (LAST 2 BYTES OF INTERRUPT        12800000
*                      CODE IF I/O INTERRUPT).                          13200000
SDWAPMKA DS    B -     INSTRUCTION LENGTH CODE, CONDITION CODE,         13600000
*                      AND PROGRAM MASKS.                               14000000
SDWAILA  EQU   X'C0' - INSTRUCTION LENGTH CODE.                         14400000
SDWACCA  EQU   X'30' - LAST CONDITION CODE.                             14800000
SDWAFPA  EQU   X'08' - FIXED-POINT OVERFLOW.                            15200000
SDWADOA  EQU   X'04' - DECIMAL OVERFLOW.                                15600000
SDWAEUA  EQU   X'02' - EXPONENT UNDERFLOW.                              16000000
SDWASGA  EQU   X'01' - SIGNIFICANCE.                                    16400000
SDWANXTA DS    AL3 -   ADDRESS OF NEXT INSTRUCTION TO BE EXECUTED.      16800000
*                                                                       17200000
SDWACTL2 DS    0CL8 -  BC MODE PSW FROM LAST PRB ON RB CHAIN.           17600000
*                      ZERO FOR FRRS.                                   17650000
SDWACMKP DS    B -     CHANNEL INTERRUPT MASKS.                         18000000
SDWAIOP  EQU   X'FE' - I/O INTERRUPTS (ALL ZEROS OR ALL ONES).          18400000
SDWAEXTP EQU   X'01' - EXTERNAL INTERRUPT.                              18800000
SDWAMWPP DS    B -     PSW KEY AND 'M-W-P'.                             19200000
SDWAKEYP EQU   X'F0' - PSW KEY.                                         19600000
SDWAMCKP EQU   X'04' - MACHINE CHECK INTERRUPT.                         20000000
SDWAWATP EQU   X'02' - WAIT STATE.                                      20400000
SDWASPVP EQU   X'01' - SUPERVISOR/PROBLEM-PROGRAM MODE.                 20800000
SDWAINTP DS    CL2 -   INTERRUPT CODE (LAST 2 BYTES OF INTERRUPT        21200000
*                      CODE IF I/O INTERRUPT).                          21600000
SDWAPMKP DS    B -     INSTRUCTION LENGTH CODE, CONDITION CODE,         22000000
*                      AND PROGRAM MASKS.                               22400000
SDWAILP  EQU   X'C0' - INSTRUCTION LENGTH CODE.                         22800000
SDWACCP  EQU   X'30' - LAST CONDITION CODE.                             23200000
SDWAFPP  EQU   X'08' - FIXED-POINT OVERFLOW.                            23600000
SDWADOP  EQU   X'04' - DECIMAL OVERFLOW.                                24000000
SDWAEUP  EQU   X'02' - EXPONENT UNDERFLOW.                              24400000
SDWASGP  EQU   X'01' - SIGNIFICANCE.                                    24800000
SDWANXTP DS    AL3 -   ADDRESS OF NEXT INSTRUCTION TO BE EXECUTED.      25200000
*                                                                       25600000
SDWAGRSV DS    0CL64 - GENERAL PURPOSE REGISTERS AT TIME OF ERROR       26000000
SDWAGR00 DS    F -     GPR 0.                                           26400000
SDWAGR01 DS    F -     GPR 1.                                           26800000
SDWAGR02 DS    F -     GPR 2.                                           27200000
SDWAGR03 DS    F -     GPR 3.                                           27600000
SDWAGR04 DS    F -     GPR 4.                                           28000000
SDWAGR05 DS    F -     GPR 5.                                           28400000
SDWAGR06 DS    F -     GPR 6.                                           28800000
SDWAGR07 DS    F -     GPR 7.                                           29200000
SDWAGR08 DS    F -     GPR 8.                                           29600000
SDWAGR09 DS    F -     GPR 9.                                           30000000
SDWAGR10 DS    F -     GPR 10.                                          30400000
SDWAGR11 DS    F -     GPR 11.                                          30800000
SDWAGR12 DS    F -     GPR 12.                                          31200000
SDWAGR13 DS    F -     GPR 13.                                          31600000
SDWAGR14 DS    F -     GPR 14.                                          32000000
SDWAGR15 DS    F -     GPR 15.                                          32400000
*                                                                       32800000
SDWANAME DS    0CL8 -  IF PROBLEM PROGRAM MODE NAME                     33200000
*                      OF ABENDING PROGRAM, OR ZERO                     33600000
*                      IF NO NAME IS AVAILABLE.                         33650000
*                      ZERO IF NOT RUNNING UNDER AN RB                  33700000
SDWARBAD DS    A -     RB ADDRESS OF ABENDING PROGRAM (IF SUPERVISOR    34000000
*                      MODE PROGRAM RUNNING UNDER AN RB)                34400000
         DS    XL4 -   CONTAINS ZEROS IF SUPERVISOR MODE PROGRAM        34800000
*                      RUNNING UNDER AN RB OR IF PROGRAM NOT            34850000
*                      RUNNING UNDER AN RB                              34900000
SDWAEPA  DS    A -     ENTRY POINT ADDRESS OF ABENDING PROGRAM.         35600000
*                      ZERO IF NOT RUNNING UNDER AN RB                  35650000
SDWAIOBR DS    A -     POINTER TO SDWAFIOB FIELD,                       36000000
*                      OR 0 IF NO RETRY, OR 0 IF HALT I/O               36400000
*                      IS REQUESTED FOR (E)STA EXITS.                   36402000
*                      ZERO FOR FRRS                           ICB377   36404000
SDWAEC1  DS    0CL8    EXTENDED CONTROL PSW AT TIME OF ERROR(ABEND)     36410000
SDWAEMK1 DS    B       INTERRUPT INFORMATION MASKS                      36420000
SDWAPER1 EQU   X'40'   ON,PROGRAM EVENT RECORDING                       36430000
*                      INTERRUPTS CAN OCCUR                             36432000
*                      OFF, PROGRAM EVENT RECORDING                     36434000
*                      INTERRUPTS CANNOT OCCUR                          36436000
SDWATRM1 EQU   X'04'   ON,ADDRESS TRANSLATION ACTIVE                    36442000
SDWAIO1  EQU   X'02'   OFF,I/0 INTERRUPTION CAN NOT OCCUR               36444000
*                      ON,I/0 INTERRUPTIONS CAN OCCUR SUBJECT TO        36446000
*                      TO CHANNEL MASK BITS IN CONTROL REGS 2 AND 3     36448000
SDWAEXT1 EQU   X'01'   OFF,EXTERNAL INTERRUPTION CANNOT OCCUR           36448400
*                      ON,EXTERNAL INTERRUPTIONS CAN OCCUR SUBJECT TO   36448800
*                      EXTERNAL SUBCLASS MASK BITS OF CONTROL REG 0     36449200
SDWAMWP1 DS    B       PSW KEY AND 'M-W-P'                              36449600
SDWAKEY1 EQU   X'F0'   PSW KEY                                          36449700
SDWAECT1 EQU   X'08'   EXTENDED CONTROL MODE BIT                        36449800
SDWAMCK1 EQU   X'04'   OFF,MACHINE CHECK CANNOT OCCUR                   36449900
*                      ON,MACHINE CHECK DUE TO SYSTEM DAMAGE AND        36466600
*                      INSTRUCTION-PROCESSING DAMAGE CAN OCCUR          36476600
*                      OTHER MACHINE CHECKS SUBJECT TO MASK BITS        36478600
*                      IN CONTROL REGISTER 14                           36480600
SDWAWAT1 EQU   X'02'   ON,CPU IN WAIT STATE                             36482600
SDWAPGM1 EQU   X'01'   ON,PROBLEM STATE                                 36483000
*                      OFF, SUPERVISOR STATE                            36483100
SDWAINT1 DS    B       CONDITION CODE AND PROGRAM MASK                  36483200
SDWAASCM EQU   X'C0'   ADDRESS SPACE CONTROL MODE BITS                  36483600
*                      00 - PRIMARY MODE                                36484000
*                      01 - ACCESS REGISTER MODE                        36484400
*                      10 - SECONDARY MODE                              36484800
*                      11 - HOME SPACE MODE                        @L4A 36485200
SDWAS1   EQU   X'80'   ADDRESS SPACE SELECTION BIT             @G381P2F 36485900
SDWACC1  EQU   X'30'   CONDITION CODE                                   36488800
SDWAFPO1 EQU   X'08'   FIXED POINT OVERFLOW                             36490800
SDWADEC1 EQU   X'04'   DECIMAL OVERFLOW                                 36492800
SDWAEXP1 EQU   X'02'   EXPONENT UNDERFLOW                               36493200
SDWASGN1 EQU   X'01'   SIGNIFICANCE                                     36493600
         DS    B       RESERVED                                         36494000
SDWANXT1 DS    0F      ADDRESS OF NEXT INSTRUCTION TO BE EXECUTED.      36494100
SDWAAMF1 DS    B       ADDRESSING MODE FLAG                    @G860P1S 36495000
SDWAMOD1 EQU   X'80'   ADDRESSING MODE OF THE NEXT INSTRUCTION @G860P1S 36495900
*                      TO BE EXECUTED.                         @G860P1S 36496800
SDWAADD1 DS    CL3     INSTRUCTION ADDRESS                              36497900
SDWAAEC1 DS    0CL8    ADDITIONAL EC MODE INFORMATION                   36502900
         DS    CL1     RESERVED                                         36503300
SDWAILC1 DS    B       INSTRUCTION LENGTH CODE FOR PSW DEFINED          36503900
*                      BY SDWAEC1                                       36505900
SDWAIL1  EQU   X'06'   ILC                                              36508200
SDWAINC1 DS    0CL2    INTERRUPT CODE. IF PROGRAM CHECK OCCURRED        36510200
*                      THE SUBFIELDS ARE FURTHER DIVIDED                36510600
         DS    CL1     RESERVED FOR IMPRECISE INTERRUPTS                36512200
*                      ON PROGRAM CHECK INTERRUPT                       36512600
SDWAICD1 DS    B       8 BIT INTERRUPT CODE                             36514200
*                      IF PROGRAM CHECK                                 36514600
SDWAIPR1 EQU   X'80'   PER INTERRUPT OCCURRED                           36516200
SDWAIMC1 EQU   X'40'   MONITOR CALL INTERRUPT OCCURRED                  36516600
SDWAIPC1 EQU   X'3F'   AN UNSOLICITED PROGRAM CHECK                     36517000
*                      HAS OCCURRED                                     36517400
SDWATRAN DS    A       VIRTUAL ADDRESS CAUSING TRANSLATION              36517800
*                      EXCEPTION                                        36517900
         ORG   SDWATRAN+3                                          @LKA 36518000
SDWADXC  DS    X       Data exception code when program interrupt       36518100
*                      code 7                                      @LKA 36518200
SDWAEC2  DS    0CL8    EXTENDED CONTROL PSW FROM THE RB LEVEL OR        36518300
*                      LINKAGE STACK LEVEL WHICH CREATED THE            36518500
*                      ESTAE EXIT AT THE TIME IT LAST                   36519000
*                      INCURRED AN INTERRUPT OR 0 FOR ESTAI.       @02C 36519400
*                      OR PSW USED TO GIVE FRR CONTROL                  36519800
SDWAEMK2 DS    B       INTERRUPT INFORMATION MASKS                      36520200
SDWAPER2 EQU   X'40'   ON,PROGRAM EVENT RECORDING                       36520600
*                      INTERRUPTS CAN OCCUR                             36520700
*                      OFF,PROGRAM EVENT RECORDING                      36520800
*                      INTERRUPTS CANNOT OCCUR                          36520900
SDWATRM2 EQU   X'04'   ON,ADDRESS TRANSLATION ACTIVE                    36521400
SDWAIO2  EQU   X'02'   OFF,I/0 INTERRUPTION CANNOT OCCUR                36521800
*                      ON,I/0 INTERRUPTIONS CAN OCCUR SUBJECT TO        36521900
*                      TO CHANNEL MASK BITS IN CONTROL REGS 2 AND 3     36523700
SDWAEXT2 EQU   X'01'   OFF,EXTERNAL INTERRUPTION CANNOT OCCUR           36525500
*                      ON,EXTERNAL INTERRUPTIONS CAN OCCUR SUBJECT TO   36527300
*                      EXTERNAL SUBCLASS MASK BITS OF CONTROL REG 0     36529100
SDWAMWP2 DS    B       PSW KEY AND 'M-W-P'                              36530900
SDWAKEY2 EQU   X'F0'   PSW KEY                                          36532700
SDWAECT2 EQU   X'08'   EXTENDED CONTROL MODE BIT                        36534500
SDWAMCK2 EQU   X'04'   OFF,MACHINE CHECK CANNOT OCCUR                   36536300
*                      ON,MACHINE CHECK DUE TO SYSTEM DAMAGE AND        36538100
*                      INSTRUCTION-PROCESSING DAMAGE CAN OCCUR          36539900
*                      OTHER MACHINE CHECKS SUBJECT TO MASK BITS        36541700
*                      IN CONTROL REGISTER 14                           36543500
SDWAWAT2 EQU   X'02'   ON,CPU IN WAIT STATE                             36545300
SDWAPGM2 EQU   X'01'   ON,PROBLEM STATE                                 36547100
*                      OFF, SUPERVISOR STATE                            36548900
SDWAINT2 DS    B       CONDITION CODE AND PROGRAM MASK                  36550700
SDWAS2   EQU   X'80'   ADDRESS SPACE SELECTION BIT             @G381P2F 36551500
SDWACC2  EQU   X'30'   CONDITION CODE                                   36552500
SDWAFPO2 EQU   X'08'   FIXED POINT OVERFLOW                             36562500
SDWADEC2 EQU   X'04'   DECIMAL OVERFLOW                                 36564500
SDWAEXP2 EQU   X'02'   EXPONENT UNDERFLOW                               36568400
SDWASGN2 EQU   X'01'   SIGNIFICANCE                                     36570400
         DS    B       RESERVED                                         36572400
SDWANXT2 DS    0F      ADDRESS OF NEXT INSTRUCTION TO BE                36576300
*                      EXECUTED                                         36578300
SDWAAMF2 DS    B       ADDRESSING MODE FLAG                    @G860P1S 36578400
SDWAMOD2 EQU   X'80'   ADDRESSING MODE OF THE NEXT INSTRUCTION @G860P1S 36578500
*                      TO BE EXECUTED.                         @G860P1S 36578600
SDWAADD2 DS    CL3     INSTRUCTION ADDRESS                              36578700
SDWAAEC2 DS    0CL8    ADDITIONAL EC MODE INFORMATION                   36579100
         DS    CL1     RESERVED                                         36579500
SDWAILC2 DS    B       INSTRUCTION LENGTH CODE FOR PSW DEFINED          36580300
*                      BY SDWAEC2                                       36582300
SDWAIL2  EQU   X'06'   ILC                                              36584200
SDWAINC2 DS    0CL2    INTERRUPT CODE. IF PROGRAM CHECK OCCURRED        36586200
*                      THE SUBFIELDS ARE FURTHER DIVIDED                36586600
         DS    CL1     RESERVED FOR IMPRECISE INTERRUPTS                36588200
*                      ON PROGRAM CHECK INTERRUPT                       36590200
SDWAICD2 DS    B       8 BIT INTERRUPT CODE                             36595900
*                      IF PROGRAM CHECK                                 36596300
SDWAIPR2 EQU   X'80'   PER INTERRUPT OCCURRED                           36597900
SDWAIMC2 EQU   X'40'   MONITOR CALL INTERRRUPT OCCURRED                 36599900
SDWAIPC2 EQU   X'3F'   AN UNSOLICITED PROGRAM CHECK                     36601900
*                      HAS OCCURRED                                     36602300
SDWATRN2 DS    A       VIRTUAL ADDRESS CAUSING TRANSLATION              36602700
*                      EXCEPTION                                        36603100
SDWASRSV DS    0CL64   GENERAL PURPOSE REGISTERS OF THE RB LEVEL OR     36605900
*                      LINKAGE STACK LEVEL                              36608700
*                      WHICH CREATED THE ESTAE EXIT AT THE TIME         36611500
*                      IT LAST INCURRED AN INTERRUPT OR 0 FOR ESTAI     36619200
*                      FOR FRRS INITIALIZED TO REGISTERS                36621200
*                      AT TIME OF ERROR.                                36623200
*                      THIS REGISTER AREA IS USED TO                    36626900
*                      UPDATE REGISTER CONTENTS FOR RETRY IF REQUESTED  36628900
SDWASR00 DS    F       GPR 0.                                           36634600
SDWASR01 DS    F       GPR 1.                                           36642300
SDWASR02 DS    F       GPR 2.                                           36650000
SDWASR03 DS    F       GPR 3.                                           36700000
SDWASR04 DS    F       GPR 4.                                           36750000
SDWASR05 DS    F       GPR 5.                                           36760000
SDWASR06 DS    F       GPR 6.                                           36770000
SDWASR07 DS    F       GPR 7.                                           36780000
SDWASR08 DS    F       GPR 8.                                           36790000
SDWASR09 DS    F       GPR 9.                                           36792000
SDWASR10 DS    F       GPR 10.                                          36794000
SDWASR11 DS    F       GPR 11.                                          36796000
SDWASR12 DS    F       GPR 12.                                          36798000
SDWASR13 DS    F       GPR 13.                                          36798400
SDWASR14 DS    F       GPR 14.                                          36798800
SDWASR15 DS    F       GPR 15.                                          36799200
*                                                                       36799300
SDWAIDNT DS    0CL4    SDWA IDENTIFICATION ATTRIBUTES                   36799400
SDWASPID DS    CL1     SUBPOOL ID OF STORAGE CONTAINING THIS SDWA       36799500
SDWALNTH DS    CL3     LENGTH OF THIS SDWA IN BYTES                     36799600
SDWAMCH  DS    0CL28   CONTAINS MACHINE CHECK DATA                      36799700
*                      IF SDWAMCHK IS ON                                36803800
SDWASTCK DS    0CL8    BEGINNING AND ENDING STORAGE CHECK ADDRESSES.    36808100
*                      FILLED IN DUE TO STORAGE ERROR (SDWASCK)         36812200
*                      OR A KEY FAILURE (SDWASKYF).                     36814200
*                      THESE ADDRESSES ARE VALID ONLY IF                36822200
*                      INDICATED BY THE SDWASRVL FLAG.                  36824200
SDWASCKB DS    A       BEGINNING VIRTUAL ADDRESS OF STORAGE CHECK       36824900
SDWASCKE DS    A       ENDING VIRTUAL ADDRESS OF STORAGE CHECK          36837400
*                                                                       36849900
SDWAMCHI DS    0BL2    ADDITIONAL MCH INFORMATION FLAGS                 36859900
SDWAMCHS DS    B       MCH FLAG BYTE                                    36869900
SDWASRVL EQU   X'80'   ON,STORAGE ADDRESSES SUPPLIED                    36871900
*                      (SDWASTCK, SDWARFSA) ARE VALID.                  36872300
*                      On ESAME system, SDWARFSA contains               36872700
*                      only the low word of the FSA.                    36873100
*                      SDWARFSE contains the 8-byte FSA.                36873500
SDWARCDF EQU   X'40'   ON,MACHINE CHECK RECORD NOT RECORDED             36873900
SDWATSVL EQU   X'20'   ON,TIME STAMP IS VALID                           36875900
SDWAINVP EQU   X'10'   ON,STORAGE IS RECONFIGURED, PAGE IS INVALIDATED  36877900
SDWARSRC EQU   X'08'   ON,STORAGE RECONFIGURATION (SDWARSR1,SDWARSR2)   36878300
*                      STATUS AVAILABLE.                                36878400
SDWARSRF EQU   X'04'   ON,STORAGE RECONFIGURATION NOT ATTEMPTED.        36878700
*                      (SDWARSR1 AND SDWARSR2 ARE INVALID)              36879100
SDWAVRIV EQU   X'02'   ON, INDICATES VECTOR REGISTERS ARE UNPREDICTABLE 36879300
*                                                                  @H1A 36879500
SDWAARGU EQU   X'01'   ON, INDICATES ACCESS REGISTERS ARE UNPREDICTABLE 36879600
*                                                                  @L5A 36879700
SDWAMCHD DS    B       INPUT INFORMATION TO RECOVERY ROUTINE CONCERNING 36879900
*                      A MACHINE CHECK ERROR                            36881900
SDWASKYF EQU   X'80'   ON,STORAGE KEY FAILURE                           36883900
SDWAREGU EQU   X'40'   ON,GENERAL PURPOSE REGISTER CONTENTS AT TIME OF  36885900
*                      MACHINE CHECK UNPREDICTABLE                      36887900
SDWAPSWU EQU   X'20'   ON,PSW AND/OR CONTROL REGISTERS AT TIME OF       36888300
*                      MACHINE CHECK UNPREDICTABLE                      36888400
SDWASCK  EQU   X'10'   ON,INDICATES STORAGE DATA CHECK                  36888700
SDWAACR  EQU   X'08'   ON,INDICATES ACR REQUEST                         36889100
SDWAINSF EQU   X'04'   ON,INSTRUCTION FAILURE                           36889500
SDWAFPRX EQU   X'02'   ON,CONTENTS OF FLOATING POINT REGISTERS AT TIME  36889900
*                      MACHINE CHECK ARE UNPREDICTABLE                  36890000
SDWATERR EQU   X'01'   ON,TIMER ERROR - CAUSES ENTRY TO                 36890100
*                      RECOVERY ROUTINES ONLY IF LOGOUT                 36890200
*                      FAILED.                                          36890500
SDWACPID DS    CL2     ID OF OF FAILING CPU CAUSING ACR                 36894100
*                                                                       36894400
SDWARSR1 DS    B       ADDITIONAL STORAGE FRAME ERROR INDICATORS        36894700
*                      AS RETURNED FROM REAL STORAGE RECONFIGURATION.   36895000
SDWAPREF EQU   X'20'   PREFERRED FRAME                         @G860P1F 36895100
SDWAVRCN EQU   X'10'   V = R CANDIDATE - CAN GO OFFLINE        @G860P1F 36895200
SDWANSWP EQU   X'08'   LONG-TERM NON-SWAPPABLE ADDRESS SPACE   @G860P1F 36895300
SDWANSWA EQU   X'04'   NON-SWAPPABLE ADDRESS SPACE             @G860P1F 36895400
SDWAMSER EQU   X'02'   STORAGE ERROR ALREADY SET IN FRAME.              36895500
SDWACHNG EQU   X'01'   CHANGE INDICATOR WAS ON IN FRAME.                36895600
SDWARSR2 DS    B       ADDITIONAL STORAGE ERROR INDICATORS.             36895900
SDWAOFLN EQU   X'80'   FRAME OFFLINE OR SCHEDULED TO GO OFFLINE         36896200
*                      IF SDWAINTC IS ON                                36896500
SDWAINTC EQU   X'40'   INTERCEPT                                        36896800
*                      THE FRAME IS SCHEDULED TO GO OFFLINE,            36897100
*                                   OR                                  36897400
*                      THE FRAME HAS INCURRED A STORAGE ERROR,          36897700
*                      OR IS V=R INTERCEPTED                   @G860P1F 36898000
SDWASPER EQU   X'20'   STORAGE ERROR PERMANENT ON FRAME.                36898300
SDWANUCL EQU   X'10'   FRAME CONTAINS PERMANENT RESIDENT STORAGE,       36898600
*                      I.E. NUCLEUS.                                    36898900
SDWAFSQA EQU   X'08'   FRAME IN SQA                                     36899200
SDWAFLSQ EQU   X'04'   FRAME IN LSQA                                    36899500
SDWAPGFX EQU   X'02'   FRAME IS PAGE FIXED                              36899800
SDWAVEQR EQU   X'01'   FRAME IS VIRTUAL = REAL                 @G860P1F 36900200
SDWAMCHO DS    B       OTHER MACHINE CHECK FLAGS                   @04A 36900400
SDWASKPR EQU   X'80'   SKIP RECORDING REQUESTED BY MACHINE CHECK   @04A 36900600
         DS    CL1     RESERVED                                    @04C 36900800
SDWARFSA DS    A       REAL STORAGE FAILING ADDRESS  ( VALID ONLY IF    36901000
*                      INDICATED BY SDWASRVL )                          36901300
SDWATIME DS    CL8     TIME STAMP OF ASSOCIATED MACHINE CHECK RECORD    36901600
SDWAFLGS DS    0BL4    INPUT FLAGS DESCRIBING REASONS AND CONDITIONS    36901900
*                      FOR ENTERING A RECOVERY EXIT ROUTINE.            36902200
SDWAERRA DS    B       ERROR TYPE CAUSING ENTRY TO RECOVERY EXIT        36902500
SDWAMCHK EQU   X'80'   ON INDICATES MACHINE CHECK                       36902800
SDWAPCHK EQU   X'40'   ON INDICATES PROGRAM CHECK                       36903100
SDWARKEY EQU   X'20'   ON INDICATES CONSOLE RESTART KEY WAS DEPRESSED   36903400
SDWASVCD EQU   X'10'   ON INDICATES TASK ISSUED SVC 13                  36903700
SDWAABTM EQU   X'08'   ON INDICATES SYSTEM FORCED SVC 13(I.E.ABTERM)    36904000
SDWASVCE EQU   X'04'   ON,INDICATES AN SVC WAS ISSUED BY                36904100
*                      A LOCKED OR SRB ROUTINE                          36904200
SDWATEXC EQU   X'02'   ON,INDICATES AN UNRECOVERABLE TRANSLATION        36904400
*                      FAILURE                                          36904500
SDWAPGIO EQU   X'01'   ON,INDICATES A PAGE I/O ERROR                    36904600
SDWASTRM EQU   X'01'   ON,INDICATES AN RTM1 SERVICE ROUTINE    @G38AP1F 36904800
*                      (SUCH AS IEAVTSR1 PROCESSING ITERM OR   @G38AP1F 36904900
*                      IEAVTRTM PROCESSING STERM) SCHEDULED    @G38AP1F 36905000
*                      RTM1 TO CONTINUE PROCESSING AS AN SVC   @G38AP1F 36905100
*                      ERROR (BY PUTTING SVC 13 IN THE PSW TO  @G38AP1F 36905200
*                      BE DISPATCHED).                         @G38AP1F 36905300
SDWAERRB DS    B       ADDITIONAL ERROR ENTRY INFORMATION               36905400
SDWAPDIP EQU   X'80'   ON INDICATES THAT THIS TASK WAS PARALLEL         36905500
*                      DETACHED - RECOVERY ROUTINES FOR OTHER TASKS     36905600
*                      IN THIS ADDRESS SPACE MAY BE EXECUTING AT THE    36905700
*                      SAME TIME AS THIS RECOVERY ROUTINE         @LHA  36905800
SDWATYP1 EQU   X'08'   ON TYPE 1 SVC IN CONTROL AT TIME OF ERROR        36905900
SDWAENRB EQU   X'04'   ON ENABLED RB IN CONTROL AT TIME OF ERROR        36906000
SDWALDIS EQU   X'02'   ON A LOGICALLY OR PHYSICALLY DISABLED ROUTINE    36906100
*                      WAS IN CONTROL AT THE TIME OF ERROR.             36906200
SDWASRBM EQU   X'01'   ON SYSTEM IN SRB MODE AT TIME OF ERROR           36906300
SDWAERRC DS    B       ADDITIONAL ERROR ENTRY INFORMATION               36906400
SDWASTAF EQU   X'80'   ON INDICATES A PREVIOUS (E)STA  OR FRR           36906700
*                      EXIT FAILED.                                     36906800
SDWASTAI EQU   X'40'   ON A (E)STAI EXIT PREVIOUSLY RECEIVED CONTROL    36907000
SDWAIRB  EQU   X'20'   ON AN IRB PRECEDED THE RB THAT IS                36907300
*                      ASSOCIATED WITH THIS EXIT                        36907600
SDWAPERC EQU   X'10'   ON THIS RECOVERY ROUTINE IS BEING PERCOLATED TO  36908000
SDWAEAS  EQU   X'08'   ON INDICATES A LOWER LEVEL EXIT HAS RECOGNIZED   36908400
*                      AN ERROR AND PROVIDED SERVICEABILITY INFORMATION 36908800
SDWASKIP EQU   X'04'   ON INDICATES FRRS WERE SKIPPED          @G381P2F 36908900
SDWALCL  EQU   X'02'   ON IND ENTRY AS A LOCAL RESOURCE MGR    @G382P2F 36909000
SDWAGLBL EQU   X'01'   ON IND ENTRY AS A GLOBAL RESOURCE MGR   @G382P2F 36909100
SDWAERRD DS    B       ADDITIONAL ERROR ENTRY INFORMATION               36909600
SDWACLUP EQU   X'80'   ON INDICATES RECOVERY EXIT ONLY TO CLEANUP AND   36910000
*                      NOT RETRY (IF ESTA EXIT AND 33E COMPLETION CODE  36910400
*                      THE DUMP IS TAKEN AFTER ENTRY TO THE RECOVERY    36910500
*                      ROUTINE,IF THE COMPLETION CODE IS OTHER THAN     36910900
*                      33E AND IT IS AN ESTA EXIT THE DUMP IS           36911000
*                      TAKEN BEFORE ENTRY TO THE RECOVERY ROUTINE)      36911100
SDWANRBE EQU   X'40'   ON RB ASSOCIATED WITH THIS ESTA EXIT WAS NOT     36911200
*                      IN CONTROL AT TIME OF ERROR                      36911300
*                      NEVER ON FOR FRRS                                36911400
SDWASTAE EQU   X'20'   ON THIS ESTA EXIT HAS BEEN ENTERED FOR A         36911500
*                      PREVIOUS ABEND                                   36911600
*                      NEVER ON FOR FRRS                                36921600
SDWACTS  EQU   X'10'   ON,THIS TASK WAS NOT IN CONTROL AT TIME OF       36926900
*                      ERROR BUT A TASK WITHIN THE SAME JOBSTEP TREE    36936900
*                      REQUESTED A 'STEP' ABEND. ONLY 'ON' IF SDWACLUP  36938900
*                      IS 'ON'                                          36940900
SDWAMABD EQU   X'08'   ON,THIS TASK WAS NOT IN CONTROL AT TIME OF       36941300
*                      ERROR BUT AN ANCESTOR OF THIS TASK HAS ABEND'ED  36941700
*                      ONLY 'ON' IF SDWACLUP IS 'ON'.                   36942100
SDWARPIV EQU   X'04'   ON, THE REGISTERS, PSW AND CONTROL REGISTERS     36942500
*                      AT TIME OF ERROR ARE UNAVAILABLE                 36942800
SDWAMCIV EQU   X'02'   ON,MACHINE CHECK ERROR INFORMATION               36943100
*                      IS UNAVAILABLE.                                  36943500
SDWAERFL EQU   X'01'   ON,ERRORID INFORMATION AVAILABLE       @G17EP5W  36943800
SDWAFMID DS    CL2     ASID OF MEMORY IN WHICH ERROR OCCURRED.          36944100
*                      =0, IF THE MEMORY IS CURRENT                     36952700
*                      NOT=0, IF OTHER MEMORY IS CURRENT                36954700
*                               FOR FRRS-                               36955100
*                      IF THE VALUE IS NON ZERO THE                     36956700
*                      FRR IS RECEIVING CONTROL IN THE                  36957100
*                      MASTER SCHEDULER ADDRESS SPACE AND CANNOT        36957500
*                      ADDRESS THE PRIVATE AREA OF THE FAILING          36957900
*                      ADDRESS SPACE.                                   36958000
*                               FOR ESTA-                               36958100
*                      IF THE VALUE IS NON ZERO                         36963300
*                      ENTRY IS DUE TO CROSS MEMORY                     36965300
*                      ABTERM.                                          36967300
SDWAIOFS DS    B       THIS IS THE CURRENT I/O STATUS (THE I/O          36968500
*                      PROCESSING REQUESTED BY THE FIRST (E)STA         36973700
*                      EXIT IS THE ONLY REQUEST HONORED )               36989200
SDWAIOQR EQU   X'80'   ON,I/O FOR FAILING PROGRAM HAS BEEN QUIESCED AND 37004700
*                      IS RESTOREABLE                                   37020200
SDWAIOHT EQU   X'40'   ON,I/O FOR FAILING PROGRAM HAS BEEN HALTED AND   37035700
*                      IS NOT RESTOREABLE                               37051200
SDWANOIO EQU   X'20'   ON,FAILING PROGRAM HAS NO I/O OUTSTANDING        37066700
SDWANIOP EQU   X'10'   ON,USER REQUESTED NO I/O PROCESSING              37082200
*                                                                       37097700
SDWACPUI DS    CL1     ERRORID LOGICAL CPUID                  @G17EP5W  37098700
SDWARTYA DS    0A      ADDRESS OF RETRY ROUTINE                @G860P1C 37100600
SDWARTYF DS    B       ADDRESSING MODE INDICATOR BYTE          @G860P1S 37102500
SDWAAMOD EQU   X'80'   ADDRESSING MODE OF THE RETRY ROUTINE    @G860P1F 37105300
         DS    AL3     LOW THREE ORDER BYTES OF RETRY ADDRESS  @G860P1S 37108200
SDWARECA DS    A       ADDRESS OF VARIABLE RECORDING AREA WITHIN SDWA   37110200
SDWACPUA DS    0CL4    ADDRESS OF CPU HOLDING RESOURCE WHICH CAUSES     37129200
*                      VALID SPIN ON CURRENT CPU - USED WITH RESTART    37133000
*                      KEY ERROR TYPE.IF THIS FIELD IS VALIDLY FILLED   37143000
*                      IN BY AN FRR THE FRRS MAINLINE PROGRAM WILL BE   37145000
*                      RESUMED AT THE NEXT SEQUENTIAL INSTRUCTION.      37147000
*                      NOT VALID FOR ESTAE EXITS.                       37149000
         DS    CL2     RESERVED                                         37150000
SDWALCPU DS    H       LOGICAL ADDRESS OF CPU HOLDING RESOURCE          37151000
SDWAPARQ DS    0BL4    FLAGS SET BY RECOVERY ROUTINE TO REQUEST FURTHER 37153000
*                      PROCESSING ACTION                                37163000
SDWARCDE DS    B       RETURN CODE FROM RECOVERY ROUTINE TO INDICATE    37165000
*                      RETRY OR TERMINATION                             37167800
SDWACWT  EQU   0       0 ,CONTINUE WITH TERMINATION. THIS INDICATION    37187800
*                      IMPLIES PERCOLATION                              37187900
SDWARETY EQU   4       4 ,RETRY USING RETRY ADDRESS IN SDWARTYA FIELD   37189300
SDWAPSTI EQU   16      16,PREVENT FURTHER (E)STAI PROCESSING            37190500
SDWAACF2 DS    B       FLAGS TO INDICATE ADDITIONAL PROCESSING          37193100
*                      REQUESTS                                         37193800
SDWARCRD EQU   X'80'   ON,RECORDING REQUESTED                           37194500
SDWARFXM EQU   X'40'   ON,RETRY TO FULLXM AT TIME OF FRR SET.           37194600
*                      CAN BE USED BY BY MODE=PRIMARY FRRS        @P8A  37194700
SDWASPIN EQU   X'20'   ON,PROGRAM INTERRUPTED VIA  THE RESTART KEY WAS  37195000
*                      IN A VALID SPIN(SET BY THE SETRP MACRO WHEN CPU  37196400
*                      ADRESS IS SPECIFIED ALONG WITH THE CPU ADDRESS   37196800
*                      IN SDWACPUA FIELD TO ALLOW RESTART OF THE        37197800
*                      ALTERNATE CPU)                                   37199200
SDWARERR EQU   X'10'   ON,RETRY USING THE CROSS MEMORY ADDRESSING       37200000
*                      ENVIRONMENT AT THE TIME OF THE ERROR.            37200800
*                      OFF,RETRY USING THE CROSS MEMORY ADDR ENV ON     37201600
*                      ENTRY TO THE FRR.                       @G381P2F 37202400
SDWAUPRG EQU   X'08'   ON,UPDATED REGISTERS STARTING WITH SDWASR00 ARE  37203400
*                      TO BE USED FOR RETRY                             37204800
SDWAFREE EQU   X'04'   ON, SDWA (RTCA) TO BE FREED PRIOR TO RETRY.      37206200
*                      ONLY VALID FOR ESTA TYPE EXITS.                  37216200
SDWASERP EQU   X'02'   ON,SERIALIZE PERCOLATION (USED WHEN AN SRB MODE  37222100
*                      FRR PERCOLATES SERIALLY TO A RELATED TASK)       37228000
*                                                              @G381P2F 37233900
SDWACML  EQU   X'01'   ON,FREE THE CROSS MEMORY LOCAL LOCK     @G381P2F 37239800
SDWAACF3 DS    B       FLAGS INDICATING SOME GLOBAL LOCKS TO BE FREED.  37243500
*                      ONLY VALID FOR FRRS.  OTHER LOCKS ARE INDICATED  37247200
*                      AT SDWAFLK1 AND SDWAFLK2.               @G860P1S 37250900
SDWAFRSX EQU   X'80'   ON, THE RSM CROSS MEMORY CLASS LOCK     @G860P1S 37254600
SDWAFRSA EQU   X'40'   ON, THE RSM ADDRESS SPACE CLASS LOCK    @G860P1S 37258300
SDWAFVSP EQU   X'20'   ON, THE VSM PAGE LOCK                   @G860P1S 37262000
SDWADISP EQU   X'10'   ON,THE DISPATCHER LOCK                           37266200
SDWAASMP EQU   X'08'   ON,THE ASM CLASS LOCK                   Z40WPXH  37271200
SDWASALL EQU   X'04'   ON, THE SALLOC LOCK                              37278200
SDWAIPRG EQU   X'02'   ON, THE IOSYNCH LOCK                             37290200
SDWAFRSD EQU   X'01'   ON, THE RSM DATA SPACE LOCK                 @L6C 37290300
SDWAACF4 DS    B       ADDITIONAL LOCKS TO BE FREED, OR ADDITIONAL     *37291200
                       PROCESSING FOR FRRS                              37292100
SDWAIUCB EQU   X'80'   ON, FREE IOSUCB LOCK                             37293000
SDWATADB EQU   X'08'   RESERVED LOCK                           Z40WPXH  37296000
SDWAOPTM EQU   X'04'   ON, FREE SYSTEM RESOURCES MGR(SRM) LOCK          37297400
SDWACMS  EQU   X'02'   ON, FREE CMS LOCK                                37298800
SDWAFLLK EQU   X'01'   ON, FREE LOCAL LOCK                              37300200
*                                                                       37301800
SDWALKWA DS    0CL32   LOCK AREA                              @ZA05516  37302000
SDWALKWS DS    0CL32   LOCKWORDS REQUIRED TO FREE GLOBAL LOCKS          37303300
*                      ONLY USED FOR FRRS                               37305300
SDWALRSD DS    A       LOCKWORD FOR THE RSM DATA SPACE LOCK        @L6C 37306300
SDWAIULW DS    A       LOCKWORD FOR THE IOSUCB LOCK                     37307800
         DS    A       LOCKWORD - RESERVED                         @P3C 37309300
SDWAIPLW DS    A       LOCKWORD FOR THE IOSYNCH LOCK                    37310800
SDWAAPLW DS    A       LOCKWORD FOR THE ASM CLASS LOCK         Z40WPXH  37311500
         DS    A       RESERVED                                   @L9C  37312300
         DS    A       RESERVED                                   @L9C  37312600
SDWATALW DS    A       LOCKWORD - RESERVED                     Z40WPXH  37312900
*                                                                       37313800
SDWAASID DS    CL2     ASID FOR LOGREC DEBUGGING (HOME ASID)   @ZA05516 37314000
SDWASEQ# DS    CL2     ERRORID SEQUENCE NUMBER                 @G17EP5W 37314200
SDWARECP DS    0CL24   RECORDING PARAMETERS (MODULE,CSECT AND RECOVERY  37314400
*                      ROUTINE NAMES-RESPECTIVELY)                      37314900
SDWAMODN DS   CL8      THE LOAD MODULE NAME INVOLVED IN THE ERROR       37315300
*                      (SUPPLIED BY THE RECOVERY ROUTINE)               37316300
SDWACSCT DS   CL8      THE CSECT (MICROFICHE) NAME INVOLVED IN THE      37317300
*                      ERROR (SUPPLIED BY THE RECOVERY ROUTINE)         37318300
SDWAREXN DS   CL8      THE RECOVERY ROUTINE (MICROFICHE) NAME           37319300
*                      HANDLING THE ERROR (SUPPLIED BY THE RECOVERY     37320300
*                      ROUTINE)                                         37321300
*                                                                       37322300
SDWADPLA DS   A        POINTER TO DUMP PARAMETER LIST                   37323300
*                      RESIDING IN SDWA                                 37324300
SDWASNPA DS   0CL8     SNAP PARAMETER LIST FLAGS                        37327200
SDWADUMP DS   0CL4     DUMP CHARACTERISTICS                             37328800
SDWADPID DS   CL1      ID OF DUMP REQUESTED                             37329200
SDWADPFS DS   B        DUMP FLAGS                                       37329300
SDWADPT  EQU  X'80'    ALWAYS OFF, INDICATES SNAP DUMP REQUEST          37329400
SDWADLST EQU  X'40'    ALWAYS ON, INDICATES  OS/VS2 REL. 2 DUMP         37337000
*                      PARAMETER LIST SUPPLIED                          37339000
*                      USED BY RTM TO INDICATE DUMP OPTIONS ARE         37339400
*                      AVAILABLE IN THE SDWA                            37339800
SDWAENSN EQU  X'20'    ON,ENHANCED DUMP OPTIONS              @G33SPHW   37339900
SDWASLST EQU  X'02'    ON,STORAGE LISTS SUPPLIED FOR DUMP               37340100
SDWADPF2 DS   B        DUMP FLAGS 2                          @G382P2F   37404500
SDWADVS3 EQU  X'80'    ON, STORAGE RANGES IN SDWADSR, OFF, STORAGE      37412000
*                      RANGES IN SDWADPSL                    @G382P2F   37419500
SDWAXLST EQU  X'08'    ON,DATA SPACE STORAGE LISTS SUPPLIED FOR DUMP   X37420300
                                                                   @P2M 37421100
SDWALVL2 EQU  X'04'    ON, MVS/SP2.1 VERSION OF SNAP PARMLIST  @G860P1F 37422000
SDWASUBL EQU  X'02'    ON, SUBPOOL LIST SUPPLIED               @G860P1C 37424500
         DS   CL1      RESERVED                                         37427000
*                                                                       37434500
SDWADDAT DS   0CL4     SDATA AND PDATA OPTIONS                          37436500
SDWASDAT DS   0CL2     SDATA OPTIONS                          @G33SPHW  37437500
SDWASDA0 DS   BL1      SDATA OPTIONS FLAG ONE                 @G33SPHW  37438500
SDWANUC  EQU  X'80'    DISPLAY NUCLEUS                                  37438900
SDWASQA  EQU  X'40'    DISPLAY SQA                                      37439300
SDWALSQA EQU  X'20'    DISPLAY LSQA                                     37439700
SDWASWA  EQU  X'10'    DISPLAY SWA                                      37440100
SDWAGTF  EQU  X'08'    DISPLAY GTF INCORE TRACE TABLE                   37440200
SDWACBS  EQU  X'04'    FORMAT AND DISPLAY CONTROL BLOCKS                37440300
SDWAQQS  EQU  X'02'    FORMAT AND DISPLAY QCBS/QELS                     37440400
SDWADM   EQU  X'01'    FORMAT DATA MGT CONTROL BLOCKS        @G33SPHW   37443400
SDWASDA1 DS   BL1      SDATA OPTIONS                         @G33SPHW   37445400
SDWAIO   EQU  X'80'    FORMAT I/O SUPERVISOR CONTROL BLOCKS  @G33SPHW   37447400
SDWAERR  EQU  X'40'    FORMAT ERROR CONTROL BLOCKS           @G33SPHW   37449400
SDWASUM  EQU  X'10'    PROVIDE SUMMARY DUMP                    @G860P1S 37451900
SDWAALLN EQU  X'08'    DISPLAY ENTIRE VIRTUAL NUCLEUS          @G860P1S 37454400
SDWAPDAT DS   BL1      PDATA OPTIONS                                    37457100
SDWADSAS EQU  X'80'    DISPLAY SAVE AREAS                               37471100
SDWADSAH EQU  X'40'    DISPLAY SAVE AREA HEADER                         37473100
SDWADREG EQU  X'20'    DISPLAY REGISTERS                                37473200
SDWATLPA EQU  X'10'    DISPLAY LPA MODULES OF TASK                      37473500
SDWATJPA EQU  X'08'    DISPLAY JPA MODULES OF TASK                      37473600
SDWADPSW EQU  X'04'    DISPLAY PSW                                      37475300
SDWAUSPL EQU  X'02'    DISPLAY USER SUBPOOLS                            37477700
         DS   B        RESERVED                                         37478100
*                                                                       37479400
SDWADPSA DS   0CL36    DUMP RANGES AREA                                 37479800
SDWADPSL DS   0CL32    DUMP STORAGE LISTS (MAX 4 RANGES AVAILABLE)      37481100
SDWAFRM1 DS   A        BEGINNING ADDRESS FOR STORAGE RANGE 1            37482800
SDWATO1  DS   A        ENDING ADDRESS FOR STORAGE RANGE 1               37484500
SDWAFRM2 DS   A        BEGINNING ADDRESS FOR STORAGE RANGE2             37486200
SDWATO2  DS   A        ENDING ADDRESS FOR STORAGE RANGE 2               37487900
SDWAFRM3 DS   A        BEGINNING ADDRESS FOR STORAGE RANGE 3            37489600
SDWATO3  DS   A        ENDING ADDRESS FOR STORAGE RANGE 3               37491300
SDWAFRM4 DS   A        BEGINNING ADDRESS FOR STORAGE RANGE 4            37493000
SDWATO4  DS   A        ENDING ADDRESS FOR STORAGE RANGE 4               37503000
         DS   A        RESERVED                                         37503400
*                                                                       37505000
*                      SDWAVERI IS TO INDICATE THE VERSION OF           37505500
*                      THE SDWA VIA A NUMBER IN THE SDWAVID    @G38FP2F 37506000
*                                                                       37506500
SDWAVERI DS   0CL4     SDWA VERSION INDICATOR                  @G38FP2F 37507000
SDWAVERF DS   CL2      FFFF INDICATES VID FIELD IS VALID       @G38FP2F 37507500
SDWAVID  DS   CL2      VERSION INDICATOR, EXPLAINED AS FOLLOWS:    @L1A 37507600
*                      1, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L1A 37507700
*                      PRODUCT RELEASE 2 LEVEL                     @L1A 37507800
*                      2, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L1A 37507900
*                      PRODUCT VERSION 2 RELEASE 1 LEVEL           @L1A 37508000
*                      3, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L1A 37508100
*                      PRODUCT JBB2110 LEVEL.                      @L1A 37508200
*                      4, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L4A 37508300
*                      PRODUCT HBB3310 LEVEL.                      @L4A 37508400
*                      5, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L9A 37508500
*                      PRODUCT HBB4410 LEVEL.                      @L9A 37508600
*                      6, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L9A 37508700
*                      PRODUCT HBB5510 LEVEL.                      @L9Z 37508800
*                      7, indicates the SDWA is at an OS/390 R10   @L9A 37508900
*                      HBB7703 level *and* that it                 @LIA 37509000
*                      contains the SDWARC4 extension              @LIA 37509100
SDWAVS3  EQU  1        1, INDICATES THE SDWA IS AT AN MVS/SYSTEM        37509200
*                      PRODUCT RELEASE 2 LEVEL                 @G382P2F 37509300
SDWAVS4  EQU  2        2, INDICATES THE SDWA IS AT AN MVS/SYSTEM        37509400
*                      PRODUCT VERSION 2 RELEASE 1 LEVEL       @G860P1S 37509500
SDWAVS5  EQU  3        3, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L1A 37509600
*                      PRODUCT JBB2110 LEVEL.                      @L1A 37509700
SDWAVS6  EQU  4        4, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L4A 37509800
*                      PRODUCT HBB3310 LEVEL.                      @L4A 37509900
SDWAVS7  EQU  5        5, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L9A 37510000
*                      PRODUCT HBB4410 LEVEL.                      @L9A 37510100
SDWAVS8  EQU  6        6, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L9A 37510200
*                      PRODUCT HBB5510 LEVEL.                      @L9Z 37510300
SDWAVS9  EQU  7        7, indicates the SDWA is at an OS/390 R10   @L9A 37510400
*                      HBB7703 level *and* that it                 @LIA 37510500
*                      contains the SDWARC4 extension              @LIA 37510600
SDWAVSN  EQU  7        7, indicates the SDWA is at an OS/390 R10   @L9A 37510700
*                      HBB7703 level *and* that it                 @LIA 37510800
*                      contains the SDWARC4 extension              @LIA 37510900
*                      IF THE VALUE OF THIS EQUATE IS CHANGED,          37511000
*                      ADD A NEW SDWAVSX WHERE X IS THE NUMBER          37511100
*                      THAT FOLLOWS THE LAST SDWAVSX FIELD, AND         37511200
*                      MAKE THE EQUATE EQUAL TO SDWAVSN.                37511300
*                      ALSO DOCUMENT THE VALUE IN SDWAVID AS ABOVE.     37511400
*                      REFER TO MODULE IEAVTFRO FOR INSTRUCTIONS ON     37511500
*                      WHICH MODULES NEED TO CHANGE AND RECOMPILE  @P5C 37511600
SDWAXPAD DS   A        ADDR OF THE EXTENSION POINTERS (SDWAPTRS)   @L1C 37511700
SDWAXM   DS   0CL12    CROSS MEMORY INFORMATION                @G381P2F 37511800
SDWACRGS DS   0CL8     CONTROL REGISTERS 3 AND 4               @G381P2F 37511900
SDWACR3  DS   0CL4     CONTROL REGISTER 3                      @G381P2F 37512000
SDWAKM   DS   CL2      KEY MASK                                @G381P2F 37512100
SDWASCND DS   CL2      ASID OF THE SECONDARY ADDR SPACE -SASID @G381P2F 37512200
SDWACR4  DS   0CL4     CONTROL REGISTER 4                      @G381P2F 37512500
SDWAAX   DS   CL2      AUTHORIZATION INDEX                     @G381P2F 37513000
SDWAPRIM DS   CL2      ASID OF THE PRIMARY ADDR SPACE -PASID   @G381P2F 37513500
SDWACMLA DS   A        ADDRESS OF ASCB OF CML TO BE FREED      @G381P2F 37514000
SDWACOMU DS   CL8      FRR TO ESTAE COMMUNICATION BUFFER       @G382P2F 37514500
SDWACOMP DS   A        THIS WORD IS PROVIDED FOR COMMUNICATION OF       37515000
*                      ADDITIONAL RECOVERY DATA ON A PER COMPONENT      37517000
*                      BASIS (FOR OS/VS2 RELEASE 2 THIS FIELD IS ONLY   37519000
*                      USED BY DATA MANAGER )                           37521000
SDWAERTM DS   CL4      ERRORID TIME STAMP                     @G17EP5W  37521100
SDWARA   DS   0CL264   VARIABLE RECORDING AREA PREFIXED BY A TWO BYTE   37521400
*                      LENGTH FIELD OF AREA, A ONE BYTE FLAG FIELD,     37525300
*                      AND A ONE BYTE FIELD WITH LENGTH OF USER         37529200
*                      SUPPLIED RECORDING INFORMATION         @G388P2F  37533100
SDWAVRAL DS   CL2      LENGTH OF VARIABLE RECORDING AREA                37537300
SDWADPVA DS    B       BITS THAT DEFINE DATA IN VARIABLE AREA           37541300
SDWAHEX  EQU   X'80'   SDWAVRA DATA TO BE PRINTED BY EREP IN HEX        37545300
SDWAEBC  EQU   X'40'   SDWAVRA DATA TO BE PRINTED BY EREP IN EBCDIC     37549300
SDWAVRAM EQU   X'20'   SDWAVRA DATA IS IN THE FORMAT MAPPED BY THE      37553300
*                      VRAMAP DSECT (IHAVRA MACRO)            @G81EP11  37557300
SDWAURAL DS   XL1      LENGTH OF USER SUPPLIED INFORMATION IN           37563000
*                      THE VARIABLE RECORDING AREA (ZEROED BEFORE       37563200
*                      EACH RECOVERY ROUTINE IS INVOKED)                37563400
SDWAVRA  DS   CL255    VARIABLE RECORDING AREA                 @G388P2F 37563600
SDWAID   DS   CL5      CONTAINS 'SDWA ' AS ID                  @G860P1F 37563800
SDWAEND  DS   0D       END OF NON-EXTENDED SDWA                @G381P2F 37564000
*                                                                       37564100
SDWARC1  DSECT ,       RECORDABLE EXTENSION, BASED ON SDWASRVP @G388P2F 37564200
SDWASERV DS   0CL456   ADDITIONAL COMPONENT SERVICE DATA           @LGC 37564300
SDWARC1Z DS   0CL118   CAN BE ZEROED ON PERCOLATION.               @L2A 37564500
SDWACID  DS   CL5      COMPONENT ID OF THE COMPONENT INVOLVED           37564700
*                      IN THE ERROR (FOR EXAMPLE, SC1CR)       @G388P2F 37564800
SDWASC   DS   CL23     NAME OF THE SUBCOMPONENT AND THE MODULE          37564900
*                      SUBFUNCTION INVOLVED IN THE ERROR       @G388P2F 37565000
SDWAMLVL DS   0CL16    LEVEL OF THE MODULE INVOLVED IN THE ERROR        37565100
*                                                              @G38AP2F 37565200
SDWAMDAT DS   CL8      ASSEMBLY DATE OF THE MODULE INVOLVED IN          37565300
*                      THE ERROR                               @G38AP2F 37565400
SDWAMVRS DS   CL8      VERSION OF THE MODULE - PTF OR PRODUCT           37565500
*                      NUMBER                                  @G38AP2F 37565600
SDWACRC  DS   0CL4     THIS FIELD CONTAINS THE ABEND REASON CODE THAT   37565700
*                      WAS SET VIA AN ABEND, CALLRTM, OR SETRP MACRO.   37565800
*                      IT IS VALID ONLY IF SDWARCF IS SET ON.           37565900
*                      NOTE THAT THIS FIELD SHOULD NOT BE CONFUSED      37566000
*                      WITH THE RETURN CODE THAT SOME PROGRAMS PLACE    37566100
*                      INTO REGISTER 15 BEFORE ISSUING AN ABEND.   @PBC 37566200
SDWAHRC  DS   F        HEXADECIMAL DECLARE FOR SDWACRC             @PBC 37566300
SDWARRL  DS   CL8      ENTRY POINT LABEL OF THE RECOVERY ROUTINE THAT   37566400
*                      FILLED IN THIS SDWA                              37566500
SDWACIDB DS   CL4      THE COMPONENT ID BASE (PREFIX) NUMBER,  @G38PP1F 37566600
*                      SUCH AS 5741.                           @G38PP1F 37566700
SDWASDRC DS   FL1      SVCDUMP STATUS INDICATOR (FOR USE BY SDUMP)      37566800
*                                                              @G860P1S 37566900
SDWACCRC DS   CL1      FLAGS FOR COMPCODE AND REASON CODE      @G860P1C 37567000
SDWACCF  EQU  X'80'   =1, IF RECOVERY EXIT ALTERED COMPCODE    @G860P1C 37567100
SDWAREAF EQU  X'40'   =1, IF RECOVERY EXIT ALTERED REASON CODE @G860P1C 37567200
SDWARETF DS   B        SDWA RETRY FLAGS                            @L3A 37567300
SDWART15 EQU  X'80'    ON, SET REGISTER 15 ON RETRY TO THE VALUE IN     37567400
*                      SDWASR15.  OFF, SET REGISTER 15 ON RETRY TO      37567500
*                      THE RETRY ADDRESS, REGARDLESS OF THE VALUE IN    37567600
*                      SDWASR15. ONLY VALID FOR FRRS               @L3A 37567700
SDWAREMR EQU  X'40'    ON, REMOVE RECOVERY ROUTINE ON RETRY             37567800
*                      OFF, DONT REMOVE RECOVERY ROUTINE ON RETRY  @L3A 37567900
SDWAFRLK EQU  X'20'    ON, FREE LOCKS ON A RETRY WHOSE BIT SETTINGS     37568000
*                      IN THE SDWA HAVE BEEN TURNED ON                  37568100
*                      OFF, DO NOT FREE ANY LOCKS ON A RETRY       @L3A 37568200
SDWAUP64 EQU  X'10'    If on, use the 64-bit GPRs for                   37568300
*                      setting the retry regs. Only valid when          37568400
*                      SDWARC4 extension exists.                   @LIA 37568500
SDWAKEAX EQU  X'08'    ON, when retrying keep the current EAX rather   *37568600
                       than resetting EAX to time-of-FRR-set       @PGM 37568700
SDWATYPE DS   B        TYPE OF RECOVERY ROUTINE THAT RTM GAVE CONTROL   37568800
*                      TO:                                              37568900
*                        0 - NO RECOVERY WAS SET UP                     37569000
*                        1 - FRR                                        37569100
*                        2 - NON FRR (ESTAE, ESTAI, ETC.)               37569200
*                        3 - ARR (ASSOCIATED RECOVERY ROUTINE)     @L4A 37569400
SDWANREC EQU  0        NO RECOVERY WAS SET UP                      @L4A 37569500
SDWATFRR EQU  1        FRR WAS GIVEN CONTROL                       @L4A 37569600
SDWATEST EQU  2        ESTAE/I/X WAS GIVEN CONTROL                 @L4A 37569700
SDWATARR EQU  3        ARR WAS GIVEN CONTROL                       @L4A 37569800
SDWAHLHI DS   CL4      ON ENTRY TO A FRR: COPY OF PSAHLHI (HIGHEST LOCK 37569900
*                                         HELD INDICATOR)               37570000
*                      ON ENTRY TO AN ESTAE: 0                 @G860P38 37570300
SDWASUPR DS   CL4      ON ENTRY TO A FRR: COPY OF PSASUPER (SUPERVISOR  37570600
*                                         CONTROL WORD)                 37570900
*                      ON ENTRY TO AN ESTAE: 0                 @G860P38 37571200
SDWASPN  DS   CL4      ON ENTRY TO A FRR: COPY OF LCCASPIN (PROCESSOR   37571500
*                                         IS SPINNING INDICATORS)       37571800
*                      ON ENTRY TO AN ESTAE: 0                 @G860P38 37572100
SDWAEADR DS   CL4      FRR OR ESTAE RECOVERY ROUTINE ADDRESS.           37572400
*                      =0 IF NO FRR EXISTED WHEN RTM1 RECIEVED CONTROL  37572700
*                      TO PROCESS A SYSTEM MODE ERROR.         @G860P38 37573000
SDWAFRRE DS   CL24     IF FRR EXISTS: COPY OF FRR PARAMETER AREA FROM   37573300
*                                     THE CURRENT FRR STACK ENTRY       37573600
*                      ON ENTRY TO AN ESTAE: 0                 @G860P38 37573900
SDWASDRN DS   CL4      SDUMP REASON FLAGS FOR TAKING PARTIAL   @ZMC2916 37574200
*                      DUMP. SEE RTSDSRSN FIELD IN RTSD.       @ZMC2916 37574500
*                      ADDITIONS TO SDWARC1 - 40 BYTES             @L1A 37574800
SDWADAEW DS    0CL10           STRUCTURE FOR DAE INFO              @L2A 37575100
SDWADAET DS    CL8             DAE STATUS FLAGS MAPPED BY ADYDSTAT @P1C 37575400
SDWAOCUR DS    CL2             NUMBER OF OCCURRENCES OF THIS PROBLEM.   37575700
*                              IF 0 THEN DAE DID NOT CHECK FOR          37576000
*                              DUPLICATE OCCURRENCES.  IF 1 THEN THIS   37576300
*                              IS THE FIRST OCCURRENCE OF THIS PROBLEM. 37576600
*                              IF GREATER THAN 1 THEN THIS IS THE COUNT 37576900
*                              OF HOW MANY TIMES THIS DUMP REQUEST HAS  37577200
*                              OCCURRED WHILE DAE WAS ACTIVE.      @P1C 37577500
SDWARC1P DS    0CL34           THIS PART IS TO BE PRESERVED ON          37577800
*                              PERCOLATION AND NOT ZEROED          @L1A 37578100
SDWAPGTA DS    0CL6            CONTAINING STRUCTURE AS IN LCCAPGTA @L1A 37578400
SDWAASI1 DS    CL2             ADDRESS SPACE ID OF TASK FOR PURGEDQ     37578700
*                                                                  @L1A 37579000
SDWATCB  DS    F               ADDRESS OF TCB FOR PURGEDQ          @L1A 37579300
SDWART12 DS    0CL28           USED FOR FILLING IN EED'S           @L1A 37579600
SDWAFAIN DS    CL12            12 BYTES OF INSTRUCTION STREAM AS        37579900
*                              DETERMINED BY THE ADDRESS IN THE PSW AT  37580200
*                              THE TIME OF FAILURE. 6 BYTES BEFORE AND  37580500
*                              AFTER.                              @L2A 37580800
SDWAASCB DS    F               ADDRESS OF ASCB FOR FAILING ADDRESS      37581100
*                              SPACE.                              @L1A 37581400
SDWAASST DS    F               ADDRESS OF ADDRESS SPACE SEGMENT         37581700
*                              TABLE.                              @L1A 37582000
SDWASABC DS    0F              ORIGINAL COMPLETION CODE.           @L1A 37582300
SDWAOABF DS    CL1             FLAGS IN COMPLETION CODE REGISTER.  @L1A 37582600
SDWAOREQ EQU   X'80'           ORIGINAL VALUE OF SDWAREQ           @L1A 37582900
SDWAOSTP EQU   X'40'           ORIGINAL VALUE OF SDWASTEP          @L1A 37583200
*        EQU   X'20'           USED FOR MEMTERM REQUESTS           @L1A 37583500
SDWAOSTC EQU   X'10'           ORIGINAL VALUE OF SDWASTCC          @L1A 37583800
*        EQU   X'08'           USED BY RTM2 FOR NORMAL END-OF-TASK @L1A 37584100
SDWAORCF EQU   X'04'           VALID REASON CODE IN SDWAOCRC.      @L1A 37584400
*        EQU   X'02'           RESERVED                            @L1A 37584700
*        EQU   X'01'           RESERVED                            @L1A 37585000
SDWAOCMP DS    CL3             COMPLETION CODE.                    @L1A 37585300
SDWAOCRC DS    F               ORIGINAL REASON CODE FROM SDWACRC AT     37585400
*                              ENTRY TO RECOVERY PROCESSING.  ONLY      37585500
*                              VALID IF SDWAORCF IS SET ON.        @PBC 37585600
*                                                                       37585700
*   SDWARC1 FIELDS FROM THIS POINT ON ARE PRESERVED ON RTM1             37585800
*   FRR PERCOLATION AND ARE ZEROED ON RTM2 ESTAE PERCOLATION.           37585900
*                                                                       37586000
SDWACRER DS    0CL64           CONTROL REGISTERS AT TIME OF ERROR.      37586100
*                              THESE VALUES ARE NOT RESTORED ON RETRY.  37586200
*                                                                  @L4A 37586500
SDWACRE0 DS    F               CONTROL REGISTER 0                  @L4A 37586800
SDWACRE1 DS    F               CONTROL REGISTER 1                  @L4A 37587100
SDWACRE2 DS    F               CONTROL REGISTER 2                  @L4A 37587400
SDWACRE3 DS    F               CONTROL REGISTER 3                  @L4A 37587700
SDWACRE4 DS    F               CONTROL REGISTER 4                  @L4A 37588000
SDWACRE5 DS    F               CONTROL REGISTER 5                  @L4A 37588300
SDWACRE6 DS    F               CONTROL REGISTER 6                  @L4A 37588600
SDWACRE7 DS    F               CONTROL REGISTER 7                  @L4A 37588900
SDWACRE8 DS    F               CONTROL REGISTER 8                  @L4A 37589200
SDWACRE9 DS    F               CONTROL REGISTER 9                  @L4A 37589500
SDWACREA DS    F               CONTROL REGISTER 10                 @L4A 37589800
SDWACREB DS    F               CONTROL REGISTER 11                 @L4A 37590100
SDWACREC DS    F               CONTROL REGISTER 12                 @L4A 37590400
SDWACRED DS    F               CONTROL REGISTER 13                 @L4A 37590700
SDWACREE DS    F               CONTROL REGISTER 14                 @L4A 37591000
SDWACREF DS    F               CONTROL REGISTER 15                 @L4A 37591300
SDWAARER DS    0CL64           ACCESS REGISTERS AT TIME OF ERROR   @L4A 37591600
SDWAARE0 DS    F               ACCESS REGISTER 0                   @L4A 37591900
SDWAARE1 DS    F               ACCESS REGISTER 1                   @L4A 37592200
SDWAARE2 DS    F               ACCESS REGISTER 2                   @L4A 37592500
SDWAARE3 DS    F               ACCESS REGISTER 3                   @L4A 37592800
SDWAARE4 DS    F               ACCESS REGISTER 4                   @L4A 37593100
SDWAARE5 DS    F               ACCESS REGISTER 5                   @L4A 37593400
SDWAARE6 DS    F               ACCESS REGISTER 6                   @L4A 37593700
SDWAARE7 DS    F               ACCESS REGISTER 7                   @L4A 37594000
SDWAARE8 DS    F               ACCESS REGISTER 8                   @L4A 37594300
SDWAARE9 DS    F               ACCESS REGISTER 9                   @L4A 37594600
SDWAAREA DS    F               ACCESS REGISTER 10                  @L4A 37594900
SDWAAREB DS    F               ACCESS REGISTER 11                  @L4A 37595200
SDWAAREC DS    F               ACCESS REGISTER 12                  @L4A 37595500
SDWAARED DS    F               ACCESS REGISTER 13                  @L4A 37595800
SDWAAREE DS    F               ACCESS REGISTER 14                  @L4A 37596100
SDWAAREF DS    F               ACCESS REGISTER 15                  @L4A 37596400
SDWAARSV DS    0CL64           ACCESS REGISTERS OF THE RB LEVEL AND     37596700
*                              LINKAGE STACK LEVEL WHICH CREATED THE    37597000
*                              ESTAE EXIT AT THE TIME IT LAST INCURRED  37597300
*                              AN INTERRUPT OR 0 FOR ESTAI.  FOR FRRS   37597600
*                              INITIALIZED TO REGISTERS AT TIME OF      37597900
*                              ERROR.  THIS REGISTER AREA IS USED TO    37598200
*                              UPDATE REGISTER CONTENTS FOR RETRY IF    37598500
*                              REQUESTED.                          @L4A 37598800
SDWAARS0 DS    F               ACCESS REGISTER 0                   @L4A 37599100
SDWAARS1 DS    F               ACCESS REGISTER 1                   @L4A 37599400
SDWAARS2 DS    F               ACCESS REGISTER 2                   @L4A 37599700
SDWAARS3 DS    F               ACCESS REGISTER 3                   @L4A 37600000
SDWAARS4 DS    F               ACCESS REGISTER 4                   @L4A 37600300
SDWAARS5 DS    F               ACCESS REGISTER 5                   @L4A 37600600
SDWAARS6 DS    F               ACCESS REGISTER 6                   @L4A 37600900
SDWAARS7 DS    F               ACCESS REGISTER 7                   @L4A 37601200
SDWAARS8 DS    F               ACCESS REGISTER 8                   @L4A 37601500
SDWAARS9 DS    F               ACCESS REGISTER 9                   @L4A 37601800
SDWAARSA DS    F               ACCESS REGISTER 10                  @L4A 37602100
SDWAARSB DS    F               ACCESS REGISTER 11                  @L4A 37602400
SDWAARSC DS    F               ACCESS REGISTER 12                  @L4A 37602700
SDWAARSD DS    F               ACCESS REGISTER 13                  @L4A 37603000
SDWAARSE DS    F               ACCESS REGISTER 14                  @L4A 37603300
SDWAARSF DS    F               ACCESS REGISTER 15                  @L4A 37603600
SDWADUCT DS    CL64            DISPATCHABLE UNIT CONTROL TABLE     @L4A 37603900
SDWATEAR DS    XL1             TRANSLATION EXCEPTION ACCESS REGISTER   X37604000
                               NUMBER                              @L4A 37604100
SDWAXFLG DS    XL1             EXTENDED FLAG AREA                  @L4A 37604200
SDWAINTF EQU   X'80'   ON, SDWAEC2, SDWASRSV, AND SDWAARSV ARE          37604300
*                      FROM A LINKAGE STACK ENTRY                  @02C 37604400
SDWATEAV EQU   X'40'   ON, SDWATRAN CONTAINS A VALID ADDRESS       @L8A 37604500
SDWATEIV EQU   X'20'   ON, SDWATRAN CONTAINS A VALID ASID          @L8A 37604600
SDWAESTX EQU   X'10'   ON, IF SDWATYPE = SDWATEST, THE RECOVERY    @LEA 37604700
*                      ROUTINE WAS ESTABLISHED VIA ESTAEX          @LEA 37604800
SDWATEPC EQU   X'08'   ON, SDWATRAN CONTAINS A VALID PC number     @LIA 37604900
SDWASFLG DS    XL1     SUBSPACE FLAG AREA                          @LGA 37605000
SDWASVLD EQU   X'80'   ON IF SUBSPACE INFORMATION AT TIME OF ERROR      37605100
*                      (SDWASTKN AND SDWASNM) IS AVAILABLE AND VALID    37605200
*                                                                  @LGA 37605300
SDWASSA  EQU   X'40'   ON IF A SUBSPACE WAS ACTIVE AT TIME OF ERROR     37605400
*                                                                  @LGA 37605500
SDWASSRS EQU   X'01'   TURNED ON BY AN ESTAE-TYPE RECOVERY ROUTINE      37605600
*                      TO INDICATE THAT RTM SHOULD RESTORE ITS ORIGINAL 37605700
*                      SUBSPACE ENVIRONMENT IF IT RECURSES         @LGA 37605800
SDWAARCH DS    B               Copy of FLCARCH                     @PHC 37605900
SDWAESAM EQU   X'01'           Copy of PSAESAME                    @PHA 37606000
SDWAPRM2 DS    0CL8            ARR MSTA AREA COPY                  @L4A 37606100
SDWAMST1 DS    0CL4            1ST WORD OF MSTA AREA               @L4A 37606200
SDWAPCEP DS    CL4             PC ESTAE PARAM VALUE                @L4A 37606300
SDWAMST2 DS    0CL4            2ND WORD OF MSTA AREA               @L4A 37606400
SDWAPCEA DS    CL4             PC ESTAE PARAM ALET VALUE           @L4A 37606500
SDWALSED DS    F               PTR TO LINKAGE STK ENTRY (CR15)     @D2C 37606600
SDWACLSE DS    CL4             ON ENTRY TO AN FRR, CONTAINS COPY OF    X37606700
                               PSACLHSE. ON ENTRY TO ESTAE, CONTAINS   X37606800
                               ZERO.                               @L9A 37606900
SDWALSLV DS    XL2             FOR RETRY: NUMBER OF BAKR ENTRIES PAST  -37607000
                               TIME-OF-SET TO SET LINKAGE STACK ON     -37607100
                               RETRY. IGNORED FOR FRR IF RETRY=ERROR   -37607200
                                                                   @PAC 37607300
         DS    CL2             RESERVED                                 37607400
SDWASTKN DS    CL8     STOKEN OF THE SUBSPACE AT TIME OF ERROR - VALID  37607500
*                      ONLY IF SDWASVLD IS ON, NOT AVAILABLE FOR FRRS   37607600
*                                                                  @LGA 37607700
SDWASNM  DS    CL8     NAME OF THE SUBSPACE AT TIME OF ERROR - VALID    37607800
*                      ONLY IF SDWASVLD IS ON, NOT AVAILABLE FOR FRRS   37607900
*                                                                  @LGA 37608000
SDWASNAM DS    CL8     Name of the SYSTEM that this record was created  37608100
*                      on.  This is the same system name that is used   37608200
*                      in a SYSPLEX.                               @05A 37608300
*    THE LENGTH MUST BE UPDATED IF ADDITIONS ARE MADE HERE         @L4A 37608400
SDWASEND DS   0D       END OF SERV EXTENSION OF SDWA           @G388P2F 37608500
*                                                                       37608600
**********************************************************************  37608700
*           EXTENSION FOR THE IO MACHINE CHECK ADDITIONAL DATA.      *  37608800
*           THIS EXTENSION IS RECORDED.                      @G860P1C*  37608900
**********************************************************************  37609000
SDWARC2  DSECT ,       POINTED TO BY SDWAXIOM                  @G860P1C 37609100
SDWAIOMA DS   0CL16    ADDITIONAL IO MACHINE CHECK DATA        @G860P1C 37609200
SDWARFSE DS   0CL8     FSA                                         @LIC 37609300
SDWARFSH DS   CL4      High half of FSA (zero pre-ESAME)           @LIA 37609400
SDWARFSL DS   CL4      Low half of FSA                             @LIA 37609500
SDWAMCIC DS   CL8      MACHINE CHECK INTERRUPT CODE            @G860P1C 37609600
SDWAIEND DS   0D       END OF SDWAIOMA EXTENSION OF SDWA       @G860P1C 37609700
*                                                                       37609800
**********************************************************************  37609900
*           EXTENSION FOR THE ADDITIONAL FRELOCK DATA.               *  37610000
*           THIS EXTENSION IS RECORDED.                      @G860P1C*  37610100
**********************************************************************  37610200
SDWARC3  DSECT ,       POINTED TO BY SDWAXLCK                      @L1C 37610300
SDWAFLCK DS   0CL32    ADDITIONAL FRELOCK DATA                 @G860P1C 37610400
SDWAFLK1 DS   B        FLAGS INDICATING WHAT LOCKS ARE TO      @G860P1C 37610500
*                      BE FREED                                @G860P1C 37610600
SDWAFCPU EQU  X'80'    ON, FREE THE CPU LOCK                   @G860P1S 37610700
SDWAFRSM EQU  X'08'    ON, FREE THE RSM LOCK                   @G860P1S 37610800
SDWAFTRC EQU  X'04'    ON, FREE THE TRACE LOCK                 @G860P1S 37611100
SDWAIOCB EQU  X'02'    ON, THE IOS LOCK                            @P4M 37611200
SDWAFLK2 DS   B        FLAGS INDICATING WHAT LOCKS ARE TO      @G860P1C 37611400
*                      BE FREED                                @G860P1C 37611700
SDWAFRSC EQU  X'10'    ON, FREE THE RSM COMMON CLASS LOCK      @G860P1S 37612000
SDWAFRSG EQU  X'08'    ON, FREE THE RSM GLOBAL CLASS LOCK      @G860P1S 37612300
SDWAFVSF EQU  X'04'    ON, FREE THE VSM FIX LOCK               @G860P1S 37612600
SDWAFASG EQU  X'02'    ON, FREE THE ASM GLOBAL CLASS LOCK      @G860P1S 37612900
SDWAFRSS EQU  X'01'    ON, FREE THE RSM STEAL CLASS LOCK       @G860P1S 37613200
SDWAFLKE DS   0CL4     FLAGS INDICATING LOCKS TO BE FREED          @L9C 37613300
SDWAFLE1 DS   CL1      FLAGS FOR LOCKS TO BE FREED IN FIRST BYTE OF    X37613400
                       EXTENSION                                   @L9A 37613500
SDWABLSD EQU  X'80'    ON, FREE THE BMFLSD LOCK                    @LCA 37613600
SDWAXDS  EQU  X'40'    ON, FREE THE XCFDS LOCK                     @LBA 37613700
SDWAXRES EQU  X'20'    ON, FREE THE XCFRES LOCK                    @LBA 37613800
SDWAXQ   EQU  X'10'    ON, FREE THE XCFQ LOCK                      @LBA 37613900
SDWAESET EQU  X'08'    ON, FREE THE ETRSET LOCK                    @LAA 37614000
SDWAIXSC EQU  X'04'    ON, FREE THE IXLSCH  LOCK                   @LFA 37614100
SDWAIXSR EQU  X'02'    ON, FREE THE IXLSHR  LOCK                   @LFA 37614200
SDWAIXDS EQU  X'01'    ON, FREE THE IXLDS   LOCK                   @LFA 37614300
SDWAFLE2 DS   CL1      FLAGS FOR LOCKS TO BE FREED IN SECOND BYTE OF   X37614400
                       EXTENSION                                   @L9A 37614500
SDWAIXSH EQU  X'80'    ON, FREE THE IXLSHELL LOCK                  @LFA 37614600
SDWAULUT EQU  X'40'    ON, FREE THE IOSULUT LOCK                   @LDA 37614700
SDWAIXRE EQU  X'20'    ON, FREE THE IXLREQST LOCK                  @03A 37614800
SDWAWLMR EQU  X'10'    On, free the WLMRES lock                    @PFC 37614900
SDWAWLMQ EQU  X'08'    On, free the WLMQ lock                      @PEC 37615000
SDWACNTX EQU  X'04'    On, free the CONTEXT lock                   @PFC 37615100
SDWARGSV EQU  X'02'    On, free the REGSRV lock                    @LJA 37615200
SDWAFLE3 DS   CL1      FLAGS FOR LOCKS TO BE FREED IN THIRD BYTE OF    X37615300
                       EXTENSION                                   @L9A 37615400
SDWAFLE4 DS   CL1      FLAGS FOR LOCKS TO BE FREED IN FOURTH BYTE OF   X37615500
                       EXTENSION                                   @L9A 37615600
         DS   CL2      RESERVED                                    @L9A 37615700
SDWALRSG DS   F        LOCKWORD ADDR FOR THE RSMGL  LOCK       @G860P1C 37615800
SDWALASG DS   F        LOCKWORD ADDR FOR THE ASMGL  LOCK       @G860P1C 37615900
SDWALRSS DS   F        LOCKWORD ADDR FOR THE RSMST  LOCK       @G860P1C 37616000
SDWALRSX DS   F        LOCKWORD ADDR FOR THE RSMXM  LOCK       @G860P1C 37616100
SDWALRSA DS   F        LOCKWORD ADDR FOR THE RSMAD  LOCK       @G860P1C 37616200
SDWALRSC DS   F        LOCKWORD ADDR FOR THE RSMCM  LOCK       @G860P1S 37616300
SDWALEND DS   0D       END OF SDWAFLCK EXTENSION OF SDWA       @G860P1C 37616400
*                                                                       37616500
**********************************************************************  37616600
* SDWARC4 - Extension for 64-bit related information.                *  37616700
*           This extension is ONLY present when the SDWA is above    *  37616800
*           the 16M line - be sure to check for a non-zero SDWAXEME  *  37616900
*           before accessing it!!!  This extension is recorded   @LIA*  37617000
**********************************************************************  37617100
SDWARC4  DSECT ,       Pointed to by SDWAXEME                      @LIA 37617200
SDWAG64  DS    0CL128  64-bit GPRs - initially contains registers      X37617300
                       at the Time Of Error, also used for retry   @LIA 37617400
SDWAG6400 DS   D       Register 0                                  @LIA 37617500
SDWAG6401 DS   D       Register 1                                  @LIA 37617600
SDWAG6402 DS   D       Register 2                                  @LIA 37617700
SDWAG6403 DS   D       Register 3                                  @LIA 37617800
SDWAG6404 DS   D       Register 4                                  @LIA 37617900
SDWAG6405 DS   D       Register 5                                  @LIA 37618000
SDWAG6406 DS   D       Register 6                                  @LIA 37618100
SDWAG6407 DS   D       Register 7                                  @LIA 37618200
SDWAG6408 DS   D       Register 8                                  @LIA 37618300
SDWAG6409 DS   D       Register 9                                  @LIA 37618400
SDWAG6410 DS   D       Register 10                                 @LIA 37618500
SDWAG6411 DS   D       Register 11                                 @LIA 37618600
SDWAG6412 DS   D       Register 12                                 @LIA 37618700
SDWAG6413 DS   D       Register 13                                 @LIA 37618800
SDWAG6414 DS   D       Register 14                                 @LIA 37618900
SDWAG6415 DS   D       Register 15                                 @LIA 37619000
         DS    CL8     Reserved                                    @LIA 37619100
SDWAG64H DS    CL64    High order halves of 64-bit GPRs in G64     @LIA 37619200
SDWAC64S DS    CL128   ESAME CRs at time of error                  @LIA 37619300
SDWATRNE DS    CL8     8-byte TEA                                  @LIA 37619400
SDWAEEND DS   0D       End of 64-bit extension of the SDWA         @LIA 37619500
*                                                                       37619600
**********************************************************************  37619700
*                                                                    *  37619800
* SDWAPTRS - pointers to the SDWA extensions.  This ptr section      *  37619900
*            must be of doubleword length (multiple of 8) and all    *  37620000
*            extensions must also be of doubleword length            *  37620100
*                                                                    *  37620200
**********************************************************************  37620300
SDWAPTRS DSECT ,       POINTED TO BY SDWAXPAD                  @G381P2F 37620400
SDWADSRP DS   A        ADDR DUMP STORAGE RANGES PTR. - SDWANRC1    @L1C 37620500
SDWASRVP DS   A        ADDR ADDITIONAL COMP SERV DATA - SDWARC1    @L1C 37620600
SDWAXIOM DS   A        ADDR OF I/O MACHINE CHECK AREA - SDWARC2    @L1C 37620700
SDWAXSPL DS   A        ADDR OF STORAGE SUBPOOLS AREA - SDWANRC2    @L1C 37620800
SDWAXLCK DS   A        ADDR ADDITIONAL FRELOCK DATA - SDWARC3      @01M 37620900
SDWADSPP DS   A        DATA SPACE STORAGE RANGES POINTER - SDWANRC3    X37621000
                                                                   @L7C 37621100
SDWAXEME DS   A        Addr 64-bit information - SDWARC4           @LIA 37621200
         DS   F        Reserved                                    @LIA 37621300
SDWAPEND DS   0D       END OF PTRS EXTENSION OF SDWA           @G38FP2F 37621400
*                                                                       37621500
**********************************************************************  37621600
*           EXTENSION FOR THE LIST OF DUMP STORAGE RANGES.           *  37621700
*           THIS EXTENSION IS NOT RECORDED.                      @L4A*  37621800
**********************************************************************  37621900
SDWANRC1 DSECT ,       NONRECORDABLE EXTENSION, BASED SDWADSRP @G381P2F 37622000
SDWADSR  DS   CL240    DUMP STORAGE RANGES                     @G382P2F 37622100
SDWAREND DS   0D       END OF DSR EXTENSION OF SDWA            @G382P2F 37622200
*                                                                       37622300
**********************************************************************  37622400
*           EXTENSION FOR THE LIST OF STORAGE SUBPOOLS.              *  37622500
*           THIS EXTENSION IS NOT RECORDED AND IS NOT ALLOCATED      *  37622800
*           FOR SUPER FRR STACKS.                            @G860P1C*  37623100
**********************************************************************  37623400
SDWANRC2 DSECT ,       POINTED TO BY SDWAXSPL                  @G860P1C 37623700
SDWASPMX EQU  7        MAX NUMBER OF SUBPOOLS ON DUMPOPT       @G860P1C 37624000
SDWASPLE DS   0CL16    UP TO 7 SUBPOOLS OF STORAGE TO BE       @G860P1C 37624300
*                      DUMPED BY ABDUMP                        @G860P1C 37624600
SDWASPLN DS   H        NUMBER OF SUBPOOLS TO BE DUMPED         @G860P1C 37624900
SDWASPLS DS   7H       IDS OF SUBPOOLS TO BE DUMPED            @G860P1C 37625200
SDWASEN  DS   0D       END OF SDWASPLS EXTENSION OF SDWA       @G860P1C 37625500
*                                                                       37625800
**********************************************************************  37625900
*           EXTENSION FOR THE LIST OF DUMPOPX STORAGE RANGES.        *  37626000
*           THIS EXTENSION IS NOT RECORDED.                      @L7A*  37626100
**********************************************************************  37626200
*                                                                       37626300
SDWANRC3 DSECT ,       DUMPOPX EXTENSION, POINTED TO BY SDWADSPP  @L7A  37626400
SDWADXSL DS    0CL240              LIST OF DUMPOPX RANGES         @L7A  37626500
SDWADXSR DS    15CL16              DUMPOPX RANGE (UP TO 15)       @L7A  37626600
SDWADEND DS    0D                                                 @L7A  37626700
SDWADXMX EQU   15      UP TO 15 DATA SPACE STORAGE RANGES MAY BE       X37626800
                       SPECIFIED                                  @L7A  37626900
*                                                                       37627000
SDWALEN  EQU  SDWAEND-SDWA  LENGTH OF SDWA                              37627100
SDWAPLEN EQU  SDWAPEND-SDWAPTRS  LENGTH OF PTRS EXTENSION      @G381P2F 37627200
SDWARLEN EQU  SDWAREND-SDWANRC1  LENGTH OF DSR EXTENSION       @G382P2F 37627300
SDWACLEN EQU  SDWASEND-SDWARC1   LENGTH OF SERV EXTENSION      @G388P2F 37627400
SDWAILEN EQU  SDWAIEND-SDWARC2   LENGTH OF IOMA EXTENSION      @G860P1C 37627500
SDWALLEN EQU  SDWALEND-SDWARC3   LENGTH OF FRELOCK EXTENSION   @G860P1C 37627600
SDWASPL  EQU  SDWASEN-SDWANRC2   LENGTH OF SUBPOOL EXTENSION   @G860P1C 37627900
SDWADLEN EQU  SDWADEND-SDWANRC3  LENGTH OF EXTENSION FOR DATA SPACE    X37628000
                                  RANGES                           @L7A 37628100
SDWANLNS EQU  SDWARLEN+SDWASPL+SDWADLEN Non-recordable extensions  @LIA 37628200
SDWAELEN EQU  SDWAEEND-SDWARC4   Length of ESAME extension         @LIA 37628300
SDWARLNS EQU  SDWACLEN+SDWAILEN+SDWALLEN+SDWAELEN                  @LIA 37628400
SDWAMLNP EQU  SDWALEN+SDWACLEN+SDWAILEN+SDWALLEN+SDWAELEN          @LIA 37628500
SDWAMLEN EQU  SDWAMLNP+SDWAPLEN                                    @LIC 37628600
*             Total length of SDWA with only recordable            @LIC 37628700
*             extensions. This is a super stack SDWA.              @LIC 37628800
SDWATLEN EQU  SDWAMLEN+SDWANLNS                                    @LIC 37628900
*             Total length of SDWA with all extensions             @LIC 37629000
*             This is a normal stack SDWA                          @LIC 37629100
SDWAOLEN EQU  SDWATLEN-SDWAELEN                                    @LIA 37629200
*             Total length of SDWA with all extensions except RC4. @LIA 37629300
*             This is an RTM2 below-16M SDWA                       @LIA 37629400
SDWASLEN EQU  SDWAMLEN+272                                         @LIC 37629500
*             Getmain length for super stack FRR SDWA          @G860P1C 37629600
SDWAFLEN EQU  SDWASLEN+SDWANLNS                                    @LIC 37629700
*             Getmain length for normal stack FRR SDWA         @G860P1S 37629800
*                                                                       37630600
SDWANOPR EQU  0                 THIS FIELD IS ONLY DEFINED IN           37630900
*                               ASSEMBLER VERSION OF THE SDWA. ITS      37631200
*                               PURPOSE IS TO FLAG INCOMPATABLE USE     37631500
*                               OF SETRP AND SDWA.             @G38AP2F 37631800
         AIF ('&VRAMAP' EQ 'NO').SDWA011  IF NO IHAVRA WANTED @G81EP11  37632100
         EJECT                                                @G81EP11  37632400
         IHAVRA                                               @G81EP11  37632700
.SDWA011 ANOP          LABEL TO SKIP IHAVRA (WHEN VRAMAP=NO)  @G81EP11  37633000
         AIF ('&DSECT' NE 'YES').SDWA012                      @G81EP11  37633300
.*                      THE FOLLOWING DSECT LINE IS TO         @ZMB0065 37633600
.*                      ALLOW A USER SPECIFIED ORG TO          @ZMB0065 37633900
.*                      ADDRESS FIELDS IN THE SDWA             @ZMB0065 37634200
SDWA     DSECT ,                                               @ZMB0065 37634500
.SDWA012 ANOP                                                  @ZMB0065 37634800
         MEND  ,   */                                                   37635100
*%SDWABSL  :  ;                                                         37635400
*%IF SDWALVL ^= '' %THEN                                                37658200
*  %GOTO SDWABSL2;                                                      37688200
* %IF IHAVIA='YES' %THEN                  /*                     @L4A*/ 37738200
*    %IHAALET='VIA(SDWAALET)';            /*                     @L4A*/ 37788200
* %ELSE %IHAALET='';                      /*                     @L4A*/ 37838200
*DECLARE                                                                40400000
*  1 SDWA   IHAALET BASED(SDWAPTR),       /*                     @L4C*/ 40800000
*%GOTO SDWABSL3;                                                        40850000
*%SDWABSL2: ;                                                           40900000
*  SDWALVL SDWA,                                                        40950000
*%SDWABSL3: ;                                                           41000000
*   6 SDWAPARM    PTR(31),              /* PARAMETER LIST ADDRESS       41200000
*                                          IF (E)STA MACRO              41250000
*                                          SPECIFIED PARAM OPTION       41300000
*                                          OR 0. FOR FRRS THIS IS THE   41350000
*                                          ADDRESS OF THE 6 WORD PARM   41400000
*                                          AREA RETURNED BY THE SETFRR  41450000
*                                          MACRO WHEN THE PARMAD        41500000
*                                          KEYWORD IS SPECIFIED ON THE  41550000
*                                          ON THE SETFRR MACRO.         41600000
*                      FOR AN ARR, THIS IS THE ADDRESS OF THE 8-BYTES   41650000
*                       OF THE MSTA AREA.                               41700000
*                      FOR ESTAEX, THIS IS THE ADDRESS OF 8-BYTES       41750000
*                      CONTAINING THE ADDRESS AND ALET OF THE           41800000
*                      PARAMETER LIST.                               */ 41850000
*   6 SDWAFIOB    PTR(31),              /* ADDRESS OF PURGE I/O         42000000
*                                          REQUEST LIST (PIRL),         42400000
*                                          OR 0 IF HALT I/O IS          42800000
*                                          REQUESTED ON ENTRY TO        42850000
*                                          RETRY ROUTINE FOR (E)STA. */ 42900000
*    7 SDWAABCC   CHAR(4),              /* ABEND COMPLETION CODE        43600000
*                                          ON ENTRY TO EXIT ROUTINE  */ 43650000
*     8 SDWACMPF   CHAR(1),             /* FLAG BITS IN COMPLETION      44400000
*                                          CODE.                     */ 44800000
*      9 SDWAREQ    BIT(1),             /* ON,                          45200000
*                                          SYSABEND/SYSMDUMP/SYSUDUMP   45220000
*                                          DUMP TO BE GIVEN.            45240000
*                                          SET IF DUMP=YES REQUESTED    45260000
*                                          ON ABEND, CALLRTM, OR        45280000
*                                          SETRP MACRO.              */ 45350000
*      9 SDWASTEP   BIT(1),             /* ON, JOBSTEP TO BE            45600000
*                                          TERMINATED.SET IF            46000000
*                                          STEP OPTION SPECIFIED        46010000
*                                          ON ABEND MACRO.           */ 46020000
*      9 *          BIT(1),             /* INDICATES VALID ADDRESS IN   46070000
*                                          R0 FOR DUMPOPTS       @L1C*/ 46120000
*      9 SDWASTCC   BIT(1),             /* ON, IMPLIES MEMORY TERM-     46170000
*                                          INATION VIA SVC 13    @L1C*/ 46220000
*      9 *          BIT(1),             /* USED BY SVC 13 FOR NORMAL    46270000
*                                          END-OF-TASK           @L1C*/ 46320000
*      9 SDWARCF    BIT(1),             /* ON, REASON CODE SUPPLIED     47350000
*                                          ON ENTRY TO RTM   @G860P1C*/ 47400000
*      9 *          BIT(2),             /* RESERVED          @G860P1C*/ 47450000
*     8 SDWACMPC   CHAR(3),             /* SYSTEM COMPLETION CODE       48000000
*                                          (FIRST 12 BITS) AND USER     48400000
*                                          COMPLETION CODE (SECOND      48800000
*                                          12 BITS).                 */ 49200000
*   6 SDWACTL1     CHAR(8) BDY(WORD),   /* BC MODE PSW AT TIME OF       49600000
*                                          ERROR. NOT INITIALIZED       49650000
*                                          FOR FRRS.                 */ 49700000
*    7 SDWACMKA     CHAR(1),            /* CHANNEL INTERRUPTS MASKS  */ 50400000
*     8 SDWAIOA     BIT(7),             /* I/O INTERRUPTS (ALL          50800000
*                                          ZEROS OR ALL ONES).       */ 51200000
*     8 SDWAEXTA    BIT(1),             /* EXTERNAL INTERRUPT.       */ 51600000
*    7 SDWAMWPA    CHAR(1),             /* PSW KEY AND 'M-W-P'.      */ 52000000
*     8 SDWAKEYA    BIT(4),             /* PSW KEY                   */ 52400000
*     8 *           BIT(1),             /* RESERVED                  */ 52800000
*     8 SDWAMCKA    BIT(1),             /* MACHINE CHECK INTERRUPT   */ 53200000
*     8 SDWAWATA    BIT(1),             /* WAIT STATE.               */ 53600000
*     8 SDWASPVA    BIT(1),             /* SUPERVISOR/PROBLEM-          54000000
*                                          PROGRAM MODE.             */ 54400000
*    7 SDWAINTA    CHAR(2),             /* INTERRUPT CODE (LAST 2       54800000
*                                          BYTES OF INTERRUPT CODE      55200000
*                                          IF I/O INTERRUPT).        */ 55600000
*    7 SDWAPMKA    CHAR(1),             /* INSTRUCTION LENGTH CODE,     56000000
*                                          CONDITION CODE, AND          56400000
*                                          PROGRAM MASKS.            */ 56800000
*     8 SDWAILA     BIT(2),             /* INSTRUCTION LENGTH CODE   */ 57200000
*     8 SDWACCA     BIT(2),             /* LAST CONDITION CODE       */ 57600000
*     8 SDWAFPA     BIT(1),             /* FIXED-POINT OVERFLOW      */ 58000000
*     8 SDWADOA     BIT(1),             /* DECIMAL OVERFLOW          */ 58400000
*     8 SDWAEUA     BIT(1),             /* EXPONENT UNDERFLOW        */ 58800000
*     8 SDWASGA     BIT(1),             /* SIGNIFANCE                */ 59200000
*    7 SDWANXTA    PTR(24),             /* ADDRESS OF NEXT              59600000
*                                          INSTRUCTION                  60000000
*                                          TO BE EXECUTED            */ 60400000
*   6 SDWACTL2    CHAR(8) BDY(WORD),    /* BC MODE PSW FROM LAST        60800000
*                                          PRB ON RB CHAIN.             61200000
*                                          ZERO FOR FRRS.            */ 61250000
*    7 SDWACMKP    CHAR(1),             /* CHANNEL INTERRUPTS MASKS  */ 61600000
*     8 SDWAIOP     BIT(7),             /* I/O INTERRUPTS (ALL          62000000
*                                          ZEROS OR ALL ONES).       */ 62400000
*     8 SDWAEXTP    BIT(1),             /* EXTERNAL INTERRUPT.       */ 62800000
*    7 SDWAMWPP    CHAR(1),             /* PSW KEY AND 'M-W-P'.      */ 63200000
*     8 SDWAKEYP    BIT(4),             /* PSW KEY                   */ 63600000
*     8 *           BIT(1),             /* RESERVED                  */ 64000000
*     8 SDWAMCKP    BIT(1),             /* MACHINE CHECK INTERRUPT   */ 64400000
*     8 SDWAWATP    BIT(1),             /* WAIT STATE.               */ 64800000
*     8 SDWASPVP    BIT(1),             /* SUPERVISOR/PROBLEM-          65200000
*                                          PROGRAM MODE.             */ 65600000
*    7 SDWAINTP    CHAR(2),             /* INTERRUPT CODE (LAST 2       66000000
*                                          BYTES OF INTERRUPT CODE      66400000
*                                          IF I/O INTERRUPT).        */ 66800000
*    7 SDWAPMKP    CHAR(1),             /* INSTRUCTION LENGTH CODE,     67200000
*                                          CONDITION CODE, AND          67600000
*                                          PROGRAM MASKS.            */ 68000000
*     8 SDWAILP     BIT(2),             /* INSTRUCTION LENGTH CODE   */ 68400000
*     8 SDWACCP     BIT(2),             /* LAST CONDITION CODE       */ 68800000
*     8 SDWAFPP     BIT(1),             /* FIXED-POINT OVERFLOW      */ 69200000
*     8 SDWADOP     BIT(1),             /* DECIMAL OVERFLOW          */ 69600000
*     8 SDWAEUP     BIT(1),             /* EXPONENT UNDERFLOW        */ 70000000
*     8 SDWASGP     BIT(1),             /* SIGNIFICANCE              */ 70400000
*    7 SDWANXTP    PTR(24),             /* ADDRESS OF NEXT              70800000
*                                          INSTRUCTION                  71200000
*                                          TO BE EXECUTED            */ 71600000
*   6 SDWAGRSV    CHAR(64) BDY(WORD),   /* GENERAL PURPOSE              72000000
*                                          REGISTERS AT TIME OF         72400000
*                                          ERROR                     */ 72800000
*    7 SDWAGR00    FIXED(31),           /* GPR 0.                    */ 73200000
*    7 SDWAGR01    FIXED(31),           /* GPR 1.                    */ 73600000
*    7 SDWAGR02    FIXED(31),           /* GPR 2.                    */ 74000000
*    7 SDWAGR03    FIXED(31),           /* GPR 3.                    */ 74400000
*    7 SDWAGR04    FIXED(31),           /* GPR 4.                    */ 74800000
*    7 SDWAGR05    FIXED(31),           /* GPR 5.                    */ 75200000
*    7 SDWAGR06    FIXED(31),           /* GPR 6.                    */ 75600000
*    7 SDWAGR07    FIXED(31),           /* GPR 7.                    */ 76000000
*    7 SDWAGR08    FIXED(31),           /* GPR 8.                    */ 76400000
*    7 SDWAGR09    FIXED(31),           /* GPR 9.                    */ 76800000
*    7 SDWAGR10    FIXED(31),           /* GPR 10.                   */ 77200000
*    7 SDWAGR11    FIXED(31),           /* GPR 11.                   */ 77600000
*    7 SDWAGR12    FIXED(31),           /* GPR 12.                   */ 78000000
*    7 SDWAGR13    FIXED(31),           /* GPR 13.                   */ 78400000
*    7 SDWAGR14    FIXED(31),           /* GPR 14.                   */ 78800000
*    7 SDWAGR15    FIXED(31),           /* GPR 15.                   */ 79200000
*   6 SDWANAME    CHAR(8) BDY(WORD),    /* IF PROBLEM PROGRAM MODE      79600000
*                                          NAME OF ABENDING             79650000
*                                          PROGRAM, OR ZERO IF NO       80000000
*                                          NAME IS AVAILABLE.           80400000
*                                          ZERO IF NOT RUNNING          80450000
*                                          UNDER AN RB.              */ 80500000
*    7 SDWARBAD    PTR(31),             /* RB ADDRESS OF ABENDING       80800000
*                                          PROGRAM (IF SUPERVISOR       81200000
*                                          MODE PROGRAM RUNNING UNDER   81250000
*                                          AN RB).                   */ 81300000
*    7 *           CHAR(4),             /* CONTAINS ZEROS IF            82000000
*                                          SUPERVISOR MODE PROGRAM      82400000
*                                          RUNNING UNDER AN RB.         82450000
*                                          OR IF PROGRAM NOT            82500000
*                                          RUNNING UNDER AN RB.      */ 82550000
*   6 SDWAEPA    PTR(31),               /* ENTRY POINT ADDRESS OF       82800000
*                                          ABENDING PROGRAM.            83200000
*                                          ZERO IF NOT RUNNING          83250000
*                                          UNDER AN RB.              */ 83300000
*   6 SDWAIOBR   PTR(31),               /* POINTER TO SDWAFIOB FIELD,   83600000
*                                          OR 0 IF NO RETRY,            84000000
*                                          OR 0 IF HALT I/O             84400000
*                                          IS REQUESTED FOR (E)STA      84800000
*                                          EXITS. ZERO FOR FRRS.        84802000
*                                                           ICB3777  */ 84804000
*   6 SDWAEC1   CHAR(8) BDY(WORD),      /* EXTENDED CONTROL PSW  AT     84810000
*                                          TIME OF ERROR(ABEND)      */ 84844000
*     7 SDWAEMK1    CHAR(1),            /* INTERRUPT INFORMATION        84846400
*                                          MASKS                     */ 84848000
*       8 *         BIT(1),             /* RESERVED                  */ 84848400
*       8 SDWAPER1   BIT(1),            /* ON,PROGRAM EVENT RECORD-     84848800
*                                          ING INTERRUPTS CAN OCCUR     84849200
*                                          OFF,PROGRAM EVENT RECORD-    84849600
*                                          ING INTERRUPTS CANNOT        84849700
*                                          OCCUR                     */ 84849800
*       8 *           BIT(3),           /* RESERVED                  */ 84849900
*       8  SDWATRM1   BIT(1),           /* ON,ADDRESS TRANSLATION       84882600
*                                          ACTIVE                    */ 84883000
*       8 SDWAIO1    BIT(1),            /* OFF,I/O INTERRUPTIONS        84883100
*                                          CANNOT OCCUR                 84883200
*                                          ON,I/O INTERRUPTIONS CAN     84888800
*                                          OCCUR SUBJECT TO CHANNEL     84890800
*                                          MASK BITS IN CONTROL REGS    84892800
*                                          2 AND 3                   */ 84893200
*       8 SDWAEXT1    BIT(1),           /* OFF,EXTERNAL INTERRUPTIONS   84893600
*                                          CANNOT OCCUR                 84894000
*                                          ON,EXTERNAL INTERRUPTIONS    84894100
*                                          CAN OCCUR SUBJECT TO         84894200
*                                          EXTERNAL SUBCLASS MASK       84894300
*                                          BITS OF CONTROL REGISTER 0*/ 84908200
*     7 SDWAMWP1    CHAR(1),            /* PSW KEY AND 'M-W-P'       */ 84918200
*       8 SDWAKEY1   BIT(4),            /* PSW KEY                   */ 84920200
*       8 SDWAECT1   BIT(1),            /* EXTENDED CONTROL MODE BIT */ 84920600
*       8 SDWAMCK1   BIT(1),            /* OFF,MACHINE CHECKS CANNOT    84921000
*                                          OCCUR                        84921400
*                                          ON,MACHINE CHECKS DUE TO     84921800
*                                          SYSTEM DAMAGE AND            84921900
*                                          INSTRUCTION-PROCESSING       84922000
*                                          DAMAGE CAN OCCUR.  OTHER     84922100
*                                          MACHINE CHECKS SUBJECT TO    84926700
*                                          MASK BITS IN CONTROL         84928700
*                                          REGISTER 14               */ 84930700
*       8 SDWAWAT1     BIT(1),          /* ON,CPU IN WAIT STATE      */ 84931100
*       8 SDWAPGM1     BIT(1),          /* ON,PROBLEM STATE             84931200
*                                          OFF,SUPERVISOR STATE      */ 84931300
*     7 SDWAINT1     CHAR(1),           /* CONDITION CODE AND           84931400
*                                          PROGRAM MASK              */ 84936000
*       8 SDWAASCM BIT(2),              /* ADDRESS SPACE CONTROL MODE   84936300
*                                          BITS                         84936600
*                                          00 - PRIMARY MODE            84936900
*                                          01 - ACCESS REGISTER MODE    84937200
*                                          10 - SECONDARY MODE          84937500
*                                          11 - HOME SPACE MODE  @L4A*/ 84937800
*         9 SDWAS1    BIT(1),           /* ADDRESS SPACE SELECTION BIT  84938100
*                                                            @G381P2F*/ 84938600
*         9 *         BIT(1),           /* RESERVED          @G381P2F*/ 84939200
*       8 SDWACC1     BIT(2),           /* CONDITION CODE            */ 84940000
*       8 SDWAFPO1    BIT(1),           /* FIXED POINT OVERFLOW      */ 84940400
*       8 SDWADEC1    BIT(1),           /* DECIMAL OVERFLOW          */ 84940500
*       8 SDWAEXP1    BIT(1),           /* EXPONENT UNDERFLOW        */ 84940600
*       8 SDWASGN1    BIT(1),           /* SIGNIFICANCE              */ 84940700
*     7 *            CHAR(1),           /* RESERVED                  */ 84952500
*     7 SDWANXT1     PTR(31),           /* ADDRESS OF NEXT              84962500
*                                          INSTRUCTION TO BE            84964500
*                                          EXECUTED                  */ 84968400
*       8 SDWAAMF1     CHAR(1),         /* ADDRESSING MODE FLAG         84968500
*                                                            @G860P1S*/ 84968600
*         9 SDWAMOD1     BIT(1),        /* ADDRESSING MODE OF THE NEXT  84968700
*                                          INSTRUCTION TO BE EXECUTED   84968800
*                                                            @G860P1S*/ 84968900
*       8 SDWAADD1     PTR(24),         /* INSTRUCTION ADDRESS       */ 84969000
*   6 SDWAAEC1       CHAR(8) BDY(WORD), /* ADDITIONAL EC MODE           84969100
*                                          INFORMATION               */ 84969200
*     7 *              CHAR(1),         /* RESERVED                  */ 84969600
*     7 SDWAILC1        PTR(8),         /* INSTRUCTION LENGTH CODE      84970400
*                                          FOR PSW DEFINED BY SDWAEC1*/ 84972400
*       8 *             BIT(5),         /* RESERVED  ALWAYS ZERO     */ 84976300
*       8 SDWAIL1       BIT(2),         /* INSTRUCTION LENGTH CODE   */ 84978300
*       8 *             BIT(1),         /* RESERVED  ALWAYS ZERO     */ 84982300
*     7 SDWAINC1     FIXED(16),         /* INTERRUPT CODE. IF PROGRAM   84984300
*                                          CHECK OCCURRED               84984400
*                                          THE SUBFIELDS ARE            84984500
*                                          FURTHER DIVIDED           */ 84984600
*       8 *            CHAR(1),         /* RESERVED FOR IMPRECISE       84984800
*                                          INTERRUPTS                   84987700
*                                          IF PROGRAM CHECK          */ 84988100
*       8 SDWAICD1      PTR(8),         /* 8 BIT INTERRUPT CODE         84989700
*                                          IF PROGRAM CHECK          */ 84991700
*         9 SDWAIPR1   BIT(1),          /* PER INTERRUPT OCCURRED    */ 84997800
*         9 SDWAIMC1   BIT(1),          /* MONITOR CALL INTERRUPT       84997900
*                                          OCCURRED                  */ 84998000
*         9 SDWAIPC1   BIT(6),          /* AN UNSOLICITED PROGRAM       84998100
*                                          CHECK HAS OCCURRED        */ 84998800
*     7 SDWATRAN   PTR(31),             /* VIRTUAL ADDRESS CAUSING      84999200
*                                          TRANSLATION EXCEPTION     */ 84999600
*     9 * CHAR(3),                      /* First 3 bytes         @LKA*/ 84999700
*     9 SDWADXC FIXED(8),               /* Data exception code when     84999800
*                                          interrupt code 7      @LKA*/ 84999900
*       11 * BIT(5),                    /*                       @LIA*/ 85000000
*       11 SDWASOPI BIT(1),             /* When on for interrupt code   85000100
*                                          4, indicates suppress on     85000200
*                                          protect               @LIA*/ 85000300
*       11 * BIT(2),                    /*                       @LIA*/ 85000400
*   6 SDWAEC2    CHAR(8) BDY(WORD),     /* EC MODE PSW OF THE RB LEVEL  85000500
*                                          OR LINKAGE STACK LEVEL       85000600
*                                          WHICH CREATED THE ESTAE      85001000
*                                          EXIT AT THE TIME IT LAST     85004000
*                                          INCURRED AN INTERRUPT        85007000
*                                          OR 0 FOR ESTAI.              85010000
*                                          OR PSW USED TO GIVE FRR      85012000
*                                          CONTROL               @02C*/ 85012500
*     7 SDWAEMK2        CHAR(1),        /* INTERRUPT INFORMATION        85013000
*                                          MASKS                     */ 85016000
*       8 *           BIT(1),           /* RESERVED                  */ 85019000
*       8 SDWAPER2    BIT(1),           /* ON,PROGRAM EVENT RECORD-     85022000
*                                          ING INTERRUPTS CAN OCCUR     85025000
*                                          OFF,PROGRAM EVENT RECORD-    85028000
*                                          ING INTERRUPTS CANNOT        85031000
*                                          OCCUR                     */ 85034000
*       8 *           BIT(3),           /* RESERVED                  */ 85037000
*       8 SDWATRM2    BIT(1),           /* ON,ADDRESS TRANSLATION       85052000
*                                          ACTIVE                    */ 85055000
*       8 SDWAIO2     BIT(1),           /* OFF,I/O INTERRUPTIONS        85058000
*                                          CANNOT OCCUR                 85061000
*                                          ON,I/O INTERRUPTIONS CAN     85064000
*                                          OCCUR SUBJECT TO CHANNEL     85067000
*                                          MASK BITS IN CONTROL REGS    85070000
*                                          2 AND 3                   */ 85073000
*       8 SDWAEXT2    BIT(1),           /* OFF,EXTERNAL INTERRUPTIONS   85076000
*                                          CANNOT OCCUR                 85079000
*                                          ON,EXTERNAL INTERRUPTIONS    85082000
*                                          CAN OCCUR SUBJECT TO         85085000
*                                          EXTERNAL SUBCLASS MASK       85088000
*                                          BITS OF CONTROL REGISTER 0*/ 85091000
*     7 SDWAMWP2    CHAR(1),            /* PSW KEY AND 'M-W-P'       */ 85094000
*       8 SDWAKEY2   BIT(4),            /* PSW KEY                   */ 85097000
*       8 SDWAECT2   BIT(1),            /* EXTENDED CONTROL MODE BIT */ 85100000
*       8 SDWAMCK2   BIT(1),            /* OFF,MACHINE CHECKS CANNOT    85103000
*                                          OCCUR                        85106000
*                                          ON,MACHINE CHECKS DUE TO     85109000
*                                          SYSTEM DAMAGE AND            85112000
*                                          INSTRUCTION-PROCESSING       85115000
*                                          DAMAGE CAN OCCUR.  OTHER     85118000
*                                          MACHINE CHECKS SUBJECT TO    85121000
*                                          MASK BITS IN CONTROL         85124000
*                                          REGISTER 14               */ 85127000
*       8 SDWAWAT2     BIT(1),          /* ON,CPU IN WAIT STATE      */ 85130000
*       8 SDWAPGM2     BIT(1),          /* ON,PROBLEM STATE             85133000
*                                          OFF,SUPERVISOR STATE      */ 85136000
*     7 SDWAINT2     CHAR(1),           /* CONDITION CODE AND           85139000
*                                          PROGRAM MASK              */ 85142000
*       8 SDWAS2      BIT(1),           /* ADDRESS SPACE SELECTION BIT  85145000
*                                                            @G381P2F*/ 85146000
*       8 *           BIT(1),           /* RESERVED          @G381P2F*/ 85147000
*       8 SDWACC2     BIT(2),           /* CONDITION CODE            */ 85148000
*       8 SDWAFPO2    BIT(1),           /* FIXED POINT OVERFLOW      */ 85151000
*       8 SDWADEC2    BIT(1),           /* DECIMAL OVERFLOW          */ 85154000
*       8 SDWAEXP2    BIT(1),           /* EXPONENT UNDERFLOW        */ 85157000
*       8 SDWASGN2    BIT(1),           /* SIGNIFICANCE              */ 85160000
*     7 *            CHAR(1),           /* RESERVED                  */ 85163000
*     7 SDWANXT2     PTR(31),           /* ADDRESS OF NEXT              85166000
*                                          INSTRUCTION TO BE            85169000
*                                          EXECUTED                  */ 85172000
*       8 SDWAAMF2     CHAR(1),         /* ADDRESSING MODE FLAG         85173000
*                                                            @G860P1S*/ 85174000
*         9 SDWAMOD2     BIT(1),        /* ADDRESSING MODE OF THE NEXT  85175000
*                                          INSTRUCTION TO BE EXECUTED   85176000
*                                                            @G860P1S*/ 85177000
*       8 SDWAADD2    PTR(24),          /* INSTRUCTION ADDRESS       */ 85178000
*   6 SDWAAEC2     CHAR(8) BDY(WORD),   /* ADDITIONAL EC MODE           85184000
*                                          INFORMATION               */ 85187000
*     7 *             CHAR(1),          /* RESERVED                  */ 85189000
*     7 SDWAILC2       CHAR(1),         /* INSTRUCTION LENGTH CODE      85190000
*                                          FOR PSW DEFINED BY SDWAEC2*/ 85193000
*       8 *             BIT(5),         /* RESERVED ALWAYS ZERO      */ 85196000
*       8 SDWAIL2       BIT(2),         /* INSTRUCTION LENGTH CODE   */ 85199000
*       8 *             BIT(1),         /* RESERVED ALWAYS ZERO      */ 85202000
*     7 SDWAINC2  FIXED(16),            /* INTERRUPT CODE. IF PROGRAM   85205000
*                                          CHECK OCCURRED               85205100
*                                          THE SUBFIELDS ARE            85205400
*                                          FURTHER DIVIDED           */ 85205800
*       8 *            CHAR(1),         /* RESERVED FOR IMPRECISE       85207000
*                                          INTERRUPTS                   85209000
*                                          ON PROGRAM CHECK INTERRUPT*/ 85209100
*       8 SDWAICD2      PTR(8),         /* 8 BIT INTERRUPT CODE         85209400
*                                          IF PROGRAM CHECK          */ 85209500
*         9 SDWAIPR2      BIT(1),       /* PER INTERRUPT OCCURRED    */ 85209800
*         9 SDWAIMC2      BIT(1),       /* MONITOR CALL INTERRUPT       85210200
*                                          OCCURRED                  */ 85210600
*         9 SDWAIPC2      BIT(6),       /* AN UNSOLICITED PROGRAM       85210700
*                                          CHECK OCCURRED            */ 85210800
*     7 SDWATRN2   PTR(31),             /* VIRTUAL ADDRESS CAUSING      85210900
*                                          TRANSLATION EXCEPTION     */ 85216400
*   6 SDWASRSV  CHAR(64) BDY(WORD),     /* GENERAL PURPOSE              85223000
*                                          REGISTERS OF THE RB          85228500
*                                          LEVEL OR LINKAGE STACK       85231200
*                                          LEVEL WHICH CREATED THE      85234000
*                                          ESTAE EXIT AT THE TIME       85239500
*                                          IT LAST INCURRED             85245000
*                                          AN INTERRUPT                 85250500
*                                          OR 0 FOR ESTAI.              85256000
*                                          FOR FRRS INITIALIZED TO      85256400
*                                          REGISTERS AT TIME OF         85256800
*                                          ERROR.  THIS                 85257200
*                                          REGISTER AREA IS USED TO     85258000
*                                          UPDATE REGISTER CONTENTS     85260000
*                                          FOR RETRY IF REQUESTED    */ 85260400
*     7 SDWASR00    FIXED(31),          /* GPR 0.                    */ 85261500
*     7 SDWASR01    FIXED(31),          /* GPR 1.                    */ 85267000
*     7 SDWASR02    FIXED(31),          /* GPR 2.                    */ 85272500
*     7 SDWASR03    FIXED(31),          /* GPR 3.                    */ 85278000
*     7 SDWASR04    FIXED(31),          /* GPR 4.                    */ 85283500
*     7 SDWASR05    FIXED(31),          /* GPR 5.                    */ 85289000
*     7 SDWASR06    FIXED(31),          /* GPR 6.                    */ 85294500
*     7 SDWASR07    FIXED(31),          /* GPR 7.                    */ 85300000
*     7 SDWASR08    FIXED(31),          /* GPR 8.                    */ 85350000
*     7 SDWASR09    FIXED(31),          /* GPR 9.                    */ 85400000
*     7 SDWASR10    FIXED(31),          /* GPR 10,                   */ 85450000
*     7 SDWASR11    FIXED(31),          /* GPR 11.                   */ 85500000
*     7 SDWASR12    FIXED(31),          /* GPR 12.                   */ 85550000
*     7 SDWASR13    FIXED(31),          /* GPR 13.                   */ 85600000
*     7 SDWASR14    FIXED(31),          /* GPR 14.                   */ 85650000
*     7 SDWASR15    FIXED(31),          /* GPR 15.                   */ 85750000
*   6 SDWAIDNT       CHAR(4),           /* SDWA IDENTIFICATION          85760000
*                                          AND ATTRIBUTES            */ 85770000
*     7 SDWASPID     CHAR(1),           /* SUBPOOL ID OF STORAGE        85780000
*                                          CONTAINING THIS SDWA      */ 85790000
*     7 SDWALNTH     CHAR(3),           /* LENGTH OF THIS SDWA IN       85792000
*                                          BYTES                     */ 85794000
*   6 SDWAMCH        CHAR(28) BDY(WORD), /*CONTAINS MACHINE CHECK       85796000
*                                          DATA IF SDWAMCHK IS ON    */ 85798000
*     7 SDWASTCK       CHAR(8) BDY(WORD),/*BEGINNING AND ENDING         85800000
*                                          STORAGE CHECK ADDRESSES.     85850000
*                                          FILLED IN DUE TO             85860000
*                                          STORAGE ERROR (SDWASCK)      85870000
*                                          OR A KEY FAILURE (SDWASKYF)  85880000
*                                          THESE ADDRESSES ARE VALID    85890000
*                                          ONLY IF INDICATED BY THE     85892000
*                                          SDWASRVL FLAG.            */ 85894000
*       8 SDWASCKB      PTR(31),        /* BEGINNING VIRTUAL ADDRESS    85900000
*                                          OF STORAGE CHECK          */ 85950000
*       8 SDWASCKE      PTR(31),        /* ENDING VIRTUAL ADDRESS       86000000
*                                          OF STORAGE CHECK          */ 86010000
*     7 SDWAMCHI       CHAR(2),         /* ADDITIONAL MCH INFORMATION   86060000
*                                          FLAGS                     */ 86070000
*       8 SDWAMCHS      CHAR(1),        /* MCH FLAG BYTE             */ 86110000
*         9 SDWASRVL     BIT(1),        /* ON,STORAGE ADDRESS           86160000
*                                          SUPPLIED (SDWASTCK,          86210000
*                                          SDWARFSA) ARE VALID.         86211600
*                                  On ESAME system, SDWARFSA contains   86213200
*                                  only the low word of the FSA.        86214800
*                                  SDWARFSE contains the 8-byte         86216400
*                                  FSA.                          @LIC*/ 86218200
*         9 SDWARCDF     BIT(1),        /* ON,MACHINE CHECK RECORD      86220000
*                                          NOT RECORDED              */ 86260000
*         9 SDWATSVL     BIT(1),        /* ON,TIME STAMP VALID       */ 86310000
*         9 SDWAINVP     BIT(1),        /* ON,STORAGE IS RECONFIGURED,  86360000
*                                          PAGE IS INVALIDATED.      */ 86362000
*         9 SDWARSRC     BIT(1),        /* ON,STORAGE RECONFIGURATION   86370000
*                                          STATUS AVAILABLE             86420000
*                                          (SDWARSR1,SDWARSR2)       */ 86422000
*         9 SDWARSRF     BIT(1),        /* ON,STORAGE RECONFIGURATION   86430000
*                                          NOT ATTEMPTED (SDWARSR1,     86440000
*                                          SDWARSR2 ARE INVALID )    */ 86450000
*         9 SDWAVRIV     BIT(1),        /* ON, INDICATES VECTOR         86452000
*                                          REGISTERS ARE UNPREDICTABLE  86454000
*                                                                @H1A*/ 86456000
*         9 SDWAARGU     BIT(1),        /* ON, INDICATES ACCESS         86457000
*                                          REGISTERS ARE UNPREDICTABLE  86458000
*                                                                @L5C*/ 86459000
*       8 SDWAMCHD     CHAR(1),         /* INPUT INFORMATION            86460000
*                                          TO RECOVERY ROUTINE CON-     86470000
*                                          CERNING A MACHINE CHECK      86480000
*                                          ERROR                     */ 86490000
*         9 SDWASKYF    BIT(1),         /* ON,STORAGE KEY FAILURE    */ 86492000
*         9 SDWAREGU    BIT(1),         /* ON,GENERAL PURPOSE REGISTER  86494000
*                                          CONTENTS AT TIME OF MACHINE  86496000
*                                          CHECK UNPREDICTABLE       */ 86498000
*         9 SDWAPSWU    BIT(1),         /* ON,PSW AND-OR CONTROL        86498400
*                                          REGISTERS AT TIME OF MACHINE 86498500
*                                          CHECK UNPREDICTABLE       */ 86498800
*         9 SDWASCK     BIT(1),         /* ON,STORAGE DATA CHECK     */ 86499200
*         9 SDWAACR     BIT(1),         /* ON,INDICATES ACR REQUEST  */ 86499600
*         9 SDWAINSF    BIT(1),         /* ON,INSTRUCTION FAILURE    */ 86499700
*         9 SDWAFPRX    BIT(1),         /* ON, CONTENTS OF FLOATING     86509700
*                                          POINT REGISTERS              86509800
*                                          AT TIME OF MACHINE CHECK     86510500
*                                          ARE UNPREDICTABLE         */ 86510900
*         9 SDWATERR    BIT(1),         /* ON,TIMER ERROR - CAUSES      86511000
*                                          ENTRY TO RECOVERY ROUTINES   86512800
*                                          ONLY IF LOGOUT FAILED     */ 86514800
*     7 SDWACPID     CHAR(2),           /* ID OF FAILING CPU CAUSING    86515900
*                                          ACR                       */ 86517700
*     7 SDWARSR1     CHAR(1),           /* ADDITIONAL STORAGE FRAME     86519500
*                                          ERROR INDICATORS AS          86521300
*                                          RETURNED FROM REAL STORAGE   86523100
*                                          RECONFIGURATION           */ 86524900
*       8 *               BIT(2),       /* RESERVED          @G860P1F*/ 86525300
*       8 SDWAPREF        BIT(1),       /* PREFERRED FRAME   @G860P1F*/ 86525700
*       8 SDWAVRCN        BIT(1),       /* V = R CANDIDATE - CAN GO     86526100
*                                          OFFLINE           @G860P1F*/ 86526500
*       8 SDWANSWP        BIT(1),       /* LONG-TERM NON-SWAPPABLE      86526900
*                                          ADDRESS SPACE     @G860P1F*/ 86527300
*       8 SDWANSWA        BIT(1),       /* NON-SWAPPABLE ADDRESS        86527700
*                                          SPACE             @G860P1F*/ 86528100
*       8 SDWAMSER        BIT(1),       /* STORAGE ERROR ALREADY        86528500
*                                          SET IN FRAME              */ 86530300
*       8 SDWACHNG        BIT(1),       /* CHANGE INDICATOR WAS         86532100
*                                          ON IN FRAME               */ 86533900
*     7 SDWARSR2        CHAR(1),        /* ADDITIONAL STORAGE           86535700
*                                          ERROR INDICATORS.         */ 86537500
*       8 SDWAOFLN        BIT(1),       /* FRAME OFFLINE OR             86539300
*                                          SCHEDULED TO GO OFFLINE      86541100
*                                          IF SDWAINTC IS ON         */ 86542900
*       8 SDWAINTC        BIT(1),       /* INTERCEPT                    86544700
*                                          THE FRAME IS SCHEDULED       86546500
*                                          TO GO OFFLINE                86548300
*                                                OR                     86550300
*                                          THE FRAME HAS INCURRED       86550400
*                                          A STORAGE ERROR              86550500
*                                          OR IS V=R INTERCEPTED        86555000
*                                                            @G860P1F*/ 86559500
*       8 SDWASPER        BIT(1),       /* STORAGE ERROR PERMANENT      86564000
*                                          ON FRAME                  */ 86568300
*       8 SDWANUCL        BIT(1),       /* FRAME CONTAINS PERMANENT     86572600
*                                          RESIDENT STORAGE,I.E.        86576900
*                                          NUCLEUS.                  */ 86581200
*       8 SDWAFSQA        BIT(1),       /* FRAME IN SQA              */ 86585500
*       8 SDWAFLSQ        BIT(1),       /* FRAME IN LSQA             */ 86589800
*       8 SDWAPGFX        BIT(1),       /* FRAME IS PAGE FIXED       */ 86594100
*       8 SDWAVEQR        BIT(1),       /* FRAME IS VIRTUAL=REAL        86598400
*                                                            @G860P1F*/ 86604800
*     7 SDWAMCHO        CHAR(1),        /* OTHER MCH FLAGS       @04A*/ 86606600
*       8 SDWASKPR        BIT(1),       /* SKIP RECORDING REQUESTED     86608400
*                                          BY MCH                @04A*/ 86610200
*       8 *               BIT(7),       /* RESERVED              @04A*/ 86612000
*     7 *               CHAR(1),        /* RESERVED              @04C*/ 86613800
*     7 SDWARFSA        PTR(31),        /* REAL STORAGE FAILING         86615600
*                                          ADDRESS. ( VALID ONLY IF     86619900
*                                          INDICATED BY SDWASRVL )   */ 86624200
*     7 SDWATIME        CHAR(8),        /* TIME STAMP OF ASSOCIATED     86628500
*                                          MACHINE CHECK RECORD.     */ 86632800
*   6 SDWAFLGS        CHAR(4),          /* INPUT FLAGS DESCRIBING       86637100
*                                          REASONS AND CONDITIONS       86641400
*                                          FOR ENTERING A RECOVERY      86645700
*                                          EXIT ROUTINE              */ 86650000
*     7 SDWAERRA     CHAR(1),           /* ERROR TYPE CAUSING ENTRY     87350000
*                                          TO RECOVERY ROUTINE       */ 87400000
*       8 SDWAMCHK    BIT(1),           /* ON,MACHINE CHECK          */ 87450000
*       8 SDWAPCHK    BIT(1),           /* ON,PROGRAM CHECK          */ 87500000
*       8 SDWARKEY    BIT(1),           /* ON,INDICATES CONSOLE         87550000
*                                          RESTART KEY DEPRESSED     */ 87600000
*       8 SDWASVCD    BIT(1),           /* ON,INDICATES TASK ISSUED     87650000
*                                          SVC 13                    */ 87700000
*       8 SDWAABTM    BIT(1),           /* ON,INDICATES SYSTEM FORCED   87750000
*                                          SVC 13(ABTERM)            */ 87800000
*       8 SDWASVCE    BIT(1),           /* ON,INDICATES AN SVC WAS      87802000
*                                          ISSUED BY A LOCKED OR        87804000
*                                          SRB ROUTINE               */ 87806000
*       8 SDWATEXC    BIT(1),           /* ON,INDICATES AN              87808000
*                                          UNRECOVERABLE TRANSLATION    87808400
*                                          FAILURE                   */ 87808800
*       8 SDWAPGIO    BIT(1),           /* ON,INDICATES A PAGE          87809200
*                                          I/O ERROR                 */ 87809600
*         9 SDWASTRM  BIT(1),           /* ON,INDICATES AN RTM1 SERVICE 87810700
*                                          ROUTINE (SUCH AS IEAVTSR1    87811800
*                                          PROCESSING ITERM OR IEAVTRTM 87812900
*                                          PROCESSING STERM) SCHEDULED  87814000
*                                          RTM1 TO CONTINUE PROCESSING  87815100
*                                          AS AN SVC ERROR (BY PUTTING  87816200
*                                          SVC 13 IN THE PSW TO BE      87817300
*                                          DISPATCHED).      @G38AP1F*/ 87818400
*     7 SDWAERRB     CHAR(1),           /* ADDITIONAL ERROR ENTRY       87820000
*                                          INFORMATION               */ 87830000
*       8 SDWAPDIP    BIT(1),           /* ON INDICATES THAT THIS TASK  87832500
*                                          WAS PARALLEL DETACHED -      87833200
*                                          RECOVERY ROUTINES FOR OTHER  87833900
*                                          TASKS IN THIS ADDRESS SPACE  87834600
*                                          MAY BE EXECUTING AT THE      87835300
*                                          SAME TIME AS THIS RECOVERY   87836000
*                                          ROUTINE               @LHA*/ 87836700
*       8 *           BIT(3),           /* RESERVED              @LHC*/ 87837500
*       8 SDWATYP1    BIT(1),           /* ON,TYPE1 SVC IN CONTROL AT   87840000
*                                          TIME OF ERROR             */ 87842000
*       8 SDWAENRB    BIT(1),           /* ON,ENABLED RB IN CONTROL     87844000
*                                           AT TIME OF ERROR         */ 87846000
*       8 SDWALDIS    BIT(1),           /* ON,A LOGICALLY OR PHYSICALLY 87848000
*                                          DISABLED ROUTINE WAS IN      87848400
*                                          CONTROL AT TIME OF ERROR. */ 87848800
*       8 SDWASRBM   BIT(1),            /* SYSTEM IN SRB MODE AT TIME   87849700
*                                          OF ERROR                  */ 87849800
*     7 SDWAERRC     CHAR(1),           /* ADDITIONAL ERROR ENTRY       87849900
*                                          INFORMATION               */ 87866600
*       8 SDWASTAF    BIT(1),           /* ON,A PREVIOUS (E)STA EXIT    87952000
*                                          OR FRR FAILED             */ 87954000
*       8 SDWASTAI    BIT(1),           /* ON, A (E)STAI EXIT           87956000
*                                          PREVIOUSLY RECEIVED          87958000
*                                          CONTROL                   */ 87958400
*       8 SDWAIRB    BIT(1),            /* ON,AN IRB PRECEDED THE RB    87960000
*                                          THAT IS ASSOCIATED WITH      87962000
*                                          THIS EXIT                 */ 87970000
*       8 SDWAPERC    BIT(1),           /* ON,THIS RECOVERY ROUTINE     87980000
*                                          IS BEING PERCOLATED TO    */ 87990000
*       8 SDWAEAS    BIT(1),            /* ON INDICATES A LOWER LEVEL   87990400
*                                          EXIT HAS RECOGNIZED AN       87990800
*                                          ERROR AND PROVIDED SERVICE-  87991200
*                                          ABILITY INFORMATION       */ 87991600
*       8 SDWASKIP   BIT(1),            /* ON INDICATES FRRS WERE       87992000
*                                          SKIPPED           @G381P2F*/ 87993300
*       8 SDWALCL    BIT(1),            /* ON IND ENTRY AS A LOCAL      87994600
*                                          RESOURCE MGR      @G382P2F*/ 87995900
*       8 SDWAGLBL   BIT(1),            /* ON IND ENTRY AS A GLOBAL     87997200
*                                          RESOURCE MGR      @G382P2F*/ 87998500
*     7 SDWAERRD     CHAR(1),           /* ADDITIONAL ERROR ENTRY       88000000
*                                          INFORMATION.              */ 88010000
*       8 SDWACLUP    BIT(1),           /* ON,INDICATES RECOVERY        88020000
*                                          ROUTINE ONLY TO CLEANUP      88030000
*                                          AND NOT RETRY (IF ESTA       88040000
*                                          EXIT AND 33E                 88050000
*                                          COMPLETION CODE THE DUMP     88090000
*                                          IS TAKEN AFTER ENTRY TO      88140000
*                                          THE RECOVERY ROUTINE,IF      88190000
*                                          THE COMPLETION CODE IS OTHER 88240000
*                                          THAN 33E AND IT IS AN        88250000
*                                          ESTA EXIT THE                88260000
*                                          DUMP IS TAKEN BEFORE         88290000
*                                          ENTRY TO THE RECOVERY        88292000
*                                          ROUTINE)                  */ 88294000
*       8 SDWANRBE    BIT(1),           /* ON,RB ASSOCIATED WITH THIS   88300000
*                                          ESTA EXIT WAS NOT IN CONTROL 88350000
*                                          AT TIME OF ERROR          */ 88400000
*       8 SDWASTAE    BIT(1),           /* ON,THIS ESTA EXIT HAS        88600000
*                                          BEEN ENTERED FOR A PREVIOUS  88650000
*                                          ABEND. NEVER ON FOR FRRS. */ 88652000
*       8 SDWACTS     BIT(1),           /* ON,THIS TASK WAS NOT IN      88702000
*                                          CONTROL AT TIME OF ERROR     88752000
*                                          BUT A TASK WITHIN THE SAME   88802000
*                                          JOBSTEP TREE REQUESTED A     88852000
*                                          'STEP' ABEND. ONLY 'ON'      88902000
*                                          IF SDWACLUP IS 'ON'.      */ 88952000
*       8 SDWAMABD    BIT(1),           /* ON,THIS TASK WAS NOT IN      89002000
*                                          CONTROL AT TIME OF ERROR     89052000
*                                          BUT AN ANCESTOR OF THIS      89102000
*                                          TASK HAS ABENDED. ONLY       89152000
*                                          'ON' IF SDWACLUP IS 'ON'  */ 89202000
*       8 SDWARPIV    BIT(1),           /* ON, THE REGISTERS, PSW AND   89302000
*                                          CONTROL REGISTERS AT TIME    89325300
*                                          OF ERROR ARE UNAVAILABLE  */ 89348600
*       8 SDWAMCIV    BIT(1),           /* ON, MACHINE CHECK ERROR      89372000
*                                          INFORMATION IS               89374000
*                                          UNAVAILABLE.              */ 89376000
*       8 SDWAERFL    BIT(1),           /* ON, ERRORID INFORMATION      89379000
*                                          IN SDWA           @G17EP5W*/ 89382000
*    6 SDWAFMID     CHAR(2),            /* ASID OF MEMORY IN WHICH      89392000
*                                          ERROR OCCURRED               89394000
*                                          =0, IF MEMORY IS CURRENT     89394400
*                                          NOT=0, IF OTHER MEMORY       89394800
*                                          IS CURRENT.                  89395200
*                                            FOR FRRS-                  89395600
*                                          IF THE VALUE IS NON ZERO     89395700
*                                          THE FRR IS RECEIVING         89395900
*                                          CONTROL IN THE MASTER        89396000
*                                          SCHEDULER ADDRESS SPACE      89397700
*                                          AND CANNOT ADDRESS THE       89399700
*                                          PRIVATE AREA OF THE          89400100
*                                          FAILING ADDRESS SPACE.       89400200
*                                            FOR ESTA-                  89400300
*                                          IF THE VALUE IS NON ZERO     89402400
*                                          ENTRY IS DUE TO CROSS        89404400
*                                          MEMORY ABTERM.            */ 89404800
*    6 SDWAIOFS     CHAR(1),            /* THIS IS THE CURRENT I/O      89405600
*                                          STATUS.(THE I/O              89407700
*                                          PROCESSING REQUESTED BY      89409800
*                                          THE FIRST (E)STA EXIT        89411900
*                                          IS THE ONLY REQUEST          89414000
*                                          HONORED )                 */ 89416100
*       8 SDWAIOQR    BIT(1),           /*  ON,I/O FOR FAILING          89418200
*                                          PROGRAM HAS BEEN QUIESCED    89420300
*                                          AND IS RESTOREABLE        */ 89422400
*       8 SDWAIOHT    BIT(1),           /* ON,I/O FOR FAILING           89424500
*                                          PROGRAM IS HALTED AND IS     89426600
*                                          NOT RESTOREABLE           */ 89428600
*       8 SDWANOIO    BIT(1),           /* ON,FAILING PROGRAM HAS NO    89430600
*                                          I/O OUTSTANDING           */ 89432600
*       8 SDWANIOP    BIT(1),           /* ON,USER REQUESTED NO I/O     89433000
*                                          PROCESSING                */ 89433100
*      8 *            BIT(4),           /* RESERVED                  */ 89433200
*   6 SDWACPUI        PTR(8),           /* ERRORID CPUID     @G17EP5W*/ 89435200
*   6 SDWARTYA        PTR(31),          /* ADDRESS OF RETRY ROUTINE  */ 89444400
*     7 SDWARTYF      CHAR(1),          /* ADDRESSING MODE INDICATOR    89445200
*                                          BYTE              @G860P1S*/ 89446000
*       8 SDWAAMOD     BIT(1),          /* ADDRESSING MODE OF THE RETRY 89446800
*                                          ROUTINE           @G860P1S*/ 89447600
*     7 *             CHAR(3),          /* LOW ORDER 3 BYTES OF THE     89448400
*                                          RETRY ADDRESS.    @G860P1S*/ 89449200
*   6 SDWARECA        PTR(31),          /* ADDRESS OF VARIABLE          89450000
*                                          RECORDING AREA WITHIN SDWA*/ 89500000
*   6 SDWACPUA        CHAR(4) BDY(WORD),/* ADDRESS OF CPU HOLDING       89883300
*                                          RESOURCE WHICH CAUSES        89900000
*                                          VALID SPIN ON CURRENT        89950000
*                                          CPU-USED WITH RESTART KEY    90000000
*                                          ERROR TYPE.IF THIS FIELD     90050000
*                                          IS VALIDLY FILLED IN BY AN   90060000
*                                          FRR THE FRRS MAINLINE        90070000
*                                          PROGRAM WILL BE RESUMED AT   90080000
*                                          THE NEXT SEQUENTIAL          90090000
*                                          INSTRUCTION. NOT VALID FOR   90092000
*                                          ESTAE EXITS.              */ 90094000
*     7 *             CHAR(2),          /* RESERVED                  */ 90095000
*     7 SDWALCPU     PTR(15) BDY(HWORD),/* LOGICAL ADDRESS OF CPU       90096000
*                                          HOLDING RESOURCE          */ 90097000
*   6 SDWAPARQ        CHAR(4),          /* FLAGS SET BY RECOVERY        90100000
*                                          ROUTINE TO REQUEST FUR-      90150000
*                                          THEIR PROCESSING ACTION   */ 90200000
*     7  SDWARCDE    FIXED(8),          /* RETURN CODE FROM RECOVERY    90250000
*                                          ROUTINE TO INDICATE RETRY    90300000
*                                          OR TERMINATION ACTIONS :     90350000
*                                          0, CONTINUE WITH TERMINATION 90360000
*                                          THIS INDICATION IMPLIES      90362000
*                                          PERCOLATION                  90364000
*                                          4, RETRY                     90370000
*                                          16, PREVENT FURTHER (E)STAI  90380000
*                                              PROCESSING        @L3C*/ 90390000
*     7 SDWAACF2      CHAR(1),          /* FLAGS TO INDICATE ADDITIO-   90400000
*                                          NAL PROCESSING REQUESTS   */ 90450000
*       8 SDWARCRD     BIT(1),          /* ON,RECORDING REQUESTED    */ 90500000
*       8 SDWARFXM     BIT(1),          /* ON,RETRY TO FULLXM AT TIME   90516600
*                                          OF FRR SET. CAN ONLY BE      90533200
*                                          USED BY MODE=PRIMARY FRRS    90550000
*                                          @P8A*/                       90575000
*       8 SDWASPIN     BIT(1),          /* ON,PROGRAM INTERRUPTED       90600000
*                                          VIA THE RESTART KEY WAS      90650000
*                                          IN A VALID SPIN(SET BY       90700000
*                                          THE SETRP MACRO WHEN CPU     90702000
*                                          ADDRESS IS SPECIFIED ALONG   90702100
*                                          WITH CPU ADDRESS IN SDWACPUA 90702200
*                                          FIELD TO ALLOW RESTART       90702800
*                                          OF ALTERNATE CPU)         */ 90703200
*       8 SDWARERR     BIT(1),          /* ON,RETRY USING THE CROSS     90753200
*                                          MEMORY ADDRESSING ENV        90777600
*                                          AT THE TIME OF THE ERROR.    90802000
*                                          OFF,RETRY USING THE CROSS    90826400
*                                          MEMORY ADDR ENV ON ENTRY     90850800
*                                          TO THE FRR.       @G381P2F*/ 90875200
*       8 SDWAUPRG     BIT(1),          /* ON,UPDATED REGISTERS         90900000
*                                          STARTING WITH SDWASR00       90950000
*                                          ARE TO BE USED FOR RETRY  */ 91000000
*       8 SDWAFREE     BIT(1),          /* ON,SDWA (RTCA) TO BE FREED   91050000
*                                          PRIOR TO RETRY. ONLY VALID   91052000
*                                          FOR ESTA EXITS            */ 91054000
*       8 SDWASERP     BIT(1),          /* ON,SERIALIZE PERCOLATION     91060000
*                                          (USED WHEN AN SRB MODE FRR   91066600
*                                          PERCOLATES SERIALLY TO A     91073200
*                                          RELATED TASK)     @G381P2F*/ 91079800
*       8 SDWACML      BIT(1),          /* ON,FREE THE CROSS MEMORY     91086400
*                                          LOCAL LOCK        @G381P2F*/ 91093000
*     7 SDWAACF3      CHAR(1),          /* FLAGS INDICATING SOME GLOBAL 91105000
*                                          LOCKS TO BE FREED.  ONLY     91117000
*                                          VALID FOR FRRS.  OTHER       91129000
*                                          LOCKS ARE INDICATED AT       91141000
*                                          SDWAFLK1 AND SDWAFLK2.       91153000
*                                                            @G860P1S*/ 91165000
*       8 SDWAFRSX    BIT(1),           /* ON, THE RSM CROSS MEMORY     91177000
*                                          CLASS LOCK        @G860P1S*/ 91189000
*       8 SDWAFRSA    BIT(1),           /* ON, THE RSM ADDRESS SPACE    91201000
*                                          CLASS LOCK        @G860P1S*/ 91213000
*       8 SDWAFVSP    BIT(1),           /* ON, THE VSM PAGE LOCK        91225000
*                                                            @G860P1S*/ 91237000
*       8 SDWADISP    BIT(1),           /* ON THE DISPATCHER LOCK    */ 91250000
*       8 SDWAASMP    BIT(1),           /* ON, ASM CLASS LOCK@Z40WPXH*/ 91300000
*       8 SDWASALL    BIT(1),           /* ON, THE SALLOC LOCK       */ 91350000
*       8 SDWAIPRG    BIT(1),           /* ON, THE IOSYNCH LOCK      */ 91450000
*       8 SDWAFRSD    BIT(1),           /* ON, THE RSM DATA SPACE LOCK  91500000
*                                                                @L6C*/ 91550000
*     7 SDWAACF4    CHAR(1),            /* ADDITIONAL LOCKS TO BE       91650000
*                                          FREED, OR ADDITIONAL FRR     91650200
*                                          PROCESSING                */ 91650400
*       8 SDWAIUCB    BIT(1),           /* ON, FREE IOSUCB LOCK      */ 91650600
*       8 *           BIT(3),           /* RESERVED              @PGC*/ 91651100
*       8 SDWATADB    BIT(1),           /* RESERVED LOCK     @Z40WPXH*/ 91651700
*       8 SDWAOPTM    BIT(1),           /* ON, FREE SRM LOCK         */ 91656700
*       8 SDWACMS     BIT(1),           /* ON, FREE CMS LOCK         */ 91661700
*       8 SDWAFLLK    BIT(1),           /* ON, FREE LOCAL LOCK       */ 91666700
*   6 SDWALKWA    CHAR(32) BDY(WORD),   /* LOCK AREA         @ZA05516*/ 91672000
*     7 SDWALKWS    CHAR(32) BDY(WORD), /* LOCKWORDS REQUIRED TO FREE   91680000
*                                          THE GLOBAL LOCKS             91682000
*                                          ONLY USED FOR FRRS        */ 91684000
*       8 SDWALRSD     PTR(31),         /* LOCKWORD FOR THE RSM DATA    91690000
*                                          SPACE LOCK            @L6C*/ 91692000
*       8 SDWAIULW      PTR(31),        /* LOCKWORD FOR THE IOSUCB      91694000
*                                          LOCK                      */ 91696000
*       8 *             PTR(31),        /* LOCKWORD - RESERVED   @P3C*/ 91697400
*       8 SDWAIPLW      PTR(31),        /* LOCKWORD FOR THE IOSYNCH     91698800
*                                          LOCK                      */ 91699200
*       8 SDWAAPLW      PTR(31),        /* LOCKWORD FOR THE ASM CLASS   91699400
*                                          LOCK              @Z40WPXH*/ 91699600
*       8 *             PTR(31),        /* RESERVED              @L9C*/ 91704600
*       8 *             PTR(31),        /* RESERVED              @L9C*/ 91709600
*       8 SDWATALW      PTR(31),        /* LOCKWORD - RESERVED          91714600
*                                          LOCK              @Z40WPXH*/ 91717600
*   6 SDWAASID        CHAR(2),          /* ASID FOR LOGREC DEBUGGING    91720600
*                                          (HOME ASID)       @ZA05516*/ 91732600
*   6 SDWASEQ#        CHAR(2),          /* ERRORID SEQ NBR   @G17EP5W*/ 91732800
*   6 SDWARECP        CHAR(24),         /* RECORDING PARAMETERS         91740000
*                                          (MODULE, CSECT,AND RECOVERY  91742000
*                                          ROUTINE NAME-RESPECTIVELY)*/ 91744000
*     7 SDWAMODN      CHAR(8),          /* THE LOAD MODULE NAME         91748000
*                                          INVOLVED IN THE ERROR        91778000
*                                          (SUPPLIED BY THE RECOVERY    91808000
*                                          ROUTINE)                  */ 91838000
*     7 SDWACSCT      CHAR(8),          /* THE CSECT (MICROFICHE)       91868000
*                                          NAME INVOLVED                91898000
*                                          IN THE ERROR (SUPPLIED       91928000
*                                          BY THE RECOVERY ROUTINE)  */ 91958000
*     7 SDWAREXN      CHAR(8),          /* THE RECOVERY ROUTINE         91988000
*                                          (MICROFICHE) NAME            92018000
*                                          HANDLING THE ERROR (SUPPLIED 92048000
*                                          BY THE RECOVERY ROUTINE)  */ 92078000
*   6 SDWADPLA        PTR(31),          /* POINTER TO DUMP              92108000
*                                          PARAMETER LIST RESIDING      92138000
*                                          IN SDWA                   */ 92168000
*   6 SDWASNPA        CHAR(8),          /* SNAP PARAMETER LIST FLAGS */ 92250000
*     7 SDWADUMP        CHAR(4),        /* DUMP CHARACTERISTICS      */ 92300000
*       8 SDWADPID      CHAR(1),        /* ID OF DUMP REQUESTED      */ 92350000
*       8 SDWADPFS      CHAR(1),        /* DUMP FLAGS                */ 92400000
*         9 SDWADPT      BIT(1),        /* ALWAYS  OFF, INDICATES SNAP  92450000
*                                          DUMP  REQUEST             */ 92550000
*         9 SDWADLST     BIT(1),        /* ALWAYS ON, INDICATES OS/VS2  92650000
*                                          REL. 2 DUMP  PARAMETER LIST  92660000
*                                          SUPPLIED. USED BY RTM TO     92700000
*                                          INDICATE DUMP OPTIONS        92750000
*                                          ARE AVAILABLE IN THE SDWA */ 92800000
*         9  SDWAENSN    BIT(1),        /* 1=ENHANCED DUMP OPTIONS      92810000
*                                                            @G33SPHW*/ 92820000
*         9  *           BIT(3),        /* RESERVED                  */ 92830000
*         9  SDWASLST    BIT(1),        /* ON,STORAGE LIST SUPPLIED     93010000
*                                          FOR DUMP                  */ 93020000
*         9  *           BIT(1),        /* RESERVED              @P2C*/ 93060000
*       8 SDWADPF2      CHAR(1),        /* DUMP FLAGS 2      @G382P2F*/ 93100000
*         9 SDWADVS3     BIT(1),        /* ON, STORAGE RANGES IN        93150000
*                                          SDWADSR, OFF, STORAGE RANGES 93200000
*                                          IN SDWADPSL       @G382P2F*/ 93250000
*         9  *           BIT(3),        /* RESERVED          @G860P1C*/ 93256200
*         9  SDWAXLST    BIT(1),        /* ON,DATA SPACES STORAGE LIST  93262400
*                                          SUPPLIED FOR DUMP     @P2M*/ 93268600
*         9  SDWALVL2    BIT(1),        /* ON, INDICATES                93275000
*                                          MVS/SP2.1 LEVEL OF           93287500
*                                          SNAP PARMLIST     @G860P1F*/ 93300000
*         9  SDWASUBL    BIT(1),         /* ON, SUBPOOL LIST            93312500
*                                           SUPPLIED.        @G860P1C*/ 93325000
*         9  *           BIT(1),         /* RESERVED         @G860P1C*/ 93337500
*       8 *             CHAR(1),        /* RESERVED          @G382P2F*/ 93350000
*     7 SDWADDAT        CHAR(4),        /* SDATA/PDATA OPTIONS       */ 94050000
*       8 SDWASDAT      CHAR(2),        /* SDATA OPTIONS             */ 94070000
*        9 SDWASDA0      CHAR(1),       /* SDATA OPTIONS FLAG ONE       94100000
*                                                            @G33SPHW*/ 94110000
*        10 SDWANUC      BIT(1),        /* DISPLAY NUCLEUS           */ 94120000
*        10 SDWASQA      BIT(1),        /* DISPLAY SQA               */ 94150000
*        10 SDWALSQA     BIT(1),        /* DISPLAY LSQA              */ 94200000
*        10 SDWASWA      BIT(1),        /* DISPLAY SWA               */ 94250000
*        10 SDWAGTF      BIT(1),        /* DISPLAY GTF INCORE TRACE     94300000
*                                          TABLE                     */ 94400000
*        10 SDWACBS      BIT(1),        /* FORMAT AND DISPLAY CONTROL   94420000
*                                          BLOCKS                    */ 94500000
*        10 SDWAQQS      BIT(1),        /* FORMAT AND DISPLAY QCBS/     94520000
*                                          QELS                      */ 94600000
*        10 SDWADM       BIT(1),        /* FORMAT DATA MGT CONTROL      94605000
*                                          BLOCKS            @G33SPHW*/ 94610000
*       9 SDWASDA1      CHAR(1),        /* SDATA OPTIONS     @G33SPHW*/ 94620000
*        10 SDWAIO       BIT(1),        /* FORMAT IOS CONTROL BLOCKS    94630000
*                                                            @G33SPHW*/ 94658000
*        10 SDWAERR      BIT(1),        /* FORMAT ERROR CONTROL         94666000
*                                          BLOCKS            @G33SPHW*/ 94674000
*        10 *            BIT(1),        /* RESERVED          @G860P1C*/ 94677700
*        10 SDWASUM      BIT(1),        /* PROVIDE SUMMARY              94681400
*                                          DUMP              @G860P1C*/ 94685100
*        10 SDWAALLN     BIT(1),        /* DISPLAY ENTIRE               94688800
*                                          VIRTUAL NUCLEUS   @G860P1C*/ 94692500
*        10 *            BIT(3),        /* RESERVED          @G860P1C*/ 94696200
*       8 SDWAPDAT      CHAR(1),        /* PDATA OPTIONS             */ 94700000
*         9 SDWADSAS     BIT(1),        /* DISPLAY SAVE AREAS        */ 94850000
*         9 SDWADSAH     BIT(1),        /* DISPLAY SAVE AREA HEADER  */ 94900000
*         9 SDWADREG     BIT(1),        /* DISPLAY REGISTERS         */ 94920000
*         9 SDWATLPA     BIT(1),        /* DISPLAY LPA MODULES OF       95000000
*                                          TASK                      */ 95010000
*         9 SDWATJPA     BIT(1),        /* DISPLAY JPA MODULES OF       95012000
*                                          TASK                      */ 95014000
*         9 SDWADPSW     BIT(1),        /* DISPLAY PSW               */ 95020000
*         9 SDWAUSPL     BIT(1),        /* DISPLAY USER SUBPOOLS     */ 95050000
*         9 *            BIT(1),        /* RESERVED                  */ 95100000
*       8 *             CHAR(1),        /* RESERVED                  */ 95150000
*   6 SDWADPSA     CHAR(36) BDY(WORD),  /* DUMP RANGES AREA          */ 95152000
*     7 SDWADPSL    CHAR(32) BDY(WORD), /* DUMP STORAGE LISTS(MAX 4     95160000
*                                          RANGES AVAILABLE)         */ 95170000
*       8 SDWAFRM1      PTR(31),        /* BEGINNING ADDRESS FOR        95180000
*                                          STORAGE RANGE 1           */ 95190000
*       8 SDWATO1       PTR(31),        /* ENDING ADDRESS FOR STORAGE   95192000
*                                          RANGE 1                   */ 95194000
*       8 SDWAFRM2      PTR(31),        /* BEGINNING ADDRESS FOR        95196000
*                                          STORAGE RANGE 2           */ 95198000
*       8 SDWATO2       PTR(31),        /* ENDING ADDRESS FOR STORAGE   95198400
*                                          RANGE 2                   */ 95198800
*       8 SDWAFRM3      PTR(31),        /* BEGINNING ADDRESS FOR        95199200
*                                          STORAGE RANGE 3           */ 95199600
*       8 SDWATO3       PTR(31),        /* ENDING ADDRESS FOR STORAGE   95199700
*                                          RANGE 3                   */ 95199800
*       8 SDWAFRM4      PTR(31),        /* BEGINNING ADDRESS FOR        95199900
*                                          STORAGE RANGE 4           */ 95216600
*       8 SDWATO4       PTR(31),        /* ENDING ADDRESS FOR STORAGE   95226600
*                                          RANGE 4                   */ 95228600
*     7 *               PTR(31),        /* RESERVED                  */ 95229000
*/*                                                                  */ 95230600
*/*              SDWAVERI IS TO INDICATE THE VERSION OF THE          */ 95230900
*/*              SDWA VIA A NUMBER IN THE SDWAVID            @G38FP2F*/ 95231200
*   6 SDWAVERI       CHAR(4),           /* SDWA VERSION INDICATOR       95231500
*                                                            @G38FP2F*/ 95231800
*     7 SDWAVERF      CHAR(2),          /* FFFF INDICATES VID FIELD     95232100
*                                          IS VALID          @G38FP2F*/ 95232400
*     7 SDWAVID       CHAR(2),          /* VERSION INDICATOR, EXPLAINED 95232500
*                      AS FOLLOWS:                                      95232600
*                      1, INDICATES THE SDWA IS AT AN MVS/SYSTEM        95232700
*                      PRODUCT RELEASE 2 LEVEL                          95232800
*                      2, INDICATES THE SDWA IS AT AN MVS/SYSTEM        95232900
*                      PRODUCT VERSION 2 RELEASE 1 LEVEL                95233000
*                      3, INDICATES THE SDWA IS AT AN MVS/SYSTEM        95233100
*                      PRODUCT JBB2110 LEVEL.                           95233200
*                      4, INDICATES THE SDWA IS AT AN MVS/SYSTEM        95233300
*                      PRODUCT HBB3310 LEVEL.                           95233400
*                      5, INDICATES THE SDWA IS AT AN MVS/SYSTEM        95233500
*                      PRODUCT HBB4410 LEVEL.                           95233600
*                      6, INDICATES THE SDWA IS AT AN MVS/SYSTEM        95233700
*                      PRODUCT HBB5510 LEVEL.                    @LFC*/ 95233800
*   6 SDWAXPAD       PTR(31),           /* ADDRESS OF THE EXTENSION     95233900
*                                          POINTERS (SDWAPTRS)   @L1C*/ 95234000
*   6 SDWAXM        CHAR(12) BDY(WORD), /* CROSS MEMORY INFO @G381P2F*/ 95234100
*     7 SDWACRGS      CHAR(8),          /* CONTROL REGS 3&4  @G381P2F*/ 95234200
*       8 SDWACR3     CHAR(4),          /* CONTROL REG 3     @G381P2F*/ 95234500
*         9 SDWAKM      CHAR(2),        /* KEY MASK          @G381P2F*/ 95234800
*         9 SDWASCND    CHAR(2),        /* ASID OF THE SECONDARY        95235100
*                                          ADDR SPACE -SASID @G381P2F*/ 95235400
*       8 SDWACR4     CHAR(4),          /* CONTROL REG 4     @G381P2F*/ 95235700
*         9 SDWAAX      CHAR(2),        /* AUTHORIZATION INDEX          95236000
*                                                            @G381P2F*/ 95236300
*         9 SDWAPRIM    CHAR(2),        /* ASID OF THE PRIMARY          95236600
*                                          ADDR SPACE -PASID @G381P2F*/ 95236900
*     7 SDWACMLA      PTR(31),          /* ADDRESS OF ASCB OF CML TO    95237200
*                                          BE FREED          @G381P2F*/ 95237500
*   6 SDWACOMU      CHAR(8),            /* FRR TO ESTAE COMMUNICATION   95237800
*                                          BUFFER            @G382P2F*/ 95238100
*   6 SDWACOMP       PTR(31),           /* THIS WORD IS PROVIDED FOR    95240600
*                                          COMMUNICATION OF ADDITIONAL  95242600
*                                          RECOVERY DATA ON A PER       95243000
*                                          COMPONENT BASIS (FOR         95243100
*                                          OS/VS2 RELEASE 2 THIS        95243400
*                                          FIELD IS ONLY USED BY        95243800
*                                          DATA MANAGER).            */ 95244200
*   6 SDWAERTM       CHAR(4),           /* ERRORID TIME STAMP@G17EP5W*/ 95245200
*   6 SDWARA      CHAR(264) BDY(WORD),  /* VARIABLE RECORDING AREA      95249000
*                                          PREFIXED BY TWO BYTE         95250000
*                                          LENGTH FIELD OF AREA,        95300000
*                                          A ONE BYTE FLAG FIELD,       95310000
*                                          AND A ONE BYTE FIELD WITH    95320000
*                                          LENGTH OF USER SUPPLIED      95330000
*                                          RECORDING INFORMATION        95340000
*                                                                @L5C*/ 95345000
*     7 SDWAVRAL      CHAR(2),          /* LENGTH OF VARIABLE           95350000
*                                          RECORDING AREA        @L5C*/ 95360000
*     7 SDWADPVA      CHAR(1),          /* BITS THAT DEFINE DATA IN     95370000
*                                          VARIABLE AREA             */ 95380000
*       8 SDWAHEX      BIT(1),          /* SDWAVRA DATA TO BE           95390000
*                                          PRINTED BY EREP IN HEX    */ 95400000
*       8 SDWAEBC      BIT(1),          /* SDWAVRA DATA TO BE           95410000
*                                          PRINTED BY EREP IN EBCDIC */ 95420000
*       8 SDWAVRAM     BIT(1),          /* SDWAVRA DATA IS IN THE       95430000
*                                          FORMAT MAPPED BY THE VRAMAP  95440000
*                                          STRUCTURE (IHAVRA MACRO)     95447000
*                                                            @G81EP11*/ 95454000
*       8 *            BIT(5),          /* RESERVED          @G81EP11*/ 95463000
*     7 SDWAURAL      FIXED(8),         /* LENGTH OF USER  (RECOVERY    95472000
*                                          ROUTINE) SUPPLIED            95481000
*                                          RECORDING AREA (ZEROED       95490000
*                                          BEFORE EACH RECOVERY         95493900
*                                          ROUTINE IS INVOKED)       */ 95497800
*     7 SDWAVRA       CHAR(255),        /* VARIABLE RECORDING AREA      95501700
*                                                            @G388P2F*/ 95505600
*     7 SDWAID        CHAR(5),          /* CONTAINS 'SDWA ' AS ID       95509500
*                                                            @G860P1F*/ 95513400
*   6 *   CHAR(0) BDY(DWORD),           /* ROUND UP TO DOUBLE WORD      95517300
*                                                            @G381P2F*/ 95521200
*%IF SDWALVL ^= '' %THEN                                                95525100
*  %GOTO SDWABSLA;                                                      95587500
* %IF IHAVIA='YES' %THEN                  /*                     @L4A*/ 95589000
*    %IHAALET='VIA(SDWAALET)';            /*                     @L4A*/ 95590500
* %ELSE %IHAALET='';                      /*                     @L4A*/ 95592000
* %IF SDWA_PRD = '' %THEN                 /*                     @LIA*/ 95592500
*   %SDWASRVPB = 'BASED(SDWASRVP)';       /*                     @LIA*/ 95593000
* %ELSE                                   /*                     @LIA*/ 95593500
*   %SDWASRVPB = 'BASED(ADDR(SDWA)+SDWASRVP)';  /*               @LIA*/ 95594000
*  1 SDWARC1 IHAALET SDWASRVPB,         /* RECORDABLE EXTEN      @L4A*/ 95594500
*%GOTO SDWABSLB;                                                        95595300
*%SDWABSLA: ;                                                           95599200
*  SDWALVL SDWARC1,                     /* RECORDABLE EXTEN  @G388P2F*/ 95603100
*%SDWABSLB: ;                                                           95607000
*   6 SDWASERV CHAR(456) BDY(DWORD),    /* ADDITIONAL COMPONENT         95608800
*                                          SERVICE DATA.         @LGC*/ 95610600
*     7 SDWARC1Z,                       /* THIS AREA CAN BE ZEROED ON   95612500
*                                          PERCOLATION.          @L2A*/ 95615800
*       8 SDWACID CHAR(5),              /* COMPONENT ID OF THE          95619100
*                                          COMPONENT INVOLVED IN        95620600
*                                          THE ERROR (FOR EXAMPLE,      95623500
*                                          SC1CR)            @G388P2F*/ 95626500
*       8 SDWASC CHAR(23),              /* NAME OF THE SUBCOMPONENT     95631300
*                                          AND THE MODULE SUBFUNCTION   95636100
*                                          INVOLVED IN THE ERROR        95640900
*                                                            @G388P2F*/ 95646000
*       8 SDWAMLVL CHAR(16),            /* LEVEL OF THE MODULE          95646900
*                                          INVOLVED IN THE ERROR        95647800
*                                                            @G388P2F*/ 95648700
*         9 SDWAMDAT CHAR(8),           /* ASSEMBLY DATE OF THE         95649900
*                                          MODULE INVOLVED IN THE       95652500
*                                          ERROR             @G38AP2F*/ 95655100
*         9 SDWAMVRS CHAR(8),           /* VERSION OF THE MODULE - PTF  95657700
*                                          OR PRODUCT NUMBER @G38AP2F*/ 95661600
*       8 SDWACRC CHAR(4) BDY(WORD),  /* THIS FIELD CONTAINS THE ABEND  95662900
*                                   REASON CODE THAT WAS SET VIA AN     95664200
*                                   ABEND, CALLRTM, OR SETRP MACRO.     95665500
*                                   IT IS VALID ONLY IF SDWARCF IS SET  95666800
*                                   ON.  NOTE THAT THIS FIELD SHOULD    95668100
*                                   NOT BE CONFUSED WITH THE RETURN     95669400
*                                   CODE THAT SOME PROGRAMS PLACE INTO  95670700
*                                   REGISTER 15 BEFORE ISSUING AN       95672000
*                                   ABEND.                       @PBC*/ 95673300
*         9 SDWAHRC FIXED(31),          /* HEXADECIMAL DECLARE FOR      95674600
*                                          SDWACRC               @PBC*/ 95675900
*       8 SDWARRL CHAR(8),              /* ENTRY POINT LABEL OF THE     95677200
*                                          RECOVERY ROUTINE THAT FILLED 95681100
*                                          IN THIS SDWA      @G388P2F*/ 95685000
*       8 SDWACIDB CHAR(4),             /* THE COMPONENT ID BASE        95685600
*                                          (PREFIX) NUMBER, SUCH AS     95686200
*                                          5741.             @G38PP1F*/ 95687100
*       8 SDWASDRC FIXED(8),            /* SVCDUMP STATUS INDICATOR     95687400
*                                          (FOR USE BY SDUMP)           95687700
*                                                            @G860P1S*/ 95688000
*       8 SDWACCRC CHAR(1),      /* FLAGS FOR REASON AND COMP CODE      95688100
*                                                            @G860P1C*/ 95688200
*         9 SDWACCF BIT(1),      /* =1, RECOVERY EXIT HAS ALTERED       95688300
*                                   COMPCODE                 @G860P1C*/ 95688400
*         9 SDWAREAF BIT(1),     /* =1, RECOVERY EXIT HAS ALTERED       95688500
*                                   THE REASON CODE          @G860P1C*/ 95688600
*       8 SDWARETF CHAR(1),      /* SDWA RETRY FLAGS             @L3A*/ 95688700
*         9 SDWART15 BIT(1),     /* ON, REGISTER 15 ON RETRY WILL BE    95688800
*                                   SET TO THE VALUE IN SDWASR15.       95688900
*                                   OFF, REGISTER 15 ON RETRY WILL BE   95689000
*                                   SET TO THE RETRY ADDRESS REGARDLESS 95689100
*                                   OF THE CONTENTS OF SDWASR15. ONLY   95689200
*                                   VALID FOR FRRS.              @L3A*/ 95689300
*         9 SDWAREMR BIT(1),     /* ON, REMOVE REC ROUTINE ON RETRY     95689400
*                                   OFF, DONT REMOVE REC ROUTINE ON     95689500
*                                   RETRY.                       @L3A*/ 95689600
*         9 SDWAFRLK BIT(1),     /* ON, FREE LOCKS ON RETRY             95689700
*                                   WHOSE BIT SETTINGS HAVE BEEN        95689800
*                                   TURNED ON IN THE SDWA.              95689900
*                                   OFF, DO NOT FREE ANY LOCKS          95690000
*                                   ON A RETRY.                  @L3A*/ 95690100
*         9 SDWAUP64 BIT(1),     /* If on, use the 64-bit GPRs for      95690200
*                                   setting the retry regs. Only valid  95690300
*                                   when SDWARC4 extension exists       95690400
*                                                                @LIA*/ 95690500
*         9 SDWAKEAX BIT(1),     /* When retrying, keep the current     95690600
*                                   EAX rather than resetting the EAX   95690700
*                                   to time-of-FRR-set           @PGM*/ 95690800
*         9 * BIT(3),            /* RESERVED                     @PGC*/ 95690900
*       8 SDWATYPE FIXED(8),     /* TYPE OF RECOVERY ROUTINE            95691000
*                                   THAT RTM GAVE CONTROL TO:           95691100
*                                   0 - NO RECOVERY WAS SETUP           95691200
*                                   1 - FRR                             95691300
*                                   2 - NON FRR (ESTAE, ESTAI, ETC.)    95691400
*                                   3 - ARR (ASSOCIATED RECOVERY        95691500
*                                       ROUTINE)                 @L4A*/ 95691600
*       8 SDWAHLHI CHAR(4),      /* ON ENTRY TO A FRR: COPY OF PSAHLHI  95691700
*                                   (HIGHEST LOCK HELD INDICATOR)       95691800
*                                   ON ENTRY TO AN ESTAE: 0  @G860P38*/ 95691900
*       8 SDWASUPR CHAR(4),      /* ON ENTRY TO A FRR: COPY OF PSASUPER 95692000
*                                   (SUPERVISOR CONTROL WORD)           95692100
*                                   ON ENTRY TO AN ESTAE: 0  @G860P38*/ 95692200
*       8 SDWASPN CHAR(4),       /* ON ENTRY TO A FRR: COPY OF LCCASPIN 95692300
*                                   (PROCESSOR IS SPINNING INDICATORS)  95692400
*                                   ON ENTRY TO AN ESTAE: 0  @G860P38*/ 95692500
*       8 SDWAEADR CHAR(4),      /* FRR OR ESTAE RECOVERY ROUTINE       95692600
*                                   ADDRESS. IF NO FRR EXISTED WHEN     95692700
*                                   RTM1 RECIEVED CONTROL TO PROCESS    95692800
*                                   A SYSTEM MODE ERROR THIS FIELD IS   95692900
*                                   ZERO                     @G860P38*/ 95693000
*       8 SDWAFRRE CHAR(24),     /* IF FRR EXISTS: COPY OF FRR          95693100
*                                   PARAMETER AREA FROM THE CURRENT     95693200
*                                   FRR STACK ENTRY.                    95693300
*                                   ON ENTRY TO AN ESTAE: 0  @G860P38*/ 95693400
*       8 SDWASDRN CHAR(4),      /* SDUMP REASON FLAGS FOR TAKING       95693500
*                                   PARTIAL DUMP. SEE RTSDSRSN          95693600
*                                   IN RTSD.                 @ZMC2916*/ 95693700
*       8 SDWADAEW,              /* STRUCTURE FOR DAE INFO       @L2A*/ 95693800
*         9 SDWADAET CHAR(8),    /* DAE STATUS FLAGS MAPPED BY ADYDSTAT 95693900
*                                                                @P1C*/ 95694000
*         9 SDWAOCUR CHAR(2),    /* NUMBER OF OCCURRENCES OF THIS       95694100
*                                   PROBLEM. IF 0 THEN DAE DID NOT      95694200
*                                   CHECK FOR DUPLICATE OCCURRENCES. IF 95694300
*                                   1 THEN THIS IS THE FIRST OCCURRENCE 95694400
*                                   OF THIS PROBLEM. IF GREATER THAN 1  95694500
*                                   THAN THIS IS THE COUNT OF HOW MANY  95694600
*                                   TIMES THIS DUMP REQUEST HAS         95694700
*                                   OCCURRED WHILE DAE WAS ACTIVE.      95694800
*                                                                @P1C*/ 95694900
*     7 SDWARC1P CHAR(34) BDY(DWORD,7), /* THESE BYTES ARE NOT TO BE    95695000
*                                   ZEROED ON PERCOLATION.       @L1A*/ 95695100
*       8 SDWAPGTA CHAR(6) BDY(DWORD,7), /* CONTAINING STRUCTURE AS IN  95695200
*                                   LCCAPGTA.                    @L1A*/ 95695300
*         9 SDWAASI1 CHAR(2),    /* ADDRESS SPACE ID OF TASK FOR        95695400
*                                   PURGEDQ                      @L1A*/ 95695500
*         9 SDWATCB PTR(31) BDY(WORD), /* ADDRESS OF TCB FOR PURGEDQ    95695600
*                                                                @L1A*/ 95695700
*       8 SDWART12,              /* INFORMATION TO BE PASSED IN EED'S   95695800
*                                                                @L1A*/ 95695900
*       10 SDWAFAIN CHAR(12),    /* 12 BYTES OF INSTRUCTION STREAM      95696000
*                                   AS DETERMINED BY THE ADDRESS IN     95696100
*                                   THE PSW AT THE TIME OF FAILURE,     95696200
*                                   6 BYTES BEFORE AND AFTER.    @L2A*/ 95696300
*       10 SDWAASCB PTR(31),     /* ADDRESS OF ASCB FOR FAILING         95696400
*                                   ADDRESS SPACE.               @L1A*/ 95696500
*       10 SDWAASST PTR(31),     /* ADDRESS OF ADDRESS SPACE            95696600
*                                   SEGMENT TABLE.               @L1A*/ 95696700
*       10 SDWASABC,             /* ORIGINAL COMPLETION CODE     @L1A*/ 95696800
*         12 SDWAOABF CHAR(1),   /* FLAGS IN COMP CODE REG.      @L1A*/ 95696900
*           14 SDWAOREQ BIT(1),  /* ORIGINAL VALUE OF SDWAREQ    @L1A*/ 95697000
*           14 SDWAOSTP BIT(1),  /* ORIGINAL VALUE OF SDWASTEP   @L1A*/ 95697100
*           14 *        BIT(1),  /* USED FOR MEMTERM REQUESTS    @L1A*/ 95697200
*           14 SDWAOSTC BIT(1),  /* ORIGINAL VALUE OF SDWASTCC   @L1A*/ 95697300
*           14 *        BIT(1),  /* USED BY RTM2 FOR NORMAL END-OF-TASK 95697400
*                                                                @L1A*/ 95697500
*           14 SDWAORCF BIT(1),  /* VALID REASON CODE IN SDWAOCRC.      95697600
*                                                                @L1A*/ 95697700
*           14 * BIT(2),         /* RESERVED                     @L1A*/ 95697800
*         12 SDWAOCMP CHAR(3),   /* ORIGINAL COMPLETION CODE     @L1A*/ 95697900
*       10 SDWAOCRC CHAR(4),     /* ORIGINAL REASON CODE FROM SDWACRC   95698000
*                                   AT ENTRY TO RECOVERY PROCESSING.    95698100
*                                   ONLY VALID IF SDWAORCF IS SET ON.   95698200
*                                                                @PBC*/ 95698300
*                                                                       95698400
*       /* SDWARC1 FIELDS FROM THIS POINT ON ARE PRESERVED ON RTM1      95698500
*          FRR PERCOLATION AND ARE ZEROED ON RTM2 ESTAE PERCOLATION. */ 95698600
*                                                                       95698700
*     7 SDWACRER CHAR(64) BDY(DWORD), /* CONTROL REGISTERS AT TIME OF   95698800
*                                   ERROR. THESE VALUES ARE NOT         95698900
*                                   RESTORED ON RETRY.           @L4A*/ 95699000
*       9 SDWACRE0 PTR(31),      /* CONTROL REGISTER 0           @L4A*/ 95699100
*       9 SDWACRE1 PTR(31),      /* CONTROL REGISTER 1           @L4A*/ 95699200
*       9 SDWACRE2 PTR(31),      /* CONTROL REGISTER 2           @L4A*/ 95699300
*       9 SDWACRE3 PTR(31),      /* CONTROL REGISTER 3           @L4A*/ 95699400
*       9 SDWACRE4 PTR(31),      /* CONTROL REGISTER 4           @L4A*/ 95699500
*       9 SDWACRE5 PTR(31),      /* CONTROL REGISTER 5           @L4A*/ 95699600
*       9 SDWACRE6 PTR(31),      /* CONTROL REGISTER 6           @L4A*/ 95699700
*       9 SDWACRE7 PTR(31),      /* CONTROL REGISTER 7           @L4A*/ 95699800
*       9 SDWACRE8 PTR(31),      /* CONTROL REGISTER 8           @L4A*/ 95699900
*       9 SDWACRE9 PTR(31),      /* CONTROL REGISTER 9           @L4A*/ 95700000
*       9 SDWACREA PTR(31),      /* CONTROL REGISTER 10          @L4A*/ 95700100
*       9 SDWACREB PTR(31),      /* CONTROL REGISTER 11          @L4A*/ 95700200
*       9 SDWACREC PTR(31),      /* CONTROL REGISTER 12          @L4A*/ 95700300
*       9 SDWACRED PTR(31),      /* CONTROL REGISTER 13          @L4A*/ 95700400
*       9 SDWACREE PTR(31),      /* CONTROL REGISTER 14          @L4A*/ 95700500
*       9 SDWACREF PTR(31),      /* CONTROL REGISTER 15          @L4A*/ 95700600
*     7 SDWAARER CHAR(64) BDY(DWORD), /* ACCESS REGISTERS AT TIME OF    95700700
*                                        ERROR                   @L4A*/ 95700800
*       9 SDWAARE0 PTR(31),      /* ACCESS REGISTER 0            @L4A*/ 95700900
*       9 SDWAARE1 PTR(31),      /* ACCESS REGISTER 1            @L4A*/ 95701000
*       9 SDWAARE2 PTR(31),      /* ACCESS REGISTER 2            @L4A*/ 95701100
*       9 SDWAARE3 PTR(31),      /* ACCESS REGISTER 3            @L4A*/ 95701200
*       9 SDWAARE4 PTR(31),      /* ACCESS REGISTER 4            @L4A*/ 95701300
*       9 SDWAARE5 PTR(31),      /* ACCESS REGISTER 5            @L4A*/ 95701400
*       9 SDWAARE6 PTR(31),      /* ACCESS REGISTER 6            @L4A*/ 95701500
*       9 SDWAARE7 PTR(31),      /* ACCESS REGISTER 7            @L4A*/ 95701600
*       9 SDWAARE8 PTR(31),      /* ACCESS REGISTER 8            @L4A*/ 95701700
*       9 SDWAARE9 PTR(31),      /* ACCESS REGISTER 9            @L4A*/ 95701800
*       9 SDWAAREA PTR(31),      /* ACCESS REGISTER 10           @L4A*/ 95701900
*       9 SDWAAREB PTR(31),      /* ACCESS REGISTER 11           @L4A*/ 95702000
*       9 SDWAAREC PTR(31),      /* ACCESS REGISTER 12           @L4A*/ 95702100
*       9 SDWAARED PTR(31),      /* ACCESS REGISTER 13           @L4A*/ 95702200
*       9 SDWAAREE PTR(31),      /* ACCESS REGISTER 14           @L4A*/ 95702300
*       9 SDWAAREF PTR(31),      /* ACCESS REGISTER 15           @L4A*/ 95702400
*     7 SDWAARSV CHAR(64) BDY(DWORD), /* ACCESS REGISTERS OF THE RB     95702500
*                                   LEVEL AND LINKAGE STACK LEVEL WHICH 95702600
*                                   CREATED THE ESTAE EXIT AT THE TIME  95702700
*                                   IT LAST INCURRED AN INTERRUPT OR 0  95702800
*                                   FOR ESTAI.  FOR FRRS INITIALIZED TO 95702900
*                                   REGISTERS AT TIME OF ERROR.  THIS   95703000
*                                   REGISTER AREA IS USED TO UPDATE     95703100
*                                   REGISTER CONTENTS FOR RETRY IF      95703200
*                                   REQUESTED.                   @L4A*/ 95703300
*       9 SDWAARS0 PTR(31),      /* ACCESS REGISTER 0            @L4A*/ 95703400
*       9 SDWAARS1 PTR(31),      /* ACCESS REGISTER 1            @L4A*/ 95703500
*       9 SDWAARS2 PTR(31),      /* ACCESS REGISTER 2            @L4A*/ 95703600
*       9 SDWAARS3 PTR(31),      /* ACCESS REGISTER 3            @L4A*/ 95703700
*       9 SDWAARS4 PTR(31),      /* ACCESS REGISTER 4            @L4A*/ 95703800
*       9 SDWAARS5 PTR(31),      /* ACCESS REGISTER 5            @L4A*/ 95703900
*       9 SDWAARS6 PTR(31),      /* ACCESS REGISTER 6            @L4A*/ 95704000
*       9 SDWAARS7 PTR(31),      /* ACCESS REGISTER 7            @L4A*/ 95704100
*       9 SDWAARS8 PTR(31),      /* ACCESS REGISTER 8            @L4A*/ 95704200
*       9 SDWAARS9 PTR(31),      /* ACCESS REGISTER 9            @L4A*/ 95704300
*       9 SDWAARSA PTR(31),      /* ACCESS REGISTER 10           @L4A*/ 95704400
*       9 SDWAARSB PTR(31),      /* ACCESS REGISTER 11           @L4A*/ 95704500
*       9 SDWAARSC PTR(31),      /* ACCESS REGISTER 12           @L4A*/ 95704600
*       9 SDWAARSD PTR(31),      /* ACCESS REGISTER 13           @L4A*/ 95704700
*       9 SDWAARSE PTR(31),      /* ACCESS REGISTER 14           @L4A*/ 95704800
*       9 SDWAARSF PTR(31),      /* ACCESS REGISTER 15           @L4A*/ 95704900
*     7 SDWADUCT CHAR(64),    /* DISPATCHABLE UNIT CONTROL TABLE @L4A*/ 95705000
*     7 SDWATEAR PTR(8),      /* TRANSLATION EXCPETION ACCESS REGISTER  95705100
*                                NUMBER                          @L4A*/ 95705200
*     7 SDWAXFLG BIT(8),      /* EXTENDED FLAG AREA              @L4A*/ 95705300
*       8 SDWAINTF    BIT(1), /* ON, SDWAEC2, SDWASRSV, SDWAARSV ARE    95705400
*                                FROM A LINKAGE STACK ENTRY      @02C*/ 95705500
*       8 SDWATEAV    BIT(1), /* ON, SDWATRAN CONTAINS A VALID ADDRESS  95705600
*                                                                @L8A*/ 95705700
*       8 SDWATEIV    BIT(1), /* ON, SDWATRAN CONTAINS A VALID ASID     95705800
*                                                                @L8A*/ 95705900
*       8 SDWAESTX    BIT(1), /* ON, IF SDWATYPE = SDWATEST, THE        95706000
*                  RECOVERY ROUTINE WAS ESTABLISHED VIA ESTAEX   @LEA*/ 95706100
*       8 SDWATEPC    BIT(1), /* ON, SDWATRAN contains a valid PC       95706200
*                                number                          @LIA*/ 95706300
*       8 *           BIT(3), /* RESERVED                        @LGA*/ 95706400
*     7 SDWASFLG BIT(8),      /* SUBSPACE FLAG AREA              @LGA*/ 95706500
*       8 SDWASVLD    BIT(1), /* ON IF SUBSPACE INFORMATION AT TIME OF  95706600
*                                ERROR (SDWASTKN AND SDWASNM) IS        95706700
*                                AVAILABLE AND VALID             @LGA*/ 95706800
*       8 SDWASSA     BIT(1), /* ON IF A SUBSPACE WAS ACTIVE AT TIME    95706900
*                                OF ERROR                        @LGA*/ 95707000
*       8 *           BIT(5), /* RESERVED                        @LGA*/ 95707100
*       8 SDWASSRS    BIT(1), /* TURNED ON BY AN ESTAE-TYPE RECOVERY    95707200
*                                ROUTINE TO INDICATE THAT RTM SHOULD    95707300
*                                RESTORE ITS ORIGINAL SUBSPACE          95707400
*                                ENVIRONMENT IF IT RECURSES      @LGA*/ 95707500
*     7 SDWAARCH BIT(8),      /* Copy of FLCARCH                 @PHC*/ 95707640
*       9 *           BIT(7), /*                                 @PHA*/ 95707700
*       9 SDWAESAM    BIT(1), /* Copy of PSAESAME                @PHA*/ 95707800
*     7 SDWAPRM2 CHAR(8),     /* ARR MSTA AREA COPY              @L4A*/ 95707900
*       9 SDWAMST1 CHAR(4),   /* 1ST WORD OF MSTA AREA           @L4A*/ 95708000
*         11 SDWAPCEP BIT(32),/* PC ESTAE PARAM VALUE            @L4A*/ 95708100
*       9 SDWAMST2 CHAR(4),   /* 2ND WORD OF MSTA AREA           @L4A*/ 95708200
*         11 SDWAPCEA BIT(32),/* PC ESTAE PARAM ALET VALUE       @L4A*/ 95708300
*    7 SDWALSED PTR(31),      /* PTR TO LINKAGE STK ENTRY (CR15) @D2C*/ 95708400
*    7 SDWACLSE CHAR(4),      /* ON ENTRY TO AN FRR, CONTAINS COPY OF   95708500
*                                PSACLHSE.  ON ENTRY TO ESTAE, CONTAINS 95708600
*                                ZERO.                           @L9A*/ 95708700
*    7 SDWALSLV FIXED(16),    /* FOR RETRY: NUMBER OF BAKR ENTRIES PAST 95708800
*                              TIME-OF-SET TO SET LINKAGE STACK ON      95708900
*                              RETRY. IGNORED FOR FRR IF RETRY=ERROR    95709000
*                                                                    */ 95709100
*    7 * CHAR(2),             /* ROUND TO DOUBLE WORD BOUNDARY   @L9C*/ 95709200
*    7 SDWASTKN CHAR(8),      /* STOKEN OF THE SUBSPACE THAT WAS        95709300
*                                ACTIVE AT THE TIME OF ERROR  - VALID   95709400
*                                ONLY IF SDWASVLD IS ON, NOT AVAILABLE  95709500
*                                FOR FRRS                        @LGA*/ 95709600
*    7 SDWASNM  CHAR(8),      /* NAME OF THE SUBSPACE THAT WAS          95709700
*                                ACTIVE AT THE TIME OF ERROR  - VALID   95709800
*                                ONLY IF SDWASVLD IS ON, NOT AVAILABLE  95709900
*                                FOR FRRS                        @LGA*/ 95710000
*    7 SDWASNAM CHAR(8),      /* Name of the SYSTEM that this record    95710100
*                                was created on.  This is the same      95710200
*                                system name that is used in a          95710300
*                                SYSPLEX.                        @05A*/ 95710400
* /* THE LENGTH MUST BE UPDATED IF ADDITIONS ARE MADE HERE       @L4A*/ 95710500
*%IF SDWALVL ^= '' %THEN                                                95710600
*  %GOTO SDWABSL8;                      /*                   @G860P1C*/ 95710700
* %IF IHAVIA='YES' %THEN                  /*                     @L4A*/ 95710800
*    %IHAALET='VIA(SDWAALET)';            /*                     @L4A*/ 95710900
* %ELSE %IHAALET='';                      /*                     @L4A*/ 95711000
* %IF SDWA_PRD = '' %THEN                 /*                     @LIA*/ 95711100
*   %SDWAXIOMB = 'BASED(SDWAXIOM)';       /*                     @LIA*/ 95711200
* %ELSE                                   /*                     @LIA*/ 95711300
*   %SDWAXIOMB = 'BASED(ADDR(SDWA)+SDWAXIOM)';  /*               @LIA*/ 95711400
*  1 SDWARC2  IHAALET  SDWAXIOMB,       /*                       @L4C*/ 95711500
*%GOTO SDWABSL9;                        /*                   @G860P1C*/ 95711600
*%SDWABSL8: ;                           /*                   @G860P1C*/ 95711700
*  SDWALVL SDWARC2,                     /*                   @G860P1C*/ 95711800
*%SDWABSL9: ;                           /*                   @G860P1C*/ 95711900
* /*******************************************************************/ 95712000
* /*                                                                 */ 95712100
* /*        EXTENSION FOR I/O MACHINE CHECK ADDITIONAL DATA.         */ 95712200
* /*        THIS EXTENSION IS RECORDED.                      @G860P1C*/ 95712300
* /*                                                                 */ 95712400
* /*******************************************************************/ 95712500
*  6 SDWAIOMA CHAR(16),                 /*                   @G860P1C*/ 95712600
*   7 SDWARFSE CHAR(8),                 /* ESAME FSA             @LIC*/ 95712700
*   8 SDWARFSH CHAR(4),                 /* High half of FSA             95712800
*                                          (zero pre-ESAME)      @LIA*/ 95712900
*   8 SDWARFSL CHAR(4),                 /* Low half of FSA       @LIA*/ 95713000
*   7 SDWAMCIC CHAR(8),                 /* MACHINE CHECK                95713100
*                                          INTERRUPT CODE    @G860P1C*/ 95713200
*%IF SDWALVL ^= '' %THEN                                                95713300
*  %GOTO SDWABSLG;                      /*                   @G860P1C*/ 95713400
* %IF IHAVIA='YES' %THEN                  /*                     @L4A*/ 95713500
*    %IHAALET='VIA(SDWAALET)';            /*                     @L4A*/ 95713600
* %ELSE %IHAALET='';                      /*                     @L4A*/ 95713700
* %IF SDWA_PRD = '' %THEN                 /*                     @LIA*/ 95713800
*   %SDWAXLCKB = 'BASED(SDWAXLCK)';       /*                     @LIA*/ 95713900
* %ELSE                                   /*                     @LIA*/ 95714000
*   %SDWAXLCKB = 'BASED(ADDR(SDWA)+SDWAXLCK)';  /*               @LIA*/ 95714100
*  1 SDWARC3 IHAALET   SDWAXLCKB,       /*                       @L4C*/ 95714200
*%GOTO SDWABSLH;                        /*                   @G860P1C*/ 95714300
*%SDWABSLG: ;                           /*                   @G860P1C*/ 95714400
*  SDWALVL SDWARC3,                     /*                   @G860P1C*/ 95714500
*%SDWABSLH: ;                           /*                   @G860P1C*/ 95714600
* /*******************************************************************/ 95714700
* /*                                                                 */ 95714800
* /*        EXTENSION FOR THE ADDITIONAL FRELOCK DATA.               */ 95714900
* /*        THIS EXTENSION IS RECORDED.                      @G860P1C*/ 95715000
* /*                                                                 */ 95715100
* /*******************************************************************/ 95715200
*    6 SDWAFLCK CHAR(32) BDY(WORD),  /* ADDITIONAL FRELOCK              95715300
*                                                INFORMATION @G860P1C*/ 95715400
*      7 SDWAFLK1 BIT(8),  /* FLAGS INDICATING WHAT LOCKS ARE           95715500
*                             TO BE FREED                    @G860P1C*/ 95715600
*        8 SDWAFCPU BIT(1),  /* ON, FREE THE CPU LOCK        @G860P1S*/ 95715700
*        8 *        BIT(3),  /* RESERVED                     @G860P1S*/ 95715800
*        8 SDWAFRSM BIT(1),  /* ON, FREE THE RSM LOCK        @G860P1S*/ 95715900
*        8 SDWAFTRC BIT(1),  /* ON, FREE THE TRACE LOCK      @G860P1S*/ 95716000
*        8 SDWAIOCB BIT(1),  /* ON, THE IOS LOCK                 @P4M*/ 95716100
*        8 *        BIT(1),  /* RESERVED                         @P4C*/ 95716200
*      7 SDWAFLK2 BIT(8),  /* FLAGS INDICATING WHAT LOCKS ARE           95716300
*                             TO BE FREED                    @G860P1C*/ 95716400
*        8 *        BIT(3),  /* RESERVED                     @G860P1S*/ 95716500
*        8 SDWAFRSC BIT(1),  /* ON, FREE THE RSM COMMON CLASS LOCK      95716600
*                                                            @G860P1S*/ 95716700
*        8 SDWAFRSG BIT(1),  /* ON, FREE THE RSM GLOBAL CLASS LOCK      95716800
*                                                            @G860P1S*/ 95716900
*        8 SDWAFVSF BIT(1),  /* ON, FREE THE VSM FIX LOCK    @G860P1S*/ 95717000
*        8 SDWAFASG BIT(1),  /* ON, FREE THE ASM GLOBAL CLASS LOCK      95717100
*                                                            @G860P1S*/ 95717200
*        8 SDWAFRSS BIT(1),  /* ON, FREE THE RSM STEAL CLASS LOCK       95717300
*                                                            @G860P1S*/ 95717400
*      7 SDWAFLKE CHAR(4), /* FLAGS INDICATING LOCKS TO BE FREED @L9C*/ 95717500
*        9 SDWAFLE1 CHAR(1),  /* FLAGS FOR LOCKS TO BE FREED IN FIRST   95717600
*                             BYTE OF CLHS EXTENSION             @L9A*/ 95717700
*          11 SDWABLSD BIT(1),  /* ON, FREE THE BMFLSD LOCK      @LCA*/ 95717800
*          11 SDWAXDS  BIT(1),  /* ON, FREE THE XCFDS LOCK       @LBA*/ 95717900
*          11 SDWAXRES BIT(1),  /* ON, FREE THE XCFRES LOCK      @LBA*/ 95718000
*          11 SDWAXQ   BIT(1),  /* ON, FREE THE XCFQ LOCK        @LBA*/ 95718100
*          11 SDWAESET BIT(1),  /* ON, FREE THE ETRSET LOCK      @LAA*/ 95718200
*          11 SDWAIXSC BIT(1),  /* ON, FREE THE IXLSCH LOCK      @LFA*/ 95718300
*          11 SDWAIXSR BIT(1),  /* ON, FREE THE IXLSHR LOCK      @LFA*/ 95718400
*          11 SDWAIXDS BIT(1),  /* ON, FREE THE IXLDS LOCK       @LFA*/ 95718500
*        9 SDWAFLE2 CHAR(1),  /* FLAGS FOR LOCKS TO BE FREED IN SECOND  95718600
*                             BYTE OF CLHS EXTENSION             @L9A*/ 95718700
*          11 SDWAIXSH BIT(1),  /* ON, FREE THE IXLSHELL LOCK    @LFA*/ 95718800
*          11 SDWAULUT BIT(1),  /* ON, FREE THE IOSULUT LOCK     @LDA*/ 95718900
*          11 SDWAIXRE BIT(1),  /* ON, FREE THE IXLREQST LOCK    @03A*/ 95719000
*          11 SDWAWLMR BIT(1),  /* On, free the WLMRES lock      @PFC*/ 95719100
*          11 SDWAWLMQ BIT(1),  /* On, free the WLMQ lock        @LJA*/ 95719200
*          11 SDWACNTX BIT(1),  /* On, free the CONTEXT lock     @PFC*/ 95719300
*          11 SDWARGSV BIT(1),  /* On, free the REGSRV lock      @LJA*/ 95719400
*        9 SDWAFLE3 CHAR(1),  /* FLAGS FOR LOCKS TO BE FREED IN THIRD   95719500
*                             BYTE OF CLHS EXTENSION             @L9A*/ 95719600
*        9 SDWAFLE4 CHAR(1),  /* FLAGS FOR LOCKS TO BE FREED IN FOURTH  95719700
*                             BYTE OF CLHS EXTENSION             @L9A*/ 95719800
*      7 *        CHAR(2), /* RESERVED                           @L9A*/ 95719900
*      7 SDWALRSG PTR(31), /* LOCKWORD ADDR FOR RSMGL  LOCK  @G860P1C*/ 95720000
*      7 SDWALASG PTR(31), /* LOCKWORD ADDR FOR ASMGL  LOCK  @G860P1C*/ 95720100
*      7 SDWALRSS PTR(31), /* LOCKWORD ADDR FOR RSMST  LOCK  @G860P1C*/ 95720200
*      7 SDWALRSX PTR(31), /* LOCKWORD ADDR FOR RSMXM  LOCK  @G860P1C*/ 95720300
*      7 SDWALRSA PTR(31), /* LOCKWORD ADDR FOR RSMAD  LOCK  @G860P1C*/ 95720400
*      7 SDWALRSC PTR(31), /* LOCKWORD ADDR FOR RSMCM  LOCK  @G860P1S*/ 95720500
*%IF SDWALVL ^= '' %THEN                                                95720600
*  %GOTO SDWABSLK;                      /*                       @LIA*/ 95720700
* %IF IHAVIA='YES' %THEN                /*                       @LIA*/ 95720800
*    %IHAALET='VIA(SDWAALET)';          /*                       @LIA*/ 95720900
* %ELSE %IHAALET='';                    /*                       @LIA*/ 95721000
* %IF SDWA_PRD = '' %THEN                 /*                     @LIA*/ 95721100
*   %SDWAXEMEB = 'BASED(SDWAXEME)';       /*                     @LIA*/ 95721200
* %ELSE                                   /*                     @LIA*/ 95721300
*   %SDWAXEMEB = 'BASED(ADDR(SDWA)+SDWAXEME)';  /*               @LIA*/ 95721400
*  1 SDWARC4 IHAALET SDWAXEMEB,         /*                       @LIC*/ 95721500
*%GOTO SDWABSLL;                        /*                       @LIA*/ 95721600
*%SDWABSLK: ;                           /*                       @LIA*/ 95721700
*  SDWALVL SDWARC4,                     /*                       @LIA*/ 95721800
*%SDWABSLL: ;                           /*                       @LIA*/ 95721900
*/********************************************************************/ 95722000
*/*                                                                  */ 95722100
*/* SDWARC4 - Extension for 64-bit related information.              */ 95722200
*/*                                                                  */ 95722300
*/*        This extension is ONLY present when the SDWA is above     */ 95722400
*/*        the 16M line, and is recorded.  In order to access this   */ 95722500
*/*        extension, PLX code should use the following RFY after    */ 95722600
*/*        verifying that SDWAXEME is non-zero:                      */ 95722700
*/*        Rfy SDWARC4 via(SDWAALET) based(SDWAXEME)                 */ 95722800
*/*                    -------------                                 */ 95722900
*/*                         |                                        */ 95723000
*/*                     (optional - depending on usage)              */ 95723100
*/*                                                              @LIA*/ 95723200
*/********************************************************************/ 95723300
*     7 SDWAG64  CHAR(128) BDY(DWORD), /* 64-bit GPRs - initially       95723400
*                                   contains registers at the Time Of   95723500
*                                   error, also used for retry   @LIA*/ 95723600
*   %IF SYSVERSION = '' %THEN       /* PL/S-III                  @LIA*/ 95723700
*     %GOTO SDWAPLS1;               /* Skip PL/X declare         @LIA*/ 95723800
*   %IF SYSRULESMOD='PL/S-III ' %THEN                         /* @LIA*/ 95723900
*     %GOTO SDWAPLS1;               /* Skip PL/X declare         @LIA*/ 95724000
*       9 SDWAG6400 CHAR(8),     /* Register 0                   @LIA*/ 95724100
*       9 SDWAG6401 CHAR(8),     /* Register 1                   @LIA*/ 95724200
*       9 SDWAG6402 CHAR(8),     /* Register 2                   @LIA*/ 95724300
*       9 SDWAG6403 CHAR(8),     /* Register 3                   @LIA*/ 95724400
*       9 SDWAG6404 CHAR(8),     /* Register 4                   @LIA*/ 95724500
*       9 SDWAG6405 CHAR(8),     /* Register 5                   @LIA*/ 95724600
*       9 SDWAG6406 CHAR(8),     /* Register 6                   @LIA*/ 95724700
*       9 SDWAG6407 CHAR(8),     /* Register 7                   @LIA*/ 95724800
*       9 SDWAG6408 CHAR(8),     /* Register 8                   @LIA*/ 95724900
*       9 SDWAG6409 CHAR(8),     /* Register 9                   @LIA*/ 95725000
*       9 SDWAG6410 CHAR(8),     /* Register 10                  @LIA*/ 95725100
*       9 SDWAG6411 CHAR(8),     /* Register 11                  @LIA*/ 95725200
*       9 SDWAG6412 CHAR(8),     /* Register 12                  @LIA*/ 95725300
*       9 SDWAG6413 CHAR(8),     /* Register 13                  @LIA*/ 95725400
*       9 SDWAG6414 CHAR(8),     /* Register 14                  @LIA*/ 95725500
*       9 SDWAG6415 CHAR(8),     /* Register 15                  @LIA*/ 95725600
*   %SDWAPLS1:;                  /*                              @LIA*/ 95725700
*     7 * CHAR(8),               /* Reserved                     @LIA*/ 95725800
*     7 SDWAG64H CHAR(64),       /* High order halves of registers      95725900
*                                   in SDWAG64                   @LIA*/ 95726000
*     7 SDWAC64S CHAR(128) BDY(DWORD), /* ESAME control regs at time of 95726100
*                                   error. These values are not         95726200
*                                   restored on retry.           @LIA*/ 95726300
*       9 SDWAC640 CHAR(8),      /* CONTROL REGISTER 0           @LIA*/ 95726400
*       9 SDWAC641 CHAR(8),      /* CONTROL REGISTER 1           @LIA*/ 95726500
*       9 SDWAC642 CHAR(8),      /* CONTROL REGISTER 2           @LIA*/ 95726600
*       9 SDWAC643 CHAR(8),      /* CONTROL REGISTER 3           @LIA*/ 95726700
*       9 SDWAC644 CHAR(8),      /* CONTROL REGISTER 4           @LIA*/ 95726800
*       9 SDWAC645 CHAR(8),      /* CONTROL REGISTER 5           @LIA*/ 95726900
*       9 SDWAC646 CHAR(8),      /* CONTROL REGISTER 6           @LIA*/ 95727000
*       9 SDWAC647 CHAR(8),      /* CONTROL REGISTER 7           @LIA*/ 95727100
*       9 SDWAC648 CHAR(8),      /* CONTROL REGISTER 8           @LIA*/ 95727200
*       9 SDWAC649 CHAR(8),      /* CONTROL REGISTER 9           @LIA*/ 95727300
*       9 SDWAC64A CHAR(8),      /* CONTROL REGISTER 10          @LIA*/ 95727400
*       9 SDWAC64B CHAR(8),      /* CONTROL REGISTER 11          @LIA*/ 95727500
*       9 SDWAC64C CHAR(8),      /* CONTROL REGISTER 12          @LIA*/ 95727600
*       9 SDWAC64D CHAR(8),      /* CONTROL REGISTER 13          @LIA*/ 95727700
*       9 SDWAC64E CHAR(8),      /* CONTROL REGISTER 14          @LIA*/ 95727800
*       9 SDWAC64F CHAR(8),      /* CONTROL REGISTER 15          @LIA*/ 95727900
*     7 SDWATRNE CHAR(8) BDY(DWORD), /* 8-byte TEA               @LIA*/ 95728000
*%IF SDWALVL ^= '' %THEN                                                95728100
*  %GOTO SDWABSL4;                                                      95728200
* %IF IHAVIA='YES' %THEN                  /*                     @L4A*/ 95728300
*    %IHAALET='VIA(SDWAALET)';            /*                     @L4A*/ 95728400
* %ELSE %IHAALET='';                      /*                     @L4A*/ 95728500
* %IF SDWA_PRD = '' %THEN                 /*                     @LIA*/ 95728600
*   %SDWAPTRSB = 'BASED(SDWAXPAD)';       /*                     @LIA*/ 95728700
* %ELSE                                   /*                     @LIA*/ 95728800
*   %SDWAPTRSB = 'BASED(ADDR(SDWA)+SDWAXPAD)';  /*               @LIA*/ 95728900
*  1 SDWAPTRS IHAALET SDWAPTRSB,        /* THIS PTR SECTION MUST BE A   95729000
*                                          DOUBLEWORD LENGTH (MULTIPLE  95729100
*                                          OF 8) AND ALL EXTENSIONS     95729200
*                                          MUST BE A DOUBLEWORD LENGTH  95729300
*                                          (MULTIPLE OF 8)       @L4C*/ 95729400
*%GOTO SDWABSL5;                                                        95729500
*%SDWABSL4: ;                                                           95729600
*  SDWALVL SDWAPTRS,                    /*                   @G38FP2F*/ 95729700
*%SDWABSL5: ;                                                           95729800
*   6 SDWADSRP    PTR(31),              /* DUMP STORAGE RANGES PTR.     95729900
*                                          POINTS TO SDWANRC1    @L1C*/ 95730000
*   6 SDWASRVP    PTR(31),              /* ADDITIONAL COMPONENT SERVICE 95730100
*                                          DATA PTR. POINTS TO SDWARC1  95730200
*                                                                @L1C*/ 95730300
*   6 SDWAXIOM    PTR(31),              /* ADDRESS OF I/O MACHINE CHECK 95730400
*                                          AREA. PTS TO SDWARC2  @L1C*/ 95730500
*   6 SDWAXSPL    PTR(31),              /* ADDRESS OF STORAGE SUBPOOLS  95730600
*                                          AREA. PTS TO SDWANRC2 @L1C*/ 95730700
*   6 SDWAXLCK    PTR(31),              /* ADDRESS OF ADDITIONAL        95730800
*                                          FRELOCK INFORMATION. PTS TO  95730900
*                                          SDWARC3               @L1C*/ 95731000
*   6 SDWADSPP    PTR(31),              /* DATA SPACE STORAGE RANGES    95731100
*                                          POINTER - SDWANRC3    @L7C*/ 95731200
*   6 SDWAXEME    PTR(31),              /* Address of 64-bit info       95731300
*                                          Points to SDWARC4     @LIC*/ 95731400
*   6 *           CHAR(4),              /* Reserved              @LIC*/ 95731500
*%IF SDWALVL ^= '' %THEN                                                95731600
*  %GOTO SDWABSL6;                                                      95731700
* %IF IHAVIA='YES' %THEN                  /*                     @L4A*/ 95731800
*    %IHAALET='VIA(SDWAALET)';            /*                     @L4A*/ 95731900
* %ELSE %IHAALET='';                      /*                     @L4A*/ 95732000
*  1 SDWANRC1 IHAALET BASED(SDWADSRP),  /* NONRECORDABLE         @L4C*/ 95732100
*%GOTO SDWABSL7;                                                        95732200
*%SDWABSL6: ;                                                           95732300
*  SDWALVL SDWANRC1,                    /* NONRECORDABLE     @G381P2F*/ 95732400
*%SDWABSL7: ;                                                           95732500
* /*******************************************************************/ 95732600
* /*                                                                 */ 95732700
* /*        EXTENSION FOR THE DUMP STORAGE RANGES                    */ 95732800
* /*        THIS EXTENSION IS NOT RECORDED.                      @L4A*/ 95732900
* /*                                                                 */ 95733000
* /*******************************************************************/ 95733100
*   6 SDWADSR CHAR(240) BDY(WORD),      /* DUMP STORAGE RANGES          95733200
*                                                            @G382P2F*/ 95733300
*     7 SDWADSRA(30) CHAR(8),           /* ARRAY OF THE RANGES          95733400
*                                                            @G382P2F*/ 95733500
*       8 SDWADSRS    CHAR(4),          /* START ADDRESS OF THE         95733600
*                                          RANGE             @G382P2F*/ 95735700
*       8 SDWADSRE    CHAR(4),          /* END ADDRESS OF THE RANGE     95739600
*                                                            @G382P2F*/ 95743500
*         9 SDWADSRL   BIT(1),          /* LAST RANGE INDICATOR         95744100
*                                                            @G860P1S*/ 95744700
*%IF SDWALVL ^= '' %THEN                                                95745300
*  %GOTO SDWABSLE;                                                      95745900
* %IF IHAVIA='YES' %THEN                  /*                     @L4A*/ 95746100
*    %IHAALET='VIA(SDWAALET)';            /*                     @L4A*/ 95746300
* %ELSE %IHAALET='';                      /*                     @L4A*/ 95746500
*  1 SDWANRC2 IHAALET  BASED(SDWAXSPL), /*                       @L4C*/ 95746700
*  %GOTO SDWABSLF;                      /*                   @G860P1C*/ 95747100
*%SDWABSLE: ;                           /*                   @G860P1C*/ 95747700
*  SDWALVL SDWANRC2,                    /*                   @G860P1C*/ 95748300
*%SDWABSLF: ;                           /*                   @G860P1C*/ 95748900
* /*******************************************************************/ 95749500
* /*                                                                 */ 95750100
* /*        EXTENSION FOR THE LIST OF STORAGE SUBPOOLS.              */ 95750700
* /*        THIS EXTENSION IS NOT RECORDED AND IS NOT ALLOCATED      */ 95751300
* /*        FOR SUPER FRR STACKS.                            @G860P1C*/ 95751900
* /*                                                                 */ 95752500
* /*******************************************************************/ 95753100
*   6 SDWASPLE    CHAR(16) BDY(WORD),   /* UP TO 7 SUBPOOLS OF          95753700
*                                          STORAGE TO BE DUMPED         95754300
*                                          BY ABDUMP         @G860P1C*/ 95754900
*    7 SDWASPLN    FIXED(15),           /* NUMBER OF SUBPOOLS           95755500
*                                          TO DUMP           @G860P1C*/ 95756100
*    7 SDWASPLS(7) FIXED(15),           /* IDS OF SUBPOOLS              95756200
*                                          TO DUMP               @L7C*/ 95756300
*%IF SDWALVL ^= '' %THEN                /*                       @L7A*/ 95756400
*  %GOTO SDWABSLI;                      /*                       @L7A*/ 95756500
* %IF IHAVIA='YES' %THEN                /*                       @L7A*/ 95756600
*    %IHAALET='VIA(SDWAALET)';          /*                       @L7A*/ 95756700
* %ELSE %IHAALET='';                    /*                       @L7A*/ 95756800
*  1 SDWANRC3 IHAALET  BASED(SDWADSPP), /*                       @L7C*/ 95756900
*  %GOTO SDWABSLJ;                      /*                       @L7A*/ 95757000
*%SDWABSLI: ;                           /*                       @L7A*/ 95757100
*  SDWALVL SDWANRC3,                    /*                       @L7A*/ 95757200
*%SDWABSLJ: ;                           /*                       @L7A*/ 95757300
* /*******************************************************************/ 95757400
* /*                                                                 */ 95757500
* /*        EXTENSION FOR THE LIST OF DUMPOPX STORAGE RANGES.        */ 95757600
* /*        THIS EXTENSION IS NOT RECORDED.                      @L7A*/ 95757700
* /*                                                                 */ 95757800
* /*******************************************************************/ 95757900
*   6 SDWADXSL    CHAR(240) BDY(DWORD), /* LIST OF DATA SPACE STORAGE   95758000
*                                          RANGES                @L7A*/ 95758100
*     7 SDWADXSR(15) CHAR(16) BDY(WORD), /* UP TO 15 RANGES      @L7A*/ 95758200
*       8 SDWADXBG PTR(31),             /* BEGINNING OF RANGE    @L7A*/ 95758300
*       8 SDWADXEN PTR(31),             /* END OF RANGE          @L7A*/ 95758400
*         9 SDWADXLE BIT(1),            /* BIT INDICATING END OF LIST   95758500
*                                                                @L7A*/ 95758600
*       8 SDWADXST CHAR(8);             /* STOKEN FOR RANGE      @L7A*/ 95758700
*/* THESE CONSTANTS MAP RETURN CODES FROM AN EXIT IN FIELD           */ 95760000
*/* SDWARCDE                                                         */ 95770000
*DECLARE                                                                95780000
*  SDWACWT  CONSTANT(0),                /* CONTINUE WITH TERMINATION.   95790000
*                                          THIS INDICATION IMPLIES      95792000
*                                          PERCOLATION               */ 95794000
*  SDWARETY CONSTANT(4),                /* RETRY USING RETRY ADDRESS    95796000
*                                          IN SDWARTYA FIELD         */ 95798000
*  SDWAPSTI CONSTANT(16);               /* PREVENT FURTHER (E)STAI      95798400
*                                          PROCESSING                */ 95798800
*/*  THESE CONSTANTS MAP THE LEVEL OF THE SDWA IN FIELD              */ 95800000
*/*  SDWAVID                                                 @G382P2F*/ 95850000
*DECLARE                                                                95900000
*  SDWAVS3 CONSTANT(1),                 /* THE SDWA IS AT AN            95950000
*                                          MVS/SYSTEM PRODUCT           96000000
*                                          RELEASE 2 LEVEL   @G860P1S*/ 96020000
*  SDWAVS4 CONSTANT(2),                 /* THE SDWA IS AT AN MVS/SYSTEM 96040000
*                                          PRODUCT VERSION 2 RELEASE 1  96060000
*                                          LEVEL             @G860P1S*/ 96080000
*  SDWAVS5 CONSTANT(3),                 /* THE SDWA IS AT AN MVS/SYSTEM 96081100
*                                          PRODUCT JBB2110 LEVEL @L1A*/ 96082200
*  SDWAVS6 CONSTANT(4),                 /* THE SDWA IS AT AN MVS/SYSTEM 96083500
*                                          PRODUCT HBB3310 LEVEL @L4A*/ 96084800
*  SDWAVS7 CONSTANT(5),                 /* THE SDWA IS AT AN MVS/SYSTEM 96085600
*                                          PRODUCT HBB4410 LEVEL @L9A*/ 96086100
*  SDWAVS8 CONSTANT(6),                 /* THE SDWA IS AT AN MVS/SYSTEM 96086600
*                                          PRODUCT HBB5510 LEVEL @L9Z*/ 96087100
*  SDWAVS9 CONSTANT(7),                 /* The SDWA is at level         96087400
*                                          HBB7703               @LIA*/ 96087700
*  SDWAVSN CONSTANT(7); /* 7, INDICATES THE SDWA IS AT AN               96088000
*                      MVS/SYSTEM PRODUCT HBB7703 LEVEL.                96088400
*                      IF THE VALUE OF THIS CONSTANT IS CHANGED,        96088800
*                      ADD A NEW SDWAVSX WHERE X IS THE NUMBER          96090000
*                      THAT FOLLOWS THE LAST SDWAVSX FIELD, AND         96091300
*                      MAKE THE CONSTANT EQUAL TO SDWAVSN.              96092600
*                      ALSO DOCUMENT THE VALUE IN SDWAVID AS ABOVE.     96093900
*                      REFER TO MODULE IEAVTFRO FOR A LIST OF MODULES   96095200
*                      WHICH MUST BE CHANGED/RECOMPILED WHEN THE        96096500
*                      VERSION NUMBER IS CHANGED                 @LIC*/ 96098200
*/*  THESE CONSTANTS REPRESENT THE MAXIMUM NUMBER OF DUMP STORAGE    */ 96100000
*/*  RANGES ALLOWED IN SDWADSR                               @G382P2F*/ 96150000
*DECLARE                                                                96200000
*  SDWASPMX CONSTANT(7),                /* MAXIMUM NUMBER OF            96216600
*                                          SUBPOOLS          @G860P1C*/ 96233200
*  SDWADMX1 CONSTANT(4),                /* PREVIOUS MAXIMUM NUMBER      96250000
*                                          OF DUMP RANGES    @G382P2F*/ 96300000
*  SDWADMX2 CONSTANT(30),               /* NEW MAXIMUM NUMBER OF        96321600
*                                          DUMP RANGES           @L7C*/ 96343200
*  SDWADXMX CONSTANT(15);               /* MAXIMUM NUMBER OF DUMPOPX    96364800
*                                          DATA SPACE RANGES     @L7A*/ 96386400
*/*  THESE CONSTANTS REPRESENT THE VARIOUS VALUES SDWATYPE CAN HAVE  */ 96408300
*DECLARE                                                                96416600
*  SDWANREC CONSTANT(0) FIXED(8), /* NO RECOVERY WAS SETUP       @L4A*/ 96420700
*  SDWATFRR CONSTANT(1) FIXED(8), /* FRR WAS GIVEN CONTROL       @L4A*/ 96424900
*  SDWATEST CONSTANT(2) FIXED(8), /* ESTAE/I/X WAS GIVEN CONTROL @L4A*/ 96433200
*  SDWATARR CONSTANT(3) FIXED(8); /* ARR WAS GIVEN CONTROL       @L4A*/ 96441500
*                                                                       96443600
*/*  CONSTANTS FOR LENGTHS OF THE SDWA AND ITS EXTENSIONS        @P6A*/ 96445700
*                                                                       96447800
*%SDWALEN = 'LENGTH(SDWA)';             /*LENGTH OF NON-EXTENDED SDWA*/ 96450000
*  DCL SDWALN1 CONSTANT(LENGTH(SDWA));  /* CONSTANT FOR LENGTH OF THE   96462500
*                                          NON-EXTENDED SDWA     @P6A*/ 96475000
*                                                                       96487500
*%SDWAPLEN = 'LENGTH(SDWAPTRS)';        /* LEN OF PTRS EXTEN @G381P2F*/ 96500000
*  DCL SDWAPLN1 CONSTANT(LENGTH(SDWAPTRS));  /* CONSTANT FOR LENGTH     96512500
*                                          OF SDWA POINTERS      @P6A*/ 96525000
*                                                                       96537500
*%SDWARLEN = 'LENGTH(SDWANRC1)';        /* LEN OF DSR EXTEN  @G382P2F*/ 96550000
*  DCL SDWARLN1 CONSTANT(LENGTH(SDWANRC1));  /* CONSTANT FOR LENGTH     96562500
*                                          OF DSR EXTENSION      @P6A*/ 96575000
*                                                                       96587500
*%SDWACLEN = 'LENGTH(SDWARC1)';         /* LEN OF SERV EXTEN @G388P2F*/ 96600000
*  DCL SDWACLN1 CONSTANT(LENGTH(SDWARC1));  /* CONSTANT FOR LENGTH OF   96601700
*                                          SERVICE EXTENSION     @P6A*/ 96603400
*                                                                       96605100
*%SDWAILEN = 'LENGTH(SDWARC2)';         /* LENGTH OF I/O MACHINE        96607100
*                                          CHECK EXTENSION   @G860P1C*/ 96614200
*  DCL SDWAILN1 CONSTANT(LENGTH(SDWARC2));  /* CONSTANT FOR LENGTH OF   96615900
*                                          I/O MACH CHECK EXT    @P6A*/ 96617600
*                                                                       96619300
*%SDWASPL  = 'LENGTH(SDWANRC2)';        /* LENGTH OF SUBPOOL            96621300
*                                          LIST EXTENSION    @G860P1C*/ 96628400
*  DCL SDWASPL1 CONSTANT(LENGTH(SDWANRC2));  /* CONSTANT FOR LENGTH     96630100
*                                          OF SUBPOOL LIST EXT   @P6A*/ 96631800
*                                                                       96633500
*%SDWALLEN = 'LENGTH(SDWARC3)';         /* LENGTH OF ADDED FRELOCK      96635500
*                                          DATA EXTENSION    @G860P1C*/ 96642600
*  DCL SDWALLN1 CONSTANT(LENGTH(SDWARC3));  /* CONSTANT FOR LENGTH OF   96643200
*                                          FRELOCK DATA EXT      @P6A*/ 96643800
*                                                                       96644400
*%SDWADLEN = 'LENGTH(SDWANRC3)';        /* LENGTH OF EXTENSION FOR DATA 96645000
*                                          SPACE RANGES          @L7A*/ 96647400
*  DCL SDWADLN1 CONSTANT(LENGTH(SDWANRC3));  /* CONSTANT FOR LENGTH OF  96648000
*                                          DATA SPACE RANGES EXT @P6A*/ 96648600
*                                                                       96649200
* DCL SDWAELEN CONSTANT(LENGTH(SDWARC4));  /* Constant for length of    96651600
*                                          64-bit extension      @LIA*/ 96654000
* DCL SDWAELN1 CONSTANT(SDWAELEN);         /* Constant for length of    96656400
*                                          64-bit extension      @LIA*/ 96658800
* DCL SDWARLNS CONSTANT(LENGTH(SDWARC1)+                                96661200
*                        LENGTH(SDWARC2)+                               96663600
*                        LENGTH(SDWARC3)+                               96666000
*                        LENGTH(SDWARC4));  /* Sum of recordable        96668400
*                                          extension lengths     @LIA*/ 96670800
*%SDWANLEN = '('||SDWARLEN||'+'||SDWASPL||'+'||SDWADLEN||')'; /* @LIA*/ 96673200
* DCL SDWANLNS CONSTANT(SDWARLEN+SDWASPL+SDWADLEN)                      96675600
*               ;                       /* length of non-recordable     96678000
*                                          extensions            @LIA*/ 96680400
*%SDWAMLEN = '(LENGTH(SDWA)+LENGTH(SDWAPTRS)+LENGTH(SDWARC1)+           96682800
*             LENGTH(SDWARC2)+LENGTH(SDWARC3)+LENGTH(SDWARC4))'; /*     96685200
*                                  Length of SDWA with only recordable  96687600
*                                  extensions. This is a super          96690000
*                                  stack SDWA                    @LIC*/ 96692400
* DCL SDWAMLNP CONSTANT(LENGTH(SDWA)+SDWARLNS)                          96694800
*            ;                                                  /*      96697200
*                                  Length of SDWA with only recordable  96699600
*                                  extensions but without "SDWAPTRS"    96702000
*                                  section. This constant is only       96704400
*                                  for RTM use                   @LIC*/ 96706800
* DCL SDWAMLN1 CONSTANT(SDWAMLNP+LENGTH(SDWAPTRS));  /*                 96709200
*                                  Length of SDWA with only recordable  96711600
*                                  extensions. This is a super          96714000
*                                  stack SDWA                    @LIC*/ 96716400
*                                                                       96720500
*                                                                       96846700
*                                                                       96931000
*%SDWATLEN = '('||SDWAMLEN||'+'||SDWANLEN||')';  /*                     96934100
*                                  Length of SDWA with all extemsions.  96937200
*                                  This is a normal stack SDWA   @LIC*/ 96940300
* DCL SDWATLN1 CONSTANT(SDWAMLN1+SDWANLNS);                     /*      96943400
*                                  Length of SDWA with all extemsions.  96946500
*                                  This is a normal stack SDWA   @LIC*/ 96949600
*                                                                       96952700
* DCL SDWAOLEN CONSTANT(SDWATLN1-LENGTH(SDWARC4))                       96955800
*            ;                                   /* Constant for the    96958900
*                                          SDWA length when the         96962000
*                                          SDWARC4 extension is not     96965100
*                                          provided for a below the     96968200
*                                          line SDWA             @LIA*/ 96971300
*                                                                       96974400
* DCL SDWAOLN1 CONSTANT(SDWAOLEN)                                       96977500
*            ;                                   /* Constant for the    96980600
*                                          SDWA length when the         96983700
*                                          SDWARC4 extension is not     96986800
*                                          provided for a below the     96989900
*                                          line SDWA             @LIA*/ 96993000
*%SDWASLEN = '('||SDWAMLEN||'+272)';             /*                     96996100
*                                          Getmain length of a Super    96999200
*                                          stack SDWA            @LIC*/ 97002300
* DCL SDWASLN1 CONSTANT(SDWAMLN1+272);           /*                     97005400
*                                          Constant for the Getmain     97008500
*                                          length of a Super stack      97011600
*                                          SDWA                  @LIC*/ 97014700
*                                                                       97017800
*%SDWAFLEN = '('||SDWASLEN||'+'||SDWANLEN||')';            /*           97020900
*                                          Getmain length of a Normal   97024000
*                                          stack SDWA            @LIC*/ 97027100
* DCL SDWAFLN1 CONSTANT(SDWASLN1+SDWANLNS);      /*                     97030200
*                                          Constant for the Getmain     97033300
*                                          length of a Normal stack     97036400
*                                          SDWA                  @LIC*/ 97041000
*                                                                       97045600
*%IF SDWAVRAMAP = 'NO' %THEN           /* IF NOT WANT IHAVRA @G81EP11*/ 97050000
*  %GOTO SDWABSLN;                      /* SKIP THE INCLUDE  @G860P1S*/ 97100000
*  @EJECT;                              /*                   @G81EP11*/ 97150000
*  %INCLUDE SYSLIB(IHAVRA) NOSEGMENT;   /* REQUEST IHAVRA    @G81EP11*/ 97200000
*%SDWABSLN:;                            /* LABEL TO SKIP MAP @G860P1S*/ 97250000
