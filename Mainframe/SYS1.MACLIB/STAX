          MACRO                                                         00500020
&NAME STAX     &EXADDR,&OBUF=,&IBUF=,&USADDR=,&REPLACE=,&DEFER=,&MF=I, *00524100
               &IGNORE=,&CLSTATTN=,&TOPLEVL=,&LINKAGE=SVC          @L1A 00548200
.*** START OF SPECIFICATIONS ****************************************** 00572300
.*                                                                      00596400
.*01* MACRO NAME = STAX                                                 00620500
.*                                                                      00644600
.*01* DESCRIPTIVE NAME = STAX macro                                     00652600
.*                                                                      00660600
.*01* PROPRIETARY STATEMENT =                                           00668700
.*                                                                      00692800
.*       LICENSED MATERIALS - PROPERTY OF IBM                           00837400
.*       THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    00855400
.*       5695-047 (C) COPYRIGHT IBM CORP. 1981, 1991                    00873400
.*       SEE COPYRIGHT INSTRUCTIONS                                     00891400
.*                                                                      00909700
.*01* STATUS = JBB4422                                             @L1C 00933800
.*                                                                      00957900
.*01* FUNCTION = Provide the interface to the STAX service routines     00958700
.*               (IEAVAX00, IEAVAX01, and IEAVAX02)                     00959500
.*                                                                      00960300
.*01* OPERATION = Create, delete, modify, or defer an attention exit    00961100
.*                routine.                                              00961200
.*                                                                      00961300
.*01* USAGE =                                                           00961400
.*                                                                      00961500
.* Use the STAX service routine in your command processor or problem    00961600
.* program to cause the system to recognize and schedule an attention   00961700
.* exit routine that receives control asynchronously when an            00961800
.* attention interruption occurs.  Attention interruptions occur        00961900
.* when a user presses the attention key or when a simulated            00962000
.* attention is specified.  The address of an attention exit routine    00962100
.* to receive control is specified in the STAX macro invocation.        00962200
.*                                                                      00962300
.* If the ATTENTION key is pressed once, the first-level attention      00962400
.* exit is given control; if pressed twice, the second-level            00962500
.* attention exit is given control, and so forth (LIFO order).          00962600
.* The attention exit routine receives control in the same addressing   00962700
.* mode (24, 31) in which the corresponding STAX macro is issued.       00962800
.*                                                                      00962900
.* The STAX macro instruction can also be used to cancel the last       00963000
.* attention exit routine established by the task.  To do this, specify 00963100
.* the STAX macro instruction without any operands.                     00963200
.*                                                                      00963300
.* The STAX macro instruction is used only in a time sharing            00963400
.* environment. When a task other than a TSO user issues the STAX       00963500
.* macro, no action is taken.  In addition, attention exits can be      00963600
.* established only for time sharing tasks operating in the foreground. 00963700
.*                                                                      00963800
.* For information on writing attention exit routines, see TSO          00963900
.* Extensions Programming Guide.                                        00964000
.*                                                                      00965100
.*01* SYNTAX =                                                          00965900
.*                                                                      00966700
.* The STAX macro is available only in assembler.                       00968700
.*                                                                      00970700
.* The STAX macro instruction has a list, an execute, and a standard    00970800
.* form.                                                                00970900
.*                                                                      00971000
.*                                                                      00971100
.* The following are the valid combinations of parameters:              00971200
.*                                                                      00971300
.*     STAX    exit address                                             00971400
.*                                                                      00971500
.*              ,OBUF=(output buffer address,size)                      00971600
.*              ,IBUF=(input buffer address,size)                       00971700
.*              ,USADDR=user address                                    00971800
.*              ,DEFER=YES/NO                                           00971900
.*              ,REPLACE=YES/NO           {Default: YES}                00972000
.*              ,IGNORE=YES/NO                                          00972300
.*              ,CLSTATTN=YES/NO          {Default: NO, See Note 2}     00973100
.*              ,TOPLEVL=YES/NO           {Default: NO, See Note 2}     00973900
.*              ,MF=L or ,MF=(E,address)                                00974700
.*                                                                      00975500
.*                                                                      00976300
.*     STAX    DEFER=YES/NO                                             00977100
.*            ,MF=L or ,MF=(E,address)                                  00977900
.*                                                                      00978700
.*                                                                      00979500
.*     STAX   LINKAGE=BRANCH              {Default: SVC, See Note 3}    00980300
.*           ,DEFER=YES/NO                                              00981100
.*                                                                      00981900
.*                                                                      00982700
.*     STAX   IGNORE=YES/NO               {See Note 4}                  00983500
.*                                                                      00984300
.*     STAX                               {See Note 5}                  00985100
.*                                                                      00985900
.*     Notes:                                                           00986700
.*       1) When STAX is issued in 31 bit addressing mode, exit address 00987500
.*          and USADDR can reside above the 16 Meg line in virtual      00988300
.*          storage.  All other input must reside below the line.       00989100
.*       2) The optional parameters CLSTATTN and TOPLEVL each require   00989900
.*          that an exit address be specified.                          00990700
.*       3) When LINKAGE=BRANCH is specified, DEFER=YES/NO is the       00991500
.*          ONLY parameter allowed.  STAX branch entry defer is a       00992300
.*          service reserved only for certain callers - see             00993700
.*          "RESTRICTIONS" section.                                     00995100
.*       4) STAX IGNORE with no other operands may ONLY be specified    00996500
.*          when coded within an attention exit previously established  00997900
.*          with the CLSTATTN=YES parameter.                            00998700
.*       5) STAX issued without any operands will cancel the last       00999500
.*          attention exit routine established by the task.             01000300
.*                                                                      01000400
.* exit address                                                         01000500
.*   Specify the entry point of the routine to be given control when an 01000600
.*   attention interruption is received.  You must specify the exit     01000700
.*   address in both the list and the execute forms of the STAX macro   01000800
.*   instruction when you are establishing an attention interruption    01000900
.*   handling exit.                                                     01001000
.*                                                                      01001100
.* OBUF=(output buffer address,output buffer size)                      01001200
.*   Output buffer address - Supply the address of a buffer you have    01001300
.*   obtained and initialized with the message to be put out to the     01001400
.*   terminal user who enters the attention interruption.  This message 01001500
.*   can indentify the exit routine and request information from the    01001600
.*   terminal user.  It is sent to the terminal before the attention    01001700
.*   exit routine is given control.                                     01001800
.*                                                                      01001900
.*   Output buffer size - Indicate the number of characters in the      01002000
.*   Output Buffer.  The size can range from 0 to 32,767 inclusive.     01002100
.*                                                                      01002200
.* IBUF=(input buffer address,input buffer size)                        01002300
.*   Input buffer address - Supply the address of a buffer you have     01002400
.*   obtained to receive responses from the terminal user.  The         01002500
.*   attention exit routine is not given control until the STAX service 01002600
.*   routine has placed the terminal user's reply into this buffer.     01002700
.*                                                                      01002800
.*   Input buffer size - Indicate the number of bytes you have provided 01002900
.*   as an input buffer.  The size can range from 0 to 32,767           01003000
.*   inclusive.                                                         01003100
.*                                                                      01003200
.* USADDR=(user address)                                                01003300
.*   The user address is a 24- or 31-bit address that points to any     01003400
.*   information you want passed to your attention handling exit        01003500
.*   routine when it is given control.  When the attention exit gains   01003600
.*   control, register 1 points to the attention exit parameter list.   01003700
.*                                                                      01003800
.*                                                                      01003900
.*    Number                                                            01004000
.*  of Bytes      Contents or Meaning                                   01004100
.*  --------      -------------------                                   01004200
.*                                                                      01004300
.*     4    The address of the terminal attention interrupt element     01004400
.*          (TAIE).                                                     01004500
.*                                                                      01004600
.*     4    The address of the input buffer you specified as the IBUF   01004700
.*          operand of the STAX macro instruction.  This field is zero  01004800
.*          if you did not include the IBUF operand in the STAX macro   01004900
.*          instruction.                                                01005000
.*                                                                      01005100
.*     4    The address of the user parameter information you specified 01005200
.*          as the USADDR operand of the STAX macro instruction.  This  01005300
.*          field is zero if you did not include the USADDR operand in  01005400
.*          the STAX macro instruction.                                 01005500
.*                                                                      01005600
.*                                                                      01005700
.* REPLACE=YES or NO                                                    01005800
.*   YES indicates that the attention exit specified by this STAX macro 01005900
.*   instruction replaces any attention exit specified by a STAX macro  01006000
.*   instruction previously issued by this task.  YES is the default    01006100
.*   value.  REPLACE implies establishing a new attention exit routine  01006200
.*   for the task, if no previous attention exit has been established.  01006300
.*                                                                      01006400
.*   NO indicates that this attention exit be established as a new      01006500
.*   attention exit for this task, in addition to any that have been    01006600
.*   previously established for this task.                              01006700
.*                                                                      01006800
.* DEFER=YES or NO                                                      01006900
.*   If the DEFER operand is coded in the STAX macro instruction, the   01007000
.*   option you request (YES or NO) applies to all tasks within the     01007100
.*   task chain in which the macro instruction was issued.  Any task    01007200
.*   can issue the STAX macro instruction to specify DEFER=YES or NO;   01007300
.*   it is not necessary for the issuing task itself to have provided   01007400
.*   an attention exit routine.  If the DEFER operand is not coded in   01007500
.*   the macro instruction, no action is taken by the STAX service      01007600
.*   routine regarding the deferral of attention exits.                 01007700
.*                                                                      01007800
.*   YES indicates that any attention interruptions received are to     01007900
.*   be queued and are not to be processed until another STAX macro     01008000
.*   instruction is executed specifying DEFER=NO, or until the program  01008100
.*   that issued the STAX with the DEFER=YES terminates.                01008200
.*                                                                      01008300
.*   NO indicates that the defer option is being cancelled.  Any        01008400
.*   attention interruptions received while the defer option was in     01008500
.*   effect will be processed.                                          01008600
.*                                                                      01008700
.*   Be aware that if a program issues a STAX macro instruction         01008800
.*   specifying DEFER=YES, the program can get into a situation where   01008900
.*   an attention interruption cannot be received from the terminal.    01009000
.*   If your program enters a loop or an unending wait before it has    01009100
.*   issued a STAX macro instruction specifying DEFER=NO, you cannot    01009200
.*   regain control at the terminal by entering an attention            01009300
.*   interruption.                                                      01009400
.*                                                                      01009500
.*   You do not need to specify an exit address in a STAX macro         01009600
.*   instruction issued only to change deferral status.                 01009700
.*                                                                      01009800
.* CLSTATTN=YES or NO                                                   01009900
.*   The CLSTATTN operand is optional.  Code it only when you are       01010000
.*   establishing an attention exit. If you code the CLSTATTN keyword,  01010100
.*   you must provide an exit address.                                  01010200
.*                                                                      01010300
.*   YES indicates that the attention exit being established can        01010400
.*   receive control for normal attention interruptions and for         01010500
.*   attention interruptions that occur while a CLIST with a CLIST      01010600
.*   attention exit is processing.  When an attention interruption      01010700
.*   occurs while a CLIST with a CLIST attention exit is processing,    01010800
.*   the last attention exit established with the CLSTATTN operand then 01010900
.*   gains control. The CLIST attention exit is processed or control is 01011000
.*   passed to the CLIST attention facility. If no attention exit was   01011100
.*   established with the CLSTATTN operand, control passes to the first 01011200
.*   attention exit established.                                        01011300
.*                                                                      01011400
.*   NO is the default value for the CLSTATTN operand.  No indicates    01011500
.*   that the attention exit being established cannot process a CLIST   01011600
.*   that has a CLIST attention exit.                                   01011700
.*                                                                      01011800
.* IGNORE=YES or NO                                                     01011900
.*   The IGNORE operand is optional and is effective only when used in  01012000
.*   conjunction with the CLSTATTN=YES operand.  The IGNORE operand can 01012100
.*   be coded at two times: 1) when establishing an attention exit and  01012200
.*   2) within an attention exit.  Use the IGNORE operand only when     01012300
.*   attention interruptions are to be ignored or reestablished.        01012400
.*                                                                      01012500
.*   IGNORE=YES, when coded with the CLSTATTN operand (and an exit      01012600
.*   address) to establish an attention exit, indicates that attention  01012700
.*   interruptions are to be ignored when the attention exit being      01012800
.*   established receives control.                                      01012900
.*                                                                      01013000
.*   When coded within an attention exit previously established with    01013100
.*   the CLSTATTN=YES operand, IGNORE=YES also indicates that attention 01013200
.*   interruptions are to be ignored until the attention exit currently 01013300
.*   in control returns control to the system or issues the IGNORE=NO   01013400
.*   operand.  However, when coded within an attention exit, IGNORE=YES 01013500
.*   must be the only operand on the STAX macro instruction.            01013600
.*                                                                      01013700
.*   NO indicates that attention interruptions are to be reestablished. 01013800
.*   An attention exit established with the CLSTATTN=YES operand can    01013900
.*   issue IGNORE=NO to indicate that attention interruptions are to be 01014000
.*   reestablished.  The IGNORE=NO operand must be the only operand on  01014100
.*   the STAX macro instruction.  IGNORE, without the CLSTATTN operand  01014200
.*   and an exit address, can only be issued by an attention exit that  01014300
.*   was established with the CLSTATTN=YES operand.                     01014400
.*                                                                      01014500
.* TOPLEVL=YES or NO                                                    01014600
.*   The TOPLEVL operand is optional.  Code it only when you are        01014700
.*   establishing an attention exit. If you code the TOPLEVL operand,   01014800
.*   you must provide an exit address.                                  01014900
.*                                                                      01015000
.*   NO indicates that attention exits received prior to the one being  01015100
.*   established can receive control when the attention key is pressed  01015200
.*   multiple times.  For example, when the user presses the attention  01015300
.*   key two times, the next to last attention exit received is given   01015400
.*   control.  NO is the default value for the TOPLEVL operand.         01015500
.*                                                                      01015600
.*   YES indicates that when the attention key is pressed multiple      01015700
.*   times, control is NOT to be passed to previously received          01015800
.*   attention exits.  When an attention exit established with the      01015900
.*   TOPLEVL=YES operand receives control, the user cannot terminate    01016000
.*   execution of the exit by pressing the attention key.               01016100
.*                                                                      01016200
.* LINKAGE=SVC    (Default)                                             01016300
.*         BRANCH                                                       01016400
.*   The LINKAGE keyword is optional.  If it is not specified it        01016500
.*   defaults to LINKAGE=SVC.  This keyword specifies the type of       01016600
.*   linkage from the caller to the STAX service routines.              01016700
.*                                                                      01016800
.*   The LINKAGE=BRANCH option is only available to key 0,              01016900
.*   supervisor state users.  When LINKAGE=BRANCH is specified,         01017000
.*   DEFER= is the only other parameter allowed.                        01017100
.*                                                                      01017200
.* MF=L                                                                 01017300
.*   This specifies the list form of the STAX macro instruction.  It    01017400
.*   generates a STAX parameter list.                                   01017500
.*                                                                      01017600
.* MF=(E,address)                                                       01017700
.*   This specifies the execute form of the STAX macro instruction.  It 01017800
.*   completes or modifies the STAX parameter list and passes the       01017900
.*   address of the parameter list to the STAX service routine.         01018000
.*                                                                      01018100
.* You can place each of the required address and size parameters into  01018200
.* registers and specify those registers, within parentheses, in the    01018300
.* STAX macro instruction. The following example shows how an execute   01018400
.* form of the STAX macro instruction might look if you load all the    01018500
.* required parameters into registers.                                  01018600
.*                                                                      01018700
.*   STAX    (2),IBUF=((3),(4)),OBUF=((5),(6)),USADDR=(7),MF=(E,(1))    01018800
.*                                                                      01018900
.*01* NOTES =                                                           01019000
.*                                                                      01019100
.*      RESTRICTIONS =                                                  01019200
.*       1) For STAX LINKAGE=BRANCH,DEFER=YES/NO, invoker must be in    01019300
.*          task mode, key 0, supervisor state.                         01019400
.*       2) For STAX LINKAGE=BRANCH,DEFER=NO, invoker must also be      01019500
.*          enabled and unlocked.                                       01019600
.*                                                                      01019700
.*      DEPENDENCIES =                                                  01019800
.*          If any new parameters are added to the STAX macro, the      01019900
.*          statement following label "CHKALL" must be revised to       01020000
.*          check for them.                                             01020100
.*                                                                      01020200
.*                                                                      01020300
.*01* Return Codes from the STAX Service Routine                        01020400
.*                                                                      01020500
.* When control is returned, register 1 either contains the address of  01020600
.* the user parameter list provided for the previous exit for this task 01020700
.* or it contains zero.  Register 1 contains zero if this is the first  01020800
.* STAX issued for this task, the STAX was issued with a cancel option, 01020900
.* or the STAX was issued with only the DEFER option.  If an error was  01021000
.* detected (return code 8, 12 or 16), then the contents of register 1  01021100
.* is the same as it was at entry.                                      01021200
.*                                                                      01021300
.* Register 15 contains one of the following return codes:              01021400
.*                                                                      01021500
.*    Return Code                                                       01021600
.*    Dec (Hex)                         Description                     01021700
.*    -----------                       -----------                     01021800
.*                                                                      01021900
.*    0 (0)          The STAX service routine successfully completed    01022000
.*                                                                      01022100
.*    4 (4)          Deferral of attention exits has already been       01022200
.*                   requested and is presently in effect.  Any other   01022300
.*                   operands you specified in the STAX macro           01022400
.*                   instructions have processed processed              01022500
.*                   successfully.                                      01022600
.*                                                                      01022700
.*    8 (8)          The user of the DEFER option isinvalid             01022800
.*                   (asynchronous exit routine).                       01022900
.*                                                                      01023000
.*    12 (C)         The STAX macro has already been issued with the    01023100
.*                   IGNORE=YES operand.                                01023200
.*                                                                      01023300
.*    16 (10)        The STAX macro has already been issued with the    01023400
.*                   IGNORE=NO operand.                                 01023500
.*                                                                      01023600
.*    20 (14)        A branch entry STAX DEFER=NO was requested, but    01023700
.*                   attentions were not deferred.                      01023800
.*                                                                      01023900
.*    24 (18)        A branch entry STAX DEFER=NO was requested, but    01024000
.*                   the task is still not eligible for attentions.     01024100
.*                                                                      01024200
.*                                                                      01024300
.* Note: If the STAX macro instruction is issued by a task that is not  01024400
.* executing in a TSO/E user's address space, a return code of zero is  01024500
.* passed to the caller in register 15.  The contents of register 1 is  01024600
.* not altered.                                                         01024700
.*                                                                      01024800
.*01* COMPONENT = SC1CU (Region Control Task)                           01024900
.*                                                                      01025000
.*01* CHANGE ACTIVITY =                                                 01025100
.*                                                                      01025200
.*  $D1=DCR0082  JBB2220  850814  PD16H5:  CLIST ATTN EXIT SUPPORT      01030200
.*  $01=OY12344  JBB2220  880506  PD16BN:  TOPLEVL ATTN EXIT SUPPORT    01062300
.*  $L1=FMCSX    JBB4422  900928  PD16IG:  Branch entry STAX DEFER      01066300
.*                                                                      01070300
.*01* DISTRIBUTION LIBRARY = ATSOMAC                                    01110500
.*                                                                      01150700
.*** END OF SPECIFICATIONS ******************************************** 01174800
         GBLC  &SYSSPLV           GLOBAL FOR SPLEVEL MACRO     @G860PXZ 01200000
         SPLEVEL TEST             OBTAIN DEFAULT FOR SYSSPLV   @G860PXZ 01250000
         AIF   ('&SYSSPLV' EQ '1').LEVEL1 CHECK LEVEL TO GEN.  @G860PXZ 01300000
.*       GENERATE THE HIGHEST LEVEL MACRO                      @G860PXZ 01350000
*        MACDATE    9/28/90                                        @L1C 01400000
         LCLC  &ERRORSFOUND                                        @L1A 01450000
         LCLA  &A                                                       01500020
         LCLC  &GNAME,&H                                                02000020
         LCLA  &REPLSW,&DEFRSW                                          02500002
         LCLA  &CLIST,&IGNORY,&IGNORNO,&CLST,&IGNN,&IGNY           @D1A 02525000
         LCLA  &REPLYES,&REPLNO,&CLEAR                           YM4019 02550002
         LCLA  &NEWFORM,&FORMNUM                               @G860PXB 02562500
         LCLA  &TPLVSW            TOPLEVL SWITCH                   @01A 02568700
&NEWFORM SETA  X'02'              INDICATES NEW FORMAT         @G860PXB 02575000
&FORMNUM SETA  X'01'              FORMAT NUMBER FOR NEW FORMAT @G860PXB 02587500
&REPLYES SETA  X'30'                                             YM4019 02600002
&REPLNO  SETA  X'40'                                             YM4019 02650002
&CLEAR   SETA  X'40'                                             YM4019 02700002
&CLEARI  SETA  X'3F'              MASK TO CLEAR IGNORE SWITCHES    @D1A 02750000
&CLST    SETA  X'01'              INDICATES CLIST ATTENTION EXIT   @D1A 02800000
&IGNN    SETA  X'40'              INDICATES IGNORE=NO              @D1A 02850000
&IGNY    SETA  X'80'              INDICATES IGNORE=YES             @D1A 02900000
&GNAME   SETC  'IHB'.'&SYSNDX'                                          04000020
         AIF   ('&LINKAGE' NE 'SVC').CKBRNCH                       @L1A 04025000
         AIF   ('&MF' EQ 'L' OR '&MF(1)' EQ 'E').DEFER8            @D1C 04050000
         AIF   ('&EXADDR' NE '').CHKTOP                            @01A 04100000
         AIF   ('&TOPLEVL' NE '').ERROR0     TOPLEVL OPTION USED   @01A 04150000
         AIF   ('&OBUF' NE '' OR '&IBUF' NE '').ERROR1           YM4019 04300002
         AIF   ('&REPLACE' NE '' OR '&USADDR' NE '').ERROR1      YM4019 04400002
         AIF   ('&MF' NE 'I').ERROR2                             YM4019 04450002
         AIF   ('&CLSTATTN' NE '').ERROR3                          @D1A 04462500
         AIF   ('&DEFER' EQ '' AND '&IGNORE' EQ '').CANCEL         @D1C 04481200
.DEFER8  AIF   ('&EXADDR' NE '').CHKTOP                            @01C 04485900
         AIF   ('&IGNORE' NE '' AND '&DEFER' NE '').ERROR7         @D1A 04490600
         AIF   ('&IGNORE' NE '' AND '&TOPLEVL' NE '').ERROR7       @01A 04492900
         AIF   ('&CLSTATTN' NE '').ERROR3                          @D1A 04495300
.CHKTOP  AIF   ('&TOPLEVL' EQ '').DEFER4    TOPLEVL NOT SPECIFIED  @01A 04496200
         AIF   ('&TOPLEVL' EQ 'NO').DEFER4  TOPLEVL NOT REQUESTED  @01A 04497100
         AIF   ('&TOPLEVL' NE 'YES').ERROR8                        @01A 04498000
&TPLVSW  SETA  X'80'                        SET TOPLEVL BIT        @01A 04498900
.DEFER4  AIF   ('&REPLACE' EQ '').DEFER5                                04500020
         AIF   ('&REPLACE' EQ 'YES').DEFER5                             04600020
         AIF   ('&REPLACE' NE 'NO').ERROR1                       YM4019 04650002
&REPLSW  SETA  X'40'                                                    04700020
.DEFER5  ANOP                                                           04800020
         AIF   ('&IGNORE' EQ '').CLIST1                            @D1A 04813300
         AIF   ('&IGNORE' EQ 'NO').OFF                             @D1A 04826600
         AIF   ('&IGNORE' NE 'YES').ERROR4                         @D1A 04836500
         AIF   ('&EXADDR' EQ '' AND '&CLSTATTN' NE '').ERROR3      @D1A 04846400
         AIF   ('&EXADDR' NE '' AND '&CLSTATTN' NE 'YES').ERRCHK   @D1A 04856300
&IGNORY  SETA  X'80'                                               @D1A 04866500
         AGO   .CLIST1                                             @D1A 04879800
.ERRCHK  AIF   ('&CLSTATTN' EQ 'NO' OR '&CLSTATTN' EQ '').ERROR6   @D1A 04884200
         AGO   .ERROR5                                             @D1A 04888600
.OFF     ANOP                                                      @D1A 04893100
&IGNORNO SETA  X'40'                                               @D1A 04906400
.CLIST1  ANOP                                                      @D1A 04919700
         AIF   ('&CLSTATTN' EQ '').NEXT                            @D1A 04933000
         AIF   ('&CLSTATTN' EQ 'NO').NEXT                          @D1A 04946300
         AIF   ('&CLSTATTN' NE 'YES').ERROR5                       @D1A 04959600
&CLIST   SETA  X'01'                                               @D1A 04972900
.NEXT    ANOP                                                      @D1A 04986200
         AIF   ('&NAME' EQ '' OR '&MF' EQ 'L').CONTA                    05000020
&NAME    DS    0H                                                       05500020
         AGO   .CONTA                                                   06000020
.ERROR   MNOTE 8,'INVALID REGISTER SPECIFICATION'                YM4019 06500002
         MEXIT                                                          07000020
.ERROR0  MNOTE 8,'TOPLEVL INVALID WHEN SPECIFIED WITHOUT EXADDR'   @01A 07050000
         MEXIT                                                     @01A 07100000
.ERROR1  MNOTE 8,'INVALID OPTION SPECIFIED'                      YM4019 07500002
         MEXIT                                                          08000020
.ERROR3  MNOTE 8,'CLSTATTN INVALID WHEN SPECIFIED WITHOUT EXADDR'  @D1A 08050000
         MEXIT                                                     @D1A 08100000
.ERROR4  MNOTE 8,'INVALID VALUE SPECIFIED FOR IGNORE KEYWORD'      @D1A 08150000
         MEXIT                                                     @D1A 08200000
.ERROR5  MNOTE 8,'INVALID VALUE SPECIFIED FOR CLSTATTN KEYWORD'    @D1A 08250000
         MEXIT                                                     @D1A 08300000
.ERROR6  MNOTE 8,'INVALID COMBINATION OF EXADDR, IGNORE, AND CLSTATTN K*08333300
               EYWORDS'                                            @D1A 08366600
         MEXIT                                                     @D1A 08400000
.ERROR7  MNOTE 8,'WHEN IGNORE WITHOUT EXADDR USED, NO OTHER KEYWORDS AL*08425000
               LOWED'                                              @D1A 08450000
         MEXIT                                                     @D1A 08475000
.ERROR8  MNOTE 8,'INVALID VALUE SPECIFIED FOR TOPLEVL KEYWORD'     @01A 08483300
         MEXIT                                                     @01A 08491600
.CONTA   ANOP                                                           08500020
         AIF   ('&DEFER' EQ '').DEFER1       IS DEFER REQUESTED         08540020
         AIF   ('&DEFER' EQ 'YES').DEFER2    SHOULD DEFER ATTN          08580020
         AIF   ('&DEFER' EQ 'NO').DEFER3     SHOULD CANCEL DEFER ATTN   08620020
         AGO   .ERROR1        INVALID OPERAND HAS BEEN SPECIFIED        08660020
.DEFER2  ANOP                 SET DEFER SWITCH EQUAL TO                 08700020
&DEFRSW  SETA  X'20'          DEFER/YES OR X'20'                        08740020
         AGO   .DEFER1                                                  08780020
.DEFER3  ANOP                 SET DEFER SWITCH EQUAL TO                 08820020
&DEFRSW  SETA  X'10'          DEFER/NO OR X'10'                         08860020
.DEFER1  ANOP                                                           08900020
         AIF   ('&MF' EQ 'L').LROUT      IS THIS A LIST REQUEST         09000020
         AIF   ('&MF' EQ 'I').IROUT      IS THIS A STANDARD REQUEST     09500002
         AIF   ('&MF(1)' EQ 'E').EROUT     IS THIS A EXECUTE REQUEST    10000002
.ERROR2  MNOTE 8,'INVALID MF SPECIFICATION'                      YM4019 10500002
         MEXIT                                                          11000020
.EROUT   ANOP                                                           11500020
         AIF   ('&MF'(4,1) EQ '(').ISAREG                               12000020
         LA    1,&MF(2)      ADDRESS OF PARAMETER LIST INTO REG 1       12500020
         AGO   .CONTB                                                   13000020
.ISAREG  AIF   ('&MF(2)' EQ '(1)').CONTB                                13500020
&A       SETA  K'&MF-6                                                  14000020
&H       SETC  '&MF'(5,&A)                                              14500020
         LR    1,&H          ADDRESS OF PARAMETER LIST INTO REG 1       15000020
.CONTB   ANOP                                                           15500020
         AIF   ('&EXADDR' EQ '').CONTC                                  15700020
         AIF   ('&EXADDR'(1,1) EQ '(').ISAREG1                          16000020
         LA    14,&EXADDR    ADDRESS OF EXIT ROUTINE                    16500020
         ST    14,0(1,0)     INTO PARAMETER LIST                        17000020
         AGO   .CONTC                                                   17500020
.ISAREG1 ST    &EXADDR(1),0(1,0)  ADDRESS OF EXIT ROUTINE INTO LIST     18000020
.CONTC   AIF   ('&USADDR' EQ '').CONTD                                  18500020
         AIF   ('&USADDR'(1,1) EQ '(').ISAREG2                          19000020
         LA    14,&USADDR    ADDRESS OF USER PARAMETERS                 19500020
         ST    14,20(1,0)    INTO LIST                         @G860PXB 19550000
         AGO   .CONTD                                                   20500020
.ISAREG2 ANOP                                                  @G860PXB 20550000
         ST    &USADDR(1),20(1,0) ADDRESS OF USER PARMS INTO   @G860PXB 21000000
*                                 LIST                                  21500020
.CONTD   AIF   ('&OBUF(1)' EQ '').CNTSUB1                               22000020
         AIF   ('&OBUF(1)'(1,1) EQ '(').IRGSUB1                         22500020
         LA    14,&OBUF(1)   ADDRESS OF OUTPUT BUFFERS                  23000020
         ST    14,8(1,0)     INTO LIST                                  23500020
         AGO   .CNTSUB1                                                 24000020
.IRGSUB1 ST   &OBUF(1),8(1,0)  ADDRESS OF OUTPUT BUFFERS INTO LIST      24500020
.CNTSUB1 AIF  ('&OBUF(2)' EQ '').CONTE                                  25000020
         AIF   ('&OBUF(2)'(1,1) EQ '(').IRGSUB2                         25500020
         LA    14,&OBUF(2)(0,0) LENGTH OF OUTPUT BUFFERS        @YM2296 26000002
         STH   14,6(1,0)     INTO LIST                          @YM2296 26500002
         AGO   .CONTE                                                   27000020
.IRGSUB2 STH  &OBUF(2),6(1,0) LENGTH OF OUTPUT BUFFERS IN LIST  @YM2296 27500002
.CONTE   AIF   ('&IBUF(1)' EQ '').CNTSUB2                               28000020
         AIF   ('&IBUF(1)'(1,1) EQ '(').IRGSUB3                         28500020
         LA    14,&IBUF(1)    ADDRESS OF INPUT BUFFERS                  29000020
         ST    14,12(1,0)    INTO LIST                                  29500020
         AGO   .CNTSUB2                                                 30000020
.IRGSUB3 ST   &IBUF(1),12(1,0)    ADDRESS OF INPUT BUFFERS INTO LIST    30500020
.CNTSUB2 AIF  ('&IBUF(2)' EQ '').CONTG                                  31000020
         AIF   ('&IBUF(2)'(1,1) EQ '(').IRGSUB4                         31500020
         LA    14,&IBUF(2)(0,0) LENGTH OF INPUT BUFFERS         @YM2296 32000002
         STH   14,4(1,0)     INTO LIST                          @YM2296 32500002
         AGO   .CONTG                                                   33000020
.IRGSUB4 STH  &IBUF(2),4(1,0) LENGTH OF INPUT BUFFERS IN LIST   @YM2296 33500002
.CONTG   AIF   ('&REPLACE' EQ '').CNTSUB5                               34000002
         AIF   ('&REPLACE' EQ 'YES').CNTSUB6                    @YM1829 34500002
         OI    16(1),&REPLNO      SET REPLACE NO                 YM4019 34550002
         AGO   .CNTSUB5                                          YM4019 34600002
.CNTSUB6 NI    16(1),&REPLYES     INDICATE REPLACE PREVIOUS STAX YM4019 34650002
.CNTSUB5 AIF   ('&DEFER' EQ '').CNTSUB7                          YM4019 34700002
         NI    16(1),&CLEAR       CLEAR DEFER SWITCHES           YM4019 34750002
         OI    16(1),&DEFRSW     SET DEFER SWITCHES              YM4019 34800002
.CNTSUB7 ANOP                                                  @G860PXB 34850000
         OI    16(1),&NEWFORM    INDICATE 31-BIT FORMAT        @G860PXB 34900000
         MVI   17(1),&FORMNUM    MOVE IN FORMAT NUMBER         @G860PXB 34950000
         AIF   ('&CLSTATTN' EQ '' OR '&CLSTATTN' EQ 'NO').CNTSUB8  @D1A 34955500
         OI    16(1),&CLST       SET CLSTATTN INDICATOR            @D1A 34961000
.CNTSUB8 ANOP                                                      @D1A 34966500
         AIF   ('&IGNORE' EQ '').CNTSB10                           @01C 34969200
         AIF   ('&IGNORE' EQ 'NO').CNTSUB9                         @D1A 34971900
         NI    18(1),&CLEARI     CLEAR IGNORE SWITCHES             @D1A 34974600
         OI    18(1),&IGNY       SET IGNORE=YES INDICATOR          @D1A 34977500
         AGO   .CNTSB10                                            @01C 34983000
.CNTSUB9 ANOP                                                      @D1A 34988500
         NI    18(1),&CLEARI     CLEAR IGNORE SWITCHES             @D1A 34991200
         OI    18(1),&IGNN       SET IGNORE=NO INDICATOR           @D1A 34994000
.CNTSB10 ANOP                                                      @01A 35044000
         AIF   ('&TOPLEVL' EQ '').CNTSB11                          @01A 35094000
         OI    16(1),&TPLVSW     SET TOPLEVL SWITCH                @01A 35144000
.CNTSB11 AGO   .SVC                                            @G860PXB 35194000
.LROUT   ANOP                                                           37500020
&NAME    DS    0F                                                       38000020
.CONTL4  AIF   ('&EXADDR' EQ '').DEFER6                                 38200020
         AIF   ('&EXADDR'(1,1) EQ '(').ERROR                            38400020
         DC    AL4(&EXADDR)  ADDRESS OF EXIT ROUTINE                    38450020
         AGO   .DEFER7                                                  38600020
.DEFER6  DC    AL4(0)         ADDRESS OF EXIT ROUTINE                   38800020
.DEFER7  ANOP                                                           39000020
.CNTL6   AIF   ('&IBUF(2)' EQ '').CONTL1                                39500020
         AIF   ('&IBUF(2)'(1,1) EQ '(').ERROR                           40000020
         DC    AL2(&IBUF(2)) LENGTH OF INPUT BUFFERS                    40500020
         AGO   .CONTL2                                                  41000020
.CONTL1  DC    AL2(0)        LENGTH OF INPUT BUFFERS                    41500020
.CONTL2  AIF   ('&OBUF(2)' EQ '').CONTL3                                42000020
         AIF   ('&OBUF(2)'(1,1) EQ '(').ERROR                           42500020
         DC    AL2(&OBUF(2)) LENGTH OF OUTPUT BUFFERS                   43000020
         AGO   .CONTLA                                                  43500020
.CONTL3  DC    AL2(0)        LENGTH OF OUTPUT BUFFERS                   44000020
.CONTLA  AIF   ('&OBUF(1)' EQ '').CONTLB                                44500020
         AIF   ('&OBUF(1)'(1,1) EQ '(').ERROR                           45000020
         DC    AL4(&OBUF(1))  ADDRESS OF OUTPUT BUFFERS                 45500020
         AGO   .CONTL8                                                  46000020
.CONTLB  DC    A(0)          ADDRESS OF OUTPUT BUFFERS                  46500020
.CONTL8  AIF   ('&IBUF(1)' EQ '').CONTL9                                47000020
         AIF   ('&IBUF(1)'(1,1) EQ '(').ERROR                           47500020
         DC    AL4(&IBUF(1))    ADDRESS OF INPUT BUFFERS                48000020
         AGO   .CONTL0                                                  48500020
.CONTL9  DC    A(0)          ADDRESS OF INPUT BUFFERS                   49000020
.CONTL0  DC    AL1(&TPLVSW+&REPLSW+&DEFRSW+&NEWFORM+&CLIST)        @01C 49050000
*                TOPLEVL, REPLACE, DEFERRAL, NEW FORMAT, CLIST IND @D1C 49100000
         DC    AL1(&FORMNUM) FORMAT NUMBER                     @G860PXB 49150000
         DC    AL1(&IGNORY+&IGNORNO) IGNORE INDICATORS             @D1A 49200000
         DC    AL1(0)        RESERVED                              @D1C 49250000
.CONTL6  AIF   ('&USADDR' EQ '').CONTL7                                 52000020
         AIF   ('&USADDR'(1,1) EQ '(').ERROR                            52500020
         DC    AL4(&USADDR)  ADDRESS OF USER PARAMETERS        @G860PXB 53000000
         AGO   .ENDLIST                                                 53500020
.CONTL7  DC    AL4(0)        ADDRESS OF USER PARAMETERS        @G860PXB 54000000
.ENDLIST  ANOP                                                          54500020
         MEXIT                                                          55000020
.IROUT   ANOP                                                           55500020
         LA    1,&GNAME      ADDRESS OF PARAMETER LIST                  56000020
         AIF   ('&IBUF(2)' EQ '').IROUT1                                56500020
         AIF   ('&IBUF(2)'(1,1) NE '(').IROUT1                          57000020
         STH   &IBUF(2),4(1,0) LENGTH OF INPUT BUFFERS          @YM2296 57500002
.IROUT1  AIF   ('&OBUF(2)' EQ '').IROUT2                                58000020
         AIF   ('&OBUF(2)'(1,1) NE '(').IROUT2                          58500020
         STH   &OBUF(2),6(1,0) LENGTH OF OUTPUT BUFFERS         @YM2296 59000002
.IROUT2  AIF   ('&EXADDR' EQ '').IROUT3                                 59300020
         AIF   ('&EXADDR'(1,1) NE '(').IROUT3                           59600020
         ST    &EXADDR(1),0(1,0)  ADDRESS OF EXIT ROUTINE INTO LIST     60000020
.IROUT3  AIF   ('&USADDR' EQ '').IROUT4                                 60500020
         AIF   ('&USADDR'(1,1) NE '(').IROUT4                           61000020
         ST    &USADDR(1),20(0,1) ADDR OF USER PARMS IN LIST   @G860PXB 61050000
.IROUT4  AIF   ('&IBUF' EQ '').IROUT5                                   62000020
         AIF   ('&IBUF(1)'(1,1) NE '(').IROUT5                          62500020
         ST    &IBUF(1),12(1,0)   ADDRESS OF INPUT BUFFERS INTO LIST    63000020
.IROUT5  AIF   ('&OBUF' EQ '').IROUT6                                   63500020
         AIF   ('&OBUF(1)'(1,1) NE '(').IROUT6                          64000020
         ST    &OBUF(1),8(1,0)    ADDRESS OF OUTPUT BUFFERS INTO LIST   64500020
.IROUT6  ANOP                                                           65000020
         B     24(0,1)                                         @G860PXB 65500000
&GNAME   DS    0F                                                       66000020
.CNTD    AIF   ('&EXADDR' EQ '').CNTE                                   66300020
         AIF   ('&EXADDR'(1,1) EQ '(').CNTE                             66600020
         DC    AL4(&EXADDR)  ADDRESS OF EXIT ROUTINE                    67000020
         AGO  .CONTF2                                                   67500020
.CNTE    DC    AL4(0)   ADDRESS OF EXIT ROUTINE                         68000020
.CONTF2  AIF   ('&IBUF(2)' EQ '').CNTA                                  68500020
         AIF   ('&IBUF(2)'(1,1) EQ '(').CNTA                            69000020
         DC    AL2(&IBUF(2)) LENGTH OF INPUT BUFFERS                    69500020
         AGO   .CNTB                                                    70000020
.CNTA    DC    AL2(0)        LENGTH OF INPUT BUFFERS                    70500020
.CNTB    AIF   ('&OBUF(2)' EQ '').CNTC                                  71000020
         AIF   ('&OBUF(2)'(1,1) EQ '(').CNTC                            71500020
         DC    AL2(&OBUF(2))  LENGTH OF OUTPUT BUFFERS                  72000020
         AGO   .CNTK                                                    72500020
.CNTC    DC    AL2(0)        LENGTH OF OUTPUT BUFFERS                   73000020
.CNTK    AIF   ('&OBUF(1)' EQ '').CNTL                                  73500020
         AIF   ('&OBUF(1)'(1,1) EQ '(').CNTL                            74000020
         DC    AL4(&OBUF(1)) ADDRESS OF OUTPUT BUFFERS                  74500020
         AGO   .CNTI                                                    75000020
.CNTL    DC    A(0)          ADDRESS OF OUPTUT BUFFERS                  75500020
.CNTI    AIF   ('&IBUF(1)' EQ '').CNTJ                                  76000020
         AIF   ('&IBUF(1)'(1,1) EQ '(').CNTJ                            76500020
         DC    AL4(&IBUF(1)) ADDRESS OF INPUT BUFFERS                   77000020
         AGO   .CNTM                                                    77500020
.CNTJ    DC    A(0)          ADDRESS OF INPUT BUFFERS                   78000020
.CNTM    DC    AL1(&TPLVSW+&REPLSW+&DEFRSW+&NEWFORM+&CLIST)        @01C 78050000
*                TOPLEVL, REPLACE, DEFERRAL, NEW FORMAT, CLIST IND @01C 78100000
         DC    AL1(&FORMNUM) FORMAT NUMBER                     @G860PXB 78150000
         DC    AL1(&IGNORY+&IGNORNO) IGNORE INDICATORS             @D1A 78200000
         DC    AL1(0)        RESERVED                              @D1C 78250000
.CNTF    AIF   ('&USADDR' EQ '').CNTH                                   80500020
         AIF   ('&USADDR'(1,1) EQ '(').CNTH                             81000020
         DC    AL4(&USADDR)  ADDRESS OF USER PARAMETERS        @G860PXB 81500000
         AGO   .SVC                                                     82000020
.CNTH    DC    AL4(0)        ADDRESS OF USER PARAMETERS        @G860PXB 82500000
         AGO   .SVC                                                     83000020
.CANCEL  ANOP                                                           83500020
&NAME    DS    0H                                                       84000020
         SR    1,1           CANCEL PREVIOUS STAX                       84500020
.SVC     SVC   96                                                       85000020
         MEXIT                                                 @G860PXZ 85050000
.LEVEL1  ANOP                GENERATE JBB1326 LEVEL MACRO      @G860PXZ 85100000
&NAME    STAX7 &EXADDR,OBUF=&OBUF,IBUF=&IBUF,USADDR=&USADDR,           X85150000
               REPLACE=&REPLACE,DEFER=&DEFER,MF=&MF                     85200000
         MEXIT                                                     @L1A 85250000
.********************************************************************** 85300000
.*                                                                    * 85350000
.*              STAX BRANCH ENTRY DEFER CODE STARTS HERE              * 85400000
.*                                                                    * 85450000
.********************************************************************** 85500000
.CKBRNCH ANOP                                                      @L1A 85550000
         AIF   ('&LINKAGE' NE 'BRANCH').ERROR9                     @L1A 85600000
.********************************************************************** 85650000
.* LINKAGE keyword has been inspected, check that no other parameters * 85700000
.* (including MF) are present except for DEFER=YES/NO.                * 85750000
.********************************************************************** 85800000
.CHKALL  ANOP                                                      @L1A 85850000
         AIF   ('&EXADDR' NE '' OR '&OBUF' NE '' OR '&IBUF' NE ''      *85900000
               OR '&USADDR' NE '' OR '&REPLACE' NE '' OR '&MF' NE 'I'  *85950000
               OR '&IGNORE' NE '' OR '&CLSTATTN' NE '' OR              *86000000
               '&TOPLEVL' NE '').ERROR10    Any other keywords?    @L1A 86050000
         AIF   (N'&SYSLIST GT 0).ERROR10    Any positional parms?  @L1A 86100000
.DEFERX  ANOP                                                      @L1A 86150000
         AIF   ('&DEFER' EQ 'YES' AND                                  *86200000
               '&ERRORSFOUND' NE 'YES').DEFRYES                    @L1A 86250000
         AIF   ('&DEFER' EQ 'NO' AND                                   *86300000
               '&ERRORSFOUND' NE 'YES').DEFRNO                     @L1A 86350000
         AIF   ('&DEFER' NE 'YES' AND '&DEFER' NE 'NO').ERROR11    @L1A 86400000
         AGO   .END                                                @L1A 86450000
.********************************************************************** 86500000
.* MNOTE Error Messages, broken into character strings such that the  * 86550000
.* printed text is easily readable.  Words are not split up.          * 86600000
.********************************************************************** 86650000
.ERROR9  MNOTE 8,'ERROR: INCORRECT VALUE SPECIFIED FOR "LINKAGE" KEYWOR*86700000
               D.'                                                 @L1A 86750000
&ERRORSFOUND   SETC  'YES'   Set flag to indicate error occurred.  @L1A 86800000
         AGO   .DEFERX                                             @L1A 86850000
.ERROR10 MNOTE 8,'ERROR: "DEFER" IS THE ONLY PARAMETER ALLOWED WHEN'    86900000
         MNOTE '       "LINKAGE=BRANCH" IS SPECIFIED.'             @L1A 86950000
&ERRORSFOUND   SETC  'YES'   Set flag to indicate error occurred.  @L1A 87000000
         AGO   .DEFERX                                             @L1A 87050000
.ERROR11 MNOTE 8,'ERROR: "DEFER" KEYWORD IS MISSING OR HAS NOT BEEN SET*87100000
                EQUAL'                                             @L1A 87150000
         MNOTE '       TO "YES" OR "NO."'                          @L1A 87200000
         AGO   .END                                                @L1A 87250000
.********************************************************************** 87300000
.*    Code Generated For "STAX LINKAGE=BRANCH,DEFER=YES" Invocation,  * 87350000
.*    Service Routine IEAVAX01 Is Branched To                         * 87400000
.********************************************************************** 87450000
.DEFRYES ANOP                                                      @L1A 87500000
&NAME    DS    0H                                                  @L1A 87550000
         L     15,X'10'(0,0)  GET ADDRESS OF CVT                   @L1A 87600000
         L     15,X'8C'(15,0) OBTAIN ECVT ADDRESS                  @L1A 87650000
         L     15,X'D8'(15,0) GET SERVICE ROUTINE ADDRESS          @L1A 87700000
         BASR  14,15          BRANCH TO SERVICE ROUTINE            @L1A 87750000
         MEXIT                                                     @L1A 87800000
.********************************************************************** 87850000
.*    Code Generated For "STAX LINKAGE=BRANCH,DEFER=NO" Invocation,   * 87900000
.*    Service Routine IEAVAX02 Is Branched To                         * 87950000
.********************************************************************** 88000000
.DEFRNO  ANOP                                                      @L1A 88050000
&NAME    DS    0H                                                  @L1A 88100000
         L     15,X'10'(0,0)  GET ADDRESS OF CVT                   @L1A 88150000
         L     15,X'8C'(15,0) OBTAIN ECVT ADDRESS                  @L1A 88200000
         L     15,X'DC'(15,0) GET SERVICE ROUTINE ADDRESS          @L1A 88250000
         BASR  14,15          BRANCH TO SERVICE ROUTINE            @L1A 88300000
.END     MEND                                                      @L1C 88350000
