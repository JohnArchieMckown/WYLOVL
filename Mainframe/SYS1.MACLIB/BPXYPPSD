* %DCL BPXYPPSD_INCLUDED CHAR EXT;                                      00050000
* %DEACTIVATE BPXYPPSD_INCLUDED;                                        00100000
* %IF BPXYPPSD_INCLUDED = '' %THEN                                      00150000
* %DO;                                                                  00200000
*% /*                                                                   00250000
         MACRO                                                          00300000
         BPXYPPSD &DSECT=YES,&LIST=YES,&PPSD=YES                        00350000
         GBLC  &BPXYPPSD_INCLUDED                                       00400000
         GBLC  &ZCBPRINT                                                00450000
         AIF   ('&BPXYPPSD_INCLUDED' EQ 'YES').P_EXIT          @D1A     00500000
&BPXYPPSD_INCLUDED SETC 'YES'                                           00550000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                       6@D1M     00600000
         AIF   ('&LIST' EQ 'YES').A411                                  00650000
.P1      ANOP                                                           00700000
         PUSH  PRINT     BPXYPPSD: Signal Data Area                     00750000
         PRINT OFF                                                      00800000
         AGO   .A411                                                    00850000
**/ BPXYPPSD_1:;                                                        00900000
*/****START OF SPECIFICATIONS****************************************** 00950000
*                                                                       01000000
*    $MAC (BPXYPPSD) COMP(SCPX1) PROD(BPX):                             01050000
*                                                                       01100000
*01* MACRO NAME: BPXYPPSD                                               01150000
*                                                                       01200000
*01* DSECT NAME: BPXYPPSD                                               01250000
*                                                                       01300000
*01* DESCRIPTIVE NAME: Signal Data Area                                 01350000
*                                                                       01400000
*02*   ACRONYM: PPSD                                                    01450000
**/                                                                     01533200
*/*01* PROPRIETARY STATEMENT=                                        */ 01550000
*/***PROPRIETARY_STATEMENT********************************************/ 01600000
*/*                                                                  */ 01650000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01700000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01750000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1993,2000                       */ 01800000
*/*                                                                  */ 01850000
*/* STATUS= HBB7703                                                  */ 01900000
*/*                                                                  */ 01950000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 02000000
*/*                                                                     02050000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     02100000
*01* END OF EXTERNAL CLASSIFICATION:                                    02150000
*                                                                       02200000
*01* FUNCTION:                                                          02250000
*                                                                       02300000
*    This file contains the mapping of the Signal Delivery              02350000
*    data.  One of these data areas will be created whenever a          02400000
*    task is dubbed.                                                    02450000
*                                                                       02500000
*01* METHOD OF ACCESS:                                                  02550000
*                                                                       02600000
*02*   PL/X:                                                            02650000
*                                                                       02700000
*        %INCLUDE SYSLIB(BPXYPPSD)                                      02750000
*                                                                       02800000
*        By default, the PPSD is based on PpstPpsd. If                  02850000
*        other basing is desired, use %PPSDBASE='BASED(xxxxxx)'.        02900000
*                                                                       02950000
*02*   ASM:                                                             03000000
*        With DSECT=NO (default), storage is allocated in line          03050000
*        and addressability is provided thru that DSECT or CSECT.       03100000
*        With DSECT=YES, a DSECT is produced and "USING PPSD,reg"       03150000
*        is rquired for addressability.  Here "reg" contains the        03200000
*        address of PPSD#LENGTH bytes of storage.                       03250000
*                                                                       03300000
*01* SIZE: PPSD#LENGTH                                                  03350000
*                                                                       03400000
*01* POINTED TO BY:                                                     03450000
*                   PpstPpsd                                            03500000
*                                                                       03550000
*01* CREATED BY: BPXPRIN1                                               03600000
*                                                                       03650000
*01* DELETED BY: Task termination cleanup                               03700000
*                                                                       03750000
*01* STORAGE ATTRIBUTES:                                                03800000
*02*   SUBPOOL: 230                                                     03850000
*02*   KEY: Same as callers key who was first dubbed in the process     03900000
*02*   RESIDENCY: private                                               03950000
*                                                                       04000000
*01* FREQUENCY: 1 per task                                              04050000
*                                                                       04100000
*01* SERIALIZATION: This data area can only be used while signals       04150000
*                   are blocked.                                        04200000
*                                                                       04250000
*01* DEPENDENCIES: None                                                 04300000
*                                                                       04350000
*01* NOTES: None                                                        04400000
*                                                                       04450000
*01* COMPONENT:  OpenMVS (SCPX1)                                        04500000
*                                                                       04550000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     04600000
*                                                                       04650000
*01* EYE-CATCHER: PPSD                                                  04700000
*02*   OFFSET:  0                                                       04750000
*02*   LENGTH:  4                                                       04800000
*                                                                       04850000
*                                                                       04900000
*01* CHANGE-ACTIVITY:                                                   04950000
*                                                                       05000000
* $L0=POSIXXNS HOM1110 921201 PDJJ: OpenMVS Initial Release             05050000
* $P1=PL70376  HOM1110 921201 PDJJ: Remove TITLE                        05100000
* $D2=DL70019  HOM1110 921201 PDJM: Assembler macro fixup               05150000
* $D3=DL70014  HOM1110 921101 PDJJ: Threads support                     05200000
* $P2=PL70597  HOM1110 930104 PDJM: Use "OpenMVS"                       05250000
* $D4=DL70038  HOM1110 930316 PDJJ: Quiesce threads                     05300000
* $D5=DL7A012  HOM1110 930426 PDJH: Support new parameter, user_data,   05350000
*                                   on SIGACTION                        05400000
* $D6=DPFA065  HOM1130 940114 PDPE: DCR A065.04 BSD Signals             05450000
* $P3=PPF0008  HOM1130 940425 PDPE: Add sending/receiving thread id     05500000
* $P4=PPF0054  HOM1130 940613 PDPE: Add sending pid/real uid            05550000
* $P5=PPF0072  HOM1130 940719 PDPE: Add siginfo information             05600000
* $D7=DPFA051  HOM1130 940235 PDJD: DCR A051.15 XPG4 sigsuspend change  05650000
* $D8=DSPA166  HOM1150 960319 PDJQ: DCR A166.04 MODIFY cancel support   05700000
* $P6=PQC2019  HBB6603 960803 PDJJ: Add TRM exit status (OW21905)       05750000
* $D9=DSYA194  HBB6604 960819 PDJJ: DCR A194.02 Unauth async I/O exits  05800000
* $DA=DSYA211  HBB6604 970203 PDJJ: DCR A211.00 Syscall performance     05850000
* $P7=PWA0291  JBB6607 980526 PDZJ: Merge up OW34166 - queued signals   05900000
* $DB=DWYA254  HBB6609 981204 PDJJ: DCR A254.00 XP LINK support         05925000
* $DC=DXDA367  HBB7703 990610 PDJI: 64-bit register support A367.02     05937500
****END OF SPECIFICATIONS*********************************************/ 05950000
*% /*                                                                   06000000
.A411    ANOP ,                                                         06050000
** BPXYPPSD: Signal Data Area                                           06100000
**  Used By: User written signal interrupt routines                     06150000
         AIF   ('&PPSD'  EQ  'NO').L0002                                06200000
         AIF   ('&DSECT' EQ 'YES').L0003                                06250000
PPSD                 DS    0D                                           06300000
         AGO   .L0004                                                   06350000
.L0003   ANOP                                                           06400000
PPSD                 DSECT ,                                            06450000
.L0004   ANOP                                                           06500000
PPSDID               DC    C'PPSD'  Eye catcher                         06550000
PPSD#ID              EQU   C'PPSD'    Control Block Acronym             06600000
                     SPACE ,                                            06650000
PPSDSP               DS    FL1      Subpool number of this PPSD         06700000
PPSD#SP              EQU   230        Subpool for the PPSD              06750000
                     SPACE ,                                            06800000
PPSDLEN              DC    AL3(PPSD#LENGTH)   Length this structure     06850000
*                                                                       06900000
*    *****************************************************************  06950000
*     PpsdSIRParms is used to setup up a parameter list to the          07000000
*     Signal Interface Routine (SIR).  When the SIR is invoked, the     07050000
*     address of PpsdSIRParms field is set in Register 1.  The          07100000
*     PpsdAddrPpsd contains the address of the Ppsd.                    07150000
*    *****************************************************************  07200000
*                                                                       07250000
PPSDSIRPARMS         DS    0A       SIR Parameters                      07300000
PPSDADDRPPSD         DC    A(PPSD)  Pointer to the top of the Ppsd      07350000
PPSDSIRPARMEND       EQU   X'80'    End of Parameters flag set on       07400000
                     SPACE ,                                            07450000
PPSDTRMEXITSTATUS    DS    F        4 Byte status passed to PRTRM @P6C  07500000
PPSDSIGNUM           DS    F        Signal number                       07550000
PPSDFL               DS    XL2      X'7FFF' reserved                    07600000
PPSDQUIESCEFREEZE    EQU   X'80'      Interrupt due to freeze           07650000
PPSDSIRCOMPLETE      EQU   X'40'    Sir done with async I/O exits @D9A  07700000
PPSDPROCDFT          EQU   X'20'    Process default                     07708300
PPSDSIGQUEUE         EQU   X'10'    NSSGQ queued signal                 07716600
PPSDREDRIVE          EQU   X'08'    SPB will Resend signal later  @DBA  07724900
PPSDJUMPBACK         EQU   X'04'    SPB return to point of interrupt    07733200
PPSDMASKONLY         EQU   X'02'    SPB restore mask only         @DBA  07741500
PPSDACTION           DS    B        Action for this signal              07750000
*                    EQU   4           catch                            07800000
*                    EQU   5           SIR determines default action    07850000
                     SPACE ,                                            07900000
PPSDFLAGS            DS    B        X'00' reserved                      07950000
PPSDASYNC            EQU   X'80'    Signal delivered Asynchronously     08000000
PPSDDUMP             EQU   X'40'    Dump for terminating signals        08050000
PPSDPTHREADKILL      EQU   X'20'    Signal sent via BPX1PTK             08100000
PPSDTHISTHREADGEN    EQU   X'10'    Sending=Receiving thread            08150000
PPSDSIGNAL           EQU   X'08'    Interrupt due to signal             08200000
PPSDCANCEL           EQU   X'04'    Interrupt due to cancel             08250000
PPSDQUIESCE          EQU   X'02'    Interrupt due to quiesce            08300000
PPSDIPT              EQU   X'01'    If ON then this is the IPT          08350000
                     SPACE ,                                            08400000
PPSDSAHANDLER        DS    A        Addr of catcher function            08450000
PPSDSAMASK           DS    XL8      Signal mask set by BPX1SIA for      08500000
*                                   this signal                         08550000
PPSDSAFLAGS          DS    XL4      X'00FFFFFF' reserved          @D6C  08600000
PPSDNOCLDSTOP        EQU   X'80'      Do not generate SIGCHLD on stops  08650000
PPSDOLDSTYLE         EQU   X'40'      Signal defined by signal() funct. 08700000
PPSDONSTACK          EQU   X'20'      Deliver on alternate stack  @D6A  08750000
PPSDRESETHAND        EQU   X'10'      Reset action on delivery    @D6A  08800000
PPSDRESTART          EQU   X'08'      Restart interruptable funcs @D6A  08850000
PPSDSIGINF           EQU   X'04'      Pass sig info to catcher    @D6A  08900000
PPSDNOCLDWAIT        EQU   X'02'      Don't create zombie on exit @D6A  08950000
PPSDNODEFER          EQU   X'01'      Don't block sig on delivery @D6A  09000000
                     SPACE ,                                            09050000
PPSDCURRENTMASK      DS    XL8      This is the signal mask to be set   09100000
*                                   when the signal catcher returns.    09150000
*                                   Signal mask at time of interrupt    09200000
*                                   except for sigsuspend case. If      09250000
*                                   signal during sigsuspend, then      09300000
*                                   this mask is the signal mask prior  09350000
*                                   to call to sigsuspend.              09400000
PPSDSIR              DS    A        Addr Signal interrupt routine       09450000
PPSDUSERDATA         DS    A        User data speicified on BPX1MSS     09500000
PPSDGENREGS          DS    CL64     Users general regs at interrupt     09550000
PPSDPSW              DS    XL8      Users PSW at interrupt              09600000
PPSDARREGS           DS    16F      Users AR regs at interrupt          09650000
PPSDKILDATA          DS    FL2      User specified data on BPX1KIL      09700000
PPSDKILOPTS          DS    XL2      X'7FFF' reserved                    09750000
*                                   User specified options on BPX1KIL   09800000
PPSDPTBYPASS         EQU   X'80'      Ptrace Bypass option in effect    09850000
PPSDKERNSICODE       EQU   X'40'      PpsdKilData=Kern set SiCode  @D6A 09900000
PPSDAPPLSICODE       EQU   X'20'      PpsdKilData=Appl set SiCode  @D6A 09950000
PPSDCONSCANCEL       EQU   X'10'      Console MODIFY cancel qualifier   10000000
*                                     in PpdsKilData               @D8A 10050000
PPSDQUIESCEDATA      DS    F        Quiesce_Data specified on BPX1QUT   10100000
PPSDLASTPTSIG        DS    F        Last Ptraced Signal                 10150000
PPSDSIGACTIONDATA    DS    F        User_Data specified on BPX1SIA      10200000
PPSDPTXLWAPTR        DS    A        Threads workarea address specified  10250000
*                                   on BPX1PTC (pthread_create).  This  10300000
*                                   address is zero if the thread was   10350000
*                                   not pt_created.                     10400000
PPSDSENDINGTHREAD    DS    CL8      Sending thread id              @P3A 10450000
PPSDTARGETTHREAD     DS    CL8      Target thread id               @P3A 10500000
PPSDSENDINGPID       DS    F        Sending process id             @P4A 10550000
PPSDSENDINGUID       DS    F        Sending real uid               @P4A 10600000
PPSDSIADDR           DS    A        Address of faulting instruction     10650000
*                                   for SIGILL, SIGFPE, SIGSEGV    @P5A 10700000
PPSDSISTATUS         DS    F        Exit status or signal          @P5A 10750000
PPSDSIBAND           DS    F        Band event                     @P5A 10800000
PPSDERRNO            DS    F        Error return code              @P5A 10850000
PPSDCATCHERMASK      DS    XL8      Signal Mask to be set before signal 10900000
*                                  catcher is called. If signal during  10950000
*                                  sigsuspend then this field is same   11000000
*                                  as mask specified on sigsuspend. If  11050000
*                                  not sigsuspend, then PpsdCatcherMask 11100000
*                                  and PpsdCurrentMask are equal.  @D7A 11150000
PPSDEXCOUNT          DS    FL2      Count of PpsdAiocb's           @D9A 11200000
PPSDEXLASTIX         DS    FL2      Last array index used          @D9A 11250000
PPSDAIOCB            DS    24F      Aiocb Array for Async I/O exit @D9A 11300000
PPSDSQV              DS    F        Signal si_value                @P7A 11337500
PPSDREDRIVETIME      DS    F        Time to delay signal 1000 per mic   11375000
PPSDG64H             DS    16F      Users G64H at interrupt        @DCA 11400000
                     DS    8F       Reserved                       @DCC 11425000
PPSDEND              DS    0D       End of PPSD on double word          11450000
                     SPACE ,                                            11500000
PPSD#LENGTH          EQU   *-PPSD   Length of this structure            11550000
** BPXYPPSD End                                                         11600000
         SPACE 3                                                        11650000
.L0002   ANOP                                                           11700000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 11750000
         AIF   ('&LIST' EQ 'YES').P4                                    11800000
.P3      ANOP                                                           11850000
         POP   PRINT                                                    11900000
         AGO   .P_EXIT                                                  11950000
.P4      ANOP                                                           12000000
.P_EXIT  ANOP                                                           12050000
         MEND                                                           12100000
**/ BPXYPPSD_2:;                                                        12150000
* %BPXYPPSD_INCLUDED = 'YES';                                           12200000
* %DCL ZCBPRINT CHAR EXT;                                               12250000
* %DEACTIVATE ZCBPRINT;                                                 12300000
* %DCL BPXYPPSD_LIST CHAR EXT;                                          12350000
* %DEACTIVATE BPXYPPSD_LIST;                                            12400000
* %IF BPXYPPSD_LIST ^= 'NO' &                                           12450000
*    ZCBPRINT ^= 'NO' %THEN                                             12500000
*   %GOTO BPXYPPSD_3;                                                   12550000
*   @LIST PUSH NOECHO;                                                  12600000
*   @LIST NOASSEMBLE NOECHO;                                            12650000
*   @LIST OFF C NOECHO;                                                 12700000
* %BPXYPPSD_3:;                                                         12750000
*/* Start of PL/AS Source                                            */ 12800000
*                                                               @EJECT; 12850000
*                                                                       12900000
*%IF PPSDBASE='' %THEN                                                  12950000
*  %DO;                                                                 13000000
*    %PPSDBASE='BASED(PpstPpsd) VIA(PpsdAlet)';                         13050000
*  %END;                                                                13100000
*                                                                       13150000
*                                                               @SPACE; 13200000
*DCL                                                                    13250000
* 1 PPSD             PPSDBASE  Bdy(Word),                               13300000
*  3 PpsdID            Char(04), /* EBCDIC ID - PPSD                 */ 13350000
*  3 PpsdSP           Fixed(08), /* Subpool number of this PPSD      */ 13400000
*  3 PpsdLEN          Fixed(24), /* Length of this PPSD              */ 13450000
*  /******************************************************************/ 13500000
*  /* PpsdSIRParms is used to setup up a parameter list to the       */ 13550000
*  /* Signal Interface Routine (SIR).  When the SIR is invoked, the  */ 13600000
*  /* address of PpsdSIRParms field is set in Register 1.  The       */ 13650000
*  /* PpsdAddrPpsd contains the address of the Ppsd.                 */ 13700000
*  /******************************************************************/ 13750000
*  3 PpsdSIRParms,               /* SIR Parameters                   */ 13800000
*    5 PpsdAddrPpsd   Ptr(31),   /* Pointer to the top of the Ppsd   */ 13850000
*      7 PpsdSIRParmEnd  Bit(1), /* End of Parameters flag set on    */ 13900000
*  3 PpsdTRMExitStatus Fixed(32),/* 4 byte exit status passed to PRTRM  13950000
*                                                                @P6C*/ 14000000
*  3 PpsdSigDelivery,                                                   14050000
*    5 PpsdSigNum     Fixed(32), /* Signal number                    */ 14100000
*    5 PpsdFlags2     Bit(16),   /* Flags                        @D5C*/ 14150000
*      7 PpsdQuiesceFreeze Bit(01), /* Interrupt due to freeze   @D5A*/ 14200000
*      7 PpsdSirComplete   Bit(01), /* Sir is done processing Async I/O 14250000
*                                   exits                        @D9A*/ 14300000
*      7 PpsdProcDft       Bit(01), /* Process default           @P7A*/ 14350000
*      7 PpsdSigQueue      Bit(01), /* NSSGQ queued signal       @P7A*/ 14400000
*      7 PpsdReDrive       Bit(01), /* Input to BPX1SPB to resend the   14405500
*                                      signal                    @DBA*/ 14411000
*      7 PpsdJumpBack      Bit(01), /* Input to BPX1SPB to have control 14416500
*                                      returned to point of signal      14422000
*                                      interrupt                 @DBA*/ 14427500
*      7 PpsdMaskOnly      Bit(01), /* Input to BPX1SPB to only restore 14433000
*                                      signal mask, sig not requeued    14438500
*                                                                @DBA*/ 14444000
*    5 PpsdAction     Fixed(08), /* Action for this signal              14450000
*                                  4 -> Catch, 5 -> SIR determines   */ 14500000
*    5 PpsdFlags        Bit(08),                                        14550000
*      7 PpsdAsync      Bit(01), /* Signal delivered Asynchronously  */ 14600000
*      7 PpsdDump       Bit(01), /* Dump for terminating signals     */ 14650000
*      7 PpsdPthreadKill Bit(01), /* Signal sent via BPX1PTK     @D2A*/ 14700000
*      7 PpsdThisThreadGen Bit(01), /* Sending=Receiving thread  @D2A*/ 14750000
*      7 PpsdSignal     Bit(01), /* Interrupt due to signal      @D4A*/ 14800000
*      7 PpsdCancel     Bit(01), /* Interrupt due to cancel      @D4A*/ 14850000
*      7 PpsdQuiesce    Bit(01), /* Interrupt due to QuiesceTerm @D4A*/ 14900000
*      7 PpsdIPT        Bit(01), /* If ON then this is the IPT   @D4A*/ 14950000
*    5 PpsdSaHandler    Ptr(31), /* Addr of catcher function         */ 15000000
*    5 PpsdSaMask       Bit(64), /* Signal mask set by BPX1SIA for      15050000
*                                   this signal                      */ 15100000
*    5 PpsdSaFlags      Bit(32),                                        15150000
*      7 PpsdNoCldStop  Bit(01), /* Do not generate SIGCHLD on stops */ 15200000
*      7 PpsdOldStyle   Bit(01), /* Signal defined by signal() funct.*/ 15250000
*      7 PpsdOnStack    Bit(01), /* Deliver on alternate stack   @D6A*/ 15300000
*      7 PpsdResetHand  Bit(01), /* Reset action on delivery     @D6A*/ 15350000
*      7 PpsdRestart    Bit(01), /* Restart interruptable funcs  @D6A*/ 15400000
*      7 PpsdSiginf     Bit(01), /* Pass sig info to catcher     @D6A*/ 15450000
*      7 PpsdNoCldWait  Bit(01), /* Don't create zombie on exit  @D6A*/ 15500000
*      7 PpsdNoDefer    Bit(01), /* Don't block sig on delivery  @D6A*/ 15550000
*      7 *              Bit(24), /* Reserved                     @D6C*/ 15600000
*    5 PpsdCurrentMask  Bit(64), /* This is the signal mask to be set   15650000
*                                   when the signal catcher returns.    15700000
*                                   Signal mask at time of interrupt    15750000
*                                   except for sigsuspend case. If      15800000
*                                   signal during sigsuspend, then      15850000
*                                   this mask is the signal mask prior  15900000
*                                   to call to sigsuspend.       @D7C*/ 15950000
*    5 PpsdSIR          Ptr(31), /* Addr Signal  interrupt routine   */ 16000000
*    5 PpsdUserData     Ptr(31), /* User data specified on BPX1MSS   */ 16050000
*    5 PpsdGenRegs     Char(64), /* Users general regs at interrupt  */ 16100000
*    5 PpsdPSW                 , /* Users PSW at interrupt           */ 16150000
*      7 PpsdPswCntl    Bit(32), /* Users PSW control info       @DAA*/ 16200000
*      7 PpsdPswIar     Ptr(31), /* Users PSW Instr address      @DAA*/ 16250000
*    5 PpsdARRegs      Char(64), /* Users AR regs at interrupt       */ 16300000
*    5 PpsdKilData    Fixed(16), /* User specified data on BPX1KIL   */ 16350000
*    5 PpsdKilOpts      Bit(16), /* User specified options on BPX1KIL*/ 16400000
*      7 PpsdPtBypass   Bit(01), /* Ptrace Bypass option in effect   */ 16450000
*      7 PpsdKernSiCode Bit(01), /* PpsdKilData=Kern set SiCode  @D6A*/ 16500000
*      7 PpsdApplSiCode Bit(01), /* PpsdKilData=Appl set SiCode  @D6A*/ 16550000
*      7 PpsdConsCancel Bit(01), /* Console MODIFY cancel qualifier     16600000
*                                   in PpsdKilData               @D8A*/ 16650000
*      7 *              Bit(12), /* Reserved                         */ 16700000
*    5 PpsdQuiesceData Fixed(32),/* Quiesce_Data specified on BPX1QUT   16750000
*                                   call                         @D4A*/ 16800000
*    5 PpsdLastPtSig  Fixed(32), /* Last Ptraced Signal          @D4A*/ 16850000
*    5 PpsdSigactionData Fixed(32),/* User_Data specified on BPX1SIA    16900000
*                                     call                       @D5A*/ 16950000
*    5 PpsdPtxlWAptr    Ptr(31), /* Address of the workarea that this   17000000
*                                  thread was created with, also        17050000
*                                  pointed to by the Ptxl.  This ptr    17100000
*                                  is zero if thread not pt_created  */ 17150000
*    5 PpsdSendingThread Char(8), /* Sending thread id           @P3A*/ 17200000
*    5 PpsdTargetThread Char(8), /* Target thread id             @P3A*/ 17250000
*    5 PpsdSendingPid Fixed(32), /* Sending process id           @P4A*/ 17300000
*    5 PpsdSendingUid Fixed(32), /* Sending real uid             @P4A*/ 17350000
*    5 PpsdSiAddr       Ptr(31), /* Address of faulting instruction for 17400000
*                                   SIGILL, SIGFPE, SIGSEGV      @P5A*/ 17450000
*    5 PpsdSiStatus   Fixed(32), /* Exit status or signal        @P5A*/ 17500000
*    5 PpsdSiBand     Fixed(32), /* Band event                   @P5A*/ 17550000
*    5 PpsdErrno      Fixed(32), /* Error return code            @P5A*/ 17600000
*    5 PpsdCatcherMask  Bit(64), /* Catcher mask not including SaMask.  17650000
*                                   Prior to invoking a signal catcher  17700000
*                                  the signal mask must be set to the   17750000
*                                  value (PpsdCatcherMask ORed with     17800000
*                                  PpsdSaMask).  If signal during       17850000
*                                  sigsuspend then PpsdCatcherMask is   17900000
*                                  equal to mask specified on           17950000
*                                  sigsuspend. If  not sigsuspend, then 18000000
*                                  PpsdCatcherMask and PpsdCurrentMask  18050000
*                                  are equal.                    @D7A*/ 18100000
*    /****************************************************************/ 18150000
*    /* The PpsdExitInfo is Used by an OE defined SIR in POSIX(OFF)  */ 18200000
*    /* environments.  It contains information that the OESIR will   */ 18250000
*    /* use to give control to the ASYNC I/O user defined exits.     */ 18300000
*    /* For more information about these exits see BPX1AIO in the    */ 18350000
*    /* assember syscalls book.                                  @D9A*/ 18400000
*    /****************************************************************/ 18450000
*    5 PpsdExitInfo ,            /* Exit Information             @D9A*/ 18500000
*      7 PpsdExCount  Fixed(15), /*  Count of PpsdAiocb's        @D9A*/ 18550000
*      7 PpsdExLastIx Fixed(15), /*  Last array index used       @D9A*/ 18600000
*      7 PpsdAiocb(Ppsd#AioCnt) Ptr, /*  Aiocb Array             @D9A*/ 18650000
*    5 PpsdSigQValue   Char(4),  /* Valued passed on sigqueue()  @P7C*/ 18700000
*    5 PpsdReDriveTime Bit(32),  /* Time delay for redrive 1000 units   18725000
                                    per mic                      @DBA*/ 18750000
*    5 PpsdG64H        Char(64), /* Users high halves of GPRs    @DCA*/ 18766600
*    5 *               Char(32), /* Reserved                     @DCC*/ 18783200
*  3 PpsdEnd Bdy(Word) Char(0);  /* End of PPSD                      */ 18800000
*                                                               @SPACE; 18850000
*DCL                                                                    18900000
*  Ppsd#AioCnt Fixed(16) Constant(24),     /* Aiocb Array size   @D9A*/ 18950000
*  Ppsd#ID     Char(4)   Constant('PPSD'), /* Control Block Acronym  */ 19000000
*  Ppsd#Len    Fixed(16) Constant(LENGTH(PPSD)), /* Length of PPSD   */ 19050000
*  Ppsd#SP     Fixed(31) Constant(230); /* Subpool for the PPSD      */ 19100000
*                                                                       19150000
*/* End of PL/AS Source                                              */ 19200000
* %IF BPXYPPSD_LIST ^= 'NO' &                                           19250000
*    ZCBPRINT ^= 'NO' %THEN                                             19300000
*   %GOTO BPXYPPSD_4;                                                   19350000
*   @LIST POP NOECHO;                                                   19400000
* %BPXYPPSD_4:;                                                         19450000
* %END;                                                                 19500000
