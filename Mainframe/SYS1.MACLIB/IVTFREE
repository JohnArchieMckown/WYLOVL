*%IVTFREE: MACRO KEYS(BUFLIST,BUFNUM,PLISTVER,MF);                      00046400
*/**** START OF SPECIFICATIONS **************************************** 00092800
*                                                                     * 00139200
*                                                                     * 00185600
*01* MACRO NAME:  IVTFREE                               -99/09/09-<0> * 00232000
*                                                                     * 00278400
*                                                                     * 00324800
*01* DESCRIPTIVE NAME:  CSM Free Routine Interface                    * 00371200
*                                                                     * 00417600
*01* PROPRIETARY STATEMENT:                                           * 00464000
*                                                                     * 00510400
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00556800
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00603200
*     5694-A01 (C) COPYRIGHT IBM CORP. 1999                           * 00649600
*                                                                     * 00696000
* STATUS= HVT510A                                                     * 00742400
*                                                                     * 00788800
*                                                                     * 00835200
*                                                                     * 00881600
*01* FUNCTION:                                                        * 00928000
*                                                                     * 00974400
*      The IVTFREE macro provides the interface between the           * 01020800
*      Communications Storage Manager (CSM) and the user's free       * 01067200
*      routine when CSM buffers are freed.                            * 01113600
*                                                                     * 01160000
*      The free routine is scheduled to execute in the address space  * 01206400
*      which owns the buffer to ensure that the owning environment    * 01252800
*      still exists.  This prevents the possibility of buffer pool    * 01299200
*      corruption caused by free routine processing executing         * 01345600
*      simultaneously with memory termination processing of the       * 01392000
*      owning address space.                                          * 01438400
*                                                                     * 01484800
*      When a user free routine is driven, the pageability of the     * 01531200
*      buffer may have change.  The original buffer address, token,   * 01577600
*      and length remains the same.                                   * 01624000
*                                                                     * 01670400
*      The user free routine is called by a CSM routine that receives * 01716800
*      control from the SRB scheduler. This CSM routine will free the * 01763200
*      SRB and any parameters upon return from the user free routine. * 01809600
*                                                                     * 01856000
*      The user free routine should invoke IVTFREE specifying the     * 01902400
*      list form of the macro only.  The list option will generate    * 01948800
*      code to map the parameter list passed to the user free routine * 01995200
*      by CSM.  The modify and execute form of the macro should only  * 02041600
*      be used by CSM.                                                * 02088000
*                                                                     * 02134400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 02180800
*                                                                     * 02227200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 02273600
*                                                                     * 02320000
*01* ENVIRONMENT:                                                     * 02366400
*                                                                     * 02412800
*                                                                     * 02459200
*      Dispatchable unit mode: SRB mode.                              * 02505600
*                                                                     * 02552000
*      Minimum authorization: Supervisor state.  Zero PSW key.        * 02598400
*                                                                     * 02644800
*      AMODE:            31-bit.                                      * 02691200
*                                                                     * 02737600
*      ASC mode:         Primary.                                     * 02784000
*                                                                     * 02830400
*      Interrupt status: Enabled for I/O and external interrupts.     * 02876800
*                                                                     * 02923200
*      Locks:            No locks held.                               * 02969600
*                                                                     * 03016000
*      Cross Memory Mode: PASN=HASN=SASN.                             * 03062400
*                                                                     * 03108800
*      Control parameters: Control parameters must be in the primary  * 03155200
*                        address space.                               * 03201600
*                                                                     * 03248000
*                                                                     * 03294400
*                                                                     * 03340800
*01* PROGRAMMING REQUIREMENTS:                                        * 03387200
*                                                                     * 03433600
*01* RESTRICTIONS:                                                    * 03480000
*                                                                     * 03526400
*01* INPUT REGISTER INFORMATION:                                      * 03572800
*                                                                     * 03619200
*    Before issuing the execute form of this macro, CSM will ensure   * 03665600
*    that the following general purpose registers contain:            * 03712000
*                                                                     * 03758400
*                                                                     * 03804800
*    REGISTER  CONTENTS                                               * 03851200
*                                                                     * 03897600
*    1         [macro provides address of the request parameter list] * 03944000
*                                                                     * 03990400
*    13        [macro provides address of a 72-byte standard save     * 04036800
*              area in the primary address space]                     * 04083200
*                                                                     * 04129600
*    14        [macro provides address of caller's next sequential    * 04176000
*              instruction]                                           * 04222400
*                                                                     * 04268800
*    15        [macro provides address of the user's Free Routine as  * 04315200
*              received on GET_BUFFER request of IVTCSM macro]        * 04361600
*                                                                     * 04408000
*                                                                     * 04454400
*                                                                     * 04500800
*01* OUTPUT REGISTER INFORMATION:                                     * 04547200
*                                                                     * 04593600
*    When control returns to the caller, the general purpose          * 04640000
*    registers contain:                                               * 04686400
*                                                                     * 04732800
*                                                                     * 04779200
*    REGISTER  CONTENTS                                               * 04825600
*                                                                     * 04872000
*    0-13      unchanged                                              * 04918400
*                                                                     * 04964800
*    14        used as work register by the system                    * 05011200
*                                                                     * 05057600
*    15        used as work register by the system                    * 05104000
*                                                                     * 05150400
*                                                                     * 05196800
*                                                                     * 05243200
*01* PERFORMANCE IMPLICATIONS:                                        * 05289600
*                                                                     * 05336000
*01* SYNTAX:                                                          * 05382400
*                                                                     * 05428800
*[xlabel]  IVTFREE     BUFLIST=xbuflist                               * 05475200
*                    [,BUFNUM=xbufnum|1]                            * 05521600
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 05568000
*                    ,MF=(E,xmfctrl,COMPLETE|NOCHECK)              * 05614400
*                    ,MF=(L,xmfctrl,xmfattr|0D)                    * 05660800
*                    ,MF=(M,xmfctrl,COMPLETE|NOCHECK)              * 05707200
*                                                                     * 05753600
*                                                                     * 05800000
*      Where:                                                         * 05846400
*                                                                     * 05892800
*                                                                     * 05939200
*      [xlabel]                                                       * 05985600
*          is an optional symbol, starting in column 1, that is the   * 06032000
*          name on the IVTFREE macro invocation.  The name must       * 06078400
*          conform to the rules for an ordinary assembler language    * 06124800
*          symbol.                                                    * 06171200
*          DEFAULT: No name.                                          * 06217600
*                                                                     * 06264000
*                                                                     * 06310400
*                                                                     * 06356800
*                                                                     * 06403200
*      BUFLIST(xbuflist)                                              * 06449600
*          is a required input.  It is the name (RS-type) (or address * 06496000
*          in register (2)-(12) ASM only) of an area containing a     * 06542400
*          list of storage descriptors of buffers to be freed.  The   * 06588800
*          number of descriptors in the list is specified by the      * 06635200
*          BUFNUM parameter.  The buffer list is mapped by IVTBUFL.   * 06681600
*                                                                     * 06728000
*                                                                     * 06774400
*                                                                     * 06820800
*                                                                     * 06867200
*      [BUFNUM(xbufnum|1)]                                          * 06913600
*          is the name (RS-type) (or address in register (2)-(12) ASM * 06960000
*          only) of an optional fullword input specifying the number  * 07006400
*          of buffers in BUFLIST.                                     * 07052800
*          DEFAULT: 1                                                 * 07099200
*                                                                     * 07145600
*                                                                     * 07192000
*                                                                     * 07238400
*                                                                     * 07284800
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 07331200
*          is an optional byte input decimal value in the "0-0" range * 07377600
*          that specifies the macro version.  PLISTVER is the only    * 07424000
*          key allowed on the list form of MF and determines which    * 07470400
*          parameter list is generated (see Macro USAGE NOTE 2).      * 07516800
*          Note that MAX may be specified instead of a number, and    * 07563200
*          the parameter list will be of the largest size currently   * 07609600
*          supported. This size may grow from release to release      * 07656000
*          (thus possibly affecting the amount of storage needed by   * 07702400
*          your program).  If your program can tolerate this, IBM     * 07748800
*          recommends that you always specify MAX when creating the   * 07795200
*          list form parameter list as that will ensure that the list * 07841600
*          form parameter list is always long enough to hold whatever * 07888000
*          parameters might be specified on the execute form.         * 07934400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 07980800
*          default is the lowest version which allows all of the      * 08027200
*          parameters specified on the invocation to be processed.    * 08073600
*                                                                     * 08120000
*                                                                     * 08166400
*                                                                     * 08212800
*                                                                     * 08259200
*       MF(E|L|M)                                                   * 08305600
*          is a required keyword input which specifies the macro      * 08352000
*          form.                                                      * 08398400
*                                                                     * 08444800
*                                                                     * 08491200
*           MF(E,xmfctrl,COMPLETE|NOCHECK)                          * 08537600
*              specifies the execute form of the macro.  The "E" form * 08584000
*              generates code to put the parameters into the          * 08630400
*              parameter list specified by xmfctrl and invoke the     * 08676800
*              desired service.                                       * 08723200
*                                                                     * 08769600
*            ,xmfctrl                                                 * 08816000
*              is a required input.  It is the name (RS-type) (or     * 08862400
*              address in register (1)-(12) ASM only) of a storage    * 08908800
*              area for the parameter list.                           * 08955200
*                                                                     * 09001600
*            ,COMPLETE|NOCHECK                                      * 09048000
*              is an optional keyword input which specifies the       * 09094400
*              degree of macro parameter syntax checking.             * 09140800
*              DEFAULT: COMPLETE                                      * 09187200
*                                                                     * 09233600
*                                                                     * 09280000
*              COMPLETE                                               * 09326400
*                  Checking for required macro keys is done and       * 09372800
*                  defaults are supplied for omitted optional         * 09419200
*                  parameters.  (See Macro Usage Note 2).             * 09465600
*                                                                     * 09512000
*              NOCHECK                                                * 09558400
*                  Checking for required macro keys is not done nor   * 09604800
*                  are defaults supplied for omitted optional         * 09651200
*                  parameters.                                        * 09697600
*                                                                     * 09744000
*                                                                     * 09790400
*                                                                     * 09836800
*           MF(L,xmfctrl,xmfattr|BDY(DWORD))                        * 09883200
*              specifies the list form of the macro.  The "L" form    * 09929600
*              defines an area to be used for the parameter list.     * 09976000
*              Only the PLISTVER key may be specified on the          * 10022400
*              invocation.  All other macro parameters are flagged as * 10068800
*              errors.  If PLISTVER is not specified, the original    * 10115200
*              parameter list definition is used.                     * 10161600
*                                                                     * 10208000
*            ,xmfctrl                                                 * 10254400
*              is a required input.  It is the name of a storage area * 10300800
*              for the parameter list.                                * 10347200
*                                                                     * 10393600
*            ,xmfattr|BDY(DWORD)                                    * 10440000
*              is an optional 60 character input string that varies   * 10486400
*              from 1 to 60 characters. Use it to force boundary      * 10532800
*              alignment of the parameter list. Use only 0F or 0D     * 10579200
*              (assembler-only).                                      * 10625600
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 10672000
*              forces the parameter list to a doubleword boundary.    * 10718400
*                                                                     * 10764800
*           MF(M,xmfctrl,COMPLETE|NOCHECK)                          * 10811200
*              specifies the modify form of the macro.  The "M" form  * 10857600
*              generates code to put the parameters into the          * 10904000
*              parameter list specified by xmfctrl.                   * 10950400
*                                                                     * 10996800
*            ,xmfctrl                                                 * 11043200
*              is a required input.  It is the name (RS-type) (or     * 11089600
*              address in register (1)-(12) ASM only) of a storage    * 11136000
*              area for the parameter list.                           * 11182400
*                                                                     * 11228800
*            ,COMPLETE|NOCHECK                                      * 11275200
*              is an optional keyword input which specifies the       * 11321600
*              degree of macro parameter syntax checking.             * 11368000
*              DEFAULT: COMPLETE                                      * 11414400
*                                                                     * 11460800
*                                                                     * 11507200
*              COMPLETE                                               * 11553600
*                  Checking for required macro keys is done and       * 11600000
*                  defaults are supplied for omitted optional         * 11646400
*                  parameters.  (See Macro Usage Note 2).             * 11692800
*                                                                     * 11739200
*              NOCHECK                                                * 11785600
*                  Checking for required macro keys is not done nor   * 11832000
*                  are defaults supplied for omitted optional         * 11878400
*                  parameters.                                        * 11924800
*                                                                     * 11971200
*                                                                     * 12017600
*                                                                     * 12064000
*                                                                     * 12110400
*                                                                     * 12156800
*                                                                     * 12203200
*                                                                     * 12249600
*01* ABEND CODES:  None.                                              * 12296000
*                                                                     * 12342400
*01* RETURN CODES:  None.                                             * 12388800
*                                                                     * 12435200
*01* REASON CODES:  None.                                             * 12481600
*                                                                     * 12528000
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 12574400
*                                                                     * 12620800
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 12667200
*                                                                     * 12713600
*01* MACRO USAGE NOTES:                                               * 12760000
*                                                                     * 12806400
*                                                                     * 12852800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 12899200
*        global macro variable.  Any value other than 'NO' will       * 12945600
*        result in the macro expansion being printed.  The default is * 12992000
*        'YES'.  The following examples illustrate how the ZPRINT     * 13038400
*        variable should be set.                                      * 13084800
*                                                                     * 13131200
*                    GBLC &ZPRINT                                     * 13177600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 13224000
*                                                                     * 13270400
*                                                                     * 13316800
*    2.  When using the NOCHECK option in conjunction with the Modify * 13363200
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 13409600
*        Modify   or  Execute  form  invocation  which  specifies  or * 13456000
*        defaults  to  the  COMPLETE  option.   This insures that the * 13502400
*        parameter  list  is  initialized completely.   The parameter * 13548800
*        list  field which identifies the version number of the macro * 13595200
*        is only set when the Standard form or the Complete option of * 13641600
*        the  Execute/Modify  form  is  used,  or  when  PLISTVER  is * 13688000
*        explicitly  specified.  Be sure that the resulting parameter * 13734400
*        list version number covers all the keys that you use.        * 13780800
*                                                                     * 13827200
*                                                                     * 13873600
*    3.  All keys currently contained in the IVTFREE macro correspond * 13920000
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 13966400
*        MAX.                                                         * 14012800
*                                                                     * 14059200
*                                                                     * 14105600
*                                                                     * 14152000
*                                                                     * 14198400
*01* CHANGE ACTIVITY:                                                 * 14244800
*                                                                     * 14291200
*   Flag LineItem  FMID    Date   ID    Comment                       * 14337600
*                                                                     * 14384000
*$D0= ID@@@MST FPAPI   042295 143576: FAST PATH API FOR APPC          * 14430400
*                                                                     * 14476800
*$MAC(IVTFREE) COMP(CSM) PROD(VTAM): CSM FREERTN INTERFACE            * 14523200
****** END OF SPECIFICATIONS *****************************************/ 14569600
*/* TLINE 1 *********************************************************** 14616000
         MACRO                                                          14662400
&XLABEL  IVTFREE &BUFLIST=,&BUFNUM=,&PLISTVER=,&MF=                     14708800
.*                                                                      14755200
*              MACDATE -99/09/09-<0>                                    14801600
.*                                                                      14848000
.*******************************************************************    14894400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        14940800
.*******************************************************************    14987200
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   15033600
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     15080000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             15126400
.*                                                                      15172800
              GBLC  &ZIVTFREE   YES=MACRO USED AT LEAST ONCE            15219200
.*******************************************************************    15265600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          15312000
.*******************************************************************    15358400
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 15404800
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            15451200
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              15497600
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             15544000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             15590400
              LCLA  &ZAWRK      USED AS A WORK AREA                     15636800
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  15683200
              LCLA  &ZN         NUMERIC WORK VARIABLE                   15729600
              LCLC  &ZC         CHARACTER WORK VARIABLE                 15776000
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             15822400
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 15868800
              LCLA  &ZMACRET    MACRO RETURN CODE                       15915200
&ZMACRET      SETA  0           ASSUME NO ERRORS                        15961600
.*                                                                      16008000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      16054400
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              16100800
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   16147200
              LCLC  &ZENDBASEPL                 End of base PL          16193600
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   16240000
.*******************************************************************    16286400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             16332800
.*******************************************************************    16379200
              LCLA  &ZI         INDEX FOR ARRAY                         16425600
              LCLA  &ZJ         INDEX FOR PARMS                         16472000
              LCLA  &ZK         INDEX FOR PARSE                         16518400
              LCLA  &ZLO        LOW RANGE VALUE                         16564800
              LCLA  &ZHI        HIGH RANGE VALUE                        16611200
              LCLC  &ZW         WORK AREA FOR PARM                      16657600
.********************************************************************   16704000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 16750400
.********************************************************************   16796800
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 16843200
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          16889600
.*                                                                      16936000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       16982400
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        17028800
              SPLEVEL  TEST                                             17075200
.ZSYS2        ANOP  ,                                                   17121600
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              17168000
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              17214400
              SYSSTATE TEST                                             17260800
              AGO   .ZSYS4                                              17307200
.ZSYS3        ANOP  ,                                                   17353600
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 17400000
.ZSYS4        ANOP  ,                                                   17446400
.*******************************************************************    17492800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   17539200
.*******************************************************************    17585600
              LCLC  &XBUFLIST   ++ NAME                                 17632000
              LCLC  &XBUFNUM    ++ NAME                                 17678400
              LCLA  &XPLISTVER  ++ VALUE                                17724800
              LCLC  &XMF        ++ VALUE                                17771200
              LCLC  &XMFCTRL    ++ NAME                                 17817600
              LCLC  &XMFSCK     ++ VALUE                                17864000
              LCLC  &XMFATTR    ++ VALUE                                17910400
.*******************************************************************    17956800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           18003200
.*******************************************************************    18049600
              LCLC  &ZXBUFLIST  ++ INPUT NAME                           18096000
              LCLC  &ZXBUFNUM   ++ INPUT NAME                           18142400
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          18188800
              LCLC  &ZXMF       ++ INPUT VALUE                          18235200
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           18281600
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          18328000
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          18374400
.********************************************************************   18420800
.***AC.PLV01  PROCESS PLISTVER                                      *   18467200
.********************************************************************   18513600
&XPLISTVER      SETA  0                                                 18560000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       18606400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   18652800
&XPLISTVER      SETA  0                                                 18699200
.ZPLV0          ANOP  ,                                                 18745600
.*                                                                      18792000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      18838400
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      18884800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  18931200
.*-------------------------------------------------------------------   18977600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 19024000
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                19070400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 19116800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 19163200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               19209600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                19256000
                AGO   .ZPVCK2                                           19302400
.ZPVCK3         ANOP  ,                                                 19348800
.*-------------------------------------------------------------------   19395200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  19441600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                19488000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 19534400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         19580800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 19627200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                19673600
                AGO   .ZPVCKE                                           19720000
.ZPVCK2         ANOP  ,                                                 19766400
.*-------------------------------------------------------------------   19812800
&ZCVAL          SETC  '&PLISTVER(1)'                                    19859200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             19905600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             19952000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        19998400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      20044800
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     20091200
.ZPVCK6         ANOP  ,                                                 20137600
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                20184000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 20230400
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         20276800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         20323200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                20369600
&XPLISTVER      SETA  0                                                 20416000
                AGO   .ZPVCKE                                           20462400
.*-------------------------------------------------------------------   20508800
.ZPVCK4A        ANOP  ,                                                 20555200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        20601600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                20648000
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               20694400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          20740800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 20787200
                MNOTE 8,' &ZMS IS REQUIRED.'                            20833600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                20880000
                AGO   .ZPVCK5                                           20926400
.ZPVCK4         ANOP  ,                                                 20972800
&XPLISTVER      SETA  &PLISTVER(1)                                      21019200
.ZPVCK5         ANOP  ,                                                 21065600
.ZPVCKE         ANOP  ,                                                 21112000
.********************************************************************   21158400
.***AG.MF01 PROCESS MF MACRO FORMS                                      21204800
.********************************************************************   21251200
              ACTR  10000                                               21297600
.*------------------------------------------------------------------    21344000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           21390400
&XMF          SETC  ''          INITIALIZE XVARIABLE                    21436800
.*-------------------------------------------------------------------   21483200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           21529600
.ZG12         ANOP  ,                                                   21576000
&ZTLC         SETC 'E'                                                  21622400
              AIF   ('&MF(1)' NE '&ZTLC').ZG21                          21668800
&XMF          SETC  'E'         SET KEYWORD                             21715200
              AIF   (N'&MF LE 3).ZG12A          CK NUM                  21761600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           21808000
&ZMS          SETC  '&ZMS.&MF"'                                         21854400
&ZMS          SETC  '&ZMS "MF"'                                         21900800
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                21947200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             21993600
.ZG12A        ANOP  ,                                                   22040000
.*-------------------------------------------------------------------   22086400
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                       22132800
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           22179200
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           22225600
              AIF   (N'&MF(2) GT 1).ZG14B       MULTI PARMS             22272000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           22318400
.ZG14B        AIF   (K'&MF(2) GT 0).ZG14C                               22364800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         22411200
&ZMS          SETC  ' '         *KRQDA*                                 22457600
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 22504000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        22550400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             22596800
.ZG14C        ANOP  ,                                                   22643200
.*-------------------------------------------------------------------   22689600
.***AG.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                  22736000
              AIF   (K'&ZXMFCTRL LE 0).ZG14R    NOT I/O                 22782400
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG14R                      22828800
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          22875200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                        22921600
              AIF   (K'&ZCGPR GT 2).ZG14Q                               22968000
              AIF   ('&ZCGPR' EQ '0').ZG14Q                             23014400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       23060800
              AIF   (T'&ZCGPR NE 'N').ZG14Q     INVALID REG NAME        23107200
.ZG14P        ANOP  ,                                                   23153600
              AIF   (T'&ZCGPR NE 'N').ZG14R     NON NUMERIC             23200000
              AIF   ('&ZCGPR' LT '1').ZG14Q                             23246400
              AIF   ('&ZCGPR' LE '12').ZG14R                            23292800
.ZG14Q        ANOP  ,                                                   23339200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           23385600
&ZMS          SETC  '&ZMS.&MF"'                                         23432000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           23478400
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    23524800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             23571200
.ZG14R        ANOP  ,                                                   23617600
.*-------------------------------------------------------------------   23664000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             23710400
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    23756800
.ZG18A   AIF   ('&MF(3)' NE 'COMPLETE').ZG19A                           23803200
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             23849600
.*-------------------------------------------------------------------   23896000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             23942400
.ZG19A   AIF   ('&MF(3)' NE 'NOCHECK').ZG20A                            23988800
&XMFSCK       SETC  'NOCHECK'   SET KEYWORD                             24035200
.*-------------------------------------------------------------------   24081600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             24128000
.ZG20A        AIF   (K'&XMFSCK GT 0).ZG20C      KEYWORD                 24174400
              AIF   (K'&MF(3) LE 0).ZG20B                               24220800
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           24267200
&ZMS          SETC  '&ZMS.&MF"'                                         24313600
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           24360000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 24406400
&ZMS          SETC  '&ZMS "COMPLETE"'           VALID KEYWORD           24452800
&ZMS          SETC  '&ZMS OR "NOCHECK".'        VALID KEYWORD           24499200
              MNOTE 8,' &ZMS '                                          24545600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             24592000
.ZG20B        ANOP  ,                                                   24638400
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     24684800
.ZG20C        ANOP  ,                                                   24731200
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           24777600
.*-------------------------------------------------------------------   24824000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           24870400
.ZG21         ANOP  ,                                                   24916800
&ZTLC         SETC 'L'                                                  24963200
              AIF   ('&MF(1)' NE '&ZTLC').ZG28                          25009600
&XMF          SETC  'L'         SET KEYWORD                             25056000
              AIF   (N'&MF LE 3).ZG21A          CK NUM                  25102400
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           25148800
&ZMS          SETC  '&ZMS.&MF"'                                         25195200
&ZMS          SETC  '&ZMS "MF"'                                         25241600
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                25288000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             25334400
.ZG21A        ANOP  ,                                                   25380800
.*-------------------------------------------------------------------   25427200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     25473600
              AIF   (N'&SYSLIST NE 0).ZG21B     POSITIONALS?            25520000
              AIF   ('&BUFLIST' NE '').ZG21B    KEYS?                   25566400
              AIF   ('&BUFNUM' NE '').ZG21B     KEYS?                   25612800
              AGO    .ZG21C     INVOCATION OKAY                         25659200
.ZG21B        ANOP  ,                                                   25705600
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            25752000
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                25798400
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           25844800
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              25891200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             25937600
.ZG21C        ANOP  ,                                                   25984000
.*-------------------------------------------------------------------   26030400
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                       26076800
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           26123200
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           26169600
              AIF   (N'&MF(2) GT 1).ZG23B       MULTI PARMS             26216000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           26262400
.ZG23B        AIF   (K'&MF(2) GT 0).ZG23C                               26308800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         26355200
&ZMS          SETC  ' '         *KRQDA*                                 26401600
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 26448000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        26494400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             26540800
.ZG23C        ANOP  ,                                                   26587200
.*-------------------------------------------------------------------   26633600
.***AG.KCK01 NAME, RQD INPUT, POS(2) -GPR NOT ALLOWED                   26680000
              AIF   (K'&ZXMFCTRL LE 0).ZG23P    NOT I/O                 26726400
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG23P                      26772800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         26819200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           26865600
&ZMS          SETC  '&ZMS.&MF"'                                         26912000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           26958400
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   27004800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             27051200
.ZG23P        ANOP  ,                                                   27097600
.*-------------------------------------------------------------------   27144000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      27190400
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           27236800
&XMFATTR      SETC  '0D'                                                27283200
              AIF   (K'&MF(3) LE 0).ZG26B       PARM                    27329600
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           27376000
              AIF   (N'&MF(3) GT 1).ZG26B       MULTI PARMS             27422400
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           27468800
.ZG26B        ANOP  ,                                                   27515200
.*-------------------------------------------------------------------   27561600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  27608000
              AIF   (K'&ZXMFATTR LE 0).ZG26P    NOT I/O                 27654400
              AIF   ('&XMFATTR'(1,1) NE '(').ZG26P                      27700800
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         27747200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           27793600
&ZMS          SETC  '&ZMS.&MF"'                                         27840000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           27886400
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   27932800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             27979200
.ZG26P        ANOP  ,                                                   28025600
.*-------------------------------------------------------------------   28072000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 28118400
              AIF   (K'&ZXMFATTR LE 0).ZG26S    NOT I/O                 28164800
              AIF   (K'&XMFATTR LE 60).ZG26S    LNG OK                  28211200
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         28257600
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           28304000
&ZMS          SETC  '&ZMS.&MF"'                                         28350400
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               28396800
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  28443200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28489600
.ZG26S        ANOP  ,                                                   28536000
.*-------------------------------------------------------------------   28582400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           28628800
.ZG28         ANOP  ,                                                   28675200
&ZTLC         SETC 'M'                                                  28721600
              AIF   ('&MF(1)' NE '&ZTLC').ZG37                          28768000
&XMF          SETC  'M'         SET KEYWORD                             28814400
              AIF   (N'&MF LE 3).ZG28A          CK NUM                  28860800
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           28907200
&ZMS          SETC  '&ZMS.&MF"'                                         28953600
&ZMS          SETC  '&ZMS "MF"'                                         29000000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                29046400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             29092800
.ZG28A        ANOP  ,                                                   29139200
.*-------------------------------------------------------------------   29185600
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                       29232000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           29278400
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           29324800
              AIF   (N'&MF(2) GT 1).ZG30B       MULTI PARMS             29371200
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           29417600
.ZG30B        AIF   (K'&MF(2) GT 0).ZG30C                               29464000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         29510400
&ZMS          SETC  ' '         *KRQDA*                                 29556800
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 29603200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        29649600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             29696000
.ZG30C        ANOP  ,                                                   29742400
.*-------------------------------------------------------------------   29788800
.***AG.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                  29835200
              AIF   (K'&ZXMFCTRL LE 0).ZG30R    NOT I/O                 29881600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG30R                      29928000
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          29974400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                        30020800
              AIF   (K'&ZCGPR GT 2).ZG30Q                               30067200
              AIF   ('&ZCGPR' EQ '0').ZG30Q                             30113600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       30160000
              AIF   (T'&ZCGPR NE 'N').ZG30Q     INVALID REG NAME        30206400
.ZG30P        ANOP  ,                                                   30252800
              AIF   (T'&ZCGPR NE 'N').ZG30R     NON NUMERIC             30299200
              AIF   ('&ZCGPR' LT '1').ZG30Q                             30345600
              AIF   ('&ZCGPR' LE '12').ZG30R                            30392000
.ZG30Q        ANOP  ,                                                   30438400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           30484800
&ZMS          SETC  '&ZMS.&MF"'                                         30531200
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           30577600
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    30624000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             30670400
.ZG30R        ANOP  ,                                                   30716800
.*-------------------------------------------------------------------   30763200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             30809600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    30856000
.ZG34A   AIF   ('&MF(3)' NE 'COMPLETE').ZG35A                           30902400
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             30948800
.*-------------------------------------------------------------------   30995200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             31041600
.ZG35A   AIF   ('&MF(3)' NE 'NOCHECK').ZG36A                            31088000
&XMFSCK       SETC  'NOCHECK'   SET KEYWORD                             31134400
.*-------------------------------------------------------------------   31180800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             31227200
.ZG36A        AIF   (K'&XMFSCK GT 0).ZG36C      KEYWORD                 31273600
              AIF   (K'&MF(3) LE 0).ZG36B                               31320000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           31366400
&ZMS          SETC  '&ZMS.&MF"'                                         31412800
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           31459200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 31505600
&ZMS          SETC  '&ZMS "COMPLETE"'           VALID KEYWORD           31552000
&ZMS          SETC  '&ZMS OR "NOCHECK".'        VALID KEYWORD           31598400
              MNOTE 8,' &ZMS '                                          31644800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             31691200
.ZG36B        ANOP  ,                                                   31737600
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     31784000
.ZG36C        ANOP  ,                                                   31830400
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           31876800
.*------------------------------------------------------------------    31923200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           31969600
.ZG37         ANOP  ,                                                   32016000
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           32062400
              AIF   (K'&XMF GT 0).ZG37E         VALID ARG               32108800
              AIF   (T'&MF EQ 'O').ZG37D        OMITTED                 32155200
&ZASYSLNDX    SETA  0                                                   32201600
.ZG37A        ANOP  ,           POSITIONAL MACRO KEY                    32248000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        32294400
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C                    32340800
&ZTLC         SETC 'MF'                                                 32387200
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A           32433600
.ZG37B        ANOP  ,                                                   32480000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         32526400
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           32572800
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             32619200
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    32665600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32712000
              AGO   .ZG37E                                              32758400
.ZG37C        ANOP  ,                                                   32804800
&ZXMF         SETC  ''          RESET IN/OUTPUT                         32851200
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           32897600
&ZMS          SETC  '&ZMS.&MF"'                                         32944000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           32990400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 33036800
&ZMS          SETC  '&ZMS "E",'                 VALID KEYWORD           33083200
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           33129600
&ZMS          SETC  '&ZMS OR "M".'              VALID KEYWORD           33176000
              MNOTE 8,' &ZMS '                                          33222400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             33268800
              AGO   .ZG37E                                              33315200
.ZG37D        ANOP  ,                                                   33361600
&XMF          SETC  'E'         SET DEFAULT KEYWORD                     33408000
.ZG37E        ANOP  ,                                                   33454400
.*------------------------------------------------------------------    33500800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           33547200
              AIF   (K'&MF(1) GT 0).ZG37F       PARM                    33593600
&XMF          SETC  ''          ENSURE NULL KEYWORD                     33640000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         33686400
&ZMS          SETC  'THE'                                               33732800
&ZMS          SETC  '&ZMS "MF" KEY AND ITS ARGUMENT'                    33779200
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                33825600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 33872000
&ZMS          SETC  '&ZMS "E",'                 VALID KEYWORD           33918400
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           33964800
&ZMS          SETC  '&ZMS OR "M".'              VALID KEYWORD           34011200
              MNOTE 8,' &ZMS '                                          34057600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             34104000
.ZG37F        ANOP  ,                                                   34150400
.********************************************************************   34196800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 34243200
.********************************************************************   34289600
              ACTR  10000                                               34336000
.*-------------------------------------------------------------------   34382400
.***AG.MF03 MF=(LME)                                                    34428800
              AIF   ('&XMF' EQ 'L').ZGMFX                               34475200
              AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX                     34521600
.*----------------------------------------------------------------***   34568000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     34614400
              AIF   (N'&BUFLIST LE 1).ZG2A      CK NUM                  34660800
&ZMS          SETC  '"BUFLIST='                 *KPOSA* MNOTE           34707200
&ZMS          SETC  '&ZMS.&BUFLIST"'                                    34753600
&ZMS          SETC  '&ZMS "BUFLIST"'                                    34800000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 34846400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             34892800
.ZG2A         ANOP  ,                                                   34939200
.*-------------------------------------------------------------------   34985600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         35032000
&ZXBUFLIST    SETC  'INPUT'     SET IN/OUTPUT                           35078400
&XBUFLIST     SETC  '&BUFLIST(1)'               SET XVARIABLE           35124800
              AIF   (N'&BUFLIST GT 1).ZG2B      MULTI PARMS             35171200
&XBUFLIST     SETC  '&BUFLIST'  SET XVARIABLE                           35217600
.ZG2B         AIF   (K'&BUFLIST(1) GT 0).ZG2C                           35264000
&ZXBUFLIST    SETC  ''          RESET IN/OUTPUT                         35310400
&ZMS          SETC  ' '         *KRQDA*                                 35356800
&ZMS          SETC  '&ZMS "BUFLIST" KEY AND ITS ARGUMENT'               35403200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             35449600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             35496000
.ZG2C         ANOP  ,                                                   35542400
.*-------------------------------------------------------------------   35588800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    35635200
              AIF   (K'&ZXBUFLIST LE 0).ZG2R    NOT I/O                 35681600
              AIF   ('&XBUFLIST'(1,1) NE '(').ZG2R                      35728000
&ZCGPR        SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                        35774400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         35820800
              AIF   (K'&ZCGPR GT 2).ZG2Q                                35867200
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              35913600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       35960000
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        36006400
.ZG2P         ANOP  ,                                                   36052800
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             36099200
              AIF   ('&ZCGPR' LT '2').ZG2Q                              36145600
              AIF   ('&ZCGPR' LE '12').ZG2R                             36192000
.ZG2Q         ANOP  ,                                                   36238400
&ZMS          SETC  '"BUFLIST='                 *KGPRA* MNOTE           36284800
&ZMS          SETC  '&ZMS.&BUFLIST"'                                    36331200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           36377600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    36424000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             36470400
.ZG2R         ANOP  ,                                                   36516800
.*----------------------------------------------------------------***   36563200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     36609600
              AIF   (N'&BUFNUM LE 1).ZG5A       CK NUM                  36656000
&ZMS          SETC  '"BUFNUM='  *KPOSA* MNOTE                           36702400
&ZMS          SETC  '&ZMS.&BUFNUM"'                                     36748800
&ZMS          SETC  '&ZMS "BUFNUM"'                                     36795200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 36841600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             36888000
.ZG5A         ANOP  ,                                                   36934400
.*-------------------------------------------------------------------   36980800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         37027200
&ZXBUFNUM     SETC  'INPUT'     SET IN/OUTPUT                           37073600
&XBUFNUM      SETC  '1'                                                 37120000
              AIF   (K'&BUFNUM(1) LE 0).ZG5B    PARM                    37166400
&XBUFNUM      SETC  '&BUFNUM(1)'                SET XVARIABLE           37212800
              AIF   (N'&BUFNUM GT 1).ZG5B       MULTI PARMS             37259200
&XBUFNUM      SETC  '&BUFNUM'   SET XVARIABLE                           37305600
.ZG5B         ANOP  ,                                                   37352000
.*-------------------------------------------------------------------   37398400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    37444800
              AIF   (K'&ZXBUFNUM LE 0).ZG5R     NOT I/O                 37491200
              AIF   ('&XBUFNUM'(1,1) NE '(').ZG5R                       37537600
&ZCGPR        SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                          37584000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         37630400
              AIF   (K'&ZCGPR GT 2).ZG5Q                                37676800
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              37723200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       37769600
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        37816000
.ZG5P         ANOP  ,                                                   37862400
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             37908800
              AIF   ('&ZCGPR' LT '2').ZG5Q                              37955200
              AIF   ('&ZCGPR' LE '12').ZG5R                             38001600
.ZG5Q         ANOP  ,                                                   38048000
&ZMS          SETC  '"BUFNUM='  *KGPRA* MNOTE                           38094400
&ZMS          SETC  '&ZMS.&BUFNUM"'                                     38140800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           38187200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    38233600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             38280000
.ZG5R         ANOP  ,                                                   38326400
.******************************************************************     38372800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        38419200
.******************************************************************     38465600
              ACTR  10000                                               38512000
.*----------------------------------------------------------------***   38558400
.***AH.P02 EXTRA POSITIONALS                                            38604800
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               38651200
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                38697600
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            38744000
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             38790400
.ZGLISTX1     ANOP  ,                                                   38836800
&ZCVAL        SETC  ''          ERROR FIELD                             38883200
&ZAWRK        SETA  0           POSITIONAL NUMBER                       38929600
.ZGLIST2      ANOP  ,                                                   38976000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         39022400
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                39068800
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   39115200
              AGO   .ZGLIST2                                            39161600
.*                                                                      39208000
.ZGLIST3      ANOP  ,                                                   39254400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             39300800
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           39347200
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     39393600
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              39440000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      39486400
              MNOTE 8,' &ZMS ARE ALLOWED.'                              39532800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             39579200
.ZGLISTX      ANOP  ,                                                   39625600
&ZASYSLNDX    SETA  0                                                   39672000
.*-------------------------------------------------------------------   39718400
.***AG.MF04 MF=(LME)                                                    39764800
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                39811200
.********************************************************************   39857600
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             39904000
.********************************************************************   39950400
              ACTR  10000                                               39996800
.*-------------------------------------------------------------------   40043200
.***AE.MF01 MF=(LME)                                                    40089600
              AIF   ('&XMF' EQ 'L').ZEMFX                               40136000
              AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                      40182400
.********************************************************************   40228800
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        40275200
.********************************************************************   40321600
.*----------------------------------------------------------------***   40368000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          40414400
              AIF   (N'&BUFLIST LE 1).ZE2A      CK NUM                  40460800
&ZMS          SETC  '"BUFLIST='                 *KPOSA* MNOTE           40507200
&ZMS          SETC  '&ZMS.&BUFLIST"'                                    40553600
&ZMS          SETC  '&ZMS "BUFLIST"'                                    40600000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 40646400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             40692800
.ZE2A         ANOP  ,                                                   40739200
.*-------------------------------------------------------------------   40785600
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     40832000
              AIF   (K'&BUFLIST(1) LE 0).ZE2B   NO PRM                  40878400
&ZXBUFLIST    SETC  'INPUT'     SET IN/OUTPUT                           40924800
&XBUFLIST     SETC  '&BUFLIST(1)'               SET XVARIABLE           40971200
              AIF   (N'&BUFLIST GT 1).ZE2B                              41017600
.*            ANOP              MULTIPLE PARMS                          41064000
&XBUFLIST     SETC  '&BUFLIST'  SET XVARIABLE                           41110400
.ZE2B         ANOP  ,                                                   41156800
.*-------------------------------------------------------------------   41203200
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    41249600
              AIF   (K'&ZXBUFLIST LE 0).ZE2R    NOT I/O                 41296000
              AIF   ('&XBUFLIST'(1,1) NE '(').ZE2R                      41342400
&ZCGPR        SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                        41388800
              AIF   ('&ZCGPR'(1,1) NE '0').ZE2P                         41435200
              AIF   (K'&ZCGPR GT 2).ZE2Q                                41481600
              AIF   ('&ZCGPR' EQ '0').ZE2Q                              41528000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       41574400
              AIF   (T'&ZCGPR NE 'N').ZE2Q      INVALID REG NAME        41620800
.ZE2P         ANOP  ,                                                   41667200
              AIF   (T'&ZCGPR NE 'N').ZE2R      NON NUMERIC             41713600
              AIF   ('&ZCGPR' LT '2').ZE2Q                              41760000
              AIF   ('&ZCGPR' LE '12').ZE2R                             41806400
.ZE2Q         ANOP  ,                                                   41852800
&ZMS          SETC  '"BUFLIST='                 *KGPRA* MNOTE           41899200
&ZMS          SETC  '&ZMS.&BUFLIST"'                                    41945600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           41992000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    42038400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             42084800
.ZE2R         ANOP  ,                                                   42131200
.*----------------------------------------------------------------***   42177600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42224000
              AIF   (N'&BUFNUM LE 1).ZE5A       CK NUM                  42270400
&ZMS          SETC  '"BUFNUM='  *KPOSA* MNOTE                           42316800
&ZMS          SETC  '&ZMS.&BUFNUM"'                                     42363200
&ZMS          SETC  '&ZMS "BUFNUM"'                                     42409600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 42456000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             42502400
.ZE5A         ANOP  ,                                                   42548800
.*-------------------------------------------------------------------   42595200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42641600
              AIF   (K'&BUFNUM(1) LE 0).ZE5B    NO PRM                  42688000
&ZXBUFNUM     SETC  'INPUT'     SET IN/OUTPUT                           42734400
&XBUFNUM      SETC  '&BUFNUM(1)'                SET XVARIABLE           42780800
              AIF   (N'&BUFNUM GT 1).ZE5B                               42827200
.*            ANOP              MULTIPLE PARMS                          42873600
&XBUFNUM      SETC  '&BUFNUM'   SET XVARIABLE                           42920000
.ZE5B         ANOP  ,                                                   42966400
.*-------------------------------------------------------------------   43012800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    43059200
              AIF   (K'&ZXBUFNUM LE 0).ZE5R     NOT I/O                 43105600
              AIF   ('&XBUFNUM'(1,1) NE '(').ZE5R                       43152000
&ZCGPR        SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                          43198400
              AIF   ('&ZCGPR'(1,1) NE '0').ZE5P                         43244800
              AIF   (K'&ZCGPR GT 2).ZE5Q                                43291200
              AIF   ('&ZCGPR' EQ '0').ZE5Q                              43337600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       43384000
              AIF   (T'&ZCGPR NE 'N').ZE5Q      INVALID REG NAME        43430400
.ZE5P         ANOP  ,                                                   43476800
              AIF   (T'&ZCGPR NE 'N').ZE5R      NON NUMERIC             43523200
              AIF   ('&ZCGPR' LT '2').ZE5Q                              43569600
              AIF   ('&ZCGPR' LE '12').ZE5R                             43616000
.ZE5Q         ANOP  ,                                                   43662400
&ZMS          SETC  '"BUFNUM='  *KGPRA* MNOTE                           43708800
&ZMS          SETC  '&ZMS.&BUFNUM"'                                     43755200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           43801600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    43848000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             43894400
.ZE5R         ANOP  ,                                                   43940800
.******************************************************************     43987200
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        44033600
.******************************************************************     44080000
              ACTR  10000                                               44126400
.*----------------------------------------------------------------***   44172800
.***AF.P02 EXTRA POSITIONALS                                            44219200
              AIF   (N'&SYSLIST LE 0).ZELISTX   NO EXTRAS               44265600
&ZCVAL        SETC  ''          ERROR FIELD                             44312000
&ZAWRK        SETA  0           POSITIONAL NUMBER                       44358400
.ZELIST2      ANOP  ,                                                   44404800
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         44451200
              AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE                44497600
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   44544000
              AGO   .ZELIST2                                            44590400
.*                                                                      44636800
.ZELIST3      ANOP  ,                                                   44683200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             44729600
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           44776000
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     44822400
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              44868800
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      44915200
              MNOTE 8,' &ZMS ARE ALLOWED.'                              44961600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             45008000
.ZELISTX      ANOP  ,                                                   45054400
&ZASYSLNDX    SETA  0                                                   45100800
.*-------------------------------------------------------------------   45147200
.***AE.MF02 MF=(LME)                                                    45193600
.ZEMFX        ANOP  ,           END OF PARTIAL SYNTAX CHECK             45240000
.*******************************************************************    45286400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       45332800
.*******************************************************************    45379200
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          45425600
.*******************************************************************    45472000
.***AE.01  START OF IVTFREE MACRO CODE                                  45518400
.*******************************************************************    45564800
              LCLC  &M0M0001                 NAME                       45611200
&M0M0001      SETC  '&XLABEL'                SET NAME                   45657600
              AIF   (K'&XLABEL NE 0).XLAB2                              45704000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               45750400
.*                                                                      45796800
.XLAB2        ANOP  ,                                                   45843200
              AIF   ('&XMF' EQ 'L').XLAB3                               45889600
&M0M0001 DS    0H                             IVTFREE-0                 45936000
.XLAB3        ANOP  ,                                                   45982400
.*******************************************************************    46028800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              46075200
.*******************************************************************    46121600
              PUSH  PRINT                                               46168000
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          46214400
              PRINT OFF         ++ PR01                                 46260800
              AGO   .ZPRNTXX                                            46307200
.ZPRINTX      PRINT ON                                                  46353600
.ZPRNTXX      ANOP  ,                                                   46400000
.********************************************************************   46446400
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     46492800
.********************************************************************   46539200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       46585600
                      LCLA  &ZOPN1         INVOCATION INDEX             46632000
                      LCLC  &ZOPL(4095)    LABEL                        46678400
                      LCLC  &ZOPO(4095)    OPERATION                    46724800
                      LCLC  &ZOPV(4095)    VALUE                        46771200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  46817600
.*                                                                      46864000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     46910400
.******************************************************************     46956800
.***AL.L08 IVTFREE FMT=LIST MF=L PARAMETER AREA                         47003200
.******************************************************************     47049600
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=LIST         47096000
.*-------------------------------------------------------------------   47142400
.***AM.L00  IVTFREE FMT=LIST name                                       47188800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    47235200
&ZOPN                 SETA &ZOPN+1                                      47281600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   47328000
&ZOPO(&ZOPN)          SETC 'EQU'                                        47374400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   47420800
&ZOPD(&ZOPN)          SETC '++ IVTFREE NAME'                            47467200
.ZLMFSL2M             ANOP  ,                                           47513600
.*-------------------------------------------------------------------   47560000
.***AM.L01  IVTFREE FMT=LIST PARAMETERS                                 47606400
&ZOPN                 SETA &ZOPN+1                                      47652800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   47699200
&ZOPO(&ZOPN)          SETC 'DS'                                         47745600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   47792000
&ZOPD(&ZOPN)          SETC '++ IVTFREE PARM LIST'                       47838400
.*-------------------------------------------------------------------   47884800
.***AM.L02 XVERSION XL1                                                 47931200
&ZOPN                 SETA &ZOPN+1                                      47977600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         48024000
&ZOPO(&ZOPN)          SETC 'DS'                                         48070400
&ZOPV(&ZOPN)          SETC 'XL1'                                        48116800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          48163200
.*-------------------------------------------------------------------   48209600
.***AM.L09  XRSVFREE1 CL03                                              48256000
&ZOPN                 SETA &ZOPN+1                                      48302400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVFREE1'                        48348800
&ZOPO(&ZOPN)          SETC 'DS'                                         48395200
&ZOPV(&ZOPN)          SETC 'CL03'                                       48441600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSVFREE1'                     48488000
.*-------------------------------------------------------------------   48534400
.***AM.L09  XBUFLIST A                                                  48580800
&ZOPN                 SETA &ZOPN+1                                      48627200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         48673600
&ZOPO(&ZOPN)          SETC 'DS'                                         48720000
&ZOPV(&ZOPN)          SETC 'A'                                          48766400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST  XBUFLIST'                    48812800
.*-------------------------------------------------------------------   48859200
.***AM.L09  XBUFNUM F                                                   48905600
&ZOPN                 SETA &ZOPN+1                                      48952000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          48998400
&ZOPO(&ZOPN)          SETC 'DS'                                         49044800
&ZOPV(&ZOPN)          SETC 'F'                                          49091200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM  XBUFNUM'                      49137600
.*-------------------------------------------------------------------   49184000
.***AM.L10 END OF IVTFREE LIST PARAMETERS                               49230400
&ZOPN                 SETA &ZOPN+1                                      49276800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 49323200
&ZOPO(&ZOPN)          SETC 'EQU'                                        49369600
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 49416000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         49462400
.*                                                                      49508800
&ZOPN                 SETA &ZOPN+1                                      49555200
&ZOPL(&ZOPN)          SETC ' '                                          49601600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      49648000
&ZOPV(&ZOPN)          SETC '1'                                          49694400
&ZOPD(&ZOPN)          SETC ' '                                          49740800
.*-------------------------------------------------------------------   49787200
.***AL.L09 IVTFREE FMT=LIST MF=L PARAMETER AREA DEFINED                 49833600
                      AGO   .ZMFLX         EXIT, MF=L DONE              49880000
.*                                                                      49926400
.ZLMFLX               ANOP  ,                                           49972800
.*-------------------------------------------------------------------   50019200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          50065600
&ZPLLEN               SETA 12                                           50112000
.*                                                                      50158400
.******************************************************************     50204800
.***AI.L01 IVTFREE FMT=LIST FILL IN PARAMETER AREA                      50251200
.******************************************************************     50297600
                      ACTR  10000                                       50344000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               50390400
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    50436800
&ZCVAL                SETC  'LAE'          XAX MODE                     50483200
.ZIMFXA               ANOP ,                                            50529600
.*                                                                      50576000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    50622400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         50668800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 50715200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                50761600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 50808000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                50854400
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   50900800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    50947200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   50993600
&ZOPN                 SETA  &ZOPN+1                                     51040000
&ZOPL(&ZOPN)          SETC  ' '                                         51086400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    51132800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              51179200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       51225600
                      AGO   .ZIMFNX                                     51272000
.*                                                                      51318400
.ZIMFN2               ANOP ,                                            51364800
&ZOPN                 SETA  &ZOPN+1                                     51411200
&ZOPL(&ZOPN)          SETC  ' '                                         51457600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    51504000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                51550400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       51596800
.ZIMFNX               ANOP ,                                            51643200
.********************************************************************   51689600
.***AI.L02 IVTFREE FMT=LIST INITIALIZE PARAMETER AREA                   51736000
.********************************************************************   51782400
.***AI.L03 MF=(LME)                                                     51828800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      51875200
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            51921600
.*                                                                      51968000
&ZOPN                 SETA  &ZOPN+1                                     52014400
&ZOPL(&ZOPN)          SETC  ' '                                         52060800
&ZOPO(&ZOPN)          SETC  'XC'                                        52107200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         52153600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             52200000
.ZIMFLX               ANOP  ,                                           52246400
.*-------------------------------------------------------------------   52292800
.***AI.L19  XBUFLIST A                                                  52339200
                      AIF   ('&ZXBUFLIST' EQ '').ZI3H                   52385600
&ZCLNG                SETC  '&XBUFLIST'                                 52432000
&ZCGPR                SETC  '14'                                        52478400
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI3F  IN GPR                   52524800
.*                                                                      52571200
&ZOPN                 SETA  &ZOPN+1                                     52617600
&ZOPL(&ZOPN)          SETC  ' '                                         52664000
&ZOPO(&ZOPN)          SETC  'LA'                                        52710400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             52756800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    52803200
.*                                                                      52849600
                      AGO   .ZI3G                                       52896000
.*                                                                      52942400
.ZI3F                 ANOP  ,                                           52988800
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             53035200
.*                                                                      53081600
.ZI3G                 ANOP  ,                                           53128000
.*                                                                      53174400
&ZOPN                 SETA  &ZOPN+1                                     53220800
&ZOPL(&ZOPN)          SETC  ' '                                         53267200
&ZOPO(&ZOPN)          SETC  'ST'                                        53313600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              53360000
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    53406400
.*                                                                      53452800
.ZI3H                 ANOP  ,                                           53499200
.*-------------------------------------------------------------------   53545600
.***AI.L25  XBUFNUM F                                                   53592000
                      AIF   ('&ZXBUFNUM' EQ '').ZI4E                    53638400
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI4E              53684800
&ZCGPR                SETC  '&XBUFNUM'                                  53731200
.*                                                                      53777600
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI4B               53824000
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      53870400
                      AGO   .ZI4D                                       53916800
.ZI4B                 ANOP  ,                                           53963200
.*                                                                      54009600
&ZC                   SETC  '&XBUFNUM'(1,1)                             54056000
                      AIF   (T'&ZC NE 'N').ZI4D                         54102400
&ZC                   SETC  '&XBUFNUM'                                  54148800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                54195200
&ZCGPR                SETC  '=FL4''&XBUFNUM'''                          54241600
.*                                                                      54288000
.ZI4D                 ANOP  ,                                           54334400
.*                                                                      54380800
&ZOPN                 SETA  &ZOPN+1                                     54427200
&ZOPL(&ZOPN)          SETC  ' '                                         54473600
&ZOPO(&ZOPN)          SETC  'MVC'                                       54520000
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             54566400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      54612800
.*                                                                      54659200
.ZI4E                 ANOP  ,                                           54705600
.*-------------------------------------------------------------------   54752000
&ZOPN1                SETA &ZOPN                                        54798400
.*-------------------------------------------------------------------   54844800
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              54891200
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         54937600
.*******************************************************************    54984000
.***  PROCESS IVTFREE OUTPUT PARAMETERS                                 55030400
.*******************************************************************    55076800
                      ACTR  10000                                       55123200
.*******************************************************************    55169600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   55216000
.*******************************************************************    55262400
.ZMFLX                ANOP  ,              MF=L PROCESSING              55308800
.*******************************************************************    55355200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               55401600
.*******************************************************************    55448000
                      ACTR  10000                                       55494400
.*                                                                      55540800
                      LCLA  &ZLC           COLUMN POSITION              55587200
                      LCLA  &ZOPX          LIST TABLE INDEX             55633600
                      LCLC  &ZLL           LABEL                        55680000
                      LCLC  &ZLOP          OPERATION                    55726400
                      LCLC  &ZLV           VALUE                        55772800
                      LCLC  &ZLD           DESCRIPTION                  55819200
.*                                                                      55865600
&ZOPX                 SETA  1                                           55912000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            55958400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              56004800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              56051200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              56097600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              56144000
                      AIF   (K'&ZLD LE 0).ZL5                           56190400
&ZLC                  SETA  35             COMMENT COLUMN               56236800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    56283200
&ZLC                  SETA  33             COMMMENT COLUMN              56329600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   56376000
&ZLV                  SETC  '&ZLV'.' '                                  56422400
                      AGO   .ZL3                                        56468800
.*                                                                      56515200
.ZL4                  ANOP  ,                                           56561600
&ZLV                  SETC  '&ZLV'.' '                                  56608000
.ZL5                  ANOP  ,                                           56654400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               56700800
.*                                                                      56747200
&ZLL     &ZLOP &ZLV                                                     56793600
.*                                                                      56840000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               56886400
                      AGO   .ZL2           CONTINUE LOOPING             56932800
.*                                                                      56979200
.ZLX                  ANOP  ,                                           57025600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                57072000
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                57118400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  57164800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  57211200
.ZLINKX               ANOP  ,                                           57257600
.*******************************************************************    57304000
.***AP.X01  FORMAT GENERATED CODE                                       57350400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            57396800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              57443200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              57489600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              57536000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              57582400
                      AIF   (K'&ZLD LE 0).ZL51                          57628800
&ZLC                  SETA  35             COMMENT COLUMN               57675200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   57721600
&ZLC                  SETA  33             COMMENT COLUMN               57768000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  57814400
&ZLV                  SETC  '&ZLV'.' '                                  57860800
                      AGO   .ZL31                                       57907200
.*                                                                      57953600
.ZL41                 ANOP  ,                                           58000000
&ZLV                  SETC  '&ZLV'.' '                                  58046400
.ZL51                 ANOP  ,                                           58092800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               58139200
.*                                                                      58185600
&ZLL     &ZLOP &ZLV                                                     58232000
.*                                                                      58278400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               58324800
                      AGO   .ZL21          CONTINUE LOOPING             58371200
.*                                                                      58417600
.ZLX1                 ANOP  ,                                           58464000
.*******************************************************************    58510400
.***AP.X02  END OF IVTFREE MACRO                                        58556800
&ZIVTFREE             SETC  'YES'          SET IVTFREE USED             58603200
         POP   PRINT                                                    58649600
*                                            IVTFREE-0                  58696000
         SPACE 1                                                        58742400
.ZLX2                 ANOP  ,                                           58788800
         MEND                                                           58835200
**********************************************************************/ 58881600
*/**** START OF SPECIFICATIONS **************************************** 58928000
*                                                                     * 58974400
*                                                                     * 59020800
*01* MACRO NAME:  IVTFREE                               -99/09/09-<0> * 59067200
*                                                                     * 59113600
*                                                                     * 59160000
*01* DESCRIPTIVE NAME:  CSM Free Routine Interface                    * 59206400
*                                                                     * 59252800
*01* PROPRIETARY STATEMENT:                                           * 59299200
*                                                                     * 59345600
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 59392000
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 59438400
*     5694-A01 (C) COPYRIGHT IBM CORP. 1999                           * 59484800
*                                                                     * 59531200
* STATUS= HVT510A                                                     * 59577600
*                                                                     * 59624000
*                                                                     * 59670400
*                                                                     * 59716800
*01* FUNCTION:                                                        * 59763200
*       See the IVTFREE macro prologue for details.                   * 59809600
*                                                                     * 59856000
*01* INPUT:                                                           * 59902400
*                                                                     * 59948800
*            ?IVTFREE     BUFLIST(xbuflist)                           * 59995200
*                        [BUFNUM(xbufnum|1)]                        * 60041600
*                        [PLISTVER(xplistver|IMPLIED_VERSION)]      * 60088000
*                        MF(E,xmfctrl,COMPLETE|NOCHECK)            * 60134400
*                        MF(L,xmfctrl,xmfattr|BDY(DWORD))          * 60180800
*                        MF(M,xmfctrl,COMPLETE|NOCHECK)            * 60227200
*                                                                     * 60273600
****** END OF SPECIFICATIONS *****************************************/ 60320000
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 60366400
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                60412800
*  ANS('/* ? IVTFREE '||MACLIST||' ')                                   60459200
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     60505600
*                                                                       60552000
*  DCL ZELO  FIXED;                                                     60598400
*  DCL ZECOL FIXED;                                                     60644800
*                                                                       60691200
*  ZELO=1;     /* STARTING COLUMN */                                    60737600
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               60784000
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    60830400
*    IF ZECOL>0                                                         60876800
*      THEN                                                             60923200
*        DO;   /* PARENTHESIS FOUND */                                  60969600
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         61016000
*             NORESCAN COL(MACLMAR+5);                                  61062400
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   61108800
*        END;                                                           61155200
*      ELSE                                                             61201600
*        DO;   /* REMAINING KEYS */                                     61248000
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           61294400
*             NORESCAN COL(MACLMAR+5);                                  61340800
*          ZELO=LENGTH(MACKEYS)+1;                                      61387200
*        END;                                                           61433600
*  END;                                                                 61480000
*  ANS(' -99/09/09-0- */')                                              61526400
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       61572800
*/********************************************************************/ 61619200
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 61665600
*/********************************************************************/ 61712000
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 61758400
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 61804800
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 61851200
*                                                                       61897600
*  DCL   ZIVTFREE CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */  61944000
*  DEACT ZIVTFREE;                                                      61990400
*                                                                       62036800
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    62083200
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 62129600
*                                                                       62176000
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 62222400
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 62268800
*                                                                       62315200
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 62361600
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 62408000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 62454400
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 62500800
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 62547200
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 62593600
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 62640000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 62686400
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 62732800
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 62779200
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 62825600
*                                                                       62872000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 62918400
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 62964800
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 63011200
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 63057600
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 63104000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 63150400
*/*******************************************************************/  63196800
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  63243200
*/*******************************************************************/  63289600
*  DCL XBUFLIST;  DEACT XBUFLIST;  /***PV.XVAR02 INPUT NAME */          63336000
*  DCL ZXBUFLIST; DEACT ZXBUFLIST;  /***INPUT/OUTPUT CONTROL */         63382400
*  DCL XBUFNUM;  DEACT XBUFNUM;    /***PV.XVAR02 INPUT NAME */          63428800
*  DCL ZXBUFNUM; DEACT ZXBUFNUM;   /***INPUT/OUTPUT CONTROL */          63475200
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 63521600
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       63568000
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         63614400
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          63660800
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          63707200
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          63753600
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         63800000
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          63846400
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         63892800
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          63939200
*/********************************************************************/ 63985600
*/***PC.PLV01  PROCESS PLISTVER                                      */ 64032000
*/********************************************************************/ 64078400
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               64124800
*    XPLISTVER=0;                                                       64171200
*  ELSE                                                                 64217600
*    XPLISTVER=0;                                                       64264000
*  IF PLISTVER^=''                                                      64310400
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       64356800
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   64403200
*    THEN                                                               64449600
*      DO;                                                              64496000
*                                                                       64542400
*        ZCVAL='';                           /* ERROR FLAG */           64588800
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        64635200
*          THEN                                                         64681600
*            DO;                                                        64728000
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           64774400
*                  ' MUST CONTAIN ONE'||                                64820800
*                  ' (OR MORE) ARGUMENT(S).';                           64867200
*              ANS MSG('?IVTFREE ---> '||ZMS);                          64913600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          64960000
*              ZMACRET=8;                    /* MACRO ERROR */          65006400
*              ZCVAL='NO_ARGUMENT';                                     65052800
*            END;                                                       65099200
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    65145600
*          THEN                                                         65192000
*            DO;                                                        65238400
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            65284800
*                  PLISTVER||                                           65331200
*                  '" "PLISTVER"'||                                     65377600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        65424000
*              ANS MSG('?IVTFREE ---> '||ZMS);                          65470400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          65516800
*              ZMACRET=8;                    /* MACRO ERROR */          65563200
*            END;                                                       65609600
*                                                                       65656000
*        ZC=PLISTVER(1);                                                65702400
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       65748800
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      65795200
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      65841600
*            THEN                                                       65888000
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        65934400
*        END;                                                           65980800
*        IF ZCVAL=''                                                    66027200
*          THEN                                                         66073600
*            DO;                             /* CHECK RANGE LIMITS */   66120000
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           66166400
*              THEN                                                     66212800
*                XPLISTVER=FIXED(PLISTVER(1));                          66259200
*              ELSE                                                     66305600
*                DO;                                                    66352000
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            66398400
*                    PLISTVER(1)||                                      66444800
*                  ', BUT PLISTVER OF '||                               66491200
*                    CHAR(XPLISTVER)||                                  66537600
*                  ' IS REQUIRED.';                                     66584000
*              ANS MSG('?IVTFREE ---> '||ZMS);                          66630400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          66676800
*              ZMACRET=8;                    /* MACRO ERROR */          66723200
*                END;                                                   66769600
*              IF XPLISTVER<0 |              /* LOW LIMIT */            66816000
*                 XPLISTVER>0                /* HIGH LIMIT */           66862400
*                THEN                                                   66908800
*                  ZCVAL='RANGE';            /* RANGE ERROR */          66955200
*            END;                                                       67001600
*        IF ZCVAL^=''                                                   67048000
*          THEN                                                         67094400
*            DO;                             /* RANGE ERROR */          67140800
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      67187200
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            67233600
*                  PLISTVER||                                           67280000
*                  '" THE RANGE IS "0-0"'||                             67326400
*                  ' FOR ARGUMENT 1.';                                  67372800
*              ANS MSG('?IVTFREE ---> '||ZMS);                          67419200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          67465600
*              ZMACRET=8;                    /* MACRO ERROR */          67512000
*            END;                                                       67558400
*      END;                                                             67604800
*                                                                       67651200
*/********************************************************************/ 67697600
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 67744000
*/********************************************************************/ 67790400
*/*PG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67836800
*  XMF='';                                                              67883200
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67929600
*  IF TRANSLATE(MF(1))                                                  67976000
*              = 'E'                         /* CHECK FOR KEYWORD */    68022400
*    THEN                                                               68068800
*      DO;                                                              68115200
*        XMF='E';                            /* SET XVARIABLE */        68161600
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    68208000
*          THEN                                                         68254400
*            DO;                                                        68300800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            68347200
*                  MF||                                                 68393600
*                  '" "MF"'||                                           68440000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       68486400
*              ANS MSG('?IVTFREE ---> '||ZMS);                          68532800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          68579200
*              ZMACRET=8;                    /* MACRO ERROR */          68625600
*            END;                                                       68672000
*/*PG.KXVAR03 NAME, RQD INPUT, POS(2) -XVARIABLE---------------------*/ 68718400
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        68764800
*  IF MF(2)=''                               /* CHECK FOR NULL */       68811200
*   THEN                                                                68857600
*    DO;                                     /* KEY IS REQUIRED */      68904000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      68950400
*        ZMS=' 8,  '||                                                  68996800
*            ' FOR THE "MF" KEY, POSITIONAL'||                          69043200
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            69089600
*        ANS MSG('?IVTFREE ---> '||ZMS);                                69136000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69182400
*        ZMACRET=8;                          /* MACRO ERROR */          69228800
*    END;                                                               69275200
*  ELSE                                                                 69321600
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        69368000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 69414400
*  XMFSCK='';                                /* RESET XVARIABLE */      69460800
*  IF TRANSLATE(MF(3))                                                  69507200
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    69553600
*    THEN                                                               69600000
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        69646400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 69692800
*  IF TRANSLATE(MF(3))                                                  69739200
*              = 'NOCHECK'                   /* CHECK FOR KEYWORD */    69785600
*    THEN                                                               69832000
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        69878400
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 69924800
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        69971200
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    70017600
*    THEN                                                               70064000
*      DO;                                   /* KEYWORD NOT ENTERED */  70110400
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          70156800
*        IF MF(3)^=''                                                   70203200
*          THEN                                                         70249600
*            DO;                                                        70296000
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      70342400
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            70388800
*                  MF||'"'||                                            70435200
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              70481600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    70528000
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        70574400
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        70620800
*              ANS MSG('?IVTFREE ---> '||ZMS);                          70667200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          70713600
*              ZMACRET=8;                    /* MACRO ERROR */          70760000
*            END;                                                       70806400
*      END;                                                             70852800
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 70899200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     70945600
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 70992000
*  IF TRANSLATE(MF(1))                                                  71038400
*              = 'L'                         /* CHECK FOR KEYWORD */    71084800
*    THEN                                                               71131200
*      DO;                                                              71177600
*        XMF='L';                            /* SET XVARIABLE */        71224000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    71270400
*          THEN                                                         71316800
*            DO;                                                        71363200
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            71409600
*                  MF||                                                 71456000
*                  '" "MF"'||                                           71502400
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       71548800
*              ANS MSG('?IVTFREE ---> '||ZMS);                          71595200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          71641600
*              ZMACRET=8;                    /* MACRO ERROR */          71688000
*            END;                                                       71734400
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 71780800
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 71827200
*        IF PLISTVER ^= ''                                              71873600
*          THEN                                                         71920000
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          71966400
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            72012800
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 72059200
*          THEN                                                         72105600
*            DO;                                                        72152000
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          72198400
*                  ' CAN ONLY HAVE'||                                   72244800
*                  ' THE "PLISTVER" KEY'||                              72291200
*                  ' SPECIFIED ON THE INVOCATION.';                     72337600
*              ANS MSG('?IVTFREE ---> '||ZMS);                          72384000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          72430400
*              ZMACRET=8;                    /* MACRO ERROR */          72476800
*            END;                                                       72523200
*/*PG.KXVAR03 NAME, RQD INPUT, POS(2) -XVARIABLE---------------------*/ 72569600
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        72616000
*  IF MF(2)=''                               /* CHECK FOR NULL */       72662400
*   THEN                                                                72708800
*    DO;                                     /* KEY IS REQUIRED */      72755200
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      72801600
*        ZMS=' 8,  '||                                                  72848000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          72894400
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            72940800
*        ANS MSG('?IVTFREE ---> '||ZMS);                                72987200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73033600
*        ZMACRET=8;                          /* MACRO ERROR */          73080000
*    END;                                                               73126400
*  ELSE                                                                 73172800
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        73219200
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 73265600
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        73312000
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          73358400
*  IF MF(3)^=''                              /* CHECK FOR NULL */       73404800
*    THEN                                                               73451200
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        73497600
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 73544000
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        73590400
*     LENGTH(XMFATTR)>60                                                73636800
*    THEN                                                               73683200
*      DO;                                                              73729600
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      73776000
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            73822400
*            MF||                                                       73868800
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       73915200
*            ' LENGTH OF 60 CHARACTERS. ';                              73961600
*        ANS MSG('?IVTFREE ---> '||ZMS);                                74008000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74054400
*        ZMACRET=8;                          /* MACRO ERROR */          74100800
*      END;                                                             74147200
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 74193600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     74240000
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 74286400
*  IF TRANSLATE(MF(1))                                                  74332800
*              = 'M'                         /* CHECK FOR KEYWORD */    74379200
*    THEN                                                               74425600
*      DO;                                                              74472000
*        XMF='M';                            /* SET XVARIABLE */        74518400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    74564800
*          THEN                                                         74611200
*            DO;                                                        74657600
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            74704000
*                  MF||                                                 74750400
*                  '" "MF"'||                                           74796800
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       74843200
*              ANS MSG('?IVTFREE ---> '||ZMS);                          74889600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          74936000
*              ZMACRET=8;                    /* MACRO ERROR */          74982400
*            END;                                                       75028800
*/*PG.KXVAR03 NAME, RQD INPUT, POS(2) -XVARIABLE---------------------*/ 75075200
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        75121600
*  IF MF(2)=''                               /* CHECK FOR NULL */       75168000
*   THEN                                                                75214400
*    DO;                                     /* KEY IS REQUIRED */      75260800
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      75307200
*        ZMS=' 8,  '||                                                  75353600
*            ' FOR THE "MF" KEY, POSITIONAL'||                          75400000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            75446400
*        ANS MSG('?IVTFREE ---> '||ZMS);                                75492800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75539200
*        ZMACRET=8;                          /* MACRO ERROR */          75585600
*    END;                                                               75632000
*  ELSE                                                                 75678400
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        75724800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75771200
*  XMFSCK='';                                /* RESET XVARIABLE */      75817600
*  IF TRANSLATE(MF(3))                                                  75864000
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    75910400
*    THEN                                                               75956800
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        76003200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76049600
*  IF TRANSLATE(MF(3))                                                  76096000
*              = 'NOCHECK'                   /* CHECK FOR KEYWORD */    76142400
*    THEN                                                               76188800
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        76235200
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76281600
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        76328000
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    76374400
*    THEN                                                               76420800
*      DO;                                   /* KEYWORD NOT ENTERED */  76467200
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          76513600
*        IF MF(3)^=''                                                   76560000
*          THEN                                                         76606400
*            DO;                                                        76652800
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      76699200
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            76745600
*                  MF||'"'||                                            76792000
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              76838400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    76884800
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        76931200
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        76977600
*              ANS MSG('?IVTFREE ---> '||ZMS);                          77024000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          77070400
*              ZMACRET=8;                    /* MACRO ERROR */          77116800
*            END;                                                       77163200
*      END;                                                             77209600
*/*PG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 77256000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     77302400
*/*PG.KKCTL06 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 77348800
*  IF MF='MF'                                                           77395200
*    | MF='()'                               /*CHECK ENTRY*/            77441600
*     THEN                                                              77488000
*       DO;                                                             77534400
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            77580800
*                  ' MUST CONTAIN ONE'||                                77627200
*                  ' (OR MORE) ARGUMENT(S).';                           77673600
*              ANS MSG('?IVTFREE ---> '||ZMS);                          77720000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          77766400
*              ZMACRET=8;                    /* MACRO ERROR */          77812800
*       END;                                                            77859200
*  ELSE                                                                 77905600
*    DO;                                                                77952000
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        77998400
*      IF XMF=''                             /* CHECK FOR KEYWORD */    78044800
*        THEN                                                           78091200
*          DO;                               /* KEYWORD NOT ENTERED */  78137600
*            XMF='E';                        /* SET DEFAULT */          78184000
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    78230400
*              THEN                                                     78276800
*                DO;                                                    78323200
*                  ZXMF='';                  /* RESET IN/OUTPUT */      78369600
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            78416000
*                  MF||'"'||                                            78462400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              78508800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    78555200
*                  ' "E",'||                 /* VALID KEYWORD */        78601600
*                  ' "L",'||                 /* VALID KEYWORD */        78648000
*                  ' OR "M".';               /* VALID KEYWORD */        78694400
*              ANS MSG('?IVTFREE ---> '||ZMS);                          78740800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          78787200
*              ZMACRET=8;                    /* MACRO ERROR */          78833600
*                END;                                                   78880000
*          END;                                                         78926400
*    END;                                                               78972800
*/*PG.KKCTL07 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 79019200
*  IF MF(1)=''                               /* CHECK FOR KEYWORD */    79065600
*    THEN                                                               79112000
*      DO;                                                              79158400
*        ZXMF='';                            /* RESET IN/OUTPUT */      79204800
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            79251200
*            ' "MF" KEY AND ITS ARGUMENT'||                             79297600
*            ' ARE REQUIRED.'||                                         79344000
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          79390400
*            ' "E",'||                       /* VALID KEYWORD */        79436800
*            ' "L",'||                       /* VALID KEYWORD */        79483200
*            ' OR "M".';                     /* VALID KEYWORD */        79529600
*        ANS MSG('?IVTFREE ---> '||ZMS);                                79576000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79622400
*        ZMACRET=8;                          /* MACRO ERROR */          79668800
*      END;                                                             79715200
*/********************************************************************/ 79761600
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 79808000
*/********************************************************************/ 79854400
*  IF PLISTVER=''                                                       79900800
*     | PLISTVER(1)='IMPLIED_VERSION'                                   79947200
*    THEN                                                               79993600
*      ZC='ON';                              /* DEFAULT FLAG ON */      80040000
*    ELSE                                                               80086400
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     80132800
*/********************************************************************/ 80179200
*/***PD.P02 DEFAULT ECHO                                             */ 80225600
*/********************************************************************/ 80272000
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 80318400
*  IF XMF^='L'                                                          80364800
*     & XMFSCK='COMPLETE'                                               80411200
*    THEN                                                               80457600
*      DO;                                   /* FULL SYNTAX CHECK */    80504000
*        ANS('/*DEFAULT(S): */')                                        80550400
*           NORESCAN COL(MACLMAR+5);                                    80596800
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 80643200
*  XBUFNUM='';                                                          80689600
*  IF BUFNUM(1)=''                                                      80736000
*    THEN                                                               80782400
*      DO;                                                              80828800
*        XBUFNUM='1';                        /* SET DEFAULT */          80875200
*        ZC='ON';                            /* DEFAULT FLAG ON */      80921600
*      END;                                                             80968000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 81014400
*  IF XBUFNUM^=''                                                       81060800
*    THEN                                                               81107200
*      ANS('/* BUFNUM('||                                               81153600
*          XBUFNUM||                                                    81200000
*          ')*/')                                                       81246400
*          NORESCAN COL(MACLMAR+5);                                     81292800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 81339200
*  IF PLISTVER=''                                                       81385600
*    THEN                                                               81432000
*      ANS('/* PLISTVER('||                                             81478400
*          CHAR(XPLISTVER)||                                            81524800
*          ')*/')                                                       81571200
*          NORESCAN COL(MACLMAR+5);                                     81617600
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     81664000
*    THEN                                                               81710400
*      ANS('/* NONE. */')                                               81756800
*         NORESCAN COL(MACLMAR+5);                                      81803200
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 81849600
*      END;                                                             81896000
*/********************************************************************/ 81942400
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 81988800
*/********************************************************************/ 82035200
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 82081600
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        82128000
*                                                                       82174400
*  IF SYSASCE=''                                                        82220800
*    THEN                                                               82267200
*      DO;                                                              82313600
*        IF SYSSPLV=''                                                  82360000
*          THEN                                                         82406400
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     82452800
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 82499200
*          THEN                                                         82545600
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     82592000
*          ELSE                                                         82638400
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      82684800
*      END;                                                             82731200
*/********************************************************************/ 82777600
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 82824000
*/********************************************************************/ 82870400
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 82916800
*  IF XMF^='L'                                                          82963200
*     & XMFSCK='COMPLETE'                                               83009600
*    THEN                                                               83056000
*      DO;                                   /* FULL SYNTAX CHECK */    83102400
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 83148800
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    83195200
*    THEN                                                               83241600
*      DO;                                                              83288000
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            83334400
*            ' "'||MACLIST||'"'||                                       83380800
*            ' CANNOT BE USED.'||                                       83427200
*            ' NO POSITIONAL ARGUMENTS'||                               83473600
*            ' ARE ALLOWED.';                                           83520000
*        ANS MSG('?IVTFREE ---> '||ZMS);                                83566400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83612800
*        ZMACRET=8;                          /* MACRO ERROR */          83659200
*      END;                                                             83705600
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 83752000
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    83798400
*    THEN                                                               83844800
*      DO;                                                              83891200
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            83937600
*            BUFLIST||                                                  83984000
*            '" "BUFLIST"'||                                            84030400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              84076800
*        ANS MSG('?IVTFREE ---> '||ZMS);                                84123200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84169600
*        ZMACRET=8;                          /* MACRO ERROR */          84216000
*      END;                                                             84262400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 84308800
*  XBUFLIST=BUFLIST(1);                      /* SET XVARIABLE */        84355200
*  IF BUFLIST(1)=''                          /* CHECK FOR NULL */       84401600
*   THEN                                                                84448000
*    DO;                                     /* KEY IS REQUIRED */      84494400
*        ZXBUFLIST='';                       /* RESET IN/OUTPUT */      84540800
*        ZMS=' 8,  '||                                                  84587200
*            ' "BUFLIST" KEY AND ITS ARGUMENT'||                        84633600
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            84680000
*        ANS MSG('?IVTFREE ---> '||ZMS);                                84726400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84772800
*        ZMACRET=8;                          /* MACRO ERROR */          84819200
*    END;                                                               84865600
*  ELSE                                                                 84912000
*    ZXBUFLIST='INPUT';                      /* SET IN/OUTPUT */        84958400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85004800
*  IF BUFNUM='BUFNUM' | BUFNUM='()'          /*CHECK ENTRY*/            85051200
*    THEN                                                               85097600
*      DO;                                                              85144000
*        ZMS=' 8, THE "BUFNUM" KEY'||        /**KOPTP* MSG*/            85190400
*            ' MUST CONTAIN ONE'||                                      85236800
*            ' (OR MORE) ARGUMENT(S).';                                 85283200
*        ANS MSG('?IVTFREE ---> '||ZMS);                                85329600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85376000
*        ZMACRET=8;                          /* MACRO ERROR */          85422400
*      END;                                                             85468800
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    85515200
*    THEN                                                               85561600
*      DO;                                                              85608000
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            85654400
*            BUFNUM||                                                   85700800
*            '" "BUFNUM"'||                                             85747200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85793600
*        ANS MSG('?IVTFREE ---> '||ZMS);                                85840000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85886400
*        ZMACRET=8;                          /* MACRO ERROR */          85932800
*      END;                                                             85979200
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 86025600
*  ZXBUFNUM='INPUT';                         /* SET IN/OUTPUT */        86072000
*  XBUFNUM='1';                              /* SET DEFAULT */          86118400
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       86164800
*    THEN                                                               86211200
*      XBUFNUM=BUFNUM(1);                    /* SET XVARIABLE */        86257600
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 86304000
*      END;                                  /* END COMPLETE CHECKING*/ 86350400
*/********************************************************************/ 86396800
*/***PE.MF00 PARTIAL MACRO SYNTAX CHECKING                           */ 86443200
*/********************************************************************/ 86489600
*/*PE.MF01 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 86536000
*  IF XMF^='L' & XMFSCK='NOCHECK'                                       86582400
*    THEN                                                               86628800
*      DO;                                   /* PARTIAL SYNTAX CHECK */ 86675200
*/*PE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES----------------------*/ 86721600
*/*PE.P01 EXCESSIVE POSITIONALS--------------------------------------*/ 86768000
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    86814400
*    THEN                                                               86860800
*      DO;                                                              86907200
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            86953600
*            ' "'||MACLIST||'"'||                                       87000000
*            ' CANNOT BE USED.'||                                       87046400
*            ' NO POSITIONAL ARGUMENTS'||                               87092800
*            ' ARE ALLOWED.';                                           87139200
*        ANS MSG('?IVTFREE ---> '||ZMS);                                87185600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87232000
*        ZMACRET=8;                          /* MACRO ERROR */          87278400
*      END;                                                             87324800
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87371200
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    87417600
*    THEN                                                               87464000
*      DO;                                                              87510400
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            87556800
*            BUFLIST||                                                  87603200
*            '" "BUFLIST"'||                                            87649600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87696000
*        ANS MSG('?IVTFREE ---> '||ZMS);                                87742400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87788800
*        ZMACRET=8;                          /* MACRO ERROR */          87835200
*      END;                                                             87881600
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 87928000
*  IF BUFLIST(1)^=''                         /* CHECK FOR NULL */       87974400
*    THEN                                                               88020800
*      DO;                                                              88067200
*        XBUFLIST=BUFLIST(1);                /* SET XVARIABLE */        88113600
*        ZXBUFLIST='INPUT';                  /* SET IN/OUTPUT */        88160000
*      END;                                                             88206400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 88252800
*  IF BUFNUM='BUFNUM'                        /* CHECK ENTRY */          88299200
*    THEN                                                               88345600
*      DO;                                                              88392000
*        ZMS=' 8, THE "BUFNUM" KEY'||        /**KOPTP* MSG*/            88438400
*            ' MUST CONTAIN ONE'||                                      88484800
*            ' (OR MORE) ARGUMENT(S).';                                 88531200
*        ANS MSG('?IVTFREE ---> '||ZMS);                                88577600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88624000
*        ZMACRET=8;                          /* MACRO ERROR */          88670400
*      END;                                                             88716800
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    88763200
*    THEN                                                               88809600
*      DO;                                                              88856000
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            88902400
*            BUFNUM||                                                   88948800
*            '" "BUFNUM"'||                                             88995200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89041600
*        ANS MSG('?IVTFREE ---> '||ZMS);                                89088000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89134400
*        ZMACRET=8;                          /* MACRO ERROR */          89180800
*      END;                                                             89227200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 89273600
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       89320000
*    THEN                                                               89366400
*      DO;                                                              89412800
*        XBUFNUM=BUFNUM(1);                  /* SET XVARIABLE */        89459200
*        ZXBUFNUM='INPUT';                   /* SET IN/OUTPUT */        89505600
*      END;                                                             89552000
*/*PE.MF02 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 89598400
*      END;                                  /* END PARTIAL CHECK */    89644800
*/********************************************************************/ 89691200
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 89737600
*/********************************************************************/ 89784000
*  IF ZMACRET = 0                                                       89830400
*    THEN                                                               89876800
*      DO;                                                              89923200
*/********************************************************************/ 89969600
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 90016000
*/********************************************************************/ 90062400
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             90108800
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         90155200
*    THEN                                                               90201600
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          90248000
*    ELSE                                                               90294400
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          90340800
*/********************************************************************/ 90387200
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 90433600
*  IF XMF^='L'                                                          90480000
*    THEN                                                               90526400
*      ANS('DO; /* IVTFREE-PLISTVER */')                                90572800
*          NORESCAN COL(MACLMAR);                                       90619200
*/*PL.LL01 ?IVTFREE MF=L PARAMETER LIST------------------------------*/ 90665600
*  IF XMF='L'                                                           90712000
*    THEN                                                               90758400
*      DO;                                                              90804800
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    90851200
*            '/* ?IVTFREE PARM LIST*/')                                 90897600
*            NORESCAN COL(MACLMAR);                                     90944000
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 90990400
*        ANS('2 '||XMFCTRL||                                            91036800
*            '_XVERSION FIXED(8), '||                                   91083200
*            '/* INPUT XVERSION*/')                                     91129600
*            NORESCAN COL(MACLMAR+2);                                   91176000
*/*PL.LL13  XRSVFREE1 CHAR(03) RESERVED------------------------------*/ 91222400
*        ANS('2 '||XMFCTRL||                                            91268800
*            '_XRSVFREE1 CHAR(03), '||                                  91315200
*            '/* RESERVED */')                                          91361600
*            NORESCAN COL(MACLMAR+2);                                   91408000
*/*PL.LL13  XBUFLIST PTR(31) INPUT NAME------------------------------*/ 91454400
*        ANS('2 '||XMFCTRL||                                            91500800
*            '_XBUFLIST PTR(31), '||                                    91547200
*            '/* '||ZXBUFLIST||' XBUFLIST */')                          91593600
*            NORESCAN COL(MACLMAR+2);                                   91640000
*/*PL.LL13  XBUFNUM FIXED(31) INPUT----------------------------------*/ 91686400
*        ANS('2 '||XMFCTRL||                                            91732800
*            '_XBUFNUM FIXED(31), '||                                   91779200
*            '/* '||ZXBUFNUM||' XBUFNUM */')                            91825600
*            NORESCAN COL(MACLMAR+2);                                   91872000
*/*PL.LL18 ----------------------------------------------------------*/ 91918400
*        ANS('2 * CHAR(0);')                                            91964800
*            NORESCAN COL(MACLMAR+2);                                   92011200
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 92057600
*      END;                                                             92104000
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 92150400
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  92196800
*  DEACT ZPRMLINE;                                                      92243200
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  92289600
*  DEACT ZNDX;                                                          92336000
*  ZNDX=MACINDEX;              /* MACINDEX                          */  92382400
*  DCL XVERSION CHAR;                                                   92428800
*  DEACT XVERSION;                                                      92475200
*/*PL.L02 ?IVTFREE PARAMETER LIST------------------------------------*/ 92521600
*  IF XMF^='L'                                                          92568000
*    THEN                                                               92614400
*      DO;                                                              92660800
*/*PL.L04 ?IVTFREE PARAMETER LIST------------------------------------*/ 92707200
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            92753600
*                 ' /* ?IVTFREE PARM LIST*/';                           92800000
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 92846400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             92892800
*                 '_XVERSION FIXED(8), '||                              92939200
*                 '/* INPUT XVERSION*/';                                92985600
*/*PL.L08  XRSVFREE1 CHAR(03) RESERVED-------------------------------*/ 93032000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             93078400
*                 '_XRSVFREE1 CHAR(03), '||                             93124800
*                 '/* RESERVED */';                                     93171200
*/*PL.L08  XBUFLIST PTR(31) INPUT NAME-------------------------------*/ 93217600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             93264000
*                 '_XBUFLIST PTR(31), '||                               93310400
*                 '/* '||ZXBUFLIST||' XBUFLIST */';                     93356800
*/*PL.L08  XBUFNUM FIXED(31) INPUT-----------------------------------*/ 93403200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             93449600
*                 '_XBUFNUM FIXED(31), '||                              93496000
*                 '/* '||ZXBUFNUM||' XBUFNUM */';                       93542400
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 93588800
*        ZPRMNUM=ZPRMNUM+1;                                             93635200
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       93681600
*        IF XPLISTVER^=0                                                93728000
*          THEN                                                         93774400
*            DO;                                                        93820800
*              ZPRMNUM=ZPRMNUM+1;                                       93867200
*              ZPRM(ZPRMNUM)=                                           93913600
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       93960000
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        94006400
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            94052800
*               ' IS LONG ENOUGH */';                                   94099200
*            END;                                                       94145600
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 94192000
*        ZPLLEN=12;                                                     94238400
*        IF ZPRMMAX<ZPLLEN                                              94284800
*           & XMF^='E'                                                  94331200
*           & XMF^='M'                                                  94377600
*          THEN                                                         94424000
*            ZPRMMAX=ZPLLEN;                                            94470400
*/*PL.L13 -----------------------------------------------------------*/ 94516800
*      END;                                                             94563200
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 94609600
*  IF XMF^='L'                                                          94656000
*    THEN                                                               94702400
*      DO;                                                              94748800
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 94795200
*  IF XMFSCK='COMPLETE'                                                 94841600
*    THEN                                                               94888000
*            ANS('#Z'||ZNDX||'=''''B;'||                                94934400
*                '/* CLEAR PARAMETER AREA */')                          94980800
*                NORESCAN COL(MACLMAR);                                 95027200
*/*PI.L23 XBUFLIST NAME----------------------------------------------*/ 95073600
*        IF ZXBUFLIST^=''                                               95120000
*          THEN                                                         95166400
*            ANS('#Z'||ZNDX||'_XBUFLIST='||                             95212800
*                'ADDR('||XBUFLIST||');'||                              95259200
*                '/* XBUFLIST NAME */')                                 95305600
*                NORESCAN COL(MACLMAR);                                 95352000
*/*PI.L17 XBUFNUM FIXED(31)------------------------------------------*/ 95398400
*        IF ZXBUFNUM='INPUT' |                                          95444800
*           ZXBUFNUM='INOUT'                                            95491200
*          THEN                                                         95537600
*            ANS('#Z'||ZNDX||'_XBUFNUM='||                              95584000
*                XBUFNUM||';'||                                         95630400
*                '/* XBUFNUM FIXED(31) */')                             95676800
*                NORESCAN COL(MACLMAR);                                 95723200
*/*PI.L29 NOT MF=M MACRO FORM----------------------------------------*/ 95769600
*        IF XMF^='M'                                                    95816000
*          THEN                                                         95862400
*            DO;                                                        95908800
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 95955200
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           96001600
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       96048000
*                  '/* PARAMETER LIST */')                              96094400
*                  NORESCAN COL(MACLMAR);                               96140800
*              IF SYSASCE^='P'                                          96187200
*                THEN                                                   96233600
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              96280000
*                      '/* PARAMETER LIST AR */')                       96326400
*                      NORESCAN COL(MACLMAR);                           96372800
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  96419200
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  96465600
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         96512000
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       96558400
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 96604800
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         96651200
*/*PO.L11 END OF FUNCTION INVOCATION---------------------------------*/ 96697600
*            END;                                                       96744000
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 96790400
*      END;                                                             96836800
*/*PO.L13 IVTFREE USAGE INDICATOR------------------------------------*/ 96883200
*  ZIVTFREE='YES';                           /* SET IVTFREE USED */     96929600
*/*PO.L15 END OF EXECUTABLE IVTFREE-PLISTVER MACRO-------------------*/ 96976000
*  IF XMF^='L'                                                          97022400
*    THEN                                                               97068800
*      ANS('END; /* IVTFREE-PLISTVER */')                               97115200
*          NORESCAN COL(MACLMAR);                                       97161600
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 97208000
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              97254400
*/*PO.L17 END OF IVTFREE MACRO---------------------------------------*/ 97300800
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        97347200
*  ANS(' ') NORESCAN COL(MACLMAR);                                      97393600
*/*******************************************************************/  97440000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  97486400
*/*******************************************************************/  97532800
*      END;                                                             97579200
*/*******************************************************************/  97625600
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  97672000
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  97718400
*/*******************************************************************/  97764800
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  97811200
*    THEN                                                               97857600
*      DO;                                                              97904000
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       97950400
*                                      DOUBLEWORD MULTIPLES        */   97996800
*/*******************************************************************/  98043200
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  98089600
*/*******************************************************************/  98136000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     98182400
*          THEN                                                         98228800
*            DO;                                                        98275200
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  98321600
*                THEN                                                   98368000
*                  DO;                                                  98414400
*                    ANS('?EPILOG                                       98460800
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        98507200
*                    EHALIST=EHALIST||',AMG,';                          98553600
*                  END;                                                 98600000
*            END;                                                       98646400
*/*******************************************************************/  98692800
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  98739200
*/*******************************************************************/  98785600
*        IF XMF ^= 'M' & XMF ^= 'E'                                     98832000
*          THEN                                                         98878400
*            DO;                                                        98924800
*              IF ZPRMMAX>EHAMAXLEN                                     98971200
*                THEN                                                   99017600
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  99064000
*            END;                                                       99110400
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 99156800
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   99203200
*              COL(MACLMAR);                                            99249600
*        END;                                                           99296000
*      END;                                                             99342400
*/*-----------------------------------------------------------------*/  99388800
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  99435200
*/*        BY ?EPILOG                                               */  99481600
*/*-----------------------------------------------------------------*/  99528000
*        IF INDEX(EHAREGS,'01P')=0                                      99574400
*          THEN                                                         99620800
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  99667200
*        IF INDEX(EHAREGS,'15F')=0                                      99713600
*          THEN                                                         99760000
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  99806400
*  RETURN CODE(ZMACRET);                                                99852800
*%END IVTFREE;                                                          99899200
