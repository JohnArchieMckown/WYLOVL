*                                                                       00050000
* %DCL CSVDLAA_INCLUDED CHAR EXT;                                       00100000
* %DEACTIVATE CSVDLAA_INCLUDED;                                         00150000
* %IF CSVDLAA_INCLUDED = '' %THEN                                       00200000
* %DO;                                                                  00250000
*/* Macro made bi-lingual on 97258. CBGEN compile date 97252         */ 00300000
*% /*                                                                   00350000
         MACRO                                                          00400000
         CSVDLAA &DSECT=YES,&LIST=YES,&TITLE=YES,&DLAAHDR=YES,         *00450000
               &DLAALS=COND,&DLAADS=COND,&DLAAU=COND,&DLAAJA=COND       00500000
         GBLC  &CSVDLAA_INCLUDED                                        00550000
         GBLC  &ZCBPRINT                                                00600000
&CSVDLAA_INCLUDED SETC 'YES'                                            00650000
         AIF   ('&LIST' EQ 'NONE').P0                                   00666600
         AIF   ('&TITLE' EQ 'NO').P5                                    00683200
 TITLE   'CSVDLAA  - Dynamic Lnklst Answer Area                     '   00700000
.P5      ANOP                                                           00725000
**/ CSVDLAA_1:;                                                         00750000
*/* START OF SPECIFICATIONS ******************************************* 00800000
*                                                                       00850000
*  **PROPRIETARY_STATEMENT********************************************  00900000
***01* PROPRIETARY STATEMENT=                                        *  00950000
*                                                                    *  01000000
*                                                                    *  01050000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  01100000
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *  01150000
*   5647-A01 (C) COPYRIGHT IBM CORP. 1997,1998                       *  01200000
*                                                                    *  01300000
*   STATUS= HBB6606                                                  *  01350000
*                                                                    *  01400000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  01450000
*                                                                       01500000
*01* DESCRIPTIVE NAME:  Dynamic Lnklst Answer Area                      01550000
*02*  ACRONYM:  DLAA                                                    01600000
*                                                                       01650000
*01* MACRO NAME:  CSVDLAA                                               01700000
*                                                                       01750000
*01* EXTERNAL CLASSIFICATION: GUPI                                      01800000
*01* END OF EXTERNAL CLASSIFICATION:                                    01850000
*                                                                       01900000
*01* DSECT NAME:                                                        01950000
*     DLAAHDR                                                           02000000
*     DLAALS                                                            02050000
*     DLAADS                                                            02100000
*     DLAAU                                                             02150000
*     DLAAJA                                                            02200000
*                                                                       02250000
*01* COMPONENT:  Contents Supervision (SC1CJ)                           02300000
*                                                                       02350000
*01* EYE-CATCHER:  NONE                                                 02400000
*                                                                       02450000
*01* STORAGE ATTRIBUTES:                                                02500000
*02*  SUBPOOL:  Caller-supplied                                         02550000
*02*  KEY:  Caller-supplied                                             02600000
*02*  RESIDENCY:  Caller-supplied                                       02650000
*                                                                       02700000
*01* SIZE:  Variable                                                    02750000
*                DLAAHDR -- X'0010' bytes                               02800000
*                DLAALS  -- X'002C' bytes                               02850000
*                DLAADS  -- X'003C' bytes                               02900000
*                DLAAU   -- X'0010' bytes                               02950000
*                DLAAJA  -- X'0020' bytes                               03000000
*                                                                       03006200
*01* CONTROL BLOCK CHANGES:                                             03012400
*02*  CSVDLAA                                                           03018600
*02*   5.3                                                              03024800
*03*    New                                                             03031000
*03*    Migration Considerations: NONE                                  03037200
*01* END CONTROL BLOCK CHANGES                                          03043400
*                                                                       03050000
*01* CREATED BY:                                                        03100000
*     Caller and passed as parameter on ANSAREA keyword                 03150000
*      on CSVDYNL LIST                                                  03200000
*                                                                       03250000
*01* POINTED TO BY:                                                     03300000
*     CSVDYNL parameter list                                            03350000
*                                                                       03400000
*01* SERIALIZATION:                                                     03450000
*     None required                                                     03500000
*                                                                       03550000
*01* FUNCTION:                                                          03600000
*02* Maps the data returned by the CSVDYNL macro, LIST request.         03650000
*                                                                       03700000
*02* The returned information consists of a header (DLAAHDR)            03750000
*    which indicates how many LNKLST set entries (DLAALS),              03800000
*    or jobname/asid entries (DLAAJA) entries, follow.                  03850000
*                                                                       03900000
*02* If you request Search=BYNAME you get DLAALS entries.               03950000
*    DLAAHFIRSTLSADDR is a pointer to the first DLAALS, and each        04000000
*    DLAALS points to the next (DLAALSNEXTADDR). The count provided in  04050000
*    header field DLAAH#LS should be used to determine the number of    04100000
*    exit entries to examine.                                           04150000
*                                                                       04200000
*02* Each DLAALS indicates how many data set entries (DLAADS)           04250000
*    and user entries (DLAAU) are                                       04300000
*    associated with it. DLAALSFIRSTDSADDR is a pointer to the first    04350000
*    DLAADS, and each DLAADS points to the next (DLAADSNEXTADDR). The   04400000
*    count provided in LNKLST set entry field DLAALS#DS should be used  04450000
*    to determine the number of data set entries to examine.            04500000
*    DLAALSFIRSTUADDR is a pointer to the first                         04550000
*    DLAAU, and each DLAAU points to the next (DLAAUNEXTADDR). The      04600000
*    count provided in LNKLST set entry field DLAALS#U should be used   04650000
*    to determine the number of data set entries to examine.            04700000
*                                                                       04750000
*02* If you request Search=BYJOBASID you get DLAAJS entries.            04800000
*    DLAAHFIRSTJAADDR is a pointer to the first DLAAJA, and each DLAAJA 04850000
*    points to the next (DLAAJANEXTADDR). The count provided in header  04900000
*    field DLAAH#JA should be used to determine the number of           04950000
*    exit entries to examine.                                           05000000
*                                                                       05050000
*                                                                       05100000
*01* METHOD OF ACCESS:                                                  05150000
*02*  ASM:                                                              05200000
*      CSVDLAA                                                          05250000
*           DSECT=YES|NO  -- Request DSECT definition                   05300000
*           DLAAHDR=YES|NO|COND -- Request Header record mapping        05350000
*                            USING on DLAAHDR                           05400000
*           DLAALS=YES|NO|COND -- Request exit record mapping           05450000
*                            USING on DLAALS                            05500000
*           DLAADS=YES|NO|COND -- Request data set record mapping       05550000
*                            USING on DLAADS                            05600000
*           DLAAU=YES|NO|COND -- Request data set record mapping        05650000
*                            USING on DLAAU                             05700000
*     Default: DSECT=YES,DLAAHDR=YES,DLAALS=COND,DLAADS=COND,DLAAU=COND 05750000
*     Notes: name=YES  => expand                                        05800000
*            name=NO   => do not expand                                 05850000
*            name=COND => expand only if DSECT=YES                      05900000
*                                                                       05950000
*02*  PL/AS:                                                            06000000
*      %INCLUDE SYSLIB(CSVDLAA)                                         06050000
*                                                                       06100000
*01* DELETED BY:  Caller                                                06150000
*                                                                       06200000
*01* FREQUENCY:  Created for response to CSVDYNL LIST                   06250000
*                                                                       06300000
*01* DEPENDENCIES:  None                                                06350000
*                                                                       06400000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     06450000
*                                                                       06500000
*01* CHANGE ACTIVITY:                                                   06550000
*   $L0=DYNLLCBG ,JBB6602,941231,PD00XB: Dynamic LNKLST                 06600000
*   $L1=DYNLLCSV ,JBB6602,941231,PD00XB: Dynamic LNKLST                 06650000
*   $P1=PUX0531V ,HBB6605,970915,PD00XB: Seq# comment                   06675000
*                                                                       06700000
* END OF SPECIFICATIONS *********************************************/  06750000
*% /*                                                                   06800000
.P0      ANOP                                                           06825000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 06850000
         AIF   ('&LIST' EQ 'YES').P2                                    06900000
.P1      ANOP                                                           06950000
         PUSH  PRINT                                                    07000000
         PRINT OFF                                                      07050000
.P2      ANOP                                                           07100000
         AIF   ('&DLAAHDR' EQ 'NO').L0002                               07150000
         AIF   ('&DSECT' EQ 'YES').L0003                                07200000
         AIF   ('&DLAAHDR' NE 'YES').L0002                              07250000
DLAAHDR  DS    0F        Header section                                 07300000
         AGO   .L0004                                                   07350000
.L0003   ANOP                                                           07400000
DLAAHDR  DSECT           Header section                                 07450000
.L0004   ANOP                                                           07500000
DLAAH#LS DS    1FL4      Number of DLAALS entries which follow          07550000
         ORG   DLAAH#LS                                                 07600000
DLAAH#JA DS    1FL4      Number of DLAAJA entries which follow, when   *07650000
                         ByAsidJobname is requested                     07700000
DLAAH#REM DS   1FL4      Number of DLAALS or DLAAJA entries which were *07750000
                         not returned because of insufficient space     07800000
DLAAHTLEN DS   1FL4      Total length of answer area needed to contain *07850000
                         all the requested information. This includes  *07900000
                         the area for the records that were returned   *07950000
                         on this call.                                  08000000
DLAAHFIRSTLSADDR DS 1AL4 Address of first DLAALS                        08025000
         ORG   DLAAHFIRSTLSADDR                                         08050000
DLAAHFIRSTLS@ DS 1AL4    Same as FIRSTLSADDR                            08075000
         ORG   DLAAHFIRSTLS@                                            08100000
DLAAHFIRSTJAADDR DS 1AL4 Address of first DLAAJA                        08125000
         ORG   DLAAHFIRSTJAADDR                                         08150000
DLAAHFIRSTJA@ DS 1AL4    Same as FIRSTJAADDR                            08175000
DLAAHDR_LEN EQU *-DLAAHDR                                               08200000
.L0002   ANOP                                                           08250000
         AIF   ('&DLAALS' EQ 'NO').L0005                                08300000
         AIF   ('&DSECT' EQ 'YES').L0006                                08350000
         AIF   ('&DLAALS' NE 'YES').L0005                               08400000
DLAALS   DS    0F        DLAALS Record data format                      08450000
         AGO   .L0007                                                   08500000
.L0006   ANOP                                                           08550000
DLAALS   DSECT           DLAALS Record data format                      08600000
.L0007   ANOP                                                           08650000
DLAALSNEXTADDR DS 1AL4   Address of next DLAALS. DLAAH#LS must be used *08700000
                         to determine how far along this chain to go.   08750000
         ORG   DLAALSNEXTADDR                                           08766600
DLAALSNEXT@ DS 1AL4      Same as NEXTADDR                               08783200
DLAALSFIRSTDSADDR DS 1AL4 Address of first DLAADS for this DLAALS       08799800
         ORG   DLAALSFIRSTDSADDR                                        08816400
DLAALSFIRSTDS@ DS 1AL4   Same as FirstDSADDR                            08833000
DLAALSFIRSTUADDR DS 1AL4 Address of first DLAAU for this DLAALS         08849600
         ORG   DLAALSFIRSTUADDR                                         08866200
DLAALSFIRSTU@ DS 1AL4    Same as FirstUADDR                             08883100
DLAALSNAME DS  1CL0016   Name of LNKLST set                             08900000
DLAALSFLAGS DS 1BL1      Flags                                          08950000
         ORG   DLAALSFLAGS                                              09000000
DLAALSCURRENT EQU X'80'  This is the current LNKLST                     09050000
DLAALSWASCURRENT EQU X'40' This used to be a current LNKLST and is     *09100000
                         still in use                                   09150000
DLAALSINUSEBYLLA EQU X'20' LLA is monitoring the LNKLST using this     *09200000
                         LNKLST set                                     09250000
         ORG   DLAALSFLAGS+X'00000001'                                  09300000
         DS    1CL0003   UNUSED                                         09350000
DLAALSLNKLSTSEQ# DS 1FL4 The Seq# of this LNKLST set. Only valid when  *09400000
                         this LNKLST set is active. The Seq# remains   *09440000
                         unchanged when an in-use LNKLST set is        *09480000
                         activated. A larger Seq# does not necessarily *09520000
                         indicate a more-current activation.            09560000
         DS    1CL0004   Unused                                         09600000
DLAALS#DS DS   1FL2      Number of DLAADS entries associated with this *09650000
                         LNKLST set                                     09700000
DLAALS#U DS    1FL2      Number of DLAAU entries associated with this  *09750000
                         LNKLST set                                     09800000
DLAALS_LEN EQU *-DLAALS                                                 09850000
.L0005   ANOP                                                           09900000
         AIF   ('&DLAADS' EQ 'NO').L0008                                09950000
         AIF   ('&DSECT' EQ 'YES').L0009                                10000000
         AIF   ('&DLAADS' NE 'YES').L0008                               10050000
DLAADS   DS    0F        DLAADS Record data format                      10100000
         AGO   .L000A                                                   10150000
.L0009   ANOP                                                           10200000
DLAADS   DSECT           DLAADS Record data format                      10250000
.L000A   ANOP                                                           10300000
DLAADSNEXTADDR DS 1AL4   Address of next DLAADS. DLAALS#DS must be     *10350000
                         used to determine how far along this chain to *10400000
                         go.                                            10450000
         ORG   DLAADSNEXTADDR                                           10466600
DLAADSNEXT@ DS 1AL4      Same as NEXTADDR                               10483200
DLAADSFLAGS DS 1BL1      Flags                                          10500000
         ORG   DLAADSFLAGS                                              10550000
DLAADSAPF EQU  X'80'     APF-authorized. Represents status as of last  *10600000
                         allocation                                     10650000
DLAADSAPFNOTAVAILABLE EQU X'40' APF status is not available. Either    *10700000
                         the data set was not successfully allocated,  *10750000
                         or the LNKLST set itself is not valid.         10800000
DLAADSSMSMANAGED EQU X'20' The data set is SMS-managed. Represents     *10808300
                         status as of last allocation.                  10816600
DLAADSSMSNOTAVAILABLE EQU X'10' SMS status is not available. Either    *10824900
                         the data set was not successfully allocated,  *10833200
                         or the LNKLST set itself is not valid.         10841500
         ORG   DLAADSFLAGS+X'00000001'                                  10850000
         DS    1CL0003   UNUSED                                         10900000
DLAADSVOLID DS 1CL0006   Volume ID. Represents status as of last       *10950000
                         allocation                                     11000000
DLAADSNAMELEN DS 1FL2    Length of name                                 11050000
DLAADSNAME DS  1CL0044   Data set name. It will only occupy as much    *11100000
                         space as indicated by DlaadsNameLen            11150000
DLAADS_LEN EQU *-DLAADS                                                 11200000
.L0008   ANOP                                                           11250000
         AIF   ('&DLAAU' EQ 'NO').L000B                                 11300000
         AIF   ('&DSECT' EQ 'YES').L000C                                11350000
         AIF   ('&DLAAU' NE 'YES').L000B                                11400000
DLAAU    DS    0F        DLAAU Record data format                       11450000
         AGO   .L000D                                                   11500000
.L000C   ANOP                                                           11550000
DLAAU    DSECT           DLAAU Record data format                       11600000
.L000D   ANOP                                                           11650000
DLAAUNEXTADDR DS 1AL4    Address of next DLAAU. DLAALS#U must be used  *11700000
                         to determine how far along this chain to go.   11750000
         ORG   DLAAUNEXTADDR                                            11766600
DLAAUNEXT@ DS  1AL4      Same as NEXTADDR                               11783200
DLAAUJOBNAME DS 1CL0008  Job name using this LNKLST set                 11800000
DLAAUASID DS   1FL2      ASID of job                                    11850000
         DS    1CL0002   UNUSED                                         11900000
DLAAU_LEN EQU  *-DLAAU                                                  11950000
.L000B   ANOP                                                           12000000
         AIF   ('&DLAAJA' EQ 'NO').L000E                                12050000
         AIF   ('&DSECT' EQ 'YES').L000F                                12100000
         AIF   ('&DLAAJA' NE 'YES').L000E                               12150000
DLAAJA   DS    0F        DLAAJA Record data format                      12200000
         AGO   .L0010                                                   12250000
.L000F   ANOP                                                           12300000
DLAAJA   DSECT           DLAAJA Record data format                      12350000
.L0010   ANOP                                                           12400000
DLAAJANEXTADDR DS 1AL4   Address of next DLAAJA. DLAALS#JA must be     *12450000
                         used to determine how far along this chain to *12500000
                         go.                                            12550000
         ORG   DLAAJANEXTADDR                                           12566600
DLAAJANEXT@ DS 1AL4      Same as NEXTADDR                               12583200
DLAAJAJOBNAME DS 1CL0008 Job name                                       12600000
DLAAJAASID DS  1FL2      ASID of job                                    12650000
         DS    1CL0002   UNUSED                                         12700000
DLAAJALSNAME DS 1CL0016  LNKLST set name                                12750000
*                                                                       12800000
*    *****************************************************************  12850000
*    *                                                               *  12900000
*    * Format constants returned for CSVDYNL REQUEST(QUERYDYN)       *  12950000
*    *                                                               *  13000000
*    *****************************************************************  13050000
*                                                                       13100000
*                                                                       13150000
CSVDYNLDYNNOTAVAILABLE EQU 0                                            13200000
CSVDYNLDYNAVAILABLE EQU 1                                               13250000
*                                                                       13300000
*    *****************************************************************  13350000
*    *                                                               *  13400000
*    * Return Code / Reason code constants from CsvDynl. It is       *  13450000
*    * guaranteed that no reason code will be reused (i.e., the same *  13500000
*    * reason code will not be used for more than one return code).  *  13550000
*    * Also note carefully that bits 0-15 of the reason code may     *  13600000
*    * contain component-diagnostic data and must not be assumed to  *  13650000
*    * be 0.                                                         *  13700000
*    *                                                               *  13750000
*    *****************************************************************  13800000
*                                                                       13850000
*                                                                       13900000
CSVDYNLRSNCODEMASK EQU X'0000FFFF' Use this mask to isolate the non    *13950000
                         component-diagnostic portion of the reason    *14000000
                         code.                                          14050000
CSVDYNLRC_OK EQU 0       Return code 0, success                         14100000
CSVDYNLRC_WARN EQU 4     Return code 4, warning                         14150000
*                                                                       14200000
*    *****************************************************************  14250000
*    *                                                               *  14300000
*    * Reason codes for RC=4                                            14350000
*    *                                                               *  14400000
*    *****************************************************************  14450000
*                                                                       14500000
*                                                                       14550000
CSVDYNLRSNROUTINENOTFOUND EQU X'00000402' For TEST request, the        *14600000
                         routine was not found                          14650000
CSVDYNLRSNNOTALLDATARETURNED EQU X'00000403' For LIST, the provided    *14700000
                         output area was not large enough to contain   *14750000
                         all the data.                                  14800000
CSVDYNLRSNNOMATCHINGJOB EQU X'00000406' For UPDATE request, no         *14850000
                         matching job or ASID was found.                14900000
CSVDYNLRC_INVPARM EQU 8  Return code 8, invalid parameter               15050000
*                                                                       15100000
*    *****************************************************************  15150000
*    *                                                               *  15200000
*    * Reason codes for RC=8                                            15250000
*    *                                                               *  15300000
*    *****************************************************************  15350000
*                                                                       15400000
*                                                                       15450000
CSVDYNLRSNBADPARMLIST EQU X'00000801' Error while accessing parameter  *15500000
                         list                                           15550000
CSVDYNLRSNSRBMODE EQU X'00000802' Caller was in SRB mode                15600000
CSVDYNLRSNNOTENABLED EQU X'00000803' Caller was not enabled             15650000
CSVDYNLRSNNOTAUTHORIZED EQU X'00000804' Caller was not authorized       15700000
CSVDYNLRSNHOMENOTPRIMARY EQU X'00000805' HASN ^= PASN                   15750000
CSVDYNLRSNBADANSAREAALET EQU X'00000806' ALET of ANSAREA was not       *15800000
                         acceptable                                     15850000
CSVDYNLRSNBADANSAREA EQU X'00000807' Error while accessing ANSAREA      15900000
CSVDYNLRSNBADANSLEN EQU X'00000808' ANSLEN was not at least as long as *15950000
                         DLAAHDR mapped by CSVDLAA.                     16000000
CSVDYNLRSNBADREQUESTTYPE EQU X'00000809' Parameter list contains an    *16050000
                         incorrect request type. Possible overlay.      16100000
CSVDYNLRSNBADESTAEX EQU X'0000080A' ESTAEX recovery could not be       *16150000
                         established. Possibly the caller had an EUT   *16200000
                         FRR.                                           16250000
CSVDYNLRSNRESERVEDNOT0 EQU X'0000080B' Parameter list contains a non-0 *16300000
                         value in a reserved field. Possible overlay.   16350000
CSVDYNLRSNBADPARMLISTALET EQU X'0000080D' ALET of parameter list was   *16400000
                         not acceptable.                                16450000
CSVDYNLRSNBADVERSION EQU X'0000080E' Parameter list contains an        *16500000
                         incorrect version number. Possible overlay.    16550000
CSVDYNLRSNLOCKED EQU X'0000080F' Caller held a system lock.             16600000
CSVDYNLRSNBADDSNAMEAREA EQU X'00000815' Error while accessing area     *16650000
                         containing DSNAME                              16700000
CSVDYNLRSNBADAFTERDSNAMEAREA EQU X'00000816' Error while accessing     *16750000
                         area containing AFTERDSNAME                    16800000
CSVDYNLRSNBADOPEN EQU X'00000818' Unable to open supplied data set.     16850000
CSVDYNLRSNLNKLSTSETNOTFOUND EQU X'00000819' LNKLST set does not exist   16900000
CSVDYNLRSNDATASETNOTFOUND EQU X'0000081C' For DELETE, data set was not *16950000
                         in the LNKLST set. For ADD, "after" data set  *17000000
                         was not in the LNKLST set.                     17050000
CSVDYNLRSNBADDSNAMEALET EQU X'00000820' ALET of area containing DSNAME *17100000
                         is not acceptable                              17150000
CSVDYNLRSNBADAFTERDSNAMEALET EQU X'00000821' ALET of area containing   *17200000
                         AFTERDSNAME is not acceptable                  17250000
CSVDYNLRSNBADLNKLSTNAME EQU X'00000822' LNKLST set name begins with    *17300000
                         blank or hex zero                              17350000
CSVDYNLRSNBADDSNAME EQU X'00000823' DSNAME begins with blank or hex    *17400000
                         zero                                           17450000
CSVDYNLRSNBADAFTERDSNAME EQU X'00000824' AFTERDSNAME begins with blank *17500000
                         or hex zero                                    17550000
CSVDYNLRSNBADALLOC EQU X'00000829' Unable to allocate requested data   *17600000
                         set                                            17650000
CSVDYNLRSNFUNCTIONNOTAVAILABLEERROR EQU X'0000082B' Function requested *17700000
                         when dynamic allocation is not allowed by the *17750000
                         system (or function requested during NIP).     17800000
CSVDYNLRSNRESERVEDNAME EQU X'00000831' Reserved name "CURRENT" or      *17850000
                         "IPL" was used on a DEFINE, ADD, or DELETE    *17900000
                         request.                                       17950000
CSVDYNLRSNNOJOBASID EQU X'00000832' The job name was blank (or null)   *18000000
                         and the ASID was 0 for UPDATE or LIST          18050000
CSVDYNLRSNADDSYSDSN EQU X'00000833' A request was made to add the      *18100000
                         LINKLIB, MIGLIB, or CSSLIB data set, or to    *18150000
                         add after the LINKLIB, MIGLIB, or CSSLIB data *18200000
                         set.                                           18250000
CSVDYNLRSNDELETESYSDSN EQU X'00000834' A request was made to delete    *18300000
                         the LINKLIB, MIGLIB, or CSSLIB data set.       18350000
CSVDYNLRSNNOCOPYFROM EQU X'00000835' Could not locate the COPYFROM     *18400000
                         LNKLST set.                                    18450000
CSVDYNLRSNALREADYEXISTS EQU X'00000836' For DEFINE request, LNKLST set *18500000
                         already exists. For ADD request, data set was *18550000
                         already associated with this LNKLST set.       18600000
CSVDYNLRSNNOMODNAME EQU X'00000837' Module name was null                18650000
CSVDYNLRSNCONCATFULL EQU X'00000839' Attempt to ADD a data set but the *18700000
                         concatenation is full.                         18750000
CSVDYNLRSNBADPROBDSNAMEAREA EQU X'0000083A' Error while accessing area *18800000
                         to contain probdsname                          18850000
CSVDYNLRSNBADPROBDSNAMEALET EQU X'0000083B' ALET of area to contain    *18900000
                         PROBDSNAME is not acceptable                   18950000
CSVDYNLRSNNOTPARTITIONED EQU X'0000083C' The data set is not           *19000000
                         partitioned.                                   19050000
CSVDYNLRSNBADVOLID EQU X'0000083D' The provided VolID does not match   *19100000
                         the one in the catalog.                        19150000
CSVDYNLRSNMULTIVOLUME EQU X'0000083E' IEFDDSRV's output was not as     *19200000
                         expected. The data set is multi-volume.        19250000
CSVDYNLRSNMISSINGSYSDSN EQU X'0000083F' The LNKLST set being tested    *19300000
                         does not contain at least one of              *19350000
                         SYS1.LINKLIB, SYS1.MIGLIB, and SYS1.CSSLIB.   *19400000
                         This should only occur if you used the SYSLIB *19450000
                         statement of PROGxx.                           19500000
CSVDYNLRSNUNDEFINECURRENT EQU X'00000840' An attempt was made to       *19600000
                         UNDEFINE the current LNKLST set.               19650000
CSVDYNLRSNBADFOUNDDSNAMEAREA EQU X'00000841' Error while accessing     *19700000
                         area to contain FoundDsname                    19750000
CSVDYNLRSNBADFOUNDDSNAMEALET EQU X'00000842' ALET of area to contain   *19800000
                         FoundDsname is not acceptable                  19850000
CSVDYNLRSNBADSMS EQU X'00000843' The SMS status of the data set has    *19860000
                         changed. Either it is now SMS-managed but had *19870000
                         not been, or it is not SMS-managed but had    *19880000
                         been.                                          19890000
CSVDYNLRC_ENV EQU 12     Return code 12, environmental error            19900000
*                                                                       19950000
*    *****************************************************************  20000000
*    *                                                               *  20050000
*    * Reason codes for RC=12                                           20100000
*    *                                                               *  20150000
*    *****************************************************************  20200000
*                                                                       20250000
*                                                                       20300000
CSVDYNLRSNFUNCTIONNOTAVAILABLE EQU X'00000C01'                          20350000
CSVDYNLRSNNOSTORAGE EQU X'00000C02' Storage was not available for a    *20400000
                         system control block                           20450000
CSVDYNLRSNCHANGEINUSE EQU X'00000C03' An attempt was made to change    *20500000
                         (ADD or DELETE) an in-use LNKLST set.          20550000
CSVDYNLRSNUNDEFINEUSERS EQU X'00000C04' An attempt was made to         *20600000
                         UNDEFINE a LNKLST set that is still in use.   *20650000
                         The request is denied.                         20700000
CSVDYNLRSNUNDEFINELLA EQU X'00000C06' An attempt was made to UNDEFINE  *20900000
                         a LNKLST set that is being used by LLA to     *20950000
                         manage the LNKLST. The request is denied.      21000000
CSVDYNLRC_COMPERROR EQU 16 Unknown, unexpected error                    21050000
*                                                                       21100000
*    *****************************************************************  21150000
*    *                                                               *  21200000
*    * Reason codes for RC=16                                           21250000
*    *                                                               *  21300000
*    *****************************************************************  21350000
*                                                                       21400000
*                                    *                                  21450000
*                                                                       21500000
CSVDYNLRSNCOMPERROR EQU X'00001001' System error encountered by        *21550000
                         component.                                     21600000
DLAAJA_LEN EQU *-DLAAJA                                                 21650000
.L000E   ANOP                                                           21700000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 21750000
         AIF   ('&LIST' EQ 'YES').P4                                    21800000
.P3      ANOP                                                           21850000
         POP   PRINT                                                    21900000
.P4      ANOP                                                           21950000
.P_EXIT  ANOP                                                           22000000
         MEND                                                           22050000
**/ CSVDLAA_2:;                                                         22100000
* %CSVDLAA_INCLUDED = 'YES';                                            22150000
* %DCL ZCBPRINT CHAR EXT;                                               22200000
* %DEACTIVATE ZCBPRINT;                                                 22250000
* %DCL CSVDLAA_LIST CHAR EXT;                                           22300000
* %DEACTIVATE CSVDLAA_LIST;                                             22350000
* %IF CSVDLAA_LIST ^= 'NO' &                                            22400000
*    ZCBPRINT ^= 'NO' %THEN                                             22450000
*   %GOTO CSVDLAA_3;                                                    22500000
*   @LIST PUSH NOECHO;                                                  22550000
*   @LIST NOASSEMBLE NOECHO;                                            22600000
*   @LIST OFF C NOECHO;                                                 22650000
* %CSVDLAA_3:;                                                          22700000
*/* Start of PL/X Source                                             */ 22750000
* %SELECT(DLAAHDR_BASED);          /*                            @L1A*/ 22800000
*   %WHEN('')                      /* Not specified?             @L1A*/ 22850000
*     %DLAAHDR_BASED = 'BASED(*)'; /* Default to simply based    @L1A*/ 22900000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 22950000
*       %DLAAHDR_BASED = '';       /* Nullify the basing expression     23000000
*                                                                @L1A*/ 23050000
*   %OTHERWISE %;                  /* Else leave what user supplied     23100000
*                                                                @L1A*/ 23150000
* %END SELECT;                     /*                            @L1A*/ 23200000
*%IF DLAA_ALET = '' %THEN /*                                     @L1A*/ 23250000
*  %DLAA_ALET = '0';       /*                                    @L1A*/ 23300000
*%DLAA_VIA='';            /*                                     @L1A*/ 23350000
*%IF DLAA_ALET^='0' %THEN  /*                                    @L1A*/ 23400000
*  %DLAA_VIA='VIA(DLAA_ALET)';   /*                              @L1A*/ 23450000
*DCL 1 DLAAHDR DLAAHDR_BASED DLAA_VIA, /* Header section         @L1A*/ 23500000
*     2 DLAAH#LS FIXED(32),/* Number of DLAALS entries which follow     23550000
*                                                                @L1A*/ 23600000
*       3 DLAAH#JA FIXED(32),/* Number of DLAAJA entries which follow,  23650000
*                             when ByAsidJobname is requested    @L1A*/ 23700000
*     2 DLAAH#REM FIXED(32),/* Number of DLAALS or DLAAJA               23750000
*                             entries which were not returned because   23800000
*                             of insufficient space              @L1A*/ 23850000
*     2 DLAAHTLEN FIXED(32),/* Total length of answer area needed to    23900000
*                             contain all the requested information.    23950000
*                             This includes the area for the records    24000000
*                             that were returned on this call.   @L1A*/ 24050000
*     2 DLAAHFIRSTLSADDR PTR(31), /* Address of first DLAALS     @LxA*/ 24080000
*      3 DLAAHFIRSTLS@ PTR(31), /* Same as FIRSTLSADDR           @LxC*/ 24110000
*       4 DLAAHFIRSTJAADDR PTR(31), /* Address of first DLAAJA   @LxA*/ 24140000
*        5 DLAAHFIRSTJA@ PTR(31), /* Same as FIRSTJAADDR         @LxC*/ 24170000
*     2 * CHAR(0) BDY(WORD);   /* Word-align the ending          @L1A*/ 24200000
* %SELECT(DLAALS_BASED);           /*                            @L1A*/ 24250000
*   %WHEN('')                      /* Not specified?             @L1A*/ 24300000
*     %DLAALS_BASED = 'BASED(*)'; /* Default to simply based     @L1A*/ 24350000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 24400000
*       %DLAALS_BASED = '';        /* Nullify the basing expression     24450000
*                                                                @L1A*/ 24500000
*   %OTHERWISE %;                  /* Else leave what user supplied     24550000
*                                                                @L1A*/ 24600000
* %END SELECT;                     /*                            @L1A*/ 24650000
*DCL 1 DLAALS DLAALS_BASED DLAA_VIA, /* DLAALS Record data format       24700000
*                                                                @L1A*/ 24750000
*     2 DLAALSNEXTADDR PTR(31), /* Address of next DLAALS. DLAAH#LS     24791600
*          must be used to determine how far along this chain to go.    24833200
*                                                                @LxA*/ 24874800
*       3 DLAALSNEXT@ PTR(31), /* Same as NEXTADDR               @LxC*/ 24916400
*     2 DLAALSFirstDSADDR PTR(31), /* Address of first DLAADS for this  24958000
*                                   DLAALS                       @L1A*/ 25000000
*       3 DLAALSFirstDS@ PTR(31), /* Same as FirstDSADDR         @LxA*/ 25033300
*     2 DLAALSFirstUADDR PTR(31), /* Address of first DLAAU for this    25066600
*                                   DLAALS                       @L1A*/ 25100000
*       3 DLAALSFirstU@ PTR(31),     /* Same as FirstUADDR       @LxA*/ 25125000
*     2 DLAALSNAME CHAR(16),  /* Name of LNKLST set              @L1A*/ 25150000
*     2 DLAALSFLAGS BIT(8),   /* Flags                           @L1A*/ 25200000
*       3 DLAALSCurrent BIT(1), /* This is the current LNKLST    @L1A*/ 25250000
*       3 DLAALSWasCurrent BIT(1),  /* This used to be a current        25300000
*              LNKLST and is still in use                        @L1A*/ 25350000
*       3 DLAALSInUseByLLA BIT(1),  /* LLA is monitoring the LNKLST     25400000
*              using this LNKLST set                             @L1A*/ 25450000
*     2 * CHAR(3),            /* UNUSED                          @L1A*/ 25500000
*     2 DLAALSLnklstSeq# FIXED(32),  /* The Seq# of this LNKLST set.    25550000
*              Only valid when this LNKLST set is active.               25600000
*              The Seq# remains unchanged when an in-use LNKLST set     25630000
*              is activated.  A larger Seq# does not necessarily        25660000
*              indicate a more current activation.                      25690000
*                                                                @P1C*/ 25720000
*     2 * CHAR(4),            /* Unused                          @L1A*/ 25750000
*     2 DLAALS#DS FIXED(16), /* Number of DLAADS entries associated     25800000
*                               with this LNKLST set             @L1A*/ 25850000
*     2 DLAALS#U FIXED(16),  /* Number of DLAAU entries associated      25900000
*                               with this LNKLST set             @L1A*/ 25950000
*     2 * CHAR(0) Bdy(Word);  /* Word-align the ending           @L1A*/ 26000000
* %SELECT(DLAADS_BASED);           /*                            @L1A*/ 26050000
*   %WHEN('')                      /* Not specified?             @L1A*/ 26100000
*     %DLAADS_BASED = 'BASED(*)'; /* Default to simply based     @L1A*/ 26150000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 26200000
*       %DLAADS_BASED = '';        /* Nullify the basing expression     26250000
*                                                                @L1A*/ 26300000
*   %OTHERWISE %;                  /* Else leave what user supplied     26350000
*                                                                @L1A*/ 26400000
* %END SELECT;                     /*                            @L1A*/ 26450000
*DCL 1 DLAADS DLAADS_BASED DLAA_VIA, /* DLAADS Record data format       26500000
*                                                                @L1A*/ 26550000
*     2 DLAADSNEXTADDR PTR(31), /* Address of next DLAADS. DLAALS#DS    26600000
*          must be used to determine how far along this chain to go.    26650000
*                                                                @L1A*/ 26700000
*     3 DLAADSNEXT@ PTR(31),     /* Same as NEXTADDR             @LxA*/ 26725000
*     2 DLAADSFLAGS BIT(8),   /* Flags                           @L1A*/ 26750000
*       3 DLAADSApf BIT(1),   /* APF-authorized. Represents             26800000
*                                status as of last allocation    @L1A*/ 26850000
*       3 DLAADSApfNotAvailable BIT(1),  /* APF status is not           26900000
*                                available. Either the data set was     26906200
*                                not successfully allocated, or the     26912400
*                                LNKLST set itself is not valid. @L1A*/ 26918600
*       3 DLAADSSmsManaged BIT(1),  /* The data set is SMS-managed.     26924800
*                                Represents status as of last           26931000
*                                allocation.                     @L1A*/ 26937200
*       3 DLAADSSmsNotAvailable BIT(1),  /* SMS status is not           26943400
*                                available. Either the data set was     26950000
*                                not successfully allocated, or the     27000000
*                                LNKLST set itself is not valid. @L1A*/ 27050000
*     2 * CHAR(3),            /* UNUSED                          @L1A*/ 27100000
*     2 DLAADSVOLID CHAR(6),  /* Volume ID. Represents                  27150000
*                                status as of last allocation    @L1A*/ 27200000
*     2 DLAADSNAMELEN FIXED(15) UNSIGNED,  /* Length of name     @L1A*/ 27250000
*     2 DLAADSNAME CHAR(44),  /* Data set name. It will only occupy     27300000
*               as much space as indicated by DlaadsNameLen      @L1A*/ 27350000
*     2 * CHAR(0) Bdy(Word);  /* Word-align the ending           @L1A*/ 27400000
*                                                                       27450000
* %SELECT(DLAAU_BASED);            /*                            @L1A*/ 27500000
*   %WHEN('')                      /* Not specified?             @L1A*/ 27550000
*     %DLAAU_BASED = 'BASED(*)'; /* Default to simply based      @L1A*/ 27600000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 27650000
*       %DLAAU_BASED = '';         /* Nullify the basing expression     27700000
*                                                                @L1A*/ 27750000
*   %OTHERWISE %;                  /* Else leave what user supplied     27800000
*                                                                @L1A*/ 27850000
* %END SELECT;                     /*                            @L1A*/ 27900000
*DCL 1 DLAAU DLAAU_BASED DLAA_VIA, /* DLAAU Record data format   @L1A*/ 27950000
*     2 DLAAUNEXTADDR PTR(31), /* Address of next DLAAU. DLAALS#U must  28000000
*               be used to determine how far along this chain to go.    28050000
*                                                                @L1A*/ 28100000
*       3 DLAAUNEXT@ PTR(31),   /* Same as NEXTADDR              @LxA*/ 28125000
*     2 DLAAUJOBNAME CHAR(8), /* Job name using this LNKLST set  @L1A*/ 28150000
*     2 DLAAUASID FIXED(15),  /* ASID of job                     @L1A*/ 28200000
*     2 * CHAR(2),            /* UNUSED                          @L1A*/ 28250000
*     2 * CHAR(0) Bdy(Word);  /* Word-align the ending           @L1A*/ 28300000
*                                                                       28350000
* %SELECT(DLAAJA_BASED);           /*                            @L1A*/ 28400000
*   %WHEN('')                      /* Not specified?             @L1A*/ 28450000
*     %DLAAJA_BASED = 'BASED(*)'; /* Default to simply based     @L1A*/ 28500000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 28550000
*       %DLAAJA_BASED = '';        /* Nullify the basing expression     28600000
*                                                                @L1A*/ 28650000
*   %OTHERWISE %;                  /* Else leave what user supplied     28700000
*                                                                @L1A*/ 28750000
* %END SELECT;                     /*                            @L1A*/ 28800000
*DCL 1 DLAAJA DLAAJA_BASED DLAA_VIA, /* DLAAJA Record data format       28850000
*                                                                @L1A*/ 28900000
*     2 DLAAJANEXTADDR PTR(31), /* Address of next DLAAJA. DLAALS#JA    28950000
*          must be used to determine how far along this chain to go.    29000000
*                                                                @L1A*/ 29050000
*       3 DLAAJANEXT@ PTR(31),   /* Same as NEXTADDR             @LxA*/ 29075000
*     2 DLAAJAJOBNAME CHAR(8), /* Job name                       @L1A*/ 29100000
*     2 DLAAJAASID FIXED(15), /* ASID of job                     @L1A*/ 29150000
*     2 * CHAR(2),            /* UNUSED                          @L1A*/ 29200000
*     2 DLAAJALSNAME CHAR(16), /* LNKLST set name                @L1A*/ 29250000
*     2 * CHAR(0) Bdy(Word);  /* Word-align the ending           @L1A*/ 29300000
*                                                                       29350000
*    /* Format constants returned for CSVDYNL REQUEST(QUERYDYN)      */ 29400000
*DCL CsvdynlDynNotAvailable Fixed(8) Constant(0);             /* @L1A*/ 29450000
*DCL CsvdynlDynAvailable Fixed(8) Constant(1);                /* @L1A*/ 29500000
*                                                                       29550000
*    /* Return Code / Reason code constants from CsvDynl.            */ 29600000
*                                                                       29650000
*    /* It is guaranteed that                                           29700000
*       no reason code will be reused (i.e., the same reason code       29750000
*       will not be used for more than one return code).            */  29800000
*                                                                       29850000
*    /* Also note carefully that bits 0-15 of the reason code           29900000
*       may contain component-diagnostic data and must not be           29950000
*       assumed to be 0.                                            */  30000000
*                                                                       30050000
*Dcl CsvDynlRsnCodeMask Bit(32) Constant('0000FFFF'X); /* Use this      30100000
*               mask to isolate the non component-diagnostic            30150000
*               portion of the reason code.                      @L1A*/ 30200000
*DCL CsvDynlRC_OK Constant(0);      /* Return code 0, success    @L1A*/ 30250000
*DCL CsvDynlRC_WARN Constant(4);    /* Return code 4, warning    @L1A*/ 30300000
*    /* Reason codes for RC=4                                    @L1A*/ 30350000
*Dcl CsvdynlRsnRoutineNotFound Bit(32) Constant('00000402'X); /* For    30400000
*                   TEST request, the routine was not found      @L1A*/ 30450000
*Dcl CsvdynlRsnNotAllDataReturned Bit(32) Constant('00000403'X); /*     30500000
*                   For LIST, the provided output area was              30550000
*                   not large enough to contain all the data.    @L1A*/ 30600000
*Dcl CsvdynlRsnNoMatchingJob Bit(32) Constant('00000406'X); /* For      30650000
*                   UPDATE request, no matching job or ASID was         30700000
*                   found.                                       @L1A*/ 30750000
*Dcl CsvdynlRsnActivateInUse Bit(32) Constant('00000407'X); /* For      30800000
*                   ACTIVATE request, the LNKLST set was already        30850000
*                   in use.                                      @L1A*/ 30900000
*DCL CsvdynlRC_InvParm Constant(8); /* Return code 8,                   30950000
*                                      invalid parameter         @L1A*/ 31000000
*                                   /*                           @L1A*/ 31050000
*    /* Reason codes for RC=8                                    @L1A*/ 31100000
*Dcl CsvdynlRsnBadParmList Bit(32) Constant('00000801'X); /* Error      31150000
*                   while accessing parameter list               @L1A*/ 31200000
*Dcl CsvdynlRsnSRBMode Bit(32) Constant('00000802'X); /* Caller was     31250000
*                   in SRB mode                                  @L1A*/ 31300000
*Dcl CsvdynlRsnNotEnabled Bit(32) Constant('00000803'X); /* Caller      31350000
*                   was not enabled                              @L1A*/ 31400000
*Dcl CsvdynlRsnNotAuthorized Bit(32) Constant('00000804'X); /* Caller   31450000
*                   was not authorized                           @L1A*/ 31500000
*Dcl CsvdynlRsnHomeNotPrimary Bit(32) Constant('00000805'X); /*         31550000
*                   HASN ^= PASN                                 @L1A*/ 31600000
*Dcl CsvdynlRsnBadAnsareaALET Bit(32) Constant('00000806'X); /* ALET    31650000
*                   of ANSAREA was not acceptable                @L1A*/ 31700000
*Dcl CsvdynlRsnBadAnsarea Bit(32) Constant('00000807'X); /* Error       31750000
*                   while accessing ANSAREA                      @L1A*/ 31800000
*Dcl CsvdynlRsnBadAnsLen Bit(32) Constant('00000808'X); /* ANSLEN       31850000
*                   was not at least as long as DLAAHDR mapped by       31900000
*                   CSVDLAA.                                     @L1A*/ 31950000
*Dcl CsvdynlRsnBadRequestType Bit(32) Constant('00000809'X); /*         32000000
*                   Parameter list contains an incorrect request type.  32050000
*                   Possible overlay.                            @L1A*/ 32100000
*DCL CsvdynlRsnBadEstaex Bit(32) Constant('0000080A'X); /* ESTAEX       32150000
*                   recovery could not be established. Possibly the     32200000
*                   caller had an EUT FRR.                       @L1A*/ 32250000
*DCL CsvdynlRsnReservedNot0 Bit(32) Constant('0000080B'X); /*           32300000
*                   Parameter list contains a non-0 value in a reserved 32350000
*                   field. Possible overlay.                     @L1A*/ 32400000
*DCL CsvdynlRsnBadParmlistAlet Bit(32) Constant('0000080D'X); /* ALET   32450000
*                   of parameter list was not acceptable.        @L1A*/ 32500000
*DCL CsvdynlRsnBadVersion Bit(32) Constant('0000080E'X); /*             32550000
*                   Parameter list contains an incorrect version        32600000
*                   number. Possible overlay.                    @L1A*/ 32650000
*DCL CsvdynlRsnLocked Bit(32) Constant('0000080F'X);     /* Caller      32700000
*                   held a system lock.                          @L1A*/ 32750000
*DCL CsvdynlRsnBadDsnameArea Bit(32) Constant('00000815'X); /* Error    32800000
*                   while accessing area containing DSNAME       @L1A*/ 32850000
*DCL CsvdynlRsnBadAfterDsnameArea Bit(32) Constant('00000816'X); /*     32900000
*                   Error                                               32950000
*                   while accessing area containing AFTERDSNAME  @L1A*/ 33000000
*DCL CsvdynlRsnBadOpen     Bit(32) Constant('00000818'X); /* Unable     33050000
*                   to open supplied data set.                   @L1A*/ 33100000
*DCL CsvdynlRsnLnklstSetNotFound Bit(32)                                33150000
*               Constant('00000819'X);     /* LNKLST set does not       33200000
*                   exist                                        @L1A*/ 33250000
*DCL CsvdynlRsnDatasetNotFound Bit(32)                                  33300000
*               Constant('0000081C'X);     /* For DELETE, data set      33350000
*                   was not in the LNKLST set. For ADD, "after" data    33400000
*                   set was not in the LNKLST set.               @L1A*/ 33450000
*DCL CsvdynlRsnBadDsnameALET Bit(32)                                    33500000
*               Constant('00000820'X);     /* ALET of area containing   33550000
*                   DSNAME is not acceptable                     @L1A*/ 33600000
*DCL CsvdynlRsnBadAfterDsnameALET Bit(32)                               33650000
*               Constant('00000821'X);     /* ALET of area containing   33700000
*                   AFTERDSNAME is not acceptable                @L1A*/ 33750000
*DCL CsvdynlRsnBadLnklstName Bit(32)                                    33800000
*               Constant('00000822'X);     /* LNKLST set name begins    33850000
*                   with blank or hex zero                       @L1A*/ 33900000
*DCL CsvdynlRsnBadDsname Bit(32)                                        33950000
*               Constant('00000823'X);     /* DSNAME begins with        34000000
*                   blank or hex zero                            @L1A*/ 34050000
*DCL CsvdynlRsnBadAfterDsname Bit(32)                                   34100000
*               Constant('00000824'X);     /* AFTERDSNAME begins with   34150000
*                   blank or hex zero                            @L1A*/ 34200000
*DCL CsvdynlRsnBadAlloc       Bit(32)                                   34250000
*               Constant('00000829'X);  /* Unable to allocate           34300000
*                   requested data set                           @L1A*/ 34350000
*DCL CsvdynlRsnFunctionNotAvailableError Bit(32)                        34400000
*               Constant('0000082B'X);     /* Function requested        34450000
*               when dynamic allocation is not allowed by the           34500000
*               system (or function requested during NIP).              34550000
*                                                                @L1A*/ 34600000
*DCL CsvdynlRsnReservedName Bit(32)                                     34650000
*               Constant('00000831'X);  /* Reserved name                34700000
*               "CURRENT" or "IPL" was used on a DEFINE, ADD, or        34750000
*               DELETE request.                                         34800000
*                                                                @L1A*/ 34850000
*DCL CsvdynlRsnNoJobASID Bit(32)                                        34900000
*               Constant('00000832'X);  /* The job name was blank (or   34950000
*               null) and the ASID was 0 for UPDATE or LIST             35000000
*                                                                @L1A*/ 35050000
*DCL CsvdynlRsnAddSysdsn BIT(32)                                        35100000
*               Constant('00000833'X);  /* A request was made to add    35150000
*               the LINKLIB, MIGLIB, or CSSLIB data set, or to add      35200000
*               after the LINKLIB, MIGLIB, or CSSLIB data set.          35250000
*                                                                @L1A*/ 35300000
*DCL CsvdynlRsnDeleteSysdsn BIT(32)                                     35350000
*               Constant('00000834'X);  /* A request was made to        35400000
*               delete the LINKLIB, MIGLIB, or CSSLIB data set.         35450000
*                                                                @L1A*/ 35500000
*DCL CsvdynlRsnNoCopyFROM BIT(32)                                       35550000
*               Constant('00000835'X);  /* Could not locate the         35600000
*               COPYFROM LNKLST set.                                    35650000
*                                                                @L1A*/ 35700000
*Dcl CsvdynlRsnAlreadyExists Bit(32) Constant('00000836'X); /*          35750000
*                   For DEFINE request, LNKLST set already exists.      35800000
*                   For ADD request, data set was already associated    35850000
*                   with this LNKLST set.                        @L1A*/ 35900000
*DCL CsvdynlRsnNoModname BIT(32)                                        35950000
*               Constant('00000837'X);  /* Module name was null         36000000
*                                                                @L1A*/ 36050000
*DCL CsvdynlRsnConcatFull BIT(32)                                       36100000
*               Constant('00000839'X);  /* Attempt to ADD a data set    36150000
*                      but the concatenation is full.            @L1A*/ 36200000
*DCL CsvdynlRsnBadProbDsnameArea BIT(32)                                36250000
*               Constant('0000083A'X);  /* Error while accessing        36300000
*                      area to contain probdsname                @L1A*/ 36350000
*DCL CsvdynlRsnBadProbDsnameALET BIT(32)                                36400000
*               Constant('0000083B'X);  /* ALET of area to contain      36450000
*                      PROBDSNAME is not acceptable              @L1A*/ 36500000
*DCL CsvdynlRsnNotPartitioned BIT(32)                                   36550000
*               Constant('0000083C'X);  /* The data set is not          36600000
*                      partitioned.                              @L1A*/ 36650000
*DCL CsvdynlRsnBadVolid BIT(32)                                         36700000
*               Constant('0000083D'X);  /* The provided VolID does not  36750000
*                      match the one in the catalog.             @L1A*/ 36800000
*                                                                       36850000
*DCL CsvdynlRsnMultiVolume BIT(32)                                      36900000
*               Constant('0000083E'X);  /* IEFDDSRV's output was        36950000
*                      not as expected. The data set is                 37000000
*                      multi-volume.                             @L1A*/ 37050000
*DCL CsvdynlRsnMissingSysDSN BIT(32)                                    37100000
*               Constant('0000083F'X);  /* The LNKLST set being         37150000
*      tested does not contain at least                                 37200000
*      one of SYS1.LINKLIB, SYS1.MIGLIB, and SYS1.CSSLIB. This should   37250000
*      only occur if you used the SYSLIB statement of PROGxx.           37300000
*                                                                @L1A*/ 37400000
*DCL CsvdynlRsnUndefineCurrent BIT(32)                                  37450000
*               Constant('00000840'X);  /* An attempt was made to       37500000
*                   UNDEFINE the current LNKLST set.                    37550000
*                                                                @L1A*/ 37600000
*DCL CsvdynlRsnBadFoundDsnameArea BIT(32)                               37650000
*               Constant('00000841'X);  /* Error while accessing        37700000
*                      area to contain FoundDsname               @L1A*/ 37750000
*DCL CsvdynlRsnBadFoundDsnameALET BIT(32)                               37800000
*               Constant('00000842'X);  /* ALET of area to contain      37850000
*                      FoundDsname is not acceptable             @L1A*/ 37900000
*DCL CsvdynlRsnBadSMS BIT(32)                                           37908300
*               Constant('00000843'X);  /* The SMS status of the data   37916600
*                      set has changed. Either it is now SMS-managed    37924900
*                      but had not been, or it is not SMS-managed       37933200
*                      but had been.                             @L1A*/ 37941500
*                                                                       37950000
*DCL CsvdynlRC_Env Constant(12);    /* Return code 12,                  38000000
*                                      environmental error       @L1A*/ 38050000
*    /* Reason codes for RC=12                                   @L1A*/ 38100000
*Dcl CsvdynlRsnFunctionNotAvailable Bit(32) Constant('00000C01'X);      38150000
*                                   /*                           @L1A*/ 38200000
*DCL CsvdynlRsnNoStorage      Bit(32)                                   38250000
*               Constant('00000C02'X);  /* Storage was not available    38300000
*               for a system control block                       @L1A*/ 38350000
*DCL CsvdynlRsnChangeInUse Bit(32)                                      38400000
*               Constant('00000C03'X);  /* An attempt was made to       38450000
*               change (ADD or DELETE) an in-use LNKLST set.            38500000
*                                                                @L1A*/ 38550000
*DCL CsvdynlRsnUndefineUsers Bit(32)                                    38600000
*               Constant('00000C04'X);  /* An attempt was made to       38650000
*                   UNDEFINE a LNKLST set that is still in use.         38700000
*                   The request is denied.                       @L1A*/ 38750000
*DCL CsvdynlRsnActivateNoENF Bit(32)                                    38800000
*               Constant('00000C05'X);  /* The ENF notification         38850000
*                   associated with REQUEST=ACTIVATE could not          38900000
*                   be done.                                     @L1A*/ 38950000
*DCL CsvdynlRsnUndefineLLA Bit(32)                                      39000000
*               Constant('00000C06'X);  /* An attempt was made to       39050000
*                   UNDEFINE a LNKLST set that is being used by         39100000
*                   LLA to manage the LNKLST.                           39150000
*                   The request is denied.                       @L1A*/ 39200000
*                                                                       39250000
*DCL CsvdynlRC_CompError Constant(16); /* Unknown, unexpected           39300000
*                                      error                     @L1A*/ 39350000
*                                   /*                           @L1A*/ 39400000
*    /* Reason codes for RC=16                                   @L1A*/ 39450000
*                                   /*                           @L1A*/ 39500000
*Dcl CsvdynlRsnCompError Bit(32) Constant('00001001'X);   /*            39550000
*               System error encountered by component.           @L1A*/ 39600000
* @LOGIC;                                                               39650000
* #PRAGMA TOOL=CBGEN.                                                   39700000
* #USEORG.                                                              39750000
* #DELETE.CsvdynlRsnActivateInUse                                       39766600
* #DELETE.CsvdynlRsnActivateNoENF                                       39783200
* #EPRAGMA.                                                             39800000
* @ENDLOGIC;                                                            39850000
*/* End of PL/X Source                                               */ 39900000
* %IF CSVDLAA_LIST ^= 'NO' &                                            39950000
*    ZCBPRINT ^= 'NO' %THEN                                             40000000
*   %GOTO CSVDLAA_4;                                                    40050000
*   @LIST POP NOECHO;                                                   40100000
* %CSVDLAA_4:;                                                          40150000
* %END;                                                                 40200000
