*/**** Start of Specifications for BLSRDRPX **************************/ 00050000
*/*                                                                  */ 00100000
*/* $MAC(BLSRDRPX) COMP(SC132) PROD(HBB7703): Dump record prefix     */ 00150000
*/*                                                                  */ 00200000
*/*   PROPRIETARY STATEMENT =                                        */ 00207200
*/*                                                                  */ 00214400
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00221800
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00243600
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1988, 2000                      */ 00265500
*/*                                                                  */ 00287500
*/* STATUS = HBB7703                                                 */ 00290000
*/*                                                                  */ 00292500
*/* External classification: PI                                      */ 00295000
*/* End of external classification                                   */ 00297500
*/*                                                                  */ 00300000
*/* DESCRIPTIVE NAME: Unformatted dump record prefix                 */ 00316000
*/*   ACRONYM:  BLSRDRPX                                             */ 00332000
*/*                                                                  */ 00348000
*/* MACRO NAME: BLSRDRPX                                             */ 00364000
*/* DSECT NAME: DRPX or any name used as macro label                 */ 00380000
*/* COMPONENT:  IPCS (SC132)                                         */ 00396000
*/* EYE-CATCHER: DR                                                  */ 00412000
*/*     OFFSET:  0                                                   */ 00428000
*/*     LENGTH:  2                                                   */ 00444000
*/*                                                                  */ 00460000
*/* STORAGE ATTRIBUTES:                                              */ 00476000
*/*   SUBPOOL:  N/A                                                  */ 00492000
*/*   KEY:  N/A                                                      */ 00508000
*/*   RESIDENCY:  N/A                                                */ 00524000
*/*   MAIN STORAGE:  N/A                                             */ 00540000
*/*   AUXILIARY STORAGE:  N/A                                        */ 00556000
*/*   VIRTUAL STORAGE:  N/A                                          */ 00572000
*/*   DATA SPACE: N/A                                                */ 00588000
*/*                                                                  */ 00604000
*/* SIZE: 64 bytes                                                   */ 00620000
*/* CREATED BY: Dumping services                                     */ 00636000
*/* POINTED TO BY: N/A                                               */ 00652000
*/* SERIALIZATION: None                                              */ 00668000
*/*                                                                  */ 00684000
*/* FUNCTION = Maps the first 64 bytes of every record in an         */ 00722600
*/*            unformatted stand alone dump or virtual dump.         */ 00761200
*/*                                                                  */ 00800000
*/* DELETED BY: IPCS, SNAP                                           */ 00825000
*/* DEPENDENCIES: None                                               */ 00850000
*/* DISTRIBUTION LIBRARY: AMACLIB                                    */ 00875000
*/*                                                                  */ 00900000
*/* METHOD OF ACCESS:                                                */ 00950000
*/*                                                                  */ 01000000
*/*  PLS = The macro can only expand in a LIST format.               */ 01050000
*/*                                                                  */ 01100000
*/*   LIST FORM    = ?BLSRDRPX MF(LIST,prefix,STORCLASS)             */ 01150000
*/*                      ABITS(<31|64>)                              */ 01175000
*/*                                                                  */ 01200000
*/*      MF                                                          */ 01250000
*/*     PARM  Meaning                                                */ 01300000
*/*     ----  ---------------------------------------------------    */ 01350000
*/*                                                                  */ 01400000
*/*      1    LIST or L for LIST form                                */ 01450000
*/*                                                                  */ 01500000
*/*      2    PREFIX is from 1 to 4 alpha-numeric starting with      */ 01550000
*/*           an alpha character. e.g. 'DRPX' or 'PRD'               */ 01600000
*/*                                                                  */ 01650000
*/*      3    STORAGE CLASS and initialization attribute.            */ 01700000
*/*           COMPLETE keyword will cause initial values to          */ 01750000
*/*           be generated.  Default storage class with COMPLETE     */ 01800000
*/*           is STATIC LOCAL.  Can specify BASED, DEFINED ...       */ 01850000
*/*                                                                  */ 01900000
*/*  ASM = The assembler format takes the form                       */ 01950000
*/*                                                                  */ 02000000
*/*        LABEL  BLSRDRPX DSECT=<YES|NO> ABITS=<31|64>              */ 02050000
*/*                                                                  */ 02150000
*/*        The LABEL is used as the prefix for all the               */ 02200000
*/*        field names.  The label cannot exceed 4 characters.       */ 02250000
*/*        For example code 'DRPX   BLSRDRPX DSECT=YES'              */ 02300000
*/*                                                                  */ 02350000
*/*        DSECT=YES will cause a DSECT to be generated.             */ 02400000
*/*                  The initial values will be ignored.             */ 02450000
*/*                                                                  */ 02500000
*/*        DSECT=NO  will cause a set of initialized DCs             */ 02550000
*/*                  to be generated.                                */ 02600000
*/*                                                                  */ 02650000
*/* ================================================================ */ 02700000
*/*                                                                  */ 03000000
*/* CHANGE ACTIVITY:                                                 */ 03050000
*/*                                                                  */ 03100000
*/*   Products =                                                     */ 03150000
*/* $L0= DATASPAC,HBB3310,86177,PDG7: Support new record format      */ 03200000
*/* $L1= DATASPAC,HBB3310,86177,PDG7: Same as L0, copied code        */ 03250000
*/*                                                                  */ 03258300
*/* ---------------------------------------------------------------- */ 03259300
*/*                                                                  */ 03260300
*/*   Hardware =                                                     */ 03261300
*/* $H1= IEEEBLS,HBB6606,97321,PDE1: Additional FP registers         */ 03262300
*/* $H2= 64BIT,HBB7703,97268,PDE1: 64-bit support                    */ 03262600
*/* $H3= 64BIT,HBB7703,98307,B7VBGD: 64-bit support                  */ 03262900
*/*                                                                  */ 03263300
*/* ---------------------------------------------------------------- */ 03264300
*/*                                                                  */ 03265300
*/*   Design changes=                                                */ 03266600
*/* $D1= DC40075,HBB3310,86234,PDG7: Provide Real address of ASTE    */ 03275000
*/*                                                                  */ 03300000
*/* ---------------------------------------------------------------- */ 03341600
*/*                                                                  */ 03383200
*/*   PTMs =                                                         */ 03425000
*/* $P1= PC40419,HBB3310,86300,PDG7: Correct length specification    */ 03450000
*/*      causing boundary alignment errors                           */ 03475000
*/* $P2= PCG0142,JBB3311,88140,PDAX: Change ORG at end of assembler  */ 03483300
*/*      version.                                                    */ 03491600
*/*    = PVT0672,HBB6606,98083,PDE1: SHOWHDR compliance              */ 03495800
*/*                                                                  */ 03500000
*/* ---------------------------------------------------------------- */ 03516600
*/*                                                                  */ 03533200
*/*   Maintenance = none                                             */ 03550000
*/*                                                                  */ 03600000
*/** End of Specifications for BLSRDRPX ******************************* 03650000
         MACRO                                                          03700000
&P       BLSRDRPX &DSECT=YES,&ABITS= Dump record prefix            @H2C 03713800
         GBLA  &BLSABIT           ABIT                             @H2A 03727600
         LCLC  &LVL                                                @H2A 03741400
         BLSABITS ABITS=&ABITS.   Process ABITS option             @H2A 03755200
&LVL     SETC  '1'                31-bit support levels            @H2A 03769000
         AIF   (&BLSABIT EQ 31).ABITS31 Supported level            @H2A 03782800
&LVL     SETC  '2'                64-bit support levels            @H2A 03796600
.ABITS31 IEZBITS ,                Define symbolic bits             @H2C 03810400
&P.SIZ   EQU   64                 Length of dump record prefix          03825000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1P 03850000
&P       DSECT ,                  Dump prefix                           03900000
         AGO   .L020              Define structure of record       @L1P 03950000
.L010    ANOP  ,                  No DSECT statement               @L1P 04000000
         DS    0F                 Align on fullword boundary       @L1P 04050000
&P       DS    0CL(&P.SIZ)        Dump prefix                           04116600
.L020    ANOP  ,                  Define structure of record       @L1P 04150000
* ----------------------------------------------------------------      04200000
* Dump record prefix                                           #MD98307 04250000
* ----------------------------------------------------------------      04300000
&P.ID    DS    0CL3               Dump record prefix identifier         04350000
&P.IDC   DC    CL2'DR'            Dump record prefix eye-catcher        04400000
&P.IDCV  EQU   C'DR',2,C'C'       Dump record prefix eye-catcher   @H2A 04412500
&P.IDV   DC    CL1'&LVL.'         Dump record prefix version       @H2C 04425000
&P.IDV31 EQU C'1',1,C'C'          31-bit support levels            @H2A 04450000
&P.IDV64 EQU C'2',1,C'C'          64-bit support levels            @H2A 04475000
&P.LEN   DC    AL1(&P.SIZ)        Dump record prefix length             04500000
&P.AS    BLSRDATS DSECT=NO        Address space identifier         @L1P 04550000
         AIF   ('&LVL' EQ '2').L110 64-bit support levels          @H2A 04566600
.*                                31-bit support levels                 04583200
&P.LAD   DC    A(0)               Logical address                  @L1P 04600000
&P.SEQ   DC    F'0'               Sequence number used to prevent      *04650000
                                  dumps from merging                    04700000
         DC    2F'0'              Reserved for data common to all      *04750000
                                  types of dump records                 04800000
         AGO   .L120              Level-independent fields         @H2A 04805500
.L110    ANOP  ,                  64-bit support levels            @H2A 04811000
&P.LAD   DC    XL8'00'            Logical address                  @H2A 04816500
&P.SEQ   DC    F'0'               Sequence number used to prevent      *04822000
                                  dumps from merging               @H2P 04827500
         DC    F'0'               Reserved for data common to all      *04833000
                                  types of dump records            @H2A 04838500
.L120    ANOP  ,                  Level-independent fields         @H2A 04844000
&P.TYPD  DC    XL28'00'           Record type specific data             04850000
&P.999   DS    0C                 End BLSRDRPX                 #MD98307 04900000
         SPACE 1                                                   @L1P 04950000
* ----------------------------------------------------------------      05000000
* Store Status Record (type C) Data                                     05050000
* ----------------------------------------------------------------      05100000
         ORG   &P.TYPD            Store status record data              05150000
&P.FLAGS DS    BL1                Store status flags                    05200000
&P.SSINV EQU   BIT0               Store status may be invalid           05227700
&P.SIGPF EQU   BIT1               SIGP Stop and Store Status failed.   *05255400
                                  The GPR designated by the R1 field   *05283100
                                  of the SIGP instruction is stored at *05310800
                                  offset X'110' (PRDSIGPS) of the CPU  *05338500
                                  status record.                        05366200
&P.GPRVL EQU   BIT2               GPRs valid despite invalid Store     *05393900
                                  Status.                               05421600
&P.BFP   EQU   BIT3               OS/390 R6 or later - BFP support @H1A 05428700
&P.BFPV  EQU   BIT4               FPRs valid in extended status    @H1A 05435800
&P.BFPH  EQU   BIT5               Binary floating point hardware   @H1A 05442900
&P.ESAME EQU   BIT7               Status is in ESAME format        @H3A 05446400
         DS    XL27               Reserved                              05450000
         SPACE 1                                                   @L1P 05500000
* ----------------------------------------------------------------      05550000
* Dump Header Record (type H) Data                                      05600000
* ----------------------------------------------------------------      05650000
         ORG   &P.TYPD            Dump header record data               05700000
&P.DUMPT DS    XL1                Dump type                             05750000
&P.SADP  EQU   1                  Stand alone dump                      05800000
&P.SVCDP EQU   2                  SVC dump                              05850000
&P.SMDP  EQU   3                  SYSMDUMP                              05900000
&P.SLPDP EQU   4                  SLIP dump                             05950000
         DS    XL27               Reserved                              06000000
         SPACE 1                                                   @L1P 06050000
* ----------------------------------------------------------------      06100000
* Storage Record (types A, CV, DS) Data                                 06150000
* ----------------------------------------------------------------      06200000
         ORG   &P.TYPD            Storage record data                   06250000
&P.KEY   DS    BL1                Storage key for page                  06300000
&P.KEYQ  EQU   X'FF'              Storage key not known                 06350000
&P.KEYA  EQU   BIT0+BIT1+BIT2+BIT3 Access-control code                  06400000
&P.KEYF  EQU   BIT4               Fetch-protection indicator            06450000
&P.KEYU  EQU   BIT5+BIT6          Page usage indicators                 06500000
&P.KEYR  EQU   BIT5               Page referenced                       06550000
&P.KEYC  EQU   BIT6               Page changed                          06600000
         DS    XL5                Reserved for common fields            06608300
&P.TYPS  DS    XL22               Record type specific data             06616600
         SPACE 1                                                   @L1P 06624900
* ----------------------------------------------------------------      06633200
* Data Space Storage Record (type DS) Data.                             06638700
         ORG   &P.TYPS            Data space storage record data        06658100
         DS    H                  Reserved                              06666400
         AIF   ('&LVL' EQ '2').L610 Current level                  @H2A 06668400
* The following supplements the ASID and Data Space information.        06670400
* ----------------------------------------------------------------      06672400
&P.ASTE  DS    A                  Absolute address of ASTE              06674700
&P.STOKN DS    XL8                STOKEN                                06683000
         DS    XL8                Reserved                              06691300
         AGO   .L620              Level-independent fields         @H2A 06691400
.L610    ANOP  ,                  Current level                    @H2A 06691500
.* -------------------------------------------------------------------- 06691600
.* ASTE and STOKEN associations no longer captured in every data space  06691700
.* storage record                                                       06691800
.* -------------------------------------------------------------------- 06691900
* ----------------------------------------------------------------      06692000
         DS    XL20               Reserved                              06692100
.L620    ANOP  ,                  Level-independent fields         @H2A 06692200
         SPACE 1                                                   @L1P 06692300
* ----------------------------------------------------------------      06692400
* Storage Record (type CV) Data                                         06692500
* ----------------------------------------------------------------      06692900
         ORG   &P.TYPS            Storage record data                   06693300
&P.STYP  DS    BL1                System area type                      06693700
&P.COMM  EQU   BIT0               Common area                           06694100
&P.AAF   EQU   BIT1               Absolute address given           @D1A 06694400
         DS    XL1                Reserved                         @D1C 06694700
         AIF   ('&LVL' EQ '2').L710 Current level                  @H2A 06694800
&P.AAP   DS    A                  Absolute address                 @D1A 06695000
         DS    XL16               Reserved                         @P1C 06695300
         AGO   .L720              Level-independent fields         @H2A 06695900
.L710    ANOP  ,                  Current level                    @H2A 06696500
&P.AAP   DS    XL8                Absolute address                 @H2A 06697100
         DS    XL12               Reserved                         @H2A 06697700
.L720    ANOP  ,                  Level-independent fields         @H2A 06698300
         ORG   &P+&P.SIZ          End of BLSRDRPX                  @P2C 06698900
         MEND  ,                  End assembler macro BLSRDRPX       */ 06700000
*                                                                       06750000
*%BLSRDRPX:                         /* Dump record prefix        @H2C*/ 06791600
*   MACRO KEYS(ABITS,MF);           /* Dump record prefix            */ 06833200
*                                                                       06875000
*/* ---------------------------------------------------------------- */ 06900000
*/* Define Macro-Variables                                           */ 06950000
*/* ---------------------------------------------------------------- */ 07000000
*                                                                       07050000
*   DECLARE                         /* External macro variables      */ 07100000
*     BLSABIT  FIXED EXTERNAL,      /* ABITS                     @H2A*/ 07125000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation        @L1P*/ 07150000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters         @L1P*/ 07200000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class       @L1P*/ 07250000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag     07300000
*                                                                @L1P*/ 07350000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code         @L1P*/ 07388400
*   DECLARE                         /* Internal macro variables      */ 07426800
*     CLVL     CHARACTER INTERNAL,  /* Level of mapping          @H2A*/ 07446000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters         @L1P*/ 07465200
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag     07503600
*                                                                @L1P*/ 07542000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                  @L1P*/ 07580400
*     CQINITIAL CHARACTER INTERNAL; /* Literal                   @L1P*/ 07618800
*   DEACTIVATE CMF2,CMF3A,CQCOMPLETE,CQINITIAL; /* Prevent accidents    07657200
*                                                                @L1P*/ 07695600
*   CQINITIAL = ' INITIAL(';        /* Literal                   @L1P*/ 07734000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                   @L1P*/ 07772400
*   CLVL = '2';                     /* Level of mapping          @H2A*/ 07780000
*   ANSWER('?BLSABITS '||ABITS||';'); /* Process ABITS           @H2A*/ 07787600
*   IF BLSABIT = 31 THEN            /* Level of mapping          @H2A*/ 07795200
*     CLVL = '1';                   /* Level of mapping          @H2A*/ 07802800
*   ANSWER('?'||MACLABEL||'BLRMF('||MF||') FORMS(L);'); /*           */ 07810800
*   IF EHBRC > 8 THEN               /* Serious error(s) detected @L1P*/ 07849200
*     GO TO ERREXIT;                /* Error exit                @L1P*/ 07887600
*   CMF2 = EHBMF2;                  /* Prefix characters         @L1P*/ 07926000
*   CMF3A = EHBMF3A;                /* Complete initialization flag     07964400
*                                                                @L1P*/ 08002800
*   EHBENDCHAR = ',';               /* Final punctuation         @L1P*/ 08041200
*   ANSWER('?BLSRZDEB;');           /* Debugging constants           */ 08079600
*   ANSWER('DECLARE/*BLSRDRPX #MD98307*/') COLUMN(5); /*         @H3C*/ 08118000
*   ANSWER(CMF2||'SIZ CONSTANT(64),/*Dump record prefix length*/')      08156400
*       COLUMN(7);                                                      08194800
*   ANSWER(CMF2||'IDCV CHARACTER(2) CONSTANT(''DR'|| /*          @H2A*/ 08199600
*       '''),/*Dump record prefix identifier*/') COLUMN(7);             08204400
*   ANSWER(CMF2||'DRPX CHARACTER(3) CONSTANT(''DR'||CLVL|| /*    @H2C*/ 08209200
*       '''),/*Dump record prefix identifier and version number*/')     08223600
*       COLUMN(7);                                                      08238000
*   ANSWER(CMF2||'IDV31 CHARACTER(1) CONSTANT(''1'')'|| /*       @H2A*/ 08252400
*       ',/*31-bit support levels*/') COLUMN(7);                        08266800
*   ANSWER(CMF2||'IDV64 CHARACTER(1) CONSTANT(''2'')'|| /*       @H2A*/ 08281200
*       ',/*64-bit support levels*/') COLUMN(7);                        08295600
*   ANSWER('1 '||CMF2||' BOUNDARY(WORD) '||EHBMF3||',/*BLSRDRPX'||      08310000
*       MACLIST||' '||MACKEYS||'*/') COLUMN(7);                         08348400
*   ANSWER('/* '||REPEAT('=',63)||  /*                               */ 08386800
*       ' */ /* BLSRDRPX - Dump record prefix'||REPEAT(' ',35)|| /*  */ 08425200
*       '*/ /* '||REPEAT('=',63)||' */') COLUMN(2);                     08463600
*   ANSWER('2 '||CMF2||'ID CHARACTER(3)') COLUMN(8);                    08502000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialize                @L1P*/ 08540400
*     ANSWER(CQINITIAL||CMF2||'DRPX)');                                 08578800
*   ANSWER(',/*Dump record prefix identifier*/');                       08617200
*   ANSWER('3 '||CMF2||'IDC CHARACTER(2),/*DR acronym*/') COLUMN(9);    08655600
*   ANSWER('3 '||CMF2||'IDV CHARACTER(1),/*DRPX version*/') COLUMN(9);  08694000
*   ANSWER('2 '||CMF2||'LEN UNSIGNED BINARY(8)') COLUMN(8);             08732400
*   IF CMF3A = CQCOMPLETE THEN      /* Initialize                @L1P*/ 08770800
*     ANSWER(CQINITIAL||'LENGTH('||CMF2||'))');                         08809200
*   ANSWER(',/*Length of dump record prefix*/');                        08847600
*   ANSWER('?BLSRDATS MF(SUBLIST,'||CMF2||'AS,'||CMF3A||',2);');        08886000
*   IF CLVL = '1' THEN              /* Original level            @H2A*/ 08897800
*     DO;                           /* Original level            @H2A*/ 08909600
*       ANSWER('2 '||CMF2||'LAD POINTER(32)') COLUMN(8); /*      @L1P*/ 08921400
*       IF CMF3A = CQCOMPLETE THEN  /* Initialize                @L1P*/ 08933200
*         ANSWER(CQINITIAL||'ZZZZNULL)'); /*                     @L1P*/ 08945000
*     END;                          /* Original level            @H2A*/ 08956800
*   ELSE                            /* Current level                 */ 08968600
*     DO;                           /* Current level             @H2A*/ 08980400
*       ANSWER('2 '||CMF2||'LAD BIT(64)') COLUMN(8); /*          @H2A*/ 08992200
*       IF CMF3A = CQCOMPLETE THEN  /* Initialize                @H2P*/ 09004000
*         ANSWER(CQINITIAL||'''00''X)'); /*                      @H2P*/ 09015800
*     END;                          /* Current level             @H2A*/ 09027600
*   ANSWER(',/*Logical address*/'); /*                           @L1P*/ 09039600
*   ANSWER('2 '||CMF2||'SEQ UNSIGNED BINARY(32)') COLUMN(8);            09078000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialize                @L1P*/ 09116400
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 09154800
*   ANSWER(',/*Sequence number of dump*/');                             09193200
*   IF CLVL = '1' THEN              /* Original level            @H2A*/ 09208500
*     ANSWER('2 * BIT(64)') COLUMN(8); /*                            */ 09223800
*   ELSE                            /* Current level                 */ 09239100
*     ANSWER('2 * BIT(32)') COLUMN(8); /*                        @H2A*/ 09254400
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 09270000
*     ANSWER(CQINITIAL||'''00''X)'); /* Reserved                     */ 09308400
*   ANSWER(',/*Reserved for data common to all dump records*/');        09346800
*   ANSWER('2 '||CMF2||'TYPD BIT(224)') COLUMN(8);                      09385200
*   IF CMF3A = CQCOMPLETE THEN      /* Initialize                @L1P*/ 09423600
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 09462000
*   ANSWER(',/*Record type specific data*/');                           09500400
*   ANSWER('2 '||CMF2||'999 CHARACTER(0),/*BLSRDRPX #MD98307*/') COLUMN 09550400
*       (8);                        /*                           @H3C*/ 09600400
*   ANSWER('/* '||REPEAT('=',63)||                                      09654000
*       ' */ /* Store Status Record (type C) Data'||REPEAT(' ',31)||    09692400
*       '*/ /* '||REPEAT('=',63)||' */ ') COLUMN(2);                    09730800
*   ANSWER('1 * BIT(LENGTH('||CMF2||'TYPD)) DEFINED('||CMF2||           09769200
*       'TYPD),/*Store status record data*/') COLUMN(7);                09807600
*   ANSWER('2 '||CMF2||'FLAGS BIT(8),/*Store status flags*/') COLUMN(8) 09846000
*       ;                                                               09884400
*   ANSWER('3 '||CMF2||'SSINV BIT(1),/*Store status may be invalid*/')  09922800
*       COLUMN(9);                                                      09961200
*   ANSWER('3 '||CMF2||                                                 09999600
*       'SIGPF BIT(1),/*SIGP Stop and Store Status failed.  The GPR '|| 10038000
*       'designated by the R1 field of the SIGP instruction is stored ' 10076400
*       ||'at offset X''110'' (PRDSIGPS) of the CPU status record.*/')  10114800
*       COLUMN(9);                                                      10153200
*   ANSWER('3 '||CMF2||                                                 10191600
*       'GPRVL BIT(1),/*GPRs valid despite invalid Store Status.*/')    10230000
*       COLUMN(9);                                                      10268400
*   ANSWER('3 '||CMF2||'BFP BIT(1),/*OS/390 R6 or later - BFP support*/'10278000
*       ) COLUMN(9);                /*                           @H1A*/ 10287600
*   ANSWER('3 '||CMF2||'BFPV BIT(1),/*FPRs valid in extended status*/') 10297200
*       COLUMN(9);                  /*                           @H1A*/ 10306800
*   ANSWER('3 '||CMF2||'BFPH BIT(1),/*Binary floating point hardware*/' 10316400
*       ) COLUMN(9);                /*                           @H1A*/ 10326000
*   ANSWER('3 * BIT(1),/*Reserved*/') COLUMN(9); /*              @H3C*/ 10345200
*   ANSWER('3 '||CMF2||'ESAME BIT(1),/*Status is in ESAME format*/')    10364400
*       COLUMN(9);                  /*                           @H3A*/ 10383600
*   ANSWER('2 * BIT(216),/*Reserved*/') COLUMN(8);                      10402800
*   ANSWER('/* '||REPEAT('=',63)||                                      10422000
*       ' */ /* Dump Header Record (type H) Data'||REPEAT(' ',32)||     10460400
*       '*/ /* '||REPEAT('=',63)||' */ ') COLUMN(2);                    10498800
*   ANSWER('1 * BIT(LENGTH('||CMF2||'TYPD)) DEFINED('||CMF2||           10537200
*       'TYPD),/*Dump header record data*/') COLUMN(7);                 10575600
*   ANSWER('2 '||CMF2||'DUMPT BIT(8),/*Dump type*/') COLUMN(8);         10614000
*   ANSWER('2 * BIT(216),/*Reserved*/') COLUMN(8);                      10652400
*   ANSWER(CMF2||'SADP BIT(8) CONSTANT(''01''X),/*Stand alone dump*/')  10690800
*       COLUMN(8);                                                      10729200
*   ANSWER(CMF2||'SVCDP BIT(8) CONSTANT(''02''X),/*SVC dump*/') COLUMN( 10767600
*       8);                                                             10806000
*   ANSWER(CMF2||'SMDP BIT(8) CONSTANT(''03''X),/*SYSMDUMP*/') COLUMN(8 10844400
*       );                                                              10882800
*   ANSWER(CMF2||'SLPDP BIT(8) CONSTANT(''04''X),/*SLIP dump*/') COLUMN 10921200
*       (8);                        /*                               */ 10959600
*   ANSWER('/* '||REPEAT('=',63)||                                      11036400
*       ' */ /* Storage Record (types A, CV, DS) Data'||REPEAT(' ',27)  11074800
*       ||'*/ /* '||REPEAT('=',63)||' */ ') COLUMN(2);                  11113200
*   ANSWER('1 * BIT(LENGTH('||CMF2||'TYPD)) DEFINED('||CMF2||           11151600
*       'TYPD),/*Storage record data*/') COLUMN(7);                     11190000
*   ANSWER('2 '||CMF2||'KEY BIT(8),/*Storage key for page*/') COLUMN(8) 11228400
*       ;                                                               11266800
*   ANSWER('3 '||CMF2||'KEYA BIT(4),/*Access-control code*/') COLUMN(9) 11305200
*       ;                                                               11343600
*   ANSWER('3 '||CMF2||'KEYF BIT(1),/*Fetch-protection indicator*/')    11382000
*       COLUMN(9);                                                      11420400
*   ANSWER('3 '||CMF2||'KEYU BIT(2),/*Page usage indicators*/') COLUMN( 11458800
*       9);                                                             11497200
*   ANSWER('4 '||CMF2||'KEYR BIT(1),/*Page referenced*/') COLUMN(10);   11535600
*   ANSWER('4 '||CMF2||'KEYC BIT(1),/*Page changed*/') COLUMN(10);      11574000
*   ANSWER('3 * BIT(1),/*Reserved*/') COLUMN(9);                        11612400
*   ANSWER('2 * BIT(40),/*Reserved for common fields*/') COLUMN(8);     11650800
*   ANSWER('2 '||CMF2||             /*                               */ 11689200
*       'TYPS BIT(176),/*Record type specific data*/') COLUMN(8);       11727600
*   ANSWER(CMF2||                                                       11766000
*       'KEYQ BIT(8) CONSTANT(''FF''X),/*Storage key not known*/')      11804400
*       COLUMN(7);                                                      11842800
*   ANSWER('/* '||REPEAT('=',63)||                                      11919600
*       ' */ /* Data Space Storage Record (type DS) Data.'||REPEAT(' ', 11958000
*       23)||'*/ ') COLUMN(2);      /*                           @H2C*/ 11983600
*   IF CLVL = '1' THEN              /* 31-bit support levels     @H2A*/ 12009200
*     ANSWER('/* The following supplements the ASID and Data Space '||  12034800
*         'information.'||REPEAT(' ',2)||'*/ ') COLUMN(2); /*    @H2A*/ 12060400
*   ANSWER('/* '||REPEAT('=',63)||' */ ') COLUMN(2); /*          @H2A*/ 12086000
*   ANSWER('1 * BIT(LENGTH('||CMF2||'TYPS)) DEFINED('||CMF2||           12111600
*       'TYPS),/*Data space storage record data*/') COLUMN(7);          12150000
*   ANSWER('2 * BIT(16),/*Reserved*/') COLUMN(8);                       12188400
*   IF CLVL = '1' THEN              /* 31-bit support levels     @H2A*/ 12211400
*     DO;                           /* 31-bit support levels     @H2A*/ 12234400
*       ANSWER('2 '||CMF2||                                             12257400
*           'ASTE POINTER(32),/*Absolute address of ASTE*/') COLUMN(8); 12280400
*       ANSWER('2 '||CMF2||'STOKN BIT(64),/*STOKEN*/') COLUMN(8);       12303400
*       ANSWER('2 * BIT(64),/*Reserved*/') COLUMN(8);                   12326400
*     END;                          /* 31-bit support levels     @H2A*/ 12349400
*   ELSE                            /* 64-bit support levels         */ 12372400
*     ANSWER('2 * BIT(160),/*Reserved*/') COLUMN(8); /*          @H2A*/ 12395400
*   ANSWER('/* '||REPEAT('=',63)||                                      12418800
*       ' */ /* Storage Record (type CV) Data.'||REPEAT(' ',34)||       12457200
*       '*/ /* '||REPEAT('=',63)||' */ ') COLUMN(2);                    12495600
*   ANSWER('1 * BIT(LENGTH('||CMF2||'TYPS)) DEFINED('||CMF2||           12534000
*       'TYPS),/*Storage record data*/') COLUMN(7);                     12572400
*   ANSWER('2 '||CMF2||'STYP BIT(8),/*Storage record data*/') COLUMN(8) 12610800
*       ;                                                               12649200
*   ANSWER('3 '||CMF2||'COMM BIT(1),/*Common area*/') COLUMN(9);        12687600
*   ANSWER('3 '||CMF2||'AAF BIT(1),/*Absolute address given*/') COLUMN( 12702000
*       9);                         /*                           @D1A*/ 12716400
*   ANSWER('3 * BIT(6),/*Reserved*/') COLUMN(9); /*              @D1C*/ 12730800
*   ANSWER('2 * BIT(8),/*Reserved*/') COLUMN(8); /*              @D1A*/ 12745200
*   IF CLVL = '1' THEN              /* 31-bit support levels     @H2A*/ 12749600
*     DO;                           /* 31-bit support levels     @H2A*/ 12754000
*       ANSWER('2 '||CMF2||'AAP POINTER(32),/*Absolute address*/')      12758400
*           COLUMN(8);              /*                           @D1A*/ 12762800
*       ANSWER('2 * BIT(128);/*Reserved*/') COLUMN(8); /*        @D1C*/ 12767200
*     END;                          /* 31-bit support levels     @H2A*/ 12771600
*   ELSE                            /* 64-bit support levels         */ 12776000
*     DO;                           /* 64-bit support levels     @H2A*/ 12780400
*       ANSWER('2 '||CMF2||'AAP BIT(64),/*Absolute address*/') COLUMN(8 12784800
*           );                      /*                           @H2A*/ 12789200
*       ANSWER('2 * BIT(96);/*Reserved*/') COLUMN(8); /*         @H2A*/ 12793600
*     END;                          /* 64-bit support levels     @H2A*/ 12798000
*   IF EHBRC > 8 THEN               /* Serious error(s) detected @L1P*/ 12802800
*ERREXIT:                           /* Error exit                @L1P*/ 12850000
*     ANSWER(';/*BLSRDRPX'||MACLIST||' '||MACKEYS||' #MD98307*/')       12900000
*         COLUMN(5);                /* Force new statement       @H3C*/ 12950000
*   ANSWER('?BLR003(BLSRDRPX,'||CHAR(EHBRC)||');');                     13000000
*   RETURN CODE(EHBRC);             /*                           @L1P*/ 13050000
*   %END BLSRDRPX;                  /* Dump record prefix            */ 13100000
