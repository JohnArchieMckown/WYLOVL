*                                                                       00100000
* %DCL IGVGQE_INCLUDED CHAR EXT;                                        00104100
* %DEACTIVATE IGVGQE_INCLUDED;                                          00108200
* %IF IGVGQE_INCLUDED = '' %THEN                                        00112300
* %DO;                                                                  00116400
*/* Macro made bi-lingual on 92210. CBGEN compile date 92093         */ 00120500
*% /*                                                                   00124600
         MACRO                                                          00128700
         IGVGQE &DSECT=YES,&LIST=YES,&GQE=YES                           00132800
         GBLC  &IGVGQE_INCLUDED                                         00136900
         GBLC  &ZCBPRINT                                                00141000
&IGVGQE_INCLUDED SETC 'YES'                                             00145100
 TITLE   '&SYSECT  IGVGQE - GETMAINed Queue Element.                   *00149200
                    '                                                   00153300
**/ IGVGQE_1:;                                                          00157400
*/****START OF SPECIFICATIONS*****************************************  00161500
*                                                                       00165600
*01* MACRO-NAME: IGVGQE                                                 00169700
*                                                                       00173800
*01* DESCRIPTIVE-NAME: GETMAINed Queue Element.                         00177900
*                                                                       00182000
*02*   ACRONYM: GQE                                                     00186100
*                                                                       00190200
*01*   DSECT-NAME: GQE                                                  00194300
*                                                                       00200000
*                                                                    */ 00250000
*/*01* PROPRIETARY STATEMENT=                                        */ 00300000
*/***PROPRIETARY_STATEMENT********************************************/ 00350000
*/*                                                                  */ 00400000
*/*                                                                  */ 00450000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00500000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00550000
*/* 5695-047 (C) COPYRIGHT IBM CORP. 1992                            */ 00600000
*/* SEE COPYRIGHT INSTRUCTIONS                                       */ 00650000
*/*                                                                  */ 00700000
*/* STATUS= HBB4430                                                  */ 00750000
*/*                                                                  */ 00800000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00850000
*/*                                                                     00900000
*                                                                       00950000
*01* COMPONENT: Virtual Storage Manager (SC1CH)                         00955800
*                                                                       00961600
*01* EYE-CATCHER: None                                                  00967400
*02*   OFFSET: N/A                                                      00973200
*02*   LENGTH: N/A                                                      00979000
*                                                                       00984800
*01* STORAGE ATTRIBUTES:                                                00990600
*02*   SUBPOOL:  245                                                    00996400
*02*   KEY:  0                                                          01002200
*02*   RESIDENCY: Above 16M                                             01008000
*                                                                       01013800
*01* METHOD OF ACCESS:                                                  01019600
*02*   ASM: IGVGQE                                                      01025400
*02*   PL/AS: %INCLUDE SYSLIB(IGVGQE)                                   01031200
*                                                                       01037000
*01* FUNCTION =                                                         01042800
* Describes a range of virtual storage that was allocated by a single   01050000
* GETMAIN or STORAGE OBTAIN.  These blocks, in concert with the CAUB,   01100000
* are used to identify who owns every chunk of GETMAINed common         01133300
* storage.                                                              01166600
*                                                                       01200000
*01* CREATED BY = IGVGCSA, IGVGSQA                                      01250000
*                                                                       01300000
*01* DELETED BY =  IGVFCSA, IGVFSQA                                     01350000
*                                                                       01400000
*01* POINTED TO BY:                                                     01425000
*      GqeNext                                                          01450000
*      GqatGQE                                                          01475000
*                                                                       01500000
*01* SIZE = X'0018' Bytes                                               01525000
*                                                                       01550000
*01* STORAGE ESTIMATE =                                                 01575000
*   One per contigious range of virtual storage in the common area      01600000
*   (SQA or CSA) that was obtained by a single GETMAIN or STORAGE       01650000
*   OBTAIN.                                                             01700000
*                                                                       01750000
*01* SERIALIZATION =                                                    01755800
*02*  When writing to the GQE, VSM uses the VSMFIX lock.                01761600
*                                                                       01767400
*02*  When monitor programs read the GQE, it would be best to do        01773200
*     so with no serialization.  (This is because holding the lock      01779000
*     could impact system performance.)  Note that this means that      01785400
*     the GQE could be freemained while being read.  The GQE may        01791800
*     also be put on the queue of free GQEs while being read, and       01798200
*     a GQE may appear to be "out of range" (i.e., it describes         01804600
*     storage outside the range of storage described by the             01811000
*     anchoring GQAT entry).  Monitors will need to handle this         01817400
*     (e.g., a recovery routine could catch the reference to a          01823800
*     freemained GQE, and encountering a GQE that is "out of            01830200
*     range" or on the free queue could be taken as the end of the      01837000
*     queue being run.)  A GQE on the free queue has a size of 0.       01842800
*                                                                       01850000
*01* NOTES =                                                            01900000
*   -*- There is lots more detail in the CAUB about how CSA tracking    02050000
*       works.                                                          02100000
*   -*- Any PL/X module that includes the GQE must be compiled by       02150000
*       PL/X-370 V01 Rel 2.0 or higher.  PL/AS is not supported.        02200000
*                                                                       02350000
*01* CHANGE ACTIVITY =                                                  02400000
*        $L0=TCSAU  ,HBB4430,901101,PDF5:  Track CSA/SQA use by ASID    02450000
*        $D1=DKB0007,HBB4430,911204,PDXB:  Add bit that distinguishes   02466600
*                    CSA from SQA, and exploit PL/X Types.              02483200
*        $D2=DKB0027,HBB4430,920318,PDF5:  Add a timestamp and make the 02487400
*                    mapping bilingual so the GQE can be used by        02491600
*                    vendors who write monitor programs.                02495800
*                                                                       02500000
*****END OF SPECIFICATIONS********************************************/ 02550000
*% /*                                                                   02600000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 02650000
         AIF   ('&LIST' EQ 'YES').P2                                    02700000
.P1      ANOP                                                           02750000
         PUSH  PRINT                                                    02800000
         PRINT OFF                                                      02850000
.P2      ANOP                                                           02900000
         AIF   ('&GQE' EQ 'NO').L0002                                   02950000
         AIF   ('&DSECT' EQ 'YES').L0003                                03000000
         AIF   ('&GQE' NE 'YES').L0002                                  03050000
GQE      DS    0F        Common area GETMAINed element.                 03100000
         AGO   .L0004                                                   03150000
.L0003   ANOP                                                           03200000
GQE      DSECT ,         Common area GETMAINed element.                 03250000
.L0004   ANOP                                                           03300000
GQE_NEXT DS    1AL4      Address of the next GQE.                       03350000
GQE_GMTIME DS  1FL4      High order 4 bytes of the TOD clock when the  *03400000
                         storage was obtained. Last bit incremented    *03450000
                         every second (approx), 00000000 = Jan 1,      *03500000
                         1900.                                          03550000
GQE_CAUB DS    1AL4      Address of the CAUB describing the address    *03600000
                         space that owns the storage pointed to by     *03650000
                         GQE_Area.                                      03700000
GQE_AREA DS    0AL4      Start address of the allocated area.           03750000
GQE_AREA_BITS0TO15 DS 1FL2 64K boundary index                           03800000
         ORG   GQE_AREA+X'00000004'                                     03850000
GQE_SIZE DS    1FL4      Length of the allocated area, in bytes. This  *03900000
                         will never be negative. If this field is      *03925000
                         zero, then this GQE is on the free queue, and *03950000
                         is thus not a valid GQE.                       03975000
GQE_RETADDR DS 0AL4      The GETMAIN that obtained the storage         *04000000
                         described by this GQE returned to this        *04050000
                         address. This is here because we think that   *04100000
                         it will help identify the module and thus the *04150000
                         component that did the GETMAIN. 'FFFFFFFF'X   *04200000
                         here means that this GQE describes storage    *04250000
                         that was allocated before GETMAIN was         *04300000
                         available.                                     04350000
GQE_RETADDR_BYTE0 DS 1BL.008                                            04400000
GQE_RETADDR_BYTES1AND2 DS 1BL.016                                       04450000
GQE_RETADDR_BYTE3 DS 0BL.008                                            04500000
GQE_CSA  EQU   X'01'     If on, indicates that this is a GQE for CSA   *04550000
                         storage. If off, SQA storage. Instructions    *04600000
                         are on halfword boundaries, so the last bit   *04650000
                         of the return address is always zero, so we   *04700000
                         can use it without really destroying the      *04750000
                         return address.                                04800000
         ORG   GQE_RETADDR+X'00000004'                                  04850000
GQE_LEN  EQU   *-GQE                                                    04900000
.L0002   ANOP                                                           04950000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 05000000
         AIF   ('&LIST' EQ 'YES').P4                                    05050000
.P3      ANOP                                                           05100000
         POP   PRINT                                                    05150000
.P4      ANOP                                                           05200000
.P_EXIT  ANOP                                                           05250000
         MEND                                                           05300000
**/ IGVGQE_2:;                                                          05350000
* %IGVGQE_INCLUDED = 'YES';                                             05400000
* %DCL ZCBPRINT CHAR EXT;                                               05450000
* %DEACTIVATE ZCBPRINT;                                                 05500000
* %DCL IGVGQE_LIST CHAR EXT;                                            05550000
* %DEACTIVATE IGVGQE_LIST;                                              05600000
* %IF IGVGQE_LIST ^= 'NO' &                                             05650000
*    ZCBPRINT ^= 'NO' %THEN                                             05700000
*   %GOTO IGVGQE_3;                                                     05750000
*   @LIST PUSH NOECHO;                                                  05800000
*   @LIST NOASSEMBLE NOECHO;                                            05850000
*   @LIST OFF C NOECHO;                                                 05900000
* %IGVGQE_3:;                                                           05950000
*/* Start of PL/X Source                                             */ 06000000
*@EJECT;                                                                06050000
*                                                                       06100000
*@LOGIC;                                                                06150000
*#PRAGMA TOOL=CBGEN.                                                    06200000
*#DELETE.AGQE                                                           06250000
*#EPRAGMA.                                                              06300000
*@ENDLOGIC;                                                             06350000
*                                                                       06400000
*DCL aGqe IsA (Gqe) BASED;    /*                                 @D1A*/ 06450000
*DCL 1  Gqe TYPE,             /* Common area GETMAINed element.         06500000
*                                                                    */ 06550000
*      3 GQE_Next    Ptr(31), /* Address of the next GQE.               06600000
*                                                                    */ 06650000
*      3 GQE_GMTime  Fixed(32),  /* High order 4 bytes of the TOD       06700000
*                                clock when the storage was obtained.   06750000
*                                Last bit incremented every second      06800000
*                                (approx),                              06850000
*                                00000000 = Jan 1, 1900.                06900000
*                                                                @D2C*/ 06950000
*      3 GQE_CAUB    Ptr(31), /* Address of the CAUB describing         07000000
*                                the address space that owns the        07050000
*                                storage pointed to by GQE_Area.        07100000
*                                                                    */ 07150000
*      3 GQE_Area Ptr(31),    /* Start address of the allocated area.   07200000
*                                                                    */ 07250000
*        5 GQE_Area_Bits0to15 Fixed(15),  /* 64K boundary index      */ 07300000
*      3 GQE_Size Fixed(32),  /* Length of the allocated area, in       07350000
*                                bytes.  This will never be negative.   07400000
*                                If this field is zero, then this GQE   07412500
*                                is on the free queue, and is thus not  07425000
*                                a valid GQE.                           07437500
*                                                                    */ 07450000
*      3 GQE_RetAddr Ptr(31), /* The GETMAIN that obtained the          07500000
*                                storage described by this GQE          07550000
*                                returned to this address.  This is     07600000
*                                here because we think that it will     07650000
*                                help identify the module and thus      07700000
*                                the component that did the GETMAIN.    07750000
*                                'FFFFFFFF'X here means that this       07800000
*                                GQE describes storage that was         07850000
*                                allocated before GETMAIN was           07900000
*                                available.                             07950000
*                                                                    */ 08000000
*        4 GQE_RetAddr_Byte0 BIT(8),                                    08050000
*        4 GQE_RetAddr_Bytes1and2 BIT(16),                              08100000
*        4 GQE_RetAddr_Byte3 BIT(8),                                    08150000
*          5 * BIT(7),        /* Bits of the return address      @D1A*/ 08200000
*          5 GQE_CSA BIT(1),  /* If on, indicates that this is a GQE    08250000
*                                for CSA storage.  If off, SQA          08300000
*                                storage.  Instructions are on halfword 08350000
*                                boundaries, so the last bit of the     08400000
*                                return address is always zero, so we   08450000
*                                can use it without really destroying   08500000
*                                the return address.                    08550000
*                                                                @D1A*/ 08600000
*      3 * Char(0);                                                     08650000
*/* End of PL/X Source                                               */ 08700000
* %IF IGVGQE_LIST ^= 'NO' &                                             08750000
*    ZCBPRINT ^= 'NO' %THEN                                             08800000
*   %GOTO IGVGQE_4;                                                     08850000
*   @LIST POP NOECHO;                                                   08900000
* %IGVGQE_4:;                                                           08950000
* %END;                                                                 09000000
