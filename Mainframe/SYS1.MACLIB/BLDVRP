         MACRO                                                          00050000
&NAME    BLDVRP &TYPE=,&FIX=,&KEYLEN=,&STRNO=,&BUFFERS=,&MF=I,     @L3CX00050100
               &SHRPOOL=,&LOC=,&MODE=24,&RMODE31=                  @LPC 00050200
.*                                                                      00050300
.* $MAC(BLDVRP) COMP(SC1DE):                                            00050400
.*                                                                      00050500
.*PROPRIETARY V3 STATEMENT                                              00050600
.*LICENSED MATERIALS - PROPERTY OF IBM                                  00050700
.*"RESTRICTED MATERIALS OF IBM"                                         00050800
.*5695-DF1                                                              00050900
.*(C) COPYRIGHT 1983,1989  IBM CORP.                                    00051000
.*END PROPRIETARY V3 STATEMENT                                          00051100
.*                                                                      00051300
.* STATUS = DFSMS/MVS VERSION 1 RELEASE 4.0                       @LMC  00051400
.*                                                             @AZ84070 00051500
.*                                       JDP1110 UZ78369                00051600
.* $L3=DFP,JDP1110,,STLJRB: MVS/XA DFP RELEASE 1.1 VSAM 31-BIT     @L3A 00051700
.* $L7=DFP,HDP2230,,STLLLL: MVS/XA DFP RELEASE 2.3.0 - DATA/INDEX LSR   00051800
.* $L9=DFP,HDP2230,,STLJRB: MVS/XA DFP RELEASE 2.3   VSAM 31-BIT   @L9A 00051900
.* N*512                                                       @AZ97998 00052000
.* $LP=DFP,HDP2230,,STLJTP: MVS/XA DFP RELEASE 2.3 31/24 BIT       @LPA 00052100
.* APAR TO SHIP 31/24 BIT CODE                                 @YA03564 00052200
.* $LA=DFP,HDP3310,,STLLLL: MVS/XA DFP RELEASE 3.1.0 BFR MGR HASH  @LAA 00052300
.* APAR TO SHIP BUFFER HASHED SEARCH SPE                   $LA=@YA07931 00052400
.* $VH=DFP,HDP3310,,STLDKT: MVS/XA DFP RELEASE 3.1.0 HIPERSPACE    @VHA 00052500
.* $LM=DFP,HDP3320,,STLMWH: MVS/XA DFP RELEASE 3.2.0 VSAM-IMS INTERFACE 00052600
.* BLPGFLG INCORRECTLY SET WHEN EXECUTE FORM OF MACRO IS CODED @YA13510 00052700
.* RMODE31/LOC INVALIDLY RESET ON EXECUTE FORM                 @YA12937 00052800
.* & SIGN OMITTED FROM TYPE PARAMETER                          @YA32166 00052900
.* BUFFER TOKENS (BUFRTK) NOT PROPERLY INITIALIZED             @YA35085 00053000
.* $LX=DFSMS,HDZ11D0,08/16/96,SJPLJRB: SYSTEM MANAGED BUFFERS      @LXA 00053100
.*                                                                      00053200
         LCLA  &ORCODE                  CODES TO BE TURNED ON IN LIST   00053300
         LCLA  &ANDCODE                 CODES TO BE TURNED OFF IN LIST  00053400
         LCLA  &POOL                    SHRPOOL KEYWORD VALUE      @L3A 00053500
         LCLA  &H,&I,&J,&K,&L,&M        WORK VARIABLES             @LMC 00053600
         LCLA  &DISP                    DISPLACEMENT TO ACB    @AZ84070 00053700
         LCLA  &HBFRS(50)               H-S BUFFER TABLE           @VHA 00053800
         LCLB  &MFE                     EXECUTE FORM INDICATOR          00053900
         LCLB  &TOKFND                  BPSH TOKEN FLAG            @LMA 00054000
         LCLB  &ERR                     ERROR INDICATOR                 00054100
         LCLB  &FIOB                    FIX IO RELATED BLOCKS IND       00054200
         LCLB  &FBFR                    FIX BUFFERS INDICATOR           00054300
         LCLB  &BFR                     BUFFER SPECIFIED INDICATOR      00054400
         LCLB  &R31B                    BUFFERS ABOVE THE LINE     @LPA 00054500
         LCLB  &R31C                    CONTROL BLOCKS ABOVE       @LPA 00054600
         LCLB  &INXPOOL                 ON IF INDEX RESOURCE POOL  @L7A 00054700
         LCLB  &HSSIZE                  ON IF VALID SIZE FOR H-S   @VHA 00054800
         LCLC  &BUFRSZ(50)              BUFFER SIZE TABLE               00054900
         LCLC  &BUFRCT(50)              BUFFER COUNT TABLE              00055000
         LCLC  &HBFRCT(50)              H-S BUFFER COUNT TABLE     @VHA 00055100
         LCLC  &BUFRTK(50)              BUFFER TOKEN TABLE         @LMA 00055200
         LCLC  &EREG                    EXECUTE FORM LIST ADDR REG      00055300
         LCLC  &LAB                     ACB LABEL              @AZ84070 00055400
         LCLC  &AMODE                   ADDRESSING MODE OF MACRO   @L9A 00055500
.*                                                                 @L9D 00055600
&ORCODE  SETA  128+64                   INDICATE DB/DC AND BLDVRP       00055700
&ANDCODE SETA  255-32                   RESET DLVRP                     00055800
&DISP    SETA  4                        DEFAULT TO 0           @AZ84070 00055900
&AMODE   SETC   '&MODE'                 SET MODE                   @L9A 00056000
         AIF   ('&MODE' NE '').MODECHK                             @L9A 00056100
&AMODE   SETC  '24'                     SET AMODE DEFAULT TO 24    @L9A 00056200
         AGO   .MODEOK                                             @L9A 00056300
.MODECHK AIF   ('&MODE' EQ '24' OR '&MODE' EQ '31' OR T'&MODE EQ 'O').MX00056400
               ODEOK                                               @L9A 00056500
         IDAERMAC 3,MODE,&MODE          MODE MUST BE 24 OR 31      @L9A 00056600
.MODEOK  ANOP                                                      @L9A 00056700
         AIF   ('&AMODE' EQ '24').NO4   DISP=4 FOR MODE=24         @L9A 00056800
&DISP    SETA  8                        CHANGE TO DISPL = 8        @L9A 00056900
.NO4     ANOP                                                      @L9A 00057000
&LAB     SETC  'IDAB&SYSNDX.'           GETNERATE ACB LABEL    @AZ84070 00057100
&POOL    SETA  0                        DEFAULT TO POOL ID 0       @L3A 00057200
&R31B    SETB  0                        DEFAULT BUFFERS BELOW      @LPA 00057300
&R31C    SETB  0                        DEFAULT CBS BELOW          @LPA 00057400
&INXPOOL SETB  0                        DEFAULT TO DATA POOL       @L7A 00057500
.*                                                                 @L9D 00057600
         AIF   (N'&SYSLIST EQ 0).NOPOS  GO IF NO POSITIONAL OPERANDS    00057700
.POSLOOP ANOP                                                           00057800
&I       SETA  &I+1                     POINT TO NEXT POS OPERAND       00057900
         IDAERMAC 1,&SYSLIST(&I)        ISSUE WARNING MNOTE             00058000
         AIF   (&I LT N'&SYSLIST).POSLOOP  GO IF MORE POS OPERANDS      00058100
.NOPOS   ANOP                                                           00058200
         AIF   ('&MF' EQ 'I').MFB       GO IF STANDARD FORM             00058300
         AIF   ('&MF' EQ 'L').MFB       GO IF LIST FORM                 00058400
         AIF   (N'&MF LT 2).MFERR       GO IF NOT ENOUGH PARMS          00058500
         AIF   ('&MF(1)' NE 'E').MFERR  GO IF NOT EXECUTE FORM          00058600
&MFE     SETB  1                        INDICATE EXECUTE FORM           00058700
         AGO   .MFB                     GO AROUND ERROR                 00058800
.MFERR   ANOP                                                           00058900
         IDAERMAC 3,MF,&MF              ISSUE ERROR MNOTE               00059000
&ERR     SETB  1                        INDICATE ERROR                  00059100
.MFB     ANOP                                                           00059200
         AIF   ('&TYPE(1)' NE '').TOKY  GO IF TYPE IS SPECIFIED    @L7C 00059300
         AIF   (&MFE).TYPEB             GO IF EXECUTE FORM              00059400
         AGO   .TLSR                    GO TAKE DEFAULT                 00059500
.TOKY    ANOP                                                           00059600
         AIF   ('&TYPE(1)' NE 'LSR').TLSRB GO IF NOT LOCALY SHARED @L7C 00059700
.TLSR    ANOP                                                           00059800
&ORCODE  SETA  &ORCODE+16               INDICATE LOCALLY SHARED         00059900
&ANDCODE SETA  &ANDCODE-8               RESET GLOBALLY SHARED           00060000
         AGO   .TYPEB                   GO AROUND TYPE(1) ANALYSIS      00060100
.TLSRB   ANOP                                                           00060200
         AIF   ('&TYPE(1)' NE 'GSR').TGSRB GO IF NOT GLOBALY SHARED@L7C 00060300
&ORCODE  SETA  &ORCODE+8                INDICATE GLOBALLY SHARED        00060400
&ANDCODE SETA  &ANDCODE-16              RESET LOCALLY SHARED            00060500
         AGO   .TYPEB                   GO AROUND TYPE ANALYSIS         00060600
.TGSRB   ANOP                                                           00060700
         IDAERMAC 3,TYPE,&TYPE(1)       ISSUE ERROR MNOTE               00064800
         MNOTE '        ***FIRST ITEM FOR THE TYPE KEYWORD MUST BE LSR,X00070900
                GSR, OR UNSPECIFIED'                               @L7A 00077000
&ERR     SETB  1                        INDICATE ERROR                  00083100
         AGO   .CONTIN                  GO CHECK OTHER KEYWORDS    @L7A 00089200
.TYPEB   ANOP                           CHECK IF LSR OR GSR        @LPC 00093200
         AIF   ('&TYPE(1)' EQ 'GSR').TYPEGSR GO IF GSR             @L7C 00097200
.*                                                                      00099200
.***************************************************************** @LPA 00101200
.*   LSR PROCESSING                                                @LPA 00105200
.*     TYPE=(LSR,DATA) IS DEFAULT IF TYPE IS NOT SPECIFIED.        @LPC 00109200
.*     CHECK DATA OR INDEX (CAN ONLY BE SPECIFIED FOR LSR).        @LPC 00113200
.***************************************************************** @LPA 00117200
.TYPELSR AIF   ('&TYPE(2)' EQ '' OR '&TYPE(2)' EQ 'DATA').CONTIN   @L7A 00121200
         AIF   ('&TYPE(2)' EQ 'INDEX').INDEX                       @L7A 00125800
         IDAERMAC  19,LSR,&TYPE(2)      INCOMPATIBLE PARAMETERS    @L7A 00131900
&ERR     SETB  1                        INDICATE ERROR             @L7A 00138000
         AGO   .CONTIN                  GO CHECK OTHER KEYWORDS    @L7A 00141500
.INDEX   ANOP                                                      @L7A 00145000
&INXPOOL SETB  1                        TYPE=INDEX WAS SPECIFIED   @L7A 00149500
.CONTIN  ANOP                                                      @L7A 00154000
.*                                                                 @LPA 00179200
.***************************************************************** @LPA 00204400
.*   CHECK IF SHRPOOL SPECIFED.  IF SO, EITHER RMODE31 OR LOC      @LPC 00229600
.*   MUST ALSO BE SPECIFIED.  RMODE31 OR LOC WITHOUT LSR IN ERROR  @LPA 00254800
.***************************************************************** @LPA 00280000
         AIF  (&MFE).TYPEL1                     GO IF EXECUTE FORM @LPC 00305200
         AIF  ((T'&SHRPOOL EQ 'O') AND ((T'&LOC NE 'O') OR             X00330400
               (T'&RMODE31 NE 'O'))).LSRERR                        @LPA 00355600
         AIF  ((T'&SHRPOOL NE 'O') AND ((T'&LOC EQ 'O') AND            X00380800
               (T'&RMODE31 EQ 'O'))).LSRERR                        @LPA 00406000
.TYPEL1  AIF  (NOT((T'&RMODE31 NE 'O') AND (T'&LOC NE 'O'))).TYPEL2 LPA 00431200
         IDAERMAC 26,LOC                                           @LPA 00456400
         AGO  .TYPEL2                IGNORE DUP PARMS AND CONTINUE @LPA 00481600
.LSRERR  IDAERMAC 21,SHRPOOL,RMODE31       BOTH SHRPOOL & (LOC OR  @LPC 00506800
&ERR     SETB   1                          RMODE31) REQUIRED.      @LPC 00532000
.*                                                                 @LPA 00557200
.*     CHECK SHRPOOL VAULE                                         @LPA 00582400
.*                                                                 @LPA 00607600
.TYPEL2  AIF   (T'&SHRPOOL EQ 'O').TYPEL3 WASN'T SHRPOOL SPECIFIED?@L3A 00632800
&POOL    SETA  &SHRPOOL(1)              YES, GET SHRPOOL VALUE     @L3A 00659000
         AIF   (&POOL LE 255).TYPEL3    MAX SHRPOOL = 255          @LXC 00671500
         IDAERMAC 3,SHRPOOL,&POOL                                  @L9A 00684000
&ERR     SETB   1                                                  @L9A 00696500
.*                                                                 @LPA 00707000
.*     CHECK THE LOC PARAMETER (IF NO RMODE31 SPECIFIED)           @LPA 00717500
.*                                                                 @LPA 00728000
.TYPEL3  ANOP                                                      @LPA 00738500
         AIF  ((T'&LOC EQ 'O') OR (T'&RMODE31 NE 'O')).TYPEL4      @LPA 00749000
         AIF  (('&LOC' NE 'ANY') AND ('&LOC' NE 'BELOW')).TYPEL3E  @LPC 00759500
&R31B    SETB ('&LOC' EQ 'ANY')       LOC=ANY SAME AS RMODE31=BUFF @LPC 00770000
         AGO   .PART2                   GO AROUND RMODE ANALYSIS   @LPC 00780500
.TYPEL3E IDAERMAC 3,LOC,&LOC            INVALID LOC VALUE          @L9C 00791000
&ERR     SETB   1                                                  @LPC 00801500
         AGO  .PART2                                               @LPC 00812000
.*                                                                 @LPA 00822500
.*     CHECK THE RMODE31 PARAMETER                                 @LPA 00833000
.*                                                                 @LPA 00843500
.TYPEL4  ANOP                                                      @LPA 00854000
         AIF  (T'&RMODE31 EQ 'O').PART2      RMODE31 NOT SPECIFIED @LPA 00864500
         AIF  ('&RMODE31' EQ 'NONE').PART2   RMODE31 IS A NO-OP    @LPA 00875000
         AIF  ('&RMODE31' NE 'ALL').MODE31B                        @LPA 00885500
&R31B    SETB  1                                                   @LPA 00896000
&R31C    SETB  1                                                   @LPA 00906500
         AGO   .PART2                   NEXT TRY TYPE ANALYSIS     @LPA 00917000
.MODE31B AIF  ('&RMODE31' NE 'BUFF').MODE31C                       @LPA 00927500
&R31B    SETB  1                                                   @LPA 00938000
         AGO   .PART2                   NEXT TRY TYPE ANALYSIS     @LPA 00948500
.MODE31C AIF  ('&RMODE31' NE 'CB').MODE31D                         @LPA 00959000
&R31C    SETB  1                                                   @LPA 00969500
         AGO   .PART2                   NEXT TRY TYPE ANALYSIS     @LPA 00980000
.MODE31D IDAERMAC 3,RMODE31,&RMODE31    GOT HERE, INVALID VALUE    @LPA 00990500
&ERR     SETB  1                        INDICATE ERROR             @LPA 01001000
         AGO   .PART2                   NEXT TRY TYPE ANALYSIS     @LPA 01011500
.*                                                                      01016700
.***************************************************************** @LPA 01022000
.*   PROCESSING GSR                                                @LPA 01032500
.***************************************************************** @LPA 01043000
.TYPEGSR ANOP                                                      @L3A 01053500
         AIF   ('&TYPE(2)' EQ '').CHKSHR GSR AND NO 2ND TYPE ENTRY @L7A 01067300
         IDAERMAC  19,GSR,&TYPE(2)     BAD: GSR AND 2ND TYPE ENTRY @L7A 01075600
         MNOTE '       ***GSR MUST NOT BE FOLLOWED BY ANY SUBLIST ITEM' 01083900
.*                                                                 @L7A 01092200
&ERR     SETB  1                        INDICATE ERROR             @L7A 01100500
.*                   SHRPOOL AND LOC KEYWORDS INVALID WITH GSR     @L3A 01109000
.CHKSHR  AIF   (T'&SHRPOOL EQ 'O').TYPEG1 SHRPOOL INVALID WITH GSR @L7C 01159000
         MNOTE 4,'***IDA011 SHRPOOL IS NOT A VALID KEYWORD WITH THE TYPX01209000
               E=GSR KEYWORD - IGNORED'                            @L9C 01259000
.TYPEG1  ANOP                                                      @L3A 01309000
         AIF   (T'&LOC EQ 'O').TYPEG2     SHRPOOL INVALID WITH GSR @L3A 01359000
         MNOTE 4,'***IDA011 LOC IS NOT A VALID KEYWORD WITH THE TYPE=GSX01409000
               R KEYWORD - IGNORED'                                @L3A 01459000
.TYPEG2  ANOP                                                      @L3A 01475600
         AIF   (T'&RMODE31 EQ 'O').PART2  RMODE31 INVALID WITH GSR @LPA 01492200
         MNOTE 4,'***IDA011 RMODE31 IS NOT A VALID KEYWORD WITH THE TYPX01508800
               E=GSR KEYWORD - IGNORED'                            @LPA 01525400
.*                                                                      01533700
.***************************************************************** @LPA 01542000
.*  CHECK NON-LSR/GSR RELATED PARAMETERS                           @LPA 01558600
.***************************************************************** @LPA 01575200
.PART2   ANOP                                                      @L3A 01591800
         AIF   ('&FIX' EQ '').FIXB      GO IF FIX NOT SPECIFIED         01609000
&ANDCODE SETA  &ANDCODE-6               RESET FIX IO BLOCKS AND BUFFERS 01659000
&I       SETA  0                        INIT FIX SUBLIST SUBSCRIPT      01709000
.FIXL    ANOP                                                           01759000
&I       SETA  &I+1                     POINT TO NEXT ENTRY IN SUBLIST  01809000
         AIF   (&I GT N'&FIX).FIXB      GO IF NO MORE ENTRIES           01859000
         AIF   ('&FIX(&I)' EQ '').FIXL  GO IF NULL ENTRY                01909000
         AIF   ('&FIX(&I)' NE 'IOB').FIOBB  GO IF NOT IO BLOCKS         01959000
         AIF   (&FIOB).FERR             GO IF IO BLOCKS ALREADY SPECD   02009000
&FIOB    SETB  1                        INDICATE FIX                    02059000
&ORCODE  SETA  &ORCODE+4                ..I/O BLOCKS SPECIFIED          02109000
         AGO   .FIXL                    GO CHECK NEXT ENTRY             02159000
.FIOBB   ANOP                                                           02209000
         AIF   ('&FIX(&I)' NE 'BFR').FBFRB  GO IF NOT BUFFERS           02259000
         AIF   (NOT &FBFR).FERRB        GO IF BUFFERS NOT ALREADY SPECD 02309000
.FERR    ANOP                                                           02359000
         IDAERMAC 8,FIX,&FIX(&I),&FIX(&I)  ISSUE ERROR MNOTE            02409000
&ERR     SETB  1                        INDICATE ERROR                  02459000
         AGO   .FIXL                    GO CHECK NEXT ENTRY             02509000
.FERRB   ANOP                                                           02559000
&FBFR    SETB  1                        INDICATE FIX                    02609000
&ORCODE  SETA  &ORCODE+2                ..BUFFERS SPECIFIED             02659000
         AGO   .FIXL                    GO CHECK NEXT ENTRY             02709000
.FBFRB   ANOP                                                           02759000
         IDAERMAC 3,FIX,&FIX(&I)        ISSUE ERROR MNOTE               02809000
&ERR     SETB  1                        INDICATE ERROR                  02859000
         AGO   .FIXL                    GO CHECK NEXT ENTRY             02909000
.FIXB    ANOP                                                           02959000
         AIF   ('&MF' NE 'I').STRNOB    GO IF NOT STANDARD FORM         03009000
.*                                                                      03023200
.***************************************************************** @LAA 03037400
.*  CHECK STRNO -- ERROR IF TYPE=DATA AND NO STRNO SPECIFIED       @LAA 03051600
.***************************************************************** @LAA 03065800
         AIF   (('&STRNO' NE '') OR ('&TYPE(2)' EQ 'INDEX')).STRNOB     03080000
.*                                                                 @LAC 03094200
         IDAERMAC 2,STRNO               ISSUE ERROR MNOTE               03109000
&ERR     SETB  1                        INDICATE ERROR                  03159000
.*                                                                      03184000
.STRNOB  ANOP                                                           03209000
         AIF   (&MFE).BUFRO             GO IF EXECUTE FORM              03259000
&J       SETA  0                        INIT BUFFER SIZE/CNT SUBSCRIPT  03309000
         AIF   ('&BUFFERS' NE '').BOKY  GO IF BUFFERS SPECIFIED         03359000
         IDAERMAC 2,BUFFERS             ISSUE ERROR MNOTE               03409000
&ERR     SETB  1                        INDICATE ERROR                  03459000
         AGO   .BUFRB1                  GO AROUND BUFFERS ANALYSIS      03509000
&H       SETA  0                        NUMBER H-S BUFFERS         @VHA 03534000
.BOKY    ANOP                                                           03559000
&I       SETA  0                        INIT BUFFERS SUBLIST SUBSCRIPT  03609000
.BUFRL10 ANOP                                                           03659000
&J       SETA  &J+1                     POINT TO NEXT BUFFER SIZE/COUNT 03709000
.BUFRL11 ANOP                                                           03759000
&I       SETA  &I+1                     POINT TO NEXT ENTRY IN SUBLIST  03809000
.*                                                                      03816100
.*     GENERAL NOTE: THE COUNT ATTRIBUTE (K') IS THE NUMBER OF CHARS    03823200
.*     IN ANY MACRO OPERAND; THE NUMBER ATTRIBUTE (N') IS THE NUMBER    03830300
.*     OF SUBLIST ENTRIES IN THE MACRO OPERAND WHERE SUBLIST ITEMS      03837400
.*     ARE SEPARATED BY A COMMA.                                   @LMA 03844500
.*                                                                      03851600
         AIF   (&I GT N'&BUFFERS).BUFRB0  GO IF NO MORE ENTRIES         03859000
         AIF   ('&BUFFERS(&I)' EQ '').BUFRL11  GO IF NULL ENTRY         03909000
&BFR     SETB  1                        INDICATE BUFFER SPECIFIED       03959000
         AIF   ('&BUFFERS(&I)'(1,1) EQ '(').BUFRER  GO IF 1ST CHAR IS ( 04009000
&K       SETA  1                        INIT CHARACTER POINTER          04059000
.* SET SUBPOOL SIZE FROM 1 TO BEFORE ( OF SUBLIST ENTRY ...        @LMA 04084000
.BUFRSL  ANOP                                                           04109000
&K       SETA  &K+1                     POINT TO NEXT CHARACTER         04159000
         AIF   (&K GT K'&BUFFERS(&I)).BUFRER  GO IF NO MORE CHARACTERS  04209000
         AIF   ('&BUFFERS(&I)'(&K,1) NE '(').BUFRSL  GO IF NOT TO ( YET 04259000
&BUFRSZ(&J) SETC '&BUFFERS(&I)'(1,&K-1)  NUMBER IN FRONT OF ( IS SIZE   04309000
.* PROCESS 1ST SUBPARAMETER BUFFER COUNT                           @LMA 04334000
&L       SETA  &K+1                     SAVE POINTER TO CHAR AFTER (    04359000
         AIF   ('&BUFFERS(&I)'(&L,1) EQ ')').BUFRER  GO IF NO SIZE '()' 04409000
&K       SETA  &L                       POINT TO CHARACTER AFTER (      04459000
.BUFRCL  ANOP                                                           04509000
&K       SETA  &K+1                     POINT TO NEXT CHARACTER         04559000
         AIF   (&K GT K'&BUFFERS(&I)).BUFRER  GO IF NO MORE CHARACTERS  04609000
         AIF   ('&BUFFERS(&I)'(&K,1) EQ ')').SETBFR  GO IF DONE    @VHA 04615000
         AIF   ('&BUFFERS(&I)'(&K,1) NE ',').BUFRCL  MORE TO COUNT @VHA 04621000
.SETBFR  ANOP                                                      @VHA 04627000
.* BUFFER COUNT IS BETWEEN ( AND ,| )                                   04630000
&BUFRCT(&J) SETC '&BUFFERS(&I)'(&L,&K-&L)  NUMBER BETWEEN () IS COUNT   04633000
.* SEE IF 2ND SUBLIST ITEM - HIPERSPACE NUMBER - EXISTS            @LMA 04635000
         AIF   ('&BUFFERS(&I)'(&K,1) EQ ')').BUFR106 GO IF NONE    @LMC 04637000
         AIF   ('&BUFFERS(&I)'(&K+1,1) EQ ',').CHKTKN0 NULL 2ND         04639000
.*                                                            PARM @LMA 04641000
.* PROCESS 2ND SUBLIST ITEM - HIPERSPACE NUMBER                    @LMA 04643000
&L       SETA  &K+1                     SAVE POINTER TO ','+1      @VHA 04645000
         AIF   ('&BUFFERS(&I)'(&L,1) EQ ')').BUFRER  GO IF NO CNT  @VHA 04651000
&K       SETA  &L                       POINT TO CHARACTER AFTER , @VHA 04657000
.HBFRCL  ANOP                                                      @VHA 04663000
&K       SETA  &K+1                     FIND 2ND ITEM LENGTH       @VHA 04669000
         AIF   (&K GT K'&BUFFERS(&I)).BUFRER   NO MORE CHARACTERS  @VHA 04675000
         AIF   ('&BUFFERS(&I)'(&K,1) EQ ')').HBINCR  COUNT END     @LMC 04678000
         AIF   ('&BUFFERS(&I)'(&K,1) NE ',').HBFRCL  MORE TO COUNT @LMA 04681000
.HBINCR  ANOP                           FOUND 2ND ITEM LENGTH      @LMA 04684000
         AIF   ('&BUFFERS(&I)'(&L,&K-&L) LT '1').CHKTKN  ZERO BFRS @VHA 04687000
.*  SKIP TO CHECK FOR TOKEN IF VALUE TOO SMALL, NOT AN ERROR.           04690000
&H       SETA  &H+1                     INCREMENT INDEX            @VHA 04693000
&HBFRS(&H) SETA &J                      SAVE INDEX TO H-S BUFFER   @VHA 04699000
&HBFRCT(&J) SETC '&BUFFERS(&I)'(&L,&K-&L)  HS CNT BETWEEN ', ,)'   @VHC 04705000
         AIF   ('&HBFRCT(&J)' GT '16777215').BUFRER  COUNT < 16M?  @VHA 04711000
&M       SETA  4096                     START BUFFER SIZE AT 4096  @LMC 04717000
.HBFRL4K ANOP                                                      @VHA 04723000
         AIF   ('&BUFRSZ(&J)' EQ '&M').CHKTKN   GO IF VALID SIZE   @LMC 04729000
&M       SETA  &M+4096                  NEXT BUFFER SIZE = N*4K    @LMC 04735000
         AIF   (&M GT 32768).BUFRER     ERROR IF BFR SIZE>32K      @LMC 04741000
         AGO   .HBFRL4K                 LOOP FROM 4K TO 32K        @VHA 04743200
.CHKTKN0 ANOP                                                      @LMC 04745400
&K       SETA  &K+1                     BUMP TO NEXT CHAR          @LMA 04747600
.CHKTKN  ANOP                                                      @LMC 04750000
.*  PROCESS 3RD SUBPARAMETER FOR TOKEN                             @LMA 04759000
         AIF   ('&BUFFERS(&I)'(&K,1) EQ ')').BUFR106 NO TOKEN      @LMA 04768000
&L       SETA  &K+1                     SAVE PTR TO CHAR AFTER ,   @LMA 04777000
         AIF   ('&BUFFERS(&I)'(&L,1) EQ ')').BUFRER  ERROR IF NO TOKEN  04780000
.*                                                   FOLLOWING ,   @LMA 04783000
&K       SETA  &L                       SAVE PTR TO CHAR AFTER ,   @LMA 04784500
.BUFR101 ANOP                                                      @LMA 04786000
&K       SETA  &K+1                     POINT TO NEXT CHARACTER    @LMA 04789000
         AIF   (&K GT K'&BUFFERS(&I)).BUFRER  ERROR IF NO MORE CHAR@LMA 04792000
         AIF   ('&BUFFERS(&I)'(&K,1) NE ')').BUFR101  SCAN TILL )  @LMA 04795000
&BUFRTK(&J) SETC '&BUFFERS(&I)'(&L,&K-&L)             SAVE TOKEN   @LMA 04798700
         AIF   ('&BUFRTK(&J)' LT '1').BUFRER   SMALLEST TOKEN IS 1 @LMA 04802400
         AIF   ('&BUFRTK(&J)' GT '255').BUFRER LARGEST IS 255      @LMA 04806100
&TOKFND  SETB  1                                                   @LMA 04810000
         AGO   .BUFR108                                        @YA35085 04813000
.BUFR106 ANOP                           NO TOKEN SPECIFIED...  @YA35085 04816000
&BUFRTK(&J) SETC '0'                    INITIALIZE TO ZERO     @YA35085 04819000
.* DONE WITH 3RD ITEM - TOKEN                                  @YA35085 04822000
.BUFR108 ANOP                                                  @YA35085 04825000
         AIF   ('&BUFRCT(&J)' LT '3').BUFRER  COUNT MUST BE AT LEAST 3  04828000
         AIF   ('&BUFRCT(&J)' GT '65535').BUFRER  ... AND < 64K    @LAC 04831000
         AIF   ('&BUFRSZ(&J)' LT '512').BUFRER  ERROR IF < 512 @ZA97998 04834000
&K       SETA  512                      START BUFFER SIZE AT 512        04859000
.BUFRL12 ANOP                                                           04909000
         AIF   ('&BUFRSZ(&J)' EQ '&K').BUFRL10  GO IF VALID BUFFER SIZE 04959000
         AIF   (&K GE 8192).BFRA8K      IF >= 8K MUST BE N*2K  @ZA97998 05009000
&K       SETA  &K+512                   ELSE NXT MUST BE N*512 @ZA97998 05059000
         AGO   .BUFRL12                 GO TEST BUFFER SIZE             05109000
.BFRA8K  ANOP                                                           05159000
         AIF   (&K GT 32768).BUFRER     ERROR IF BFR SIZE>32K  @ZA97998 05209000
&K       SETA  &K+2048                  NEXT BUFFR SIZE = N*2K @ZA97998 05259000
         AGO   .BUFRL12                 GO TEST BUFFER SIZE             05309000
.BUFRER  ANOP                                                           05359000
         IDAERMAC 3,BUFFERS,&BUFFERS(&I)  ISSUE ERROR MNOTE             05409000
&ERR     SETB  1                        INDICATE ERROR                  05459000
         AGO   .BUFRL11                 GO TO NEXT ENTRY                05509000
.BUFRB0  ANOP                                                           05559000
         AIF   (&BFR).BUFRB1            GO IF BUFFER SPECIFIED          05609000
         IDAERMAC 3,BUFFERS,&BUFFERS    ISSUE ERROR MNOTE               05659000
&ERR     SETB  1                        INDICATE ERROR                  05709000
         AGO   .BUFRB1                  GO AROUND BUFFERS ANALYSIS      05759000
.BUFRO   ANOP                                                           05809000
         AIF   ('&BUFFERS' EQ '').BUFRB1  GO IF BUFFERS NOT SPECIFIED   05859000
         IDAERMAC 4,BUFFERS             ISSUE WARNING MNOTE             05909000
.BUFRB1  ANOP                                                           05959000
         AIF   (&ERR).END               GO IF ANY ERRORS                06009000
         AIF   (&MFE).EXEC              GO IF EXECUTE FORM              06059000
         AIF   ('&MF' EQ 'L').LIST      GO IF LIST FORM                 06109000
         AIF   ('&NAME' EQ '').NAMEB1   GO IF NO NAME                   06159000
.*                                                                      06169000
.***************************************************************** @LPA 06179000
.*  NOT MF=E, CREATE IDABLPRM FOR LIST/NORMAL MACRO                     06189000
.***************************************************************** @LPA 06199000
&NAME    DS    0H                                                       06209000
.NAMEB1  ANOP                                                           06259000
         CNOP  0,4                      ALIGN ON WORD BOUNDARY          06309000
&I       SETA  ((&J-1+&H)*8)+60         CALC DISP TO SVC           @VHC 06359000
         AIF   ('&AMODE' EQ '24').GO24                             @L9A 06375600
&I       SETA  &I+4                     ADD 4 BYTES FOR OPTIONS    @L9A 06392200
         BAS   1,*+&I                   PLACE LIST ADDRESS IN 1    @LXC 06408800
         AGO   .GENACB                                             @LXA 06425400
.GO24    BAL   1,*+&I                   PLACE LIST ADDRESS IN 1    @L9C 06442000
         AGO   .GENACB                                                  06459000
.LIST    ANOP                                                           06509000
&NAME    DS    0F                       ALIGN ON WORD BOUNDARY          06559000
.GENACB  ANOP                                                           06609000
         OPEN  (&LAB),MF=L,MODE=&AMODE GENERATE OPEN PARM LIST     @L9C 06675600
.*                                 ADD LABEL TO FOLLOWING LINE @AZ84070 06709000
&LAB     DC    X'A011'                  ID AND SUBTYPE                  06759000
         DC    AL2(0)                   RESERVED                        06809000
         DC    A(*+48)                  BUFFER LIST ADDRESS             06859000
         AIF   (('&KEYLEN' NE '') AND ('&TYPE(2)' NE 'INDEX')).CHKKEYL  06896500
.*                                     IGNORE KEYLEN IF TYPE=INDEX @LAC 06934000
         DC    AL1(255)                 DEFAULT KEY LENGTH         @LAC 06971500
         AGO   .AKEYLEN                 GO AROUND KEY LENGTH            07009000
.CHKKEYL AIF   ('&KEYLEN' LT '256').GENKEYL GO IF KEY LENG NOT TOO BIG  07059000
         IDAERMAC 3,KEYLEN,&KEYLEN      ISSUE ERROR MESSAGE             07109000
         AGO   .AKEYLEN                 GO AROUND KEY LENGTH            07159000
.GENKEYL ANOP                                                           07209000
.*                                                                 @LAD 07259000
         DC    AL1(&KEYLEN)             KEY LENGTH                      07309000
.*                                                                2@LAD 07359000
.AKEYLEN ANOP                                                           07459000
         AIF   (('&STRNO' NE '') AND ('&TYPE(2)' NE 'INDEX')).GENSTRN   07496500
.*                                      IGNORE STRNO IF TYPE=INDEX @LAC 07534000
         DC    AL1(0)                   STRING NUMBER = 0               07571500
         AGO   .ASTRNO                  GO AROUND STRING NUMBER         07609000
.GENSTRN ANOP                                                           07659000
         DC    AL1(&STRNO)              STRING NUMBER                   07709000
.ASTRNO  ANOP                                                           07759000
         DC    AL1(&ORCODE)             VRP CODES                       07809000
         DC    AL1(0)                   RESERVED                        07859000
         AIF   (&H EQ 0).NOHSB          NO H-S BUFFERS             @VHA 07869000
.* CALCULATE DISPLACEMENT TO FIRST H-S BUFFER LIST ENTRY           @VHA 07879000
&K       SETA  ((&J-1)*8)+40                                       @VHA 07889000
         DC    A(*+&K)                  H-S BUFFER LIST ADDRESS    @VHA 07899000
         AGO   .HSB                                                @VHA 07909000
.NOHSB   ANOP                                                      @VHA 07919000
         DC    1A(0)                    RESERVED                        07929000
.HSB     ANOP                                                      @VHA 07939000
         DC    2A(0)                    RESERVED                        07949000
         DC    XL3'0'                   RESERVED                        07959000
         DC    X'08'                    DSORG                           08009000
         DC    AL1(&POOL)               SHARED RESOURCE POOL ID    @L3A 08059000
         DC    B'&R31B.0&INXPOOL&R31C.0000' TYPE FLAGS             @LPA 08109000
         DC    AL1(0)                   RESERVED                   @LMC 08121500
         AIF   (&TOKFND).TOK102                                    @LMA 08134000
         DC    AL1(0)                   ELEMENT SIZE 0             @LMA 08146500
         AGO   .TOK104                                             @LMA 08159000
.TOK102  ANOP                                                      @LMA 08171500
         DC    AL1(8)                   ELEMENT SIZE 8             @LMA 08184000
.TOK104  ANOP                                                      @LMA 08196500
         DC    4A(0)                    RESERVED                   @L3C 08209000
         DC    X'02'                    OFLAGS                          08259000
         DC    XL3'0'                   RESERVED                        08309000
&I       SETA  0                        INIT BUFFER SIZE/COUNT POINTER  08359000
&K       SETA  &J-1                     POINT TO LAST BUFFER SIZE/COUNT 08409000
.BUFRL2  ANOP                                                           08459000
&I       SETA  &I+1                     POINT TO NEXT BUFFER SIZE/COUNT 08509000
         AIF   (&I GE &J).HBFRL1        GO IF NO MORE ENTRIES      @VHC 08559000
         DC    AL1(&BUFRTK(&I))         BUFFER TOKEN 1 - 255            08592300
         DC    AL3(&BUFRSZ(&I))         BUFFER SIZE                     08625600
         AIF   (&I EQ &K).GENEND        GO IF LAST BUFFER SIZE/COUNT    08659000
         DC    AL1(0)                   RESERVED                   @LMC 08692300
         AGO   .AREND                   GO AROUND GEN OF END OF LIST    08759000
.GENEND  ANOP                                                           08809000
         DC    X'80'                    INDICATE LAST LIST ENTRY        08859000
.AREND   ANOP                                                           08959000
         DC    AL3(&BUFRCT(&I))         BUFFER COUNT               @VHC 09009000
         AGO   .BUFRL2                  GO GEN NEXT ENTRY               09059000
.HBFRL1  ANOP                                                      @VHA 09062100
         AIF   (&H EQ 0).BUFRB2         GO IF NO ENTRIES           @VHA 09065200
&I       SETA  0                        INITIALIZE COUNTER         @VHA 09068300
.HBFRL2  ANOP                                                      @VHA 09071400
&I       SETA  &I+1                     POINT TO NEXT H-S ENTRY    @VHA 09074500
         AIF   (&I GT &H).BUFRB2        GO IF NO MORE ENTRIES      @VHA 09077600
         DC    A(&BUFRSZ(&HBFRS(&I)))   BUFFER SIZE                @VHA 09080700
         AIF   (&I EQ &H).HGENEND       GO IF LAST H-S ENTRY       @VHA 09083800
         DC    AL1(0)                   RESERVED                   @VHA 09086900
         AGO   .HAREND                  GO AROUND END OF LIST      @VHA 09090000
.HGENEND ANOP                                                      @VHA 09093100
         DC    X'80'                    INDICATE LAST LIST ENTRY   @VHA 09096200
.HAREND  ANOP                                                      @VHA 09099300
         DC    AL3(&HBFRCT(&HBFRS(&I))) BUFFER COUNT               @VHA 09102400
         AGO   .HBFRL2                  GO GEN NEXT ENTRY          @VHA 09105500
.BUFRB2  ANOP                                                           09109000
         AIF   ('&MF' NE 'L').ISUSVC    GO IF NOT LIST FORM             09159000
         MEXIT                                                          09209000
.*                                                                      09234000
.***************************************************************** @LPA 09240200
.*  MF=E (EXECUTE FORM).  MODIFY THE IDABLPRM THAT MF=L (LIST) BUILT    09246400
.***************************************************************** @LPA 09252600
.EXEC    ANOP                                                           09259000
         AIF   ('&NAME' EQ '').NAMEB2   GO IF NO NAME                   09309000
&NAME    DS    0H                                                       09359000
.NAMEB2  ANOP                                                           09409000
         AIF   ('&AMODE' EQ '24').REG24                            @L9A 09410700
.*                                                                      09411000
.* 31-BIT PROCESSING: OPEN (AT ISUSVX) PARAMETER LIST IS 8 BYTES,       09411400
.* SO ADD 8 BYTES TO REG1 TO REFERENCE IDABLPRM FILEDS         @YA13510 09411800
         AIF   ('&MF(2)'(1,1) EQ '(').REG31A GO IF LST ADDR IN REG @L9A 09412400
         LA    1,&MF(2)                 LOAD LIST ADDRESS          @L9A 09414100
         AGO   .REG31C                  GO AROUND REG CODE         @L9A 09415800
.REG31A  AIF   ('&MF(2)' NE '(0)').REG31B LIST ADDR NOT IN R0      @L9A 09417500
         LR    1,0                      ALSO PUT ADDR IN R0        @L9A 09419200
         AGO   .REG31C                  GO AROUND REG CODE         @L9A 09420900
.REG31B  AIF   ('&MF(2)' EQ '(1)').REG31C LIST ADDR ALREADY IN 1   @L9A 09422600
&I       SETA  K'&MF(2)-2               CALC LENGTH OF REG NAME    @L9A 09424300
&EREG    SETC  '&MF(2)'(2,&I)           PICK UP REG NAME           @L9A 09426000
         LR    1,&EREG                  LOAD LIST ADDRESS          @L9A 09427700
.REG31C  AIF   (('&KEYLEN' EQ '') OR ('&TYPE(2)' EQ 'INDEX')).REG31D    09428800
.*                                     IGNORE KEYLEN IF TYPE=INDEX @LAC 09429900
         MVI   16(1),&KEYLEN            ALTER KEY LENGTH           @L9A 09431100
.REG31D  AIF   (('&STRNO' EQ '') OR ('&TYPE(2)' EQ 'INDEX')).REG31E     09432200
.*                                      IGNORE STRNO IF TYPE=INDEX @LAC 09433300
         MVI   17(1),&STRNO             ALTER STRING NUMBER        @L9A 09434500
.REG31E  NI    18(1),&ANDCODE           REMOVE OLD VRP CODES       @L9A 09436200
         OI    18(1),&ORCODE            INSERT NEW VRP CODES       @L9A 09437900
         AIF   (T'&SHRPOOL EQ 'O').REG31F  BRANCH IF NO SHRPOOL    @L9C 09439600
         MVI   36(1),&POOL              SET SHARED POOL ID NUMBER  @L9A 09441300
.REG31F  ANOP                                                  @YA12937 09442800
         AIF   ('&TYPE(1)' EQ '').REG31G  TYPE NOT SPECIFIED   @YA32166 09444300
         NI    37(1),B'11&INXPOOL.11111'  RESET TYPE FLAG               09445800
.REG31G  ANOP                                                  @YA12937 09447300
         AIF   ((T'&LOC EQ 'O') AND (T'&RMODE31 EQ 'O')).REG31H         09448800
.*                                      MODE/LOC NOT SPECIFIED @YA12937 09450300
         NI    37(1),B'&R31B.11&R31C.1111' RESET MODE/LOC FLAGS@YA12937 09451800
.REG31H  OI    37(1),B'&R31B.0&INXPOOL&R31C.0000'   SET FLAGS  @YA12937 09453300
         AGO   .ISUSVX                                             @L9A 09454900
.*                                                                      09455200
.* 24-BIT PROCESSING: OPEN (AT ISUSVX) PARAMETER LIST IS 4 BYTES,       09455600
.* SO ADD 4 BYTES TO REG1 TO REFERENCE IDABLPRM FIELDS         @YA13510 09456000
.REG24   ANOP                                                      @L9A 09456600
         AIF   ('&MF(2)'(1,1) EQ '(').EREG  GO IF LIST ADDRESS IN REG   09459000
         LA    1,&MF(2)                 LOAD LIST ADDRESS               09509000
         AGO   .AEREG                   GO AROUND REG CODE              09559000
.EREG    ANOP                                                           09609000
         AIF   ('&MF(2)' EQ '(1)').AEREG LIST ADDR ALREADY IN 1         09659000
&I       SETA  K'&MF(2)-2               CALC LENGTH OF REG NAME         09709000
&EREG    SETC  '&MF(2)'(2,&I)           PICK UP REG NAME                09759000
         LR    1,&EREG                  LOAD LIST ADDRESS               09809000
.AEREG   ANOP                                                           09859000
         AIF   (('&KEYLEN' EQ '') OR ('&TYPE(2)' EQ 'INDEX')).AEKEYL    09892300
.*                                     IGNORE KEYLEN IF TYPE=INDEX @LAC 09925600
         MVI   12(1),&KEYLEN            ALTER KEY LENGTH                09959000
.AEKEYL  ANOP                                                           10009000
         AIF   (('&STRNO' EQ '') OR ('&TYPE(2)' EQ 'INDEX')).AESTRN     10042300
.*                                      IGNORE STRNO IF TYPE=INDEX @LAC 10075600
         MVI   13(1),&STRNO             ALTER STRING NUMBER             10109000
.AESTRN  ANOP                                                           10159000
         NI    14(1),&ANDCODE           REMOVE OLD VRP CODES            10209000
         OI    14(1),&ORCODE            INSERT NEW VRP CODES            10259000
         AIF   ('&TYPE' EQ 'GSR').ISUSVX BRANCH IF TYPE IS GSR @AZ84070 10309000
         AIF   (T'&SHRPOOL EQ 'O').SETR2 BRANCH IF NO SHRPOOL      @L9C 10359000
         MVI   32(1),&POOL              SET SHARED POOL ID NUMBER  @L3A 10409000
.SETR2   ANOP                                                  @YA12937 10428400
         AIF   ('&TYPE(1)' EQ '').SETR3   TYPE NOT SPECIFIED   @YA32166 10447800
         NI    33(1),B'11&INXPOOL.11111'  RESET TYPE FLAG               10467200
.SETR3   ANOP                                                  @YA12937 10486600
         AIF   ((T'&LOC EQ 'O') AND (T'&RMODE31 EQ 'O')).SETR4          10506000
.*                                      MODE/LOC NOT SPECIFIED @YA12937 10525400
         NI    33(1),B'&R31B.11&R31C.1111' RESET MODE/LOC FLGS @YA12937 10544800
.SETR4   OI    33(1),B'&R31B.0&INXPOOL&R31C.0000'    SET FLAGS     @LPA 10564200
.ISUSVX  ANOP                                                  @AZ84070 10584000
         OPEN  (&DISP.(1)),MF=(E,(1)),MODE=&AMODE ISSUE OPEN SVC   @L9C 10617200
         AGO   .END                                            @AZ84070 10634000
.ISUSVC  ANOP                                                           10759000
         OPEN  ,MF=(E,(1)),MODE=&AMODE                             @L9C 10825600
.END     ANOP                                                           10859000
         MEND                                                           10909000
