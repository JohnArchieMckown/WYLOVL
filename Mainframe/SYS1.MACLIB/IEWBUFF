*/**** START OF SPECIFICATIONS **************************************** 00050000
*                                                                     * 00675000
*                                                                     * 00678500
*01* MACRO NAME:  IEWBUFF                               -01/07/15-<0> * 00682000
*                                                                     * 00685500
*                                                                     * 00689000
*01* DESCRIPTIVE NAME:  Binder Parameter Buffer Services Macro        * 00692500
*                                                                     * 00696000
*Proprietary Statement                                                * 00702700
*Licensed Materials - Property Of IBM                                 * 00709400
*This Module Is "Restricted Materials Of IBM"                         * 00716100
*5695-DF1                                                             * 00726790
*(C) Copyright 1993 , 1999  IBM Corp.                                 * 00730780
*See IBM Copyright Instructions                                       * 00736200
*End Proprietary Statement                                            * 00742900
*                                                                     * 00744890
* STATUS= HDZ11E0                                                     * 00746880
*                                                                     * 00750000
*                                                                     * 15956000
*                                                                     * 15956500
*01* FUNCTION:                                                        * 15957000
*                                                                     * 15958000
*      Obtain, initialize, map and free standard Binder parameter     * 15959000
*      buffers.  These buffers are passed as parameters on the        * 15960000
*      IEWBIND macro which generates calls to the Binder.             * 15961000
*                                                                     * 15962000
*01* SYNTAX:                                                          * 15963000
*                                                                     * 15964000
*[xlabel]  IEWBUFF    FUNC=MAPBUF                                    * 15965000
*                   |    ,SIZE=xsize                                 * 15967000
*                   |    ,BYTES=xbytes                               * 15968000
*                   |    [,HEADREG=xheadreg|USERHEADREG]            * 15968700
*                   |    [,ENTRYREG=xentryreg|USERENTRYREG]         * 15969400
*                   |    [,VERSION=1|2|3|4]                         * 15970200
*                    ,FUNC=GETBUF                                    * 15971000
*                   |    [,GM_RETCODE=xgm_retcode]                    * 15971500
*                    ,FUNC=INITBUF                                   * 15972000
*                    ,FUNC=FREEBUF                                   * 15973000
*                        [,FM_RETCODE=xfm_retcode]                    * 15973500
*                     ,TYPE=ESD|RLD|IDRU|IDRL|IDRZ|IDRB|             * 15974000
*                            SYM|TEXT|NAME|XTLST|MAP|PINIT           * 15974600
*                    [,PREFIX=xprefix|0]                            * 15975300
*                                                                     * 15976000
*                                                                     * 15977000
*      Where:                                                         * 15978000
*                                                                     * 15979000
*                                                                     * 15980000
*      [xlabel]                                                       * 15981000
*          is an optional symbol, starting in column 1, that is the   * 15981800
*          name on the IEWBUFF macro invocation.  The name must       * 15982600
*          conform to the rules for an ordinary assembler language    * 15983400
*          symbol.                                                    * 15984200
*          DEFAULT: No name.                                          * 15985000
*                                                                     * 15986000
*                                                                     * 15987000
*                                                                     * 15988000
*                                                                     * 15989000
*      FUNC=MAPBUF|GETBUF|INITBUF|FREEBUF                           * 15990000
*          is a required keyword input which indicates the type of    * 15990300
*          processing to perform.  FUNC=MAPBUF must be used once only * 15990600
*          for each type of buffer.  The normal sequence of using the * 15990900
*          IEWBUFF functions would be FUNC=GETBUF followed by         * 15991200
*          FUNC=INITBUF followed by usage of the buffer and finally   * 15991500
*          FUNC=FREEBUF. GETBUF and FREEBUF are not necessary if the  * 15991800
*          user provides storage for the buffer.                      * 15992100
*                                                                     * 15993000
*                                                                     * 15994000
*          FUNC=MAPBUF                                                * 15995000
*              Generate declarations for the buffer header and its    * 15996000
*              entries.  FUNC=MAPBUF is required if any other IEWBUFF * 15999200
*              functions are used.  FUNC=MAPBUF may be specified only * 16002400
*              once per module and it is required by all the other    * 16005600
*              IEWBUFF functions.                                     * 16008800
*                                                                     * 16012000
*                                                                     * 16013000
*              The following is a set of mutually exclusive keys.     * 16014000
*              This set is required; only one key must be specified.  * 16015000
*                                                                     * 16016000
*                                                                     * 16017000
*              SIZE=xsize                                             * 16018000
*                  belongs to a set of mutually exclusive keys. It is * 16019000
*                  a fullword input decimal value which is the number * 16020000
*                  of entries in the buffer.  The amount of storage   * 16021000
*                  occupied by the buffer will be equal to the length * 16022000
*                  of the buffer header plus the length of the Binder * 16023000
*                  names list area plus the number of bytes needed    * 16024000
*                  for the buffer entries.                            * 16025000
*                                                                     * 16026000
*              BYTES=xbytes                                           * 16027000
*                  belongs to a set of mutually exclusive keys. It is * 16028100
*                  a fullword input decimal value which is the        * 16029200
*                  maximum number of bytes available for the buffer.  * 16030300
*                  BYTES must include the space required for the      * 16031400
*                  buffer header and the Binder names list area as    * 16032500
*                  well as space for at least one buffer entry.       * 16033600
*                                                                     * 16035000
*                                                                     * 16036000
*                                                                     * 16037000
*              End of a set of mutually exclusive required keys.      * 16038000
*                                                                     * 16039000
*                                                                     * 16040000
*                                                                     * 16041000
*              [HEADREG=xheadreg|USERHEADREG]                       * 16042000
*                  is an optional 32 character input which is the     * 16042700
*                  register number or assembler language symbol for   * 16043400
*                  IEWBUFF FUNC=MAPBUF to equate to the base register * 16044100
*                  named "IEWBxyz_BASE" which IEWBUFF uses for the    * 16044800
*                  buffer header DSECT.  A GETBUF request sets the    * 16045500
*                  register to point to newly acquired buffer header  * 16046200
*                  storage.  The user must preserve the contents of   * 16046900
*                  the register for INITBUF and FREEBUF requests.  A  * 16047600
*                  FREEBUF request zeroes the register.               * 16048400
*                  DEFAULT: USERHEADREG meaning that IEWBUFF will not * 16049000
*                  use a specific register to base the buffer header  * 16049600
*                  DSECT.  In assembler language, the user must       * 16050200
*                  define the symbol named "IEWBxyz_BASE" for IEWBUFF * 16050800
*                  to use as a base register for the buffer header    * 16051400
*                  DSECT.                                             * 16052000
*                                                                     * 16054000
*                                                                     * 16055000
*                                                                     * 16056000
*                                                                     * 16057000
*              [ENTRYREG=xentryreg|USERENTRYREG]                    * 16058000
*                  is an optional 32 character input which is the     * 16058400
*                  register number or assembler language symbol for   * 16058800
*                  IEWBUFF to equate to the base register "xyz_BASE"  * 16059200
*                  which IEWBUFF uses for the buffer entry DSECT.  A  * 16059600
*                  GETBUF request sets the register to point to the   * 16060000
*                  first buffer entry slot in the newly acquired      * 16060400
*                  buffer storage. The user alters to register to     * 16060800
*                  point to different buffer entries as needed.  A    * 16061200
*                  FREEBUF request zeroes the register.               * 16061600
*                  DEFAULT: USERENTRYREG meaning that IEWBUFF will    * 16062000
*                  not use a specific register to base the buffer     * 16062300
*                  entry DSECT.  In assembler language, the user must * 16062600
*                  define the symbol named "xyz_BASE" for IEWBUFF to  * 16062900
*                  use as a base register for the buffer entry DSECT. * 16063200
*                                                                     * 16063500
*                                                                     * 16063800
*                                                                     * 16064100
*                                                                     * 16064400
*              [VERSION=1|2|3|4]                                    * 16064700
*                  is an optional keyword input which is the version  * 16065000
*                  of parameter buffer to be generated.               * 16065300
*                  DEFAULT: 1                                         * 16065600
*                                                                     * 16065900
*                                                                     * 16066000
*                  VERSION=1                                          * 16066200
*                      The format of the parameter buffer will be     * 16066400
*                      version 1.                                     * 16066600
*                                                                     * 16067000
*                  VERSION=2                                          * 16067100
*                      The format of the parameter buffer will be     * 16067200
*                      version 2.                                     * 16067300
*                                                                     * 16067500
*                  VERSION=3                                          * 16067600
*                      The format of the parameter buffer will be     * 16067700
*                      version 3.                                     * 16067800
*                                                                     * 16067900
*                  VERSION=4                                          * 16068000
*                      The format of the parameter buffer will be     * 16068100
*                      version 4.                                     * 16068200
*                                                                     * 16068300
*                                                                     * 16068400
*                                                                     * 16069000
*                                                                     * 16070000
*                                                                     * 16071000
*          FUNC=GETBUF                                                * 16072000
*              Obtain storage for the Binder buffer, map the section  * 16072300
*              where the header will go and map the slot where the    * 16072600
*              first buffer entry will go.                            * 16072900
*                                                                     * 16073200
*                                                                     * 16073500
*              [GM_RETCODE=xgm_retcode]                               * 16073800
*                  is the name (RS-type), or address in register      * 16074100
*                  (2)-(12), of an optional fullword output which is  * 16074400
*                  the return code from the conditional GETMAIN       * 16074700
*                  request used by IEWBUFF to obtain the buffer's     * 16075000
*                  storage.  If GM_RETCODE is omitted, IEWBUFF will   * 16075300
*                  generate an unconditional GETMAIN for the buffer   * 16075600
*                  storage.  If the unconditional GETMAIN fails,      * 16075900
*                  GETMAIN will abend with a meaningful abend and     * 16076200
*                  reason code.                                       * 16076500
*                                                                     * 16076800
*                                                                     * 16077100
*                                                                     * 16078000
*          FUNC=INITBUF                                               * 16079000
*              Initialize the header section of the Binder buffer.    * 16080500
*                                                                     * 16082000
*          FUNC=FREEBUF                                               * 16083000
*              Free the storage occupied by the Binder buffer and     * 16084000
*              zero the base pointers for the buffer mappings.        * 16085000
*                                                                     * 16085100
*                                                                     * 16085200
*              [FM_RETCODE=xfm_retcode]                               * 16085300
*                  is the name (RS-type), or address in register      * 16085400
*                  (2)-(12), of an optional fullword output which is  * 16085500
*                  the return code from the conditional FREEMAIN      * 16085600
*                  request used by IEWBUFF to obtain the buffer's     * 16085700
*                  storage.  If GM_RETCODE is omitted, IEWBUFF will   * 16085800
*                  generate an unconditional FREEMAIN for the buffer  * 16085900
*                  storage.  If the unconditional FREEMAIN fails,     * 16086000
*                  FREEMAIN will abend with a meaningful abend and    * 16086100
*                  reason code.                                       * 16086200
*                                                                     * 16086300
*                                                                     * 16086400
*                                                                     * 16086500
*                                                                     * 16087000
*                                                                     * 16088000
*                                                                     * 16089000
*                                                                     * 16090000
*                                                                     * 16091000
*      TYPE=ESD|RLD|IDRU|IDRL|IDRZ|IDRB|SYM|TEXT|NAME|XTLST|MAP|PINI * 16091600
*          T                                                         * 16092200
*          is a required keyword input which is the type of data      * 16093000
*          which the buffer is to contain.                            * 16094000
*                                                                     * 16095000
*          IEWBUFF generates a three character name for each type of  * 16095100
*          data.  For buffer type "xyz", IEWBUFF generates a mapping  * 16095200
*          of the buffer header named "IEWBxyz", a mapping of a       * 16095300
*          buffer entry named "xyz_ENTRY", base pointers              * 16095400
*          "IEWBxyx_BASE" and "xyz_BASE" for the two mappings, a      * 16095500
*          structure containing initial values for the header named   * 16095600
*          "xyzI_INIT_VALUES", and for some types, based variables    * 16095700
*          named "xyz_xxxx" which provide alternative mappings for    * 16095800
*          certain fields.                                            * 16095900
*                                                                     * 16096000
*                                                                     * 16096100
*          TYPE=ESD                                                   * 16098800
*              The buffer entries are to contain the Binder's @ESD    * 16101500
*              class of data.  Constants used as codes in ESD_ENTRY   * 16104200
*              fields are declared by macro IEWBCES.                  * 16106900
*                                                                     * 16110000
*          TYPE=RLD                                                   * 16112800
*              The buffer entries are to contain the Binder's @RLD    * 16115600
*              class of data.  Constants used as codes in RLD_ENTRY   * 16118400
*              fields are declared by macro IEWBCRL.                  * 16121200
*                                                                     * 16124000
*          TYPE=IDRU                                                  * 16126800
*              The buffer entries are to contain the Binder's IDRU    * 16129600
*              class of data.  IDRU data is user specified            * 16132400
*              identification data.                                   * 16135200
*                                                                     * 16138000
*          TYPE=IDRL                                                  * 16140800
*              The buffer entries are to contain the Binder's IDRL    * 16143600
*              class of data.  IDRL data is language specified        * 16146400
*              identification data.                                   * 16149200
*                                                                     * 16152000
*          TYPE=IDRZ                                                  * 16154800
*              The buffer entries are to contain the Binder's IDRZ    * 16157600
*              class of data.  IDRZ data is identification data       * 16160400
*              specified by HMASPZAP.                                 * 16163200
*                                                                     * 16166000
*          TYPE=IDRB                                                  * 16168800
*              The buffer entries are to contain the Binder's IDRB    * 16171600
*              class of data.  IDRB data is identification data       * 16174400
*              specified by the Binder.                               * 16177200
*                                                                     * 16180000
*          TYPE=SYM                                                   * 16183200
*              The buffer entries are to contain the Binder's SYM     * 16186400
*              class of data.                                         * 16189600
*                                                                     * 16193000
*          TYPE=TEXT                                                  * 16197000
*              The buffer is to contain module text data.             * 16201000
*                                                                     * 16205000
*          TYPE=NAME                                                  * 16208200
*              The buffer is a Binder name list, whose entries will   * 16211400
*              contain names.                                         * 16214600
*                                                                     * 16218000
*          TYPE=XTLST                                                 * 16221200
*              The buffer is to receive extent list data from a       * 16224400
*              IEWBIND FUNC=LOADWMOD request.                         * 16227600
*                                                                     * 16231000
*          TYPE=MAP                                                   * 16231300
*              The buffer is to contain map class data                * 16231600
*                                                                     * 16232000
*          TYPE=PINIT                                                 * 16232200
*              The buffer is to contain the part initializers for the * 16232400
*              module.                                                * 16232600
*                                                                     * 16233000
*                                                                     * 16234000
*                                                                     * 16235000
*                                                                     * 16235500
*                                                                     * 16235600
*                                                                     * 16235700
*      [PREFIX=xprefix|0]                                           * 16235800
*          is the name (RS-type), or address in register (2)-(12), of * 16235900
*          an optional 32 character input which is the text prefix of * 16236000
*          each label in a mapping expansion.                         * 16236100
*                                                                     * 16236200
*          If this parameter is specified in the MAP function of      * 16236300
*          IEWBUFF, the macro will use the value of PREFIX to append  * 16236400
*          it to the beginning of each of the mapping labels.   For   * 16236500
*          instance, if the value of PREFIX is 'V1', and the TYPE is  * 16236600
*          'ESD', the macro will prefix all ESD mapping labels with   * 16236700
*          the string 'V1_' (no quotes).                              * 16236800
*                                                                     * 16236900
*          PREFIX may be any string of length up to 32 characters.    * 16237000
*          DEFAULT: 0      NULL string                                * 16237100
*                                                                     * 16237200
*                                                                     * 16237300
*                                                                     * 16237400
*01* RETURN CODES:  None.                                             * 16237500
*                                                                     * 16237600
*01* REASON CODES:  None.                                             * 16238000
*                                                                     * 16239000
*01* MODULE TYPE:  ASSEM MACRO                                        * 16240000
*                                                                     * 16241000
*02*   PROCESSOR:  ASSEM                                              * 16242000
*                                                                     * 16243000
*01* COMPONENT:  DF108                                                * 16244000
*                                                                     * 16245000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 16246000
*                                                                     * 16247000
*01* MACRO USAGE NOTES:                                               * 16248000
*                                                                     * 16249000
*                                                                     * 16250000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 16251000
*        global macro variable.  Any value other than 'NO' will       * 16252000
*        result in the macro expansion being printed.  The default is * 16253000
*        'YES'.  The following examples illustrate how the ZPRINT     * 16254000
*        variable should be set.                                      * 16255000
*                                                                     * 16256000
*                    GBLC &ZPRINT                                     * 16256500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 16257000
*                                                                     * 16258000
*                                                                     * 16265000
*                                                                     * 16265100
*01* CHANGE ACTIVITY:                                                 * 16265200
*                                                                     * 16265300
*   Flag LineItem  FMID    Date   ID    Comment                       * 16265400
*                                                                     * 16265500
*    $P6=KMM2451  JDZ1110 920520 SJPLLDB:                             * 16265600
*    $P7=KMM3167  JDZ1110 920831 SJPLLDB:                             * 16265700
*    $P8=OY60825  JDZ1110 930113 SJPLLDB:                             * 16265800
*    $P9=OY61831  JDZ1110 930115 SJPLLDB:                             * 16265900
*    $01=OW17155  HDZ11C0 960108 SJPLSML:                             * 16266200
*    $L3=PM3ITER1 HDZ11C0 960108 SJPLSML:                             * 16266500
*    $L5=XPLINK   HDZ11E0 981918 SJPLELA:                             * 16266800
*    $L6=XPLINK   HDZ11E0 990811 STLRWT:  Class offset in segment,    * 16267000
*                                         version cleanup             * 16267200
*    $L7=XPLINK   HDZ11E0 991008 STLRWT:  Clean AMG compile, version  * 16267300
*                                         cleanup                     * 16267400
*    $PA=K161091  HDZ11E0 000222 STLLB:  Move XPLINK flag, add        * 16267500
*                                         padding bit, Correct V4     * 16267600
*                                         expansion of BNL for PLX    * 16267700
*    $PB=K161148  HDZ11E0 000303 STLEA:  Add missing semicolon to     * 16267900
*                                         version 3 ESD declare       * 16268100
*    $05=OW48279  HDZ11F0 010315 SVLRT:  Fails if called from RSECT   * 16268190
*    $06=OW50303  HDZ11F0 010715 SVLEA:  Fix entry length for IDRZ    * 16268210
*                                         buffer                      * 16268230
****** END OF SPECIFICATIONS *****************************************/ 16268300
*/* TLINE 1 *********************************************************** 16268500
         MACRO                                                          16268700
&XLABEL  IEWBUFF &FUNC=,&SIZE=,&BYTES=,&HEADREG=,&ENTRYREG=,&VERSION=, *16269000
               &GM_RETCODE=,&FM_RETCODE=,&TYPE=,&PREFIX=                16270000
.*                                                                      16271000
*                MACDATE -01/07/15-<0>                                  16272000
.*                                                                      16273000
.*******************************************************************    16274000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        16275000
.*******************************************************************    16276000
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 16277000
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   16278000
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           16279000
.*                                                                      16280000
                GBLC  &ZIEWBUFF   YES=MACRO USED AT LEAST ONCE          16281000
.*******************************************************************    16282000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          16283000
.*******************************************************************    16284000
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               16285000
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          16286000
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            16287000
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           16288000
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           16289000
                LCLA  &ZAWRK      USED AS A WORK AREA                   16290000
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                16291000
                LCLA  &ZN         NUMERIC WORK VARIABLE                 16292000
                LCLC  &ZC         CHARACTER WORK VARIABLE               16293000
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           16293300
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               16293600
                LCLA  &ZMACRET    MACRO RETURN CODE                     16294000
&ZMACRET        SETA  0           ASSUME NO ERRORS                      16295000
.*                                                                      16296000
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      16297000
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            16298000
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 16299000
                LCLC  &ZENDBASEPL               End of base PL          16299500
.*******************************************************************    16309000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   16310000
.*******************************************************************    16311000
                LCLC  &XFUNC      ++ VALUE                              16311800
                LCLC  &XSZORBYT   ++ VALUE                              16312600
                LCLC  &XSIZE      ++ VALUE                              16313400
                LCLC  &XBYTES     ++ VALUE                              16314200
                LCLC  &XHEADREG   ++ VALUE                              16315000
                LCLC  &XENTRYREG  ++ VALUE                              16315800
                LCLC  &XVERSION   ++ VALUE                              16316600
                LCLC  &XGM_RETCODE              ++ NAME                 16317400
                LCLC  &XFM_RETCODE              ++ NAME                 16318200
                LCLC  &XTYPE      ++ VALUE                              16319000
                LCLC  &XPREFIX    ++ NAME                               16319500
.*******************************************************************    16320000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           16321000
.*******************************************************************    16322000
                LCLC  &ZXFUNC     ++ INPUT VALUE                        16322800
                LCLC  &ZXSZORBYT  ++ INPUT VALUE                        16323600
                LCLC  &ZXSIZE     ++ INPUT VALUE                        16324400
                LCLC  &ZXBYTES    ++ INPUT VALUE                        16325200
                LCLC  &ZXHEADREG  ++ INPUT VALUE                        16326000
                LCLC  &ZXENTRYREG               ++ INPUT VALUE          16326800
                LCLC  &ZXVERSION  ++ INPUT VALUE                        16327600
                LCLC  &ZXGM_RETCODE             ++ OUTPUT NAME          16328400
                LCLC  &ZXFM_RETCODE             ++ OUTPUT NAME          16329200
                LCLC  &ZXTYPE     ++ INPUT VALUE                        16330000
                LCLC  &ZXPREFIX   ++ INPUT NAME                         16330500
.********************************************************************   16331000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 16332000
.********************************************************************   16333000
                ACTR  10000                                             16334000
.*------------------------------------------------------------------    16335000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16336000
&XFUNC          SETC  ''          INITIALIZE XVARIABLE                  16337000
.*-------------------------------------------------------------------   16338000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16339000
.ZG3            ANOP  ,                                                 16340500
                AIF   (K'&FUNC(1) LE 0).ZG3A                            16342000
&ZTLC           SETC 'MAPBUF'                                           16343500
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG21                      16345000
&XFUNC          SETC  'MAPBUF'    SET KEYWORD                           16346500
                AIF   (N'&FUNC LE 1).ZG3A       CK NUM                  16348000
&ZMS            SETC  '"FUNC='    *KPOSA* MNOTE                         16349500
&ZMS            SETC  '&ZMS.&FUNC"'                                     16351000
&ZMS            SETC  '&ZMS "FUNC"'                                     16352500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16354000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16355500
.ZG3A           ANOP  ,                                                 16357000
.*------------------------------------------------------------------    16358500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16360000
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           16361500
.ZG3A0          AIF   (K'&GM_RETCODE LE 0).ZG3A1  OK                    16363000
&ZCVAL          SETC '&ZCVAL GM_RETCODE'        INCORRECT KEY USED      16364500
.ZG3A1          AIF   (K'&FM_RETCODE LE 0).ZG3A2  OK                    16366000
&ZCVAL          SETC '&ZCVAL FM_RETCODE'        INCORRECT KEY USED      16367500
.ZG3A2          AIF   (K'&ZCVAL LE 0).ZG3A3     OK                      16369000
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             16370500
&ZMS            SETC  '"FUNC'     *KMEIA* MNOTE                         16372000
&ZMS            SETC  '&ZMS.=&FUNC"'                                    16373500
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              16375000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              16376500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16378000
.ZG3A3          ANOP  ,                                                 16379500
.*----------------------------------------------------------------***   16381000
.***AG.KMEKY01 VALUE, RQD INPUT, ME KEYS -XVARIABLE                     16382000
&XSZORBYT       SETC  ''          INITIALIZE XVARIABLE                  16383000
                AIF   (K'&SIZE LE 0).ZG5C                               16384000
&ZXSZORBYT      SETC  'INPUT'     SET IN/OUTPUT                         16385000
&XSZORBYT       SETC  'SIZE'      SET XVARIABLE                         16386000
&ZXSIZE         SETC  'INPUT'     SET IN/OUTPUT                         16387000
&XSIZE          SETC  '&SIZE(1)'  SET XVARIABLE PARM                    16388000
                AIF   (N'&SIZE GT 1).ZG5A                               16389000
&XSIZE          SETC  '&SIZE'     SET XVARIABLE PARM                    16390000
.ZG5A           AIF   (N'&SIZE LE 1).ZG5B       CK NUM                  16391000
&ZMS            SETC  '"SIZE='    *KPOSA* MNOTE                         16392000
&ZMS            SETC  '&ZMS.&SIZE"'                                     16393000
&ZMS            SETC  '&ZMS "SIZE"'                                     16394000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16395000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16396000
.ZG5B           AIF   (K'&XSIZE GT 0).ZG5C      ONE PARM                16397000
&ZXSZORBYT      SETC  ''          RESET IN/OUTPUT                       16398000
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       16399000
&ZMS            SETC  ' '         *KRQDA*                               16400000
&ZMS            SETC  '&ZMS "SIZE" KEY AND ITS'                         16401590
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  16402180
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16403000
.ZG5C           ANOP  ,                                                 16404000
.*----------------------------------------------------------------***   16405000
.***AG.KMEKY02 VALUE, RQD INPUT, ME KEYS -XVARIABLE                     16406000
                AIF   (K'&BYTES LE 0).ZG6D      NO ME KEY               16407000
                AIF   (N'&BYTES LE 1).ZG6A      CK NUM                  16408000
&ZMS            SETC  '"BYTES='   *KPOSA* MNOTE                         16409000
&ZMS            SETC  '&ZMS.&BYTES"'                                    16410000
&ZMS            SETC  '&ZMS "BYTES"'                                    16411000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16412000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16413000
.ZG6A           AIF   (K'&XSZORBYT LE 0).ZG6B                           16414000
&ZMS            SETC  '"BYTES'    *KMEKA* MNOTE                         16415000
&ZMS            SETC  '&ZMS.=&BYTES"'                                   16416000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             16417000
&ZMS            SETC  '&ZMS "&XSZORBYT"'                                16418000
                MNOTE 8,' &ZMS KEY.'                                    16419000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16420000
                AGO   .ZG6D                                             16421000
.*                                                                      16422000
.ZG6B           ANOP  ,                                                 16423000
&ZXSZORBYT      SETC  'INPUT'     SET IN/OUTPUT                         16424000
&XSZORBYT       SETC  'BYTES'     SET XVARIABLE                         16425000
&ZXBYTES        SETC  'INPUT'     SET IN/OUTPUT                         16426000
&XBYTES         SETC  '&BYTES(1)'               SET XVARIABLE PARM      16427000
                AIF   (N'&BYTES GT 1).ZG6C                              16428000
&XBYTES         SETC  '&BYTES'    SET XVARIABLE PARM                    16429000
.ZG6C           AIF   (K'&XBYTES GT 0).ZG6D     ONE PARM                16430000
&ZXSZORBYT      SETC  ''          RESET IN/OUTPUT                       16431000
&ZXBYTES        SETC  ''          RESET IN/OUTPUT                       16432000
&ZMS            SETC  ' '         *KRQDA*                               16433000
&ZMS            SETC  '&ZMS "BYTES" KEY AND ITS'                        16434590
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  16435180
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16436000
.ZG6D           ANOP  ,                                                 16437000
.*------------------------------------------------------------------    16438000
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          16439000
                AIF   (K'&XSZORBYT GT 0).ZG7B                           16440000
&ZXSZORBYT      SETC  ''          RESET IN/OUTPUT                       16441000
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       16442000
&XSZORBYT       SETC  ''          ENSURE NULL                           16443000
&XSIZE          SETC  ''          ENSURE NULL                           16444000
&ZMS            SETC  'ONE OF THE FOLLOWING'    *KMERA* MNOTE           16445000
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               16446000
&ZMS            SETC  '&ZMS REQUIRED:'                                  16447000
&ZMS            SETC  '&ZMS "SIZE"'             VALID ME KEY            16448000
&ZMS            SETC  '&ZMS OR "BYTES".'        VALID ME KEY            16449000
                MNOTE 8,' &ZMS '                                        16450000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16451000
.ZG7B           ANOP  ,                                                 16452000
.*-------------------------------------------------------------------   16453000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          16454000
.ZG5            AIF   ('&XSZORBYT' NE 'SIZE').ZG6                       16455000
.*-------------------------------------------------------------------   16456000
.***AG.KCK01 VALUE, RQD INPUT, ME KEYS -GPR NOT ALLOWED                 16457000
                AIF   (K'&ZXSIZE LE 0).ZG5P     NOT I/O                 16458000
                AIF   ('&XSIZE'(1,1) NE '(').ZG5P                       16459000
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       16460000
&ZMS            SETC  '"SIZE='    *KGPRA* MNOTE                         16461000
&ZMS            SETC  '&ZMS.&SIZE"'                                     16462000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         16463000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 16464000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16465000
.ZG5P           ANOP  ,                                                 16466000
.*-------------------------------------------------------------------   16467000
.***AG.KCK05 VALUE, RQD INPUT, ME KEYS -KMG RANGE                       16468000
                AIF   (K'&ZXSIZE LE 0).ZG5U     NOT I/O                 16469000
                AIF   ('&XSIZE'(1,1) EQ '(').ZG5U  IN GPR               16470000
&ZASIZ          SETA  1           INITIALIZE ZASIZ                      16471000
                AIF   (T'&XSIZE NE 'N').ZG5RR   NUMBER                  16472000
&ZAWRK          SETA  &XSIZE      INITIALIZE ZAWRK                      16473000
&ZCVAL          SETC  '&XSIZE'    INITIALIZE ZCVAL                      16474000
                AGO   .ZG5SS                                            16475000
.ZG5RR          ANOP  ,                                                 16476000
&ZCLNG          SETC  '&XSIZE'(1,K'&XSIZE-1)                            16477000
                AIF   (T'&ZCLNG NE 'N').ZG5T    NUMERIC ERR             16478000
&ZAWRK          SETA  &ZCLNG      CONVERT                               16479000
&ZCGPR          SETC  '&XSIZE'(K'&XSIZE,1)                              16480000
&ZASIZ          SETA  1024                                              16481000
                AIF   ('&ZCGPR' EQ 'K').ZG5S    K FACTOR                16482000
&ZASIZ          SETA  1024*1024                                         16483000
                AIF   ('&ZCGPR' EQ 'M').ZG5S    M FACTOR                16484000
&ZASIZ          SETA  1024*1024*1024                                    16485000
                AIF   ('&ZCGPR' NE 'G').ZG5T    NOT G FACTOR            16486000
.ZG5S           ANOP  ,                                                 16487000
&ZCVAL          SETC  '&ZAWRK*&ZASIZ'           EQUIVALENT NUMBER       16488000
.ZG5SS          ANOP  ,                                                 16489000
&ZN             SETA  2147483647/&ZASIZ         CONVERT                 16490000
                AIF   (&ZN LT 0).ZG5T           TOO LOW                 16491000
                AIF   (&ZAWRK GT &ZN).ZG5T      TOO HIGH                16492000
&XSIZE          SETC '&ZCVAL'     SET XVARIABLE NUMBER                  16493000
                AGO   .ZG5U                                             16494000
.*                                                                      16495000
.ZG5T           ANOP  ,                                                 16496000
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       16497000
&ZMS            SETC  '"SIZE='    *KRNGA* MNOTE                         16498000
&ZMS            SETC  '&ZMS.&SIZE"'                                     16499000
&ZMS            SETC  '&ZMS THE RANGE IS "0-2147483647"'                16500000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         16501000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16502000
.ZG5U           ANOP  ,                                                 16503000
.*-------------------------------------------------------------------   16504000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          16505000
.ZG6            AIF   ('&XSZORBYT' NE 'BYTES').ZG7                      16506000
.*-------------------------------------------------------------------   16507000
.***AG.KCK01 VALUE, RQD INPUT, ME KEYS -GPR NOT ALLOWED                 16508000
                AIF   (K'&ZXBYTES LE 0).ZG6P    NOT I/O                 16509000
                AIF   ('&XBYTES'(1,1) NE '(').ZG6P                      16510000
&ZXBYTES        SETC  ''          RESET IN/OUTPUT                       16511000
&ZMS            SETC  '"BYTES='   *KGPRA* MNOTE                         16512000
&ZMS            SETC  '&ZMS.&BYTES"'                                    16513000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         16514000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 16515000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16516000
.ZG6P           ANOP  ,                                                 16517000
.*-------------------------------------------------------------------   16518000
.***AG.KCK05 VALUE, RQD INPUT, ME KEYS -KMG RANGE                       16519000
                AIF   (K'&ZXBYTES LE 0).ZG6U    NOT I/O                 16520000
                AIF   ('&XBYTES'(1,1) EQ '(').ZG6U  IN GPR              16521000
&ZASIZ          SETA  1           INITIALIZE ZASIZ                      16522000
                AIF   (T'&XBYTES NE 'N').ZG6RR  NUMBER                  16523000
&ZAWRK          SETA  &XBYTES     INITIALIZE ZAWRK                      16524000
&ZCVAL          SETC  '&XBYTES'   INITIALIZE ZCVAL                      16525000
                AGO   .ZG6SS                                            16526000
.ZG6RR          ANOP  ,                                                 16527000
&ZCLNG          SETC  '&XBYTES'(1,K'&XBYTES-1)                          16528000
                AIF   (T'&ZCLNG NE 'N').ZG6T    NUMERIC ERR             16529000
&ZAWRK          SETA  &ZCLNG      CONVERT                               16530000
&ZCGPR          SETC  '&XBYTES'(K'&XBYTES,1)                            16531000
&ZASIZ          SETA  1024                                              16532000
                AIF   ('&ZCGPR' EQ 'K').ZG6S    K FACTOR                16533000
&ZASIZ          SETA  1024*1024                                         16534000
                AIF   ('&ZCGPR' EQ 'M').ZG6S    M FACTOR                16535000
&ZASIZ          SETA  1024*1024*1024                                    16536000
                AIF   ('&ZCGPR' NE 'G').ZG6T    NOT G FACTOR            16537000
.ZG6S           ANOP  ,                                                 16538000
&ZCVAL          SETC  '&ZAWRK*&ZASIZ'           EQUIVALENT NUMBER       16539000
.ZG6SS          ANOP  ,                                                 16540000
&ZN             SETA  2147483647/&ZASIZ         CONVERT                 16541000
                AIF   (&ZN LT 0).ZG6T           TOO LOW                 16542000
                AIF   (&ZAWRK GT &ZN).ZG6T      TOO HIGH                16543000
&XBYTES         SETC '&ZCVAL'     SET XVARIABLE NUMBER                  16544000
                AGO   .ZG6U                                             16545000
.*                                                                      16546000
.ZG6T           ANOP  ,                                                 16547000
&ZXBYTES        SETC  ''          RESET IN/OUTPUT                       16548000
&ZMS            SETC  '"BYTES='   *KRNGA* MNOTE                         16549000
&ZMS            SETC  '&ZMS.&BYTES"'                                    16550000
&ZMS            SETC  '&ZMS THE RANGE IS "0-2147483647"'                16551000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         16552000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16553000
.ZG6U           ANOP  ,                                                 16554000
.*-------------------------------------------------------------------   16555000
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           16556000
.ZG7            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           16557000
.*----------------------------------------------------------------***   16558000
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    16559000
                AIF   (N'&HEADREG LE 1).ZG9A    CK NUM                  16560000
&ZMS            SETC  '"HEADREG='               *KPOSA* MNOTE           16561000
&ZMS            SETC  '&ZMS.&HEADREG"'                                  16562000
&ZMS            SETC  '&ZMS "HEADREG"'                                  16563000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16564000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16565000
.ZG9A           ANOP  ,                                                 16566000
.*-------------------------------------------------------------------   16567000
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        16568000
&ZXHEADREG      SETC  'INPUT'     SET IN/OUTPUT                         16569000
&XHEADREG       SETC  'USERHEADREG'                                     16570000
                AIF   (K'&HEADREG(1) LE 0).ZG9B  PARM                   16571000
&XHEADREG       SETC  '&HEADREG(1)'             SET XVARIABLE           16572000
                AIF   (N'&HEADREG GT 1).ZG9B    MULTI PARMS             16573000
&XHEADREG       SETC  '&HEADREG'  SET XVARIABLE                         16574000
.ZG9B           ANOP  ,                                                 16575000
.*-------------------------------------------------------------------   16576000
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    16577000
                AIF   (K'&ZXHEADREG LE 0).ZG9P  NOT I/O                 16578000
                AIF   ('&XHEADREG' EQ 'USERHEADREG').ZG9P               16579000
                AIF   ('&XHEADREG'(1,1) NE '(').ZG9P                    16580000
&ZXHEADREG      SETC  ''          RESET IN/OUTPUT                       16581000
&ZMS            SETC  '"HEADREG='               *KGPRA* MNOTE           16582000
&ZMS            SETC  '&ZMS.&HEADREG"'                                  16583000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         16584000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 16585000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16586000
.ZG9P           ANOP  ,                                                 16587000
.*-------------------------------------------------------------------   16588000
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   16590000
                AIF   (K'&ZXHEADREG LE 0).ZG9S  NOT I/O                 16592000
                AIF   ('&XHEADREG' EQ 'USERHEADREG').ZG9S               16594000
                AIF   (K'&XHEADREG LE 32).ZG9S  LNG OK                  16596000
&ZXHEADREG      SETC  ''          RESET IN/OUTPUT                       16598000
&ZMS            SETC  '"HEADREG='               *KLNGA* MNOTE           16599000
&ZMS            SETC  '&ZMS.&HEADREG"'                                  16600000
&ZMS            SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'             16601000
                MNOTE 8,' &ZMS LENGTH OF 32 CHARACTERS.'                16602000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16603000
.ZG9S           ANOP  ,                                                 16604000
.*----------------------------------------------------------------***   16605000
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    16606000
                AIF   (N'&ENTRYREG LE 1).ZG12A  CK NUM                  16607000
&ZMS            SETC  '"ENTRYREG='              *KPOSA* MNOTE           16608000
&ZMS            SETC  '&ZMS.&ENTRYREG"'                                 16609000
&ZMS            SETC  '&ZMS "ENTRYREG"'                                 16610000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16611000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16612000
.ZG12A          ANOP  ,                                                 16613000
.*-------------------------------------------------------------------   16614000
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        16615000
&ZXENTRYREG     SETC  'INPUT'     SET IN/OUTPUT                         16616000
&XENTRYREG      SETC  'USERENTRYREG'                                    16617000
                AIF   (K'&ENTRYREG(1) LE 0).ZG12B  PARM                 16618000
&XENTRYREG      SETC  '&ENTRYREG(1)'            SET XVARIABLE           16619000
                AIF   (N'&ENTRYREG GT 1).ZG12B  MULTI PARMS             16620000
&XENTRYREG      SETC  '&ENTRYREG'               SET XVARIABLE           16621000
.ZG12B          ANOP  ,                                                 16622000
.*-------------------------------------------------------------------   16623000
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    16624000
                AIF   (K'&ZXENTRYREG LE 0).ZG12P  NOT I/O               16625000
                AIF   ('&XENTRYREG' EQ 'USERENTRYREG').ZG12P            16626000
                AIF   ('&XENTRYREG'(1,1) NE '(').ZG12P                  16627000
&ZXENTRYREG     SETC  ''          RESET IN/OUTPUT                       16628000
&ZMS            SETC  '"ENTRYREG='              *KGPRA* MNOTE           16629000
&ZMS            SETC  '&ZMS.&ENTRYREG"'                                 16630000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         16631000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 16632000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16633000
.ZG12P          ANOP  ,                                                 16634000
.*-------------------------------------------------------------------   16635000
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   16635700
                AIF   (K'&ZXENTRYREG LE 0).ZG12S  NOT I/O               16636400
                AIF   ('&XENTRYREG' EQ 'USERENTRYREG').ZG12S            16637100
                AIF   (K'&XENTRYREG LE 32).ZG12S  LNG OK                16637800
&ZXENTRYREG     SETC  ''          RESET IN/OUTPUT                       16638700
&ZMS            SETC  '"ENTRYREG='              *KLNGA* MNOTE           16639000
&ZMS            SETC  '&ZMS.&ENTRYREG"'                                 16639300
&ZMS            SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'             16639600
                MNOTE 8,' &ZMS LENGTH OF 32 CHARACTERS.'                16639900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16640200
.ZG12S          ANOP  ,                                                 16640500
.*----------------------------------------------------------------***   16640800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16641100
                AIF   (N'&VERSION LE 1).ZG15A   CK NUM                  16641400
&ZMS            SETC  '"VERSION='               *KPOSA* MNOTE           16641700
&ZMS            SETC  '&ZMS.&VERSION"'                                  16642000
&ZMS            SETC  '&ZMS "VERSION"'                                  16642300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16642600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16642900
.ZG15A          ANOP  ,                                                 16643200
.*-------------------------------------------------------------------   16643500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16643800
&XVERSION       SETC  ''          INITIALIZE XVARIABLE                  16644100
.ZG16A   AIF   ('&VERSION(1)' NE '1').ZG17A                             16644400
&XVERSION       SETC  '1'         SET KEYWORD                           16644700
.*-------------------------------------------------------------------   16645000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16645100
.ZG17A   AIF   ('&VERSION(1)' NE '2').ZG18A                             16645200
&XVERSION       SETC  '2'         SET KEYWORD                           16645300
.*-------------------------------------------------------------------   16645500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16645600
.ZG18A   AIF   ('&VERSION(1)' NE '3').ZG19A                             16645700
&XVERSION       SETC  '3'         SET KEYWORD                           16645800
.*-------------------------------------------------------------------   16646100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16646200
.ZG19A   AIF   ('&VERSION(1)' NE '4').ZG20A                             16646300
&XVERSION       SETC  '4'         SET KEYWORD                           16646400
.*-------------------------------------------------------------------   16646500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16646600
.ZG20A          AIF   (K'&XVERSION GT 0).ZG20C  KEYWORD                 16646700
                AIF   (K'&VERSION(1) LE 0).ZG20B                        16646800
&ZMS            SETC  '"VERSION='               *KUKWA* MNOTE           16646900
&ZMS            SETC  '&ZMS.&VERSION"'                                  16647000
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         16647100
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               16647200
&ZMS            SETC  '&ZMS "1",'                                       16647370
&ZMS            SETC  '&ZMS "2",'                                       16647440
&ZMS            SETC  '&ZMS "3",'                                       16647510
&ZMS            SETC  '&ZMS OR "4".'                                    16647580
                MNOTE 8,' &ZMS '                                        16647700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16648000
.ZG20B          ANOP  ,                                                 16648200
&XVERSION       SETC  '1'         SET DEFAULT KEYWORD                   16648400
.ZG20C          ANOP  ,                                                 16648800
&ZXVERSION      SETC  'INPUT'     SET IN/OUTPUT                         16649200
.*-------------------------------------------------------------------   16652000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16653000
.ZG21           ANOP  ,                                                 16654000
&ZTLC           SETC 'GETBUF'                                           16655000
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG25                      16656000
&XFUNC          SETC  'GETBUF'    SET KEYWORD                           16657000
                AIF   (N'&FUNC LE 1).ZG21A      CK NUM                  16658000
&ZMS            SETC  '"FUNC='    *KPOSA* MNOTE                         16659000
&ZMS            SETC  '&ZMS.&FUNC"'                                     16660000
&ZMS            SETC  '&ZMS "FUNC"'                                     16661000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16662000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16663000
.ZG21A          ANOP  ,                                                 16664000
.*------------------------------------------------------------------    16665000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16666000
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           16666300
.ZG21A0         AIF   (K'&SIZE LE 0).ZG21A1     OK                      16666600
&ZCVAL          SETC '&ZCVAL SIZE'              INCORRECT KEY USED      16666900
.ZG21A1         AIF   (K'&BYTES LE 0).ZG21A2    OK                      16667200
&ZCVAL          SETC '&ZCVAL BYTES'             INCORRECT KEY USED      16667500
.ZG21A2         AIF   (K'&HEADREG LE 0).ZG21A3  OK                      16667800
&ZCVAL          SETC '&ZCVAL HEADREG'           INCORRECT KEY USED      16668100
.ZG21A3         AIF   (K'&ENTRYREG LE 0).ZG21A4  OK                     16668400
&ZCVAL          SETC '&ZCVAL ENTRYREG'          INCORRECT KEY USED      16668700
.ZG21A4         AIF   (K'&VERSION LE 0).ZG21A5  OK                      16669000
&ZCVAL          SETC '&ZCVAL VERSION'           INCORRECT KEY USED      16669300
.ZG21A5         AIF   (K'&FM_RETCODE LE 0).ZG21A6  OK                   16669600
&ZCVAL          SETC '&ZCVAL FM_RETCODE'        INCORRECT KEY USED      16669900
.ZG21A6         AIF   (K'&ZCVAL LE 0).ZG21A7    OK                      16670200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             16670500
&ZMS            SETC  '"FUNC'     *KMEIA* MNOTE                         16670800
&ZMS            SETC  '&ZMS.=&FUNC"'                                    16671100
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              16671400
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              16671700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16672000
.ZG21A7         ANOP  ,                                                 16672300
.*----------------------------------------------------------------***   16672600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    16672900
                AIF   (N'&GM_RETCODE LE 1).ZG23A  CK NUM                16673200
&ZMS            SETC  '"GM_RETCODE='            *KPOSA* MNOTE           16673500
&ZMS            SETC  '&ZMS.&GM_RETCODE"'                               16673800
&ZMS            SETC  '&ZMS "GM_RETCODE"'                               16674100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16674400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16674700
.ZG23A          ANOP  ,                                                 16675000
.*-------------------------------------------------------------------   16675300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        16675600
                AIF   (K'&GM_RETCODE(1) LE 0).ZG23C  NO PARM            16675900
&ZXGM_RETCODE   SETC  'OUTPUT'    SET OUTPUT                            16676200
&XGM_RETCODE    SETC  '&GM_RETCODE(1)'          SET XVARIABLE           16676500
                AIF   (N'&GM_RETCODE GT 1).ZG23C                        16676800
&XGM_RETCODE    SETC  '&GM_RETCODE'             SET XVARIABLE           16677100
.ZG23C          ANOP  ,                                                 16677400
.*-------------------------------------------------------------------   16677700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   16678000
                AIF   (K'&ZXGM_RETCODE LE 0).ZG23R  NOT I/O             16678300
                AIF   ('&XGM_RETCODE'(1,1) NE '(').ZG23R                16678600
&ZCGPR          SETC  '&XGM_RETCODE'(2,K'&XGM_RETCODE-2)                16678900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                      16679200
                AIF   (K'&ZCGPR GT 2).ZG23Q                             16679500
                AIF   ('&ZCGPR' EQ '0').ZG23Q                           16679800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     16680100
                AIF   (T'&ZCGPR NE 'N').ZG23Q   INVALID REG NAME        16680400
.ZG23P          ANOP  ,                                                 16680700
                AIF   (T'&ZCGPR NE 'N').ZG23R   NON NUMERIC             16681000
                AIF   ('&ZCGPR' LT '2').ZG23Q                           16681300
                AIF   ('&ZCGPR' LE '12').ZG23R                          16681600
.ZG23Q          ANOP  ,                                                 16681900
&ZMS            SETC  '"GM_RETCODE='            *KGPRA* MNOTE           16682200
&ZMS            SETC  '&ZMS.&GM_RETCODE"'                               16682500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         16682800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  16683100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16683400
.ZG23R          ANOP  ,                                                 16713700
.*-------------------------------------------------------------------   16744000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16744100
.ZG25           ANOP  ,                                                 16744200
&ZTLC           SETC 'INITBUF'                                          16744300
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG26                      16744400
&XFUNC          SETC  'INITBUF'   SET KEYWORD                           16744500
                AIF   (N'&FUNC LE 1).ZG25A      CK NUM                  16744600
&ZMS            SETC  '"FUNC='    *KPOSA* MNOTE                         16744700
&ZMS            SETC  '&ZMS.&FUNC"'                                     16744800
&ZMS            SETC  '&ZMS "FUNC"'                                     16744900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16745000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16745100
.ZG25A          ANOP  ,                                                 16745200
.*------------------------------------------------------------------    16745300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16745400
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           16745500
.ZG25A0         AIF   (K'&SIZE LE 0).ZG25A1     OK                      16745600
&ZCVAL          SETC '&ZCVAL SIZE'              INCORRECT KEY USED      16745700
.ZG25A1         AIF   (K'&BYTES LE 0).ZG25A2    OK                      16745800
&ZCVAL          SETC '&ZCVAL BYTES'             INCORRECT KEY USED      16745900
.ZG25A2         AIF   (K'&HEADREG LE 0).ZG25A3  OK                      16746000
&ZCVAL          SETC '&ZCVAL HEADREG'           INCORRECT KEY USED      16746100
.ZG25A3         AIF   (K'&ENTRYREG LE 0).ZG25A4  OK                     16746200
&ZCVAL          SETC '&ZCVAL ENTRYREG'          INCORRECT KEY USED      16746300
.ZG25A4         AIF   (K'&VERSION LE 0).ZG25A5  OK                      16746400
&ZCVAL          SETC '&ZCVAL VERSION'           INCORRECT KEY USED      16746500
.ZG25A5         AIF   (K'&GM_RETCODE LE 0).ZG25A6  OK                   16746600
&ZCVAL          SETC '&ZCVAL GM_RETCODE'        INCORRECT KEY USED      16746700
.ZG25A6         AIF   (K'&FM_RETCODE LE 0).ZG25A7  OK                   16746800
&ZCVAL          SETC '&ZCVAL FM_RETCODE'        INCORRECT KEY USED      16746900
.ZG25A7         AIF   (K'&ZCVAL LE 0).ZG25A8    OK                      16747000
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             16747100
&ZMS            SETC  '"FUNC'     *KMEIA* MNOTE                         16747200
&ZMS            SETC  '&ZMS.=&FUNC"'                                    16747300
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              16747400
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              16747500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16747600
.ZG25A8         ANOP  ,                                                 16747700
.*-------------------------------------------------------------------   16747800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16747900
.ZG26           ANOP  ,                                                 16748000
&ZTLC           SETC 'FREEBUF'                                          16748100
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG30                      16748200
&XFUNC          SETC  'FREEBUF'   SET KEYWORD                           16748300
                AIF   (N'&FUNC LE 1).ZG26A      CK NUM                  16748400
&ZMS            SETC  '"FUNC='    *KPOSA* MNOTE                         16748500
&ZMS            SETC  '&ZMS.&FUNC"'                                     16748600
&ZMS            SETC  '&ZMS "FUNC"'                                     16748700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16748800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16748900
.ZG26A          ANOP  ,                                                 16749000
.*------------------------------------------------------------------    16749100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16749200
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           16749300
.ZG26A0         AIF   (K'&SIZE LE 0).ZG26A1     OK                      16749400
&ZCVAL          SETC '&ZCVAL SIZE'              INCORRECT KEY USED      16749500
.ZG26A1         AIF   (K'&BYTES LE 0).ZG26A2    OK                      16749600
&ZCVAL          SETC '&ZCVAL BYTES'             INCORRECT KEY USED      16749700
.ZG26A2         AIF   (K'&HEADREG LE 0).ZG26A3  OK                      16749800
&ZCVAL          SETC '&ZCVAL HEADREG'           INCORRECT KEY USED      16749900
.ZG26A3         AIF   (K'&ENTRYREG LE 0).ZG26A4  OK                     16750000
&ZCVAL          SETC '&ZCVAL ENTRYREG'          INCORRECT KEY USED      16750100
.ZG26A4         AIF   (K'&VERSION LE 0).ZG26A5  OK                      16750200
&ZCVAL          SETC '&ZCVAL VERSION'           INCORRECT KEY USED      16750300
.ZG26A5         AIF   (K'&GM_RETCODE LE 0).ZG26A6  OK                   16750400
&ZCVAL          SETC '&ZCVAL GM_RETCODE'        INCORRECT KEY USED      16750500
.ZG26A6         AIF   (K'&ZCVAL LE 0).ZG26A7    OK                      16750600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             16750700
&ZMS            SETC  '"FUNC'     *KMEIA* MNOTE                         16750800
&ZMS            SETC  '&ZMS.=&FUNC"'                                    16750900
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              16751000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              16751100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16751200
.ZG26A7         ANOP  ,                                                 16751300
.*----------------------------------------------------------------***   16751400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    16751500
                AIF   (N'&FM_RETCODE LE 1).ZG28A  CK NUM                16751600
&ZMS            SETC  '"FM_RETCODE='            *KPOSA* MNOTE           16751700
&ZMS            SETC  '&ZMS.&FM_RETCODE"'                               16751800
&ZMS            SETC  '&ZMS "FM_RETCODE"'                               16751900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16752000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16752100
.ZG28A          ANOP  ,                                                 16752200
.*-------------------------------------------------------------------   16752300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        16752400
                AIF   (K'&FM_RETCODE(1) LE 0).ZG28C  NO PARM            16752500
&ZXFM_RETCODE   SETC  'OUTPUT'    SET OUTPUT                            16752600
&XFM_RETCODE    SETC  '&FM_RETCODE(1)'          SET XVARIABLE           16752700
                AIF   (N'&FM_RETCODE GT 1).ZG28C                        16752800
&XFM_RETCODE    SETC  '&FM_RETCODE'             SET XVARIABLE           16752900
.ZG28C          ANOP  ,                                                 16753000
.*-------------------------------------------------------------------   16753100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   16753200
                AIF   (K'&ZXFM_RETCODE LE 0).ZG28R  NOT I/O             16753300
                AIF   ('&XFM_RETCODE'(1,1) NE '(').ZG28R                16753400
&ZCGPR          SETC  '&XFM_RETCODE'(2,K'&XFM_RETCODE-2)                16753500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                      16753600
                AIF   (K'&ZCGPR GT 2).ZG28Q                             16753700
                AIF   ('&ZCGPR' EQ '0').ZG28Q                           16753800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     16753900
                AIF   (T'&ZCGPR NE 'N').ZG28Q   INVALID REG NAME        16754000
.ZG28P          ANOP  ,                                                 16754100
                AIF   (T'&ZCGPR NE 'N').ZG28R   NON NUMERIC             16754200
                AIF   ('&ZCGPR' LT '2').ZG28Q                           16754300
                AIF   ('&ZCGPR' LE '12').ZG28R                          16754400
.ZG28Q          ANOP  ,                                                 16754500
&ZMS            SETC  '"FM_RETCODE='            *KGPRA* MNOTE           16754600
&ZMS            SETC  '&ZMS.&FM_RETCODE"'                               16754700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         16754800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  16754900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16755000
.ZG28R          ANOP  ,                                                 16755100
.*------------------------------------------------------------------    16755200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16755300
.ZG30           ANOP  ,                                                 16755400
&ZXFUNC         SETC  'INPUT'     SET IN/OUTPUT                         16757000
                AIF   (K'&XFUNC GT 0).ZG30E     VALID ARG               16758000
                AIF   (T'&FUNC EQ 'O').ZG30D    OMITTED                 16759000
&ZASYSLNDX      SETA  0                                                 16760000
.ZG30A          ANOP  ,           POSITIONAL MACRO KEY                  16761000
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      16762000
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG30C                  16763000
&ZTLC           SETC 'FUNC'                                             16764000
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG30A         16765000
.ZG30B          ANOP  ,                                                 16766000
&ZXFUNC         SETC  ''          RESET IN/OUTPUT                       16767000
&ZMS            SETC  'THE "FUNC" KEY'          *KOPTA* MNOTE           16768000
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           16769000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  16770000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16771000
                AGO   .ZG30E                                            16772000
.ZG30C          ANOP  ,                                                 16773000
&ZXFUNC         SETC  ''          RESET IN/OUTPUT                       16774000
&ZMS            SETC  '"FUNC='    *KUKWA* MNOTE                         16775000
&ZMS            SETC  '&ZMS.&FUNC"'                                     16776000
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         16777000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               16778000
&ZMS            SETC  '&ZMS "MAPBUF",'                                  16779790
&ZMS            SETC  '&ZMS "GETBUF",'                                  16780580
&ZMS            SETC  '&ZMS "INITBUF",'                                 16781370
&ZMS            SETC  '&ZMS OR "FREEBUF".'                              16782160
                MNOTE 8,' &ZMS '                                        16783000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16784000
                AGO   .ZG30E                                            16785000
.ZG30D          ANOP  ,                                                 16786000
&XFUNC          SETC  'MAPBUF'    SET DEFAULT KEYWORD                   16787000
.ZG30E          ANOP  ,                                                 16788000
.*------------------------------------------------------------------    16789000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16790000
                AIF   (K'&FUNC(1) GT 0).ZG30F   PARM                    16791000
&XFUNC          SETC  ''          ENSURE NULL KEYWORD                   16792000
&ZXFUNC         SETC  ''          RESET IN/OUTPUT                       16793000
&ZMS            SETC  'THE'                                             16794000
&ZMS            SETC  '&ZMS "FUNC" KEY AND ITS'                         16795590
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     16796180
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               16797000
&ZMS            SETC  '&ZMS "MAPBUF",'                                  16798790
&ZMS            SETC  '&ZMS "GETBUF",'                                  16799580
&ZMS            SETC  '&ZMS "INITBUF",'                                 16800370
&ZMS            SETC  '&ZMS OR "FREEBUF".'                              16801160
                MNOTE 8,' &ZMS '                                        16802000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16803000
.ZG30F          ANOP  ,                                                 16804000
.*----------------------------------------------------------------***   16805000
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16806000
                AIF   (N'&TYPE LE 1).ZG32A      CK NUM                  16807000
&ZMS            SETC  '"TYPE='    *KPOSA* MNOTE                         16808000
&ZMS            SETC  '&ZMS.&TYPE"'                                     16809000
&ZMS            SETC  '&ZMS "TYPE"'                                     16810000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16811000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16812000
.ZG32A          ANOP  ,                                                 16813000
.*-------------------------------------------------------------------   16814000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16815000
&XTYPE          SETC  ''          INITIALIZE XVARIABLE                  16816000
.ZG33A   AIF   ('&TYPE(1)' NE 'ESD').ZG34A                              16817000
&XTYPE          SETC  'ESD'       SET KEYWORD                           16818000
.*-------------------------------------------------------------------   16819000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16820000
.ZG34A   AIF   ('&TYPE(1)' NE 'RLD').ZG35A                              16821000
&XTYPE          SETC  'RLD'       SET KEYWORD                           16822000
.*-------------------------------------------------------------------   16823000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16824000
.ZG35A   AIF   ('&TYPE(1)' NE 'IDRU').ZG36A                             16825000
&XTYPE          SETC  'IDRU'      SET KEYWORD                           16826000
.*-------------------------------------------------------------------   16827000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16828000
.ZG36A   AIF   ('&TYPE(1)' NE 'IDRL').ZG37A                             16829000
&XTYPE          SETC  'IDRL'      SET KEYWORD                           16830000
.*-------------------------------------------------------------------   16831000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16832000
.ZG37A   AIF   ('&TYPE(1)' NE 'IDRZ').ZG38A                             16833000
&XTYPE          SETC  'IDRZ'      SET KEYWORD                           16834000
.*-------------------------------------------------------------------   16835000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16836000
.ZG38A   AIF   ('&TYPE(1)' NE 'IDRB').ZG39A                             16837000
&XTYPE          SETC  'IDRB'      SET KEYWORD                           16838000
.*-------------------------------------------------------------------   16839000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16840000
.ZG39A   AIF   ('&TYPE(1)' NE 'SYM').ZG40A                              16841000
&XTYPE          SETC  'SYM'       SET KEYWORD                           16842000
.*-------------------------------------------------------------------   16843000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16844000
.ZG40A   AIF   ('&TYPE(1)' NE 'TEXT').ZG41A                             16845000
&XTYPE          SETC  'TEXT'      SET KEYWORD                           16846000
.*-------------------------------------------------------------------   16847000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16848000
.ZG41A   AIF   ('&TYPE(1)' NE 'NAME').ZG42A                             16849000
&XTYPE          SETC  'NAME'      SET KEYWORD                           16850000
.*-------------------------------------------------------------------   16851000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16852000
.ZG42A   AIF   ('&TYPE(1)' NE 'XTLST').ZG43A                            16853000
&XTYPE          SETC  'XTLST'     SET KEYWORD                           16854000
.*-------------------------------------------------------------------   16855000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16855200
.ZG43A   AIF   ('&TYPE(1)' NE 'MAP').ZG44A                              16855400
&XTYPE          SETC  'MAP'       SET KEYWORD                           16855600
.*-------------------------------------------------------------------   16855800
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16856200
.ZG44A   AIF   ('&TYPE(1)' NE 'PINIT').ZG45A                            16856600
&XTYPE          SETC  'PINIT'     SET KEYWORD                           16857000
.*-------------------------------------------------------------------   16857400
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16857800
.ZG45A          AIF   (K'&XTYPE GT 0).ZG45C     KEYWORD                 16858200
                AIF   (K'&TYPE(1) LE 0).ZG45B                           16858600
&ZMS            SETC  '"TYPE='    *KUKWA* MNOTE                         16859000
&ZMS            SETC  '&ZMS.&TYPE"'                                     16860000
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         16861000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               16862000
&ZMS            SETC  '&ZMS "ESD",'                                     16863890
&ZMS            SETC  '&ZMS "RLD",'                                     16864780
&ZMS            SETC  '&ZMS "IDRU",'                                    16865670
&ZMS            SETC  '&ZMS "IDRL",'                                    16866560
&ZMS            SETC  '&ZMS "IDRZ",'                                    16867450
&ZMS            SETC  '&ZMS "IDRB",'                                    16868340
&ZMS            SETC  '&ZMS "SYM",'                                     16869230
&ZMS            SETC  '&ZMS "TEXT",'                                    16870120
&ZMS            SETC  '&ZMS "NAME",'                                    16871010
&ZMS            SETC  '&ZMS "XTLST",'                                   16871900
&ZMS            SETC  '&ZMS "MAP",'                                     16872790
&ZMS            SETC  '&ZMS OR "PINIT".'                                16873680
                MNOTE 8,' &ZMS '                                        16874900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16875200
.ZG45B          ANOP  ,                                                 16875600
&XTYPE          SETC  'ESD'       SET DEFAULT KEYWORD                   16876000
.ZG45C          ANOP  ,                                                 16877000
&ZXTYPE         SETC  'INPUT'     SET IN/OUTPUT                         16878000
.*-------------------------------------------------------------------   16879000
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             16880000
                AIF   (K'&TYPE(1) GT 0).ZG45D   VALID                   16881000
&ZXTYPE         SETC  ''          RESET IN/OUTPUT                       16882000
&ZMS            SETC  'THE'                                             16883000
&ZMS            SETC  '&ZMS "TYPE" KEY AND ITS'                         16884590
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     16885180
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               16886000
&ZMS            SETC  '&ZMS "ESD",'                                     16887890
&ZMS            SETC  '&ZMS "RLD",'                                     16888780
&ZMS            SETC  '&ZMS "IDRU",'                                    16889670
&ZMS            SETC  '&ZMS "IDRL",'                                    16890560
&ZMS            SETC  '&ZMS "IDRZ",'                                    16891450
&ZMS            SETC  '&ZMS "IDRB",'                                    16892340
&ZMS            SETC  '&ZMS "SYM",'                                     16893230
&ZMS            SETC  '&ZMS "TEXT",'                                    16894120
&ZMS            SETC  '&ZMS "NAME",'                                    16895010
&ZMS            SETC  '&ZMS "XTLST",'                                   16895900
&ZMS            SETC  '&ZMS "MAP",'                                     16896790
&ZMS            SETC  '&ZMS OR "PINIT".'                                16897680
                MNOTE 8,' &ZMS '                                        16898900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16899200
.ZG45D          ANOP  ,                                                 16899400
.*----------------------------------------------------------------***   16899600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     16899700
                AIF   (N'&PREFIX LE 1).ZG47A    CK NUM                  16899800
&ZMS            SETC  '"PREFIX='  *KPOSA* MNOTE                         16899900
&ZMS            SETC  '&ZMS.&PREFIX"'                                   16900000
&ZMS            SETC  '&ZMS "PREFIX"'                                   16900100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               16900200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16900300
.ZG47A          ANOP  ,                                                 16900400
.*-------------------------------------------------------------------   16900500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         16900600
&ZXPREFIX       SETC  'INPUT'     SET IN/OUTPUT                         16900700
&XPREFIX        SETC  '0'                                               16900800
                AIF   (K'&PREFIX(1) LE 0).ZG47B  PARM                   16900900
&XPREFIX        SETC  '&PREFIX(1)'              SET XVARIABLE           16901000
                AIF   (N'&PREFIX GT 1).ZG47B    MULTI PARMS             16901100
&XPREFIX        SETC  '&PREFIX'   SET XVARIABLE                         16901200
.ZG47B          ANOP  ,                                                 16901300
.*-------------------------------------------------------------------   16901400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    16901500
                AIF   (K'&ZXPREFIX LE 0).ZG47R  NOT I/O                 16901600
         AIF   ('&XPREFIX' EQ '0').ZG47R                                16901700
                AIF   ('&XPREFIX'(1,1) NE '(').ZG47R                    16901800
&ZCGPR          SETC  '&XPREFIX'(2,K'&XPREFIX-2)                        16901900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                      16902000
                AIF   (K'&ZCGPR GT 2).ZG47Q                             16902100
                AIF   ('&ZCGPR' EQ '0').ZG47Q                           16902200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     16902300
                AIF   (T'&ZCGPR NE 'N').ZG47Q   INVALID REG NAME        16902400
.ZG47P          ANOP  ,                                                 16902500
                AIF   (T'&ZCGPR NE 'N').ZG47R   NON NUMERIC             16902600
                AIF   ('&ZCGPR' LT '2').ZG47Q                           16902700
                AIF   ('&ZCGPR' LE '12').ZG47R                          16902800
.ZG47Q          ANOP  ,                                                 16902900
&ZMS            SETC  '"PREFIX='  *KGPRA* MNOTE                         16903000
&ZMS            SETC  '&ZMS.&PREFIX"'                                   16903100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         16903200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  16903300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16903400
.ZG47R          ANOP  ,                                                 16903900
.******************************************************************     16904600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        16904700
.******************************************************************     16904800
                ACTR  10000                                             16904900
.*----------------------------------------------------------------***   16905000
.***AH.P02 EXTRA POSITIONALS                                            16905100
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              16906000
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              16906200
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          16906400
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           16906600
.ZGLISTX1       ANOP  ,                                                 16906800
&ZCVAL          SETC  ''          ERROR FIELD                           16907000
&ZAWRK          SETA  0           POSITIONAL NUMBER                     16908000
.ZGLIST2        ANOP  ,                                                 16909000
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       16910000
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              16911000
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   16912000
                AGO   .ZGLIST2                                          16913000
.*                                                                      16914000
.ZGLIST3        ANOP  ,                                                 16915000
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             16916000
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          16917000
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   16918000
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            16919000
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    16920000
                MNOTE 8,' &ZMS ARE ALLOWED.'                            16921000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           16922000
.ZGLISTX        ANOP  ,                                                 16923000
&ZASYSLNDX      SETA  0                                                 16924000
.*******************************************************************    16925000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       16926000
.*******************************************************************    16927000
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          16928000
.*******************************************************************    16929000
.***AE.01  START OF IEWBUFF MACRO CODE                                  16930000
.*******************************************************************    16931000
                LCLC  &M0M0001                 NAME                     16932000
&M0M0001        SETC  '&XLABEL'                SET NAME                 16933000
                AIF   (K'&XLABEL NE 0).XLAB2                            16934000
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             16935000
.*                                                                      16936000
.XLAB2          ANOP  ,                                                 16937000
&M0M0001 DS    0H                             IEWBUFF-0                 16938000
.*******************************************************************    16939000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              16940000
.*******************************************************************    16941000
              PUSH  PRINT                                               16942000
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        16943000
                PRINT OFF         ++ PR01                               16944000
                AGO   .ZPRNTXX                                          16945000
.ZPRINTX        PRINT ON                                                16946000
.ZPRNTXX        ANOP  ,                                                 16947000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  16948000
.********************************************************************** 16949000
.* AMG inserts the following BAL macro statements into the            * 16950000
.* IEWBUFF macro. AMG requires .li on/off to be coded around          * 16951000
.* the BAL macro statements.                                          * 16952000
.*                                                                    * 16953000
.* AMG has validated all the keyword syntax and placed the            * 16954000
.* actual or default values in macro variables named &Xkeyword.       * 16955000
.* AMG has not created defaults for absent OUTPUT arguments.          * 16956000
.********************************************************************** 16957000
.*-----Local variables------------------------------------------------  16958000
         LCLA  &ENTRYLEN                 Length of one buffer entry     16959000
         LCLC  &ENTRYLENC                Character form of ENTRYLEN     16960000
         LCLA  &ENTRYCOUNT               Number of entries in buffer    16961000
         LCLC  &ENTRYCOUNTC              Character form of ENTRYCOUNT   16962000
         LCLA  &BUFLEN                   Total length of buffer         16963000
         LCLA  &BUFHDRLEN                Length of a buffer header      16963400
         LCLA  &BUFLSTLEN                Length of names list area      16963800
.*-----Variables to handle PREFIX (specified or not) ---------- 3@01A   16964200
         LCLA  &PFIXLEN                                                 16964600
         LCLC  &PFX                                                     16965000
         LCLC  &DSECTLBL                                                16965400
.*-----Initializes variables------------------------------------------  16966000
&BUFHDRLEN SETA 32                  Standard header length              16967500
.*     Sets TYPE to a standard 3 character form. TYPE is required.      16969000
         AIF   (K'&XTYPE EQ 3).TYPOK                                    16970000
&XTYPE   SETC  'IDB'                     Short form of IDRB name        16971000
         AIF   ('&TYPE' EQ 'IDRB').TYPOK                                16972000
&XTYPE   SETC  'IDL'                     Short form of IDRL name        16973000
         AIF   ('&TYPE' EQ 'IDRL').TYPOK                                16974000
&XTYPE   SETC  'IDU'                     Short form of IDRU name        16975000
         AIF   ('&TYPE' EQ 'IDRU').TYPOK                                16976000
&XTYPE   SETC  'IDZ'                     Short form of IDRZ name        16977000
         AIF   ('&TYPE' EQ 'IDRZ').TYPOK                                16978000
&XTYPE   SETC  'TXT'                     Short form of TEXT name        16979000
         AIF   ('&TYPE' EQ 'TEXT').TYPOK                                16980000
&XTYPE   SETC  'BNL'                     Short form of NAME name        16981000
         AIF   ('&TYPE' EQ 'NAME').TYPOK                                16982000
&XTYPE   SETC  'XTL'                     Short form of XTLST name       16983000
         AIF   ('&TYPE' EQ 'XTLST').TYPOK                         @L3A  16983300
&XTYPE   SETC  'PTI'                     Short form of PINIT name @L3A  16983600
.TYPOK   ANOP  ,                                                        16984000
.*-----Validates FUNC(MAPBUF) keys------------------------------------  16985000
         AIF   ('&XFUNC' NE 'MAPBUF').TRYPARM                           16986000
.*-----Calculates length of the buffer entries------------------------  16987000
&BUFLSTLEN SETA 512                 Size of area for names list    @L6M 16987100
         AIF   ('&XVERSION' EQ '1').ESDLEN                         @L6C 16987200
&BUFLSTLEN  SETA 1024         Size of area for names list v2       @L6M 16987300
.ESDLEN  ANOP  ,                                                   @L6A 16987400
&ENTRYLENC SETC '56'                  V1 Length of ESD buffer entry@L6M 16987500
         AIF   ('&XVERSION' EQ '1').ESDDONE                        @L6C 16987600
.*                                                                2@L6D 16987700
&ENTRYLENC SETC '80'                  V2 Length of ESD buffer entry@L6M 16987800
         AIF   ('&XVERSION' EQ '2').ESDDONE                        @L6C 16987900
.*                                                                2@06D 16988000
&ENTRYLENC SETC '96'                  V3 Length of ESD buffer entry@L4C 16988100
.ESDDONE ANOP  ,                                                   @L1A 16988900
         AIF   ('&XTYPE' EQ 'ESD').DONELEN                              16989000
&ENTRYLENC SETC '116'                    Length of IDB buffer entry     16990000
         AIF   ('&XTYPE' EQ 'IDB').DONELEN                              16991000
&ENTRYLENC SETC '28'                     Length of IDL buffer entry     16992000
         AIF   ('&XTYPE' EQ 'IDL').DONELEN                              16993000
&ENTRYLENC SETC '96'                     Length of IDU buffer entry     16994000
         AIF   ('&XTYPE' EQ 'IDU').DONELEN                              16995000
&ENTRYLENC SETC '24'                     Length of IDZ buffer entry     16996000
         AIF   ('&XTYPE' EQ 'IDZ').DONELEN                         @06A 16996990
&ENTRYLENC SETC '32'                     Length of RLD buffer entry     16998000
         AIF   ('&XVERSION' EQ '1').RLDDONE                        @L7M 16998300
&ENTRYLENC SETC '44'                     Length of RLD buffer entry@L1A 16998600
         AIF   ('&XVERSION' EQ '2').RLDDONE                        @L7M 16998900
&ENTRYLENC SETC '52'                     Length of RLD buffer entry@L1A 16999200
.RLDDONE ANOP  ,                                                        16999400
         AIF   ('&XTYPE' EQ 'RLD').DONELEN                              16999600
&ENTRYLENC SETC '96'                     Length of SYM buffer entry     17000000
         AIF   ('&XTYPE' EQ 'SYM').DONELEN                              17001000
&ENTRYLENC SETC '1'                      Length of TXT buffer entry     17002000
         AIF   ('&XTYPE' EQ 'TXT').DONELEN                              17003000
&ENTRYLENC SETC '8'                      Length of BNL buffer entry@L6M 17003300
         AIF   ('&XVERSION' EQ '1').BNLLEN                         @L6A 17003600
&ENTRYLENC SETC '16'                     Length of BNL buffer entry@L6M 17003900
         AIF   ('&XVERSION' EQ '2').BNLLEN                         @L6C 17004200
         AIF   ('&XVERSION' EQ '3').BNLLEN                         @L6C 17004500
&ENTRYLENC SETC '24'                     Length of BNL buffer entry@L6A 17004800
.*                                                                2@L6D 17005100
.BNLLEN  AIF   ('&XTYPE' EQ 'BNL').DONELEN                         @L6C 17005400
&ENTRYLENC SETC '8'                      Length of XTL buffer entry     17006000
         AIF   ('&XTYPE' EQ 'XTL').DONELEN                              17007000
&ENTRYLENC SETC '32'                     Length of MAP buffer entry@L1C 17007500
         AIF   ('&XTYPE' EQ 'MAP').DONELEN                         @L3A 17007600
&ENTRYLENC SETC '01'                     Length of Part Init entry @L4C 17007700
.DONELEN ANOP  ,                                                        17008000
&ENTRYLEN SETA &ENTRYLENC                                               17009000
.*------Calculates number of entries in buffer from BYTES or SIZE----   17010000
         AIF   (K'&XBYTES LE 0).USESIZE                                 17011000
&ENTRYCOUNT SETA (&XBYTES-(&BUFHDRLEN+&BUFLSTLEN))/&ENTRYLEN  @L2C,@03C 17012000
         AIF   (&ENTRYCOUNT GT 0).GOTCOUNT                              17013000
         MNOTE 8,'IEWBUFF01E - BYTES is too small '                    X17014000
               'for a single entry buffer'                              17015000
         MEXIT                                                          17016000
.USESIZE ANOP  ,                                                        17017000
&ENTRYCOUNT SETA &XSIZE                  Use value passed in            17018000
.GOTCOUNT ANOP ,                                                        17019000
&BUFLEN  SETA (&BUFHDRLEN+&BUFLSTLEN)+(&ENTRYLEN*&ENTRYCOUNT) @L2C,@02A 17020000
         AIF   (&BUFLEN LE 1073741984).DONEBUFL   (=2**30+header)       17021000
         MNOTE 8,'IEWBUFF02E - Buffer length would exceed 1GB'          17022000
         MEXIT                                                          17023000
.DONEBUFL ANOP ,                                                        17024000
&XBYTES  SETC  '&BUFLEN'                 Character form of BUFLEN       17025000
         AGO   .TRYPARM                                                 17026000
.*-----Generates code for FUNC(MAPBUF)------------------------------    17027000
.TRYPARM ANOP  ,                                                        17028000
         AIF   ('&XFUNC' NE 'MAPBUF').NOTPTI                   @L3C     17029000
.*                                                                      17030000
.*---------------------------------------------------------  16@01A     17030100
&PFX      SETC  '&XTYPE'.'_'                                            17030200
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         17030300
&PFIXLEN  SETA K'&XPREFIX                                               17030400
.* If PREFIX was not specified, it gets defaulted '0', and its length=1 17030600
.* In such case, each label will be prefixed with a three-character     17030700
.* record type, followed by '_' (e.g., ESD_ ).                          17030800
.* Also,  the DSECT label would be  IEWBrectype (e.g. IEWBESD )         17030900
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK    @L7C 17031000
.* If PREFIX was specified, each label will be prefixed with            17031100
.* the PREFIX value, followed by '_', followed by a three-character     17031200
.* record type, followed by '_' (e.g., V1_ESD_ ).                       17031300
.* Also, the DSECT label would be of the form                           17031400
.* prefix_IEWBrectype (e.g., V1_IEWBESD)                                17031500
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'.'_'                             17031600
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             17031700
.PFIXOK   ANOP                                                          17031800
.*-----Declares mapping of the buffer header------------------------    17031900
         PRINT  OFF                                                     17033000
         MACRO                                                          17035000
         IEWBUFHD &BP=,&BUFHENTL=,&BUFHENTC=,                          X17037000
               &BUFHBUFL=,&BUFHVER=,&BUFHCSCT=,                        X17039000
               &BUFHHREG=,&BUFHEREG=                                    17041000
.*********************************************************************  17043000
.* Inner macro to declare the buffer header.                            17044000
.*                                                                      17045000
.* The invoker must code the header's DSECT statement along with any    17046000
.* descriptive comments.  An inner macro is required so that            17047000
.* assembler comments, coded by the invoker, can include the name of    17048000
.* the type of buffer.  The macro processor does not substitute for     17049000
.* symbols which appear in comments.                                    17050000
.*                                                                      17050100
.* The parameters are:                                                  17050200
.*             &BP       = Buffer fields' prefix (&PFX)                 17050300
.*             &BUFHENTL = Length of each entry (&ENTRYLEN)             17050400
.*             &BUFHENTC = Number of entries (&ENTRYCOUNT)              17050500
.*             &BUFHBUFL = Length of the buffer (&BUFLEN)               17050600
.*             &BUFHVER  = Buffer version (&XVERSION)                   17050700
.*             &BUFHCSCT = CSECT (name,type): (&SYSECT,&SYSSTYP)   @05C 17050800
.*             &BUFHHREG = Register name for header base                17050900
.*             &BUFHEREG = Register name for entry base                 17051000
.*********************************************************************  17051100
.*                                                                      17051200
.*------------------------------------------------------    24@01A      17051300
.* Local variable declarations for the header's (possible)  PREFIX      17051400
          LCLA  &LEN1                                                   17051500
          LCLA  &LEN2                                                   17051600
          LCLA  &BPPLEN                                                 17051700
          LCLC  &BPP                                                    17051800
          LCLC  &DSCTLB                                                 17051900
          LCLC  &RECTYPE                                                17052000
.* Modify &PFX (take out the last '_') to fit our buffer-header label   17052100
.* convention                                                           17052200
&BPPLEN   SETA  K'&BP-1                                                 17052300
&BPP      SETC  '&BP'(1,&BPPLEN)                                        17052400
.* Create the DSECT label:  prefix_IEWBrectype  (e.g., V1_IEWBESD),     17052500
.* or if no prefix, IEWBrectype (e.g, IEWBESD)                          17052600
.* This will be used to define the pointer basings for DSECTs           17052700
          AIF   ('&BPPLEN' GT '3').LB1                                  17052800
&DSCTLB   SETC  'IEWB'.'&BPP'                                           17052900
&RECTYPE  SETC  '&BPP'                                                  17053000
          AGO   .DSCTLBOK                                               17053100
.LB1      ANOP                                                          17053200
&LEN1     SETA   &BPPLEN-2                                              17053300
&LEN2     SETA   &BPPLEN-4                                              17053400
&RECTYPE  SETC  '&BPP'(&LEN1,3)                                         17053500
&DSCTLB   SETC   '&BPP'(1,&LEN2).'_IEWB'.'&RECTYPE'                     17053600
.DSCTLBOK ANOP                                                          17053700
* A Binder buffer consists of a header section, followed by             17053800
* a table of fixed size entries and an area for symbol names.           17053900
* Each name in the names list area consists of a halfword               17054000
* length followed by up to 64 characters.                               17055000
*                                                                       17056000
.*  NOTE: All variables defined from now on which contain the           17056100
.*  &BPP appendage, have been modified per change  @01 (see prolog)     17056200
.*                                                                      17056400
.*------Declares buffer header---------------------------------------   17056500
&BPP.H_START          DS    0F   1st byte of header.                    17057300
&BPP.H_BUFFER_ID      DS    CL8  Buffer eyecatcher.                     17058100
&BPP.H_BUFFER_LENG    DS    F    Buffer length, including this          17058900
*                               header, the buffer entries, and         17060000
*                               the names list area.                    17061000
&BPP.H_VERSION        DS    AL1  Version of buffer.                     17061900
                      DS    AL3  Reserved. Must be zero.                17062800
&BPP.H_ENTRY_LENG     DS    F    Length of each buffer entry.           17063700
&BPP.H_ENTRY_COUNT    DS    F    Number of slots for entries.           17064600
&BPP.H_NAMEPTR_ADJ    DS    F    Offset of name in names list area.     17065500
&BPP.H_STRING_PTR     DS    F    Address of Binder names list area.     17066400
&BPP.H_END            DS    0F   Beginning of 1st buffer entry.         17067300
                      ORG   &BPP.H_START                                17068200
&BPP.H_HEADER         DS    CL(&BPP.H_END-&BPP.H_START)                 17069100
&BPP.H_LENG           EQU   *-&BPP.H_HEADER Length of buffer header.    17070000
.*                                                                      17071100
.*------Declares base registers for buffer header and entry DSECTs---   17071200
         AIF   ('&BUFHHREG' EQ 'USERHEADREG').NOHREG                    17071300
&DSCTLB._BASE EQU &BUFHHREG     Base pointer for the mapping of         17071400
*                               the header of the Binder buffer.        17071500
*                               IEWBUFF FUNC=GETBUFF initializes        17071600
*                               this pointer when it obtains the        17071700
*                               storage for the buffer.                 17071800
.NOHREG  ANOP  ,                                                        17071900
         AIF   ('&BUFHEREG' EQ 'USERENTRYREG').NOEREG                   17072000
&BPP._BASE EQU &BUFHEREG        Base pointer for the mapping of         17072100
*                               one entry in the Binder buffer.         17072200
*                               IEWBUFF FUNC=GETBUF initializes         17072300
*                               this pointer to point to the first      17072400
*                               entry slot when it obtains the          17072500
*                               storage for the buffer.                 17072600
.NOEREG  ANOP  ,                                                        17072700
.*                                                                      17072800
.*------Declares buffer constants to initialize the buffer header----   17073000
&BUFHCSCT(1) &BUFHCSCT(2) ,     Resume CSECT (or RSECT)           @05C  17074000
                     DS    0F   Start on fullword boundary        @P9A  17074500
&BPP.I_INIT_VALUES   DS    CL(&BPP.H_LENG) Initial values for the       17075200
*                               buffer header.                          17076000
                     ORG   &BPP.I_INIT_VALUES                           17077000
&BPP.I_BUFFER_ID     DC    CL8'IEWB&RECTYPE ' Buffer eyecatcher.        17078000
&BPP.I_BUFFER_LENG   DC    A(&BUFHBUFL) Buffer length, including this   17079000
*                               header, the buffer entries, and         17080000
*                               the names list area.                    17081000
&BPP.I_VERSION        DC    AL1(&BUFHVER) Version of buffer.            17083600
                      DC    AL3(0) Reserved. Must be zero.              17086200
&BPP.I_ENTRY_LENG     DC    F'&BUFHENTL' Length of each buffer entry.   17088800
&BPP.I_ENTRY_COUNT    DC    F'&BUFHENTC' Number of slots for entries.   17091400
&BPP.I_NAMEPTR_ADJ    DC    F'0' Offset of name in names list area.     17094000
&BPP.I_STRING_PTR     DC    F'0' Address of names list area.            17096600
&BPP.I_END            DS    0F   End+1 of buffer header.                17099200
                      MEND                                              17101800
           PRINT  ON                                                    17105000
.*                                                                      17106000
.* NOTE: All variables defined from now on which contain the            17106100
.* following appendages have been modified per change @01 (see prolog): 17106200
.*                                                                      17106300
.*     &DSECTLBL                                                        17106400
.*     &PFX                                                             17106500
.*                                                                      17106600
.*-----Declares mapping of an ESD entry------------------------------   17107000
         AIF   ('&XTYPE' NE 'ESD').NOTESD                               17108000
&DSECTLBL  DSECT                                                        17108600
*                               Binder ESD buffer header.               17109200
*                               This DSECT is based on a register       17110000
*                               equated to the symbol named             17111000
*                               IEWBESD_BASE.                           17112000
          IEWBUFHD BP=&PFX,                                            X17113000
               BUFHENTL=&ENTRYLEN,                                     X17114000
               BUFHENTC=&ENTRYCOUNT,                                   X17115000
               BUFHBUFL=&BUFLEN,                                       X17116000
               BUFHVER=&XVERSION,                                      X17117000
               BUFHHREG=&XHEADREG,                                     X17118000
               BUFHEREG=&XENTRYREG,                                    X17119000
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  17120000
&PFX.ENTRY DSECT                                                        17121000
*                               ESD buffer entry. Repeated the          17122000
*                               number of times specified by            17123000
*                               ESDH_ENTRY_COUNT.                       17124000
*                               This DSECT is based on a                17125000
*                               register equated to the                 17126000
*                               symbol ESD_BASE.                        17127000
         AIF   ('&XVERSION' NE '1').ESD2MAP                       @L7C  17127600
&PFX.WORD0            DS    F                                           17128200
                      ORG   &PFX.WORD0                                  17129100
&PFX.TYPE             DS    CL2  Type of ESD entry.                     17130000
&PFX.SCOPE            DS    CL1  Scope of the symbol (where it          17130900
*                                is known or searched for).             17131800
&PFX.TEXT             DS    CL1  Type of program code                   17132700
*                                described by symbol.                   17133600
&PFX.WORD1            DS    F                                           17134500
                      ORG   &PFX.WORD1                                  17135400
&PFX.ALIGN            DS    XL1  Alignment specification.               17136300
*                                Applies to all section                 17137200
*                                definitions and pseudo                 17138100
*                                registers.                             17139000
&PFX.STORAGE          DS    XL1  Storage specification of               17139900
*                                section definition.                    17140800
                      DS    XL2  Reserved. Must be zero.                17141700
&PFX.WORD2            DS    F                                           17142600
                      ORG   &PFX.WORD2                                  17143500
&PFX.USABILITY        DS    XL1  Reusability of section                 17144400
*                                definition.                            17145300
&PFX.RMODE            DS    XL1  Residence mode of section              17146200
*                                definition.                            17147100
&PFX.AMODE            DS    XL1  Addressing mode of section             17148000
*                                definition.                            17148900
                      DS    XL1  Reserved. Must be zero.                17149800
&PFX.WORD3            DS    F                                           17150700
                      ORG   &PFX.WORD3                                  17151600
&PFX.AUTOCALL         DS    XL1  Autocall specification of              17152500
*                                reference.                             17153400
&PFX.STATUS           DS    XL1  Status of reference.                   17154300
                      DS    XL2  Reserved. Must be zero.                17155200
&PFX.REGION           DS    H    Overlay region number of               17156100
*                                section.                               17157000
&PFX.SEGMENT          DS    H    Overlay segment number of              17157900
*                                section.                               17158800
&PFX.LENG             DS    F    Length of defined object.              17159700
*                                Applies to section definitions         17160600
*                                and pseudo registers.                  17161500
&PFX.SECTION_OFFSET   DS    A    Offset of the symbol in                17162400
*                                the section.                           17163300
&PFX.MODULE_OFFSET    DS    A    Offset of the symbol in                17164200
*                                the module.                            17165100
                      DS    H    Reserved. Must be zero.                17166000
&PFX.NAME_CHARS       DS    H    Length of the name.                    17166900
&PFX.NAME_PTR         DS    A    Points to the name of the              17167800
*                                symbol (blank name is valid for        17168700
*                                private code and common).              17169600
                      DS    H    Reserved. Must be zero.                17170500
&PFX.TARGET_CHARS     DS    H    Length of the target.                  17171400
&PFX.TARGET_PTR       DS    F    Points to the name of                  17172300
*                                the section in which the               17173200
*                                definition of referenced               17174100
*                                symbol resides. Applies to             17175000
*                                external references.                   17175900
                      DS    H    Reserved. Must be zero.                17176800
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                17177700
&PFX.RESIDENT_PTR     DS    F    Points to the name of the              17178600
*                                section in which this                  17179500
*                                specification of the                   17180400
*                                symbol resides. Applies                17181300
*                                to label definitions and               17182200
*                                pseudo registers.                      17183100
&PFX.END              DS    0F   End+1 of ESD entry.                    17184000
          AGO   .ESDDONE2                                         @L2A  17184900
.ESD2MAP AIF   ('&XVERSION' NE '2').ESD3MAP                       @L7C  17185000
&PFX.WORD0            DS    F                                           17185100
                      ORG   &PFX.WORD0                                  17185200
&PFX.TYPE             DS    CL2  Type of ESD entry.               @04A  17185300
&PFX.TYPE_QUAL        DS    CL2  ESD record type qualifier        @04A  17185400
&PFX.NAME_SPACE       DS    CL1  Name space of symbol             @04A  17185500
&PFX.SCOPE            DS    CL1  Scope of the symbol (where it    @04A  17185600
*                                is known or searched for).             17185700
&PFX.NAME             DS    CL6  Symbol represented by ESD record @04A  17185800
                      ORG   &PFX.NAME                                   17185900
&PFX.NAME_CHARS       DS    H    Length of the name.              @04A  17186000
&PFX.NAME_PTR         DS    A    Points to the name of the        @04A  17186100
*                                symbol (blank name is valid for        17186200
*                                private code and common).              17186300
&PFX.FILL_CHAR        DS    CL2  FILL char                        @04A  17186400
&PFX.RES_SECTION      DS    CL6  Name of owning or containing     @04A  17186500
*                                section                                17186600
                      ORG   &PFX.RES_SECTION                            17186700
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.          @04A  17186800
&PFX.RESIDENT_PTR     DS    A    Points to the name of the        @04A  17186900
*                                section in which this                  17187000
*                                specification of the                   17187100
*                                symbol resides. Applies                17187200
*                                to label definitions and               17187300
*                                pseudo registers.                      17187400
&PFX.LENG             DS    F    Length of Defined element        @04A  17187500
&PFX.ALIGN            DS    XL1  Alignment specification.         @04A  17187600
*                                Applies to all section                 17187700
*                                definitions and pseudo                 17187800
*                                registers.                             17187900
&PFX.USABILITY        DS    XL1  Reusability of section           @04A  17188000
*                                definition.                            17188100
&PFX.AMODE            DS    XL1  Addressing mode of section       @04A  17188200
*                                definition.                            17188300
&PFX.RMODE            DS    XL1  Residence mode of section        @04A  17188400
*                                definition.                            17188500
&PFX.RECORD_FMT       DS    H    Record format for class          @04A  17188600
&PFX.LOAD_FLAGS       DS    BL1  Load attributes                  @04A  17188700
&PFX.RO         EQU   X'80'      Read-Only                              17188800
&PFX.NL         EQU   X'40'      Do not load with module                17188900
&PFX.MOVE       EQU   X'20'      Moveable                               17189000
&PFX.SHR        EQU   X'10'      Shareable                              17189100
&PFX.BIND_FLAGS       DS    BL1  Bind attributes                  @04A  17189200
&PFX.GEND       EQU   X'80'      Binder-Generated                       17189300
&PFX.NO_CLASS   EQU   X'40'      No class data available                17189400
&PFX.VL         EQU   X'20'      Variable length records                17189500
&PFX.DESCR      EQU   X'10'      Descriptive data                       17189600
&PFX.FILL_EXISTS EQU   X'08'     FILL has been set                      17189700
&PFX.BIND_CNTL        DS    BL1  Type of program code described   @04A  17189800
*                                by symbol                              17189900
&PFX.RES1       EQU   X'C0'      First two bits reserved                17190000
&PFX.METH       EQU   X'30'      Binding Method                         17190100
*                               '00'B = Catenate                        17190200
*                               '01'B = Merge                           17190300
*                               '1-'B = Reserved                        17190400
&PFX.TEXT_TYPE  EQU   X'0F'      Text type                              17190500
*                               '0000'B = Unspecified                   17190600
*                               '0001'B = Instructions                  17190700
*                               '0010'B = Data                          17190800
*                               '0011'B = Translator defn               17190900
&PFX.PRECEDENCE       DS    BL1  Reserved                         @04A  17191000
&PFX.XATTR_CLS_CHARS  DS    H    Length of XATTR class name       @04A  17191100
&PFX.XATTR_CLS_PTR    DS    A    Extended attributes class        @04A  17191200
&PFX.XATTR_OFFSET     DS    F    Extended attributes              @04A  17191300
&PFX.SEGMENT          DS    H    Overlay segment number of        @04A  17191400
*                                section.                               17191500
&PFX.REGION           DS    H    Overlay region number of         @04A  17191600
*                                section.                               17191700
&PFX.SIGNATURE        DS    CL8  Interface signature              @04A  17191800
&PFX.AUTOCALL         DS    BL1  Autocall specification -         @04A  17191900
*                                applies to references                  17192000
&PFX.NEVERCALL  EQU   X'80'      NEVERCALL was specified                17192100
&PFX.MINOR      EQU   X'40'      Autocalled from LPA                    17192200
&PFX.STATUS           DS    BL1  Status                           @04A  17192300
&PFX.RESOLVED   EQU   X'80'      Symbol is resolved                     17192400
&PFX.AC_PROC    EQU   X'40'      Processed by AUTOCALL                  17192500
&PFX.INCLUDE    EQU   X'20'      INCLUDE attempted                      17192600
&PFX.NOT_FOUND  EQU   X'10'      Member not found                       17192700
&PFX.EXTERNAL   EQU   X'08'      Resolved outside module                17192800
&PFX.NOCALL     EQU   X'04'      NOCALL/NEVERCALL                       17192900
&PFX.NO_REFS    EQU   X'02'      No strong references                   17193000
&PFX.LIBRARY    EQU   X'01'      Special call library requested         17193100
&PFX.TARGET_CHARS     DS    H    Length of the target.            @04A  17193200
&PFX.TARGET_PTR       DS    A    Points to the name of            @04A  17193300
*                                the section in which the               17193400
*                                definition of referenced               17193500
*                                symbol resides. Applies to             17193600
*                                external references.                   17193700
                      DS    H    Reserved. Must be zero.          @04A  17193800
&PFX.RES_CLASS_CHARS  DS    H    Length of the class              @04A  17193900
&PFX.RES_CLASS_PTR    DS    A    Points to name of containing class     17194000
&PFX.ELEM_OFFSET      DS    F    Offset within the class element  @04A  17194100
&PFX.CLASS_OFFSET     DS    F    Offset within the class segment  @04A  17194200
&PFX.END              DS    0F   End+1 of Version2 ESD entry.     @04A  17194300
          AGO   .ESDDONE2                                         @04A  17194400
.ESD3MAP ANOP  ,                                                  @04C  17194500
&PFX.WORD0            DS    F                                           17194600
                      ORG   &PFX.WORD0                                  17194700
&PFX.TYPE             DS    CL2  Type of ESD entry.                     17194800
&PFX.TYPE_QUAL        DS    CL2  ESD record type qualifier              17194900
&PFX.NAME_SPACE       DS    CL1  Name space of symbol                   17195000
&PFX.SCOPE            DS    CL1  Scope of the symbol (where it          17195100
*                                is known or searched for).             17195200
&PFX.NAME             DS    CL6  Symbol represented by ESD record       17195300
                      ORG   &PFX.NAME                                   17195400
&PFX.NAME_CHARS       DS    H    Length of the name.                    17195500
&PFX.NAME_PTR         DS    A    Points to the name of the              17195600
*                                symbol (blank name is valid for        17195700
*                                private code and common).              17195800
&PFX.SYMBOL_ATTR      DS    BL1  FILL char                         @L3A 17195900
&PFX.STRONG     EQU   X'80'      ON=Strong reference or definition @L3A 17196000
&PFX.RENAMEABLE EQU   X'40'      This symbol is mapped,not renamed@P10A 17196100
&PFX.DESCRIPTOR EQU   X'20'      Symbol defines or references a    @L5A 17196200
*                                linkage block (descriptor)        @L5A 17196300
&PFX.MANGLED    EQU   X'10'      Name may be mangled               @PAA 17196400
&PFX.XPLINK     EQU   X'08'      Uses XPLINK linkage conventions   @PAA 17196500
&PFX.FILL_CHAR        DS    CL1  FILL char                         @L3C 17196600
&PFX.RES_SECTION      DS    CL6  Name of owning or containing           17196700
*                                section                                17196800
                      ORG   &PFX.RES_SECTION                            17196900
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                17197000
&PFX.RESIDENT_PTR     DS    A    Points to the name of the              17197100
*                                section in which this                  17197200
*                                specification of the                   17197300
*                                symbol resides. Applies                17197400
*                                to label definitions and               17197500
*                                pseudo registers.                      17197600
&PFX.LENG             DS    F    Length of Defined element              17197700
&PFX.ALIGN            DS    XL1  Alignment specification.               17197800
*                                Applies to all section                 17197900
*                                definitions and pseudo                 17198000
*                                registers.                             17198100
&PFX.USABILITY        DS    XL1  Reusability of section                 17198200
*                                definition.                            17198300
&PFX.AMODE            DS    XL1  Addressing mode of section             17198400
*                                definition.                            17198500
&PFX.RMODE            DS    XL1  Residence mode of section              17198600
*                                definition.                            17198700
&PFX.RECORD_FMT       DS    H    Record format for class                17198800
&PFX.LOAD_FLAGS       DS    BL1  Load attributes                        17198900
&PFX.RO         EQU   X'80'      Read-Only                              17199000
&PFX.NL         EQU   X'40'      Do not load with module                17199100
&PFX.MOVE       EQU   X'20'      Moveable                               17199200
&PFX.SHR        EQU   X'10'      Shareable                              17199300
&PFX.DEFER      EQU   X'08'      Deferred load                  @L3A    17199400
&PFX.BIND_FLAGS       DS    BL1  Bind attributes                        17199500
&PFX.GEND       EQU   X'80'      Binder-Generated                       17199600
&PFX.NO_CLASS   EQU   X'40'      No class data available                17199700
&PFX.VL         EQU   X'20'      Variable length records                17199800
&PFX.DESCR      EQU   X'10'      Descriptive data                       17199900
&PFX.INIT       EQU   X'08'      Has part initializers                  17200000
&PFX.FILL_EXISTS EQU   X'04'     FILL has been set             @L3A     17200100
&PFX.PADDING     EQU   X'02'     Class has padding at start    @PAC     17200200
&PFX.BIND_CNTL        DS    BL1  Type of program code described         17200300
*                                by symbol                              17200400
&PFX.RES1       EQU   X'C0'      First two bits reserved                17200500
&PFX.METH       EQU   X'30'      Binding Method                         17200600
*                               '00'B = Catenate                        17200700
*                               '01'B = Merge                           17200800
*                               '1-'B = Reserved                        17200900
&PFX.TEXT_TYPE  EQU   X'0F'      Text type                              17201000
*                               '0000'B = Unspecified                   17201100
*                               '0001'B = Instructions                  17201200
*                               '0010'B = Data                          17201300
*                               '0011'B = Translator defn               17201400
                      DS    XL1  Reserved                               17201500
&PFX.XATTR_CLS_CHARS  DS    H    Length of XATTR class name             17201600
&PFX.XATTR_CLS_PTR    DS    A    Extended attributes class              17201700
&PFX.XATTR_OFFSET     DS    F    Extended attributes                    17201800
&PFX.SEGMENT          DS    H    Overlay segment number of              17201900
*                                section.                               17202000
&PFX.REGION           DS    H    Overlay region number of               17202100
*                                section.                               17202200
&PFX.SIGNATURE        DS    CL8  Interface signature               @L2A 17202300
&PFX.AUTOCALL         DS    BL1  Autocall specification -               17202400
*                                applies to references                  17202500
&PFX.NEVERCALL  EQU   X'80'      NEVERCALL was specified           @L3A 17202600
&PFX.MINOR      EQU   X'40'      Autocalled from LPA               @L3A 17202700
&PFX.STATUS           DS    BL1  Status                                 17202800
&PFX.RESOLVED   EQU   X'80'      Symbol is resolved                @L3A 17202900
&PFX.AC_PROC    EQU   X'40'      Processed by AUTOCALL             @L3A 17203000
&PFX.INCLUDE    EQU   X'20'      INCLUDE attempted                 @L3A 17203100
&PFX.NOT_FOUND  EQU   X'10'      Member not found                  @L3A 17203200
&PFX.EXTERNAL   EQU   X'08'      Resolved outside module           @L3A 17203300
&PFX.NOCALL     EQU   X'04'      NOCALL/NEVERCALL                  @L3A 17203400
&PFX.NO_REFS    EQU   X'02'      No strong references              @L3A 17203500
&PFX.LIBRARY    EQU   X'01'      Special call library requested    @L3A 17203600
&PFX.TARGET_CHARS     DS    H    Length of the target.                  17203700
&PFX.TARGET_PTR       DS    A    Points to the name of                  17203800
*                                the section in which the               17203900
*                                definition of referenced               17204000
*                                symbol resides. Applies to             17204100
*                                external references.                   17204200
                      DS    H    Reserved. Must be zero.                17204300
&PFX.RES_CLASS_CHARS  DS    H    Length of the class                    17204400
&PFX.RES_CLASS_PTR    DS    A    Points to name of containing class     17204500
&PFX.ELEM_OFFSET      DS    F    Offset within the class element        17204600
&PFX.CLASS_OFFSET     DS    F    Offset within the class segment        17204700
                      DS    H    Reserved. Must be zero.                17204800
&PFX.ADA_LL           DS    H    Associated Data Leng           @L5A    17204900
&PFX.ADA_PTR          DS    A    Points to Associated data      @L5A    17205000
                      DS    1F   Reserved. Must be zero.        @L5C    17205100
&PFX.PRIORITY         DS    F    Binding sequence                @L4A   17205200
&PFX.END              DS    0F   End+1 of Version2 ESD entry.           17205300
.ESDDONE2 ANOP  ,                                                @L2A   17205400
.*                                                               @05D   17205550
         AGO   .TOCSECT                                          @05C   17205600
.NOTESD  ANOP  ,                                                        17205700
.*                                                                      17205800
.*-----Declares mapping of an RLD entry------------------------------   17205900
         AIF   ('&XTYPE' NE 'RLD').NOTRLD                               17206000
&DSECTLBL  DSECT                                                        17206100
*                               Binder RLD buffer header.               17206200
*                               This DSECT is based on a register       17206300
*                               equated to the symbol named             17206400
*                               IEWBRLD_BASE.                           17206500
          IEWBUFHD BP=&PFX,                                            X17206600
               BUFHENTL=&ENTRYLEN,                                     X17206700
               BUFHENTC=&ENTRYCOUNT,                                   X17206800
               BUFHBUFL=&BUFLEN,                                       X17206900
               BUFHVER=&XVERSION,                                      X17207000
               BUFHHREG=&XHEADREG,                                     X17207100
               BUFHEREG=&XENTRYREG,                                    X17207200
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  17207300
&PFX.ENTRY            DSECT                                             17207400
*                                RLD buffer entry. Repeated the         17207500
*                                number of times specified by           17207600
*                                RLDH_ENTRY_COUNT.                      17207700
*                                This DSECT is based on a               17208500
*                                register equated to the                17209400
*                                symbol RLD_BASE.                       17210300
          AIF   ('&XVERSION' NE '1').RLD2MAP                       @L7C 17211200
&PFX.WORD1            DS    F                                           17212100
                      ORG   &PFX.WORD1                                  17213000
&PFX.TYPE             DS    XL1  ADCON type.                            17213900
&PFX.STATUS           DS    XL1  ADCON relocation status.               17214800
&PFX.ADCON_BDY        DS    XL1  ADCON boundary specification.          17215700
&PFX.ADCON_DIRECTION  DS    XL1  ADCON relocation direction.            17216600
&PFX.WORD2            DS    F                                           17217500
                      ORG   &PFX.WORD2                                  17218400
&PFX.ADCON_LENG       DS    H    Length of the ADCON.                   17219300
                      DS    H    Reserved. Must be zero.                17220200
&PFX.SECTION_OFFSET   DS    A    Offset of the address                  17221100
*                                constant within the                    17222000
*                                resident section.                      17222900
&PFX.MODULE_OFFSET    DS    A    Offset of the address                  17223800
*                                constant within the module.            17224700
                      DS    H    Reserved. Must be zero.                17225600
&PFX.TARGET_CHARS     DS    H    Length of the target.                  17226500
&PFX.TARGET_PTR       DS    A    Points to the name of                  17227400
*                                the symbol to which the ADCON          17228300
*                                points.                                17229200
                      DS    H    Reserved. Must be zero.                17230100
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                17231000
&PFX.RESIDENT_PTR     DS    A    Points to the name of section          17231900
*                                in which the ADCON resides             17232800
*                                (ignored on input).                    17233700
&PFX.END              DS    0F   End+1 of the RLD entry.                17234600
         AGO   .RLDDONE2                                         @L2A   17236100
.RLD2MAP  AIF   ('&XVERSION' NE '2').RLD3MAP                       @L7C 17237200
&PFX.WORD1            DS    F                                           17238300
                      ORG   &PFX.WORD1                                  17239400
&PFX.TYPE             DS    XL1  ADCON type.                            17240500
&PFX.STATUS           DS    XL1  ADCON relocation status.               17241600
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                17242700
&PFX.RESIDENT_PTR     DS    A    Points to the name of section          17243800
*                                in which the ADCON resides             17244900
&PFX.ADCON_LENG       DS    H    Length of the ADCON.                   17246000
&PFX.CLASS_CHARS      DS    H    Length of the resident class name      17247100
&PFX.CLASS_PTR        DS    A    Points to the name of class            17248200
*                                in which the ADCON resides             17249300
&PFX.ELEM_OFFSET      DS    F    Offset of the address constant         17250400
*                                within the containing element          17251500
&PFX.CLASS_OFFSET     DS    F    Offset of the address                  17252600
*                                within class segment                   17253700
&PFX.ADCON_BDY        DS    XL1  ADCON boundary specification.          17254800
&PFX.BIND_ATTR        DS    BL1  ADCON Boundary status                  17255900
&PFX.DIRECTION  EQU   X'80'      Relocation sign                        17257000
*                                  '0' = Positive                       17258100
*                                  '1' = Negative                       17259200
&PFX.HOBSET     EQU   X'40'      Set high order bit from                17260300
*                                AMODE of target.                       17261400
&PFX.INT_EXT    EQU   X'20'      Internal/External                      17262500
*                                  '0' = Internal                       17263600
*                                  '1' = External                       17264700
&PFX.HOBCHG     EQU   X'10'      High order bit changed by Binder       17265800
&PFX.XATTR_CLASS_CHARS DS   H    Length of extended attr class name     17266900
&PFX.XATTR_CLASS_PTR  DS    A    Points to the extended attributes      17268000
*                                class name                             17269100
&PFX.XATTR_OFFSET     DS    F    Offset of the extended attributes      17270200
*                                in the element                         17271300
&PFX.NAME_SPACE       DS    XL1  Name space of reference                17272400
&PFX.SEGM_ID          DS    XL1  Reserved                               17273500
&PFX.TARGET_CHARS     DS    H    Length of the target name              17274600
&PFX.TARGET_PTR       DS    A    Points to the name of                  17275700
*                                the symbol to which the ADCON          17276800
*                                points.                                17277900
&PFX.END              DS    0F   End+1 of the RLD entry.                17278000
         AGO   .RLDDONE2                                         @L2A   17278100
.RLD3MAP ANOP  ,                                                 @L2A   17278200
&PFX.WORD1            DS    F                                           17278300
                      ORG   &PFX.WORD1                                  17278400
&PFX.TYPE             DS    XL1  ADCON type.                            17278500
&PFX.STATUS           DS    XL1  ADCON relocation status.               17278600
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                17278700
&PFX.RESIDENT_PTR     DS    A    Points to the name of section          17278800
*                                in which the ADCON resides             17278900
&PFX.ADCON_LENG       DS    H    Length of the ADCON.                   17279000
&PFX.RES_CLASS_CHARS  DS    H    Length of the resident class name      17279100
&PFX.RES_CLASS_PTR    DS    A    Points to the name of class            17279200
*                                in which the ADCON resides             17279300
&PFX.RES_OFFSET       DS    F    Offset of the address constant         17279400
*                                within the containing element          17279500
*                                or part:                               17279600
*                                If RES_PART_LL=0 then Element          17279700
*                                If RES_PART_LL>0 then Part             17279800
&PFX.CLASS_OFFSET     DS    F    Offset of the address                  17279900
*                                within class segment                   17280000
&PFX.ADCON_BDY        DS    XL1  ADCON boundary specification.          17280100
&PFX.BIND_ATTR        DS    BL1  ADCON Boundary status                  17280200
&PFX.DIRECTION  EQU   X'80'      Relocation sign                        17280300
*                                  '0' = Positive                       17280400
*                                  '1' = Negative                       17280500
&PFX.HOBSET     EQU   X'40'      Set high order bit from                17280600
*                                AMODE of target.                       17280700
&PFX.INT_EXT    EQU   X'20'      Internal/External                      17280800
*                                  '0' = Internal                       17280900
*                                  '1' = External                       17281000
&PFX.HOBCHG     EQU   X'10'      High order bit changed by Binder       17281100
&PFX.PARTRES    EQU   X'08'      Adcon loc in part                      17281200
.*                                                                 @L7D 17281300
&PFX.XATTR_CLASS_CHARS DS   H    Length of extended attr class name     17281400
&PFX.XATTR_CLASS_PTR  DS    A    Points to the extended attributes      17281500
*                                class name                             17281600
&PFX.XATTR_OFFSET     DS    F    Offset of the extended attributes      17281700
*                                in the element                         17281800
&PFX.NAME_SPACE       DS    XL1  Name space of reference                17281900
&PFX.SEGM_ID          DS    XL1  Reserved                               17282000
&PFX.TARGET_CHARS     DS    H    Length of the target name              17282100
&PFX.TARGET_PTR       DS    A    Points to the name of                  17282200
*                                the symbol to which the ADCON          17282300
*                                points.                                17282400
&PFX.PAD1             DS    XL2  Reserved                               17282500
&PFX.RES_PART_LL      DS    H    Resident part length                   17282600
&PFX.RES_PART_PTR     DS    A    Resident part pointer                  17282700
&PFX.END              DS    0F   End+1 of the RLD entry.                17282800
.RLDDONE2 ANOP  ,                                                @L2A   17283400
.*                                                               @05D   17285190
         AGO   .TOCSECT                                          @05C   17285880
.NOTRLD  ANOP  ,                                                        17286700
.*-----Declares mapping of a TXT entry ------------------------------   17287200
         AIF   ('&XTYPE' NE 'TXT').NOTTXT                               17287800
&DSECTLBL  DSECT                                                        17313400
*                               Binder TXT buffer header.               17339000
*                               This DSECT is based on a register       17575800
*                               equated to the symbol named             17588700
*                               IEWBTXT_BASE.                           17601600
          IEWBUFHD BP=&PFX,                                            X17614500
               BUFHENTL=&ENTRYLEN,                                     X17627400
               BUFHENTC=&ENTRYCOUNT,                                   X17640300
               BUFHBUFL=&BUFLEN,                                       X17653200
               BUFHVER=&XVERSION,                                      X17666100
               BUFHHREG=&XHEADREG,                                     X17679000
               BUFHEREG=&XENTRYREG,                                    X17691900
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  17704800
&PFX.ENTRY            DSECT                                             17717700
*                               TXT buffer entry. Repeated the          17730600
*                               number of times specified by            17743500
*                               TXTH_ENTRY_COUNT.                       17756400
*                               This DSECT is based on a                17769300
*                               register equated to the                 17782200
*                               symbol TXT_BASE.                        17795100
&PFX.BYTE             DS    CL1  One byte of TXT.                       17820900
.*                                                               @05D   17854690
         AGO   .TOCSECT                                          @05C   17862680
.NOTTXT  ANOP  ,                                                        17872500
.*-----Declares mapping of a SYM entry ------------------------------   17878900
         AIF   ('&XTYPE' NE 'SYM').NOTSYM                               17885400
&DSECTLBL  DSECT                                                        17935400
*                               Binder SYM buffer header.               17985400
*                               This DSECT is based on a register       18139200
*                               equated to the symbol named             18158800
*                               IEWBSYM_BASE.                           18178400
          IEWBUFHD BP=&PFX,                                            X18198000
               BUFHENTL=&ENTRYLEN,                                     X18217600
               BUFHENTC=&ENTRYCOUNT,                                   X18237200
               BUFHBUFL=&BUFLEN,                                       X18256800
               BUFHVER=&XVERSION,                                      X18276400
               BUFHHREG=&XHEADREG,                                     X18296000
               BUFHEREG=&XENTRYREG,                                    X18315600
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  18335200
&PFX.ENTRY            DSECT                                             18354800
*                                SYM buffer entry. Repeated the         18374400
*                                number of times specified by           18394000
*                                SYMH_ENTRY_COUNT.                      18413600
*                                This DSECT is based on a               18433200
*                                register equated to the                18452800
*                                symbol SYM_BASE.                       18472400
&PFX.CREATE_DATE      DS    CL7  Date the SYM data was created.         18492000
                      DS    XL1  Reserved. Must be zero.                18511600
&PFX.DATA_CHARS       DS    H    Length of data in SYM_DATA.            18531200
&PFX.DATA             DS    CL80 Symbol data.                           18550800
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                18570400
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the              18590000
*                                section containing this                18609600
*                                symbol (ignored on input).             18629200
&PFX.END              DS    0F   End+1 of SYM entry.                    18648800
.*                                                               @05D   18678390
         AGO   .TOCSECT                                          @05C   18688380
.NOTSYM  ANOP  ,                                                        18707600
.*-----Declares mapping of a IDRB entry -----------------------------   18717400
         AIF   ('&XTYPE' NE 'IDB').NOTIDB                               18727200
&DSECTLBL  DSECT                                                        18777200
*                               Binder IDB buffer header.               18827200
*                               This DSECT is based on a register       18997200
*                               equated to the symbol named             19020800
*                               IEWBIDB_BASE.                           19044400
          IEWBUFHD BP=&PFX,                                            X19068000
               BUFHENTL=&ENTRYLEN,                                     X19091600
               BUFHENTC=&ENTRYCOUNT,                                   X19115200
               BUFHBUFL=&BUFLEN,                                       X19138800
               BUFHVER=&XVERSION,                                      X19162400
               BUFHHREG=&XHEADREG,                                     X19186000
               BUFHEREG=&XENTRYREG,                                    X19209600
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  19233200
&PFX.ENTRY            DSECT                                             19255600
*                                IDB buffer entry. Repeated the         19278000
*                                number of times specified by           19300400
*                                IDBH_ENTRY_COUNT.                      19322800
*                                This DSECT is based on a               19345200
*                                register equated to the                19367600
*                                symbol IDB_BASE.                       19390000
&PFX.BINDER_ID        DS    CL10 Binder identification characters.      19412400
&PFX.VERSION          DS    CL2  Version of the Binder.                 19434800
&PFX.RELEASE          DS    CL2  Release of the Binder.                 19457200
&PFX.DATE_BOUND       DS    CL7  Date of Binding (YYYYDDD).             19479600
&PFX.TIME_BOUND       DS    CL6  Time of Binding (HHMMSS).              19502000
                      DS    XL1  Reserved. Must be zero.                19524400
&PFX.MODULE_SIZE      DS    F    Length of program text data.           19546800
&PFX.CALLERID_CHARS   DS    H    Number of significant characters       19569200
*                                in IDB_CALLERID (ignored on input).    19591600
&PFX.CALLERID         DS    CL80 Caller identification (ignored         19614000
*                                on input).                             19636400
&PFX.PAD1             DS    H    2 byte pad for boundary alignment.     19658800
&PFX.END              DS    0F   End+1 of IDB entry.                    19681200
.*                                                               @05D   19715190
         AGO   .TOCSECT                                          @05C   19725180
.NOTIDB  ANOP  ,                                                        19752400
.*-----Declares mapping of a IDRL entry -----------------------------   19764200
         AIF   ('&XTYPE' NE 'IDL').NOTIDL                               19776000
&DSECTLBL  DSECT                                                        19826000
*                               Binder IDL buffer header.               19876000
*                               This DSECT is based on a register       20047200
*                               equated to the symbol named             20070800
*                               IEWBIDL_BASE.                           20094400
          IEWBUFHD BP=&PFX,                                            X20118000
               BUFHENTL=&ENTRYLEN,                                     X20141600
               BUFHENTC=&ENTRYCOUNT,                                   X20165200
               BUFHBUFL=&BUFLEN,                                       X20188800
               BUFHVER=&XVERSION,                                      X20212400
               BUFHHREG=&XHEADREG,                                     X20236000
               BUFHEREG=&XENTRYREG,                                    X20259600
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  20283200
&PFX.ENTRY            DSECT                                             20306800
*                                IDL buffer entry. Repeated the         20330400
*                                number of times specified by           20354000
*                                IDLH_ENTRY_COUNT.                      20377600
*                                This DSECT is based on a               20401200
*                                register equated to the                20424800
*                                symbol IDL_BASE.                       20448400
&PFX.PID_ID           DS    CL10 Processor identification (PID          20472000
*                                order number).                         20495600
&PFX.VERSION          DS    CL2  Processor version  number.             20519200
&PFX.MOD_LEVEL        DS    CL2  Processor modification level.          20542800
&PFX.DATE_PROCESSED   DS    CL7  Date of compilation or assembly        20566400
*                                (YYYYDDD).                             20590000
                      DS    XL1  Reserved. Must be zero.                20613600
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                20637200
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the section      20660800
*                                to which this identification data      20684400
*                                applies.                               20708000
&PFX.END              DS    0F   End+1 of IDL entry.                    20731600
.*                                                               @05D   20765190
         AGO   .TOCSECT                                          @05C   20775180
.NOTIDL  ANOP  ,                                                        20802400
.*-----Declares mapping of a IDRU entry -----------------------------   20814200
         AIF   ('&XTYPE' NE 'IDU').NOTIDU                               20826000
&DSECTLBL  DSECT                                                        20876000
*                               Binder IDU buffer header.               20926000
*                               This DSECT is based on a register       21091000
*                               equated to the symbol named             21111500
*                               IEWBIDU_BASE.                           21132000
          IEWBUFHD BP=&PFX,                                            X21152500
               BUFHENTL=&ENTRYLEN,                                     X21173000
               BUFHENTC=&ENTRYCOUNT,                                   X21193500
               BUFHBUFL=&BUFLEN,                                       X21214000
               BUFHVER=&XVERSION,                                      X21234500
               BUFHHREG=&XHEADREG,                                     X21255000
               BUFHEREG=&XENTRYREG,                                    X21275500
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  21296000
&PFX.ENTRY            DSECT                                             21316500
*                                IDU buffer entry. Repeated the         21337000
*                                number of times specified by           21357500
*                                IDUH_ENTRY_COUNT.                      21378000
*                                This DSECT is based on a               21398500
*                                register equated to the                21419000
*                                symbol IDU_BASE.                       21439500
&PFX.CREATE_DATE      DS    CL7  Date the IDRU data was created.        21460000
                      DS    XL1  Reserved. Must be zero.                21480500
&PFX.DATA_CHARS       DS    H    Number of significant characters       21501000
*                                in IDU_DATA.                           21521500
&PFX.DATA             DS    CL80 User identification data.              21542000
&PFX.RESIDENT_CHARS   DS    H    Length of resident.                    21562500
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the section      21583000
*                                to which this identification data      21603500
*                                applies.                               21624000
&PFX.END              DS    0F   End+1 of IDU entry.                    21644500
.*                                                               @05D   21674990
         AGO   .TOCSECT                                          @05C   21684980
.NOTIDU  ANOP  ,                                                        21706000
.*-----Declares mapping of a IDRZ entry -----------------------------   21716200
         AIF   ('&XTYPE' NE 'IDZ').NOTIDZ                               21726500
&DSECTLBL  DSECT                                                        21776500
*                               Binder IDZ buffer header.               21826500
*                               This DSECT is based on a register       21995400
*                               equated to the symbol named             22018100
*                               IEWBIDZ_BASE.                           22040800
          IEWBUFHD BP=&PFX,                                            X22063500
               BUFHENTL=&ENTRYLEN,                                     X22086200
               BUFHENTC=&ENTRYCOUNT,                                   X22108900
               BUFHBUFL=&BUFLEN,                                       X22131600
               BUFHVER=&XVERSION,                                      X22154300
               BUFHHREG=&XHEADREG,                                     X22177000
               BUFHEREG=&XENTRYREG,                                    X22199700
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  22222400
&PFX.ENTRY            DSECT                                             22245100
*                                IDZ buffer entry. Repeated the         22267800
*                                number of times specified by           22290500
*                                IDZH_ENTRY_COUNT.                      22313200
*                                This DSECT is based on a               22335900
*                                register equated to the                22358600
*                                symbol IDZ_BASE.                       22381300
&PFX.DATE             DS    CL7  Date the zap was applied (YYYYDDD).    22404000
&PFX.ZAP_DATA         DS    CL8  PTF number or other ZAP                22426700
*                                identification data.                   22449400
                      DS    XL3  Reserved. Must be zero.                22472100
&PFX.RESIDENT_CHARS   DS    H    Length of resident.                    22494800
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the section      22517500
*                                to which this ZAP data applies         22540200
*                                (ignored on input).                    22562900
&PFX.END              DS    0F   End+1 of IDZ entry.                    22585600
.*                                                               @05D   22618290
         AGO   .TOCSECT                                          @05C   22628280
.NOTIDZ  ANOP  ,                                                        22653700
.*-----Declares mapping of a NAME entry -----------------------------   22665000
         AIF   ('&XTYPE' NE 'BNL').NOTBNL                               22676400
.*                                                               2@L6D  22707600
&DSECTLBL  DSECT                                                        22738900
*                               Binder BNL buffer header.               22776400
*                               This DSECT is based on a register       22932200
*                               equated to the symbol named             22948300
*                               IEWBBNL_BASE.                           22964400
          IEWBUFHD BP=&PFX,                                            X22980500
               BUFHENTL=&ENTRYLEN,                                     X22996600
               BUFHENTC=&ENTRYCOUNT,                                   X23012700
               BUFHBUFL=&BUFLEN,                                       X23028800
               BUFHVER=&XVERSION,                                      X23044900
               BUFHHREG=&XHEADREG,                                     X23061000
               BUFHEREG=&XENTRYREG,                                    X23077100
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  23093200
&PFX.ENTRY            DSECT                                             23111600
*                                Binder name list (BNL)                 23130000
*                                buffer entry. Repeated the             23148400
*                                number of times specified              23166800
*                                by BNLH_ENTRY_COUNT.                   23185200
*                                This DSECT is based on a               23203600
*                                register equated to the                23222000
*                                symbol BNL_BASE.                       23240400
         AIF   ('&XVERSION' NE '1').BNL2                          @L6A  23249600
&PFX.NAME_CHARS       DS    H    Number of significant characters in    23258800
*                                BNL_SECTION_V (ignored on input)  @P6C 23277200
&PFX.PAD1             DS    H    2 byte pad for boundary alignment @P6C 23295600
&PFX.NAME_PTR         DS    AL4  Pointer to class or section name  @P6C 23314000
&PFX.END              DS    0F   End+1 of the BNL entry.                23332400
.*                                                               @05D   23358790
         AGO   .TOCSECT                                          @05C   23366780
.BNL2    AIF   ('&XVERSION' GT '3').BNL4                           @L2A 23375100
.*                                                               22@L6D 23383300
&PFX.CLS_LENGTH       DS    F    Class length (for class names)    @L2A 23391600
*                                                                       23392500
&PFX.BIND_FLAGS       DS    XL1  Flag bits                         @L2A 23393500
&PFX.BF_GEND          EQU   X'80'  Generated by Binder             @L6A 23393700
&PFX.BF_EMPTY         EQU   X'40'  No data present                 @L6A 23393900
&PFX.BF_VL            EQU   X'20'  Varying length records          @L6A 23394100
&PFX.BF_DESCR         EQU   X'10'  Descriptive data (non-text)     @L6A 23394300
&PFX.BF_INIT          EQU   X'08'  Class has initial data          @L6A 23394500
&PFX.BF_FILL          EQU   X'04'  Fill character specified        @L6A 23394700
&PFX.BF_ERROR         EQU   X'01'  Class validation error          @L6A 23394900
*                                                                       23395100
&PFX.PAD1             DS    XL1  1 byte pad for boundary alignment @L2C 23395400
&PFX.NAME_CHARS       DS    H    Number of significant characters in    23397300
*                                BNL_SECTION_V (ignored on input)  @P6C 23399200
&PFX.NAME_PTR         DS    AL4  Pointer to class or section name  @P6C 23401100
&PFX.ELEM_COUNT       DS    F    Number elements in class or sect  @L2A 23403000
&PFX.END              DS    0F   End+1 of the BNL entry.                23404900
.*                                                               @05D   23407890
         AGO   .TOCSECT                                          @05C   23408880
.BNL4    ANOP  ,                                                   @L6A 23412000
&PFX.CLS_LENGTH       DS    F    Class length (for class names)    @L6A 23412100
*                                                                       23412200
&PFX.BIND_FLAGS       DS    XL1  Flag bits                         @L6A 23412300
&PFX.BF_GEND          EQU   X'80'  Generated by Binder             @L6A 23412400
&PFX.BF_EMPTY         EQU   X'40'  No data present                 @L6A 23412500
&PFX.BF_VL            EQU   X'20'  Varying length records          @L6A 23412600
&PFX.BF_DESCR         EQU   X'10'  Descriptive data (non-text)     @L6A 23412700
&PFX.BF_INIT          EQU   X'08'  Class has initial data          @L6A 23412800
&PFX.BF_FILL          EQU   X'04'  Fill character specified        @L6A 23412900
&PFX.BF_ERROR         EQU   X'01'  Class validation error          @L6A 23413000
*                                                                       23413100
&PFX.LOAD_FLAGS       DS    XL1  Flag bits                         @L6A 23413200
&PFX.LF_RO            EQU   X'80'  Read Only                       @L6A 23413300
&PFX.LF_DEFER         EQU   X'60'  Deferred load                   @L6A 23413400
&PFX.LF_NOLOAD        EQU   X'40'  No Load                         @L6A 23413500
&PFX.LF_SHARE         EQU   X'10'  Sharable                        @L6A 23413600
&PFX.LF_MOVE          EQU   X'08'  Moveable (AdCon free)           @L6A 23413700
*                                                                       23413800
&PFX.NAME_CHARS       DS    H    Number of significant characters  @L6A 23413900
*                                in name (ignored on input)        @L6A 23414000
&PFX.NAME_PTR         DS    AL4  Pointer to class or section name  @L6A 23414100
&PFX.ELEM_COUNT       DS    F    Number elements in class or sect  @L6A 23414200
&PFX.SEGM_ID          DS    H    Segment ID                        @L6A 23414300
&PFX.PAD1             DS    H    *RESERVED*                        @L6A 23414400
&PFX.SEGM_OFF         DS    F    Class offset from start of segment@L6A 23414500
&PFX.END              DS    0F   End+1 of the BNL entry.           @L6A 23414600
.*                                                               @05D6A 23415390
         AGO   .TOCSECT                                          @05C6A 23416080
.NOTBNL  ANOP  ,                                                        23416900
.*-----Declares mapping of a MAP  entry -----------------------------   23417600
         AIF   ('&XTYPE' NE 'MAP').NOTMAP                          @L2A 23418400
&DSECTLBL  DSECT                                                   @L2A 23419900
*                               Binder MAP buffer header.          @L2A 23421400
*                               This DSECT is based on a register  @L2A 23422900
*                               equated to the symbol named        @L2A 23424400
*                               IEWBMAP_BASE.                      @L2A 23425900
          IEWBUFHD BP=&PFX,                                            X23427400
               BUFHENTL=&ENTRYLEN,                                     X23428900
               BUFHENTC=&ENTRYCOUNT,                                   X23430400
               BUFHBUFL=&BUFLEN,                                       X23431900
               BUFHVER=&XVERSION,                                      X23433400
               BUFHHREG=&XHEADREG,                                     X23434900
               BUFHEREG=&XENTRYREG,                                    X23436400
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  23437900
&PFX.ENTRY            DSECT                                             23438700
*                                Binder map (MAP)                       23439500
*                                buffer entry. Repeated the             23440300
*                                number of times specified              23441100
*                                by MAPH_ENTRY_COUNT.                   23441900
*                                This DSECT is based on a               23442700
*                                register equated to the                23443500
*                                symbol MAP_BASE.                       23444300
&PFX.NEXT             DS    F    Offset of sibling entry                23445100
&PFX.TYPE             DS    C    Type of map entry                      23445900
&PFX.FLAGS            DS    XL1  Flags                                  23446700
&PFX.SINGLE     EQU   X'80'      Single extent assumed                  23447500
&PFX.LOADABLE   EQU   X'40'      Loadable CLASS (for 'C' type)          23448300
&PFX.DESCR      EQU   X'20'      Text CLASS (for 'C' type)              23449100
&PFX.NAME_CHARS       DS    H    Number of significant characters in    23449900
*                                name of mapped element            @L2A 23450700
&PFX.NAME_PTR         DS    A    Address of name of mapped element @L2A 23451500
&PFX.OFFSET           DS    F    Class or section offset           @L2A 23452300
&PFX.QUANTITY         DS    F    Length/Qty                             23453100
*                                 -- Length of all CLASSes (type 'M')   23453900
*                                 -- Qty of records (type 'C')          23454700
&PFX.NAME_SPACE       DS    XL1  Name space for name                    23455500
                      DS    XL1  Reserved                               23456300
&PFX.RECORD_FMT       DS    H                                           23457100
                      DS    XL8  Reserved                               23457900
&PFX.END              DS    0F   End+1 of the MAP entry.                23458700
.*                                                               @05D   23460490
         AGO   .TOCSECT                                          @05C   23461480
.NOTMAP  ANOP  ,                                                   @L2A 23463400
.*-----Declares mapping of an Extent List ---------------------------   23472300
         AIF   ('&XTYPE' NE 'XTL').NOTXTL                          @L2A 23481200
&DSECTLBL  DSECT                                                        23499000
*                               Binder XTL buffer header.               23516900
*                               This DSECT is based on a register       23700000
*                               equated to the symbol named             23750000
*                               IEWBXTL_BASE.                           23800000
          IEWBUFHD BP=&PFX,                                            X23850000
               BUFHENTL=&ENTRYLEN,                                     X23900000
               BUFHENTC=&ENTRYCOUNT,                                   X23950000
               BUFHBUFL=&BUFLEN,                                       X24000000
               BUFHVER=&XVERSION,                                      X24050000
               BUFHHREG=&XHEADREG,                                     X24100000
               BUFHEREG=&XENTRYREG,                                    X24150000
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  24200000
&PFX.ENTRY            DSECT                                             24250000
*                                XTL buffer entry. Repeated the         24300000
*                                number of times specified by           24350000
*                                XTLH_ENTRY_COUNT.                      24400000
*                                This DSECT is based on a               24450000
*                                register equated to the                24500000
*                                symbol XTL_BASE.                       24550000
&PFX.LOAD_POINT       DS    F    Load point address for the extent.     24600000
&PFX.EXTENT_LENG      DS    F    Length of the extent.                  24650000
&PFX.END              DS    0F   End+1 of the XTL entry.                24700000
&SYSECT &SYSSTYP ,               Resume CSECT (or RSECT)        @05C    24750000
.NOTXTL  ANOP                                                   @L3A    24751400
.*-----Declares mapping of a Part Initializer -----------------------   24752800
         AIF   ('&XTYPE' NE 'PTI').NOTPTI                       @L3A    24754200
&DSECTLBL  DSECT                                                        24755600
*                               Binder Part Init (PTI) buffer header.   24757000
*                               This DSECT is based on a register       24758400
*                               equated to the symbol named             24759800
*                               IEWBPTI_BASE.                   @L3A    24761200
          IEWBUFHD BP=&PFX,                                            X24762600
               BUFHENTL=&ENTRYLEN,                                     X24764000
               BUFHENTC=&ENTRYCOUNT,                                   X24765400
               BUFHBUFL=&BUFLEN,                                       X24766800
               BUFHVER=&XVERSION,                                      X24768200
               BUFHHREG=&XHEADREG,                                     X24769600
               BUFHEREG=&XENTRYREG,                                    X24771000
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  24772400
&PFX.ENTRY DSECT                                                        24773800
*                               PTI buffer entry. Repeated the  16@L3A  24775200
*                               number of times specified by            24776600
*                               PTIH_ENTRY_COUNT.                       24778000
*                               This DSECT is based on a                24779400
*                               register equated to the                 24780800
*                               symbol PTI_BASE.                        24782200
&PFX.DATA_LENG        DS    H    Record length                          24783600
&PFX.DATA_REP         DS    H    Repetition Factor                      24785000
                      DS    H    Reserved                               24786400
&PFX.DATA_CLASS_LL    DS    H    Class name length                      24787800
&PFX.DATA_CLASS_PTR   DS    F    Class name ptr                         24789200
&PFX.DATA_NAME_LL     DS    H    Name length                            24790600
&PFX.DATA_NAME_PTR    DS    F    Name pointer                           24792000
&PFX.DATA_OFFSET      DS    F    Data placement within part             24793400
&PFX.END              DS    0F   End+1 of the PTI entry.                24794800
.*                                                               @05D   24806190
         AGO   .TOCSECT                                          @05C   24816180
.NOTPTI  AIF   ('&XFUNC' NE 'GETBUF').NOTGET                            24850000
.********************************************************************** 26500000
.*                                                                    * 26550000
.*         FUNC = GETBUF                                              * 26600000
.*                                                                    * 26650000
.********************************************************************** 26655500
.GENGET  ANOP  ,                                                        26661000
.*  ---- Verify presence of PREFIX  ------------------------   19@01A   26661200
&PFX      SETC  '&XTYPE'                                                26661400
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         26661600
&PFIXLEN  SETA K'&XPREFIX                                               26661800
.* If PREFIX was not specified, it defaults to '0', and its length to 1 26662000
.* In such case, each label will be prefixed with a three-character     26662200
.* record type (e.g., ESD).                                             26662400
.* Also,  the DSECT label will be  IEWBrectype (e.g. IEWBESD )          26662600
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK2   @L7C 26662800
.* If PREFIX was specified, each label will be prefixed with            26663000
.* the PREFIX value, followed by '_', followed by a three-character     26663200
.* record type (e.g., V1_ESD ).                                         26663400
.* Also, the DSECT label will be of the form                            26663600
.* prefix_IEWBrectype (e.g. V1_IEWBESD)                                 26663800
.* Additionally, the ENTRY label will be generated as prefix_rectype    26664000
.* (e.g. V1_ESD)                                                        26664200
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'                                 26664400
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             26664600
.PFIXOK2  ANOP                                                          26664800
*                               Gets storage for the Binder buffer.     26666500
&IEWLAB1 SETC  'IEW&SYSNDX'       Label for getmain failed              26667100
         AIF   (K'&XGM_RETCODE LE 0).GMUNCOND                           26667700
.*   fix getmain                                                 @P8A   26668000
         L     15,&PFX.I_BUFFER_LENG  Get actual length                 26668300
         GETMAIN RC,LV=(15)                                             26668600
         ST    15,&XGM_RETCODE    Sets getmain rc parameter             26668900
         LTR   15,15              Tests getmain result.                 26669500
         BNZ   &IEWLAB1           Skips over set up of base pointers.   26670100
         AGO   .GMOK                                                    26670700
.GMUNCOND ANOP ,                                                        26671300
.*   fix getmain                                                 @P8A   26672000
         L     0,&PFX.I_BUFFER_LENG  Get actual length            @L7C  26672700
         GETMAIN RU,LV=(0)                                        @L7C  26673400
.GMOK    ANOP  ,                                                        26674300
         LR    &DSECTLBL._BASE,1 Sets base register for header DSECT    26676600
         USING &DSECTLBL,&DSECTLBL._BASE    Maps the header.            26678900
         LA    &PFX._BASE,&PFX.H_END        Sets register for 1st entry 26681200
         USING &PFX._ENTRY,&PFX._BASE       Maps an entry.              26683500
&IEWLAB1 EQU   *                                                        26685800
         AGO   .ALLDONE                                                 26688500
.NOTGET  AIF   ('&XFUNC' NE 'INITBUF').NOTINIT                          26694000
.********************************************************************** 26700000
.*                                                                    * 26727200
.*         FUNC = INITBUF                                             * 26754400
.*                                                                    * 26781600
.********************************************************************** 26808800
.GENINIT ANOP                                                           26811300
.*  ---- Verify presence of PREFIX  ------------------------  19@01A    26813800
&PFX      SETC  '&XTYPE'                                                26816300
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         26818800
&PFIXLEN  SETA K'&XPREFIX                                               26821300
.* If PREFIX was not specified, it defaults to '0', and its length to 1 26823800
.* In such case, each label will be prefixed with a three-character     26826300
.* record type (e.g., ESD).                                             26828800
.* Also,  the DSECT label will be  IEWBrectype (e.g. IEWBESD )          26831300
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK3   @L7C 26833800
.* If PREFIX was specified, each label will be prefixed with            26836300
.* the PREFIX value, followed by '_', followed by a three-character     26838800
.* record type (e.g., V1_ESD ).                                         26841300
.* Also, the DSECT label will be of the form                            26843800
.* prefix_IEWBrectype (e.g. V1_IEWBESD)                                 26846300
.* Additionally, the ENTRY label will be generated as prefix_rectype    26848800
.* (e.g. V1_ESD)                                                        26851300
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'                                 26853800
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             26856300
.PFIXOK3  ANOP                                                          26858800
*                               Initializes the buffer header.          26863200
         USING &DSECTLBL,&DSECTLBL._BASE     Maps the header.           26883600
         USING &PFX._ENTRY,&PFX._BASE        Maps an entry.             26904000
         MVC   &DSECTLBL.(&PFX.H_LENG),&PFX.I_INIT_VALUES               26924400
         AGO   .ALLDONE                                                 26944800
.NOTINIT AGO   .GENFREE                                                 26972000
.********************************************************************** 27000000
.*                                                                    * 27050000
.*         FUNC = FREEBUF                                             * 27100000
.*                                                                    * 27150000
.********************************************************************** 27200000
.GENFREE ANOP  ,                                                        27237500
.*  ---- Verify presence of PREFIX  ------------------------  19@01A    27239300
&PFX      SETC  '&XTYPE'                                                27241100
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         27242900
&PFIXLEN  SETA K'&XPREFIX                                               27244700
.* If PREFIX was not specified, it defaults to '0', and its length to 1 27246500
.* In such case, each label will be prefixed with a three-character     27248300
.* record type (e.g., ESD ).                                            27250100
.* Also,  the DSECT label would be  IEWBrectype (e.g. IEWBESD )         27251900
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK4   @L7C 27253700
.* If PREFIX was specified, each label will be prefixed with            27255500
.* the PREFIX value, followed by '_', followed by a three-character     27257300
.* record type (e.g., V1_ESD ).                                         27259100
.* Also, the DSECT label will be of the form                            27260900
.* prefix_IEWBrectype (e.g. V1_IEWBESD)                                 27262700
.* Additionally, the ENTRY label will be generated as prefix_rectype    27264500
.* (e.g. V1_ESD)                                                        27266300
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'                                 27268100
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             27269900
.PFIXOK4  ANOP                                                          27271700
*                               Frees the buffer storage.               27275000
         USING &DSECTLBL,&DSECTLBL._BASE    Maps the header.            27295600
         USING &PFX._ENTRY,&PFX._BASE       Maps an entry.              27316200
         SLR   &PFX._BASE,&PFX._BASE        Zeroes entry base.          27336800
         LR    1,&DSECTLBL._BASE            Keeps storage address.      27357400
         SLR   &DSECTLBL._BASE,&DSECTLBL._BASE Zeroes header base.      27378000
         AIF   (K'&XFM_RETCODE LE 0).FMUNCOND                           27398600
.*   fix freemain                                                @P8A   27400400
         L     15,&PFX.I_BUFFER_LENG    Get actual length               27402200
         FREEMAIN RC,LV=(15),A=((1))                                    27404000
         ST    15,&XFM_RETCODE          Sets freemain rc parameter      27406800
         AGO   .FMDONE                                                  27409700
.FMUNCOND ANOP ,                                                        27413400
.*   fix freemain                                                @P8A   27415200
         L     15,&PFX.I_BUFFER_LENG    Get actual length               27417000
         FREEMAIN RU,LV=(15),A=((1))                                    27418800
.FMDONE  ANOP  ,                                                        27420800
         AGO   .ALLDONE                                                 27425000
.TOCSECT ANOP  ,                                                 @05A   27434990
&SYSECT &SYSSTYP ,              Resume CSECT (or RSECT)          @05A   27444980
.ALLDONE ANOP  ,                                                        27462500
.********************************************************************** 27500000
.* End of BAL macro code to be added to IEWBUFF.                      * 27550000
.********************************************************************** 27700000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  27750000
.********************************************************************   27750900
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    27751800
.********************************************************************   27752700
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       27753600
                      LCLA  &ZOPN1         INVOCATION INDEX             27754500
                      LCLC  &ZOPL(4095)    LABEL                        27755400
                      LCLC  &ZOPO(4095)    OPERATION                    27756300
                      LCLC  &ZOPV(4095)    VALUE                        27757200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  27758100
.*                                                                      27759000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     27759900
.*******************************************************************    27760800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               27761700
.*******************************************************************    27762600
                      ACTR  10000                                       27763500
.*                                                                      27764400
                      LCLA  &ZLC           COLUMN POSITION              27765300
                      LCLA  &ZOPX          LIST TABLE INDEX             27766200
                      LCLC  &ZLL           LABEL                        27767100
                      LCLC  &ZLOP          OPERATION                    27768000
                      LCLC  &ZLV           VALUE                        27768900
                      LCLC  &ZLD           DESCRIPTION                  27769800
.*                                                                      27770700
&ZOPX                 SETA  1                                           27771600
.*******************************************************************    27772500
.***AP.X01  FORMAT GENERATED CODE                                       27773400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            27774300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              27775200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              27776100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              27777000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              27777900
                      AIF   (K'&ZLD LE 0).ZL51                          27778800
&ZLC                  SETA  35             COMMENT COLUMN               27779700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   27780600
&ZLC                  SETA  33             COMMENT COLUMN               27781500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  27782400
&ZLV                  SETC  '&ZLV'.' '                                  27783300
                      AGO   .ZL31                                       27784200
.*                                                                      27785100
.ZL41                 ANOP  ,                                           27786000
&ZLV                  SETC  '&ZLV'.' '                                  27786900
.ZL51                 ANOP  ,                                           27787800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               27788700
.*                                                                      27789600
&ZLL     &ZLOP &ZLV                                                     27790500
.*                                                                      27791400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               27792300
                      AGO   .ZL21          CONTINUE LOOPING             27793200
.*                                                                      27794100
.ZLX1                 ANOP  ,                                           27795000
.*******************************************************************    27800000
.***AP.X02  END OF IEWBUFF MACRO                                        27850000
&ZIEWBUFF             SETC  'YES'          SET IEWBUFF USED             27900000
         POP   PRINT                                                    27950000
*                                            IEWBUFF-0                  28000000
         SPACE 1                                                        28050000
.ZLX2                 ANOP  ,                                           28100000
         MEND                                                           28150000
**********************************************************************/ 28200000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  28241600
*%IEWBUFF: MACRO KEYS(FUNC,SIZE,BYTES,HEADREG,ENTRYREG,VERSION,         28283300
*                 GM_RETCODE,FM_RETCODE,TYPE,PREFIX);                   28316600
*  ANS('?'||MACLABEL||' '||'IEWBUFFP '||MACLIST||                       28350000
*         ' '||MACKEYS||';') COL(MACLMAR);                              28400000
*%END IEWBUFF;                                                          28450000
