*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMEREG                               -00/07/19-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Enclave Register Service                  * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1999                           * 00001200
*                                                                     * 00001300
* STATUS= JBB6607                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMEREG service allows the caller to register an enclave   * 00002100
*      in in order to prevent it from being deleted. This is useful   * 00002200
*      if the caller wants to schedule SRBs or join tasks to an       * 00002300
*      enclave that is owned by another component. Registration       * 00002400
*      guarantees the the enclave will continue to exist until the    * 00002500
*      corresponding deregistration is done, even if the other        * 00002600
*      component deletes the enclave. The system defers the enclave's * 00002700
*      deletion until after the last deregistration.                  * 00002800
*                                                                     * 00002900
*      The address space identified as the home address space at the  * 00003000
*      time of registration is held responsible for deregistration in * 00003100
*      case of abnormal termination of the job step, the job, or the  * 00003200
*      address space itself.                                          * 00003300
*                                                                     * 00003400
*      The caller can run in task or SRB mode.                        * 00003500
*                                                                     * 00003600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003700
*                                                                     * 00003800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003900
*                                                                     * 00004000
*01* ENVIRONMENT:                                                     * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*      Minimum authorization: Supervisor state or program key mask    * 00004400
*                        (PKM) allowing keys 0-7.                     * 00004500
*                                                                     * 00004600
*      Dispatchable unit mode: Task or SRB mode.                      * 00004700
*                                                                     * 00004800
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004900
*                                                                     * 00005000
*      AMODE:            31-bit.                                      * 00005100
*                                                                     * 00005200
*      ASC mode:         Primary or Access Register.                  * 00005300
*                                                                     * 00005400
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005500
*                                                                     * 00005600
*      Locks:            No locks held.                               * 00005700
*                                                                     * 00005800
*      Control parameters: Control parameters must be in the primary  * 00005900
*                        address space.                               * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*01* PROGRAMMING REQUIREMENTS:                                        * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*    1.  The macro CVT must be included to use this macro.            * 00006700
*                                                                     * 00006800
*    2.  The macro IWMYCON must be included to use this macro.        * 00006900
*                                                                     * 00007000
*    3.  The macro IWMPB must be in the library concatenation, since  * 00007100
*        it is included by IWMYCON.                                   * 00007200
*                                                                     * 00007300
*    4.  Note that the high order halfword of register 0, and the     * 00007400
*        reason code variable when specified, may be non-zero and     * 00007500
*        represents diagnostic data which is NOT part of the external * 00007600
*        interface.  The high order halfword should thus be excluded  * 00007700
*        from comparison with the reason code values described above. * 00007800
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007900
*        be used for this purpose.                                    * 00008000
*                                                                     * 00008100
*    5.  All character data, unless otherwise specified, is assumed   * 00008200
*        to be left justified and padded with blanks on the right, as * 00008300
*        needed, to occupy the specified number of bytes.             * 00008400
*                                                                     * 00008500
*    6.  Since this service may only be used by system-like code,     * 00008600
*        some validity checking on the parameter list is not          * 00008700
*        performed. These checks would only be needed if the macro    * 00008800
*        were not used to invoke the service routine.                 * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*01* RESTRICTIONS:                                                    * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*    1.  This macro may not be used prior to the completion of WLM    * 00009600
*        address space initialization.                                * 00009700
*                                                                     * 00009800
*    2.  This macro may only be used on MVS/ESA JBB6607 or higher.    * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*01* INPUT REGISTER INFORMATION:                                      * 00010300
*                                                                     * 00010400
*    Before issuing the IWMEREG macro, the caller does not have to    * 00010500
*    place any information into any register unless using it in       * 00010600
*    register notation for a particular parameter, or using it as a   * 00010700
*    base register.                                                   * 00010800
*                                                                     * 00010900
*01* OUTPUT REGISTER INFORMATION:                                     * 00011000
*                                                                     * 00011100
*    When control returns to the caller, the GPRs contain:            * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*    REGISTER  CONTENTS                                               * 00011500
*                                                                     * 00011600
*    0         Reason code if GR15 return code is non-zero            * 00011700
*                                                                     * 00011800
*    1         Used as work registers by the system                   * 00011900
*                                                                     * 00012000
*    2-13      Unchanged                                              * 00012100
*                                                                     * 00012200
*    14        Used as work registers by the system                   * 00012300
*                                                                     * 00012400
*    15        Return code                                            * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*    When control returns to the caller, the ARs contain:             * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*    REGISTER  CONTENTS                                               * 00013200
*                                                                     * 00013300
*    0-1       Used as work registers by the system                   * 00013400
*                                                                     * 00013500
*    2-13      Unchanged                                              * 00013600
*                                                                     * 00013700
*    14-15     Used as work registers by the system                   * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*    Some callers depend on register contents remaining the same      * 00014200
*    before and after issuing a service.  If the system changes the   * 00014300
*    contents of registers on which the caller depends, the caller    * 00014400
*    must save them before issuing the service, and restore them      * 00014500
*    after the system returns control.                                * 00014600
*                                                                     * 00014700
*01* PERFORMANCE IMPLICATIONS:                                        * 00014800
*                                                                     * 00014900
*    None                                                             * 00015000
*                                                                     * 00015100
*01* SYNTAX:                                                          * 00015200
*                                                                     * 00015300
*[xlabel]  IWMEREG     REGTOKEN=xregtoken                             * 00015400
*                     ,SUBSYS=xsubsys                                 * 00015500
*                     ,SUBSYSNM=xsubsysnm                             * 00015600
*                    [,SUBSYSREQUEST                                  * 00015700
*                                    =xsubsysrequest|NO_SUBSYSREQUES * 00015800
*                                    T]                              * 00015900
*                     ,ETOKEN=xetoken                                 * 00016000
*                    [,RETCODE=xretcode]                              * 00016100
*                    [,RSNCODE=xrsncode]                              * 00016200
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00016300
*                   [,MF=S]                                          * 00016400
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00016500
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*      Where:                                                         * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*      [xlabel]                                                       * 00017200
*          is an optional symbol, starting in column 1, that is the   * 00017300
*          name on the IWMEREG macro invocation.  The name must       * 00017400
*          conform to the rules for an ordinary assembler language    * 00017500
*          symbol.                                                    * 00017600
*          DEFAULT: No name.                                          * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*      REGTOKEN=xregtoken                                             * 00018200
*          is the name (RS-type), or address in register (2)-(12), of * 00018300
*          a required 8 character output that will receive the        * 00018400
*          registration token                                         * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*      SUBSYS=xsubsys                                                 * 00019000
*          is the name (RS-type), or address in register (2)-(12), of * 00019100
*          a required 4 character input which contains the generic    * 00019200
*          subsystem type (e.g. IMS, CICS, etc.).                     * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      SUBSYSNM=xsubsysnm                                             * 00019800
*          is the name (RS-type), or address in register (2)-(12), of * 00019900
*          a required 8 character input which identifies the          * 00020000
*          subsystem instance.                                        * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*      [SUBSYSREQUEST=xsubsysrequest|NO_SUBSYSREQUEST]              * 00020600
*          is the name (RS-type), or address in register (2)-(12), of * 00020700
*          an optional 32 character input that allows the caller to   * 00020800
*          pass additional information in order to distinguish        * 00020900
*          between different invocations by the same subsystem.       * 00021000
*          DEFAULT: NO_SUBSYSREQUEST                                  * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*      ETOKEN=xetoken                                                 * 00021600
*          is the name (RS-type), or address in register (2)-(12), of * 00021700
*          a required 8 character input that contains the enclave     * 00021800
*          token.                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*      [RETCODE=xretcode]                                             * 00022400
*          is the name (RS-type) of an optional fullword output       * 00022500
*          variable, or register (2)-(12), into which the return code * 00022600
*          is to be copied from GPR 15.                               * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*      [RSNCODE=xrsncode]                                             * 00023200
*          is the name (RS-type) of an optional fullword output       * 00023300
*          variable, or register (2)-(12), into which the reason code * 00023400
*          is to be copied from GPR 0.                                * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00024000
*          is an optional byte input decimal value in the "0-0" range * 00024100
*          that specifies the macro version.  PLISTVER is the only    * 00024200
*          key allowed on the list form of MF and determines which    * 00024300
*          parameter list is generated.  Note that MAX may be         * 00024400
*          specified instead of a number, and the parameter list will * 00024500
*          be of the largest size currently supported. This size may  * 00024600
*          grow from release to release (thus possibly affecting the  * 00024700
*          amount of storage needed by your program).  If your        * 00024800
*          program can tolerate this, IBM recommends that you always  * 00024900
*          specify MAX when creating the list form parameter list as  * 00025000
*          that will ensure that the list form parameter list is      * 00025100
*          always long enough to hold whatever parameters might be    * 00025200
*          specified on the execute form.                             * 00025300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00025400
*          default is the lowest version which allows all of the      * 00025500
*          parameters specified on the invocation to be processed.    * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*      [MF=S|L|E]                                                   * 00026100
*          is an optional keyword input which specifies the macro     * 00026200
*          form.                                                      * 00026300
*          DEFAULT: S                                                 * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*          [MF=S]                                                     * 00026700
*              specifies the standard form of the macro.  The "S"     * 00026800
*              form generates code to put the parameters into an      * 00026900
*              in-line parameter list and invoke the desired service. * 00027000
*              Full checking for required macro keys is done along    * 00027100
*              with supplying defaults for omitted optional           * 00027200
*              parameters.                                            * 00027300
*                                                                     * 00027400
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00027500
*              specifies the list form of the macro.  The "L" form    * 00027600
*              defines an area to be used for the parameter list.     * 00027700
*              Only the PLISTVER key may be specified on the          * 00027800
*              invocation.  All other macro parameters are flagged as * 00027900
*              errors.  If PLISTVER is not specified, the original    * 00028000
*              parameter list definition is used.                     * 00028100
*                                                                     * 00028200
*            ,xmfctrl                                                 * 00028300
*              is a required input.  It is the name of a storage area * 00028400
*              for the parameter list.                                * 00028500
*                                                                     * 00028600
*            ,xmfattr|0D                                            * 00028700
*              is an optional 60 character input string that varies   * 00028800
*              from 1 to 60 characters. Use it to force boundary      * 00028900
*              alignment of the parameter list. Use only 0F or 0D.    * 00029000
*              DEFAULT: 0D which forces the parameter list to a       * 00029100
*              doubleword boundary.                                   * 00029200
*                                                                     * 00029300
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00029400
*              specifies the execute form of the macro.  The "E" form * 00029500
*              generates code to put the parameters into the          * 00029600
*              parameter list specified by xmfctrl and provides full  * 00029700
*              syntax checking with default setting.                  * 00029800
*                                                                     * 00029900
*            ,xmfctrl                                                 * 00030000
*              is a required input.  It is the name (RS-type), or     * 00030100
*              address in register (1)-(12), of a storage area for    * 00030200
*              the parameter list.                                    * 00030300
*                                                                     * 00030400
*            ,COMPLETE                                              * 00030500
*              is an optional keyword input which specifies the       * 00030600
*              degree of macro parameter syntax checking.             * 00030700
*              DEFAULT: COMPLETE                                      * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*              COMPLETE                                               * 00031100
*                  Checking for required macro keys is done and       * 00031200
*                  defaults are supplied for omitted optional         * 00031300
*                  parameters.                                        * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*01* ABEND CODES:  None.                                              * 00032200
*                                                                     * 00032300
*01* RETURN CODES:                                                    * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*            0    Name: IwmRetCodeOk                                  * 00032700
*                                                                     * 00032800
*                 Meaning: Successful completion.                     * 00032900
*                                                                     * 00033000
*                 Action: None required.                              * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*            8    Name: IwmRetCodeInvocError                          * 00033400
*                                                                     * 00033500
*                 Meaning: Invalid invocation environment or          * 00033600
*                 parameters.                                         * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                 HEX REASON  MEANING/ACTION                          * 00034100
*                 CODE                                                * 00034200
*                                                                     * 00034300
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00034400
*                                                                     * 00034500
*                             Meaning: Caller is disabled.            * 00034600
*                                                                     * 00034700
*                             Action: Avoid requesting this function  * 00034800
*                             while disabled.                         * 00034900
*                                                                     * 00035000
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00035100
*                                                                     * 00035200
*                             Meaning: Caller is locked.              * 00035300
*                                                                     * 00035400
*                             Action: Avoid requesting this function  * 00035500
*                             while locked.                           * 00035600
*                                                                     * 00035700
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00035800
*                                                                     * 00035900
*                             Meaning: Error accessing parameter      * 00036000
*                             list.                                   * 00036100
*                                                                     * 00036200
*                             Action: Check for possible storage      * 00036300
*                             overlay.                                * 00036400
*                                                                     * 00036500
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00036600
*                                                                     * 00036700
*                             Meaning: Caller invoked service but was * 00036800
*                             in 24 bit addressing mode.              * 00036900
*                                                                     * 00037000
*                             Action: Request this function only when * 00037100
*                             you are in 31 bit addressing mode.      * 00037200
*                                                                     * 00037300
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00037400
*                                                                     * 00037500
*                             Meaning: Version number in parameter    * 00037600
*                             list is not valid.                      * 00037700
*                                                                     * 00037800
*                             Action: Check for possible storage      * 00037900
*                             overlay of the parameter list.          * 00038000
*                                                                     * 00038100
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00038200
*                                                                     * 00038300
*                             Meaning: Enclave token does not pass    * 00038400
*                             verification.                           * 00038500
*                                                                     * 00038600
*                             Action: Check for possible storage      * 00038700
*                             overlay of the enclave token, or        * 00038800
*                             asynchronous events which may have      * 00038900
*                             deleted the enclave.                    * 00039000
*                                                                     * 00039100
*                 xxxx0882    Name: IwmRsnCodeTooManyRegistrations    * 00039200
*                                                                     * 00039300
*                             Meaning: There are too many concurrent  * 00039400
*                             registrations requested.                * 00039500
*                                                                     * 00039600
*                             Action: There is a resource shortage.   * 00039700
*                             The function may work successfully at a * 00039800
*                             later time.                             * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*            10   Name: IwmRetCodeCompError                           * 00040400
*                                                                     * 00040500
*                 Meaning: Component error.                           * 00040600
*                                                                     * 00040700
*                 Action: No action required. The function may be     * 00040800
*                 successful if invoked again.                        * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*01* REASON CODES:                                                    * 00041400
*                                                                     * 00041500
*       A unique reason code will be returned whenever the return     * 00041600
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00041700
*       under their corresponding return code.  Reason code and       * 00041800
*       return code constants are defined within IWMYCON.  Note that  * 00041900
*       the high order halfword of register 0, and the reason code    * 00042000
*       variable when specified, may be non-zero and represents       * 00042100
*       diagnostic data which is NOT part of the external interface.  * 00042200
*       The high order halfword should thus be excluded from          * 00042300
*       comparison with the reason code values described above.  The  * 00042400
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00042500
*       used for this purpose.                                        * 00042600
*                                                                     * 00042700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00042800
*                                                                     * 00042900
*02*   PROCESSOR:  ASSEM                                              * 00043000
*                                                                     * 00043100
*01* COMPONENT:  SCWLM                                                * 00043200
*                                                                     * 00043300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00043400
*                                                                     * 00043500
*01* EXAMPLES:                                                        * 00043600
*                                                                     * 00043700
*            IWMEREG ETOKEN=ENCTKN,REGTOKEN=REGTKN,                   * 00043800
*                    SUBSYS=SUBSTYPE,SUBSYSNM=SUBSNAME                * 00043900
*      *                                                              * 00044000
*      * Storage areas                                                * 00044100
*      *                                                              * 00044200
*      ENCTKN   DS    CL8             Enclave token                   * 00044300
*      SUBSNAME DS    CL8             Subsystem name                  * 00044400
*      SUBSTYPE DS    CL8             Subsystem type                  * 00044500
*      REGTKN   DS    CL8             Register token                  * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*01* MACRO USAGE NOTES:                                               * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00045200
*        global macro variable.  Any value other than 'NO' will       * 00045300
*        result in the macro expansion being printed.  The default is * 00045400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00045500
*        variable should be set.                                      * 00045600
*                                                                     * 00045700
*                    GBLC &ZPRINT                                     * 00045800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*    2.  All keys currently contained in the IWMEREG macro correspond * 00046200
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00046300
*        MAX.                                                         * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*01* CHANGE ACTIVITY:                                                 * 00046900
*                                                                     * 00047000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00047100
*                                                                     * 00047200
*    $L0=OW46363  HBB7703 000724 3241MO:  Michael Ostmeyer - Enclave  * 00047300
*                                         Registration Support        * 00047400
****** END OF SPECIFICATIONS *****************************************/ 00047500
*/* TLINE 1 *********************************************************** 00047600
         MACRO                                                          00047700
&XLABEL  IWMEREG &REGTOKEN=,&SUBSYS=,&SUBSYSNM=,&SUBSYSREQUEST=,       *00047800
               &ETOKEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=             00047900
.*                                                                      00048000
*                   MACDATE -00/07/19-<0>                               00048100
.*                                                                      00048200
.*******************************************************************    00048300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00048400
.*******************************************************************    00048500
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00048600
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00048700
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00048800
.*                                                                      00048900
                   GBLC  &ZIWMEREG   YES=MACRO USED AT LEAST ONCE       00049000
.*******************************************************************    00049100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00049200
.*******************************************************************    00049300
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00049400
                   LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS       00049500
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00049600
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00049700
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00049800
                   LCLA  &ZAWRK      USED AS A WORK AREA                00049900
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00050000
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00050100
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00050200
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00050300
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00050400
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00050500
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00050600
.*                                                                      00050700
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00050800
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00050900
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00051000
                   LCLC  &ZENDBASEPL            End of base PL          00051100
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00051200
.*******************************************************************    00051300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00051400
.*******************************************************************    00051500
                   LCLA  &ZI         INDEX FOR ARRAY                    00051600
                   LCLA  &ZJ         INDEX FOR PARMS                    00051700
                   LCLA  &ZK         INDEX FOR PARSE                    00051800
                   LCLA  &ZLO        LOW RANGE VALUE                    00051900
                   LCLA  &ZHI        HIGH RANGE VALUE                   00052000
                   LCLC  &ZW         WORK AREA FOR PARM                 00052100
.********************************************************************   00052200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00052300
.********************************************************************   00052400
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00052500
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00052600
                   GBLA  &SYSALVL    SYSSTATE ARCHLVL                   00052700
.*                                                                      00052800
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00052900
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00053000
                   SPLEVEL  TEST                                        00053100
.ZSYS2             ANOP  ,                                              00053200
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00053300
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00053400
                   SYSSTATE TEST                                        00053500
                   AGO   .ZSYS4                                         00053600
.ZSYS3             ANOP  ,                                              00053700
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00053800
.ZSYS4             ANOP  ,                                              00053900
.*******************************************************************    00054000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00054100
.*******************************************************************    00054200
                   LCLC  &XREGTOKEN  ++ NAME                            00054300
                   LCLC  &XSUBSYS    ++ NAME                            00054400
                   LCLC  &XSUBSYSNM  ++ NAME                            00054500
                   LCLC  &XSUBSYSREQUEST        ++ NAME                 00054600
                   LCLC  &XETOKEN    ++ NAME                            00054700
                   LCLC  &XRETCODE   ++ NAME                            00054800
                   LCLC  &XRSNCODE   ++ NAME                            00054900
                   LCLA  &XPLISTVER  ++ VALUE                           00055000
                   LCLC  &XMF        ++ VALUE                           00055100
                   LCLC  &XMFCTRL    ++ NAME                            00055200
                   LCLC  &XMFATTR    ++ VALUE                           00055300
                   LCLC  &XMFSCK     ++ VALUE                           00055400
.*******************************************************************    00055500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00055600
.*******************************************************************    00055700
                   LCLC  &ZXREGTOKEN            ++ OUTPUT NAME          00055800
                   LCLC  &ZXSUBSYS   ++ INPUT NAME                      00055900
                   LCLC  &ZXSUBSYSNM            ++ INPUT NAME           00056000
                   LCLC  &ZXSUBSYSREQUEST       ++ INPUT NAME           00056100
                   LCLC  &ZXETOKEN   ++ INPUT NAME                      00056200
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00056300
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00056400
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00056500
                   LCLC  &ZXMF       ++ INPUT VALUE                     00056600
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00056700
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00056800
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00056900
.********************************************************************   00057000
.***AC.PLV01  PROCESS PLISTVER                                      *   00057100
.********************************************************************   00057200
&XPLISTVER      SETA  0                                                 00057300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00057400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00057500
&XPLISTVER      SETA  0                                                 00057600
.ZPLV0          ANOP  ,                                                 00057700
.*                                                                      00057800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00057900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00058000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00058100
.*-------------------------------------------------------------------   00058200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00058300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00058400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00058500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00058600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00058700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00058800
                AGO   .ZPVCK2                                           00058900
.ZPVCK3         ANOP  ,                                                 00059000
.*-------------------------------------------------------------------   00059100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00059200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00059300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00059400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00059500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00059600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00059700
                AGO   .ZPVCKE                                           00059800
.ZPVCK2         ANOP  ,                                                 00059900
.*-------------------------------------------------------------------   00060000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00060100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00060200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00060300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00060400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00060500
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00060600
.ZPVCK6         ANOP  ,                                                 00060700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00060800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00060900
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00061000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00061100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00061200
&XPLISTVER      SETA  0                                                 00061300
                AGO   .ZPVCKE                                           00061400
.*-------------------------------------------------------------------   00061500
.ZPVCK4A        ANOP  ,                                                 00061600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00061700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00061800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00061900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00062000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00062100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00062200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00062300
                AGO   .ZPVCK5                                           00062400
.ZPVCK4         ANOP  ,                                                 00062500
&XPLISTVER      SETA  &PLISTVER(1)                                      00062600
.ZPVCK5         ANOP  ,                                                 00062700
.ZPVCKE         ANOP  ,                                                 00062800
.********************************************************************   00062900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00063000
.********************************************************************   00063100
                   ACTR  10000                                          00063200
.*------------------------------------------------------------------    00063300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063400
&XMF               SETC  ''          INITIALIZE XVARIABLE               00063500
.*-------------------------------------------------------------------   00063600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063700
.ZG27              ANOP  ,                                              00063800
&ZTLC              SETC 'S'                                             00063900
                   AIF   ('&MF(1)' NE '&ZTLC').ZG28                     00064000
&XMF               SETC  'S'         SET KEYWORD                        00064100
                   AIF   (N'&MF LE 1).ZG27A     CK NUM                  00064200
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00064300
&ZMS               SETC  '&ZMS.&MF"'                                    00064400
&ZMS               SETC  '&ZMS "MF"'                                    00064500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00064600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00064700
.ZG27A             ANOP  ,                                              00064800
.*-------------------------------------------------------------------   00064900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065000
.ZG28              ANOP  ,                                              00065100
&ZTLC              SETC 'L'                                             00065200
                   AIF   ('&MF(1)' NE '&ZTLC').ZG35                     00065300
&XMF               SETC  'L'         SET KEYWORD                        00065400
                   AIF   (N'&MF LE 3).ZG28A     CK NUM                  00065500
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00065600
&ZMS               SETC  '&ZMS.&MF"'                                    00065700
&ZMS               SETC  '&ZMS "MF"'                                    00065800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00065900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00066000
.ZG28A             ANOP  ,                                              00066100
.*-------------------------------------------------------------------   00066200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00066300
                   AIF   (N'&SYSLIST NE 0).ZG28B  POSITIONALS?          00066400
                   AIF   ('&REGTOKEN' NE '').ZG28B  KEYS?               00066500
                   AIF   ('&SUBSYS' NE '').ZG28B  KEYS?                 00066600
                   AIF   ('&SUBSYSNM' NE '').ZG28B  KEYS?               00066700
                   AIF   ('&SUBSYSREQUEST' NE '').ZG28B  KEYS?          00066800
                   AIF   ('&ETOKEN' NE '').ZG28B  KEYS?                 00066900
                   AIF   ('&RETCODE' NE '').ZG28B  KEYS?                00067000
                   AIF   ('&RSNCODE' NE '').ZG28B  KEYS?                00067100
                   AGO    .ZG28C     INVOCATION OKAY                    00067200
.ZG28B             ANOP  ,                                              00067300
&ZMS               SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE           00067400
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00067500
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00067600
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00067700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00067800
.ZG28C             ANOP  ,                                              00067900
.*-------------------------------------------------------------------   00068000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00068100
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00068200
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00068300
                   AIF   (N'&MF(2) GT 1).ZG30B  MULTI PARMS             00068400
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00068500
.ZG30B             AIF   (K'&MF(2) GT 0).ZG30C                          00068600
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00068700
&ZMS               SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*               00068800
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00068900
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00069000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00069100
.ZG30C             ANOP  ,                                              00069200
.*-------------------------------------------------------------------   00069300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00069400
                   AIF   (K'&ZXMFCTRL LE 0).ZG30P  NOT I/O              00069500
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG30P                 00069600
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00069700
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00069800
&ZMS               SETC  '&ZMS.&MF"'                                    00069900
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00070000
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00070100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00070200
.ZG30P             ANOP  ,                                              00070300
.*-------------------------------------------------------------------   00070400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00070500
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00070600
&XMFATTR           SETC  '0D'                                           00070700
                   AIF   (K'&MF(3) LE 0).ZG33B  PARM                    00070800
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00070900
                   AIF   (N'&MF(3) GT 1).ZG33B  MULTI PARMS             00071000
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00071100
.ZG33B             ANOP  ,                                              00071200
.*-------------------------------------------------------------------   00071300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00071400
                   AIF   (K'&ZXMFATTR LE 0).ZG33P  NOT I/O              00071500
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG33P                 00071600
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00071700
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00071800
&ZMS               SETC  '&ZMS.&MF"'                                    00071900
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00072000
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00072100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00072200
.ZG33P             ANOP  ,                                              00072300
.*-------------------------------------------------------------------   00072400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00072500
                   AIF   (K'&ZXMFATTR LE 0).ZG33S  NOT I/O              00072600
                   AIF   (K'&XMFATTR LE 60).ZG33S  LNG OK               00072700
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00072800
&ZMS               SETC  '"MF='      *KLNGA* MNOTE                      00072900
&ZMS               SETC  '&ZMS.&MF"'                                    00073000
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00073100
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00073200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00073300
.ZG33S             ANOP  ,                                              00073400
.*-------------------------------------------------------------------   00073500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073600
.ZG35              ANOP  ,                                              00073700
&ZTLC              SETC 'E'                                             00073800
                   AIF   ('&MF(1)' NE '&ZTLC').ZG43                     00073900
&XMF               SETC  'E'         SET KEYWORD                        00074000
                   AIF   (N'&MF LE 3).ZG35A     CK NUM                  00074100
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00074200
&ZMS               SETC  '&ZMS.&MF"'                                    00074300
&ZMS               SETC  '&ZMS "MF"'                                    00074400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00074500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00074600
.ZG35A             ANOP  ,                                              00074700
.*-------------------------------------------------------------------   00074800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00074900
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00075000
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00075100
                   AIF   (N'&MF(2) GT 1).ZG37B  MULTI PARMS             00075200
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00075300
.ZG37B             AIF   (K'&MF(2) GT 0).ZG37C                          00075400
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00075500
&ZMS               SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*               00075600
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00075700
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00075800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00075900
.ZG37C             ANOP  ,                                              00076000
.*-------------------------------------------------------------------   00076100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00076200
                   AIF   (K'&ZXMFCTRL LE 0).ZG37R  NOT I/O              00076300
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG37R                 00076400
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00076500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                   00076600
                   AIF   (K'&ZCGPR GT 2).ZG37Q                          00076700
                   AIF   ('&ZCGPR' EQ '0').ZG37Q                        00076800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00076900
                   AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME      00077000
.ZG37P             ANOP  ,                                              00077100
                   AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC           00077200
                   AIF   ('&ZCGPR' LT '1').ZG37Q                        00077300
                   AIF   ('&ZCGPR' LE '12').ZG37R                       00077400
.ZG37Q             ANOP  ,                                              00077500
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00077600
&ZMS               SETC  '&ZMS.&MF"'                                    00077700
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00077800
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00077900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00078000
.ZG37R             ANOP  ,                                              00078100
.*-------------------------------------------------------------------   00078200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00078300
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00078400
.ZG41A   AIF   ('&MF(3)' NE 'COMPLETE').ZG42A                           00078500
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00078600
.*-------------------------------------------------------------------   00078700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00078800
.ZG42A             AIF   (K'&XMFSCK GT 0).ZG42C  KEYWORD                00078900
                   AIF   (K'&MF(3) LE 0).ZG42B                          00079000
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00079100
&ZMS               SETC  '&ZMS.&MF"'                                    00079200
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00079300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00079400
&ZMS               SETC  '&ZMS "COMPLETE".'                             00079500
                   MNOTE 8,' &ZMS '                                     00079600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00079700
.ZG42B             ANOP  ,                                              00079800
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00079900
.ZG42C             ANOP  ,                                              00080000
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00080100
.*------------------------------------------------------------------    00080200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00080300
.ZG43              ANOP  ,                                              00080400
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00080500
                   AIF   (K'&XMF GT 0).ZG43E    VALID ARG               00080600
                   AIF   (T'&MF EQ 'O').ZG43D   OMITTED                 00080700
&ZASYSLNDX         SETA  0                                              00080800
.ZG43A             ANOP  ,           POSITIONAL MACRO KEY               00080900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00081000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG43C               00081100
&ZTLC              SETC 'MF'                                            00081200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG43A      00081300
.ZG43B             ANOP  ,                                              00081400
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00081500
&ZMS               SETC  'THE "MF" KEY'         *KOPTA* MNOTE           00081600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00081700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00081800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00081900
                   AGO   .ZG43E                                         00082000
.ZG43C             ANOP  ,                                              00082100
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00082200
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00082300
&ZMS               SETC  '&ZMS.&MF"'                                    00082400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00082500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00082600
&ZMS               SETC  '&ZMS "S",'                                    00082700
&ZMS               SETC  '&ZMS "L",'                                    00082800
&ZMS               SETC  '&ZMS OR "E".'                                 00082900
                   MNOTE 8,' &ZMS '                                     00083000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00083100
                   AGO   .ZG43E                                         00083200
.ZG43D             ANOP  ,                                              00083300
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00083400
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00083500
.ZG43E             ANOP  ,                                              00083600
.********************************************************************   00083700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00083800
.********************************************************************   00083900
                   ACTR  10000                                          00084000
.*-------------------------------------------------------------------   00084100
.***AG.MF03 MF=(SLE)                                                    00084200
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00084300
.*----------------------------------------------------------------***   00084400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00084500
                   AIF   (N'&REGTOKEN LE 1).ZG2A  CK NUM                00084600
&ZMS               SETC  '"REGTOKEN='           *KPOSA* MNOTE           00084700
&ZMS               SETC  '&ZMS.&REGTOKEN"'                              00084800
&ZMS               SETC  '&ZMS "REGTOKEN"'                              00084900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00085000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00085100
.ZG2A              ANOP  ,                                              00085200
.*-------------------------------------------------------------------   00085300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00085400
&ZXREGTOKEN        SETC  'OUTPUT'    SET IN/OUTPUT                      00085500
&XREGTOKEN         SETC  '&REGTOKEN(1)'         SET XVARIABLE           00085600
                   AIF   (N'&REGTOKEN GT 1).ZG2B  MULTI PARMS           00085700
&XREGTOKEN         SETC  '&REGTOKEN'            SET XVARIABLE           00085800
.ZG2B              AIF   (K'&REGTOKEN(1) GT 0).ZG2C                     00085900
&ZXREGTOKEN        SETC  ''          RESET IN/OUTPUT                    00086000
&ZMS               SETC  ' '         *KRQDA*                            00086100
&ZMS               SETC  '&ZMS "REGTOKEN" KEY AND ITS'                  00086200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00086300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00086400
.ZG2C              ANOP  ,                                              00086500
.*-------------------------------------------------------------------   00086600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00086700
                   AIF   (K'&ZXREGTOKEN LE 0).ZG2R  NOT I/O             00086800
                   AIF   ('&XREGTOKEN'(1,1) NE '(').ZG2R                00086900
&ZCGPR             SETC  '&XREGTOKEN'(2,K'&XREGTOKEN-2)                 00087000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    00087100
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           00087200
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         00087300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00087400
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       00087500
.ZG2P              ANOP  ,                                              00087600
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            00087700
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         00087800
                   AIF   ('&ZCGPR' LE '12').ZG2R                        00087900
.ZG2Q              ANOP  ,                                              00088000
&ZMS               SETC  '"REGTOKEN='           *KGPRA* MNOTE           00088100
&ZMS               SETC  '&ZMS.&REGTOKEN"'                              00088200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00088300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00088400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00088500
.ZG2R              ANOP  ,                                              00088600
.*----------------------------------------------------------------***   00088700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00088800
                   AIF   (N'&SUBSYS LE 1).ZG5A  CK NUM                  00088900
&ZMS               SETC  '"SUBSYS='  *KPOSA* MNOTE                      00089000
&ZMS               SETC  '&ZMS.&SUBSYS"'                                00089100
&ZMS               SETC  '&ZMS "SUBSYS"'                                00089200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00089300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00089400
.ZG5A              ANOP  ,                                              00089500
.*-------------------------------------------------------------------   00089600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00089700
&ZXSUBSYS          SETC  'INPUT'     SET IN/OUTPUT                      00089800
&XSUBSYS           SETC  '&SUBSYS(1)'           SET XVARIABLE           00089900
                   AIF   (N'&SUBSYS GT 1).ZG5B  MULTI PARMS             00090000
&XSUBSYS           SETC  '&SUBSYS'   SET XVARIABLE                      00090100
.ZG5B              AIF   (K'&SUBSYS(1) GT 0).ZG5C                       00090200
&ZXSUBSYS          SETC  ''          RESET IN/OUTPUT                    00090300
&ZMS               SETC  ' '         *KRQDA*                            00090400
&ZMS               SETC  '&ZMS "SUBSYS" KEY AND ITS'                    00090500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00090600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00090700
.ZG5C              ANOP  ,                                              00090800
.*-------------------------------------------------------------------   00090900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00091000
                   AIF   (K'&ZXSUBSYS LE 0).ZG5R  NOT I/O               00091100
                   AIF   ('&XSUBSYS'(1,1) NE '(').ZG5R                  00091200
&ZCGPR             SETC  '&XSUBSYS'(2,K'&XSUBSYS-2)                     00091300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    00091400
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           00091500
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         00091600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00091700
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       00091800
.ZG5P              ANOP  ,                                              00091900
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            00092000
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         00092100
                   AIF   ('&ZCGPR' LE '12').ZG5R                        00092200
.ZG5Q              ANOP  ,                                              00092300
&ZMS               SETC  '"SUBSYS='  *KGPRA* MNOTE                      00092400
&ZMS               SETC  '&ZMS.&SUBSYS"'                                00092500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00092600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00092700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00092800
.ZG5R              ANOP  ,                                              00092900
.*----------------------------------------------------------------***   00093000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00093100
                   AIF   (N'&SUBSYSNM LE 1).ZG8A  CK NUM                00093200
&ZMS               SETC  '"SUBSYSNM='           *KPOSA* MNOTE           00093300
&ZMS               SETC  '&ZMS.&SUBSYSNM"'                              00093400
&ZMS               SETC  '&ZMS "SUBSYSNM"'                              00093500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00093600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00093700
.ZG8A              ANOP  ,                                              00093800
.*-------------------------------------------------------------------   00093900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00094000
&ZXSUBSYSNM        SETC  'INPUT'     SET IN/OUTPUT                      00094100
&XSUBSYSNM         SETC  '&SUBSYSNM(1)'         SET XVARIABLE           00094200
                   AIF   (N'&SUBSYSNM GT 1).ZG8B  MULTI PARMS           00094300
&XSUBSYSNM         SETC  '&SUBSYSNM'            SET XVARIABLE           00094400
.ZG8B              AIF   (K'&SUBSYSNM(1) GT 0).ZG8C                     00094500
&ZXSUBSYSNM        SETC  ''          RESET IN/OUTPUT                    00094600
&ZMS               SETC  ' '         *KRQDA*                            00094700
&ZMS               SETC  '&ZMS "SUBSYSNM" KEY AND ITS'                  00094800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00094900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00095000
.ZG8C              ANOP  ,                                              00095100
.*-------------------------------------------------------------------   00095200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00095300
                   AIF   (K'&ZXSUBSYSNM LE 0).ZG8R  NOT I/O             00095400
                   AIF   ('&XSUBSYSNM'(1,1) NE '(').ZG8R                00095500
&ZCGPR             SETC  '&XSUBSYSNM'(2,K'&XSUBSYSNM-2)                 00095600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                    00095700
                   AIF   (K'&ZCGPR GT 2).ZG8Q                           00095800
                   AIF   ('&ZCGPR' EQ '0').ZG8Q                         00095900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00096000
                   AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME       00096100
.ZG8P              ANOP  ,                                              00096200
                   AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC            00096300
                   AIF   ('&ZCGPR' LT '2').ZG8Q                         00096400
                   AIF   ('&ZCGPR' LE '12').ZG8R                        00096500
.ZG8Q              ANOP  ,                                              00096600
&ZMS               SETC  '"SUBSYSNM='           *KGPRA* MNOTE           00096700
&ZMS               SETC  '&ZMS.&SUBSYSNM"'                              00096800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00096900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00097000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00097100
.ZG8R              ANOP  ,                                              00097200
.*----------------------------------------------------------------***   00097300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00097400
                   AIF   (N'&SUBSYSREQUEST LE 1).ZG11A  CK NUM          00097500
&ZMS               SETC  '"SUBSYSREQUEST='      *KPOSA* MNOTE           00097600
&ZMS               SETC  '&ZMS.&SUBSYSREQUEST"'                         00097700
&ZMS               SETC  '&ZMS "SUBSYSREQUEST"'                         00097800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00097900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00098000
.ZG11A             ANOP  ,                                              00098100
.*-------------------------------------------------------------------   00098200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00098300
&ZXSUBSYSREQUEST   SETC  'INPUT'     SET IN/OUTPUT                      00098400
&XSUBSYSREQUEST    SETC  'NO_SUBSYSREQUEST'                             00098500
                   AIF   (K'&SUBSYSREQUEST(1) LE 0).ZG11B  PARM         00098600
&XSUBSYSREQUEST    SETC  '&SUBSYSREQUEST(1)'    SET XVARIABLE           00098700
                   AIF   (N'&SUBSYSREQUEST GT 1).ZG11B  MULTI PARMS     00098800
&XSUBSYSREQUEST    SETC  '&SUBSYSREQUEST'       SET XVARIABLE           00098900
.ZG11B             ANOP  ,                                              00099000
.*-------------------------------------------------------------------   00099100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00099200
                   AIF   (K'&ZXSUBSYSREQUEST LE 0).ZG11R  NOT I/O       00099300
                   AIF   ('&XSUBSYSREQUEST'(1,1) NE '(').ZG11R          00099400
&ZCGPR             SETC  '&XSUBSYSREQUEST'(2,K'&XSUBSYSREQUEST-2)       00099500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                   00099600
                   AIF   (K'&ZCGPR GT 2).ZG11Q                          00099700
                   AIF   ('&ZCGPR' EQ '0').ZG11Q                        00099800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00099900
                   AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME      00100000
.ZG11P             ANOP  ,                                              00100100
                   AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC           00100200
                   AIF   ('&ZCGPR' LT '2').ZG11Q                        00100300
                   AIF   ('&ZCGPR' LE '12').ZG11R                       00100400
.ZG11Q             ANOP  ,                                              00100500
&ZMS               SETC  '"SUBSYSREQUEST='      *KGPRA* MNOTE           00100600
&ZMS               SETC  '&ZMS.&SUBSYSREQUEST"'                         00100700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00100800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00100900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00101000
.ZG11R             ANOP  ,                                              00101100
.*----------------------------------------------------------------***   00101200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00101300
                   AIF   (N'&ETOKEN LE 1).ZG14A  CK NUM                 00101400
&ZMS               SETC  '"ETOKEN='  *KPOSA* MNOTE                      00101500
&ZMS               SETC  '&ZMS.&ETOKEN"'                                00101600
&ZMS               SETC  '&ZMS "ETOKEN"'                                00101700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00101800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00101900
.ZG14A             ANOP  ,                                              00102000
.*-------------------------------------------------------------------   00102100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00102200
&ZXETOKEN          SETC  'INPUT'     SET IN/OUTPUT                      00102300
&XETOKEN           SETC  '&ETOKEN(1)'           SET XVARIABLE           00102400
                   AIF   (N'&ETOKEN GT 1).ZG14B  MULTI PARMS            00102500
&XETOKEN           SETC  '&ETOKEN'   SET XVARIABLE                      00102600
.ZG14B             AIF   (K'&ETOKEN(1) GT 0).ZG14C                      00102700
&ZXETOKEN          SETC  ''          RESET IN/OUTPUT                    00102800
&ZMS               SETC  ' '         *KRQDA*                            00102900
&ZMS               SETC  '&ZMS "ETOKEN" KEY AND ITS'                    00103000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00103100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00103200
.ZG14C             ANOP  ,                                              00103300
.*-------------------------------------------------------------------   00103400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00103500
                   AIF   (K'&ZXETOKEN LE 0).ZG14R  NOT I/O              00103600
                   AIF   ('&XETOKEN'(1,1) NE '(').ZG14R                 00103700
&ZCGPR             SETC  '&XETOKEN'(2,K'&XETOKEN-2)                     00103800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                   00103900
                   AIF   (K'&ZCGPR GT 2).ZG14Q                          00104000
                   AIF   ('&ZCGPR' EQ '0').ZG14Q                        00104100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00104200
                   AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME      00104300
.ZG14P             ANOP  ,                                              00104400
                   AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC           00104500
                   AIF   ('&ZCGPR' LT '2').ZG14Q                        00104600
                   AIF   ('&ZCGPR' LE '12').ZG14R                       00104700
.ZG14Q             ANOP  ,                                              00104800
&ZMS               SETC  '"ETOKEN='  *KGPRA* MNOTE                      00104900
&ZMS               SETC  '&ZMS.&ETOKEN"'                                00105000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00105100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00105200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00105300
.ZG14R             ANOP  ,                                              00105400
.*----------------------------------------------------------------***   00105500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00105600
                   AIF   (N'&RETCODE LE 1).ZG17A  CK NUM                00105700
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           00105800
&ZMS               SETC  '&ZMS.&RETCODE"'                               00105900
&ZMS               SETC  '&ZMS "RETCODE"'                               00106000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00106100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00106200
.ZG17A             ANOP  ,                                              00106300
.*-------------------------------------------------------------------   00106400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00106500
                   AIF   (K'&RETCODE(1) LE 0).ZG17C  NO PARM            00106600
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00106700
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00106800
                   AIF   (N'&RETCODE GT 1).ZG17C                        00106900
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00107000
.ZG17C             ANOP  ,                                              00107100
.*-------------------------------------------------------------------   00107200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00107300
                   AIF   (K'&ZXRETCODE LE 0).ZG17R  NOT I/O             00107400
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG17R                00107500
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00107600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                   00107700
                   AIF   (K'&ZCGPR GT 2).ZG17Q                          00107800
                   AIF   ('&ZCGPR' EQ '0').ZG17Q                        00107900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00108000
                   AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME      00108100
.ZG17P             ANOP  ,                                              00108200
                   AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC           00108300
                   AIF   ('&ZCGPR' LT '2').ZG17Q                        00108400
                   AIF   ('&ZCGPR' LE '12').ZG17R                       00108500
.ZG17Q             ANOP  ,                                              00108600
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           00108700
&ZMS               SETC  '&ZMS.&RETCODE"'                               00108800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00108900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00109000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00109100
.ZG17R             ANOP  ,                                              00109200
.*----------------------------------------------------------------***   00109300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00109400
                   AIF   (N'&RSNCODE LE 1).ZG20A  CK NUM                00109500
&ZMS               SETC  '"RSNCODE='            *KPOSA* MNOTE           00109600
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00109700
&ZMS               SETC  '&ZMS "RSNCODE"'                               00109800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00109900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00110000
.ZG20A             ANOP  ,                                              00110100
.*-------------------------------------------------------------------   00110200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00110300
                   AIF   (K'&RSNCODE(1) LE 0).ZG20C  NO PARM            00110400
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00110500
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00110600
                   AIF   (N'&RSNCODE GT 1).ZG20C                        00110700
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00110800
.ZG20C             ANOP  ,                                              00110900
.*-------------------------------------------------------------------   00111000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00111100
                   AIF   (K'&ZXRSNCODE LE 0).ZG20R  NOT I/O             00111200
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG20R                00111300
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00111400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                   00111500
                   AIF   (K'&ZCGPR GT 2).ZG20Q                          00111600
                   AIF   ('&ZCGPR' EQ '0').ZG20Q                        00111700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00111800
                   AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME      00111900
.ZG20P             ANOP  ,                                              00112000
                   AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC           00112100
                   AIF   ('&ZCGPR' LT '2').ZG20Q                        00112200
                   AIF   ('&ZCGPR' LE '12').ZG20R                       00112300
.ZG20Q             ANOP  ,                                              00112400
&ZMS               SETC  '"RSNCODE='            *KGPRA* MNOTE           00112500
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00112600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00112700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00112800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00112900
.ZG20R             ANOP  ,                                              00113000
.******************************************************************     00113100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00113200
.******************************************************************     00113300
                   ACTR  10000                                          00113400
.*----------------------------------------------------------------***   00113500
.***AH.P02 EXTRA POSITIONALS                                            00113600
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00113700
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00113800
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00113900
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00114000
.ZGLISTX1          ANOP  ,                                              00114100
&ZCVAL             SETC  ''          ERROR FIELD                        00114200
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00114300
.ZGLIST2           ANOP  ,                                              00114400
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00114500
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00114600
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00114700
                   AGO   .ZGLIST2                                       00114800
.*                                                                      00114900
.ZGLIST3           ANOP  ,                                              00115000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00115100
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       00115200
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00115300
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00115400
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00115500
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00115600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00115700
.ZGLISTX           ANOP  ,                                              00115800
&ZASYSLNDX         SETA  0                                              00115900
.*-------------------------------------------------------------------   00116000
.***AG.MF04 MF=(SLE)                                                    00116100
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00116200
.*******************************************************************    00116300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00116400
.*******************************************************************    00116500
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00116600
.*******************************************************************    00116700
.***AE.01  START OF IWMEREG MACRO CODE                                  00116800
.*******************************************************************    00116900
                   LCLC  &M0M0001                 NAME                  00117000
&M0M0001           SETC  '&XLABEL'                SET NAME              00117100
                   AIF   (K'&XLABEL NE 0).XLAB2                         00117200
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00117300
.*                                                                      00117400
.XLAB2             ANOP  ,                                              00117500
                   AIF   ('&XMF' EQ 'L').XLAB3                          00117600
&M0M0001 DS    0H                             IWMEREG-0                 00117700
.XLAB3             ANOP  ,                                              00117800
.*******************************************************************    00117900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00118000
.*******************************************************************    00118100
              PUSH  PRINT                                               00118200
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00118300
                   PRINT OFF         ++ PR01                            00118400
                   AGO   .ZPRNTXX                                       00118500
.ZPRINTX           PRINT ON                                             00118600
.ZPRNTXX           ANOP  ,                                              00118700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00118800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00118900
.********************************************************************   00119000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00119100
.********************************************************************   00119200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00119300
                      LCLA  &ZOPN1         INVOCATION INDEX             00119400
                      LCLC  &ZOPL(4095)    LABEL                        00119500
                      LCLC  &ZOPO(4095)    OPERATION                    00119600
                      LCLC  &ZOPV(4095)    VALUE                        00119700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00119800
.*                                                                      00119900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00120000
.******************************************************************     00120100
.***AL.L10 IWMEREG FMT=LIST MF=S|L PARAMETERS                           00120200
.******************************************************************     00120300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00120400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00120500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00120600
&XMFATTR              SETC  '0D'                                        00120700
.*                                                                      00120800
&ZOPN                 SETA  &ZOPN+1                                     00120900
&ZOPL(&ZOPN)          SETC  ' '                                         00121000
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00121100
&ZOPO(&ZOPN)          SETC  'B'                                         00121200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00121300
                      AGO   .ZALVL6B                                    00121400
.ZALVL6A              ANOP                                              00121500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00121600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00121700
.ZALVL6B              ANOP                                              00121800
&ZOPD(&ZOPN)          SETC  '++ IWMEREG ARG PARMS'                      00121900
.*                                                                      00122000
&ZOPN                 SETA  &ZOPN+1                                     00122100
&ZOPL(&ZOPN)          SETC  ' '                                         00122200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00122300
&ZOPV(&ZOPN)          SETC  '1'                                         00122400
&ZOPD(&ZOPN)          SETC  ' '                                         00122500
.*                                                                      00122600
.ZLMFSL2              ANOP  ,                                           00122700
.*-------------------------------------------------------------------   00122800
.***AM.L00  IWMEREG FMT=LIST name                                       00122900
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00123000
&ZOPN                 SETA &ZOPN+1                                      00123100
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00123200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00123300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00123400
&ZOPD(&ZOPN)          SETC '++ IWMEREG NAME'                            00123500
.ZLMFSL2M             ANOP  ,                                           00123600
.*-------------------------------------------------------------------   00123700
.***AM.L01  IWMEREG FMT=LIST PARAMETERS                                 00123800
&ZOPN                 SETA &ZOPN+1                                      00123900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00124000
&ZOPO(&ZOPN)          SETC 'DS'                                         00124100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00124200
&ZOPD(&ZOPN)          SETC '++ IWMEREG PARM LIST'                       00124300
.*-------------------------------------------------------------------   00124400
.***AM.L02 XVERSION XL1                                                 00124500
&ZOPN                 SETA &ZOPN+1                                      00124600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00124700
&ZOPO(&ZOPN)          SETC 'DS'                                         00124800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00124900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00125000
.*-------------------------------------------------------------------   00125100
.***AM.L09  XRSV0001 CL1                                                00125200
&ZOPN                 SETA &ZOPN+1                                      00125300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00125400
&ZOPO(&ZOPN)          SETC 'DS'                                         00125500
&ZOPV(&ZOPN)          SETC 'CL1'                                        00125600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00125700
.*-------------------------------------------------------------------   00125800
.***AM.L09  XPLISTLEN XL2                                               00125900
&ZOPN                 SETA &ZOPN+1                                      00126000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00126100
&ZOPO(&ZOPN)          SETC 'DS'                                         00126200
&ZOPV(&ZOPN)          SETC 'XL2'                                        00126300
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00126400
.*-------------------------------------------------------------------   00126500
.***AM.L09  XREGTOKEN CL8                                               00126600
&ZOPN                 SETA &ZOPN+1                                      00126700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGTOKEN'                        00126800
&ZOPO(&ZOPN)          SETC 'DS'                                         00126900
&ZOPV(&ZOPN)          SETC 'CL8'                                        00127000
&ZOPD(&ZOPN)          SETC '++ &ZXREGTOKEN  XREGTOKEN'                  00127100
.*-------------------------------------------------------------------   00127200
.***AM.L09  XETOKEN CL8                                                 00127300
&ZOPN                 SETA &ZOPN+1                                      00127400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00127500
&ZOPO(&ZOPN)          SETC 'DS'                                         00127600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00127700
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00127800
.*-------------------------------------------------------------------   00127900
.***AM.L09  XSUBSYS CL4                                                 00128000
&ZOPN                 SETA &ZOPN+1                                      00128100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBSYS'                          00128200
&ZOPO(&ZOPN)          SETC 'DS'                                         00128300
&ZOPV(&ZOPN)          SETC 'CL4'                                        00128400
&ZOPD(&ZOPN)          SETC '++ &ZXSUBSYS  XSUBSYS'                      00128500
.*-------------------------------------------------------------------   00128600
.***AM.L09  XSUBSYSNM CL8                                               00128700
&ZOPN                 SETA &ZOPN+1                                      00128800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBSYSNM'                        00128900
&ZOPO(&ZOPN)          SETC 'DS'                                         00129000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00129100
&ZOPD(&ZOPN)          SETC '++ &ZXSUBSYSNM  XSUBSYSNM'                  00129200
.*-------------------------------------------------------------------   00129300
.***AM.L09  XSUBSYSREQUEST CL32                                         00129400
&ZOPN                 SETA &ZOPN+1                                      00129500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBSYSREQUEST'                   00129600
&ZOPO(&ZOPN)          SETC 'DS'                                         00129700
&ZOPV(&ZOPN)          SETC 'CL32'                                       00129800
&ZOPD(&ZOPN)          SETC '++ &ZXSUBSYSREQUEST  XSUBSYSREQUEST'        00129900
.*-------------------------------------------------------------------   00130000
.***AM.L10 END OF IWMEREG LIST PARAMETERS                               00130100
&ZOPN                 SETA &ZOPN+1                                      00130200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00130300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00130400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00130500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00130600
.*                                                                      00130700
&ZOPN                 SETA &ZOPN+1                                      00130800
&ZOPL(&ZOPN)          SETC ' '                                          00130900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00131000
&ZOPV(&ZOPN)          SETC '1'                                          00131100
&ZOPD(&ZOPN)          SETC ' '                                          00131200
.*-------------------------------------------------------------------   00131300
.***AL.L12 IWMEREG FMT=LIST MF=S|L PARAMETERS                           00131400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00131500
.*                                                                      00131600
&ZOPN                 SETA  &ZOPN+1                                     00131700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00131800
&ZOPO(&ZOPN)          SETC  'DC'                                        00131900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00132000
&ZOPD(&ZOPN)          SETC  '++ IWMEREG ARG PARMS'                      00132100
.*                                                                      00132200
.ZLMFSLX              ANOP  ,                                           00132300
.*-------------------------------------------------------------------   00132400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00132500
&ZPLLEN               SETA 64                                           00132600
.*                                                                      00132700
.******************************************************************     00132800
.***AI.L01 IWMEREG FMT=LIST FILL IN PARAMETER AREA                      00132900
.******************************************************************     00133000
                      ACTR  10000                                       00133100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00133200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00133300
&ZCVAL                SETC  'LAE'          XAX MODE                     00133400
.ZIMFXA               ANOP ,                                            00133500
.*                                                                      00133600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00133700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00133800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00133900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00134000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00134100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00134200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00134300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00134400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00134500
&ZOPN                 SETA  &ZOPN+1                                     00134600
&ZOPL(&ZOPN)          SETC  ' '                                         00134700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00134800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00134900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00135000
                      AGO   .ZIMFNX                                     00135100
.*                                                                      00135200
.ZIMFN2               ANOP ,                                            00135300
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00135400
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00135500
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00135600
&ZOPN                 SETA  &ZOPN+1                                     00135700
&ZOPL(&ZOPN)          SETC  ' '                                         00135800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00135900
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00136000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00136100
                      AGO   .ZIMFNX                                     00136200
.ZIMFNX1              ANOP ,                                            00136300
&ZOPN                 SETA  &ZOPN+1                                     00136400
&ZOPL(&ZOPN)          SETC  ' '                                         00136500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00136600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00136700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00136800
.ZIMFNX               ANOP ,                                            00136900
.********************************************************************   00137000
.***AI.L02 IWMEREG FMT=LIST INITIALIZE PARAMETER AREA                   00137100
.********************************************************************   00137200
.***AI.L03 MF=(SLE)                                                     00137300
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00137400
.*                                                                      00137500
&ZOPN                 SETA  &ZOPN+1                                     00137600
&ZOPL(&ZOPN)          SETC  ' '                                         00137700
&ZOPO(&ZOPN)          SETC  'XC'                                        00137800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00137900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00138000
.ZIMFLX               ANOP  ,                                           00138100
.*-------------------------------------------------------------------   00138200
.***AI.L04 XPLISTLEN XL2                                                00138300
&ZOPN                 SETA  &ZOPN+1                                     00138400
&ZOPL(&ZOPN)          SETC  ' '                                         00138500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00138600
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00138700
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00138800
.*-------------------------------------------------------------------   00138900
.***AI.L25  XETOKEN CL8                                                 00139000
                      AIF   ('&ZXETOKEN' EQ '').ZI5E                    00139100
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI5E              00139200
&ZCGPR                SETC  '&XETOKEN'                                  00139300
.*                                                                      00139400
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI5B               00139500
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00139600
.ZI5B                 ANOP  ,                                           00139700
.*                                                                      00139800
&ZOPN                 SETA  &ZOPN+1                                     00139900
&ZOPL(&ZOPN)          SETC  ' '                                         00140000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00140100
&ZOPV(&ZOPN)          SETC  '12(8,1),&ZCGPR'                            00140200
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00140300
.*                                                                      00140400
.ZI5E                 ANOP  ,                                           00140500
.*-------------------------------------------------------------------   00140600
.***AI.L25  XSUBSYS CL4                                                 00140700
                      AIF   ('&ZXSUBSYS' EQ '').ZI6E                    00140800
                      AIF   ('&ZXSUBSYS' EQ 'OUTPUT').ZI6E              00140900
&ZCGPR                SETC  '&XSUBSYS'                                  00141000
.*                                                                      00141100
                      AIF   ('&XSUBSYS'(1,1) NE '(').ZI6B               00141200
&ZCGPR   SETC  '0('.'&XSUBSYS'(2,K'&XSUBSYS-2).')'                      00141300
.ZI6B                 ANOP  ,                                           00141400
.*                                                                      00141500
&ZOPN                 SETA  &ZOPN+1                                     00141600
&ZOPL(&ZOPN)          SETC  ' '                                         00141700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00141800
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00141900
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYS XSUBSYS'                      00142000
.*                                                                      00142100
.ZI6E                 ANOP  ,                                           00142200
.*-------------------------------------------------------------------   00142300
.***AI.L25  XSUBSYSNM CL8                                               00142400
                      AIF   ('&ZXSUBSYSNM' EQ '').ZI7E                  00142500
                      AIF   ('&ZXSUBSYSNM' EQ 'OUTPUT').ZI7E            00142600
&ZCGPR                SETC  '&XSUBSYSNM'                                00142700
.*                                                                      00142800
                      AIF   ('&XSUBSYSNM'(1,1) NE '(').ZI7B             00142900
&ZCGPR   SETC  '0('.'&XSUBSYSNM'(2,K'&XSUBSYSNM-2).')'                  00143000
.ZI7B                 ANOP  ,                                           00143100
.*                                                                      00143200
&ZOPN                 SETA  &ZOPN+1                                     00143300
&ZOPL(&ZOPN)          SETC  ' '                                         00143400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00143500
&ZOPV(&ZOPN)          SETC  '24(8,1),&ZCGPR'                            00143600
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYSNM XSUBSYSNM'                  00143700
.*                                                                      00143800
.ZI7E                 ANOP  ,                                           00143900
.*-------------------------------------------------------------------   00144000
.***AI.L25  XSUBSYSREQUEST CL32                                         00144100
                      AIF   ('&ZXSUBSYSREQUEST' EQ '').ZI8E             00144200
                      AIF   ('&ZXSUBSYSREQUEST' EQ 'OUTPUT').ZI8E       00144300
&ZCGPR                SETC  '&XSUBSYSREQUEST'                           00144400
.*                                                                      00144500
                      AIF   ('&XSUBSYSREQUEST'(1,1) NE '(').ZI8B        00144600
&ZCGPR   SETC  '0('.'&XSUBSYSREQUEST'(2,K'&XSUBSYSREQUEST-2).')'        00144700
                      AGO   .ZI8D                                       00144800
.ZI8B                 ANOP  ,                                           00144900
.*                                                                      00145000
                      AIF   ('&SUBSYSREQUEST(1)' EQ '').ZI8I  OMITTED   00145100
&ZC                   SETC  'NO_SUBSYSREQUEST'                          00145200
                      AIF   ('&XSUBSYSREQUEST' NE '&ZC').ZI8C           00145300
.ZI8I                 ANOP  ,                                           00145400
&ZCGPR                SETC  '=CL32''&XSUBSYSREQUEST'''                  00145500
.ZI8C                 ANOP  ,                                           00145600
.*                                                                      00145700
.ZI8D                 ANOP  ,                                           00145800
.*                                                                      00145900
&ZOPN                 SETA  &ZOPN+1                                     00146000
&ZOPL(&ZOPN)          SETC  ' '                                         00146100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00146200
&ZOPV(&ZOPN)          SETC  '32(32,1),&ZCGPR'                           00146300
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYSREQUEST XSUBSYSREQUEST'        00146400
.*                                                                      00146500
.ZI8E                 ANOP  ,                                           00146600
.*-------------------------------------------------------------------   00146700
&ZOPN1                SETA &ZOPN                                        00146800
.*******************************************************************    00146900
.***  PROCESS IWMEREG OUTPUT PARAMETERS                                 00147000
.*******************************************************************    00147100
                      ACTR  10000                                       00147200
.*------------------------------------------------------------------    00147300
.***AO.L02 XREGTOKEN CL8                                                00147400
         AIF   ('&ZXREGTOKEN' EQ 'OUTPUT').ZO4A  OUTPUT                 00147500
         AIF   ('&ZXREGTOKEN' NE 'INOUT').ZO4C  INOUT                   00147600
.ZO4A    AIF   ('&XREGTOKEN'(1,1) NE '(').ZO4B  ADDR IN GPR             00147700
&ZCGPR   SETC  '&XREGTOKEN'(2,K'&XREGTOKEN-2)                           00147800
&ZOPN                 SETA  &ZOPN+1                                     00147900
&ZOPL(&ZOPN)          SETC  ' '                                         00148000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00148100
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),4(1)'                          00148200
&ZOPD(&ZOPN)          SETC  '++ XREGTOKEN CL8'                          00148300
                      AGO   .ZO4C                                       00148400
.*                                                                      00148500
.ZO4B                 ANOP  ,                                           00148600
&ZAWRK   SETA  K'&XREGTOKEN                                             00148700
         AIF   ('&XREGTOKEN'(&ZAWRK,1) NE ')').ZO4G                     00148800
&ZN      SETA  2                                                        00148900
.ZO4H    ANOP                                                           00149000
         AIF   (&ZN GE &ZAWRK).ZO4G                                     00149100
         AIF   ('&XREGTOKEN'(&ZN,1) NE '(').ZO4I                        00149200
&ZC      SETC  '&XREGTOKEN'(1,&ZN).'8'.','                              00149300
&ZC      SETC  '&ZC'.'&XREGTOKEN'(&ZN+1,&ZAWRK-&ZN).',4(1)'             00149400
         AGO   .ZO4J                                                    00149500
.ZO4I    ANOP                                                           00149600
&ZN      SETA  &ZN+1                                                    00149700
         AGO   .ZO4H                                                    00149800
.ZO4G    ANOP                                                           00149900
&ZC      SETC  '&XREGTOKEN.(8),4(1)'                                    00150000
.ZO4J    ANOP                                                           00150100
&ZOPN                 SETA  &ZOPN+1                                     00150200
&ZOPL(&ZOPN)          SETC  ' '                                         00150300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150400
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00150500
&ZOPD(&ZOPN)          SETC  '++ XREGTOKEN CL8'                          00150600
.ZO4C                 ANOP  ,                                           00150700
.*******************************************************************    00150800
.***AO.X02  RETURN CODE PROCESSING                                      00150900
.*******************************************************************    00151000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00151100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00151200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00151300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00151400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00151500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00151600
&ZOPN                 SETA  &ZOPN+1                                     00151700
&ZOPL(&ZOPN)          SETC  ' '                                         00151800
&ZOPO(&ZOPN)          SETC  'ST'                                        00151900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00152000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00152100
                      AGO   .ZMRETX                                     00152200
.*                                                                      00152300
.ZMRET2               ANOP  ,                                           00152400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00152500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00152600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00152700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00152800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00152900
&ZOPN                 SETA  &ZOPN+1                                     00153000
&ZOPL(&ZOPN)          SETC  ' '                                         00153100
&ZOPO(&ZOPN)          SETC  'LR'                                        00153200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00153300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00153400
.ZMRETX               ANOP  ,                                           00153500
.*******************************************************************    00153600
.***AO.X03  REASON CODE PROCESSING                                      00153700
.*******************************************************************    00153800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00153900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00154000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00154100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00154200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00154300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00154400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00154500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00154600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00154700
&ZOPN                 SETA  &ZOPN+1                                     00154800
&ZOPL(&ZOPN)          SETC  ' '                                         00154900
&ZOPO(&ZOPN)          SETC  'ST'                                        00155000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00155100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00155200
                      AGO   .ZMRSNX                                     00155300
.*                                                                      00155400
.ZMRSN2               ANOP  ,                                           00155500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00155600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00155700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00155800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00155900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00156000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00156100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00156200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00156300
&ZOPN                 SETA  &ZOPN+1                                     00156400
&ZOPL(&ZOPN)          SETC  ' '                                         00156500
&ZOPO(&ZOPN)          SETC  'LR'                                        00156600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00156700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00156800
.ZMRSNX               ANOP  ,                                           00156900
.*******************************************************************    00157000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00157100
.*******************************************************************    00157200
.ZMFLX                ANOP  ,              MF=L PROCESSING              00157300
.*******************************************************************    00157400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00157500
.*******************************************************************    00157600
                      ACTR  10000                                       00157700
.*                                                                      00157800
                      LCLA  &ZLC           COLUMN POSITION              00157900
                      LCLA  &ZOPX          LIST TABLE INDEX             00158000
                      LCLC  &ZLL           LABEL                        00158100
                      LCLC  &ZLOP          OPERATION                    00158200
                      LCLC  &ZLV           VALUE                        00158300
                      LCLC  &ZLD           DESCRIPTION                  00158400
.*                                                                      00158500
&ZOPX                 SETA  1                                           00158600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00158700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00158800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00158900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00159000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00159100
                      AIF   (K'&ZLD LE 0).ZL5                           00159200
&ZLC                  SETA  35             COMMENT COLUMN               00159300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00159400
&ZLC                  SETA  33             COMMMENT COLUMN              00159500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00159600
&ZLV                  SETC  '&ZLV'.' '                                  00159700
                      AGO   .ZL3                                        00159800
.*                                                                      00159900
.ZL4                  ANOP  ,                                           00160000
&ZLV                  SETC  '&ZLV'.' '                                  00160100
.ZL5                  ANOP  ,                                           00160200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00160300
.*                                                                      00160400
&ZLL     &ZLOP &ZLV                                                     00160500
.*                                                                      00160600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00160700
                      AGO   .ZL2           CONTINUE LOOPING             00160800
.*                                                                      00160900
.ZLX                  ANOP  ,                                           00161000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00161100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00161200
         L     14,16(0,0)              GET CVT ADDRESS                  00161300
         L     14,772(14,0)            GET SFT ADDRESS                  00161400
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00161500
         LA    15,100                  GET EX FOR SERVICE ROUTINE       00161600
         OR    14,15                   GET PC NUMBER                    00161700
         PC    0(14)                                                    00161800
END&SYSNDX DS    0H                    END LABEL                        00161900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00162000
.ZLINKX               ANOP  ,                                           00162100
.*******************************************************************    00162200
.***AP.X01  FORMAT GENERATED CODE                                       00162300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00162400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00162500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00162600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00162700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00162800
                      AIF   (K'&ZLD LE 0).ZL51                          00162900
&ZLC                  SETA  35             COMMENT COLUMN               00163000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00163100
&ZLC                  SETA  33             COMMENT COLUMN               00163200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00163300
&ZLV                  SETC  '&ZLV'.' '                                  00163400
                      AGO   .ZL31                                       00163500
.*                                                                      00163600
.ZL41                 ANOP  ,                                           00163700
&ZLV                  SETC  '&ZLV'.' '                                  00163800
.ZL51                 ANOP  ,                                           00163900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00164000
.*                                                                      00164100
&ZLL     &ZLOP &ZLV                                                     00164200
.*                                                                      00164300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00164400
                      AGO   .ZL21          CONTINUE LOOPING             00164500
.*                                                                      00164600
.ZLX1                 ANOP  ,                                           00164700
.*******************************************************************    00164800
.***AP.X02  END OF IWMEREG MACRO                                        00164900
&ZIWMEREG             SETC  'YES'          SET IWMEREG USED             00165000
         POP   PRINT                                                    00165100
*                                            IWMEREG-0                  00165200
         SPACE 1                                                        00165300
.ZLX2                 ANOP  ,                                           00165400
         MEND                                                           00165500
**********************************************************************/ 00165600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00165700
*%IWMEREG: MACRO KEYS(REGTOKEN,SUBSYS,SUBSYSNM,SUBSYSREQUEST,ETOKEN,    00165800
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00165900
*  ANS('?'||MACLABEL||' '||'IWMEREGP '||MACLIST||                       00166000
*         ' '||MACKEYS||';') COL(MACLMAR);                              00166100
*%END IWMEREG;                                                          00166200
