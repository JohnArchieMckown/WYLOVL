         MACRO -- IAZOHLD - MVS HOLD/REASON EQUATES AND TEXT TBLS       00100000
&LABEL   IAZOHLD &TEXTTAB=,&INDXTAB=,&SCOPE=BOTH,&TEXT=NO               00200000
.* **PROPRIETARY STATEMENT************************************          00210000
.*                                                           *          00220000
.*   LICENSED MATERIALS-PROPERTY OF IBM                      *          00230000
.*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"             *          00240000
.*   5645-001 (C) COPYRIGHT IBM CORP 1990, 1997              *          00300000
.*                                                           *          00500000
.*   STATUS:  HBB6603                                        *          00600000
.*                                                           *          00700000
.*01* EXTERNAL CLASSIFICATION:  NONE                         *          00710000
.*01* END OF EXTERNAL CLASSIFICATION:                        *          00720000
.*                                                           *          00730000
.* **END-OF-PROPRIETARY-STATEMENT*****************************          01000000
.*************************************************************          01100000
.*                                                           *          01200000
.* FUNCTION:                                                 *          01300000
.*                                                           *          01400000
.*       THE IAZOHLD MACRO GENERATES THE HOLD TYPE/REASON    *          01500000
.*       EQUATES AND CAN ALSO GENERATE THE REASON TEXT       *          01600000
.*       TABLES.                                             *          01700000
.*                                                           *          01800000
.* PARAMETERS:                                               *          01900000
.*                                                           *          02000000
.*       TEXTTAB - LABEL FOR THE TEXT TABLE                  *          02100000
.*       INDXTAB - LABEL FOR THE INDEX TABLE                 *          02200000
.*       SCOPE   = "BOTH" --> GENERATE ALL REASONS (DEFAULT) *          02300000
.*               = "JES2" --> GENERATE NON-JES3 REASONS      *          02400000
.*               = "JES3" --> GENERATE NON-JES2 REASONS      *          02500000
.*       TEXT    = "YES" --> GENERATE THE REASON TEXT TABLES *          02600000
.*                         AND HOLD TYPE/REASON EQUATES      *          02700000
.*               = "NO" --> GENERATES EQUATES ONLY (DEFAULT) *          02800000
.*                                                           *          02900000
.* NOTES:                                                    *          03000000
.*                                                           *          03100000
.*       NONE                                                *          03200000
.*                                                           *          03300000
.* ENVIRONMENT:                                              *          03400000
.*                                                           *          03500000
.*       THIS MACRO MAY BE INVOKED FROM EITHER A JES2 OR A   *          03600000
.*       JES3 MODULE BY APPROPRIATE USE OF THE SCOPE         *          03700000
.*       PARAMETER. IT MAY BE INVOKED SIMPLY TO DEFINE THE   *          03800000
.*       HOLD TYPE AND REASON EQUATES FOR A MODULE WHICH     *          03900000
.*       MUST PUT A SPOOLED SYSOUT DATASET IN HOLD STATE, OR *          04000000
.*       IT MAY BE INVOKED ACTUALLY TO GENERATE THE REASON   *          04100000
.*       TEXT TABLES INLINE FOR A QUERY COMMAND MODULE       *          04200000
.*       WHICH RETURNS TEXTUAL INFORMATION TO ITS CALLER     *          04300000
.*       (E.G. THE OPERATOR).                                *          04400000
.*                                                           *          04500000
.* REGISTER USAGE (ENTRY/EXIT):                              *          04600000
.*                                                           *          04700000
.*       N/A                                                 *          04800000
.*                                                           *          04900000
.* RETURN CODES (R15 ON EXIT):                               *          05000000
.*                                                           *          05100000
.*       N/A                                                 *          05200000
.*                                                           *          05300000
.* OTHER CONSIDERATIONS:                                     *          05400000
.*                                                           *          05500000
.*       NONE                                                *          05600000
.*                                                           *          05700000
.* CHANGE ACTIVITY:                                          *          05800000
.*                                                           *          05900000
.* $410LPPP=ENT_II   HBB4410 881116 B_K:  JES2 Separator Su  *          05910000
.* $410P420=PTMS     HBB4410 900202 RAC1: Chg to JES common  *          05920000
.* $410D025=DCR      HBB4410 900209 RAC1: Chg to JES common  *          05925000
.* $410P567=PTMS     HBB4410 900424 RAC1: Chge text RC(053)  *          05930000
.*                                                           *          06000000
.* $420D004=NET      HBB4420 900402 CLW:  NJE Hop Count DCR  *          06002000
.* $420P502=SWBMOD   HBB4420 900831 A_D:  PTM PH31502        *          06004000
.*                                                           *          06004200
.* $R03P849=ENHPSO   HJE6603 960221 J_K2: Various IAZ updat  *          06004800
.*                                                           *          06006000
.* A000000-999999          Created for MVS  4.1.0            *     @410 06010000
.*************************************************************          06100000
.*                                                           *          06200000
.*       THE REASONS ARE CLASSIFIED INTO FIVE GROUPS BY      *          06300000
.*       NUMERIC RANGES (E.G. CODES 51 TO 100 ARE JES2       *          06400000
.*       REASONS). THE ACTUAL RANGES AND GROUPS ARE DEFINED  *          06500000
.*       BELOW. THE SCOPE PARAMETER DETERMINES WHICH OF      *          06600000
.*       THESE GROUPS WILL BE GENERATED.                     *          06700000
.*                                                           *          06800000
.*       IF &TEXT='YES', TWO TABLES ARE GENERATED TO         *          06900000
.*       HOLD AND ACCESS THE MESSAGE TEXT. THE TEXT TABLE IS *          07000000
.*       A LINEAR ARRAY OF CHARACTER STRINGS, EACH &OHLDLEN  *          07100000
.*       CHARACTERS LONG. EACH OF THESE STRINGS IS THE TEXT  *          07200000
.*       FOR SOME REASON CODE. THE NUMBER OF ENTRIES IN THIS *          07300000
.*       TABLE IS EQUAL TO THE NUMBER OF USED/DEFINED REASON *          07400000
.*       CODES. IN OTHER WORDS, TO SAVE SPACE THE TABLE IS   *          07500000
.*       TIGHTLY PACKED - THERE ARE NO BLANK STRINGS FOR     *          07600000
.*       UNUSED REASON CODES, SO THE TEXT FOR A GIVEN REASON *          07700000
.*       CODE CANNOT BE READ OFF THE TABLE ON THE BASIS OF   *          07800000
.*       THE REASON CODE ALONE. TO FIND THE TEXT FOR A GIVEN *          07900000
.*       REASON CODE, WE USE THE INDEX TABLE WHICH           *          08000000
.*       CONSISTS OF 256 BYTES, 1 PER POSSIBLE REASON CODE,  *          08100000
.*       AND TRANSLATES THE REASON CODE INTO AN INDEX        *          08200000
.*       IN THE TEXT TABLE. FOR EXAMPLE, IF THE FOLLOWING    *          08300000
.*       CODES WERE DEFINED IN ORDER, THE TABLES WOULD       *          08400000
.*       APPEAR AS BELOW. NOTE THAT THE REASON CODES DO NOT  *          08500000
.*       HAVE TO BE DECLARED (VIA IAZHTXT) IN ANY ORDER.     *          08600000
.*                                                           *          08700000
.*           REASON 0 HAS TEXT 'UNKNOWN'                     *          08800000
.*           REASON 2 HAS TEXT 'JES SWB ERROR'               *          08900000
.*           REASON 6 HAS TEXT 'JES3 DEST ERROR'             *          09000000
.*           REASON 3 HAS TEXT 'JES2 DEST ERROR'             *          09100000
.*                                                           *          09200000
.*     INDEX TABLE                    TEXT TABLE             *          09300000
.*     (&OHLDINDX)                    (&OHLDTXT)             *          09400000
.*     +-----------+                  +--------------------+ *          09500000
.*   0 |    0      +--------------> 0 |  UNKNOWN           | *          09600000
.*     +-----------+                  +--------------------+ *          09700000
.*   1 |    0      |  +-----------> 1 |  JES SWB ERROR     | *          09800000
.*     +-----------+  |               +--------------------+ *          09900000
.*   2 |    1      +--+  +--------> 2 |  JES3 DEST ERROR   | *          10000000
.*     +-----------+     |            +--------------------+ *          10100000
.*   3 |    3      +-----|--------> 3 |  JES2 DEST ERROR   | *          10200000
.*     +-----------+     |            +--------------------+ *          10300000
.*   4 |    0      |     |            <-- &OHLDLEN CHARS --> *          10400000
.*     +-----------+     |                                   *          10500000
.*   5 |    0      |     |                                   *          10600000
.*     +-----------+     |  TO FIND THE TEXT CORRESPONDING   *          10700000
.*   6 |    2      +-----+  TO REASON CODE 6, GET THE SIXTH  *          10800000
.*     +-----------+        ELEMENT OF THE INDEX TABLE (2),  *          10900000
.*     |           |        AND USE IT AS AN INDEX INTO THE  *          11000000
.*     .           .        TEXT TABLE. (ADDRESS OF MESSAGE  *          11100000
.*     .           .        = TEXT TABLE ADDR + 2 * &OHLDLEN)*          11200000
.*     |           |                                         *          11300000
.*     +-----------+   NOTE: UNUSED REASON CODES POINT TO    *          11400000
.* 255 |    0      |         THE UNKNOWN REASON MESSAGE,     *          11500000
.*     +-----------+         WHICH IS ALWAYS REASON 0, THOUGH*          11600000
.*     <- 1  BYTE ->         THEY SHOULD NEVER BE ACCESSED.  *          11700000
.*                                                           *          11800000
.*       THESE TABLES ARE GENERATED FROM ASSEMBLER ARRAYS    *          11900000
.*       WHICH HAVE THE SAME STRUCTURE AS THE TABLES - THEY  *          12000000
.*       ARE THE SAME SIZE AS THE TABLES AND CONTAIN THE     *          12100000
.*       SAME DATA THAT THE TABLES WILL CONTAIN. THE         *          12200000
.*       ASSEMBLER STRING ARRAY &OHLDTXT(1..256) HOLDS THE   *          12300000
.*       REASON TEXT STRINGS JUST AS THE TEXT TABLE WILL.    *          12400000
.*       THE ASSEMBLER INTEGER ARRAY &OHLDINDX(1..256) HOLDS *          12500000
.*       THE INDICES OF THE REASON CODES IN THE TEXT TABLE   *          12600000
.*       JUST AS THE INDEX TABLE WILL. THE ONLY DIFFERENCE   *          12700000
.*       BETWEEN THE ASSEMBLER ARRAYS AND THE TABLES TO BE   *          12800000
.*       GENERATED IN STORAGE IS THAT THE LATTER ARE INDEXED *          12900000
.*       FROM ZERO WHILE THE FORMER ARE INDEXED FROM ONE.    *          13000000
.*       FOR EXAMPLE, REFERRING TO THE ABOVE DIAGRAM, REASON *          13100000
.*       TWO, THE THIRD REASON CODE, POINTS TO THE SECOND    *          13200000
.*       DECLARED REASON TEXT IN THE TEXT TABLE, THUS        *          13300000
.*       &OHLDTXT(2) = "JES SWB ERROR" AND &OHLDINDX(3) = 1. *          13400000
.*       &OHLDRCT CONTAINS THE NUMBER OF DECLARED REASON     *          13500000
.*       CODES, WHICH IS THE SIZE OF THE TEXT TABLE SO FAR.  *          13600000
.*                                                           *          13700000
.*       FOR EACH REASON CODE, THIS MACRO INVOKES THE        *          13800000
.*       IAZHTXT MACRO WHICH CHECKS TO SEE IF IT SHOULD BE   *          13900000
.*       GENERATED WITHIN THE SCOPE GIVEN BY THE USER (THE   *          14000000
.*       SCOPE IS PASSED TO THAT MACRO THROUGH THE GLOBAL    *          14100000
.*       &OHLDSCP). IF SO, THEN IAZHTXT GENERATES THE        *          14200000
.*       SYMBOLIC NAME EQUATE FOR THE REASON CODE            *          14300000
.*       (E.G. OHLDUNDF EQU 0), ADDS THE REASON TEXT TO THE  *          14400000
.*       END OF THE &OHLDTXT ARRAY, AND STORES THE INDEX AT  *          14500000
.*       WHICH IT WAS ADDED (MINUS ONE) IN THE &OHLDINDX     *          14600000
.*       ARRAY IN THE SLOT RESERVED FOR THAT REASON CODE.    *          14700000
.*                                                           *          14800000
.*       AFTER ALL THE REASON CODES HAVE BEEN DECLARED IN    *          14900000
.*       THIS WAY, THIS MACRO LOOPS THROUGH THE ASSEMBLER    *          15000000
.*       ARRAYS AND GENERATES THE TABLES IN STORAGE.         *          15100000
.*                                                           *          15200000
.*************************************************************          15300000
.*       DECLARE MACRO VARIABLES                             *          15400000
.*************************************************************          15500000
         GBLC  &OHLDTXT(256),&OHLDSCP                                   15600000
         GBLA  &OHLDRCT,&OHLDINDX(256)                                  15700000
         GBLA  &OHLDCMS,&OHLDCME,&OHLDJ2S,&OHLDJ2E                      15800000
         GBLA  &OHLDJ3S,&OHLDJ3E,&OHLDLEN                               15900000
         GBLA  &OHLDUDS,&OHLDUDE,&OHLDRDS,&OHLDRDE                      16000000
         LCLA  &I,&ERRORS                                               16100000
.*************************************************************          16200000
.*       INITIALIZE PARAMETER ERROR COUNTER.                 *          16300000
.*************************************************************          16400000
&ERRORS  SETA  0                                                        16500000
.*************************************************************          16600000
.*       VALIDATE SCOPE PARAMETER                            *          16700000
.*************************************************************          16800000
         AIF   ('&SCOPE' EQ 'BOTH' OR                                  C16900000
                '&SCOPE' EQ 'JES2' OR                                  C17000000
                '&SCOPE' EQ 'JES3').OHLDSOK                             17100000
         MNOTE 8,'IAZOHLD: PARAMETER ERROR. SCOPE= MUST BE'             17200000
         MNOTE 8,'  "BOTH", "JES2", OR "JES3".'                         17300000
&ERRORS  SETA  &ERRORS+1                                                17400000
.OHLDSOK ANOP                      SCOPE PARAMETER OK                   17500000
.*************************************************************          17600000
.*       VALIDATE TEXT PARAMETER                             *          17700000
.*************************************************************          17800000
         AIF   ('&TEXT' EQ 'YES' OR '&TEXT' EQ 'NO').OHLDTOK            17900000
         MNOTE 8,'IAZOHLD: PARAMETER ERROR. TEXT= MUST BE'              18000000
         MNOTE 8,'  "YES" OR "NO".'                                     18100000
&ERRORS  SETA  &ERRORS+1                                                18200000
.OHLDTOK ANOP                      TEXT PARAMETER OK                    18300000
.*************************************************************          18400000
.*       IF THERE WERE ANY PARAMETER ERRORS, EXIT.           *          18500000
.*************************************************************          18600000
         AIF   (&ERRORS GT 0).OHLDEND                                   18700000
.*************************************************************          18800000
.*       PASS SCOPE TO IAZHTXT THROUGH GLOBAL &OHLDSCP       *          18900000
.*************************************************************          19000000
&OHLDSCP SETC  '&SCOPE'                                                 19100000
.*************************************************************          19200000
.*       INITIALIZE REASON COUNT AND &OHLDINDX ARRAY         *          19300000
.*************************************************************          19400000
&OHLDRCT SETA  0                                                        19500000
&I       SETA  0                                                        19600000
.OHLDCLR ANOP                      CLEAR INDEX ARRAY                    19700000
&I       SETA  &I+1                                                     19800000
&OHLDINDX(&I) SETA 0                                                    19900000
         AIF   (&I LT 256).OHLDCLR                                      20000000
.*************************************************************          20100000
.*       DEFINE THE MAXIMUM LENGTH OF THE REASON TEXT HERE   *          20200000
.*************************************************************          20300000
&OHLDLEN SETA  37                                                       20400000
OHLDLEN  EQU   &OHLDLEN            MAX LENGTH OF REASON TEXT            20500000
.*************************************************************          20600000
.*       DEFINE THE RANGES FOR THE REASON GROUPS HERE        *          20700000
.*************************************************************          20800000
&OHLDCMS SETA  1                   COMMON START                         20900000
&OHLDCME SETA  50                  COMMON END                           21000000
&OHLDJ2S SETA  51                  JES2 START                           21100000
&OHLDJ2E SETA  100                 JES2 END                             21200000
&OHLDJ3S SETA  101                 JES3 START                           21300000
&OHLDJ3E SETA  150                 JES3 END                             21400000
&OHLDUDS SETA  151                 USER DEFINED START                   21500000
&OHLDUDE SETA  200                 USER DEFINED END                     21600000
&OHLDRDS SETA  201                 RESERVED FOR DEV. START              21700000
&OHLDRDE SETA  255                 RESERVED FOR DEV. END                21800000
.*************************************************************          21900000
.*       BIT ASSIGNMENTS FOR OUTPUT HOLD TYPES               *          22000000
.*************************************************************          22100000
OHLDOPER EQU   B'10000000'         OPERATOR HOLD                        22200000
OHLDUSER EQU   B'01000000'         USER     HOLD                        22300000
OHLDSYS  EQU   B'00100000'         SYSTEM   HOLD                        22400000
OHLDALL  EQU   B'11111111'         ALL      HOLD                        22500000
.*************************************************************          22600000
.*       SYMBOLIC NAMES FOR HOLD REASONS                     *          22700000
.*************************************************************          22800000
.*************************************************************          22900000
.*       INVOKE IAZHTXT TO ADD REASONS TO TABLES.            *          23000000
.*       ADD REASONS HERE.                                   *          23100000
.*************************************************************          23200000
OHLDJX00 IAZHTXT RC=000,TEXT='(000) UNKNOWN REASON CODE'                23300000
OHLDJX01 IAZHTXT RC=001,TEXT='(001) FSI RELDS UNPRINTABLE-SWB ERR'      23400000
OHLDJX02 IAZHTXT RC=002,TEXT='(002) FSI RELDS UNPRINTABLE-FSA'          23500000
OHLDJX03 IAZHTXT RC=003,TEXT='(003) SAF CALL FAILED'           @410P420 23510000
OHLDJX04 IAZHTXT RC=004,TEXT='(004) TRANSMISSION REJECTED'     @410P420 23520000
OHLDJX05 IAZHTXT RC=005,TEXT='(005) NJE HOP COUNT EXCEEDED'    @420D004 23530000
OHLDJX06 IAZHTXT RC=006,TEXT='(006) HELD BY SYSOUT API'        @R03LPSO 23540000
OHLDJ233 IAZHTXT RC=051,TEXT='(051) OFFLOAD WITH HOLD'                  23600000
OHLDJ234 IAZHTXT RC=052,TEXT='(052) PROGRAM CHECK IN HASPPRPU'          23700000
OHLDJ235 IAZHTXT RC=053,TEXT='(053) INSTALLATION EXIT PROGRAM CHECK'   C23710000
                                                               @410P567 23720000
OHLDJ236 IAZHTXT RC=054,TEXT='(054) PROGRAM CHECK IN SWBTUREQ' @410LPPP 23730000
OHLDJ237 IAZHTXT RC=055,TEXT='(055) PROGRAM CHECK IN SJFREQ'   @420P502 23740000
OHLDJ365 IAZHTXT RC=101,TEXT='(101) NETWORK NODE XXXXXXXX INVALID'      23800000
OHLDJ369 IAZHTXT RC=105,TEXT='(105) FSI GET DATASET PROCESSOR ERROR'   C23900000
                                                               @410D025 23910000
OHLDJ36A IAZHTXT RC=106,TEXT='(106) FSI RELDS UNPRINTABLE-ABEND'        24000000
OHLDJ36E IAZHTXT RC=110,TEXT='(110) NO WORK AVAILABLE'                  24100000
OHLDJ36F IAZHTXT RC=111,TEXT='(111) JDSPOINT ERROR OSDPOINT ROUTINE'   C24130000
                                                               @OY65031 24160000
OHLDJ373 IAZHTXT RC=115,TEXT='(115) PROCESS SYSOUT DATA SET HELD'       24200000
OHLDJ378 IAZHTXT RC=120,TEXT='(120) JDSPOINT ERROR IN CHKPT ROUTINE'    24300000
OHLDJ379 IAZHTXT RC=121,TEXT='(121) CHKPT ASSIGN IN STT FAILED'         24400000
OHLDJ37A IAZHTXT RC=122,TEXT='(122) CHKPT ASSIGN IN JOBTAT FAILED'      24500000
OHLDJ37B IAZHTXT RC=123,TEXT='(123) CHKPT ASSIGN DSTAT FAILED'          24600000
OHLDJ38C IAZHTXT RC=140,TEXT='(140) FSS PIPELINE ERROR - PDQJBSEL'      24700000
OHLDJ38D IAZHTXT RC=141,TEXT='(141) FSS PIPELINE ERROR - PDQDSSEL'      24800000
OHLDJ38E IAZHTXT RC=142,TEXT='(142) FSS PIPELINE ERROR - PDQWOSWR'      24900000
OHLDJ38F IAZHTXT RC=143,TEXT='(143) FSS PIPELINE ERROR - PDQWOSRD'      25000000
.*************************************************************          25100000
.*       SKIP TABLE GENERATION IF TEXT PARAMETER IS NOT YES  *          25200000
.*************************************************************          25300000
         AIF   ('&TEXT' NE 'YES').OHLDEND                               25400000
.*************************************************************          25500000
.*       DECLARE THE TEXT TABLE WITH THE CORRECT LENGTH AND  *          25600000
.*       THEN ORG BACK TO FILL IT IN. JUST LOOP THROUGH THE  *          25700000
.*       ASSEMBLER ARRAY &OHLDTXT FROM 1 TO &OHLDRCT         *          25800000
.*       GENERATING THE REASON STRINGS AS CHARACTER          *          25900000
.*       CONSTANTS.                                          *          26000000
.*************************************************************          26100000
.*************************************************************          26200000
.*       TEXT TABLE - CONTAINS ACTUAL REASON TEXT            *          26300000
.*************************************************************          26400000
&I       SETA  0                                                        26500000
&TEXTTAB DS    (&OHLDRCT)CL&OHLDLEN                                     26600000
         ORG   &TEXTTAB                                                 26700000
.OHLDTTG ANOP                      TEXT TABLE GENERATE                  26800000
&I       SETA  &I+1                                                     26900000
         DC    CL&OHLDLEN'&OHLDTXT(&I)'                                 27000000
         AIF   (&I LT &OHLDRCT).OHLDTTG                                 27100000
.*************************************************************          27200000
.*       DECLARE THE INDEX TABLE WITH THE RIGHT LENGTH AND   *          27300000
.*       THEN ORG BACK TO FILL IT IN. JUST LOOP THROUGH      *          27400000
.*       THE ASSEMBLER ARRAY &OHLDINDX FROM 1 TO 256         *          27500000
.*       GENERATING THE INDICES AS ADDRESS CONSTANTS         *          27600000
.*       OF LENGTH 1.                                        *          27700000
.*************************************************************          27800000
.*************************************************************          27900000
.*       INDEX TABLE - TRANSLATES REASON CODE TO INDEX IN    *          28000000
.*       TEXT TABLE                                          *          28100000
.*************************************************************          28200000
&I       SETA  0                                                        28300000
&INDXTAB DS    256X                                                     28400000
         ORG   &INDXTAB                                                 28500000
.OHLDITG ANOP                      INDEX TABLE GENERATE                 28600000
&I       SETA  &I+1                                                     28700000
         DC    AL1(&OHLDINDX(&I))                                       28800000
         AIF   (&I LT 256).OHLDITG                                      28900000
.OHLDEND ANOP                      END OF IAZOHLD                       29000000
         MEND                                                           99999999
