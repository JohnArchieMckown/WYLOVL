*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXZXIXMC                              -93/05/10-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Clear JES XCF Mailbox                         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1996, 1997                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      Purpose:  The IXZXIXMC service removes any messages that are   * 00002200
*      waiting for a JDU in a mailbox. The messages are acknowledged, * 00002300
*      with a return code that indicates that they were not           * 00002400
*      processed.                                                     * 00002500
*                                                                     * 00002600
*      IBM use of the interface:  This service would be used by JDU's * 00002700
*      that restart and do not want to process data from the previous * 00002800
*      JES Start or messages that were sent while JES was down. An    * 00002900
*      example of this would be commands that are sent from the       * 00003000
*      subsystem interface to JES for processing while JES is down,   * 00003100
*      these commands should be discarded to eliminate the potential  * 00003200
*      of multiple JES termination commands.                          * 00003300
*                                                                     * 00003400
*      Customer use of the interface:  This service would be used by  * 00003500
*      JDU's that restart and do not want to process data from the    * 00003600
*      previous JES Start or messages that were sent while JES was    * 00003700
*      down. An example of this would be commands that are sent from  * 00003800
*      the subsystem interface to JES3 for processing while JES3 is   * 00003900
*      down, these commands should be discarded to eliminate the      * 00004000
*      potential of multiple JES termination commands.                * 00004100
*                                                                     * 00004200
*      CDPI Implications:                                             * 00004300
*                                                                     * 00004400
*      This macro is a General Use Programming Interface.  It is      * 00004500
*      intended to be used as part of JES exits and JES3 dynamic      * 00004600
*      support programs. The macro is only used in JES environments.  * 00004700
*                                                                     * 00004800
*      EEC Implications:  This macro is not EEC interface.            * 00004900
*                                                                     * 00005000
*      Related Macros:  The following macros are required in order to * 00005100
*      use this macro service:                                        * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*      o   JES2:                                                      * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*          -   $MODULE - must be included in the module and must have * 00005800
*              been invoked before the IXZXIXMC macro service.        * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*      o   JES3:                                                      * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*          -   IATYMOD - must be included in the module and must have * 00006600
*              been invoked before the IXZXIXMC macro service.        * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*      The following macros are used with this macro to manage the    * 00007300
*      transport of data and monitoring of system events:             * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*      o   IXZXIXMB - Build mailbox                                   * 00007700
*                                                                     * 00007800
*      o   IXZXIXMD - Delete XCF Mailbox                              * 00007900
*                                                                     * 00008000
*      o   IXZXIXSM - Send a message to a mailbox                     * 00008100
*                                                                     * 00008200
*      o   IXZXIXRM - Receive a message from a mailbox                * 00008300
*                                                                     * 00008400
*      o   IXZXIXAC - Acknowledge message                             * 00008500
*                                                                     * 00008600
*      o   IXZXIXAT - Attach to XCF subcomponent                      * 00008700
*                                                                     * 00008800
*      o   IXZXIXDT - Detach from XCF subcomponent                    * 00008900
*                                                                     * 00009000
*      o   IXZXIXIF - Obtain information about the JESPlex            * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*      Requirements                                                   * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*      o   Authorization: Supervisor state - key 0 or 1               * 00009800
*                                                                     * 00009900
*      o   Dispatchable unit mode: Task                               * 00010000
*                                                                     * 00010100
*      o   Cross memory mode: PASN = HASN = SASN                      * 00010200
*                                                                     * 00010300
*      o   AMODE: 31                                                  * 00010400
*                                                                     * 00010500
*      o   ASC mode: Primary                                          * 00010600
*                                                                     * 00010700
*      o   Serialization: Enabled for interrupts                      * 00010800
*                                                                     * 00010900
*      o   Locks:  This service assumes no locks are held by the      * 00011000
*          user.                                                      * 00011100
*                                                                     * 00011200
*      o   Control Parameters:  None                                  * 00011300
*                                                                     * 00011400
*      o   JES Environments:                                          * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*          -   JES2 Main Task                                         * 00011800
*                                                                     * 00011900
*          -   JES3 Main Task                                         * 00012000
*                                                                     * 00012100
*          -   JES2 Subtasks                                          * 00012200
*                                                                     * 00012300
*          -   JES3 Subtasks                                          * 00012400
*                                                                     * 00012500
*          -   JES3 FSS                                               * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*      Register Information                                           * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*      o   Input registers                                            * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*          -   R0-R15 - Undefined                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*      o   Output registers                                           * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*          -   R0 - Reason code                                       * 00014500
*                                                                     * 00014600
*          -   R1 - Unpredictable                                     * 00014700
*                                                                     * 00014800
*          -   R2-R13 - Unchanged                                     * 00014900
*                                                                     * 00015000
*          -   R14 - Unpredictable                                    * 00015100
*                                                                     * 00015200
*          -   R15 - Return code                                      * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*      Programming Notes/Requirements:                                * 00015900
*                                                                     * 00016000
*      The programmer must supply a mailbox name.                     * 00016100
*                                                                     * 00016200
* Internal Information  * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*      If the caller does not want the JESXCF component to return     * 00016600
*      acknowledgements to the message issuer, for the messages that  * 00016700
*      are removed from the mailbox before it is deleted, the STB=YES * 00016800
*      parameter should be specified. This is an internal parameter   * 00016900
*      an is not part of the General Use Programming Interface.       * 00017000
*                                                                     * 00017100
* End of Internal Information  * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*      Restrictions                                                   * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      o   Cannot be issued until JES initialization has both         * 00017800
*          attached and initialized the JES Common XCF Task.          * 00017900
*                                                                     * 00018000
*      o   The mailbox clear must be issued from the same task as the * 00018100
*          creator of the mailbox (issuer of IXZXIXMB).               * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*      Performance Implications:                                      * 00018600
*                                                                     * 00018700
*      This macro has no performance impact.                          * 00018800
*                                                                     * 00018900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00019000
*                                                                     * 00019100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00019200
*                                                                     * 00019300
*01* SYNTAX:                                                          * 00019400
*                                                                     * 00019500
*[xlabel]  IXZXIXMC    MBOXNAME=xmboxname                             * 00019600
*                      ,GROUPTOKEN=xgrouptoken                        * 00019700
*                     [,STB=NO|YES]                                 * 00019800
*                     [,RTNCODE=xrtncode]                             * 00019900
*                     [,RSNCODE=xrsncode]                             * 00020000
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00020100
*                    [,MF=S]                                         * 00020200
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00020300
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*      Where:                                                         * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*      [xlabel]                                                       * 00021000
*          is an optional symbol, starting in column 1, that is the   * 00021100
*          name on the IXZXIXMC macro invocation.  The name must      * 00021200
*          conform to the rules for an ordinary assembler language    * 00021300
*          symbol.                                                    * 00021400
*          DEFAULT: No name.                                          * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*      The following is a set of mutually exclusive keys.  This set   * 00022000
*      is required; only one key must be specified.                   * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*      MBOXNAME=xmboxname                                             * 00022400
*          belongs to a set of mutually exclusive keys. It is the     * 00022500
*          name (RS-type), or address in register (2)-(12), of a 16   * 00022600
*          character input which contains the name of the mailbox to  * 00022700
*          be cleared.                                                * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*      End of a set of mutually exclusive required keys.              * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*      GROUPTOKEN=xgrouptoken                                         * 00023600
*          is the name (RS-type), or address in register (2)-(12), of * 00023700
*          a required fullword input that contains the JES XCF group  * 00023800
*          token.                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*      [STB=NO|YES]                                                 * 00024400
*          is an optional keyword input that indicates whether        * 00024500
*          acknowledgement messages should be sent to the sender.     * 00024600
*          This is an internal parameter and is not part of the       * 00024700
*          General Use Programming Interface.                         * 00024800
*          DEFAULT: NO                                                * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*          STB=NO                                                     * 00025200
*              Acknowledgement messages will be sent to the sender of * 00025300
*              the original message, if the original message caused   * 00025400
*              an acknowledgement message to be generated.            * 00025500
*                                                                     * 00025600
*          STB=YES                                                    * 00025700
*              Acknowledgement messages will not be sent to the       * 00025800
*              originator of the message.                             * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*      [RTNCODE=xrtncode]                                             * 00026600
*          is the name (RS-type) of an optional fullword output       * 00026700
*          variable, or register (2)-(12), into which the return code * 00026800
*          is to be copied from GPR 15.                               * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*      [RSNCODE=xrsncode]                                             * 00027400
*          is the name (RS-type) of an optional fullword output       * 00027500
*          variable, or register (2)-(12), into which the reason code * 00027600
*          is to be copied from GPR 0.                                * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00028200
*          is an optional byte input decimal value in the "1-1" range * 00028300
*          that specifies the macro version.  PLISTVER is the only    * 00028400
*          key allowed on the list form of MF and determines which    * 00028500
*          parameter list is generated.  Note that MAX may be         * 00028600
*          specified instead of a number, and the parameter list will * 00028700
*          be of the largest size currently supported. This size may  * 00028800
*          grow from release to release (thus possibly affecting the  * 00028900
*          amount of storage needed by your program).  If your        * 00029000
*          program can tolerate this, IBM recommends that you always  * 00029100
*          specify MAX when creating the list form parameter list as  * 00029200
*          that will ensure that the list form parameter list is      * 00029300
*          always long enough to hold whatever parameters might be    * 00029400
*          specified on the execute form.                             * 00029500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00029600
*          default is the lowest version which allows all of the      * 00029700
*          parameters specified on the invocation to be processed.    * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*      [MF=S|L|E]                                                   * 00030300
*          is an optional keyword input which specifies the macro     * 00030400
*          form.                                                      * 00030500
*          DEFAULT: S                                                 * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*          [MF=S]                                                     * 00030900
*              specifies the standard form of the macro.  The "S"     * 00031000
*              form generates code to put the parameters into an      * 00031100
*              in-line parameter list and invoke the desired service. * 00031200
*              Full checking for required macro keys is done along    * 00031300
*              with supplying defaults for omitted optional           * 00031400
*              parameters.                                            * 00031500
*                                                                     * 00031600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00031700
*              specifies the list form of the macro.  The "L" form    * 00031800
*              defines an area to be used for the parameter list.     * 00031900
*              Only the PLISTVER key may be specified on the          * 00032000
*              invocation.  All other macro parameters are flagged as * 00032100
*              errors.  If PLISTVER is not specified, the original    * 00032200
*              parameter list definition is used.                     * 00032300
*                                                                     * 00032400
*            ,xmfctrl                                                 * 00032500
*              is a required input.  It is the name of a storage area * 00032600
*              for the parameter list.                                * 00032700
*                                                                     * 00032800
*            ,xmfattr|0D                                            * 00032900
*              is an optional 60 character input string that varies   * 00033000
*              from 1 to 60 characters. It can contain any value that * 00033100
*              is valid on an assembler DS pseudo-op. You can use     * 00033200
*              this parameter to force boundary alignment of the      * 00033300
*              parameter list.                                        * 00033400
*              DEFAULT: 0D which forces the parameter list to a       * 00033500
*              doubleword boundary.                                   * 00033600
*                                                                     * 00033700
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00033800
*              specifies the execute form of the macro.  The "E" form * 00033900
*              generates code to put the parameters into the          * 00034000
*              parameter list specified by xmfctrl and provides full  * 00034100
*              syntax checking with default setting.                  * 00034200
*                                                                     * 00034300
*            ,xmfctrl                                                 * 00034400
*              is a required input.  It is the name (RS-type), or     * 00034500
*              address in register (1)-(12), of a storage area for    * 00034600
*              the parameter list.                                    * 00034700
*                                                                     * 00034800
*            ,COMPLETE                                              * 00034900
*              is an optional keyword input which specifies the       * 00035000
*              degree of macro parameter syntax checking.             * 00035100
*              DEFAULT: COMPLETE                                      * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*              COMPLETE                                               * 00035500
*                  Checking for required macro keys is done and       * 00035600
*                  defaults are supplied for omitted optional         * 00035700
*                  parameters.                                        * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*01* RETURN CODES:                                                    * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*            0    Mailbox was sucessful cleared.                      * 00036900
*                                                                     * 00037000
*            4    Mailbox was not cleared due to user error.          * 00037100
*                                                                     * 00037200
*            C    Mailbox was not cleared due to system abend.        * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*01* REASON CODES:                                                    * 00037700
*                                                                     * 00037800
*       REASON    RETURN                                              * 00037900
*       CODE      CODE      DESCRIPTION                               * 00038000
*                                          * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*              0  0         The   mailbox   has   been  cleared.  All * 00038400
*                           messages   that   were   waiting   to  be * 00038500
*                           processed  have  been acknowledged with a * 00038600
*                           return   code  that  indicates  that  the * 00038700
*                           message was not processed.                * 00038800
*                                                                     * 00038900
*              4  4         Processing  failed  because the parameter * 00039000
*                           list   passed  to  the  IXZXIXMC  service * 00039100
*                           routine does not have a valid eyecatcher. * 00039200
*                                                                     * 00039300
*              8  4         Processing  failed because, the parameter * 00039400
*                           list   passed  to  the  IXZXIXMC  service * 00039500
*                           routine had an invalid version indicator. * 00039600
*                           The caller may need to be recompiled.     * 00039700
*                                                                     * 00039800
*              C  4         Processing failed because, the grouptoken * 00039900
*                           passed  to  the  IXZXIXMC service routine * 00040000
*                           was not valid.                            * 00040100
*                                                                     * 00040200
*             10  4         Processing   failed  because,the  mailbox * 00040300
*                           name   passed   to  the  IXZIXMC  service * 00040400
*                           routine does not exist.                   * 00040500
*                                                                     * 00040600
*             14  4         Processing  failed  because, the ASCB and * 00040700
*                           or  TCB  of  the  caller  of  the IXZIXMC * 00040800
*                           service routine do not match those of the * 00040900
*                           builders (the callers of the IXZXIXMB ).  * 00041000
*                                                                     * 00041100
*             18  4         Processing   failed  because,the  IXZIXMC * 00041200
*                           service  routine  was  called on a member * 00041300
*                           that is detaching.                        * 00041400
*                                                                     * 00041500
*             1C  4         Processing  failed because, the parameter * 00041600
*                           list   passed  to  the  IXZXIXMC  service * 00041700
*                           routine  had  an  invalid  mailbox  name. * 00041800
*                           Only A-Z, 0-9 and $ @ # are valid.        * 00041900
*                                                                     * 00042000
*              0  C         Processing  failed  because, the IXZXIXMC * 00042100
*                           macro service abended .                   * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00042600
*                                                                     * 00042700
*02*   PROCESSOR:  ASSEM                                              * 00042800
*                                                                     * 00042900
*01* COMPONENT:  SCJSC                                                * 00043000
*                                                                     * 00043100
*01* MACRO USAGE NOTES:                                               * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00043500
*        global macro variable.  Any value other than 'NO' will       * 00043600
*        result in the macro expansion being printed.  The default is * 00043700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00043800
*        variable should be set.                                      * 00043900
*                                                                     * 00044000
*                    GBLC &ZPRINT                                     * 00044100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*    2.  All   keys   currently   contained  in  the  IXZXIXMC  macro * 00044500
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00044600
*        value of 1 or MAX.                                           * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*01* CHANGE ACTIVITY:                                                 * 00045200
*                                                                     * 00045300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00045400
*                                                                     * 00045500
*    $N0=JESXCF   HBB5510 921128 PD0AL:                               * 00045600
*    $R1=OS130    HBB6603 960312 PD1MG: Delete Extra R14 RSTD in PLX  * 00045700
*                                         Linkage                     * 00045800
****** END OF SPECIFICATIONS *****************************************/ 00045900
*/********************************************************************* 00046000
         MACRO                                                          00046100
&XLABEL  IXZXIXMC &MBOXNAME=,&GROUPTOKEN=,&STB=,&RTNCODE=,&RSNCODE=,   *00046200
               &PLISTVER=,&MF=                                          00046300
.*                                                                      00046400
*                MACDATE -93/05/10-<1>                                  00046500
.*                                                                      00046600
.*******************************************************************    00046700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00046800
.*******************************************************************    00046900
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00047000
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00047100
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00047200
.*                                                                      00047300
                GBLC  &ZIXZXIXMC  YES=MACRO USED AT LEAST ONCE          00047400
.*******************************************************************    00047500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00047600
.*******************************************************************    00047700
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00047800
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00047900
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00048000
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00048100
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00048200
                LCLA  &ZAWRK      USED AS A WORK AREA                   00048300
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00048400
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00048500
                LCLC  &ZC         CHARACTER WORK VARIABLE               00048600
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00048700
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00048800
                LCLA  &ZMACRET    MACRO RETURN CODE                     00048900
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00049000
.*                                                                      00049100
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00049200
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00049300
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00049400
                LCLC  &ZENDBASEPL               End of base PL          00049500
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00049600
.*******************************************************************    00049700
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00049800
.*******************************************************************    00049900
                LCLA  &ZI         INDEX FOR ARRAY                       00050000
                LCLA  &ZJ         INDEX FOR PARMS                       00050100
                LCLA  &ZK         INDEX FOR PARSE                       00050200
                LCLA  &ZLO        LOW RANGE VALUE                       00050300
                LCLA  &ZHI        HIGH RANGE VALUE                      00050400
                LCLC  &ZW         WORK AREA FOR PARM                    00050500
.********************************************************************   00050600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00050700
.********************************************************************   00050800
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00050900
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00051000
.*                                                                      00051100
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00051200
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00051300
                SPLEVEL  TEST                                           00051400
.ZSYS2          ANOP  ,                                                 00051500
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00051600
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00051700
                SYSSTATE TEST                                           00051800
                AGO   .ZSYS4                                            00051900
.ZSYS3          ANOP  ,                                                 00052000
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00052100
.ZSYS4          ANOP  ,                                                 00052200
.*******************************************************************    00052300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00052400
.*******************************************************************    00052500
                LCLC  &XDUMME0A   ++ NAME                               00052600
                LCLC  &XMBOXNAME  ++ NAME                               00052700
                LCLC  &XGROUPTOKEN              ++ NAME                 00052800
                LCLC  &XSTB       ++ VALUE                              00052900
                LCLC  &XRTNCODE   ++ NAME                               00053000
                LCLC  &XRSNCODE   ++ NAME                               00053100
                LCLA  &XPLISTVER  ++ VALUE                              00053200
                LCLC  &XMF        ++ VALUE                              00053300
                LCLC  &XMFCTRL    ++ NAME                               00053400
                LCLC  &XMFATTR    ++ VALUE                              00053500
                LCLC  &XMFSCK     ++ VALUE                              00053600
.*******************************************************************    00053700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00053800
.*******************************************************************    00053900
                LCLC  &ZXDUMME0A  ++ INPUT NAME                         00054000
                LCLC  &ZXMBOXNAME               ++ INPUT NAME           00054100
                LCLC  &ZXGROUPTOKEN             ++ INPUT NAME           00054200
                LCLC  &ZXSTB      ++ INPUT VALUE                        00054300
                LCLC  &ZXRTNCODE  ++ OUTPUT NAME                        00054400
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00054500
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00054600
                LCLC  &ZXMF       ++ INPUT VALUE                        00054700
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00054800
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00054900
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00055000
.********************************************************************   00055100
.***AC.PLV01  PROCESS PLISTVER                                      *   00055200
.********************************************************************   00055300
&XPLISTVER      SETA  1                                                 00055400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00055500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00055600
&XPLISTVER      SETA  1                                                 00055700
.ZPLV0          ANOP  ,                                                 00055800
.*                                                                      00055900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00056000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00056100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00056200
.*-------------------------------------------------------------------   00056300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00056400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00056500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00056600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00056700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00056800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00056900
                AGO   .ZPVCK2                                           00057000
.ZPVCK3         ANOP  ,                                                 00057100
.*-------------------------------------------------------------------   00057200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00057300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00057400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00057500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00057600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00057700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057800
                AGO   .ZPVCKE                                           00057900
.ZPVCK2         ANOP  ,                                                 00058000
.*-------------------------------------------------------------------   00058100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00058200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00058300
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00058400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00058500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00058600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00058700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00058800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00058900
                AGO   .ZPVCK5                                           00059000
.ZPVCK4         ANOP  ,                                                 00059100
&XPLISTVER      SETA  &PLISTVER(1)                                      00059200
.ZPVCK5         ANOP  ,                                                 00059300
.*-------------------------------------------------------------------   00059400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00059500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00059600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00059700
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00059800
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00059900
.ZPVCK6         ANOP   ,                                                00060000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00060100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00060200
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00060300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00060400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060500
.ZPVCKE         ANOP   ,                                                00060600
.********************************************************************   00060700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00060800
.********************************************************************   00060900
                ACTR  10000                                             00061000
.*------------------------------------------------------------------    00061100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00061200
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00061300
.*-------------------------------------------------------------------   00061400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00061500
.ZG23           ANOP  ,                                                 00061600
&ZTLC           SETC 'S'                                                00061700
                AIF   ('&MF(1)' NE '&ZTLC').ZG24                        00061800
&XMF            SETC  'S'         SET KEYWORD                           00061900
                AIF   (N'&MF LE 1).ZG23A        CK NUM                  00062000
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00062100
&ZMS            SETC  '&ZMS.&MF"'                                       00062200
&ZMS            SETC  '&ZMS "MF"'                                       00062300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00062400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00062500
.ZG23A          ANOP  ,                                                 00062600
.*-------------------------------------------------------------------   00062700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062800
.ZG24           ANOP  ,                                                 00062900
&ZTLC           SETC 'L'                                                00063000
                AIF   ('&MF(1)' NE '&ZTLC').ZG31                        00063100
&XMF            SETC  'L'         SET KEYWORD                           00063200
                AIF   (N'&MF LE 3).ZG24A        CK NUM                  00063300
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00063400
&ZMS            SETC  '&ZMS.&MF"'                                       00063500
&ZMS            SETC  '&ZMS "MF"'                                       00063600
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00063700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00063800
.ZG24A          ANOP  ,                                                 00063900
.*-------------------------------------------------------------------   00064000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00064100
                AIF   (N'&SYSLIST NE 0).ZG24B   POSITIONALS?            00064200
                AIF   ('&MBOXNAME' NE '').ZG24B  KEYS?                  00064300
                AIF   ('&GROUPTOKEN' NE '').ZG24B  KEYS?                00064400
                AIF   ('&STB' NE '').ZG24B      KEYS?                   00064500
                AIF   ('&RTNCODE' NE '').ZG24B  KEYS?                   00064600
                AIF   ('&RSNCODE' NE '').ZG24B  KEYS?                   00064700
                AGO    .ZG24C     INVOCATION OKAY                       00064800
.ZG24B          ANOP  ,                                                 00064900
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00065000
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00065100
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00065200
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00065300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00065400
.ZG24C          ANOP  ,                                                 00065500
.*-------------------------------------------------------------------   00065600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00065700
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00065800
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00065900
                AIF   (N'&MF(2) GT 1).ZG26B     MULTI PARMS             00066000
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00066100
.ZG26B          AIF   (K'&MF(2) GT 0).ZG26C                             00066200
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00066300
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00066400
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00066500
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00066600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066700
.ZG26C          ANOP  ,                                                 00066800
.*-------------------------------------------------------------------   00066900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00067000
                AIF   (K'&ZXMFCTRL LE 0).ZG26P  NOT I/O                 00067100
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG26P                    00067200
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00067300
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00067400
&ZMS            SETC  '&ZMS.&MF"'                                       00067500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00067600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00067700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00067800
.ZG26P          ANOP  ,                                                 00067900
.*-------------------------------------------------------------------   00068000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00068100
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00068200
&XMFATTR        SETC  '0D'                                              00068300
                AIF   (K'&MF(3) LE 0).ZG29B     PARM                    00068400
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00068500
                AIF   (N'&MF(3) GT 1).ZG29B     MULTI PARMS             00068600
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00068700
.ZG29B          ANOP  ,                                                 00068800
.*-------------------------------------------------------------------   00068900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00069000
                AIF   (K'&ZXMFATTR LE 0).ZG29P  NOT I/O                 00069100
                AIF   ('&XMFATTR'(1,1) NE '(').ZG29P                    00069200
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00069300
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00069400
&ZMS            SETC  '&ZMS.&MF"'                                       00069500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00069600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00069700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069800
.ZG29P          ANOP  ,                                                 00069900
.*-------------------------------------------------------------------   00070000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00070100
                AIF   (K'&ZXMFATTR LE 0).ZG29S  NOT I/O                 00070200
                AIF   (K'&XMFATTR LE 60).ZG29S  LNG OK                  00070300
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00070400
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00070500
&ZMS            SETC  '&ZMS.&MF"'                                       00070600
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00070700
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00070800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00070900
.ZG29S          ANOP  ,                                                 00071000
.*-------------------------------------------------------------------   00071100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071200
.ZG31           ANOP  ,                                                 00071300
&ZTLC           SETC 'E'                                                00071400
                AIF   ('&MF(1)' NE '&ZTLC').ZG39                        00071500
&XMF            SETC  'E'         SET KEYWORD                           00071600
                AIF   (N'&MF LE 3).ZG31A        CK NUM                  00071700
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00071800
&ZMS            SETC  '&ZMS.&MF"'                                       00071900
&ZMS            SETC  '&ZMS "MF"'                                       00072000
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00072100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072200
.ZG31A          ANOP  ,                                                 00072300
.*-------------------------------------------------------------------   00072400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00072500
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00072600
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00072700
                AIF   (N'&MF(2) GT 1).ZG33B     MULTI PARMS             00072800
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00072900
.ZG33B          AIF   (K'&MF(2) GT 0).ZG33C                             00073000
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00073100
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00073200
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00073300
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00073400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00073500
.ZG33C          ANOP  ,                                                 00073600
.*-------------------------------------------------------------------   00073700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00073800
                AIF   (K'&ZXMFCTRL LE 0).ZG33R  NOT I/O                 00073900
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG33R                    00074000
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00074100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                      00074200
                AIF   (K'&ZCGPR GT 2).ZG33Q                             00074300
                AIF   ('&ZCGPR' EQ '0').ZG33Q                           00074400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00074500
                AIF   (T'&ZCGPR NE 'N').ZG33Q   INVALID REG NAME        00074600
.ZG33P          ANOP  ,                                                 00074700
                AIF   (T'&ZCGPR NE 'N').ZG33R   NON NUMERIC             00074800
                AIF   ('&ZCGPR' LT '1').ZG33Q                           00074900
                AIF   ('&ZCGPR' LE '12').ZG33R                          00075000
.ZG33Q          ANOP  ,                                                 00075100
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00075200
&ZMS            SETC  '&ZMS.&MF"'                                       00075300
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00075400
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00075500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075600
.ZG33R          ANOP  ,                                                 00075700
.*-------------------------------------------------------------------   00075800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00075900
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00076000
.ZG37A   AIF   ('&MF(3)' NE 'COMPLETE').ZG38A                           00076100
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00076200
.*-------------------------------------------------------------------   00076300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00076400
.ZG38A          AIF   (K'&XMFSCK GT 0).ZG38C    KEYWORD                 00076500
                AIF   (K'&MF(3) LE 0).ZG38B                             00076600
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00076700
&ZMS            SETC  '&ZMS.&MF"'                                       00076800
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00076900
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00077000
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00077100
                MNOTE 8,' &ZMS '                                        00077200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077300
.ZG38B          ANOP  ,                                                 00077400
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00077500
.ZG38C          ANOP  ,                                                 00077600
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00077700
.*------------------------------------------------------------------    00077800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077900
.ZG39           ANOP  ,                                                 00078000
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00078100
                AIF   (K'&XMF GT 0).ZG39E       VALID ARG               00078200
                AIF   (T'&MF EQ 'O').ZG39D      OMITTED                 00078300
&ZASYSLNDX      SETA  0                                                 00078400
.ZG39A          ANOP  ,           POSITIONAL MACRO KEY                  00078500
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00078600
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C                  00078700
&ZTLC           SETC 'MF'                                               00078800
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A         00078900
.ZG39B          ANOP  ,                                                 00079000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00079100
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00079200
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00079300
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00079400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079500
                AGO   .ZG39E                                            00079600
.ZG39C          ANOP  ,                                                 00079700
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00079800
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00079900
&ZMS            SETC  '&ZMS.&MF"'                                       00080000
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00080100
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00080200
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00080300
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00080400
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00080500
                MNOTE 8,' &ZMS '                                        00080600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080700
                AGO   .ZG39E                                            00080800
.ZG39D          ANOP  ,                                                 00080900
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00081000
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00081100
.ZG39E          ANOP  ,                                                 00081200
.********************************************************************   00081300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00081400
.********************************************************************   00081500
                ACTR  10000                                             00081600
.*-------------------------------------------------------------------   00081700
.***AG.MF03 MF=(SLE)                                                    00081800
                AIF   ('&XMF' EQ 'L').ZGMFX                             00081900
.*----------------------------------------------------------------***   00082000
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00082100
&XDUMME0A       SETC  ''          INITIALIZE XVARIABLE                  00082200
                AIF   (K'&MBOXNAME LE 0).ZG2C                           00082300
&ZXDUMME0A      SETC  'INPUT'     SET IN/OUTPUT                         00082400
&XDUMME0A       SETC  'MBOXNAME'  SET XVARIABLE                         00082500
&ZXMBOXNAME     SETC  'INPUT'     SET IN/OUTPUT                         00082600
&XMBOXNAME      SETC  '&MBOXNAME(1)'            SET XVARIABLE PARM      00082700
                AIF   (N'&MBOXNAME GT 1).ZG2A   MULTIPLE PARMS          00082800
&XMBOXNAME      SETC  '&MBOXNAME'               SET XVARIABLE PARM      00082900
.ZG2A           AIF   (N'&MBOXNAME LE 1).ZG2B   CK NUM                  00083000
&ZMS            SETC  '"MBOXNAME='              *KPOSA* MNOTE           00083100
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00083200
&ZMS            SETC  '&ZMS "MBOXNAME"'                                 00083300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00083400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083500
.ZG2B           AIF   (K'&XMBOXNAME GT 0).ZG2C  ONE PARM                00083600
&ZXDUMME0A      SETC  ''          RESET IN/OUTPUT                       00083700
&ZXMBOXNAME     SETC  ''          RESET IN/OUTPUT                       00083800
&ZMS            SETC  ' '         *KRQDA*                               00083900
&ZMS            SETC  '&ZMS "MBOXNAME" KEY AND ITS ARGUMENT'            00084000
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00084100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084200
.ZG2C           ANOP  ,                                                 00084300
.*------------------------------------------------------------------    00084400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00084500
                AIF   (K'&XDUMME0A GT 0).ZG3B                           00084600
&ZXDUMME0A      SETC  ''          RESET IN/OUTPUT                       00084700
&ZXMBOXNAME     SETC  ''          RESET IN/OUTPUT                       00084800
&XDUMME0A       SETC  ''          ENSURE NULL                           00084900
&XMBOXNAME      SETC  ''          ENSURE NULL                           00085000
&ZMS            SETC  'ONE OF THE FOLLOWING'    *KMERA* MNOTE           00085100
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00085200
&ZMS            SETC  '&ZMS REQUIRED:'                                  00085300
&ZMS            SETC  '&ZMS "MBOXNAME".'        VALID ME KEY            00085400
                MNOTE 8,' &ZMS '                                        00085500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00085600
.ZG3B           ANOP  ,                                                 00085700
.*-------------------------------------------------------------------   00085800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00085900
.ZG2            AIF   ('&XDUMME0A' NE 'MBOXNAME').ZG3                   00086000
.*-------------------------------------------------------------------   00086100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00086200
                AIF   (K'&ZXMBOXNAME LE 0).ZG2R  NOT I/O                00086300
                AIF   ('&XMBOXNAME'(1,1) NE '(').ZG2R                   00086400
&ZCGPR          SETC  '&XMBOXNAME'(2,K'&XMBOXNAME-2)                    00086500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00086600
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00086700
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00086800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00086900
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00087000
.ZG2P           ANOP  ,                                                 00087100
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00087200
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00087300
                AIF   ('&ZCGPR' LE '12').ZG2R                           00087400
.ZG2Q           ANOP  ,                                                 00087500
&ZMS            SETC  '"MBOXNAME='              *KGPRA* MNOTE           00087600
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00087700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00087800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00087900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00088000
.ZG2R           ANOP  ,                                                 00088100
.*-------------------------------------------------------------------   00088200
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00088300
.ZG3            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS           00088400
.*----------------------------------------------------------------***   00088500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00088600
                AIF   (N'&GROUPTOKEN LE 1).ZG5A  CK NUM                 00088700
&ZMS            SETC  '"GROUPTOKEN='            *KPOSA* MNOTE           00088800
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00088900
&ZMS            SETC  '&ZMS "GROUPTOKEN"'                               00089000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00089100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00089200
.ZG5A           ANOP  ,                                                 00089300
.*-------------------------------------------------------------------   00089400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00089500
&ZXGROUPTOKEN   SETC  'INPUT'     SET IN/OUTPUT                         00089600
&XGROUPTOKEN    SETC  '&GROUPTOKEN(1)'          SET XVARIABLE           00089700
                AIF   (N'&GROUPTOKEN GT 1).ZG5B  MULTI PARMS            00089800
&XGROUPTOKEN    SETC  '&GROUPTOKEN'             SET XVARIABLE           00089900
.ZG5B           AIF   (K'&GROUPTOKEN(1) GT 0).ZG5C                      00090000
&ZXGROUPTOKEN   SETC  ''          RESET IN/OUTPUT                       00090100
&ZMS            SETC  ' '         *KRQDA*                               00090200
&ZMS            SETC  '&ZMS "GROUPTOKEN" KEY AND ITS ARGUMENT'          00090300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00090400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090500
.ZG5C           ANOP  ,                                                 00090600
.*-------------------------------------------------------------------   00090700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00090800
                AIF   (K'&ZXGROUPTOKEN LE 0).ZG5R  NOT I/O              00090900
                AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZG5R                 00091000
&ZCGPR          SETC  '&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2)                00091100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00091200
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00091300
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00091400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00091500
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00091600
.ZG5P           ANOP  ,                                                 00091700
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00091800
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00091900
                AIF   ('&ZCGPR' LE '12').ZG5R                           00092000
.ZG5Q           ANOP  ,                                                 00092100
&ZMS            SETC  '"GROUPTOKEN='            *KGPRA* MNOTE           00092200
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00092300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00092400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00092500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092600
.ZG5R           ANOP  ,                                                 00092700
.*----------------------------------------------------------------***   00092800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092900
                AIF   (N'&STB LE 1).ZG8A        CK NUM                  00093000
&ZMS            SETC  '"STB='     *KPOSA* MNOTE                         00093100
&ZMS            SETC  '&ZMS.&STB"'                                      00093200
&ZMS            SETC  '&ZMS "STB"'                                      00093300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00093400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00093500
.ZG8A           ANOP  ,                                                 00093600
.*-------------------------------------------------------------------   00093700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00093800
&XSTB           SETC  ''          INITIALIZE XVARIABLE                  00093900
.ZG9A   AIF   ('&STB(1)' NE 'NO').ZG10A                                 00094000
&XSTB           SETC  'NO'        SET KEYWORD                           00094100
.*-------------------------------------------------------------------   00094200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00094300
.ZG10A   AIF   ('&STB(1)' NE 'YES').ZG11A                               00094400
&XSTB           SETC  'YES'       SET KEYWORD                           00094500
.*-------------------------------------------------------------------   00094600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00094700
.ZG11A          AIF   (K'&XSTB GT 0).ZG11C      KEYWORD                 00094800
                AIF   (K'&STB(1) LE 0).ZG11B                            00094900
&ZMS            SETC  '"STB='     *KUKWA* MNOTE                         00095000
&ZMS            SETC  '&ZMS.&STB"'                                      00095100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00095200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00095300
&ZMS            SETC  '&ZMS "NO"'               VALID KEYWORD           00095400
&ZMS            SETC  '&ZMS OR "YES".'          VALID KEYWORD           00095500
                MNOTE 8,' &ZMS '                                        00095600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095700
.ZG11B          ANOP  ,                                                 00095800
&XSTB           SETC  'NO'        SET DEFAULT KEYWORD                   00095900
.ZG11C          ANOP  ,                                                 00096000
&ZXSTB          SETC  'INPUT'     SET IN/OUTPUT                         00096100
.*----------------------------------------------------------------***   00096200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096300
                AIF   (N'&RTNCODE LE 1).ZG13A   CK NUM                  00096400
&ZMS            SETC  '"RTNCODE='               *KPOSA* MNOTE           00096500
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00096600
&ZMS            SETC  '&ZMS "RTNCODE"'                                  00096700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00096800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00096900
.ZG13A          ANOP  ,                                                 00097000
.*-------------------------------------------------------------------   00097100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097200
                AIF   (K'&RTNCODE(1) LE 0).ZG13C  NO PARM               00097300
&ZXRTNCODE      SETC  'OUTPUT'    SET OUTPUT                            00097400
&XRTNCODE       SETC  '&RTNCODE(1)'             SET XVARIABLE           00097500
                AIF   (N'&RTNCODE GT 1).ZG13C                           00097600
&XRTNCODE       SETC  '&RTNCODE'  SET XVARIABLE                         00097700
.ZG13C          ANOP  ,                                                 00097800
.*-------------------------------------------------------------------   00097900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00098000
                AIF   (K'&ZXRTNCODE LE 0).ZG13R  NOT I/O                00098100
                AIF   ('&XRTNCODE'(1,1) NE '(').ZG13R                   00098200
&ZCGPR          SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                      00098300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                      00098400
                AIF   (K'&ZCGPR GT 2).ZG13Q                             00098500
                AIF   ('&ZCGPR' EQ '0').ZG13Q                           00098600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00098700
                AIF   (T'&ZCGPR NE 'N').ZG13Q   INVALID REG NAME        00098800
.ZG13P          ANOP  ,                                                 00098900
                AIF   (T'&ZCGPR NE 'N').ZG13R   NON NUMERIC             00099000
                AIF   ('&ZCGPR' LT '2').ZG13Q                           00099100
                AIF   ('&ZCGPR' LE '12').ZG13R                          00099200
.ZG13Q          ANOP  ,                                                 00099300
&ZMS            SETC  '"RTNCODE='               *KGPRA* MNOTE           00099400
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00099500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00099600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00099700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099800
.ZG13R          ANOP  ,                                                 00099900
.*----------------------------------------------------------------***   00100000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00100100
                AIF   (N'&RSNCODE LE 1).ZG16A   CK NUM                  00100200
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00100300
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00100400
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00100500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00100600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00100700
.ZG16A          ANOP  ,                                                 00100800
.*-------------------------------------------------------------------   00100900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00101000
                AIF   (K'&RSNCODE(1) LE 0).ZG16C  NO PARM               00101100
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00101200
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00101300
                AIF   (N'&RSNCODE GT 1).ZG16C                           00101400
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00101500
.ZG16C          ANOP  ,                                                 00101600
.*-------------------------------------------------------------------   00101700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00101800
                AIF   (K'&ZXRSNCODE LE 0).ZG16R  NOT I/O                00101900
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG16R                   00102000
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00102100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                      00102200
                AIF   (K'&ZCGPR GT 2).ZG16Q                             00102300
                AIF   ('&ZCGPR' EQ '0').ZG16Q                           00102400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00102500
                AIF   (T'&ZCGPR NE 'N').ZG16Q   INVALID REG NAME        00102600
.ZG16P          ANOP  ,                                                 00102700
                AIF   (T'&ZCGPR NE 'N').ZG16R   NON NUMERIC             00102800
                AIF   ('&ZCGPR' LT '2').ZG16Q                           00102900
                AIF   ('&ZCGPR' LE '12').ZG16R                          00103000
.ZG16Q          ANOP  ,                                                 00103100
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00103200
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00103300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00103400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00103500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103600
.ZG16R          ANOP  ,                                                 00103700
.******************************************************************     00103800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00103900
.******************************************************************     00104000
                ACTR  10000                                             00104100
.*----------------------------------------------------------------***   00104200
.***AH.P02 EXTRA POSITIONALS                                            00104300
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00104400
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00104500
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00104600
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00104700
.ZGLISTX1       ANOP  ,                                                 00104800
&ZCVAL          SETC  ''          ERROR FIELD                           00104900
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00105000
.ZGLIST2        ANOP  ,                                                 00105100
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00105200
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00105300
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00105400
                AGO   .ZGLIST2                                          00105500
.*                                                                      00105600
.ZGLIST3        ANOP  ,                                                 00105700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00105800
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00105900
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00106000
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00106100
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00106200
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00106300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106400
.ZGLISTX        ANOP  ,                                                 00106500
&ZASYSLNDX      SETA  0                                                 00106600
.*-------------------------------------------------------------------   00106700
.***AG.MF04 MF=(SLE)                                                    00106800
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00106900
.*******************************************************************    00107000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00107100
.*******************************************************************    00107200
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00107300
.*******************************************************************    00107400
.***AE.01  START OF IXZXIXMC MACRO CODE                                 00107500
.*******************************************************************    00107600
                LCLC  &M0M0001                 NAME                     00107700
&M0M0001        SETC  '&XLABEL'                SET NAME                 00107800
                AIF   (K'&XLABEL NE 0).XLAB2                            00107900
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00108000
.*                                                                      00108100
.XLAB2          ANOP  ,                                                 00108200
&M0M0001 DS    0H                             IXZXIXMC-1                00108300
.*******************************************************************    00108400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00108500
.*******************************************************************    00108600
              PUSH  PRINT                                               00108700
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00108800
                PRINT OFF         ++ PR01                               00108900
                AGO   .ZPRNTXX                                          00109000
.ZPRINTX        PRINT ON                                                00109100
.ZPRNTXX        ANOP  ,                                                 00109200
.********************************************************************   00109300
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00109400
.********************************************************************   00109500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00109600
                      LCLA  &ZOPN1         INVOCATION INDEX             00109700
                      LCLC  &ZOPL(4095)    LABEL                        00109800
                      LCLC  &ZOPO(4095)    OPERATION                    00109900
                      LCLC  &ZOPV(4095)    VALUE                        00110000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00110100
.*                                                                      00110200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00110300
.******************************************************************     00110400
.***AL.L10 IXZXIXMC FMT=LIST MF=S|L PARAMETERS                          00110500
.******************************************************************     00110600
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00110700
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00110800
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00110900
&XMFATTR              SETC  '0D'                                        00111000
.*                                                                      00111100
&ZOPN                 SETA  &ZOPN+1                                     00111200
&ZOPL(&ZOPN)          SETC  ' '                                         00111300
&ZOPO(&ZOPN)          SETC  'B'                                         00111400
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00111500
&ZOPD(&ZOPN)          SETC  '++ IXZXIXMC ARG PARMS'                     00111600
.*                                                                      00111700
&ZOPN                 SETA  &ZOPN+1                                     00111800
&ZOPL(&ZOPN)          SETC  ' '                                         00111900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00112000
&ZOPV(&ZOPN)          SETC  '1'                                         00112100
&ZOPD(&ZOPN)          SETC  ' '                                         00112200
.*                                                                      00112300
.ZLMFSL2              ANOP  ,                                           00112400
.*-------------------------------------------------------------------   00112500
.***AM.L01  IXZXIXMC FMT=LIST PARAMETERS                                00112600
&ZOPN                 SETA &ZOPN+1                                      00112700
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00112800
&ZOPO(&ZOPN)          SETC 'DS'                                         00112900
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00113000
&ZOPD(&ZOPN)          SETC '++ IXZXIXMC PARM LIST'                      00113100
.*-------------------------------------------------------------------   00113200
.***AM.L02 XVERSION XL1                                                 00113300
&ZOPN                 SETA &ZOPN+1                                      00113400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00113500
&ZOPO(&ZOPN)          SETC 'DS'                                         00113600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00113700
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00113800
.*-------------------------------------------------------------------   00113900
.***AM.L09  XEYECATCH CL6                                               00114000
&ZOPN                 SETA &ZOPN+1                                      00114100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEYECATCH'                        00114200
&ZOPO(&ZOPN)          SETC 'DS'                                         00114300
&ZOPV(&ZOPN)          SETC 'CL6'                                        00114400
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XEYECATCH'                     00114500
.*-------------------------------------------------------------------   00114600
.***AM.L03 XSTB BL.8                                                    00114700
&ZOPN                 SETA &ZOPN+1                                      00114800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTB'                             00114900
&ZOPO(&ZOPN)          SETC 'DS'                                         00115000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00115100
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00115200
.*                                                                      00115300
&ZOPN                 SETA  &ZOPN+1                                     00115400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTB_NO'                         00115500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00115600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00115700
&ZOPD(&ZOPN)          SETC  '++ XSTB.'                                  00115800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00115900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00116000
.*                                                                      00116100
&ZOPN                 SETA  &ZOPN+1                                     00116200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTB_YES'                        00116300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00116400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00116500
&ZOPD(&ZOPN)          SETC  '++ XSTB.'                                  00116600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00116700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00116800
.*-------------------------------------------------------------------   00116900
.***AM.L09  XMBOXNAME CL16                                              00117000
&ZOPN                 SETA &ZOPN+1                                      00117100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMBOXNAME'                        00117200
&ZOPO(&ZOPN)          SETC 'DS'                                         00117300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00117400
&ZOPD(&ZOPN)          SETC '++ &ZXMBOXNAME  XMBOXNAME'                  00117500
.*-------------------------------------------------------------------   00117600
.***AM.L09  XGROUPTOKEN F                                               00117700
&ZOPN                 SETA &ZOPN+1                                      00117800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPTOKEN'                      00117900
&ZOPO(&ZOPN)          SETC 'DS'                                         00118000
&ZOPV(&ZOPN)          SETC 'F'                                          00118100
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPTOKEN  XGROUPTOKEN'              00118200
.*-------------------------------------------------------------------   00118300
.***AM.L10 END OF IXZXIXMC LIST PARAMETERS                              00118400
&ZOPN                 SETA &ZOPN+1                                      00118500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00118600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00118700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00118800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00118900
.*                                                                      00119000
&ZOPN                 SETA &ZOPN+1                                      00119100
&ZOPL(&ZOPN)          SETC ' '                                          00119200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00119300
&ZOPV(&ZOPN)          SETC '1'                                          00119400
&ZOPD(&ZOPN)          SETC ' '                                          00119500
.*-------------------------------------------------------------------   00119600
.***AL.L12 IXZXIXMC FMT=LIST MF=S|L PARAMETERS                          00119700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00119800
.*                                                                      00119900
&ZOPN                 SETA  &ZOPN+1                                     00120000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00120100
&ZOPO(&ZOPN)          SETC  'DC'                                        00120200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00120300
&ZOPD(&ZOPN)          SETC  '++ IXZXIXMC ARG PARMS'                     00120400
.*                                                                      00120500
.ZLMFSLX              ANOP  ,                                           00120600
.*-------------------------------------------------------------------   00120700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00120800
&ZPLLEN               SETA 28                                           00120900
.*                                                                      00121000
.******************************************************************     00121100
.***AI.L01 IXZXIXMC FMT=LIST FILL IN PARAMETER AREA                     00121200
.******************************************************************     00121300
                      ACTR  10000                                       00121400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00121500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00121600
&ZCVAL                SETC  'LAE'          XAX MODE                     00121700
.ZIMFXA               ANOP ,                                            00121800
.*                                                                      00121900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00122000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00122100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00122200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00122300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00122400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00122500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00122600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00122700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00122800
&ZOPN                 SETA  &ZOPN+1                                     00122900
&ZOPL(&ZOPN)          SETC  ' '                                         00123000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00123100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00123200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00123300
                      AGO   .ZIMFNX                                     00123400
.*                                                                      00123500
.ZIMFN2               ANOP ,                                            00123600
&ZOPN                 SETA  &ZOPN+1                                     00123700
&ZOPL(&ZOPN)          SETC  ' '                                         00123800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00123900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00124000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00124100
.ZIMFNX               ANOP ,                                            00124200
.********************************************************************   00124300
.***AI.L02 IXZXIXMC FMT=LIST INITIALIZE PARAMETER AREA                  00124400
.********************************************************************   00124500
.***AI.L03 MF=(SLE)                                                     00124600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00124700
.*                                                                      00124800
&ZOPN                 SETA  &ZOPN+1                                     00124900
&ZOPL(&ZOPN)          SETC  ' '                                         00125000
&ZOPO(&ZOPN)          SETC  'XC'                                        00125100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00125200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00125300
.ZIMFLX               ANOP  ,                                           00125400
.*-------------------------------------------------------------------   00125500
.***AI.L04B XVERSION XL1                                                00125600
                      AIF   (&XPLISTVER EQ 0).ZIMFVX                    00125700
&ZOPN                 SETA  &ZOPN+1                                     00125800
&ZOPL(&ZOPN)          SETC  ' '                                         00125900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00126000
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00126100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00126200
.ZIMFVX               ANOP  ,                                           00126300
.*-------------------------------------------------------------------   00126400
.***AI.L60 XEYECATCH CL6                                                00126500
&ZOPN                 SETA  &ZOPN+1                                     00126600
&ZOPL(&ZOPN)          SETC  ' '                                         00126700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00126800
&ZOPV(&ZOPN)          SETC  '1(6,1),=CL6''YIXMC '''                     00126900
&ZOPD(&ZOPN)          SETC  '++ CL6 CONSTANT'                           00127000
.*-------------------------------------------------------------------   00127100
.***AI.L05 XSTB BL1                                                     00127200
&ZW                   SETC  ''                                          00127300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00127400
.*-------------------------------------------------------------------   00127500
.***AI.L08 XSTB "NO"                                                    00127600
.***      BL1'1XXXXXXX'                                                 00127700
         AIF   ('&XSTB' NE 'NO').ZI4A                                   00127800
&ZW                   SETC  '&ZW.1'                                     00127900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00128000
                      AGO   .ZI4C                                       00128100
.*                                                                      00128200
.ZI4A                 ANOP  ,                                           00128300
&ZW                   SETC  '&ZW.0'                                     00128400
.ZI4C                 ANOP  ,                                           00128500
.*-------------------------------------------------------------------   00128600
.***AI.L08 XSTB "YES"                                                   00128700
.***      BL1'X1XXXXXX'                                                 00128800
         AIF   ('&XSTB' NE 'YES').ZI5A                                  00128900
&ZW                   SETC  '&ZW.1000000'                               00129000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00129100
                      AGO   .ZI5C                                       00129200
.*                                                                      00129300
.ZI5A                 ANOP  ,                                           00129400
&ZW                   SETC  '&ZW.0000000'                               00129500
.ZI5C                 ANOP  ,                                           00129600
.*-------------------------------------------------------------------   00129700
.***AI.L11 XSTB BL1                                                     00129800
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00129900
&ZOPN                 SETA  &ZOPN+1                                     00130000
&ZOPL(&ZOPN)          SETC  ' '                                         00130100
&ZOPO(&ZOPN)          SETC  'OI'                                        00130200
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00130300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00130400
.ZI5E                 ANOP  ,                                           00130500
.*-------------------------------------------------------------------   00130600
.***AI.L25  XMBOXNAME CL16                                              00130700
                      AIF   ('&ZXMBOXNAME' EQ '').ZI6E                  00130800
                      AIF   ('&ZXMBOXNAME' EQ 'OUTPUT').ZI6E            00130900
&ZCGPR                SETC  '&XMBOXNAME'                                00131000
.*                                                                      00131100
                      AIF   ('&XMBOXNAME'(1,1) NE '(').ZI6B             00131200
&ZCGPR   SETC  '0('.'&XMBOXNAME'(2,K'&XMBOXNAME-2).')'                  00131300
.ZI6B                 ANOP  ,                                           00131400
.*                                                                      00131500
&ZOPN                 SETA  &ZOPN+1                                     00131600
&ZOPL(&ZOPN)          SETC  ' '                                         00131700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00131800
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00131900
&ZOPD(&ZOPN)          SETC  '++ &ZXMBOXNAME XMBOXNAME'                  00132000
.*                                                                      00132100
.ZI6E                 ANOP  ,                                           00132200
.*-------------------------------------------------------------------   00132300
.***AI.L25  XGROUPTOKEN F                                               00132400
                      AIF   ('&ZXGROUPTOKEN' EQ '').ZI7E                00132500
                      AIF   ('&ZXGROUPTOKEN' EQ 'OUTPUT').ZI7E          00132600
&ZCGPR                SETC  '&XGROUPTOKEN'                              00132700
.*                                                                      00132800
                      AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZI7B           00132900
&ZCGPR   SETC  '0('.'&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2).')'              00133000
                      AGO   .ZI7D                                       00133100
.ZI7B                 ANOP  ,                                           00133200
.*                                                                      00133300
&ZC                   SETC  '&XGROUPTOKEN'(1,1)                         00133400
                      AIF   (T'&ZC NE 'N').ZI7D                         00133500
&ZC                   SETC  '&XGROUPTOKEN'                              00133600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00133700
&ZCGPR                SETC  '=FL4''&XGROUPTOKEN'''                      00133800
.*                                                                      00133900
.ZI7D                 ANOP  ,                                           00134000
.*                                                                      00134100
&ZOPN                 SETA  &ZOPN+1                                     00134200
&ZOPL(&ZOPN)          SETC  ' '                                         00134300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00134400
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00134500
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPTOKEN XGROUPTOKEN'              00134600
.*                                                                      00134700
.ZI7E                 ANOP  ,                                           00134800
.*-------------------------------------------------------------------   00134900
&ZOPN1                SETA &ZOPN                                        00135000
.*******************************************************************    00135100
.***  PROCESS IXZXIXMC OUTPUT PARAMETERS                                00135200
.*******************************************************************    00135300
                      ACTR  10000                                       00135400
.*******************************************************************    00135500
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00135600
.*******************************************************************    00135700
&ZOPN                 SETA  &ZOPN+1                                     00135800
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00135900
&ZOPO(&ZOPN)          SETC  'DS'                                        00136000
&ZOPV(&ZOPN)          SETC  '0H'                                        00136100
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00136200
.*******************************************************************    00136300
.***AO.X02  RETURN CODE PROCESSING                                      00136400
.*******************************************************************    00136500
                      AIF   (N'&RTNCODE LE 0).ZMRETX                    00136600
                      AIF   ('&XRTNCODE'(1,1) EQ '(').ZMRET2            00136700
                      AIF   ('&XRTNCODE' EQ 'GPR15').ZMRETX             00136800
                      AIF   ('&XRTNCODE' EQ 'REG15').ZMRETX             00136900
                      AIF   ('&XRTNCODE' EQ 'R15').ZMRETX               00137000
                      AIF   ('&XRTNCODE' EQ '15').ZMRETX                00137100
&ZOPN                 SETA  &ZOPN+1                                     00137200
&ZOPL(&ZOPN)          SETC  ' '                                         00137300
&ZOPO(&ZOPN)          SETC  'ST'                                        00137400
&ZOPV(&ZOPN)          SETC  '15,&XRTNCODE'                              00137500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00137600
                      AGO   .ZMRETX                                     00137700
.*                                                                      00137800
.ZMRET2               ANOP  ,                                           00137900
&ZCGPR                SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                00138000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00138100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00138200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00138300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00138400
&ZOPN                 SETA  &ZOPN+1                                     00138500
&ZOPL(&ZOPN)          SETC  ' '                                         00138600
&ZOPO(&ZOPN)          SETC  'LR'                                        00138700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00138800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00138900
.ZMRETX               ANOP  ,                                           00139000
.*******************************************************************    00139100
.***AO.X03  REASON CODE PROCESSING                                      00139200
.*******************************************************************    00139300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00139400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00139500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00139600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00139700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00139800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00139900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00140000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00140100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00140200
&ZOPN                 SETA  &ZOPN+1                                     00140300
&ZOPL(&ZOPN)          SETC  ' '                                         00140400
&ZOPO(&ZOPN)          SETC  'ST'                                        00140500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00140600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00140700
                      AGO   .ZMRSNX                                     00140800
.*                                                                      00140900
.ZMRSN2               ANOP  ,                                           00141000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00141100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00141200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00141300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00141400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00141500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00141600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00141700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00141800
&ZOPN                 SETA  &ZOPN+1                                     00141900
&ZOPL(&ZOPN)          SETC  ' '                                         00142000
&ZOPO(&ZOPN)          SETC  'LR'                                        00142100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00142200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00142300
.ZMRSNX               ANOP  ,                                           00142400
.*******************************************************************    00142500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00142600
.*******************************************************************    00142700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00142800
.*******************************************************************    00142900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00143000
.*******************************************************************    00143100
                      ACTR  10000                                       00143200
.*                                                                      00143300
                      LCLA  &ZLC           COLUMN POSITION              00143400
                      LCLA  &ZOPX          LIST TABLE INDEX             00143500
                      LCLC  &ZLL           LABEL                        00143600
                      LCLC  &ZLOP          OPERATION                    00143700
                      LCLC  &ZLV           VALUE                        00143800
                      LCLC  &ZLD           DESCRIPTION                  00143900
.*                                                                      00144000
&ZOPX                 SETA  1                                           00144100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00144200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00144300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00144400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00144500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00144600
                      AIF   (K'&ZLD LE 0).ZL5                           00144700
&ZLC                  SETA  35             COMMENT COLUMN               00144800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00144900
&ZLC                  SETA  33             COMMMENT COLUMN              00145000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00145100
&ZLV                  SETC  '&ZLV'.' '                                  00145200
                      AGO   .ZL3                                        00145300
.*                                                                      00145400
.ZL4                  ANOP  ,                                           00145500
&ZLV                  SETC  '&ZLV'.' '                                  00145600
.ZL5                  ANOP  ,                                           00145700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00145800
.*                                                                      00145900
&ZLL     &ZLOP &ZLV                                                     00146000
.*                                                                      00146100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00146200
                      AGO   .ZL2           CONTINUE LOOPING             00146300
.*                                                                      00146400
.ZLX                  ANOP  ,                                           00146500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00146600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00146700
         GBLC  &ANVIRON           JES2 environment variable             00146800
         GBLB  &J3MN              JES3 Main Task environment            00146900
         GBLB  &J3ST              JES3 Subtask environment              00147000
         GBLB  &J3FSS             JES3 FSS environment                  00147100
         GBLB  &J3USR             JES3 User environment                 00147200
         GBLB  &JSXCF             JESXCF environment                    00147300
         AIF   ('&ANVIRON' EQ 'JES2').IXMC050  JES2 Main task           00147400
         AIF   ('&ANVIRON' EQ 'SUBTASK').IXMC050 JES2 Subtask           00147500
         AIF   (&J3MN).IXMC050    Are we running under JES3 Main task   00147600
         AIF   (&J3ST).IXMC050    Are we running under JES3 Sub task    00147700
         AIF   (&J3FSS).IXMC050   Are we running under JES3 FSS         00147800
         MNOTE 8,'IXZ0001 Running in an invalid environment'            00147900
.IXMC050 ANOP                                                           00148000
         AIF   ('&GROUPTOKEN'(1,1) NE '(').IXMC100                      00148100
         LR    14,&GROUPTOKEN     Load the address of the group token   00148200
         L     14,0(14)           Load the group token                  00148300
         AGO   .IXMC150                                                 00148400
.IXMC100 ANOP                                                           00148500
         L     14,&GROUPTOKEN     Load the group token                  00148600
.IXMC150 ANOP                                                           00148700
         L     14,44(14)          Load the PC number of the             00148800
*                                 routine to be called                  00148900
         PC    0(14)              Call the mailbox clear routine        00149000
         AIF   ('&XMFCTRL'(1,1) NE '(').IXMC200                         00149100
         LR    1,&XMFCTRL         Restore the parameter list address    00149200
         AGO   .IXMC250                                                 00149300
.IXMC200 ANOP                                                           00149400
         LA    1,&XMFCTRL         Restore the parameter list address    00149500
.IXMC250 ANOP                                                           00149600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00149700
.ZLINKX               ANOP  ,                                           00149800
.*******************************************************************    00149900
.***AP.X01  FORMAT GENERATED CODE                                       00150000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00150100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00150200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00150300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00150400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00150500
                      AIF   (K'&ZLD LE 0).ZL51                          00150600
&ZLC                  SETA  35             COMMENT COLUMN               00150700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00150800
&ZLC                  SETA  33             COMMENT COLUMN               00150900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00151000
&ZLV                  SETC  '&ZLV'.' '                                  00151100
                      AGO   .ZL31                                       00151200
.*                                                                      00151300
.ZL41                 ANOP  ,                                           00151400
&ZLV                  SETC  '&ZLV'.' '                                  00151500
.ZL51                 ANOP  ,                                           00151600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00151700
.*                                                                      00151800
&ZLL     &ZLOP &ZLV                                                     00151900
.*                                                                      00152000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00152100
                      AGO   .ZL21          CONTINUE LOOPING             00152200
.*                                                                      00152300
.ZLX1                 ANOP  ,                                           00152400
.*******************************************************************    00152500
.***AP.X02  END OF IXZXIXMC MACRO                                       00152600
&ZIXZXIXMC            SETC  'YES'          SET IXZXIXMC USED            00152700
         POP   PRINT                                                    00152800
*                                            IXZXIXMC-1                 00152900
         SPACE 1                                                        00153000
.ZLX2                 ANOP  ,                                           00153100
         MEND                                                           00153200
**********************************************************************/ 00153300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00153400
*%IXZXIXMC: MACRO KEYS(MBOXNAME,GROUPTOKEN,STB,RTNCODE,RSNCODE,         00153500
*                 PLISTVER,MF);                                         00153600
*  ANS('?'||MACLABEL||' '||'IXZPIXMC '||MACLIST||                       00153700
*         ' '||MACKEYS||';') COL(MACLMAR);                              00153800
*%END IXZXIXMC;                                                         00153900
