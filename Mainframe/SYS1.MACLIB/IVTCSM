*%IVTCSM: MACRO KEYS(REQUEST,BUFLIST,BUFNUM,BUFTYPE,CSMUSER,GAP,        00004300
*                 ERRBFLST,OWNERID,TASKID,THREAD,UTILRTN,SKIPBUF,PAD,   00008600
*                 PADCHAR,SRCERRL,SRCGAP,SRCLIST,SRCNUM,TARGERRL,       00012900
*                 TARGGAP,TARGLIST,TARGNUM,BUFSIZE,BUFSOURC,DS_INFO,    00017200
*                 EXPBUF,INITBUF,MINFREE,RETPTOKN,STATAREA,POOLTOKN,    00021500
*                 WAIT,CLEAR,FREETO,FREERTN,RETCODE,RSNCODE,PLISTVER,   00025800
*                 MF);                                                  00030100
*/**** START OF SPECIFICATIONS **************************************** 00034400
*                                                                     * 00038700
*                                                                     * 00043000
*01* MACRO NAME:  IVTCSM                                -99/09/09-<0> * 00047300
*                                                                     * 00051600
*                                                                     * 00055900
*01* DESCRIPTIVE NAME:  Communications Storage Manager                * 00060200
*                                                                     * 00064500
*01* PROPRIETARY STATEMENT:                                           * 00068800
*                                                                     * 00073100
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00077400
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00081700
*     5694-A01 (C) COPYRIGHT IBM CORP. 1999                           * 00086000
*                                                                     * 00090300
* STATUS= HVT510A                                                     * 00094600
*                                                                     * 00098900
*                                                                     * 00103200
*                                                                     * 00107500
*01* FUNCTION:                                                        * 00111800
*                                                                     * 00116100
*      The IVTCSM macro provides the interface to the Communications  * 00120400
*      Storage Manager.  CSM services allow applications and products * 00124700
*      such as VTAM to share common buffers so that movement of data  * 00129000
*      between buffers is avoided.                                    * 00133300
*                                                                     * 00137600
*                                                                     * 00141900
*      1.  Create a storage pool of buffers residing in ECSA or in a  * 00146200
*          Data Space.                                                * 00150500
*                                                                     * 00154800
*      2.  Get buffers of a pool.                                     * 00159100
*                                                                     * 00163400
*      3.  Free requests for buffers of a pool.                       * 00167700
*                                                                     * 00172000
*      4.  Transfer ownership of buffers of a pool.                   * 00176300
*                                                                     * 00180600
*      5.  Copy data between buffers of any type.                     * 00184900
*                                                                     * 00189200
*      6.  Create a logical image of a buffer.                        * 00193500
*                                                                     * 00197800
*      7.  Provide the address of CSM Resource statistics             * 00202100
*          information.                                               * 00206400
*                                                                     * 00210700
*      8.  Provide the address of information required to dump CSM    * 00215000
*          data space.                                                * 00219300
*                                                                     * 00223600
*                                                                     * 00227900
*                                                                     * 00232200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00236500
*                                                                     * 00240800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00245100
*                                                                     * 00249400
*01* ENVIRONMENT:                                                     * 00253700
*                                                                     * 00258000
*                                                                     * 00262300
*      Dispatchable unit mode: Task or SRB mode.                      * 00266600
*                                                                     * 00270900
*                        Exception: CREATE_POOL and DELETE_POOL       * 00275200
*                        requests must be issued in Task Mode.        * 00279500
*                                                                     * 00283800
*      Minimum authorization: Supervisor state.  Any PSW key.         * 00288100
*                                                                     * 00292400
*      AMODE:            31-bit.                                      * 00296700
*                                                                     * 00301000
*      ASC mode:         Primary.                                     * 00305300
*                                                                     * 00309600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00313900
*                                                                     * 00318200
*      Locks:            No locks held.                               * 00322500
*                                                                     * 00326800
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00331100
*                                                                     * 00335400
*                        CREATE_POOL and DELETE_POOL requests are     * 00339700
*                        PASN=HASN=SASN only.                         * 00344000
*                                                                     * 00348300
*      Control parameters: Control parameters must be in the primary  * 00352600
*                        address space.                               * 00356900
*                                                                     * 00361200
*                                                                     * 00365500
*                                                                     * 00369800
*01* PROGRAMMING REQUIREMENTS:                                        * 00374100
*                                                                     * 00378400
*    The user must provide a recovery environment if one is necessary * 00382700
*    during the invocation of the IVTCSM Service, as the service does * 00387000
*    not provide a recovery environment during all its functions.     * 00391300
*                                                                     * 00395600
*    The service does provide for buffer reclamation at               * 00399900
*    end-of-memory, end-of-Job-Step-Task, if not an MVS started task, * 00404200
*    and, optionally, at abnormal end-of-task.                        * 00408500
*                                                                     * 00412800
*01* RESTRICTIONS:                                                    * 00417100
*                                                                     * 00421400
*                                                                     * 00425700
*    o   Do not use MVS page-fix services directly for buffers        * 00430000
*        provided by this service. Establish the BUFTYPE attribute of * 00434300
*        these buffers using CSM service requests.                    * 00438600
*                                                                     * 00442900
*    o   Do not issue ALESERV delete for an ALET returned from CSM.   * 00447200
*                                                                     * 00451500
*                                                                     * 00455800
*                                                                     * 00460100
*01* INPUT REGISTER INFORMATION:                                      * 00464400
*                                                                     * 00468700
*    Before issuing this macro, the caller must ensure that the       * 00473000
*    following general purpose register contain the specified         * 00477300
*    information:                                                     * 00481600
*                                                                     * 00485900
*                                                                     * 00490200
*    REGISTER  CONTENTS                                               * 00494500
*                                                                     * 00498800
*    13        address of a 72-byte standard save area in the primary * 00503100
*              address space                                          * 00507400
*                                                                     * 00511700
*                                                                     * 00516000
*                                                                     * 00520300
*01* OUTPUT REGISTER INFORMATION:                                     * 00524600
*                                                                     * 00528900
*    When control returns to the caller, the general purpose          * 00533200
*    registers contain:                                               * 00537500
*                                                                     * 00541800
*                                                                     * 00546100
*    REGISTER  CONTENTS                                               * 00550400
*                                                                     * 00554700
*    0         error reason code from the requested function          * 00559000
*                                                                     * 00563300
*    1         used as work register by the system                    * 00567600
*                                                                     * 00571900
*    2-13      unchanged                                              * 00576200
*                                                                     * 00580500
*    14        used as work register by the system                    * 00584800
*                                                                     * 00589100
*    15        return code from requested function                    * 00593400
*                                                                     * 00597700
*                                                                     * 00602000
*                                                                     * 00606300
*01* PERFORMANCE IMPLICATIONS:                                        * 00610600
*                                                                     * 00614900
*01* SYNTAX:                                                          * 00619200
*                                                                     * 00623500
*[xlabel]  IVTCSM    REQUEST=ASSIGN_BUFFER                           * 00627800
*                  |     ,BUFLIST=xbuflist                            * 00632100
*                  |     ,BUFNUM=xbufnum                              * 00636400
*                  |    [,BUFTYPE=SAME|PAGEELIG|FIXED]              * 00640700
*                  |    [,CSMUSER=NO|YES]                           * 00645000
*                  |    [,GAP=xgap|0]                               * 00649300
*                  |    [,ERRBFLST=xerrbflst]                         * 00653600
*                  |    [,OWNERID=xownerid|0]                       * 00657900
*                  |    [,TASKID=xtaskid|0]                         * 00662200
*                  |    [,THREAD=xthread|0]                         * 00666500
*                  |    [,UTILRTN=xutilrtn|0]                       * 00670800
*                   ,REQUEST=CHANGE_OWNER                            * 00675100
*                  |     ,BUFLIST=xbuflist                            * 00679400
*                  |     ,BUFNUM=xbufnum                              * 00683700
*                  |    [,CSMUSER=NO|YES]                           * 00688000
*                  |    [,ERRBFLST=xerrbflst]                         * 00692300
*                  |    [,GAP=xgap|0]                               * 00696600
*                  |    [,OWNERID=xownerid|0]                       * 00700900
*                  |    [,SKIPBUF=NO|YES]                           * 00705200
*                  |    [,TASKID=xtaskid|0]                         * 00709500
*                  |    [,THREAD=xthread|0]                         * 00713800
*                  |    [,UTILRTN=xutilrtn|0]                       * 00718100
*                   ,REQUEST=COPY_DATA                               * 00722400
*                  |   [,PAD=NO]                                     * 00726700
*                  |   [,PAD=YES                                     * 00731000
*                  |         ,PADCHAR=xpadchar]                       * 00735300
*                  |    [,SRCERRL=xsrcerrl]                           * 00739600
*                  |    [,SRCGAP=xsrcgap|0]                         * 00743900
*                  |     ,SRCLIST=xsrclist                            * 00748200
*                  |     ,SRCNUM=xsrcnum                              * 00752500
*                  |    [,TARGERRL=xtargerrl]                         * 00756800
*                  |    [,TARGGAP=xtarggap|0]                       * 00761100
*                  |     ,TARGLIST=xtarglist                          * 00765400
*                  |     ,TARGNUM=xtargnum                            * 00769700
*                  |    [,THREAD=xthread|0]                         * 00774000
*                  |    [,UTILRTN=xutilrtn|0]                       * 00778300
*                   ,REQUEST=CREATE_POOL                             * 00782600
*                  |     ,BUFSIZE=xbufsize                            * 00786900
*                  |     ,BUFSOURC=DSPACE|ECSA                      * 00791200
*                  |    [,DS_INFO=xds_info]                           * 00795500
*                  |     ,EXPBUF=xexpbuf                              * 00799800
*                  |     ,INITBUF=xinitbuf                            * 00804100
*                  |     ,MINFREE=xminfree                            * 00808400
*                  |    [,RETPTOKN=xretptokn]                         * 00812700
*                  |    [,STATAREA=xstatarea]                         * 00817000
*                   ,REQUEST=DELETE_POOL                             * 00821300
*                  |     ,POOLTOKN=xpooltokn                          * 00825600
*                   ,REQUEST=DUMP_INFO                               * 00829900
*                  |    [,DS_INFO=xds_info]                           * 00834200
*                   ,REQUEST=FIX_BUFFER                              * 00838500
*                  |     ,BUFLIST=xbuflist                            * 00842800
*                  |     ,BUFNUM=xbufnum                              * 00847100
*                  |    [,ERRBFLST=xerrbflst]                         * 00851400
*                  |    [,GAP=xgap|0]                               * 00855700
*                  |    [,THREAD=xthread|0]                         * 00860000
*                  |    [,UTILRTN=xutilrtn|0]                       * 00864300
*                  |    [,WAIT=NO|YES]                              * 00868600
*                   ,REQUEST=FREE_BUFFER                             * 00872900
*                  |     ,BUFLIST=xbuflist                            * 00877200
*                  |     ,BUFNUM=xbufnum                              * 00881500
*                  |    [,CLEAR=NO|YES]                             * 00885800
*                  |    [,ERRBFLST=xerrbflst]                         * 00890100
*                  |    [,FREETO=USER|CSM]                          * 00894400
*                  |    [,GAP=xgap|0]                               * 00898700
*                  |    [,SKIPBUF=NO|YES]                           * 00903000
*                  |    [,THREAD=xthread|0]                         * 00907300
*                  |    [,UTILRTN=xutilrtn|0]                       * 00911600
*                   ,REQUEST=GET_BUFFER                              * 00915900
*                  |     ,BUFLIST=xbuflist                            * 00920200
*                  |     ,BUFNUM=xbufnum                              * 00924500
*                  |     ,BUFTYPE=PAGEELIG|PAGEABLE|                 * 00928800
*                  |               FIXED                             * 00933100
*                  |    [,CLEAR=NO|YES]                             * 00937400
*                  |    [,CSMUSER=NO|YES]                           * 00941700
*                  |    [,ERRBFLST=xerrbflst]                         * 00946000
*                  |    [,FREERTN=xfreertn|CSM]                     * 00950300
*                  |    [,GAP=xgap|0]                               * 00954600
*                  |    [,OWNERID=xownerid|0]                       * 00958900
*                  |     ,POOLTOKN=xpooltokn                          * 00963200
*                  |    [,TASKID=xtaskid|0]                         * 00967500
*                  |    [,THREAD=xthread|0]                         * 00971800
*                  |    [,UTILRTN=xutilrtn|0]                       * 00976100
*                  |    [,WAIT=NO|YES|EXPAND]                       * 00980400
*                   ,REQUEST=PAGE_BUFFER                             * 00984700
*                  |     ,BUFLIST=xbuflist                            * 00989000
*                  |     ,BUFNUM=xbufnum                              * 00993300
*                  |     ,BUFTYPE=PAGEELIG|PAGEABLE                 * 00997600
*                  |    [,GAP=xgap|0]                               * 01001900
*                  |    [,ERRBFLST=xerrbflst]                         * 01006200
*                  |    [,THREAD=xthread|0]                         * 01010500
*                  |    [,UTILRTN=xutilrtn|0]                       * 01014800
*                   ,REQUEST=RESOURCE_STATS                          * 01019100
*                       [,STATAREA=xstatarea]                         * 01023400
*                   [,RETCODE=xretcode]                               * 01027700
*                   [,RSNCODE=xrsncode]                               * 01032000
*                   [,PLISTVER=xplistver|IMPLIED_VERSION]           * 01036300
*                  [,MF=S]                                           * 01040600
*                  [,MF=(L,xmfctrl,xmfattr|0D)]                    * 01044900
*                  [,MF=(M,xmfctrl,COMPLETE|NOCHECK)]              * 01049200
*                  [,MF=(E,xmfctrl,COMPLETE|NOCHECK)]              * 01053500
*                                                                     * 01057800
*                                                                     * 01062100
*      Where:                                                         * 01066400
*                                                                     * 01070700
*                                                                     * 01075000
*      [xlabel]                                                       * 01079300
*          is an optional symbol, starting in column 1, that is the   * 01083600
*          name on the IVTCSM macro invocation.  The name must        * 01087900
*          conform to the rules for an ordinary assembler language    * 01092200
*          symbol.                                                    * 01096500
*          DEFAULT: No name.                                          * 01100800
*                                                                     * 01105100
*                                                                     * 01109400
*                                                                     * 01113700
*                                                                     * 01118000
*       REQUEST(ASSIGN_BUFFER|CHANGE_OWNER|COPY_DATA|CREATE_POOL|DEL * 01122300
*          ETE_POOL|DUMP_INFO|FIX_BUFFER|FREE_BUFFER|GET_BUFFER|PAGE_ * 01126600
*          BUFFER|RESOURCE_STATS)                                    * 01130900
*          is a required keyword input specifying the type of request * 01135200
*          to the communications storage manager.                     * 01139500
*                                                                     * 01143800
*                                                                     * 01148100
*           REQUEST(ASSIGN_BUFFER)                                    * 01152400
*                                                                     * 01156700
*              PURPOSE                                                * 01161000
*                                                                     * 01165300
*              This macroinstruction allows an application to request * 01169600
*              that a buffer be logically assigned to another owner   * 01173900
*              (shared) in order to make multiple owners of a buffer. * 01178200
*                                                                     * 01182500
*              USAGE                                                  * 01186800
*                                                                     * 01191100
*              This macroinstruction allows a buffer to be            * 01195400
*              concurrently shared between multiple users.  A logical * 01199700
*              instance of the buffer is created for each user.  A    * 01204000
*              new physical copy of the buffer is not created.  This  * 01208300
*              function is provided to allow specific areas of the    * 01212600
*              buffer to be allocated to different owners.  This      * 01216900
*              function could be used to allow multiple users to have * 01221200
*              read access to the same data.  No serialization is     * 01225500
*              provided to prevent concurrent updates by users.       * 01229800
*                                                                     * 01234100
*              The application must specify whether the new instance  * 01238400
*              of the buffer is to be guaranteed to be fixed or       * 01242700
*              eligible to be made pageable.                          * 01247000
*                                                                     * 01251300
*              The ownership of the new instance of the buffer is     * 01255600
*              assigned to the requesting address space by default.   * 01259900
*              This can be overridden by specifying the OWNERID       * 01264200
*              parameter.  The OWNERID is the ASID of the address     * 01268500
*              space.  Ownership of a new instance of the buffer may  * 01272800
*              be optionally qualified by specifying a TASKID on the  * 01277100
*              macroinstruction. The TASKID is a TCB address with the * 01281400
*              default being no task association.                     * 01285700
*                                                                     * 01290000
*              A new buffer token is returned representing the new    * 01294300
*              instance of the buffer.  The buffer token is the means * 01298600
*              by which this new instance of the buffer is known to   * 01302900
*              the storage manager.  This token must be used with all * 01307200
*              other requests to the storage manager for the          * 01311500
*              associated buffer instance.                            * 01315800
*                                                                     * 01320100
*              Multiple shared instances of a single buffer can be    * 01324400
*              created by passing a multi-entry buffer list with the  * 01328700
*              same buffer token in each entry.                       * 01333000
*                                                                     * 01337300
*              A request to create a new image of a buffer that is in * 01341600
*              the guaranteed to be pageable state is not permitted.  * 01345900
*              The reason for this restriction is to guarantee that a * 01350200
*              user of a buffer that has multiple images can          * 01354500
*              successfully issue a FIX_BUFFER request if necessary.  * 01358800
*              Fixing a buffer requires that the entire buffer be     * 01363100
*              fixed regardless of the fact that the user may only be * 01367400
*              interested in a piece of the buffer.                   * 01371700
*                                                                     * 01376000
*              RETURN CODES AND REASON CODES.                         * 01380300
*                                                                     * 01384600
*              The following codes can be returned to the application * 01388900
*              on this macroinstruction.                              * 01393200
*                                                                     * 01397500
*                                                                     * 01401800
*              RETURN CODE  MEANING                                   * 01406100
*                                                                     * 01410400
*              0            Request completed successfully            * 01414700
*                                                                     * 01419000
*              4            Request did not complete successfully.    * 01423300
*                           See the following reason codes to         * 01427600
*                           determine the type of error encountered.  * 01431900
*                                                                     * 01436200
*                                                                     * 01440500
*                           REASON CODE  MEANING                      * 01444800
*                                                                     * 01449100
*                           2            Requested function not       * 01453400
*                                        supported at the present     * 01457700
*                                        time, service has not been   * 01462000
*                                        initialized                  * 01466300
*                                                                     * 01470600
*                           7            Invalid buffer token         * 01474900
*                                        specified                    * 01479200
*                                                                     * 01483500
*                           9            Real Storage unavailable to  * 01487800
*                                        provide a fixed buffer, wait * 01492100
*                                        not requested                * 01496400
*                                                                     * 01500700
*                           15           Assign buffer request failed * 01505000
*                                        because the state of the     * 01509300
*                                        buffer is guaranteed to be   * 01513600
*                                        pageable.                    * 01517900
*                                                                     * 01522200
*                           20           BUFTYPE value specified is   * 01526500
*                                        not valid for this request.  * 01530800
*                                                                     * 01535100
*                                                                     * 01539400
*                                                                     * 01543700
*              8            System error while processing the         * 01548000
*                           request.  See the following reason codes  * 01552300
*                           to determine the type of error            * 01556600
*                           encountered.                              * 01560900
*                                                                     * 01565200
*                                                                     * 01569500
*                           REASON CODE  MEANING                      * 01573800
*                                                                     * 01578100
*                           1            Unable to obtain storage for * 01582400
*                                        the request.                 * 01586700
*                                                                     * 01591000
*                           6            An abend occurred while      * 01595300
*                                        processing this request.     * 01599600
*                                                                     * 01603900
*                                                                     * 01608200
*                                                                     * 01612500
*                                                                     * 01616800
*                                                                     * 01621100
*              PARAMETERS                                             * 01625400
*                                                                     * 01629700
*                                                                     * 01634000
*              BUFLIST(xbuflist)                                      * 01638300
*                  is a required input.  It is the name (RS-type) (or * 01642600
*                  address in register (2)-(12) ASM only) of an area  * 01646900
*                  containing a list of buffer entries.  The number   * 01651200
*                  of entries in the list is provided by BUFNUM.  An  * 01655500
*                  entry in the buffer list is mapped by IVTBUFL.     * 01659800
*                  Some of the fields defined in IVTBUFL are required * 01664100
*                  as input and some are set by CSM as output fields. * 01668400
*                  Note that the buffer token representing the new    * 01672700
*                  buffer image is returned in the BUFL_TOKEN field   * 01677000
*                  as output.                                         * 01681300
*                                                                     * 01685600
*                  The following fields in IVTBUFL are required as    * 01689900
*                  input for this request.                            * 01694200
*                                                                     * 01698500
*                                                                     * 01702800
*                  o   BUFL_VERSION                                   * 01707100
*                                                                     * 01711400
*                  o   BUFL_TOKEN                                     * 01715700
*                                                                     * 01720000
*                                                                     * 01724300
*                  The following fields in IVTBUFL are returned as    * 01728600
*                  output by CSM for this request.                    * 01732900
*                                                                     * 01737200
*                                                                     * 01741500
*                  o   BUFL_TYPE                                      * 01745800
*                                                                     * 01750100
*                  o   BUFL_TOKEN                                     * 01754400
*                                                                     * 01758700
*                                                                     * 01763000
*                                                                     * 01767300
*                                                                     * 01771600
*                                                                     * 01775900
*                                                                     * 01780200
*              BUFNUM(xbufnum)                                        * 01784500
*                  is the name (RS-type) (or address in register      * 01788800
*                  (2)-(12) ASM only) of a required fullword input    * 01793100
*                  specifying the number of buffers to be logically   * 01797400
*                  assigned.                                          * 01801700
*                                                                     * 01806000
*                                                                     * 01810300
*                                                                     * 01814600
*                                                                     * 01818900
*              [BUFTYPE(SAME|PAGEELIG|FIXED)]                       * 01823200
*                  is an optional keyword input specifying whether    * 01827500
*                  the buffer images are guaranteed to be fixed,      * 01831800
*                  eligible to be made pageable or have the same      * 01836100
*                  pageable state as the buffers represented by the   * 01840400
*                  input token.                                       * 01844700
*                  DEFAULT: SAME                                      * 01849000
*                                                                     * 01853300
*                                                                     * 01857600
*                  BUFTYPE(SAME)                                      * 01861900
*                      indicates that the pageable state of the       * 01866200
*                      buffer images will be the same as the buffers  * 01870500
*                      represented by the input token.                * 01874800
*                                                                     * 01879100
*                  BUFTYPE(PAGEELIG)                                  * 01883400
*                      indicates that the buffer images are eligible  * 01887700
*                      to be made pageable.                           * 01892000
*                                                                     * 01896300
*                  BUFTYPE(FIXED)                                     * 01900600
*                      indicates that buffer images are guaranteed to * 01904900
*                      be fixed.                                      * 01909200
*                                                                     * 01913500
*                                                                     * 01917800
*                                                                     * 01922100
*                                                                     * 01926400
*                                                                     * 01930700
*                                                                     * 01935000
*              [CSMUSER(NO|YES)]                                    * 01939300
*                  is an optional keyword input specifies that CSM    * 01943600
*                  knows about this user address space. This was      * 01947900
*                  through previous Create Pool, Get Buffer, Assign   * 01952200
*                  Buffer or Change Owner request.  If taskid is      * 01956500
*                  used, CSM knows this user taskid from the previous * 01960800
*                  Create Pool, Get Buffer, Assign Buffer or Change   * 01965100
*                  Owner request.                                     * 01969400
*                  DEFAULT: NO                                        * 01973700
*                                                                     * 01978000
*                                                                     * 01982300
*                  CSMUSER(NO)                                        * 01986600
*                      CSM will set the bit in SMCST_OWNER_BITMAP to  * 01990900
*                      indicate the address space in use. For taskid, * 01995200
*                      CSM will set the bit in SMCST_TASK_BITMAP if   * 01999500
*                      taskid is specified.                           * 02003800
*                                                                     * 02008100
*                  CSMUSER(YES)                                       * 02012400
*                      CSM already knows about this address space or  * 02016700
*                      task. It does not need to update owner or task * 02021000
*                      bitmap. This reduces the path length for CSM   * 02025300
*                      request.                                       * 02029600
*                                                                     * 02033900
*                                                                     * 02038200
*                                                                     * 02042500
*                                                                     * 02046800
*                                                                     * 02051100
*                                                                     * 02055400
*              [GAP(xgap|0)]                                        * 02059700
*                  is the name (RS-type) (or address in register      * 02064000
*                  (2)-(12) ASM only) of an optional fullword input   * 02068300
*                  specifying the number of bytes used to separate    * 02072600
*                  buffer entries.  This parameter allows the buffer  * 02076900
*                  entries to be in discontiguous storage.  If GAP is * 02081200
*                  not specified, buffer entries are contiguous.      * 02085500
*                  DEFAULT: 0.                                        * 02089800
*                                                                     * 02094100
*                                                                     * 02098400
*                                                                     * 02102700
*                                                                     * 02107000
*              [ERRBFLST(xerrbflst)]                                  * 02111300
*                  is the name (RS-type) (or address in register      * 02115600
*                  (2)-(12) ASM only) of an optional fullword output  * 02119900
*                  specifying the number of the last buffer entry     * 02124200
*                  that was successfully processed when an error is   * 02128500
*                  detected during processing of the                  * 02132800
*                  macroinstruction.                                  * 02137100
*                                                                     * 02141400
*                                                                     * 02145700
*                                                                     * 02150000
*                                                                     * 02154300
*              [OWNERID(xownerid|0)]                                * 02158600
*                  is the name (RS-type) (or address in register      * 02162900
*                  (2)-(12) ASM only) of an optional halfword input   * 02167200
*                  specifying the owner to which the buffer image is  * 02171500
*                  to be logically assigned.  If not coded, the ASID  * 02175800
*                  of the issuing application is assigned as the      * 02180100
*                  OWNERID.                                           * 02184400
*                  DEFAULT: 0 indicates that the ASID of the          * 02188700
*                  executing address space is used to determine       * 02193000
*                  ownership.                                         * 02197300
*                                                                     * 02201600
*                                                                     * 02205900
*                                                                     * 02210200
*                                                                     * 02214500
*              [TASKID(xtaskid|0)]                                  * 02218800
*                  is the name (RS-type) (or address in register      * 02223100
*                  (2)-(12) ASM only) of an optional  pointer input   * 02227400
*                  that contains the address of a TCB.  This further  * 02231700
*                  qualifies the ownership of a buffer to a specific  * 02236000
*                  task.  If TASKID is not specified, the buffer is   * 02240300
*                  not associated with a task.                        * 02244600
*                  DEFAULT: 0 indicates that no task association is   * 02248900
*                  done.                                              * 02253200
*                                                                     * 02257500
*                                                                     * 02261800
*                                                                     * 02266100
*                                                                     * 02270400
*              [THREAD(xthread|0)]                                  * 02274700
*                  is the name (RS-type) (or address in register      * 02279000
*                  (2)-(12) ASM only) of an optional 4 character      * 02283300
*                  input specifying a unique identifier that is       * 02287600
*                  placed in the CSM trace entry to correlate trace   * 02291900
*                  records with the application that is requesting    * 02296200
*                  the buffers.  It is the CSM user's responsibility  * 02300500
*                  to ensure that this value is different from the    * 02304800
*                  THREAD value specified by other users of the CSM.  * 02309100
*                  One way this can be achieved is by specifying an   * 02313400
*                  ECSA control block for THREAD.                     * 02317700
*                  DEFAULT: 0 indicates that a unique identifier is   * 02322000
*                  not placed in the CSM trace entry.                 * 02326300
*                                                                     * 02330600
*                                                                     * 02334900
*                                                                     * 02339200
*                                                                     * 02343500
*              [UTILRTN(xutilrtn|0)]                                * 02347800
*                  is the name (RS-type) (or address in register      * 02352100
*                  (2)-(12) ASM only) of an optional fullword input   * 02356400
*                  specifying the return address of the caller of the * 02360700
*                  utility routine.  This parameter is only relevant  * 02365000
*                  to the tracing process.  It should be specified    * 02369300
*                  only if the CSM user requires identification of    * 02373600
*                  the caller of a utility routine in the CSM trace   * 02377900
*                  entry.                                             * 02382200
*                  DEFAULT: 0 indicates that the return address of    * 02386500
*                  the CSM request issuer is placed in the CSM trace  * 02390800
*                  entry.                                             * 02395100
*                                                                     * 02399400
*                                                                     * 02403700
*                                                                     * 02408000
*           REQUEST(CHANGE_OWNER)                                     * 02412300
*                                                                     * 02416600
*              PURPOSE                                                * 02420900
*                                                                     * 02425200
*              This macroinstruction allows the application to change * 02429500
*              the ownership of a buffer to another user.             * 02433800
*                                                                     * 02438100
*              USAGE                                                  * 02442400
*                                                                     * 02446700
*              This macroinstruction is used to change the OWNERID of * 02451000
*              a buffer from the APPL to VTAM on a SEND request and   * 02455300
*              vice versa on a RECEIVE request.  This ownership       * 02459600
*              transfer is handled by VTAM.  If an application needs  * 02463900
*              to transfer ownership of buffers across address        * 02468200
*              spaces, this function must be used.                    * 02472500
*                                                                     * 02476800
*              When this macroinstruction is issued, ownership is     * 02481100
*              assigned to the requesting address space by default.   * 02485400
*              This can be overridden by specifying the OWNERID       * 02489700
*              parameter.  The OWNERID is the ASID of the address     * 02494000
*              space.  Ownership of a buffer may be optionally        * 02498300
*              qualified by specifying the TASKID parameter on the    * 02502600
*              macroinstruction.  The TASKID is a TCB address with    * 02506900
*              the default being no task association.                 * 02511200
*                                                                     * 02515500
*              Ownership of a buffer that has an associated free      * 02519800
*              routine is not actually changed due to an IVTCSM       * 02524100
*              REQUEST=CHANGE_OWNER macroinstruction.  The buffer is  * 02528400
*              actually borrowed.  The original owner of the buffer   * 02532700
*              will be maintained so that the ownership is restored   * 02537000
*              when the buffer is freed.                              * 02541300
*                                                                     * 02545600
*              This service has been designed to allow buffers to be  * 02549900
*              passed between applications and VTAM.  An application  * 02554200
*              may need to use a buffer in multiple address spaces or * 02558500
*              pass it to other system services that might execute in * 02562800
*              a different address space.                             * 02567100
*                                                                     * 02571400
*              Ownership of a buffer must be maintained such that the * 02575700
*              buffer is owned by the current environment using the   * 02580000
*              buffer.  This is necessary since the owner is the      * 02584300
*              basis for reclamation of the buffers should the        * 02588600
*              owner's environment terminate.  If a buffer owned by   * 02592900
*              address space 1 is passed to address space 2 and       * 02597200
*              address space 2 must be able to access the buffer      * 02601500
*              regardless of the existence of address space 1, then   * 02605800
*              the ownership of the buffer must be changed to address * 02610100
*              space 2.  The determination of when the transfer of    * 02614400
*              ownership must take place is the responsibility of the * 02618700
*              user of the buffer that makes the buffer available for * 02623000
*              use in a different address space.  The associated task * 02627300
*              must exist as long as access is required to the        * 02631600
*              buffer.                                                * 02635900
*                                                                     * 02640200
*              For example, consider an application that acquires     * 02644500
*              buffers from CSM and passes the buffers to VTAM on an  * 02648800
*              APPCCMD send request.  Depending on the type of send   * 02653100
*              request, the VTAM processing may execute               * 02657400
*              asynchronously in a different address space. VTAM is   * 02661700
*              responsible for changing the ownership of the buffer   * 02666000
*              to the appropriate address space to ensure that the    * 02670300
*              buffer can be reliably accessed in the processing      * 02674600
*              address space independent of the address space         * 02678900
*              originating the request.                               * 02683200
*                                                                     * 02687500
*              RETURN CODES AND REASON CODES.                         * 02691800
*                                                                     * 02696100
*              The following codes can be returned to the application * 02700400
*              on this macroinstruction.                              * 02704700
*                                                                     * 02709000
*                                                                     * 02713300
*              RETURN CODE  MEANING                                   * 02717600
*                                                                     * 02721900
*              0            Request completed successfully            * 02726200
*                                                                     * 02730500
*              4            Request did not complete successfully.    * 02734800
*                           See the following reason codes to         * 02739100
*                           determine the type of error encountered.  * 02743400
*                                                                     * 02747700
*                                                                     * 02752000
*                           REASON CODE  MEANING                      * 02756300
*                                                                     * 02760600
*                           2            Requested function not       * 02764900
*                                        supported at the present     * 02769200
*                                        time, service has not been   * 02773500
*                                        initialized                  * 02777800
*                                                                     * 02782100
*                           7            Invalid buffer token         * 02786400
*                                        specified                    * 02790700
*                                                                     * 02795000
*                                                                     * 02799300
*                                                                     * 02803600
*                                                                     * 02807900
*                                                                     * 02812200
*              PARAMETERS                                             * 02816500
*                                                                     * 02820800
*                                                                     * 02825100
*              BUFLIST(xbuflist)                                      * 02829400
*                  is a required input.  It is the name (RS-type) (or * 02833700
*                  address in register (2)-(12) ASM only) of an area  * 02838000
*                  containing a list of buffer entries.  The number   * 02842300
*                  of entries in the list is provided by BUFNUM.      * 02846600
*                  Each entry in the buffer list is mapped by         * 02850900
*                  IVTBUFL.                                           * 02855200
*                                                                     * 02859500
*                  The following fields in IVTBUFL are required as    * 02863800
*                  input for this request.                            * 02868100
*                                                                     * 02872400
*                                                                     * 02876700
*                  o   BUFL_VERSION                                   * 02881000
*                                                                     * 02885300
*                  o   BUFL_SOURCE  (Note:  This field is only        * 02889600
*                      required when SKIPBUF=YES is specified.)       * 02893900
*                                                                     * 02898200
*                  o   BUFL_TOKEN                                     * 02902500
*                                                                     * 02906800
*                                                                     * 02911100
*                  There are no fields in IVTBUFL, that are returned  * 02915400
*                  as output by CSM for this request.                 * 02919700
*                                                                     * 02924000
*                                                                     * 02928300
*                                                                     * 02932600
*                                                                     * 02936900
*              BUFNUM(xbufnum)                                        * 02941200
*                  is the name (RS-type) (or address in register      * 02945500
*                  (2)-(12) ASM only) of a required fullword input    * 02949800
*                  specifying the number of buffers to change         * 02954100
*                  ownership.                                         * 02958400
*                                                                     * 02962700
*                                                                     * 02967000
*                                                                     * 02971300
*                                                                     * 02975600
*              [CSMUSER(NO|YES)]                                    * 02979900
*                  is an optional keyword input specifies that CSM    * 02984200
*                  knows about this user address space. This was      * 02988500
*                  through previous Create Pool, Get Buffer, Assign   * 02992800
*                  Buffer or Change Owner request.  If taskid is      * 02997100
*                  used, CSM knows this user taskid from the previous * 03001400
*                  Create Pool, Get Buffer, Assign Buffer or Change   * 03005700
*                  Owner request.                                     * 03010000
*                  DEFAULT: NO                                        * 03014300
*                                                                     * 03018600
*                                                                     * 03022900
*                  CSMUSER(NO)                                        * 03027200
*                      CSM will set the bit in SMCST_OWNER_BITMAP to  * 03031500
*                      indicate the address space in use. For taskid, * 03035800
*                      CSM will set the bit in SMCST_TASK_BITMAP if   * 03040100
*                      taskid is specified.                           * 03044400
*                                                                     * 03048700
*                  CSMUSER(YES)                                       * 03053000
*                      CSM already knows about this address space or  * 03057300
*                      task. It does not need to update owner or task * 03061600
*                      bitmap.                                        * 03065900
*                                                                     * 03070200
*                                                                     * 03074500
*                                                                     * 03078800
*                                                                     * 03083100
*                                                                     * 03087400
*                                                                     * 03091700
*              [ERRBFLST(xerrbflst)]                                  * 03096000
*                  is the name (RS-type) (or address in register      * 03100300
*                  (2)-(12) ASM only) of an optional fullword output  * 03104600
*                  containing the number of the last buffer entry     * 03108900
*                  that was successfully processed when an error is   * 03113200
*                  detected during processing of the                  * 03117500
*                  macroinstruction.                                  * 03121800
*                                                                     * 03126100
*                                                                     * 03130400
*                                                                     * 03134700
*                                                                     * 03139000
*              [GAP(xgap|0)]                                        * 03143300
*                  is the name (RS-type) (or address in register      * 03147600
*                  (2)-(12) ASM only) of an optional fullword input   * 03151900
*                  specifying the number of bytes used to separate    * 03156200
*                  buffer entries.  This parameter allows the buffer  * 03160500
*                  entries to be in discontiguous storage.  If GAP is * 03164800
*                  not specified, buffer entries are contiguous.      * 03169100
*                  DEFAULT: 0.                                        * 03173400
*                                                                     * 03177700
*                                                                     * 03182000
*                                                                     * 03186300
*                                                                     * 03190600
*              [OWNERID(xownerid|0)]                                * 03194900
*                  is the name (RS-type) (or address in register      * 03199200
*                  (2)-(12) ASM only) of an optional halfword input   * 03203500
*                  specifying the owner to which the buffer is to be  * 03207800
*                  assigned.  If not coded, the ASID of the issuing   * 03212100
*                  application is assigned as the OWNERID.            * 03216400
*                  DEFAULT: 0 indicates that the ASID of the          * 03220700
*                  executing address space is used to determine       * 03225000
*                  ownership.                                         * 03229300
*                                                                     * 03233600
*                                                                     * 03237900
*                                                                     * 03242200
*                                                                     * 03246500
*              [SKIPBUF(NO|YES)]                                    * 03250800
*                  is an optional keyword input specifying whether    * 03255100
*                  all entries in the buffer list should be           * 03259400
*                  processed.                                         * 03263700
*                  DEFAULT: NO                                        * 03268000
*                                                                     * 03272300
*                                                                     * 03276600
*                  SKIPBUF(NO)                                        * 03280900
*                      specifies that all the entries in the buffer   * 03285200
*                      list will be processed.  No entries are        * 03289500
*                      skipped.  The BUFL_SOURCE value is not         * 03293800
*                      examined.                                      * 03298100
*                                                                     * 03302400
*                  SKIPBUF(YES)                                       * 03306700
*                      specifies that the only entries in the buffer  * 03311000
*                      list that have a BUFL_SOURCE value indicating  * 03315300
*                      the user's non-CSM storage (BUFL_UDSPACE or    * 03319600
*                      BUFL_USTOR) will be skipped.                   * 03323900
*                                                                     * 03328200
*                                                                     * 03332500
*                                                                     * 03336800
*                                                                     * 03341100
*                                                                     * 03345400
*                                                                     * 03349700
*              [TASKID(xtaskid|0)]                                  * 03354000
*                  is the name (RS-type) (or address in register      * 03358300
*                  (2)-(12) ASM only) of an optional  pointer input   * 03362600
*                  that contains the address of a TCB.  This further  * 03366900
*                  qualifies the ownership of a buffer to a specific  * 03371200
*                  task.  If TASKID is not specified, the buffer is   * 03375500
*                  not associated with a task.                        * 03379800
*                  DEFAULT: 0 indicates that no task association is   * 03384100
*                  done.                                              * 03388400
*                                                                     * 03392700
*                                                                     * 03397000
*                                                                     * 03401300
*                                                                     * 03405600
*              [THREAD(xthread|0)]                                  * 03409900
*                  is the name (RS-type) (or address in register      * 03414200
*                  (2)-(12) ASM only) of an optional 4 character      * 03418500
*                  input specifying a unique identifier that is       * 03422800
*                  placed in the CSM trace entry to correlate trace   * 03427100
*                  records with the application that is requesting    * 03431400
*                  the buffers.  It is the CSM user's responsibility  * 03435700
*                  to ensure that this value is different from the    * 03440000
*                  THREAD value specified by other users of the CSM.  * 03444300
*                  One way this can be achieved is by specifying an   * 03448600
*                  ECSA control block for THREAD.                     * 03452900
*                  DEFAULT: 0 indicates that a unique identifier is   * 03457200
*                  not placed in the CSM trace entry.                 * 03461500
*                                                                     * 03465800
*                                                                     * 03470100
*                                                                     * 03474400
*                                                                     * 03478700
*              [UTILRTN(xutilrtn|0)]                                * 03483000
*                  is the name (RS-type) (or address in register      * 03487300
*                  (2)-(12) ASM only) of an optional fullword input   * 03491600
*                  specifying the return address of the caller of the * 03495900
*                  utility routine.  This parameter is only relevant  * 03500200
*                  to the tracing process.  It should be specified    * 03504500
*                  only if the CSM user requires identification of    * 03508800
*                  the caller of a utility routine in the CSM trace   * 03513100
*                  entry.                                             * 03517400
*                  DEFAULT: 0 indicates that the return address of    * 03521700
*                  the CSM request issuer is placed in the CSM trace  * 03526000
*                  entry.                                             * 03530300
*                                                                     * 03534600
*                                                                     * 03538900
*                                                                     * 03543200
*           REQUEST(COPY_DATA)                                        * 03547500
*                                                                     * 03551800
*              PURPOSE                                                * 03556100
*                                                                     * 03560400
*              This macroinstruction allows a user to copy data to or * 03564700
*              from a CSM buffer or a user data area.                 * 03569000
*                                                                     * 03573300
*              USAGE                                                  * 03577600
*                                                                     * 03581900
*              This service assists the application by isolating it   * 03586200
*              from the possible storage key difference between that  * 03590500
*              of the requester and that of the CSM buffer.  It also  * 03594800
*              assists users of CSM data space buffers by isolating   * 03599100
*              the requester from the addressing method used to       * 03603400
*              access a data space.                                   * 03607700
*                                                                     * 03612000
*              The copy function provided by this service allows      * 03616300
*              multiple source buffers to be copied to one or         * 03620600
*              multiple target buffers or vice versa.  The source     * 03624900
*              buffers will be copied to the target buffers using the * 03629200
*              source and target buffer lengths to pack data or span  * 03633500
*              data across the target buffers as required.            * 03637800
*                                                                     * 03642100
*              If the cumulative length of the source buffers is      * 03646400
*              greater than the cumulative length of the target       * 03650700
*              buffers, truncation of the source data will occur.     * 03655000
*                                                                     * 03659300
*              CSM accepts as input a source buffer list and a target * 03663600
*              buffer list.  The number of entries in each list are   * 03667900
*              not required to be equal.  Within each list, entries   * 03672200
*              may or may not represent a CSM buffer.  The            * 03676500
*              BUFL_SOURCE field in the entry will indicate whether   * 03680800
*              or not the entry represents a CSM buffer.  For entries * 03685100
*              representing CSM buffers, the address that is the      * 03689400
*              source or target of the copy is supplied by the        * 03693700
*              requester and is not required to be the actual start   * 03698000
*              address of the CSM buffer.  CSM validates that the     * 03702300
*              specified address and length corresponds to a storage  * 03706600
*              area that is within the bounds of the CSM buffer.      * 03710900
*              This validation is based on the size of the buffer as  * 03715200
*              determined at the time the buffer pool was created.    * 03719500
*                                                                     * 03723800
*              A user data area that is involved in the copy data     * 03728100
*              operation may be optionally ALET-qualified to allow    * 03732400
*              this area to reside in a data space.                   * 03736700
*                                                                     * 03741000
*              RETURN CODES AND REASON CODES.                         * 03745300
*                                                                     * 03749600
*              The following codes can be returned to the application * 03753900
*              on this macroinstruction.                              * 03758200
*                                                                     * 03762500
*                                                                     * 03766800
*              RETURN CODE  MEANING                                   * 03771100
*                                                                     * 03775400
*              0            Request completed successfully            * 03779700
*                                                                     * 03784000
*              4            Request did not complete successfully.    * 03788300
*                           See the following reason codes to         * 03792600
*                           determine the type of error encountered.  * 03796900
*                                                                     * 03801200
*                                                                     * 03805500
*                           REASON CODE  MEANING                      * 03809800
*                                                                     * 03814100
*                           2            Requested function not       * 03818400
*                                        supported at the present     * 03822700
*                                        time, service has not been   * 03827000
*                                        initialized                  * 03831300
*                                                                     * 03835600
*                           7            Invalid buffer token         * 03839900
*                                        specified                    * 03844200
*                                                                     * 03848500
*                           12           Address and length specified * 03852800
*                                        on a copy data request for a * 03857100
*                                        source buffer entry is       * 03861400
*                                        outside the bounds of the    * 03865700
*                                        CSM buffer represented by    * 03870000
*                                        the specified pool token.    * 03874300
*                                                                     * 03878600
*                           13           Address and length specified * 03882900
*                                        on a copy data request for a * 03887200
*                                        target buffer entry is       * 03891500
*                                        outside the bounds of the    * 03895800
*                                        CSM buffer represented by    * 03900100
*                                        the specified pool token.    * 03904400
*                                                                     * 03908700
*                           14           Copy operation resulted in   * 03913000
*                                        truncation of source data    * 03917300
*                                        due to insufficient buffer   * 03921600
*                                        space provided by the target * 03925900
*                                        buffer list.                 * 03930200
*                                                                     * 03934500
*                           18           BUFL_SOURCE value is not     * 03938800
*                                        valid for an entry in the    * 03943100
*                                        Source buffer list           * 03947400
*                                        (SRCLIST).                   * 03951700
*                                                                     * 03956000
*                           19           BUFL_SOURCE value is not     * 03960300
*                                        valid for an entry in the    * 03964600
*                                        Target buffer list           * 03968900
*                                        (TRGLIST).                   * 03973200
*                                                                     * 03977500
*                           22           Source and Target buffers    * 03981800
*                                        overlap.  No data was copied * 03986100
*                                        from source buffer.          * 03990400
*                                                                     * 03994700
*                                                                     * 03999000
*                                                                     * 04003300
*                                                                     * 04007600
*                                                                     * 04011900
*              PARAMETERS                                             * 04016200
*                                                                     * 04020500
*                                                                     * 04024800
*              [PAD(NO|YES)]                                        * 04029100
*                  is an optional keyword input that indicates if     * 04033400
*                  padding is to be performed.                        * 04037700
*                  DEFAULT: NO                                        * 04042000
*                                                                     * 04046300
*                                                                     * 04050600
*                  [PAD(NO)]                                          * 04054900
*                      indicating that padding is not performed.      * 04059200
*                                                                     * 04063500
*                  [PAD(YES)                                          * 04067800
*                      indicating that padding is to be performed     * 04072100
*                      using the value specified by PADCHAR.          * 04076400
*                                                                     * 04080700
*                                                                     * 04085000
*                      PADCHAR(xpadchar)]                             * 04089300
*                          is the name (RS-type) (or address in       * 04093600
*                          register (2)-(12) ASM only) of a required  * 04097900
*                          1 character input specifying the character * 04102200
*                          to use as pad if the cumulative target     * 04106500
*                          length is greater than the cumulative      * 04110800
*                          source length.  If PAD=YES is not          * 04115100
*                          specified, then no padding is performed.   * 04119400
*                                                                     * 04123700
*                                                                     * 04128000
*                                                                     * 04132300
*                                                                     * 04136600
*                                                                     * 04140900
*                                                                     * 04145200
*                                                                     * 04149500
*                                                                     * 04153800
*              [SRCERRL(xsrcerrl)]                                    * 04158100
*                  is the name (RS-type) (or address in register      * 04162400
*                  (2)-(12) ASM only) of an optional fullword output  * 04166700
*                  specifying the number of the last buffer entry     * 04171000
*                  that was successfully processed in the SRCLIST.    * 04175300
*                                                                     * 04179600
*                                                                     * 04183900
*                                                                     * 04188200
*                                                                     * 04192500
*              [SRCGAP(xsrcgap|0)]                                  * 04196800
*                  is the name (RS-type) (or address in register      * 04201100
*                  (2)-(12) ASM only) of an optional fullword input   * 04205400
*                  specifying the number of bytes used to separate    * 04209700
*                  buffer entries in SRCLIST.  This parameter allows  * 04214000
*                  the buffer entries to be in discontiguous storage. * 04218300
*                  If this parameter is not specified, buffer entries * 04222600
*                  will be in contiguous storage.                     * 04226900
*                  DEFAULT: 0.                                        * 04231200
*                                                                     * 04235500
*                                                                     * 04239800
*                                                                     * 04244100
*                                                                     * 04248400
*              SRCLIST(xsrclist)                                      * 04252700
*                  is a required input.  It is the name (RS-type) (or * 04257000
*                  address in register (2)-(12) ASM only) of an area  * 04261300
*                  containing a list of information about the buffers * 04265600
*                  from which the data is to be copied.  Each entry   * 04269900
*                  in the list describes a buffer and is mapped by    * 04274200
*                  IVTBUFL.  The number of entries is equal to the    * 04278500
*                  number of buffers specified by SRCNUM.  The buffer * 04282800
*                  entry may represent a CSM buffer or a user data    * 04287100
*                  area.                                              * 04291400
*                                                                     * 04295700
*                  The following fields in IVTBUFL are required as    * 04300000
*                  input for this request.                            * 04304300
*                                                                     * 04308600
*                                                                     * 04312900
*                  o   BUFL_VERSION                                   * 04317200
*                                                                     * 04321500
*                  o   BUFL_SOURCE                                    * 04325800
*                                                                     * 04330100
*                  o   BUFL_TOKEN  (Note:  This field is only         * 04334400
*                      required if data is being copied from a CSM    * 04338700
*                      buffer.)                                       * 04343000
*                                                                     * 04347300
*                  o   BUFL_ALET   (Note:  This field is only         * 04351600
*                      required to access the data in a user data     * 04355900
*                      space.)                                        * 04360200
*                                                                     * 04364500
*                  o   BUFL_ADDR                                      * 04368800
*                                                                     * 04373100
*                  o   BUFL_SIZE                                      * 04377400
*                                                                     * 04381700
*                                                                     * 04386000
*                                                                     * 04390300
*                                                                     * 04394600
*                                                                     * 04398900
*                                                                     * 04403200
*              SRCNUM(xsrcnum)                                        * 04407500
*                  is the name (RS-type) (or address in register      * 04411800
*                  (2)-(12) ASM only) of a required fullword input    * 04416100
*                  specifying the number of source buffers for the    * 04420400
*                  copy.                                              * 04424700
*                                                                     * 04429000
*                                                                     * 04433300
*                                                                     * 04437600
*                                                                     * 04441900
*              [TARGERRL(xtargerrl)]                                  * 04446200
*                  is the name (RS-type) (or address in register      * 04450500
*                  (2)-(12) ASM only) of an optional fullword output  * 04454800
*                  specifying the number of the last buffer entry     * 04459100
*                  that was successfully processed in the TARGLIST.   * 04463400
*                                                                     * 04467700
*                                                                     * 04472000
*                                                                     * 04476300
*                                                                     * 04480600
*              [TARGGAP(xtarggap|0)]                                * 04484900
*                  is the name (RS-type) (or address in register      * 04489200
*                  (2)-(12) ASM only) of an optional fullword input   * 04493500
*                  specifying the number of bytes used to separate    * 04497800
*                  buffer entries in TARGLIST.  This parameter allows * 04502100
*                  the buffer entries to be in discontiguous storage. * 04506400
*                  If this parameter is not specified, buffer entries * 04510700
*                  will be in contiguous storage.                     * 04515000
*                  DEFAULT: 0.                                        * 04519300
*                                                                     * 04523600
*                                                                     * 04527900
*                                                                     * 04532200
*                                                                     * 04536500
*              TARGLIST(xtarglist)                                    * 04540800
*                  is a required input.  It is the name (RS-type) (or * 04545100
*                  address in register (2)-(12) ASM only) of an area  * 04549400
*                  containing a list of information about the buffers * 04553700
*                  that are the target of the copy operation.  Each   * 04558000
*                  entry in the list is a buffer entry mapped by      * 04562300
*                  IVTBUFL.  The buffer entry may represent a CSM     * 04566600
*                  buffer or a user data area.                        * 04570900
*                                                                     * 04575200
*                  The following fields in IVTBUFL are required as    * 04579500
*                  input for this request.                            * 04583800
*                                                                     * 04588100
*                                                                     * 04592400
*                  o   BUFL_VERSION                                   * 04596700
*                                                                     * 04601000
*                  o   BUFL_SOURCE                                    * 04605300
*                                                                     * 04609600
*                  o   BUFL_TOKEN  (Note:  This field is only         * 04613900
*                      required if data is being copied into a CSM    * 04618200
*                      buffer.)                                       * 04622500
*                                                                     * 04626800
*                  o   BUFL_ALET   (Note:  This field is only         * 04631100
*                      required to copy data into a user data space.) * 04635400
*                                                                     * 04639700
*                  o   BUFL_ADDR                                      * 04644000
*                                                                     * 04648300
*                  o   BUFL_SIZE                                      * 04652600
*                                                                     * 04656900
*                                                                     * 04661200
*                  There are no fields in IVTBUFL returned as output, * 04665500
*                  by CSM, for this request.                          * 04669800
*                                                                     * 04674100
*                                                                     * 04678400
*                                                                     * 04682700
*                                                                     * 04687000
*              TARGNUM(xtargnum)                                      * 04691300
*                  is the name (RS-type) (or address in register      * 04695600
*                  (2)-(12) ASM only) of a required fullword input    * 04699900
*                  specifying the number of target buffers for the    * 04704200
*                  copy.                                              * 04708500
*                                                                     * 04712800
*                                                                     * 04717100
*                                                                     * 04721400
*                                                                     * 04725700
*              [THREAD(xthread|0)]                                  * 04730000
*                  is the name (RS-type) (or address in register      * 04734300
*                  (2)-(12) ASM only) of an optional 4 character      * 04738600
*                  input specifying a unique identifier that is       * 04742900
*                  placed in the CSM trace entry to correlate trace   * 04747200
*                  records with the application that is requesting    * 04751500
*                  the buffers.  It is the CSM user's responsibility  * 04755800
*                  to ensure that this value is different from the    * 04760100
*                  THREAD value specified by other users of the CSM.  * 04764400
*                  One way this can be achieved is by specifying an   * 04768700
*                  ECSA control block for THREAD.                     * 04773000
*                  DEFAULT: 0 indicates that a unique identifier is   * 04777300
*                  not placed in the CSM trace entries.               * 04781600
*                                                                     * 04785900
*                                                                     * 04790200
*                                                                     * 04794500
*                                                                     * 04798800
*              [UTILRTN(xutilrtn|0)]                                * 04803100
*                  is the name (RS-type) (or address in register      * 04807400
*                  (2)-(12) ASM only) of an optional fullword input   * 04811700
*                  specifying the return address of the caller of the * 04816000
*                  utility routine.  This parameter is only relevant  * 04820300
*                  to the tracing process.  It should be specified    * 04824600
*                  only if the CSM user requires identification of    * 04828900
*                  the caller of a utility routine in the CSM trace   * 04833200
*                  entry.                                             * 04837500
*                  DEFAULT: 0 indicates that the return address of    * 04841800
*                  the CSM request issuer is placed in the CSM trace  * 04846100
*                  entry.                                             * 04850400
*                                                                     * 04854700
*                                                                     * 04859000
*                                                                     * 04863300
*           REQUEST(CREATE_POOL)                                      * 04867600
*                                                                     * 04871900
*              PURPOSE                                                * 04876200
*                                                                     * 04880500
*              This macroinstruction allows an application to         * 04884800
*              register as a user of a storage pool of buffers        * 04889100
*              residing in ECSA or in a data space.                   * 04893400
*                                                                     * 04897700
*              The structures to maintain the storage pools are       * 04902000
*              created as a result of the first CREATE_POOL request   * 04906300
*              by an application or VTAM.  For storage pools          * 04910600
*              requesting a data space as the storage type, a data    * 04914900
*              space is created on the first request for a pool of    * 04919200
*              this type.                                             * 04923500
*                                                                     * 04927800
*              Multiple storage pools may exist per data space.       * 04932100
*                                                                     * 04936400
*              On the create request, the caller specifies the size   * 04940700
*              of the buffers in the pool to be created (4K, 16K,32K, * 04945000
*              60K, and 180K).  Only one pool of a given size exists  * 04949300
*              per storage type.  Requests by other callers for a     * 04953600
*              pool of the same characteristics will share the        * 04957900
*              existing pool.                                         * 04962200
*                                                                     * 04966500
*              USAGE                                                  * 04970800
*                                                                     * 04975100
*              This macroinstruction should be used by an application * 04979400
*              to request the use of buffers from CSM.                * 04983700
*                                                                     * 04988000
*              CONTEXT                                                * 04992300
*                                                                     * 04996600
*              This macroinstruction must be issued in task mode.     * 05000900
*              This macroinstruction is not allowed in cross memory   * 05005200
*              mode.                                                  * 05009500
*                                                                     * 05013800
*              RETURN CODES AND REASON CODES.                         * 05018100
*                                                                     * 05022400
*              The following codes can be returned to the application * 05026700
*              on this macroinstruction.                              * 05031000
*                                                                     * 05035300
*                                                                     * 05039600
*              RETURN CODE  MEANING                                   * 05043900
*                                                                     * 05048200
*              0            Request completed successfully            * 05052500
*                                                                     * 05056800
*              4            Request did not complete successfully.    * 05061100
*                           See the following reason codes to         * 05065400
*                           determine the type of error encountered.  * 05069700
*                                                                     * 05074000
*                                                                     * 05078300
*                           REASON CODE  MEANING                      * 05082600
*                                                                     * 05086900
*                           3            Specified buffer size is     * 05091200
*                                        larger than supported size.  * 05095500
*                                                                     * 05099800
*                           4            Buffer pool cannot be        * 05104100
*                                        expanded to satisfy request. * 05108400
*                                                                     * 05112700
*                           21           BUFSOURC value is not valid  * 05117000
*                                        for this request.            * 05121300
*                                                                     * 05125600
*                           23           Unable to create the         * 05129900
*                                        specified pool.  Creation of * 05134200
*                                        the pool would cause the     * 05138500
*                                        ECSA maximum limit to be     * 05142800
*                                        exceeded.                    * 05147100
*                                                                     * 05151400
*                                                                     * 05155700
*                                                                     * 05160000
*              8            System error while processing the         * 05164300
*                           request.  See the following reason codes  * 05168600
*                           to determine the type of error            * 05172900
*                           encountered.                              * 05177200
*                                                                     * 05181500
*                                                                     * 05185800
*                           REASON CODE  MEANING                      * 05190100
*                                                                     * 05194400
*                           1            Unable to obtain storage for * 05198700
*                                        the request.                 * 05203000
*                                                                     * 05207300
*                           2            Schedule SRB fail for PC     * 05211600
*                                        routine.                     * 05215900
*                                                                     * 05220200
*                           3            Unable to create ALET for    * 05224500
*                                        data space.                  * 05228800
*                                                                     * 05233100
*                           4            Error encountered, while     * 05237400
*                                        creating the data space.     * 05241700
*                                                                     * 05246000
*                           5            Unable to create another     * 05250300
*                                        data space.  Number of data  * 05254600
*                                        spaces exceeds the maximum.  * 05258900
*                                                                     * 05263200
*                           6            An abend occurred while      * 05267500
*                                        processing this request.     * 05271800
*                                                                     * 05276100
*                                                                     * 05280400
*                                                                     * 05284700
*                                                                     * 05289000
*                                                                     * 05293300
*              PARAMETERS                                             * 05297600
*                                                                     * 05301900
*                                                                     * 05306200
*              BUFSIZE(xbufsize)                                      * 05310500
*                  is the name (RS-type) (or address in register      * 05314800
*                  (2)-(12) ASM only) of a required fullword input    * 05319100
*                  specifying the size of the buffers in the pool to  * 05323400
*                  be created.  Valid pool sizes are 4K, 16K, 32K,    * 05327700
*                  60K and 180K.  All other values specified on this  * 05332000
*                  parameter are rounded up to the next valid pool    * 05336300
*                  size.  However, if BUFSIZE is greater than 180K,   * 05340600
*                  the CREATE_POOL request is rejected.               * 05344900
*                                                                     * 05349200
*                                                                     * 05353500
*                                                                     * 05357800
*                                                                     * 05362100
*               BUFSOURC(DSPACE|ECSA)                               * 05366400
*                  is a required keyword input specifying the source  * 05370700
*                  of the storage from which the buffers are to be    * 05375000
*                  allocated.                                         * 05379300
*                                                                     * 05383600
*                                                                     * 05387900
*                  BUFSOURC(DSPACE)                                   * 05392200
*                      indicates that the storage pool is to be       * 05396500
*                      created in data space.                         * 05400800
*                                                                     * 05405100
*                  BUFSOURC(ECSA)                                     * 05409400
*                      indicates that the storage pool is to be       * 05413700
*                      created in ECSA.                               * 05418000
*                                                                     * 05422300
*                                                                     * 05426600
*                                                                     * 05430900
*                                                                     * 05435200
*                                                                     * 05439500
*                                                                     * 05443800
*              [DS_INFO(xds_info)]                                    * 05448100
*                  is the name (RS-type) (or address in register      * 05452400
*                  (2)-(12) ASM only) of an optional  pointer output  * 05456700
*                  that will contain the address of an area           * 05461000
*                  containing the information required to dump CSM    * 05465300
*                  data spaces mapped by IVTDATSP.  If not specified, * 05469600
*                  the application must reference the parameter list  * 05473900
*                  that is returned by CSM in order the retrieve the  * 05478200
*                  address.                                           * 05482500
*                                                                     * 05486800
*                                                                     * 05491100
*                                                                     * 05495400
*                                                                     * 05499700
*              EXPBUF(xexpbuf)                                        * 05504000
*                  is the name (RS-type) (or address in register      * 05508300
*                  (2)-(12) ASM only) of a required fullword input    * 05512600
*                  specifying the number of buffers by which the pool * 05516900
*                  is expanded when the number of free buffers falls  * 05521200
*                  below the value for MINFREE or when a GET_BUFFER   * 05525500
*                  request needs to be satisfied.                     * 05529800
*                                                                     * 05534100
*                  Valid ranges for EXPBUF are noted below. If a      * 05538400
*                  value outside of a range is specified, then CSM    * 05542700
*                  will use a default value.  The default values for  * 05547000
*                  EXPBUF are also noted below.                       * 05551300
*                                                                     * 05555600
*                                                                     * 05559900
*                        POOL SIZE                  VALID RANGE       * 05564200
*                                DEFAULT                              * 05568500
*                        4K                         1-256             * 05572800
*                                16                                   * 05577100
*                        16K                        1-256             * 05581400
*                                 8                                   * 05585700
*                        32K                        1-128             * 05590000
*                                 4                                   * 05594300
*                        60K                        1-68              * 05598600
*                                 4                                   * 05602900
*                        180K                       1-22              * 05607200
*                                 2                                   * 05611500
*                                                                     * 05615800
*                                                                     * 05620100
*                                                                     * 05624400
*                                                                     * 05628700
*                                                                     * 05633000
*                                                                     * 05637300
*                                                                     * 05641600
*              INITBUF(xinitbuf)                                      * 05645900
*                  is the name (RS-type) (or address in register      * 05650200
*                  (2)-(12) ASM only) of a required fullword input    * 05654500
*                  specifying the initial number of buffers to be     * 05658800
*                  created in the storage pool.  If zero is           * 05663100
*                  specified, the base pool will only be created to   * 05667400
*                  represent the requester as a user of the pool.  In * 05671700
*                  this case, the pool will be expanded on the first  * 05676000
*                  GET_BUFFER macroinstruction based on the           * 05680300
*                  specification for EXPBUF.                          * 05684600
*                                                                     * 05688900
*                  Note that the pool will not contract if the number * 05693200
*                  of buffers currently available is not at a certain * 05697500
*                  value.  The value is determine as the higher of    * 05701800
*                  INITBUF or MINFREE+(2*EXPBUF).                     * 05706100
*                                                                     * 05710400
*                  Valid values for INITBUF are 0-9999.  If a value   * 05714700
*                  outside of this range is specified, then CSM will  * 05719000
*                  use a default value.  The default values for       * 05723300
*                  INITBUF are noted below.                           * 05727600
*                                                                     * 05731900
*                                                                     * 05736200
*                        POOL SIZE                  DEFAULT           * 05740500
*                        4K                         64                * 05744800
*                        16K                        32                * 05749100
*                        32K                        16                * 05753400
*                        60K                        16                * 05757700
*                        180K                       2                 * 05762000
*                                                                     * 05766300
*                                                                     * 05770600
*                                                                     * 05774900
*                                                                     * 05779200
*                                                                     * 05783500
*                                                                     * 05787800
*                                                                     * 05792100
*              MINFREE(xminfree)                                      * 05796400
*                  is the name (RS-type) (or address in register      * 05800700
*                  (2)-(12) ASM only) of a required fullword input    * 05805000
*                  specifying the minimum number of buffers to be     * 05809300
*                  free in the pool at any time. The storage pool     * 05813600
*                  will be expanded if the number of free buffers     * 05817900
*                  falls below this limit.                            * 05822200
*                                                                     * 05826500
*                  Valid values for MINFREE are 0-9999.  If a value   * 05830800
*                  outside of this range is specified, then CSM will  * 05835100
*                  use a default value.  The default values for       * 05839400
*                  MINFREE are noted below.                           * 05843700
*                                                                     * 05848000
*                                                                     * 05852300
*                        POOL SIZE                  DEFAULT           * 05856600
*                        4K                         8                 * 05860900
*                        16K                        4                 * 05865200
*                        32K                        2                 * 05869500
*                        60K                        2                 * 05873800
*                        180K                       1                 * 05878100
*                                                                     * 05882400
*                                                                     * 05886700
*                                                                     * 05891000
*                                                                     * 05895300
*                                                                     * 05899600
*                                                                     * 05903900
*                                                                     * 05908200
*              [RETPTOKN(xretptokn)]                                  * 05912500
*                  is the name (RS-type) (or address in register      * 05916800
*                  (2)-(12) ASM only) of an optional 10 character     * 05921100
*                  output of an area in which the application is to   * 05925400
*                  receive a token representing this user of this     * 05929700
*                  pool.  This token must be supplied as input on the * 05934000
*                  IVTCSM REQUEST=DELETE_POOL and IVTCSM              * 05938300
*                  REQUEST=GET_BUFFER macroinstructions, via the      * 05942600
*                  POOLTOKN parameter, associated with this pool.  If * 05946900
*                  RETPTOKN is not specified, the application must    * 05951200
*                  reference the parameter list that is returned by   * 05955500
*                  CSM in order to retrieve the value for subsequent  * 05959800
*                  requests that require POOLTOKN.                    * 05964100
*                                                                     * 05968400
*                                                                     * 05972700
*                                                                     * 05977000
*                                                                     * 05981300
*              [STATAREA(xstatarea)]                                  * 05985600
*                  is the name (RS-type) (or address in register      * 05989900
*                  (2)-(12) ASM only) of an optional  pointer output  * 05994200
*                  that will contain the address an area containing   * 05998500
*                  the resource statistics mapped by IVTSTATA.  If    * 06002800
*                  not specified, the application must reference the  * 06007100
*                  parameter list that is returned by CSM in order    * 06011400
*                  the retrieve the address.                          * 06015700
*                                                                     * 06020000
*                                                                     * 06024300
*                                                                     * 06028600
*           REQUEST(DELETE_POOL)                                      * 06032900
*                                                                     * 06037200
*              PURPOSE                                                * 06041500
*                                                                     * 06045800
*              This macroinstruction allows an application to         * 06050100
*              indicate that it is no longer a registered user of the * 06054400
*              storage pool.                                          * 06058700
*                                                                     * 06063000
*              Since each pool may have multiple users, a storage     * 06067300
*              pool will not be deleted until all buffers have been   * 06071600
*              returned by all users and delete requests have been    * 06075900
*              received for each registered user.                     * 06080200
*                                                                     * 06084500
*              USAGE                                                  * 06088800
*                                                                     * 06093100
*              This macroinstruction should only be used if an IVTCSM * 06097400
*              REQUEST=CREATE_POOL macroinstruction was previously    * 06101700
*              issued by the application.                             * 06106000
*                                                                     * 06110300
*              CONTEXT                                                * 06114600
*                                                                     * 06118900
*              This macroinstruction must be issued in task mode.     * 06123200
*              This macroinstruction is not allowed in cross memory   * 06127500
*              mode.                                                  * 06131800
*                                                                     * 06136100
*              RETURN CODES AND REASON CODES.                         * 06140400
*                                                                     * 06144700
*              The following codes can be returned to the application * 06149000
*              on this macroinstruction.                              * 06153300
*                                                                     * 06157600
*                                                                     * 06161900
*              RETURN CODE  MEANING                                   * 06166200
*                                                                     * 06170500
*              0            Request completed successfully            * 06174800
*                                                                     * 06179100
*              4            Request did not complete successfully.    * 06183400
*                           See the following reason codes to         * 06187700
*                           determine the type of error encountered.  * 06192000
*                                                                     * 06196300
*                                                                     * 06200600
*                           REASON CODE  MEANING                      * 06204900
*                                                                     * 06209200
*                           2            Requested function not       * 06213500
*                                        supported at the present     * 06217800
*                                        time, service has not been   * 06222100
*                                        initialized                  * 06226400
*                                                                     * 06230700
*                           6            Invalid pool token specified * 06235000
*                                                                     * 06239300
*                                                                     * 06243600
*                                                                     * 06247900
*              8            System error while processing the         * 06252200
*                           request.  See the following reason codes  * 06256500
*                           to determine the type of error            * 06260800
*                           encountered.                              * 06265100
*                                                                     * 06269400
*                                                                     * 06273700
*                           REASON CODE  MEANING                      * 06278000
*                                                                     * 06282300
*                           1            Unable to obtain storage for * 06286600
*                                        the request.                 * 06290900
*                                                                     * 06295200
*                           6            An abend occurred while      * 06299500
*                                        processing this request.     * 06303800
*                                                                     * 06308100
*                                                                     * 06312400
*                                                                     * 06316700
*                                                                     * 06321000
*                                                                     * 06325300
*              PARAMETERS                                             * 06329600
*                                                                     * 06333900
*                                                                     * 06338200
*              POOLTOKN(xpooltokn)                                    * 06342500
*                  is the name (RS-type) (or address in register      * 06346800
*                  (2)-(12) ASM only) of a required 10 character      * 06351100
*                  input of a token representing this user of this    * 06355400
*                  pool.  This must be the token provided to the      * 06359700
*                  application on the associated IVTCSM               * 06364000
*                  REQUEST=CREATE_POOL macroinstruction.              * 06368300
*                                                                     * 06372600
*                                                                     * 06376900
*                                                                     * 06381200
*           REQUEST(DUMP_INFO)                                        * 06385500
*                                                                     * 06389800
*              PURPOSE This macroinstruction requests the address of  * 06394100
*              the information required to include CSM data space     * 06398400
*              information in a dump.                                 * 06402700
*                                                                     * 06407000
*              RETURN CODES AND REASON CODES.                         * 06411300
*                                                                     * 06415600
*              The following codes can be returned to the application * 06419900
*              on this macroinstruction.                              * 06424200
*                                                                     * 06428500
*                                                                     * 06432800
*              RETURN CODE  MEANING                                   * 06437100
*                                                                     * 06441400
*              0            Request completed successfully            * 06445700
*                                                                     * 06450000
*              4            Request did not complete successfully.    * 06454300
*                           See the following reason codes to         * 06458600
*                           determine the type of error encountered.  * 06462900
*                                                                     * 06467200
*                                                                     * 06471500
*                           REASON CODE  MEANING                      * 06475800
*                                                                     * 06480100
*                           2            Requested function not       * 06484400
*                                        supported at the present     * 06488700
*                                        time, service has not been   * 06493000
*                                        initialized                  * 06497300
*                                                                     * 06501600
*                                                                     * 06505900
*                                                                     * 06510200
*                                                                     * 06514500
*                                                                     * 06518800
*              PARAMETERS                                             * 06523100
*                                                                     * 06527400
*                                                                     * 06531700
*              [DS_INFO(xds_info)]                                    * 06536000
*                  is the name (RS-type) (or address in register      * 06540300
*                  (2)-(12) ASM only) of an optional  pointer output  * 06544600
*                  that will contain the address of an area           * 06548900
*                  containing the information required to dump CSM    * 06553200
*                  data spaces mapped by IVTDATSP.  If not specified, * 06557500
*                  the application must reference the parameter list  * 06561800
*                  that is returned by CSM in order the retrieve the  * 06566100
*                  address.                                           * 06570400
*                                                                     * 06574700
*                                                                     * 06579000
*                                                                     * 06583300
*           REQUEST(FIX_BUFFER)                                       * 06587600
*                                                                     * 06591900
*              PURPOSE                                                * 06596200
*                                                                     * 06600500
*              This macroinstruction allows an application to change  * 06604800
*              the pageable state of a buffer to be guaranteed to be  * 06609100
*              fixed.                                                 * 06613400
*                                                                     * 06617700
*              USAGE                                                  * 06622000
*                                                                     * 06626300
*              If a buffer is originally requested as guaranteed to   * 06630600
*              be pageable or made eligible to be paged, an           * 06634900
*              application can use this macroinstruction to make the  * 06639200
*              buffer guaranteed to be fixed.                         * 06643500
*                                                                     * 06647800
*              RETURN CODES AND REASON CODES.                         * 06652100
*                                                                     * 06656400
*              The following codes can be returned to the application * 06660700
*              on this macroinstruction.                              * 06665000
*                                                                     * 06669300
*                                                                     * 06673600
*              RETURN CODE  MEANING                                   * 06677900
*                                                                     * 06682200
*              0            Request completed successfully            * 06686500
*                                                                     * 06690800
*              4            Request did not complete successfully.    * 06695100
*                           See the following reason codes to         * 06699400
*                           determine the type of error encountered.  * 06703700
*                                                                     * 06708000
*                                                                     * 06712300
*                           REASON CODE  MEANING                      * 06716600
*                                                                     * 06720900
*                           2            Requested function not       * 06725200
*                                        supported at the present     * 06729500
*                                        time, service has not been   * 06733800
*                                        initialized                  * 06738100
*                                                                     * 06742400
*                           7            Invalid buffer token         * 06746700
*                                        specified                    * 06751000
*                                                                     * 06755300
*                           9            Real storage unavailable to  * 06759600
*                                        provide a fixed buffer, wait * 06763900
*                                        not requested                * 06768200
*                                                                     * 06772500
*                                                                     * 06776800
*                                                                     * 06781100
*              8            System error while processing the         * 06785400
*                           request.  See the following reason codes  * 06789700
*                           to determine the type of error            * 06794000
*                           encountered.                              * 06798300
*                                                                     * 06802600
*                                                                     * 06806900
*                           REASON CODE  MEANING                      * 06811200
*                                                                     * 06815500
*                           6            An abend occurred while      * 06819800
*                                        processing this request.     * 06824100
*                                                                     * 06828400
*                                                                     * 06832700
*                                                                     * 06837000
*                                                                     * 06841300
*                                                                     * 06845600
*              PARAMETERS                                             * 06849900
*                                                                     * 06854200
*                                                                     * 06858500
*              BUFLIST(xbuflist)                                      * 06862800
*                  is a required input.  It is the name (RS-type) (or * 06867100
*                  address in register (2)-(12) ASM only) of an area  * 06871400
*                  in which the application program is to provide a   * 06875700
*                  list of buffer entries.  The number of entries in  * 06880000
*                  the list is equal to the value specified by the    * 06884300
*                  BUFNUM parameter.  An entry in the list is mapped  * 06888600
*                  by IVTBUFL.                                        * 06892900
*                                                                     * 06897200
*                  The following fields in IVTBUFL are required as    * 06901500
*                  input for this request.                            * 06905800
*                                                                     * 06910100
*                                                                     * 06914400
*                  o   BUFL_VERSION                                   * 06918700
*                                                                     * 06923000
*                  o   BUFL_TOKEN                                     * 06927300
*                                                                     * 06931600
*                                                                     * 06935900
*                  The following field in IVTBUFL is returned as      * 06940200
*                  output by CSM for this request.                    * 06944500
*                                                                     * 06948800
*                                                                     * 06953100
*                  o   BUFL_TYPE                                      * 06957400
*                                                                     * 06961700
*                                                                     * 06966000
*                                                                     * 06970300
*                                                                     * 06974600
*                                                                     * 06978900
*                                                                     * 06983200
*              BUFNUM(xbufnum)                                        * 06987500
*                  is the name (RS-type) (or address in register      * 06991800
*                  (2)-(12) ASM only) of a required fullword input    * 06996100
*                  specifying the number of buffers to be made        * 07000400
*                  guaranteed to be fixed.                            * 07004700
*                                                                     * 07009000
*                                                                     * 07013300
*                                                                     * 07017600
*                                                                     * 07021900
*              [ERRBFLST(xerrbflst)]                                  * 07026200
*                  is the name (RS-type) (or address in register      * 07030500
*                  (2)-(12) ASM only) of an optional fullword output  * 07034800
*                  containing the number of the last buffer entry     * 07039100
*                  that was successfully processed when an error is   * 07043400
*                  detected during processing of the                  * 07047700
*                  macroinstruction.                                  * 07052000
*                                                                     * 07056300
*                                                                     * 07060600
*                                                                     * 07064900
*                                                                     * 07069200
*              [GAP(xgap|0)]                                        * 07073500
*                  is the name (RS-type) (or address in register      * 07077800
*                  (2)-(12) ASM only) of an optional fullword input   * 07082100
*                  specifying the number of bytes used to separate    * 07086400
*                  buffer entries.  This parameter allows the buffer  * 07090700
*                  entries to be in discontiguous storage.  If GAP is * 07095000
*                  not specified, buffer entries are in contiguous    * 07099300
*                  storage.                                           * 07103600
*                  DEFAULT: 0.                                        * 07107900
*                                                                     * 07112200
*                                                                     * 07116500
*                                                                     * 07120800
*                                                                     * 07125100
*              [THREAD(xthread|0)]                                  * 07129400
*                  is the name (RS-type) (or address in register      * 07133700
*                  (2)-(12) ASM only) of an optional 4 character      * 07138000
*                  input specifying a unique identifier that is       * 07142300
*                  placed in the CSM trace entry to correlate trace   * 07146600
*                  records with the application that is requesting    * 07150900
*                  the buffers.  It is the CSM user's responsibility  * 07155200
*                  to ensure that this value is different from the    * 07159500
*                  THREAD value specified by other users of the CSM.  * 07163800
*                  One way this can be achieved is by specifying an   * 07168100
*                  ECSA control block for THREAD.                     * 07172400
*                  DEFAULT: 0 indicates that a unique identifier is   * 07176700
*                  not placed in the CSM trace entries.               * 07181000
*                                                                     * 07185300
*                                                                     * 07189600
*                                                                     * 07193900
*                                                                     * 07198200
*              [UTILRTN(xutilrtn|0)]                                * 07202500
*                  is the name (RS-type) (or address in register      * 07206800
*                  (2)-(12) ASM only) of an optional fullword input   * 07211100
*                  specifying the return address of the caller of the * 07215400
*                  utility routine.  This parameter is only relevant  * 07219700
*                  to the tracing process.  It should be specified    * 07224000
*                  only if the CSM user requires identification of    * 07228300
*                  the caller of a utility routine in the CSM trace   * 07232600
*                  entry.                                             * 07236900
*                  DEFAULT: 0 indicates that the return address of    * 07241200
*                  the CSM request issuer is placed in the CSM trace  * 07245500
*                  entry.                                             * 07249800
*                                                                     * 07254100
*                                                                     * 07258400
*                                                                     * 07262700
*                                                                     * 07267000
*              [WAIT(NO|YES)]                                       * 07271300
*                  is an optional keyword input specifying whether or * 07275600
*                  not the request should wait for fixed storage to   * 07279900
*                  become available.                                  * 07284200
*                  DEFAULT: NO                                        * 07288500
*                                                                     * 07292800
*                                                                     * 07297100
*                  WAIT(NO)                                           * 07301400
*                      specifies that this macroinstruction completes * 07305700
*                      without waiting for fixed storage to become    * 07310000
*                      available.                                     * 07314300
*                                                                     * 07318600
*                  WAIT(YES)                                          * 07322900
*                      specifies that this macroinstruction will not  * 07327200
*                      complete until fixed storage becomes           * 07331500
*                      available.  If fixed storage is not available, * 07335800
*                      users will be suspended until enough fixed     * 07340100
*                      storage is available to satisfy the request.   * 07344400
*                                                                     * 07348700
*                                                                     * 07353000
*                                                                     * 07357300
*                                                                     * 07361600
*                                                                     * 07365900
*           REQUEST(FREE_BUFFER)                                      * 07370200
*                                                                     * 07374500
*              PURPOSE                                                * 07378800
*                                                                     * 07383100
*              This macroinstruction allows an application to return  * 07387400
*              one or more buffers to a storage pool.  It is also     * 07391700
*              used to logically return a buffer that has been        * 07396000
*              assigned to multiple owners.  The buffer is returned   * 07400300
*              to the storage pool when the last owner returns the    * 07404600
*              buffer and a user free routine was not specified       * 07408900
*              during the initial allocation of the buffer.           * 07413200
*                                                                     * 07417500
*              USAGE                                                  * 07421800
*                                                                     * 07426100
*              An application may specify a free routine address that * 07430400
*              is to receive control when the IVTCSM                  * 07434700
*              REQUEST=FREE_BUFFER macroinstruction is issued.  An    * 07439000
*              application may optionally specify that the free       * 07443300
*              routine address specified when the buffer was obtained * 07447600
*              is to be overridden.  This allows a buffer to be freed * 07451900
*              back to the storage manager that was obtained          * 07456200
*              specifying a free routine address.  This option is     * 07460500
*              requested by specifying FREETO=CSM.  This option must  * 07464800
*              be invoked in this manner only by the requester of the * 07469100
*              buffer that specified a free routine on the GET_BUFFER * 07473400
*              request.  If others use this option, the buffer will   * 07477700
*              not be returned to the original owner of the buffer.   * 07482000
*                                                                     * 07486300
*              The application may optionally specify that the buffer * 07490600
*              obtained is to be cleared when it is returned to the   * 07494900
*              pool on a FREE_BUFFER request.  This provides for      * 07499200
*              secure data to be passed by an application to VTAM     * 07503500
*              such that any residual data will be eliminated once    * 07507800
*              VTAM has finished using the data.  The requester may   * 07512100
*              optionally specify that the buffer is to be cleared    * 07516400
*              when issuing the FREE_BUFFER request.                  * 07520700
*                                                                     * 07525000
*              All IVTCSM REQUEST=GET_BUFFER|ASSIGN_BUFFER            * 07529300
*              macroinstructions must have a corresponding            * 07533600
*              FREE_BUFFER request before the buffer is considered    * 07537900
*              available for reallocation by CSM or before a user     * 07542200
*              free routine is invoked for a buffer obtained          * 07546500
*              specifying a user free routine.  This is necessary to  * 07550800
*              ensure that all users, including the OWNERID of the    * 07555100
*              physical buffer, have finished using the buffer.       * 07559400
*                                                                     * 07563700
*              RETURN CODES AND REASON CODES.                         * 07568000
*                                                                     * 07572300
*              The following codes can be returned to the application * 07576600
*              on this macroinstruction.                              * 07580900
*                                                                     * 07585200
*                                                                     * 07589500
*              RETURN CODE  MEANING                                   * 07593800
*                                                                     * 07598100
*              0            Request completed successfully            * 07602400
*                                                                     * 07606700
*              4            Request did not complete successfully.    * 07611000
*                           See the following reason codes to         * 07615300
*                           determine the type of error encountered.  * 07619600
*                                                                     * 07623900
*                                                                     * 07628200
*                           REASON CODE  MEANING                      * 07632500
*                                                                     * 07636800
*                           2            Requested function not       * 07641100
*                                        supported at the present     * 07645400
*                                        time, service has not been   * 07649700
*                                        initialized                  * 07654000
*                                                                     * 07658300
*                           7            Invalid buffer token         * 07662600
*                                        specified                    * 07666900
*                                                                     * 07671200
*                                                                     * 07675500
*                                                                     * 07679800
*              8            System error while processing the         * 07684100
*                           request.  See the following reason codes  * 07688400
*                           to determine the type of error            * 07692700
*                           encountered.                              * 07697000
*                                                                     * 07701300
*                                                                     * 07705600
*                           REASON CODE  MEANING                      * 07709900
*                                                                     * 07714200
*                           6            An abend occurred while      * 07718500
*                                        processing this request.     * 07722800
*                                                                     * 07727100
*                                                                     * 07731400
*                                                                     * 07735700
*                                                                     * 07740000
*                                                                     * 07744300
*              PARAMETERS                                             * 07748600
*                                                                     * 07752900
*                                                                     * 07757200
*              BUFLIST(xbuflist)                                      * 07761500
*                  is a required input.  It is the name (RS-type) (or * 07765800
*                  address in register (2)-(12) ASM only) of an area  * 07770100
*                  containing a list of buffer entries.  The number   * 07774400
*                  of entries in the list is specified by BUFNUM.  An * 07778700
*                  entry in the list is mapped by IVTBUFL.            * 07783000
*                                                                     * 07787300
*                  The following fields in IVTBUFL are required as    * 07791600
*                  input for this request.                            * 07795900
*                                                                     * 07800200
*                                                                     * 07804500
*                  o   BUFL_VERSION                                   * 07808800
*                                                                     * 07813100
*                  o   BUFL_SOURCE  (Note:  This field is only        * 07817400
*                      required when SKIPBUF=YES is specified.)       * 07821700
*                                                                     * 07826000
*                  o   BUFL_TOKEN                                     * 07830300
*                                                                     * 07834600
*                                                                     * 07838900
*                                                                     * 07843200
*                  There are no fields in IVTBUFL returned as output  * 07847500
*                  by CSM for this request.                           * 07851800
*                                                                     * 07856100
*                                                                     * 07860400
*                                                                     * 07864700
*                                                                     * 07869000
*              BUFNUM(xbufnum)                                        * 07873300
*                  is the name (RS-type) (or address in register      * 07877600
*                  (2)-(12) ASM only) of a required fullword input    * 07881900
*                  specifying the number of buffer entries in the     * 07886200
*                  list.                                              * 07890500
*                                                                     * 07894800
*                                                                     * 07899100
*                                                                     * 07903400
*                                                                     * 07907700
*              [CLEAR(NO|YES)]                                      * 07912000
*                  is an optional keyword input specifying whether    * 07916300
*                  the buffer is to be cleared when returned to       * 07920600
*                  storage pool.                                      * 07924900
*                  DEFAULT: NO                                        * 07929200
*                                                                     * 07933500
*                                                                     * 07937800
*                  CLEAR(NO)                                          * 07942100
*                      specifies that the buffer is not cleared when  * 07946400
*                      returned to the storage pool.  If the buffer   * 07950700
*                      was originally allocated with a CLEAR value of * 07955000
*                      YES, then CLEAR=NO is ignored by CSM and the   * 07959300
*                      buffer will be cleared when returned to the    * 07963600
*                      storage pool.                                  * 07967900
*                                                                     * 07972200
*                  CLEAR(YES)                                         * 07976500
*                      specifies that the buffer is to be cleared.    * 07980800
*                      Specifying CLEAR=YES will not cause a buffer   * 07985100
*                      to be cleared that is returned via a           * 07989400
*                      user-specified buffer return exit routine.     * 07993700
*                      However, if CLEAR=YES is specified, the buffer * 07998000
*                      is cleared in the event that it is returned to * 08002300
*                      the storage pool.                              * 08006600
*                                                                     * 08010900
*                                                                     * 08015200
*                                                                     * 08019500
*                                                                     * 08023800
*                                                                     * 08028100
*                                                                     * 08032400
*              [ERRBFLST(xerrbflst)]                                  * 08036700
*                  is the name (RS-type) (or address in register      * 08041000
*                  (2)-(12) ASM only) of an optional fullword output  * 08045300
*                  specifying the number of the last buffer entry     * 08049600
*                  that was successfully processed when an error is   * 08053900
*                  detected during processing of the                  * 08058200
*                  macroinstruction.                                  * 08062500
*                                                                     * 08066800
*                                                                     * 08071100
*                                                                     * 08075400
*                                                                     * 08079700
*              [FREETO(USER|CSM)]                                   * 08084000
*                  is an optional keyword input allowing the FREERTN  * 08088300
*                  parameter on the IVTCSM REQUEST=GET_BUFFER         * 08092600
*                  macroinstruction to be overridden.                 * 08096900
*                  DEFAULT: USER                                      * 08101200
*                                                                     * 08105500
*                                                                     * 08109800
*                  FREETO(USER)                                       * 08114100
*                      specifies that the buffer is to be returned to * 08118400
*                      the buffer return exit routine specified on    * 08122700
*                      the GET_BUFFER request.                        * 08127000
*                                                                     * 08131300
*                  FREETO(CSM)                                        * 08135600
*                      specifies that the buffer return exit routine  * 08139900
*                      address provided when the buffer was obtained  * 08144200
*                      is to be overridden and the buffer is to be    * 08148500
*                      returned to the storage pool.  This option     * 08152800
*                      should only be used by the original owner of   * 08157100
*                      the buffer.                                    * 08161400
*                                                                     * 08165700
*                                                                     * 08170000
*                                                                     * 08174300
*                                                                     * 08178600
*                                                                     * 08182900
*                                                                     * 08187200
*              [GAP(xgap|0)]                                        * 08191500
*                  is the name (RS-type) (or address in register      * 08195800
*                  (2)-(12) ASM only) of an optional fullword input   * 08200100
*                  specifying the number of bytes used to separate    * 08204400
*                  buffer entries.  This parameter allows the buffer  * 08208700
*                  entries to be in discontiguous storage.  If GAP is * 08213000
*                  not specified, buffer entries are not contiguous.  * 08217300
*                  DEFAULT: 0.                                        * 08221600
*                                                                     * 08225900
*                                                                     * 08230200
*                                                                     * 08234500
*                                                                     * 08238800
*              [SKIPBUF(NO|YES)]                                    * 08243100
*                  is an optional keyword input specifying whether    * 08247400
*                  all entries in the buffer list should be           * 08251700
*                  processed.                                         * 08256000
*                  DEFAULT: NO                                        * 08260300
*                                                                     * 08264600
*                                                                     * 08268900
*                  SKIPBUF(NO)                                        * 08273200
*                      specifies that all the entries in the buffer   * 08277500
*                      list will be processed.  No entries are        * 08281800
*                      skipped.  The BUFL_SOURCE value is not         * 08286100
*                      examined.                                      * 08290400
*                                                                     * 08294700
*                  SKIPBUF(YES)                                       * 08299000
*                      specifies that the only entries in the buffer  * 08303300
*                      list that have a BUFL_SOURCE value indicating  * 08307600
*                      the user's non-CSM storage (BUFL_UDSPACE or    * 08311900
*                      BUFL_USTOR) will be skipped.                   * 08316200
*                                                                     * 08320500
*                                                                     * 08324800
*                                                                     * 08329100
*                                                                     * 08333400
*                                                                     * 08337700
*                                                                     * 08342000
*              [THREAD(xthread|0)]                                  * 08346300
*                  is the name (RS-type) (or address in register      * 08350600
*                  (2)-(12) ASM only) of an optional 4 character      * 08354900
*                  input specifying a unique identifier that is       * 08359200
*                  placed in the CSM trace entry to correlate trace   * 08363500
*                  records with the application that is requesting    * 08367800
*                  the buffers.  It is the CSM user's responsibility  * 08372100
*                  to ensure that this value is different from the    * 08376400
*                  THREAD value specified by other users of the CSM.  * 08380700
*                  One way this can be achieved is by specifying an   * 08385000
*                  ECSA control block for THREAD.                     * 08389300
*                  DEFAULT: 0 indicates that a unique identifier is   * 08393600
*                  not placed in the CSM trace entry.                 * 08397900
*                                                                     * 08402200
*                                                                     * 08406500
*                                                                     * 08410800
*                                                                     * 08415100
*              [UTILRTN(xutilrtn|0)]                                * 08419400
*                  is the name (RS-type) (or address in register      * 08423700
*                  (2)-(12) ASM only) of an optional fullword input   * 08428000
*                  specifying the return address of the caller of the * 08432300
*                  utility routine.  This parameter is only relevant  * 08436600
*                  to the tracing process.  It should be specified    * 08440900
*                  only if the CSM user requires identification of    * 08445200
*                  the caller of a utility routine in the CSM trace   * 08449500
*                  entry.                                             * 08453800
*                  DEFAULT: 0 indicates that the return address of    * 08458100
*                  the CSM request issuer is placed in the CSM trace  * 08462400
*                  entry.                                             * 08466700
*                                                                     * 08471000
*                                                                     * 08475300
*                                                                     * 08479600
*           REQUEST(GET_BUFFER)                                       * 08483900
*                                                                     * 08488200
*              PURPOSE                                                * 08492500
*                                                                     * 08496800
*              This macroinstruction allows an application to request * 08501100
*              one or more buffers of a predetermined size from the   * 08505400
*              CSM storage pool.                                      * 08509700
*                                                                     * 08514000
*              USAGE                                                  * 08518300
*                                                                     * 08522600
*              For the IVTCSM REQUEST=GET_BUFFER macroinstruction,    * 08526900
*              CSM allocates buffers from a pre-existing pool and     * 08531200
*              returns information to the requester needed to address * 08535500
*              the buffer.  This includes the ALET of a buffer that   * 08539800
*              resides in a data space.  The value specified on the   * 08544100
*              POOLTOKN parameter must be the same value returned on  * 08548400
*              the IVTCSM REQUEST=CREATE_POOL macroinstruction via    * 08552700
*              the RETPTOKN parameter.                                * 08557000
*                                                                     * 08561300
*              The application has the option of requesting buffers   * 08565600
*              that are guaranteed to be fixed, guaranteed to be      * 08569900
*              pageable or eligible to be made pageable.  A pageable  * 08574200
*              buffer can be obtained and used when fixed buffers are * 08578500
*              unavailable, and fixed at a later time using the       * 08582800
*              IVTCSM REQUEST=FIX_BUFFER macroinstruction.            * 08587100
*                                                                     * 08591400
*              Ownership of the buffers is assigned to the requesting * 08595700
*              address space by default.  This can be overridden by   * 08600000
*              specifying OWNERID.  The OWNERID is the ASID of the    * 08604300
*              address space.  Ownership of a buffer can be           * 08608600
*              optionally qualified for a given task by specifying    * 08612900
*              TASKID.  The TASKID is a TCB address.                  * 08617200
*                                                                     * 08621500
*              A buffer token is returned with each buffer.  The      * 08625800
*              buffer token is the means by which this buffer is      * 08630100
*              known to CSM.  This token must be used with all other  * 08634400
*              requests to CSM for the associated buffer.             * 08638700
*                                                                     * 08643000
*              The application can also specify a free routine        * 08647300
*              address that is to receive control when the IVTCSM     * 08651600
*              REQUEST=FREE_BUFFER macroinstruction is issued for the * 08655900
*              buffer.  The default is that the buffers are to be     * 08660200
*              returned to CSM.                                       * 08664500
*                                                                     * 08668800
*              The application can also specify that the buffer       * 08673100
*              obtained is to be cleared when it is returned to the   * 08677400
*              pool on a IVTCSM REQUEST=FREE_BUFFER macroinstruction. * 08681700
*              This provides for secure data to be passed by an       * 08686000
*              application to VTAM such that any residual data will   * 08690300
*              be eliminated once VTAM has finished using the data.   * 08694600
*                                                                     * 08698900
*              RETURN CODES AND REASON CODES.                         * 08703200
*                                                                     * 08707500
*              The following codes can be returned to the application * 08711800
*              on this macroinstruction.                              * 08716100
*                                                                     * 08720400
*                                                                     * 08724700
*              RETURN CODE  MEANING                                   * 08729000
*                                                                     * 08733300
*              0            Request completed successfully            * 08737600
*                                                                     * 08741900
*              4            Request did not complete successfully.    * 08746200
*                           See the following reason codes to         * 08750500
*                           determine the type of error encountered.  * 08754800
*                                                                     * 08759100
*                                                                     * 08763400
*                           REASON CODE  MEANING                      * 08767700
*                                                                     * 08772000
*                           2            Requested function not       * 08776300
*                                        supported at the present     * 08780600
*                                        time, service has not been   * 08784900
*                                        initialized                  * 08789200
*                                                                     * 08793500
*                           4            Buffer pool cannot be        * 08797800
*                                        expanded to satisfy request  * 08802100
*                                                                     * 08806400
*                           5            No available buffers in      * 08810700
*                                        pool, wait not requested     * 08815000
*                                                                     * 08819300
*                           6            Invalid pool token specified * 08823600
*                                                                     * 08827900
*                           9            Real storage unavailable to  * 08832200
*                                        provide a fixed buffer, wait * 08836500
*                                        not requested                * 08840800
*                                                                     * 08845100
*                           11           A problem has been detected  * 08849400
*                                        with the pool associated     * 08853700
*                                        with the CSM request. The    * 08858000
*                                        user should free all buffers * 08862300
*                                        when finished using them and * 08866600
*                                        issue a delete pool request  * 08870900
*                                        to terminate usage of this   * 08875200
*                                        pool. To allocate new        * 08879500
*                                        buffers, a new pool must be  * 08883800
*                                        created by issuing a new     * 08888100
*                                        create pool request.         * 08892400
*                                                                     * 08896700
*                           17           Extent has been overlaid.    * 08901000
*                                        Reissue the request.         * 08905300
*                                                                     * 08909600
*                           20           BUFTYPE value specified is   * 08913900
*                                        not valid for this request.  * 08918200
*                                                                     * 08922500
*                           24           ASID specified on OWNERID    * 08926800
*                                        parameter is not active.     * 08931100
*                                                                     * 08935400
*                                                                     * 08939700
*                                                                     * 08944000
*              8            System error while processing the         * 08948300
*                           request.  See the following reason codes  * 08952600
*                           to determine the type of error            * 08956900
*                           encountered.                              * 08961200
*                                                                     * 08965500
*                                                                     * 08969800
*                           REASON CODE  MEANING                      * 08974100
*                                                                     * 08978400
*                           1            Unable to obtain storage for * 08982700
*                                        the request.                 * 08987000
*                                                                     * 08991300
*                           3            Unable to create ALET for    * 08995600
*                                        data space.                  * 08999900
*                                                                     * 09004200
*                           4            Error encountered, while     * 09008500
*                                        creating the data space.     * 09012800
*                                                                     * 09017100
*                           5            Unable to create another     * 09021400
*                                        data space.  Number of data  * 09025700
*                                        spaces exceeds the maximum.  * 09030000
*                                                                     * 09034300
*                           6            An abend occurred while      * 09038600
*                                        processing this request.     * 09042900
*                                                                     * 09047200
*                                                                     * 09051500
*                                                                     * 09055800
*                                                                     * 09060100
*                                                                     * 09064400
*              PARAMETERS                                             * 09068700
*                                                                     * 09073000
*                                                                     * 09077300
*              BUFLIST(xbuflist)                                      * 09081600
*                  is a required input.  It is the name (RS-type) (or * 09085900
*                  address in register (2)-(12) ASM only) of an area  * 09090200
*                  containing a list of buffer entries.  The number   * 09094500
*                  of entries in the list is equal to the value       * 09098800
*                  specified by the BUFNUM parameter.  An entry in    * 09103100
*                  the list is mapped by IVTBUFL.                     * 09107400
*                                                                     * 09111700
*                  The following field in IVTBUFL is required as      * 09116000
*                  input for this request.                            * 09120300
*                                                                     * 09124600
*                                                                     * 09128900
*                  o   BUFL_VERSION                                   * 09133200
*                                                                     * 09137500
*                                                                     * 09141800
*                  The following fields in IVTBUFL are returned as    * 09146100
*                  output by CSM for this request.                    * 09150400
*                                                                     * 09154700
*                                                                     * 09159000
*                  o   BUFL_SOURCE                                    * 09163300
*                                                                     * 09167600
*                  o   BUFL_TYPE                                      * 09171900
*                                                                     * 09176200
*                  o   BUFL_TOKEN                                     * 09180500
*                                                                     * 09184800
*                  o   BUFL_ALET   (Note:  This field is returned     * 09189100
*                      only if the buffer was allocated from a data   * 09193400
*                      space.)                                        * 09197700
*                                                                     * 09202000
*                  o   BUFL_ADDR                                      * 09206300
*                                                                     * 09210600
*                  o   BUFL_SIZE                                      * 09214900
*                                                                     * 09219200
*                                                                     * 09223500
*                                                                     * 09227800
*                                                                     * 09232100
*                                                                     * 09236400
*                                                                     * 09240700
*              BUFNUM(xbufnum)                                        * 09245000
*                  is the name (RS-type) (or address in register      * 09249300
*                  (2)-(12) ASM only) of a required fullword input    * 09253600
*                  specifying the number of buffers to be obtained.   * 09257900
*                                                                     * 09262200
*                                                                     * 09266500
*                                                                     * 09270800
*                                                                     * 09275100
*               BUFTYPE(PAGEELIG|PAGEABLE|FIXED)                    * 09279400
*                  is a required keyword input specifying whether the * 09283700
*                  buffers are to be guaranteed to be fixed,          * 09288000
*                  guaranteed to be pageable or eligible to be made   * 09292300
*                  pageable.                                          * 09296600
*                                                                     * 09300900
*                                                                     * 09305200
*                  BUFTYPE(PAGEELIG)                                  * 09309500
*                      indicates that the buffers are eligible to be  * 09313800
*                      made pageable.                                 * 09318100
*                                                                     * 09322400
*                  BUFTYPE(PAGEABLE)                                  * 09326700
*                      indicates that the buffers are to be           * 09331000
*                      guaranteed to be pageable.                     * 09335300
*                                                                     * 09339600
*                  BUFTYPE(FIXED)                                     * 09343900
*                      indicates that buffers are to be guaranteed to * 09348200
*                      be fixed.                                      * 09352500
*                                                                     * 09356800
*                                                                     * 09361100
*                                                                     * 09365400
*                                                                     * 09369700
*                                                                     * 09374000
*                                                                     * 09378300
*              [CLEAR(NO|YES)]                                      * 09382600
*                  is an optional keyword input specifying whether    * 09386900
*                  the buffer is to be cleared when returned to the   * 09391200
*                  storage pool.                                      * 09395500
*                  DEFAULT: NO                                        * 09399800
*                                                                     * 09404100
*                                                                     * 09408400
*                  CLEAR(NO)                                          * 09412700
*                      specifies that the buffer is not cleared when  * 09417000
*                      returned to the buffer pool                    * 09421300
*                                                                     * 09425600
*                  CLEAR(YES)                                         * 09429900
*                      specifies that the buffer is cleared.          * 09434200
*                      Specifying CLEAR=YES will not cause a buffer   * 09438500
*                      to be cleared that is returned via a           * 09442800
*                      user-specified buffer return exit routine.     * 09447100
*                      However, if CLEAR=YES is specified, the buffer * 09451400
*                      is cleared in the event that it is returned to * 09455700
*                      the storage pool.                              * 09460000
*                                                                     * 09464300
*                                                                     * 09468600
*                                                                     * 09472900
*                                                                     * 09477200
*                                                                     * 09481500
*                                                                     * 09485800
*              [CSMUSER(NO|YES)]                                    * 09490100
*                  is an optional keyword input specifies that CSM    * 09494400
*                  knows about this user address space. This was      * 09498700
*                  through previous Create Pool, Get Buffer, Assign   * 09503000
*                  Buffer or Change Owner request.  If taskid is      * 09507300
*                  used, CSM knows this user taskid from the previous * 09511600
*                  Create Pool, Get Buffer, Assign Buffer or Change   * 09515900
*                  Owner request.                                     * 09520200
*                  DEFAULT: NO                                        * 09524500
*                                                                     * 09528800
*                                                                     * 09533100
*                  CSMUSER(NO)                                        * 09537400
*                      CSM will set the bit in SMCST_OWNER_BITMAP to  * 09541700
*                      indicate the address space in use. For taskid, * 09546000
*                      CSM will set the bit in SMCST_TASK_BITMAP if   * 09550300
*                      taskid is specified.                           * 09554600
*                                                                     * 09558900
*                  CSMUSER(YES)                                       * 09563200
*                      CSM already knows about this address space or  * 09567500
*                      task. It does not need to update owner or task * 09571800
*                      bitmap.                                        * 09576100
*                                                                     * 09580400
*                                                                     * 09584700
*                                                                     * 09589000
*                                                                     * 09593300
*                                                                     * 09597600
*                                                                     * 09601900
*              [ERRBFLST(xerrbflst)]                                  * 09606200
*                  is the name (RS-type) (or address in register      * 09610500
*                  (2)-(12) ASM only) of an optional fullword output  * 09614800
*                  containing the number of the last buffer entry     * 09619100
*                  that was successfully processed when an error is   * 09623400
*                  detected during processing of the                  * 09627700
*                  macroinstruction.                                  * 09632000
*                                                                     * 09636300
*                                                                     * 09640600
*                                                                     * 09644900
*                                                                     * 09649200
*              [FREERTN(xfreertn|CSM)]                              * 09653500
*                  is the name (RS-type) (or address in register      * 09657800
*                  (2)-(12) ASM only) of an optional  pointer input   * 09662100
*                  that contains the address of an application        * 09666400
*                  routine that is to receive control when the buffer * 09670700
*                  is freed.  This allows the buffer to be passed to  * 09675000
*                  another application or product such as VTAM and to * 09679300
*                  receive the buffer back when the receiver is       * 09683600
*                  finished.  The buffer return exit routine is       * 09687900
*                  scheduled for execution in the address space of    * 09692200
*                  the original owner of the buffer.                  * 09696500
*                  DEFAULT: CSM specifies that the buffer is to be    * 09700800
*                  returned to CSM when freed.                        * 09705100
*                                                                     * 09709400
*                                                                     * 09713700
*                                                                     * 09718000
*                                                                     * 09722300
*              [GAP(xgap|0)]                                        * 09726600
*                  is the name (RS-type) (or address in register      * 09730900
*                  (2)-(12) ASM only) of an optional fullword input   * 09735200
*                  specifying the number of bytes used to separate    * 09739500
*                  buffer entries.  This parameter allows the buffer  * 09743800
*                  entries to be in discontiguous storage.  If GAP is * 09748100
*                  not specified, buffer entries are contiguous.      * 09752400
*                  DEFAULT: 0.                                        * 09756700
*                                                                     * 09761000
*                                                                     * 09765300
*                                                                     * 09769600
*                                                                     * 09773900
*              [OWNERID(xownerid|0)]                                * 09778200
*                  is the name (RS-type) (or address in register      * 09782500
*                  (2)-(12) ASM only) of an optional halfword input   * 09786800
*                  specifying the owner of the buffer being obtained. * 09791100
*                  DEFAULT: 0 indicates that the ASID of the          * 09795400
*                  executing address space is used to determine       * 09799700
*                  ownership.                                         * 09804000
*                                                                     * 09808300
*                                                                     * 09812600
*                                                                     * 09816900
*                                                                     * 09821200
*              POOLTOKN(xpooltokn)                                    * 09825500
*                  is the name (RS-type) (or address in register      * 09829800
*                  (2)-(12) ASM only) of a required 10 character      * 09834100
*                  input of the token representing this user of this  * 09838400
*                  pool.  This must be the token provided to the      * 09842700
*                  application on the associated IVTCSM               * 09847000
*                  REQUEST=CREATE_POOL macroinstruction.              * 09851300
*                                                                     * 09855600
*                                                                     * 09859900
*                                                                     * 09864200
*                                                                     * 09868500
*              [TASKID(xtaskid|0)]                                  * 09872800
*                  is the name (RS-type) (or address in register      * 09877100
*                  (2)-(12) ASM only) of an optional  pointer input   * 09881400
*                  that contains the address of a TCB.  This further  * 09885700
*                  qualifies the ownership of a buffer to a specific  * 09890000
*                  task.  If TASKID is not specified, the buffer is   * 09894300
*                  not associated with a task.                        * 09898600
*                  DEFAULT: 0 indicates that no task association is   * 09902900
*                  done.                                              * 09907200
*                                                                     * 09911500
*                                                                     * 09915800
*                                                                     * 09920100
*                                                                     * 09924400
*              [THREAD(xthread|0)]                                  * 09928700
*                  is the name (RS-type) (or address in register      * 09933000
*                  (2)-(12) ASM only) of an optional 4 character      * 09937300
*                  input specifying a unique identifier that is       * 09941600
*                  placed in the CSM trace entry to correlate trace   * 09945900
*                  records with the application that is requesting    * 09950200
*                  the buffers.  It is the CSM user's responsibility  * 09954500
*                  to ensure that this value is different from the    * 09958800
*                  THREAD value specified by other users of the CSM.  * 09963100
*                  One way this can be achieved is by specifying an   * 09967400
*                  ECSA control block for THREAD.                     * 09971700
*                  DEFAULT: 0 indicates that a unique identifier is   * 09976000
*                  not placed in the CSM trace entries.               * 09980300
*                                                                     * 09984600
*                                                                     * 09988900
*                                                                     * 09993200
*                                                                     * 09997500
*              [UTILRTN(xutilrtn|0)]                                * 10001800
*                  is the name (RS-type) (or address in register      * 10006100
*                  (2)-(12) ASM only) of an optional fullword input   * 10010400
*                  specifying the return address of the caller of the * 10014700
*                  utility routine.  This parameter is only relevant  * 10019000
*                  to the tracing process.  It should be specified    * 10023300
*                  only if the CSM user requires identification of    * 10027600
*                  the caller of a utility routine in the CSM trace   * 10031900
*                  entry.                                             * 10036200
*                  DEFAULT: 0 indicates that the return address of    * 10040500
*                  the CSM request issuer is placed in the CSM trace  * 10044800
*                  entry.                                             * 10049100
*                                                                     * 10053400
*                                                                     * 10057700
*                                                                     * 10062000
*                                                                     * 10066300
*              [WAIT(NO|YES|EXPAND)]                                * 10070600
*                  is an optional keyword input specifying whether or * 10074900
*                  not the request should wait for buffers to become  * 10079200
*                  available.                                         * 10083500
*                  DEFAULT: NO                                        * 10087800
*                                                                     * 10092100
*                                                                     * 10096400
*                  WAIT(NO)                                           * 10100700
*                      specifies that this macroinstruction completes * 10105000
*                      without waiting for an available buffer.       * 10109300
*                                                                     * 10113600
*                  WAIT(YES)                                          * 10117900
*                      specifies that this macroinstruction will not  * 10122200
*                      complete until all buffers become available.   * 10126500
*                      If buffers are not available, users will be    * 10130800
*                      suspended until enough buffers become          * 10135100
*                      available to satisfy the request.              * 10139400
*                                                                     * 10143700
*                  WAIT(EXPAND)                                       * 10148000
*                      specifies that this macroinstruction will wait * 10152300
*                      for pool expansion to complete.  If enough     * 10156600
*                      buffers are not available to satisfy the       * 10160900
*                      request, users will be suspended until         * 10165200
*                      expansion completes.                           * 10169500
*                                                                     * 10173800
*                                                                     * 10178100
*                                                                     * 10182400
*                                                                     * 10186700
*                                                                     * 10191000
*           REQUEST(PAGE_BUFFER)                                      * 10195300
*                                                                     * 10199600
*              PURPOSE                                                * 10203900
*                                                                     * 10208200
*              This macroinstruction allows an application to change  * 10212500
*              the pageable state of a buffer.                        * 10216800
*                                                                     * 10221100
*              USAGE                                                  * 10225400
*                                                                     * 10229700
*              An application can use this macroinstruction to make   * 10234000
*              the buffer guaranteed to be pageable or eligible to be * 10238300
*              paged.                                                 * 10242600
*                                                                     * 10246900
*              When BUFTYPE=PAGEELIG is specified on this             * 10251200
*              macroinstruction, the buffer is marked as eligible to  * 10255500
*              be paged.  It is not physically unfixed unless the     * 10259800
*              storage manager requires real storage to satisfy       * 10264100
*              another storage manager request.  This avoids the      * 10268400
*              potential overhead of unnecessary fixing and freeing   * 10272700
*              of storage.                                            * 10277000
*                                                                     * 10281300
*              This function may be used to avoid consuming real      * 10285600
*              storage for data that is being held in a buffer for    * 10289900
*              possible use at a later time.                          * 10294200
*                                                                     * 10298500
*              When BUFTYPE=PAGEABLE is specified on this             * 10302800
*              macroinstruction, the buffer is marked as guaranteed   * 10307100
*              to be pageable.  This function may be used in          * 10311400
*              situations where a system service requires pageable    * 10315700
*              storage on input. This function can be issued only for * 10320000
*              a buffer consisting of one image.  The reason for this * 10324300
*              restriction is to guarantee that a user of a buffer    * 10328600
*              that has multiple images can successfully issue a      * 10332900
*              FIX_BUFFER request if necessary.  Fixing a buffer      * 10337200
*              requires that the entire buffer be fixed regardless of * 10341500
*              the fact that the user may only be interested in a     * 10345800
*              piece of the buffer.                                   * 10350100
*                                                                     * 10354400
*              In some circumstances, fixing of storage may be        * 10358700
*              required after receiving data from VTAM.  It is        * 10363000
*              possible that multiple applications may be returned    * 10367300
*              tokens representing the same buffer even though the    * 10371600
*              data for each application is in a distinct area of the * 10375900
*              buffer.  This function limits applications that have   * 10380200
*              to handle situations in which multiple images exist to * 10384500
*              those requiring pageable storage.                      * 10388800
*                                                                     * 10393100
*              RETURN CODES AND REASON CODES.                         * 10397400
*                                                                     * 10401700
*              The following codes can be returned to the application * 10406000
*              on this macroinstruction.                              * 10410300
*                                                                     * 10414600
*                                                                     * 10418900
*              RETURN CODE  MEANING                                   * 10423200
*                                                                     * 10427500
*              0            Request completed successfully            * 10431800
*                                                                     * 10436100
*              4            Request did not complete successfully.    * 10440400
*                           See the following reason codes to         * 10444700
*                           determine the type of error encountered.  * 10449000
*                                                                     * 10453300
*                                                                     * 10457600
*                           REASON CODE  MEANING                      * 10461900
*                                                                     * 10466200
*                           2            Requested function not       * 10470500
*                                        supported at the present     * 10474800
*                                        time, service has not been   * 10479100
*                                        initialized                  * 10483400
*                                                                     * 10487700
*                           7            Invalid buffer token         * 10492000
*                                        specified                    * 10496300
*                                                                     * 10500600
*                           10           Request to make a buffer     * 10504900
*                                        pageable denied, more than   * 10509200
*                                        one image of the buffer      * 10513500
*                                        exists                       * 10517800
*                                                                     * 10522100
*                           20           BUFTYPE value specified is   * 10526400
*                                        not valid for this request.  * 10530700
*                                                                     * 10535000
*                                                                     * 10539300
*                                                                     * 10543600
*              8            System error while processing the         * 10547900
*                           request.  See the following reason codes  * 10552200
*                           to determine the type of error            * 10556500
*                           encountered.                              * 10560800
*                                                                     * 10565100
*                                                                     * 10569400
*                           REASON CODE  MEANING                      * 10573700
*                                                                     * 10578000
*                           1            Unable to obtain storage for * 10582300
*                                        the request.                 * 10586600
*                                                                     * 10590900
*                           6            An abend occurred while      * 10595200
*                                        processing this request.     * 10599500
*                                                                     * 10603800
*                                                                     * 10608100
*                                                                     * 10612400
*                                                                     * 10616700
*                                                                     * 10621000
*              PARAMETERS                                             * 10625300
*                                                                     * 10629600
*                                                                     * 10633900
*              BUFLIST(xbuflist)                                      * 10638200
*                  is a required input.  It is the name (RS-type) (or * 10642500
*                  address in register (2)-(12) ASM only) of an area  * 10646800
*                  containing a list of buffer entries.  The number   * 10651100
*                  of entries in the list is specified by BUFNUM.  An * 10655400
*                  entry in the buffer list is mapped by IVTBUFL.     * 10659700
*                                                                     * 10664000
*                  The following fields in IVTBUFL are required as    * 10668300
*                  input for this request.                            * 10672600
*                                                                     * 10676900
*                                                                     * 10681200
*                  o   BUFL_VERSION                                   * 10685500
*                                                                     * 10689800
*                  o   BUFL_TOKEN                                     * 10694100
*                                                                     * 10698400
*                                                                     * 10702700
*                  The following field in IVTBUFL is returned as      * 10707000
*                  output by CSM for this request.                    * 10711300
*                                                                     * 10715600
*                                                                     * 10719900
*                  o   BUFL_TYPE                                      * 10724200
*                                                                     * 10728500
*                                                                     * 10732800
*                                                                     * 10737100
*                                                                     * 10741400
*                                                                     * 10745700
*                                                                     * 10750000
*              BUFNUM(xbufnum)                                        * 10754300
*                  is the name (RS-type) (or address in register      * 10758600
*                  (2)-(12) ASM only) of a required fullword input    * 10762900
*                  specifying the number of buffers to be made        * 10767200
*                  pageable or eligible to be paged.                  * 10771500
*                                                                     * 10775800
*                                                                     * 10780100
*                                                                     * 10784400
*                                                                     * 10788700
*               BUFTYPE(PAGEELIG|PAGEABLE)                          * 10793000
*                  is a required keyword input specifying whether the * 10797300
*                  buffers are to be guaranteed to be pageable or     * 10801600
*                  eligible to be made pageable.                      * 10805900
*                                                                     * 10810200
*                                                                     * 10814500
*                  BUFTYPE(PAGEELIG)                                  * 10818800
*                      indicates that the buffers are eligible to be  * 10823100
*                      made pageable.                                 * 10827400
*                                                                     * 10831700
*                  BUFTYPE(PAGEABLE)                                  * 10836000
*                      indicates that the buffers are to be           * 10840300
*                      guaranteed to be pageable.                     * 10844600
*                                                                     * 10848900
*                                                                     * 10853200
*                                                                     * 10857500
*                                                                     * 10861800
*                                                                     * 10866100
*                                                                     * 10870400
*              [GAP(xgap|0)]                                        * 10874700
*                  is the name (RS-type) (or address in register      * 10879000
*                  (2)-(12) ASM only) of an optional fullword input   * 10883300
*                  specifying the number of bytes used to separate    * 10887600
*                  buffer entries.  This parameter allows the buffer  * 10891900
*                  entries to be in discontiguous storage.  If GAP is * 10896200
*                  not specified, buffer entries are contiguous.      * 10900500
*                  DEFAULT: 0.                                        * 10904800
*                                                                     * 10909100
*                                                                     * 10913400
*                                                                     * 10917700
*                                                                     * 10922000
*              [ERRBFLST(xerrbflst)]                                  * 10926300
*                  is the name (RS-type) (or address in register      * 10930600
*                  (2)-(12) ASM only) of an optional fullword output  * 10934900
*                  containing the number of the last buffer entry     * 10939200
*                  that was successfully processed when an error is   * 10943500
*                  detected during processing of the                  * 10947800
*                  macroinstruction.                                  * 10952100
*                                                                     * 10956400
*                                                                     * 10960700
*                                                                     * 10965000
*                                                                     * 10969300
*              [THREAD(xthread|0)]                                  * 10973600
*                  is the name (RS-type) (or address in register      * 10977900
*                  (2)-(12) ASM only) of an optional 4 character      * 10982200
*                  input specifying a unique identifier that is       * 10986500
*                  placed in the CSM trace entry to correlate trace   * 10990800
*                  records with the application that is requesting    * 10995100
*                  the buffers.  It is the CSM user's responsibility  * 10999400
*                  to ensure that this value is different from the    * 11003700
*                  THREAD value specified by other users of the CSM.  * 11008000
*                  One way this can be achieved is by specifying an   * 11012300
*                  ECSA control block for THREAD.                     * 11016600
*                  DEFAULT: 0 indicates that a unique identifier is   * 11020900
*                  not placed in the CSM trace entries.               * 11025200
*                                                                     * 11029500
*                                                                     * 11033800
*                                                                     * 11038100
*                                                                     * 11042400
*              [UTILRTN(xutilrtn|0)]                                * 11046700
*                  is the name (RS-type) (or address in register      * 11051000
*                  (2)-(12) ASM only) of an optional fullword input   * 11055300
*                  specifying the return address of the caller of the * 11059600
*                  utility routine.  This parameter is only relevant  * 11063900
*                  to the tracing process.  It should be specified    * 11068200
*                  only if the CSM user requires identification of    * 11072500
*                  the caller of a utility routine in the CSM trace   * 11076800
*                  entry.                                             * 11081100
*                  DEFAULT: 0 indicates that the return address of    * 11085400
*                  the CSM request issuer is placed in the CSM trace  * 11089700
*                  entry.                                             * 11094000
*                                                                     * 11098300
*                                                                     * 11102600
*                                                                     * 11106900
*           REQUEST(RESOURCE_STATS)                                   * 11111200
*                                                                     * 11115500
*              PURPOSE                                                * 11119800
*                                                                     * 11124100
*              This macroinstruction requests that the address of the * 11128400
*              information required to monitor the usage of ECSA,     * 11132700
*              data space, and fixed storage be returned.             * 11137000
*                                                                     * 11141300
*              USAGE                                                  * 11145600
*                                                                     * 11149900
*              When this macroinstruction is issued, CSM returns the  * 11154200
*              address of a 4-byte area containing the status of      * 11158500
*              ECSA, data space, and fixed storage resources.         * 11162800
*              Applications can issue this macroinstruction during    * 11167100
*              initialization processing and use the address          * 11171400
*              throughout normal processing.  The status information  * 11175700
*              contained in this area indicates whether the use of a  * 11180000
*              resource is normal, constrained, or critical.  If a    * 11184300
*              resource usage is determined to be constrained or      * 11188600
*              critical, users of CSM can take action to prevent      * 11192900
*              critical shortages that might jeopardize the           * 11197200
*              application's or system's operation, including:        * 11201500
*                                                                     * 11205800
*                                                                     * 11210100
*              o   Selecting a different storage source for buffer    * 11214400
*                  pools                                              * 11218700
*                                                                     * 11223000
*              o   Limiting usage of fixed storage.                   * 11227300
*                                                                     * 11231600
*                                                                     * 11235900
*                                                                     * 11240200
*              RETURN CODES AND REASON CODES.                         * 11244500
*                                                                     * 11248800
*              The following codes can be returned to the application * 11253100
*              on this macroinstruction.                              * 11257400
*                                                                     * 11261700
*                                                                     * 11266000
*              RETURN CODE  MEANING                                   * 11270300
*                                                                     * 11274600
*              0            Request completed successfully            * 11278900
*                                                                     * 11283200
*              4            Request did not complete successfully.    * 11287500
*                           See the following reason codes to         * 11291800
*                           determine the type of error encountered.  * 11296100
*                                                                     * 11300400
*                                                                     * 11304700
*                           REASON CODE  MEANING                      * 11309000
*                                                                     * 11313300
*                           2            Requested function not       * 11317600
*                                        supported at the present     * 11321900
*                                        time, service has not been   * 11326200
*                                        initialized                  * 11330500
*                                                                     * 11334800
*                                                                     * 11339100
*                                                                     * 11343400
*                                                                     * 11347700
*                                                                     * 11352000
*              PARAMETERS                                             * 11356300
*                                                                     * 11360600
*                                                                     * 11364900
*              [STATAREA(xstatarea)]                                  * 11369200
*                  is the name (RS-type) (or address in register      * 11373500
*                  (2)-(12) ASM only) of an optional  pointer output  * 11377800
*                  that will contain the address of an area           * 11382100
*                  containing the resource statistics mapped by       * 11386400
*                  IVTSTATA.  If not specified, the application must  * 11390700
*                  reference the parameter list that is returned by   * 11395000
*                  CSM in order the retrieve the address.             * 11399300
*                                                                     * 11403600
*                  The information is in a non-fetch protected area   * 11407900
*                  and can be accessed while executing in any storage * 11412200
*                  key.                                               * 11416500
*                                                                     * 11420800
*                                                                     * 11425100
*                                                                     * 11429400
*                                                                     * 11433700
*                                                                     * 11438000
*                                                                     * 11442300
*                                                                     * 11446600
*                                                                     * 11450900
*      [RETCODE(xretcode)]                                            * 11455200
*          is the name (RS-type) of an optional fullword output       * 11459500
*          variable (or register (2)-(12) ASM only) into which the    * 11463800
*          return code is to be copied from GPR 15.                   * 11468100
*                                                                     * 11472400
*                                                                     * 11476700
*                                                                     * 11481000
*                                                                     * 11485300
*      [RSNCODE(xrsncode)]                                            * 11489600
*          is the name (RS-type) of an optional fullword output       * 11493900
*          variable (or register (2)-(12) ASM only) into which the    * 11498200
*          reason code is to be copied from GPR 0.                    * 11502500
*                                                                     * 11506800
*                                                                     * 11511100
*                                                                     * 11515400
*                                                                     * 11519700
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 11524000
*          is an optional byte input decimal value in the "0-0" range * 11528300
*          that specifies the macro version.  PLISTVER is the only    * 11532600
*          key allowed on the list form of MF and determines which    * 11536900
*          parameter list is generated (see Macro USAGE NOTE 2).      * 11541200
*          Note that MAX may be specified instead of a number, and    * 11545500
*          the parameter list will be of the largest size currently   * 11549800
*          supported. This size may grow from release to release      * 11554100
*          (thus possibly affecting the amount of storage needed by   * 11558400
*          your program).  If your program can tolerate this, IBM     * 11562700
*          recommends that you always specify MAX when creating the   * 11567000
*          list form parameter list as that will ensure that the list * 11571300
*          form parameter list is always long enough to hold whatever * 11575600
*          parameters might be specified on the execute form.         * 11579900
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 11584200
*          default is the lowest version which allows all of the      * 11588500
*          parameters specified on the invocation to be processed.    * 11592800
*                                                                     * 11597100
*                                                                     * 11601400
*                                                                     * 11605700
*                                                                     * 11610000
*      [MF(S|L|M|E)]                                                * 11614300
*          is an optional keyword input which specifies the macro     * 11618600
*          form.                                                      * 11622900
*          DEFAULT: S                                                 * 11627200
*                                                                     * 11631500
*                                                                     * 11635800
*          [MF(S)]                                                    * 11640100
*              specifies the standard form of the macro.  The "S"     * 11644400
*              form generates code to put the parameters into the     * 11648700
*              parameter list and invoke the desired service.  Full   * 11653000
*              checking for required macro keys is done along with    * 11657300
*              supplying defaults for omitted optional parameters.    * 11661600
*              The ?EPILOG macro must be invoked at the end of the    * 11665900
*              module.                                                * 11670200
*                                                                     * 11674500
*              For assembly language code modules, the "S" form       * 11678800
*              generates code to put the parameters into an in-line   * 11683100
*              parameter list and invoke the desired service.  Full   * 11687400
*              checking for required macro keys is done along with    * 11691700
*              supplying defaults for omitted optional parameters.    * 11696000
*                                                                     * 11700300
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 11704600
*              specifies the list form of the macro.  The "L" form    * 11708900
*              defines an area to be used for the parameter list.     * 11713200
*              Only the PLISTVER key may be specified on the          * 11717500
*              invocation.  All other macro parameters are flagged as * 11721800
*              errors.  If PLISTVER is not specified, the original    * 11726100
*              parameter list definition is used.                     * 11730400
*                                                                     * 11734700
*            ,xmfctrl                                                 * 11739000
*              is a required input.  It is the name of a storage area * 11743300
*              for the parameter list.                                * 11747600
*                                                                     * 11751900
*            ,xmfattr|BDY(DWORD)                                    * 11756200
*              is an optional 60 character input string that varies   * 11760500
*              from 1 to 60 characters. Use it to force boundary      * 11764800
*              alignment of the parameter list. Use only 0F or 0D     * 11769100
*              (assembler-only).                                      * 11773400
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 11777700
*              forces the parameter list to a doubleword boundary.    * 11782000
*                                                                     * 11786300
*          [MF(M,xmfctrl,COMPLETE|NOCHECK)]                         * 11790600
*              specifies the modify form of the macro.  The "M" form  * 11794900
*              generates code to put the parameters into the          * 11799200
*              parameter list specified by xmfctrl.                   * 11803500
*                                                                     * 11807800
*            ,xmfctrl                                                 * 11812100
*              is a required input.  It is the name (RS-type) (or     * 11816400
*              address in register (1)-(12) ASM only) of a storage    * 11820700
*              area for the parameter list.                           * 11825000
*                                                                     * 11829300
*            ,COMPLETE|NOCHECK]                                     * 11833600
*              is an optional keyword input which specifies the       * 11837900
*              degree of macro parameter syntax checking.             * 11842200
*              DEFAULT: COMPLETE                                      * 11846500
*                                                                     * 11850800
*                                                                     * 11855100
*              COMPLETE                                               * 11859400
*                  Checking for required macro keys is done and       * 11863700
*                  defaults are supplied for omitted optional         * 11868000
*                  parameters.  (See Macro Usage Note 2).             * 11872300
*                                                                     * 11876600
*              NOCHECK                                                * 11880900
*                  Checking for required macro keys is not done nor   * 11885200
*                  are defaults supplied for omitted optional         * 11889500
*                  parameters.                                        * 11893800
*                                                                     * 11898100
*                                                                     * 11902400
*                                                                     * 11906700
*          [MF(E,xmfctrl,COMPLETE|NOCHECK)]                         * 11911000
*              specifies the execute form of the macro.  The "E" form * 11915300
*              generates code to put the parameters into the          * 11919600
*              parameter list specified by xmfctrl and invoke the     * 11923900
*              desired service.                                       * 11928200
*                                                                     * 11932500
*            ,xmfctrl                                                 * 11936800
*              is a required input.  It is the name (RS-type) (or     * 11941100
*              address in register (1)-(12) ASM only) of a storage    * 11945400
*              area for the parameter list.                           * 11949700
*                                                                     * 11954000
*            ,COMPLETE|NOCHECK                                      * 11958300
*              is an optional keyword input which specifies the       * 11962600
*              degree of macro parameter syntax checking.             * 11966900
*              DEFAULT: COMPLETE                                      * 11971200
*                                                                     * 11975500
*                                                                     * 11979800
*              COMPLETE                                               * 11984100
*                  Checking for required macro keys is done and       * 11988400
*                  defaults are supplied for omitted optional         * 11992700
*                  parameters.  (See Macro Usage Note 2).             * 11997000
*                                                                     * 12001300
*              NOCHECK                                                * 12005600
*                  Checking for required macro keys is not done nor   * 12009900
*                  are defaults supplied for omitted optional         * 12014200
*                  parameters.                                        * 12018500
*                                                                     * 12022800
*                                                                     * 12027100
*                                                                     * 12031400
*                                                                     * 12035700
*                                                                     * 12040000
*                                                                     * 12044300
*                                                                     * 12048600
*01* ABEND CODES:                                                     * 12052900
*                                                                     * 12057200
*                                                                     * 12061500
*            4C4  Abnormal termination of CSM.                        * 12065800
*                                                                     * 12070100
*                                                                     * 12074400
*                                                                     * 12078700
*                 ABEND REASON CODES:                                 * 12083000
*                                                                     * 12087300
*                 1001    Unable to obtain storage during CSM         * 12091600
*                         initialization.                             * 12095900
*                                                                     * 12100200
*                 1002    The posting of an ECB failed during CSM     * 12104500
*                         initialization.                             * 12108800
*                                                                     * 12113100
*                 1003    Latch error. CSM was not able to create a   * 12117400
*                         latch.                                      * 12121700
*                                                                     * 12126000
*                 1004    The posting of an ECB, waiting for fixed    * 12130300
*                         storage, failed.                            * 12134600
*                                                                     * 12138900
*                                                                     * 12143200
*                                                                     * 12147500
*                                                                     * 12151800
*                                                                     * 12156100
*01* RETURN CODES:                                                    * 12160400
*                                                                     * 12164700
*                                                                     * 12169000
*            0    Request completed successfully                      * 12173300
*                                                                     * 12177600
*            4    Request did not complete successfully, see reason   * 12181900
*                 code to identify the type of error encountered      * 12186200
*                                                                     * 12190500
*                                                                     * 12194800
*                                                                     * 12199100
*                 REASON CODES:                                       * 12203400
*                                                                     * 12207700
*                 1       Requested function not supported            * 12212000
*                                                                     * 12216300
*                 2       Requested function not supported at the     * 12220600
*                         present time, service has not been          * 12224900
*                         initialized                                 * 12229200
*                                                                     * 12233500
*                 3       Specified buffer size is large than         * 12237800
*                         supported size                              * 12242100
*                                                                     * 12246400
*                 4       Buffer pool cannot be expanded to satisfy   * 12250700
*                         request                                     * 12255000
*                                                                     * 12259300
*                 5       No available buffers in pool, wait not      * 12263600
*                         requested                                   * 12267900
*                                                                     * 12272200
*                 6       Invalid pool token specified                * 12276500
*                                                                     * 12280800
*                 7       Invalid buffer token specified buffer,      * 12285100
*                         possible attempt to use a buffer that has   * 12289400
*                         been freed                                  * 12293700
*                                                                     * 12298000
*                 9       Real storage unavailable to provide a fixed * 12302300
*                         buffer, wait not requested                  * 12306600
*                                                                     * 12310900
*                 10      Request to make a buffer pageable denied,   * 12315200
*                         more than one image of the buffer exists    * 12319500
*                                                                     * 12323800
*                 11      A problem has been detected with the pool   * 12328100
*                         associated with the CSM request. The user   * 12332400
*                         should free all buffers when finished using * 12336700
*                         them and issue a delete pool request to     * 12341000
*                         terminate usage of this pool. To allocate   * 12345300
*                         new buffers, a new pool must be created by  * 12349600
*                         issuing a new create pool request.          * 12353900
*                                                                     * 12358200
*                 12      Address and length specified on a copy data * 12362500
*                         request for a source buffer entry is        * 12366800
*                         outside the bounds of the CSM buffer        * 12371100
*                         represented by the specified pool token.    * 12375400
*                                                                     * 12379700
*                 13      Address and length specified on a copy data * 12384000
*                         request for a target buffer entry is        * 12388300
*                         outside the bounds of the CSM buffer        * 12392600
*                         represented by the specified pool token.    * 12396900
*                                                                     * 12401200
*                 14      Copy operation resulted in truncation of    * 12405500
*                         source data due to insufficient buffer      * 12409800
*                         space provided by the target buffer list.   * 12414100
*                                                                     * 12418400
*                 15      Assign buffer request failed because the    * 12422700
*                         state of the buffer is guaranteed to be     * 12427000
*                         pageable.                                   * 12431300
*                                                                     * 12435600
*                 17      Extent has been overlaid.  Reissue the      * 12439900
*                         request.                                    * 12444200
*                                                                     * 12448500
*                 18      BUFL_SOURCE value is not valid for an entry * 12452800
*                         in the Source Buffer list (SRCLIST).        * 12457100
*                                                                     * 12461400
*                 19      BUFL_SOURCE value is not valid for an entry * 12465700
*                         in the Target Buffer list (TRGLIST).        * 12470000
*                                                                     * 12474300
*                 20      BUFTYPE value specified is not valid for    * 12478600
*                         this request.                               * 12482900
*                                                                     * 12487200
*                 21      BUFSOURC value specified is not valid for   * 12491500
*                         this request.                               * 12495800
*                                                                     * 12500100
*                 22      Source and target buffers overlap.  No data * 12504400
*                         copied from source buffer.                  * 12508700
*                                                                     * 12513000
*                 23      Unable to create the specified pool.        * 12517300
*                         Creation of the pool would cause the ECSA   * 12521600
*                         maximum limit to be exceeded.               * 12525900
*                                                                     * 12530200
*                 24      ASID specified on OWNERID parameter is not  * 12534500
*                         active.                                     * 12538800
*                                                                     * 12543100
*                                                                     * 12547400
*                                                                     * 12551700
*                                                                     * 12556000
*            8    System error while processing the request           * 12560300
*                                                                     * 12564600
*                                                                     * 12568900
*                                                                     * 12573200
*                 REASON CODES:                                       * 12577500
*                                                                     * 12581800
*                 1       Unable to obtain storage for the request.   * 12586100
*                                                                     * 12590400
*                 2       Schedule SRB fail for PC routine.           * 12594700
*                                                                     * 12599000
*                 3       Unable to create ALET for data space.       * 12603300
*                                                                     * 12607600
*                 4       Error encountered, while creating the data  * 12611900
*                         space.                                      * 12616200
*                                                                     * 12620500
*                 5       Unable to create another data space.        * 12624800
*                         Number of data spaces exceeds the maximum.  * 12629100
*                                                                     * 12633400
*                 6       An abend occurred while processing this     * 12637700
*                         request.                                    * 12642000
*                                                                     * 12646300
*                                                                     * 12650600
*                                                                     * 12654900
*                                                                     * 12659200
*                                                                     * 12663500
*01* REASON CODES:                                                    * 12667800
*                                                                     * 12672100
*       Reason codes, as appropriate, are defined under their         * 12676400
*       corresponding return code.                                    * 12680700
*                                                                     * 12685000
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 12689300
*                                                                     * 12693600
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 12697900
*                                                                     * 12702200
*01* COMPONENT:  CSM                                                  * 12706500
*                                                                     * 12710800
*01* MACRO USAGE NOTES:                                               * 12715100
*                                                                     * 12719400
*                                                                     * 12723700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 12728000
*        global macro variable.  Any value other than 'NO' will       * 12732300
*        result in the macro expansion being printed.  The default is * 12736600
*        'YES'.  The following examples illustrate how the ZPRINT     * 12740900
*        variable should be set.                                      * 12745200
*                                                                     * 12749500
*                    GBLC &ZPRINT                                     * 12753800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 12758100
*                                                                     * 12762400
*                                                                     * 12766700
*    2.  When using the NOCHECK option in conjunction with the Modify * 12771000
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 12775300
*        Modify   or  Execute  form  invocation  which  specifies  or * 12779600
*        defaults  to  the  COMPLETE  option.   This insures that the * 12783900
*        parameter  list  is  initialized completely.   The parameter * 12788200
*        list  field which identifies the version number of the macro * 12792500
*        is only set when the Standard form or the Complete option of * 12796800
*        the  Execute/Modify  form  is  used,  or  when  PLISTVER  is * 12801100
*        explicitly  specified.  Be sure that the resulting parameter * 12805400
*        list version number covers all the keys that you use.        * 12809700
*                                                                     * 12814000
*                                                                     * 12818300
*    3.  All  keys currently contained in the IVTCSM macro correspond * 12822600
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 12826900
*        MAX.                                                         * 12831200
*                                                                     * 12835500
*                                                                     * 12839800
*                                                                     * 12844100
*                                                                     * 12848400
*01* CHANGE ACTIVITY:                                                 * 12852700
*                                                                     * 12857000
*   Flag LineItem  FMID    Date   ID    Comment                       * 12861300
*                                                                     * 12865600
*$D0= ID@@@MST FPAPI   042295 143576: FAST PATH API FOR APPC          * 12869900
*$S1= P122889  FPAPI   081696 143576: ADD SKIPBUF PARAMETER           * 12874200
*$S2= P123445  FPAPI   090596 143576: CORRECT OVERLAY PROBLEM         * 12878500
*$S3= P125057  FPAPI   121696 143576: DOCUMENTATION CHANGES           * 12882800
*$S4= P125893  FPAPI   070797 984146: Added CSMUSER keyword           * 12887100
*                                                Direct    call    to * 12891400
*VTSMCFB                                                              * 12895700
*                                                and IVTSMCGB         * 12900000
*                                                                     * 12904300
*$MAC(IVTCSM) COMP(CSM) PROD(VTAM): CSM INTERFACE MACRO               * 12908600
****** END OF SPECIFICATIONS *****************************************/ 12912900
*/* TLINE 1 *********************************************************** 12917200
         MACRO                                                          12921500
&XLABEL  IVTCSM &REQUEST=,&BUFLIST=,&BUFNUM=,&BUFTYPE=,&CSMUSER=,&GAP=,*12925800
               &ERRBFLST=,&OWNERID=,&TASKID=,&THREAD=,&UTILRTN=,       *12930100
               &SKIPBUF=,&PAD=,&PADCHAR=,&SRCERRL=,&SRCGAP=,&SRCLIST=, *12934400
               &SRCNUM=,&TARGERRL=,&TARGGAP=,&TARGLIST=,&TARGNUM=,     *12938700
               &BUFSIZE=,&BUFSOURC=,&DS_INFO=,&EXPBUF=,&INITBUF=,      *12943000
               &MINFREE=,&RETPTOKN=,&STATAREA=,&POOLTOKN=,&WAIT=,      *12947300
               &CLEAR=,&FREETO=,&FREERTN=,&RETCODE=,&RSNCODE=,         *12951600
               &PLISTVER=,&MF=                                          12955900
.*                                                                      12960200
*                    MACDATE -99/09/09-<0>                              12964500
.*                                                                      12968800
.*******************************************************************    12973100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        12977400
.*******************************************************************    12981700
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             12986000
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               12990300
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       12994600
.*                                                                      12998900
                    GBLC  &ZIVTCSM    YES=MACRO USED AT LEAST ONCE      13003200
.*******************************************************************    13007500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          13011800
.*******************************************************************    13016100
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           13020400
                    LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS      13024700
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        13029000
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       13033300
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       13037600
                    LCLA  &ZAWRK      USED AS A WORK AREA               13041900
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            13046200
                    LCLA  &ZN         NUMERIC WORK VARIABLE             13050500
                    LCLC  &ZC         CHARACTER WORK VARIABLE           13054800
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       13059100
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           13063400
                    LCLA  &ZMACRET    MACRO RETURN CODE                 13067700
&ZMACRET            SETA  0           ASSUME NO ERRORS                  13072000
.*                                                                      13076300
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      13080600
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        13084900
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             13089200
                    LCLC  &ZENDBASEPL           End of base PL          13093500
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             13097800
.*******************************************************************    13102100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             13106400
.*******************************************************************    13110700
                    LCLA  &ZI         INDEX FOR ARRAY                   13115000
                    LCLA  &ZJ         INDEX FOR PARMS                   13119300
                    LCLA  &ZK         INDEX FOR PARSE                   13123600
                    LCLA  &ZLO        LOW RANGE VALUE                   13127900
                    LCLA  &ZHI        HIGH RANGE VALUE                  13132200
                    LCLC  &ZW         WORK AREA FOR PARM                13136500
.********************************************************************   13140800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 13145100
.********************************************************************   13149400
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           13153700
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    13158000
.*                                                                      13162300
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    13166600
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     13170900
                    SPLEVEL  TEST                                       13175200
.ZSYS2              ANOP  ,                                             13179500
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         13183800
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         13188100
                    SYSSTATE TEST                                       13192400
                    AGO   .ZSYS4                                        13196700
.ZSYS3              ANOP  ,                                             13201000
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           13205300
.ZSYS4              ANOP  ,                                             13209600
.*******************************************************************    13213900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   13218200
.*******************************************************************    13222500
                    LCLC  &XREQUEST   ++ VALUE                          13226800
                    LCLC  &XBUFLIST   ++ NAME                           13231100
                    LCLC  &XBUFNUM    ++ NAME                           13235400
                    LCLC  &XBUFTYPE   ++ VALUE                          13239700
                    LCLC  &XCSMUSER   ++ VALUE                          13244000
                    LCLC  &XGAP       ++ NAME                           13248300
                    LCLC  &XERRBFLST  ++ NAME                           13252600
                    LCLC  &XOWNERID   ++ NAME                           13256900
                    LCLC  &XTASKID    ++ NAME                           13261200
                    LCLC  &XTHREAD    ++ NAME                           13265500
                    LCLC  &XUTILRTN   ++ NAME                           13269800
                    LCLC  &XSKIPBUF   ++ VALUE                          13274100
                    LCLC  &XPAD       ++ VALUE                          13278400
                    LCLC  &XPADCHAR   ++ NAME                           13282700
                    LCLC  &XSRCERRL   ++ NAME                           13287000
                    LCLC  &XSRCGAP    ++ NAME                           13291300
                    LCLC  &XSRCLIST   ++ NAME                           13295600
                    LCLC  &XSRCNUM    ++ NAME                           13299900
                    LCLC  &XTARGERRL  ++ NAME                           13304200
                    LCLC  &XTARGGAP   ++ NAME                           13308500
                    LCLC  &XTARGLIST  ++ NAME                           13312800
                    LCLC  &XTARGNUM   ++ NAME                           13317100
                    LCLC  &XBUFSIZE   ++ NAME                           13321400
                    LCLC  &XBUFSOURC  ++ VALUE                          13325700
                    LCLC  &XDS_INFO   ++ NAME                           13330000
                    LCLC  &XEXPBUF    ++ NAME                           13334300
                    LCLC  &XINITBUF   ++ NAME                           13338600
                    LCLC  &XMINFREE   ++ NAME                           13342900
                    LCLC  &XRETPTOKN  ++ NAME                           13347200
                    LCLC  &XSTATAREA  ++ NAME                           13351500
                    LCLC  &XPOOLTOKN  ++ NAME                           13355800
                    LCLC  &XWAIT      ++ VALUE                          13360100
                    LCLC  &XCLEAR     ++ VALUE                          13364400
                    LCLC  &XFREETO    ++ VALUE                          13368700
                    LCLC  &XFREERTN   ++ NAME                           13373000
                    LCLC  &XRETCODE   ++ NAME                           13377300
                    LCLC  &XRSNCODE   ++ NAME                           13381600
                    LCLA  &XPLISTVER  ++ VALUE                          13385900
                    LCLC  &XMF        ++ VALUE                          13390200
                    LCLC  &XMFCTRL    ++ NAME                           13394500
                    LCLC  &XMFATTR    ++ VALUE                          13398800
                    LCLC  &XMFSCK     ++ VALUE                          13403100
.*******************************************************************    13407400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           13411700
.*******************************************************************    13416000
                    LCLC  &ZXREQUEST  ++ INPUT VALUE                    13420300
                    LCLC  &ZXBUFLIST  ++ INPUT NAME                     13424600
                    LCLC  &ZXBUFNUM   ++ INPUT NAME                     13428900
                    LCLC  &ZXBUFTYPE  ++ INPUT VALUE                    13433200
                    LCLC  &ZXCSMUSER  ++ INPUT VALUE                    13437500
                    LCLC  &ZXGAP      ++ INPUT NAME                     13441800
                    LCLC  &ZXERRBFLST           ++ OUTPUT NAME          13446100
                    LCLC  &ZXOWNERID  ++ INPUT NAME                     13450400
                    LCLC  &ZXTASKID   ++ INPUT NAME                     13454700
                    LCLC  &ZXTHREAD   ++ INPUT NAME                     13459000
                    LCLC  &ZXUTILRTN  ++ INPUT NAME                     13463300
                    LCLC  &ZXSKIPBUF  ++ INPUT VALUE                    13467600
                    LCLC  &ZXPAD      ++ INPUT VALUE                    13471900
                    LCLC  &ZXPADCHAR  ++ INPUT NAME                     13476200
                    LCLC  &ZXSRCERRL  ++ OUTPUT NAME                    13480500
                    LCLC  &ZXSRCGAP   ++ INPUT NAME                     13484800
                    LCLC  &ZXSRCLIST  ++ INPUT NAME                     13489100
                    LCLC  &ZXSRCNUM   ++ INPUT NAME                     13493400
                    LCLC  &ZXTARGERRL           ++ OUTPUT NAME          13497700
                    LCLC  &ZXTARGGAP  ++ INPUT NAME                     13502000
                    LCLC  &ZXTARGLIST           ++ INPUT NAME           13506300
                    LCLC  &ZXTARGNUM  ++ INPUT NAME                     13510600
                    LCLC  &ZXBUFSIZE  ++ INPUT NAME                     13514900
                    LCLC  &ZXBUFSOURC           ++ INPUT VALUE          13519200
                    LCLC  &ZXDS_INFO  ++ OUTPUT NAME                    13523500
                    LCLC  &ZXEXPBUF   ++ INPUT NAME                     13527800
                    LCLC  &ZXINITBUF  ++ INPUT NAME                     13532100
                    LCLC  &ZXMINFREE  ++ INPUT NAME                     13536400
                    LCLC  &ZXRETPTOKN           ++ OUTPUT NAME          13540700
                    LCLC  &ZXSTATAREA           ++ OUTPUT NAME          13545000
                    LCLC  &ZXPOOLTOKN           ++ INPUT NAME           13549300
                    LCLC  &ZXWAIT     ++ INPUT VALUE                    13553600
                    LCLC  &ZXCLEAR    ++ INPUT VALUE                    13557900
                    LCLC  &ZXFREETO   ++ INPUT VALUE                    13562200
                    LCLC  &ZXFREERTN  ++ INPUT NAME                     13566500
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    13570800
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    13575100
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          13579400
                    LCLC  &ZXMF       ++ INPUT VALUE                    13583700
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     13588000
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    13592300
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    13596600
.********************************************************************   13600900
.***AC.PLV01  PROCESS PLISTVER                                      *   13605200
.********************************************************************   13609500
&XPLISTVER      SETA  0                                                 13613800
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       13618100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   13622400
&XPLISTVER      SETA  0                                                 13626700
.ZPLV0          ANOP  ,                                                 13631000
.*                                                                      13635300
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      13639600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      13643900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  13648200
.*-------------------------------------------------------------------   13652500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 13656800
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                13661100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 13665400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 13669700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               13674000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                13678300
                AGO   .ZPVCK2                                           13682600
.ZPVCK3         ANOP  ,                                                 13686900
.*-------------------------------------------------------------------   13691200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  13695500
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                13699800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 13704100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         13708400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 13712700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                13717000
                AGO   .ZPVCKE                                           13721300
.ZPVCK2         ANOP  ,                                                 13725600
.*-------------------------------------------------------------------   13729900
&ZCVAL          SETC  '&PLISTVER(1)'                                    13734200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             13738500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             13742800
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        13747100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      13751400
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     13755700
.ZPVCK6         ANOP  ,                                                 13760000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                13764300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 13768600
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         13772900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         13777200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                13781500
&XPLISTVER      SETA  0                                                 13785800
                AGO   .ZPVCKE                                           13790100
.*-------------------------------------------------------------------   13794400
.ZPVCK4A        ANOP  ,                                                 13798700
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        13803000
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                13807300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               13811600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          13815900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 13820200
                MNOTE 8,' &ZMS IS REQUIRED.'                            13824500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                13828800
                AGO   .ZPVCK5                                           13833100
.ZPVCK4         ANOP  ,                                                 13837400
&XPLISTVER      SETA  &PLISTVER(1)                                      13841700
.ZPVCK5         ANOP  ,                                                 13846000
.ZPVCKE         ANOP  ,                                                 13850300
.********************************************************************   13854600
.***AG.MF01 PROCESS MF MACRO FORMS                                      13858900
.********************************************************************   13863200
                    ACTR  10000                                         13867500
.*------------------------------------------------------------------    13871800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           13876100
&XMF                SETC  ''          INITIALIZE XVARIABLE              13880400
.*-------------------------------------------------------------------   13884700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           13889000
.ZG299              ANOP  ,                                             13893300
&ZTLC               SETC 'S'                                            13897600
                    AIF   ('&MF(1)' NE '&ZTLC').ZG300                   13901900
&XMF                SETC  'S'         SET KEYWORD                       13906200
&XMFSCK             SETC  'COMPLETE'  SET XMFSCK                        13910500
                    AIF   (N'&MF LE 1).ZG299A   CK NUM                  13914800
&ZMS                SETC  '"MF='      *KPOSA* MNOTE                     13919100
&ZMS                SETC  '&ZMS.&MF"'                                   13923400
&ZMS                SETC  '&ZMS "MF"'                                   13927700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           13932000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       13936300
.ZG299A             ANOP  ,                                             13940600
.*-------------------------------------------------------------------   13944900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           13949200
.ZG300              ANOP  ,                                             13953500
&ZTLC               SETC 'L'                                            13957800
                    AIF   ('&MF(1)' NE '&ZTLC').ZG307                   13962100
&XMF                SETC  'L'         SET KEYWORD                       13966400
                    AIF   (N'&MF LE 3).ZG300A   CK NUM                  13970700
&ZMS                SETC  '"MF='      *KPOSA* MNOTE                     13975000
&ZMS                SETC  '&ZMS.&MF"'                                   13979300
&ZMS                SETC  '&ZMS "MF"'                                   13983600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          13987900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       13992200
.ZG300A             ANOP  ,                                             13996500
.*-------------------------------------------------------------------   14000800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     14005100
                    AIF   (N'&SYSLIST NE 0).ZG300B  POSITIONALS?        14009400
                    AIF   ('&REQUEST' NE '').ZG300B  KEYS?              14013700
                    AIF   ('&BUFLIST' NE '').ZG300B  KEYS?              14018000
                    AIF   ('&BUFNUM' NE '').ZG300B  KEYS?               14022300
                    AIF   ('&BUFTYPE' NE '').ZG300B  KEYS?              14026600
                    AIF   ('&CSMUSER' NE '').ZG300B  KEYS?              14030900
                    AIF   ('&GAP' NE '').ZG300B  KEYS?                  14035200
                    AIF   ('&ERRBFLST' NE '').ZG300B  KEYS?             14039500
                    AIF   ('&OWNERID' NE '').ZG300B  KEYS?              14043800
                    AIF   ('&TASKID' NE '').ZG300B  KEYS?               14048100
                    AIF   ('&THREAD' NE '').ZG300B  KEYS?               14052400
                    AIF   ('&UTILRTN' NE '').ZG300B  KEYS?              14056700
                    AIF   ('&SKIPBUF' NE '').ZG300B  KEYS?              14061000
                    AIF   ('&PAD' NE '').ZG300B  KEYS?                  14065300
                    AIF   ('&PADCHAR' NE '').ZG300B  KEYS?              14069600
                    AIF   ('&SRCERRL' NE '').ZG300B  KEYS?              14073900
                    AIF   ('&SRCGAP' NE '').ZG300B  KEYS?               14078200
                    AIF   ('&SRCLIST' NE '').ZG300B  KEYS?              14082500
                    AIF   ('&SRCNUM' NE '').ZG300B  KEYS?               14086800
                    AIF   ('&TARGERRL' NE '').ZG300B  KEYS?             14091100
                    AIF   ('&TARGGAP' NE '').ZG300B  KEYS?              14095400
                    AIF   ('&TARGLIST' NE '').ZG300B  KEYS?             14099700
                    AIF   ('&TARGNUM' NE '').ZG300B  KEYS?              14104000
                    AIF   ('&BUFSIZE' NE '').ZG300B  KEYS?              14108300
                    AIF   ('&BUFSOURC' NE '').ZG300B  KEYS?             14112600
                    AIF   ('&DS_INFO' NE '').ZG300B  KEYS?              14116900
                    AIF   ('&EXPBUF' NE '').ZG300B  KEYS?               14121200
                    AIF   ('&INITBUF' NE '').ZG300B  KEYS?              14125500
                    AIF   ('&MINFREE' NE '').ZG300B  KEYS?              14129800
                    AIF   ('&RETPTOKN' NE '').ZG300B  KEYS?             14134100
                    AIF   ('&STATAREA' NE '').ZG300B  KEYS?             14138400
                    AIF   ('&POOLTOKN' NE '').ZG300B  KEYS?             14142700
                    AIF   ('&WAIT' NE '').ZG300B  KEYS?                 14147000
                    AIF   ('&CLEAR' NE '').ZG300B  KEYS?                14151300
                    AIF   ('&FREETO' NE '').ZG300B  KEYS?               14155600
                    AIF   ('&FREERTN' NE '').ZG300B  KEYS?              14159900
                    AIF   ('&RETCODE' NE '').ZG300B  KEYS?              14164200
                    AIF   ('&RSNCODE' NE '').ZG300B  KEYS?              14168500
                    AGO    .ZG300C    INVOCATION OKAY                   14172800
.ZG300B             ANOP  ,                                             14177100
&ZMS                SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE          14181400
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          14185700
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     14190000
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        14194300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14198600
.ZG300C             ANOP  ,                                             14202900
.*-------------------------------------------------------------------   14207200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   14211500
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     14215800
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     14220100
                    AIF   (N'&MF(2) GT 1).ZG302B  MULTI PARMS           14224400
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     14228700
.ZG302B             AIF   (K'&MF(2) GT 0).ZG302C                        14233000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   14237300
&ZMS                SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*              14241600
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           14245900
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  14250200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14254500
.ZG302C             ANOP  ,                                             14258800
.*-------------------------------------------------------------------   14263100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               14267400
                    AIF   (K'&ZXMFCTRL LE 0).ZG302P  NOT I/O            14271700
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG302P               14276000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   14280300
&ZMS                SETC  '"MF='      *KGPRA* MNOTE                     14284600
&ZMS                SETC  '&ZMS.&MF"'                                   14288900
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     14293200
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             14297500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14301800
.ZG302P             ANOP  ,                                             14306100
.*-------------------------------------------------------------------   14310400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      14314700
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     14319000
&XMFATTR            SETC  '0D'                                          14323300
                    AIF   (K'&MF(3) LE 0).ZG305B  PARM                  14327600
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     14331900
                    AIF   (N'&MF(3) GT 1).ZG305B  MULTI PARMS           14336200
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     14340500
.ZG305B             ANOP  ,                                             14344800
.*-------------------------------------------------------------------   14349100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  14353400
                    AIF   (K'&ZXMFATTR LE 0).ZG305P  NOT I/O            14357700
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG305P               14362000
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   14366300
&ZMS                SETC  '"MF='      *KGPRA* MNOTE                     14370600
&ZMS                SETC  '&ZMS.&MF"'                                   14374900
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     14379200
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             14383500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14387800
.ZG305P             ANOP  ,                                             14392100
.*-------------------------------------------------------------------   14396400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 14400700
                    AIF   (K'&ZXMFATTR LE 0).ZG305S  NOT I/O            14405000
                    AIF   (K'&XMFATTR LE 60).ZG305S  LNG OK             14409300
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   14413600
&ZMS                SETC  '"MF='      *KLNGA* MNOTE                     14417900
&ZMS                SETC  '&ZMS.&MF"'                                   14422200
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         14426500
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            14430800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14435100
.ZG305S             ANOP  ,                                             14439400
.*-------------------------------------------------------------------   14443700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           14448000
.ZG307              ANOP  ,                                             14452300
&ZTLC               SETC 'M'                                            14456600
                    AIF   ('&MF(1)' NE '&ZTLC').ZG316                   14460900
&XMF                SETC  'M'         SET KEYWORD                       14465200
                    AIF   (N'&MF LE 3).ZG307A   CK NUM                  14469500
&ZMS                SETC  '"MF='      *KPOSA* MNOTE                     14473800
&ZMS                SETC  '&ZMS.&MF"'                                   14478100
&ZMS                SETC  '&ZMS "MF"'                                   14482400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          14486700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14491000
.ZG307A             ANOP  ,                                             14495300
.*-------------------------------------------------------------------   14499600
.***AG.KKCTL09 -MF(M) OUTPUT KEYS SPECIFIED?                            14503900
                    AIF   ('&ERRBFLST' NE '').ZG307B  OUTPUT SPECIFIED? 14508200
                    AIF   ('&SRCERRL' NE '').ZG307B                     14512500
                    AIF   ('&TARGERRL' NE '').ZG307B                    14516800
                    AIF   ('&DS_INFO' NE '').ZG307B                     14521100
                    AIF   ('&RETPTOKN' NE '').ZG307B                    14525400
                    AIF   ('&STATAREA' NE '').ZG307B                    14529700
                    AGO    .ZG307C    INVOCATION OKAY                   14534000
.ZG307B             ANOP  ,                                             14538300
&ZMS                SETC  'THE "M" FORM OF "MF" CANNOT'  *MFMOA* MNOTE  14542600
&ZMS                SETC  '&ZMS HAVE THE FOLLOWING OUTPUT KEY(S)'       14546900
&ZMS                SETC  '&ZMS SPECIFIED ON THE INVOCATION:'           14551200
&ZMS                SETC  '&ZMS "ERRBFLST"'     INVALID KEY             14555500
&ZMS                SETC  '&ZMS OR "SRCERRL"'   INVALID KEY             14559800
&ZMS                SETC  '&ZMS OR "TARGERRL"'  INVALID KEY             14564100
&ZMS                SETC  '&ZMS OR "DS_INFO"'   INVALID KEY             14568400
&ZMS                SETC  '&ZMS OR "RETPTOKN"'  INVALID KEY             14572700
&ZMS                SETC  '&ZMS OR "STATAREA"'  INVALID KEY             14577000
                    MNOTE 8,' &ZMS '  INVALID KEY                       14581300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14585600
.ZG307C             ANOP  ,                                             14589900
.*-------------------------------------------------------------------   14594200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   14598500
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     14602800
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     14607100
                    AIF   (N'&MF(2) GT 1).ZG309B  MULTI PARMS           14611400
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     14615700
.ZG309B             AIF   (K'&MF(2) GT 0).ZG309C                        14620000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   14624300
&ZMS                SETC  'WHEN "M" IS SPECIFIED'  *KRQDA*              14628600
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           14632900
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  14637200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14641500
.ZG309C             ANOP  ,                                             14645800
.*-------------------------------------------------------------------   14650100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              14654400
                    AIF   (K'&ZXMFCTRL LE 0).ZG309R  NOT I/O            14658700
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG309R               14663000
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    14667300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG309P                 14671600
                    AIF   (K'&ZCGPR GT 2).ZG309Q                        14675900
                    AIF   ('&ZCGPR' EQ '0').ZG309Q                      14680200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 14684500
                    AIF   (T'&ZCGPR NE 'N').ZG309Q  INVALID REG NAME    14688800
.ZG309P             ANOP  ,                                             14693100
                    AIF   (T'&ZCGPR NE 'N').ZG309R  NON NUMERIC         14697400
                    AIF   ('&ZCGPR' LT '1').ZG309Q                      14701700
                    AIF   ('&ZCGPR' LE '12').ZG309R                     14706000
.ZG309Q             ANOP  ,                                             14710300
&ZMS                SETC  '"MF='      *KGPRA* MNOTE                     14714600
&ZMS                SETC  '&ZMS.&MF"'                                   14718900
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     14723200
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              14727500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14731800
.ZG309R             ANOP  ,                                             14736100
.*-------------------------------------------------------------------   14740400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             14744700
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              14749000
.ZG313A   AIF   ('&MF(3)' NE 'COMPLETE').ZG314A                         14753300
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       14757600
.*-------------------------------------------------------------------   14761900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             14766200
.ZG314A   AIF   ('&MF(3)' NE 'NOCHECK').ZG315A                          14770500
&XMFSCK             SETC  'NOCHECK'   SET KEYWORD                       14774800
.*-------------------------------------------------------------------   14779100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             14783400
.ZG315A             AIF   (K'&XMFSCK GT 0).ZG315C  KEYWORD              14787700
                    AIF   (K'&MF(3) LE 0).ZG315B                        14792000
&ZMS                SETC  '"MF='      *KUKWA* MNOTE                     14796300
&ZMS                SETC  '&ZMS.&MF"'                                   14800600
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     14804900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           14809200
&ZMS                SETC  '&ZMS "COMPLETE"'     VALID KEYWORD           14813500
&ZMS                SETC  '&ZMS OR "NOCHECK".'  VALID KEYWORD           14817800
                    MNOTE 8,' &ZMS '                                    14822100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14826400
.ZG315B             ANOP  ,                                             14830700
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               14835000
.ZG315C             ANOP  ,                                             14839300
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     14843600
.*-------------------------------------------------------------------   14847900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           14852200
.ZG316              ANOP  ,                                             14856500
&ZTLC               SETC 'E'                                            14860800
                    AIF   ('&MF(1)' NE '&ZTLC').ZG325                   14865100
&XMF                SETC  'E'         SET KEYWORD                       14869400
                    AIF   (N'&MF LE 3).ZG316A   CK NUM                  14873700
&ZMS                SETC  '"MF='      *KPOSA* MNOTE                     14878000
&ZMS                SETC  '&ZMS.&MF"'                                   14882300
&ZMS                SETC  '&ZMS "MF"'                                   14886600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          14890900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14895200
.ZG316A             ANOP  ,                                             14899500
.*-------------------------------------------------------------------   14903800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   14908100
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     14912400
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     14916700
                    AIF   (N'&MF(2) GT 1).ZG318B  MULTI PARMS           14921000
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     14925300
.ZG318B             AIF   (K'&MF(2) GT 0).ZG318C                        14929600
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   14933900
&ZMS                SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*              14938200
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           14942500
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  14946800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       14951100
.ZG318C             ANOP  ,                                             14955400
.*-------------------------------------------------------------------   14959700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              14964000
                    AIF   (K'&ZXMFCTRL LE 0).ZG318R  NOT I/O            14968300
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG318R               14972600
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    14976900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG318P                 14981200
                    AIF   (K'&ZCGPR GT 2).ZG318Q                        14985500
                    AIF   ('&ZCGPR' EQ '0').ZG318Q                      14989800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 14994100
                    AIF   (T'&ZCGPR NE 'N').ZG318Q  INVALID REG NAME    14998400
.ZG318P             ANOP  ,                                             15002700
                    AIF   (T'&ZCGPR NE 'N').ZG318R  NON NUMERIC         15007000
                    AIF   ('&ZCGPR' LT '1').ZG318Q                      15011300
                    AIF   ('&ZCGPR' LE '12').ZG318R                     15015600
.ZG318Q             ANOP  ,                                             15019900
&ZMS                SETC  '"MF='      *KGPRA* MNOTE                     15024200
&ZMS                SETC  '&ZMS.&MF"'                                   15028500
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     15032800
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              15037100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15041400
.ZG318R             ANOP  ,                                             15045700
.*-------------------------------------------------------------------   15050000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             15054300
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              15058600
.ZG322A   AIF   ('&MF(3)' NE 'COMPLETE').ZG323A                         15062900
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       15067200
.*-------------------------------------------------------------------   15071500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             15075800
.ZG323A   AIF   ('&MF(3)' NE 'NOCHECK').ZG324A                          15080100
&XMFSCK             SETC  'NOCHECK'   SET KEYWORD                       15084400
.*-------------------------------------------------------------------   15088700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             15093000
.ZG324A             AIF   (K'&XMFSCK GT 0).ZG324C  KEYWORD              15097300
                    AIF   (K'&MF(3) LE 0).ZG324B                        15101600
&ZMS                SETC  '"MF='      *KUKWA* MNOTE                     15105900
&ZMS                SETC  '&ZMS.&MF"'                                   15110200
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     15114500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           15118800
&ZMS                SETC  '&ZMS "COMPLETE"'     VALID KEYWORD           15123100
&ZMS                SETC  '&ZMS OR "NOCHECK".'  VALID KEYWORD           15127400
                    MNOTE 8,' &ZMS '                                    15131700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15136000
.ZG324B             ANOP  ,                                             15140300
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               15144600
.ZG324C             ANOP  ,                                             15148900
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     15153200
.*------------------------------------------------------------------    15157500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           15161800
.ZG325              ANOP  ,                                             15166100
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     15170400
                    AIF   (K'&XMF GT 0).ZG325E  VALID ARG               15174700
                    AIF   (T'&MF EQ 'O').ZG325D  OMITTED                15179000
&ZASYSLNDX          SETA  0                                             15183300
.ZG325A             ANOP  ,           POSITIONAL MACRO KEY              15187600
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  15191900
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG325C             15196200
&ZTLC               SETC 'MF'                                           15200500
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG325A    15204800
.ZG325B             ANOP  ,                                             15209100
&ZXMF               SETC  ''          RESET IN/OUTPUT                   15213400
&ZMS                SETC  'THE "MF" KEY'        *KOPTA* MNOTE           15217700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       15222000
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              15226300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15230600
                    AGO   .ZG325E                                       15234900
.ZG325C             ANOP  ,                                             15239200
&ZXMF               SETC  ''          RESET IN/OUTPUT                   15243500
&ZMS                SETC  '"MF='      *KUKWA* MNOTE                     15247800
&ZMS                SETC  '&ZMS.&MF"'                                   15252100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     15256400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           15260700
&ZMS                SETC  '&ZMS "S",'           VALID KEYWORD           15265000
&ZMS                SETC  '&ZMS "L",'           VALID KEYWORD           15269300
&ZMS                SETC  '&ZMS "M",'           VALID KEYWORD           15273600
&ZMS                SETC  '&ZMS OR "E".'        VALID KEYWORD           15277900
                    MNOTE 8,' &ZMS '                                    15282200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15286500
                    AGO   .ZG325E                                       15290800
.ZG325D             ANOP  ,                                             15295100
&XMF                SETC  'S'         SET DEFAULT KEYWORD               15299400
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 15303700
.ZG325E             ANOP  ,                                             15308000
.********************************************************************   15312300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 15316600
.********************************************************************   15320900
                    ACTR  10000                                         15325200
.*-------------------------------------------------------------------   15329500
.***AG.MF03 MF=(SLME)                                                   15333800
                    AIF   ('&XMF' EQ 'L').ZGMFX                         15338100
                    AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX               15342400
.*------------------------------------------------------------------    15346700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           15351000
&XREQUEST           SETC  ''          INITIALIZE XVARIABLE              15355300
.*-------------------------------------------------------------------   15359600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           15363900
.ZG3                ANOP  ,                                             15368200
                    AIF   (K'&REQUEST(1) LE 0).ZG3A                     15372500
&ZTLC               SETC 'ASSIGN_BUFFER'                                15376800
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG39               15381100
&XREQUEST           SETC  'ASSIGN_BUFFER'       SET KEYWORD             15385400
                    AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                15389700
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           15394000
&ZMS                SETC  '&ZMS.&REQUEST"'                              15398300
&ZMS                SETC  '&ZMS "REQUEST"'                              15402600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           15406900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15411200
.ZG3A               ANOP  ,                                             15415500
.*------------------------------------------------------------------    15419800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           15424100
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       15428400
.ZG3A0              AIF   (K'&SKIPBUF LE 0).ZG3A1  OK                   15432700
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      15437000
.ZG3A1              AIF   (K'&PAD LE 0).ZG3A2   OK                      15441300
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      15445600
.ZG3A2              AIF   (K'&PADCHAR LE 0).ZG3A3  OK                   15449900
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      15454200
.ZG3A3              AIF   (K'&SRCERRL LE 0).ZG3A4  OK                   15458500
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      15462800
.ZG3A4              AIF   (K'&SRCGAP LE 0).ZG3A5  OK                    15467100
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      15471400
.ZG3A5              AIF   (K'&SRCLIST LE 0).ZG3A6  OK                   15475700
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      15480000
.ZG3A6              AIF   (K'&SRCNUM LE 0).ZG3A7  OK                    15484300
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      15488600
.ZG3A7              AIF   (K'&TARGERRL LE 0).ZG3A8  OK                  15492900
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      15497200
.ZG3A8              AIF   (K'&TARGGAP LE 0).ZG3A9  OK                   15501500
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      15505800
.ZG3A9              AIF   (K'&TARGLIST LE 0).ZG3A10  OK                 15510100
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      15514400
.ZG3A10             AIF   (K'&TARGNUM LE 0).ZG3A11  OK                  15518700
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      15523000
.ZG3A11             AIF   (K'&BUFSIZE LE 0).ZG3A12  OK                  15527300
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      15531600
.ZG3A12             AIF   (K'&BUFSOURC LE 0).ZG3A13  OK                 15535900
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      15540200
.ZG3A13             AIF   (K'&DS_INFO LE 0).ZG3A14  OK                  15544500
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      15548800
.ZG3A14             AIF   (K'&EXPBUF LE 0).ZG3A15  OK                   15553100
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      15557400
.ZG3A15             AIF   (K'&INITBUF LE 0).ZG3A16  OK                  15561700
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      15566000
.ZG3A16             AIF   (K'&MINFREE LE 0).ZG3A17  OK                  15570300
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      15574600
.ZG3A17             AIF   (K'&RETPTOKN LE 0).ZG3A18  OK                 15578900
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      15583200
.ZG3A18             AIF   (K'&STATAREA LE 0).ZG3A19  OK                 15587500
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      15591800
.ZG3A19             AIF   (K'&POOLTOKN LE 0).ZG3A20  OK                 15596100
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      15600400
.ZG3A20             AIF   (K'&WAIT LE 0).ZG3A21  OK                     15604700
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      15609000
.ZG3A21             AIF   (K'&CLEAR LE 0).ZG3A22  OK                    15613300
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      15617600
.ZG3A22             AIF   (K'&FREETO LE 0).ZG3A23  OK                   15621900
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      15626200
.ZG3A23             AIF   (K'&FREERTN LE 0).ZG3A24  OK                  15630500
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      15634800
.ZG3A24             AIF   (K'&ZCVAL LE 0).ZG3A25  OK                    15639100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         15643400
                    AIF  (K'&ZCVAL LE 160).ZG3A25A                      15647700
&ZCVAL              SETC '&ZCVAL'(1,160)                                15652000
&ZCVAL              SETC '&ZCVAL....'                                   15656300
.ZG3A25A            ANOP                                                15660600
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     15664900
&ZMS                SETC  '&ZMS.=&REQUEST"'                             15669200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          15673500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          15677800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15682100
.ZG3A25             ANOP  ,                                             15686400
.*----------------------------------------------------------------***   15690700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     15695000
                    AIF   (N'&BUFLIST LE 1).ZG5A  CK NUM                15699300
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           15703600
&ZMS                SETC  '&ZMS.&BUFLIST"'                              15707900
&ZMS                SETC  '&ZMS "BUFLIST"'                              15712200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           15716500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15720800
.ZG5A               ANOP  ,                                             15725100
.*-------------------------------------------------------------------   15729400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         15733700
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     15738000
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           15742300
                    AIF   (N'&BUFLIST GT 1).ZG5B  MULTI PARMS           15746600
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     15750900
.ZG5B               AIF   (K'&BUFLIST(1) GT 0).ZG5C                     15755200
&ZXBUFLIST          SETC  ''          RESET IN/OUTPUT                   15759500
&ZMS                SETC  ' '         *KRQDA*                           15763800
&ZMS                SETC  '&ZMS "BUFLIST" KEY AND ITS ARGUMENT'         15768100
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       15772400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15776700
.ZG5C               ANOP  ,                                             15781000
.*-------------------------------------------------------------------   15785300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    15789600
                    AIF   (K'&ZXBUFLIST LE 0).ZG5R  NOT I/O             15793900
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZG5R                15798200
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  15802500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                   15806800
                    AIF   (K'&ZCGPR GT 2).ZG5Q                          15811100
                    AIF   ('&ZCGPR' EQ '0').ZG5Q                        15815400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 15819700
                    AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME      15824000
.ZG5P               ANOP  ,                                             15828300
                    AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC           15832600
                    AIF   ('&ZCGPR' LT '2').ZG5Q                        15836900
                    AIF   ('&ZCGPR' LE '12').ZG5R                       15841200
.ZG5Q               ANOP  ,                                             15845500
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           15849800
&ZMS                SETC  '&ZMS.&BUFLIST"'                              15854100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     15858400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              15862700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15867000
.ZG5R               ANOP  ,                                             15871300
.*----------------------------------------------------------------***   15875600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     15879900
                    AIF   (N'&BUFNUM LE 1).ZG8A  CK NUM                 15884200
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     15888500
&ZMS                SETC  '&ZMS.&BUFNUM"'                               15892800
&ZMS                SETC  '&ZMS "BUFNUM"'                               15897100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           15901400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15905700
.ZG8A               ANOP  ,                                             15910000
.*-------------------------------------------------------------------   15914300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         15918600
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     15922900
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           15927200
                    AIF   (N'&BUFNUM GT 1).ZG8B  MULTI PARMS            15931500
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     15935800
.ZG8B               AIF   (K'&BUFNUM(1) GT 0).ZG8C                      15940100
&ZXBUFNUM           SETC  ''          RESET IN/OUTPUT                   15944400
&ZMS                SETC  ' '         *KRQDA*                           15948700
&ZMS                SETC  '&ZMS "BUFNUM" KEY AND ITS ARGUMENT'          15953000
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       15957300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       15961600
.ZG8C               ANOP  ,                                             15965900
.*-------------------------------------------------------------------   15970200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    15974500
                    AIF   (K'&ZXBUFNUM LE 0).ZG8R  NOT I/O              15978800
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZG8R                 15983100
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    15987400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                   15991700
                    AIF   (K'&ZCGPR GT 2).ZG8Q                          15996000
                    AIF   ('&ZCGPR' EQ '0').ZG8Q                        16000300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 16004600
                    AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME      16008900
.ZG8P               ANOP  ,                                             16013200
                    AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC           16017500
                    AIF   ('&ZCGPR' LT '2').ZG8Q                        16021800
                    AIF   ('&ZCGPR' LE '12').ZG8R                       16026100
.ZG8Q               ANOP  ,                                             16030400
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     16034700
&ZMS                SETC  '&ZMS.&BUFNUM"'                               16039000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     16043300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              16047600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16051900
.ZG8R               ANOP  ,                                             16056200
.*----------------------------------------------------------------***   16060500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16064800
                    AIF   (N'&BUFTYPE LE 1).ZG11A  CK NUM               16069100
&ZMS                SETC  '"BUFTYPE='           *KPOSA* MNOTE           16073400
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              16077700
&ZMS                SETC  '&ZMS "BUFTYPE"'                              16082000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           16086300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16090600
.ZG11A              ANOP  ,                                             16094900
.*-------------------------------------------------------------------   16099200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16103500
&XBUFTYPE           SETC  ''          INITIALIZE XVARIABLE              16107800
.ZG12A   AIF   ('&BUFTYPE(1)' NE 'SAME').ZG13A                          16112100
&XBUFTYPE           SETC  'SAME'      SET KEYWORD                       16116400
.*-------------------------------------------------------------------   16120700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16125000
.ZG13A   AIF   ('&BUFTYPE(1)' NE 'PAGEELIG').ZG14A                      16129300
&XBUFTYPE           SETC  'PAGEELIG'  SET KEYWORD                       16133600
.*-------------------------------------------------------------------   16137900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16142200
.ZG14A   AIF   ('&BUFTYPE(1)' NE 'FIXED').ZG15A                         16146500
&XBUFTYPE           SETC  'FIXED'     SET KEYWORD                       16150800
.*-------------------------------------------------------------------   16155100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16159400
.ZG15A              AIF   (K'&XBUFTYPE GT 0).ZG15C  KEYWORD             16163700
                    AIF   (K'&BUFTYPE(1) LE 0).ZG15B                    16168000
&ZMS                SETC  '"BUFTYPE='           *KUKWA* MNOTE           16172300
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              16176600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     16180900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           16185200
&ZMS                SETC  '&ZMS "SAME",'        VALID KEYWORD           16189500
&ZMS                SETC  '&ZMS "PAGEELIG",'    VALID KEYWORD           16193800
&ZMS                SETC  '&ZMS OR "FIXED".'    VALID KEYWORD           16198100
                    MNOTE 8,' &ZMS '                                    16202400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16206700
.ZG15B              ANOP  ,                                             16211000
&XBUFTYPE           SETC  'SAME'      SET DEFAULT KEYWORD               16215300
.ZG15C              ANOP  ,                                             16219600
&ZXBUFTYPE          SETC  'INPUT'     SET IN/OUTPUT                     16223900
.*----------------------------------------------------------------***   16228200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16232500
                    AIF   (N'&CSMUSER LE 1).ZG17A  CK NUM               16236800
&ZMS                SETC  '"CSMUSER='           *KPOSA* MNOTE           16241100
&ZMS                SETC  '&ZMS.&CSMUSER"'                              16245400
&ZMS                SETC  '&ZMS "CSMUSER"'                              16249700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           16254000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16258300
.ZG17A              ANOP  ,                                             16262600
.*-------------------------------------------------------------------   16266900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16271200
&XCSMUSER           SETC  ''          INITIALIZE XVARIABLE              16275500
.ZG18A   AIF   ('&CSMUSER(1)' NE 'NO').ZG19A                            16279800
&XCSMUSER           SETC  'NO'        SET KEYWORD                       16284100
.*-------------------------------------------------------------------   16288400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16292700
.ZG19A   AIF   ('&CSMUSER(1)' NE 'YES').ZG20A                           16297000
&XCSMUSER           SETC  'YES'       SET KEYWORD                       16301300
.*-------------------------------------------------------------------   16305600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             16309900
.ZG20A              AIF   (K'&XCSMUSER GT 0).ZG20C  KEYWORD             16314200
                    AIF   (K'&CSMUSER(1) LE 0).ZG20B                    16318500
&ZMS                SETC  '"CSMUSER='           *KUKWA* MNOTE           16322800
&ZMS                SETC  '&ZMS.&CSMUSER"'                              16327100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     16331400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           16335700
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           16340000
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           16344300
                    MNOTE 8,' &ZMS '                                    16348600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16352900
.ZG20B              ANOP  ,                                             16357200
&XCSMUSER           SETC  'NO'        SET DEFAULT KEYWORD               16361500
.ZG20C              ANOP  ,                                             16365800
&ZXCSMUSER          SETC  'INPUT'     SET IN/OUTPUT                     16370100
.*----------------------------------------------------------------***   16374400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     16378700
                    AIF   (N'&GAP LE 1).ZG22A   CK NUM                  16383000
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     16387300
&ZMS                SETC  '&ZMS.&GAP"'                                  16391600
&ZMS                SETC  '&ZMS "GAP"'                                  16395900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           16400200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16404500
.ZG22A              ANOP  ,                                             16408800
.*-------------------------------------------------------------------   16413100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         16417400
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     16421700
&XGAP               SETC  '0'                                           16426000
                    AIF   (K'&GAP(1) LE 0).ZG22B  PARM                  16430300
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     16434600
                    AIF   (N'&GAP GT 1).ZG22B   MULTI PARMS             16438900
&XGAP               SETC  '&GAP'      SET XVARIABLE                     16443200
.ZG22B              ANOP  ,                                             16447500
.*-------------------------------------------------------------------   16451800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    16456100
                    AIF   (K'&ZXGAP LE 0).ZG22R  NOT I/O                16460400
                    AIF   ('&XGAP' EQ '0').ZG22R                        16464700
                    AIF   ('&XGAP'(1,1) NE '(').ZG22R                   16469000
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          16473300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                  16477600
                    AIF   (K'&ZCGPR GT 2).ZG22Q                         16481900
                    AIF   ('&ZCGPR' EQ '0').ZG22Q                       16486200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 16490500
                    AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME     16494800
.ZG22P              ANOP  ,                                             16499100
                    AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC          16503400
                    AIF   ('&ZCGPR' LT '2').ZG22Q                       16507700
                    AIF   ('&ZCGPR' LE '12').ZG22R                      16512000
.ZG22Q              ANOP  ,                                             16516300
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     16520600
&ZMS                SETC  '&ZMS.&GAP"'                                  16524900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     16529200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              16533500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16537800
.ZG22R              ANOP  ,                                             16542100
.*-------------------------------------------------------------------   16546400
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             16550700
                    AIF   ('&XMF' EQ 'M').ZG26  BYPASS IF MF=M          16555000
.*----------------------------------------------------------------***   16559300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    16563600
                    AIF   (N'&ERRBFLST LE 1).ZG25A  CK NUM              16567900
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           16572200
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             16576500
&ZMS                SETC  '&ZMS "ERRBFLST"'                             16580800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           16585100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16589400
.ZG25A              ANOP  ,                                             16593700
.*-------------------------------------------------------------------   16598000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        16602300
                    AIF   (K'&ERRBFLST(1) LE 0).ZG25C  NO PARM          16606600
&ZXERRBFLST         SETC  'OUTPUT'    SET OUTPUT                        16610900
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           16615200
                    AIF   (N'&ERRBFLST GT 1).ZG25C                      16619500
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           16623800
.ZG25C              ANOP  ,                                             16628100
.*-------------------------------------------------------------------   16632400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   16636700
                    AIF   (K'&ZXERRBFLST LE 0).ZG25R  NOT I/O           16641000
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZG25R              16645300
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                16649600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                  16653900
                    AIF   (K'&ZCGPR GT 2).ZG25Q                         16658200
                    AIF   ('&ZCGPR' EQ '0').ZG25Q                       16662500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 16666800
                    AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME     16671100
.ZG25P              ANOP  ,                                             16675400
                    AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC          16679700
                    AIF   ('&ZCGPR' LT '2').ZG25Q                       16684000
                    AIF   ('&ZCGPR' LE '12').ZG25R                      16688300
.ZG25Q              ANOP  ,                                             16692600
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           16696900
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             16701200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     16705500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              16709800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16714100
.ZG25R              ANOP  ,                                             16718400
.*-------------------------------------------------------------------   16722700
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               16727000
.ZG26               ANOP  ,           END OF BYPASS CHECK               16731300
.*----------------------------------------------------------------***   16735600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     16739900
                    AIF   (N'&OWNERID LE 1).ZG28A  CK NUM               16744200
&ZMS                SETC  '"OWNERID='           *KPOSA* MNOTE           16748500
&ZMS                SETC  '&ZMS.&OWNERID"'                              16752800
&ZMS                SETC  '&ZMS "OWNERID"'                              16757100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           16761400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16765700
.ZG28A              ANOP  ,                                             16770000
.*-------------------------------------------------------------------   16774300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         16778600
&ZXOWNERID          SETC  'INPUT'     SET IN/OUTPUT                     16782900
&XOWNERID           SETC  '0'                                           16787200
                    AIF   (K'&OWNERID(1) LE 0).ZG28B  PARM              16791500
&XOWNERID           SETC  '&OWNERID(1)'         SET XVARIABLE           16795800
                    AIF   (N'&OWNERID GT 1).ZG28B  MULTI PARMS          16800100
&XOWNERID           SETC  '&OWNERID'  SET XVARIABLE                     16804400
.ZG28B              ANOP  ,                                             16808700
.*-------------------------------------------------------------------   16813000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    16817300
                    AIF   (K'&ZXOWNERID LE 0).ZG28R  NOT I/O            16821600
                    AIF   ('&XOWNERID' EQ '0').ZG28R                    16825900
                    AIF   ('&XOWNERID'(1,1) NE '(').ZG28R               16830200
&ZCGPR              SETC  '&XOWNERID'(2,K'&XOWNERID-2)                  16834500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                  16838800
                    AIF   (K'&ZCGPR GT 2).ZG28Q                         16843100
                    AIF   ('&ZCGPR' EQ '0').ZG28Q                       16847400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 16851700
                    AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME     16856000
.ZG28P              ANOP  ,                                             16860300
                    AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC          16864600
                    AIF   ('&ZCGPR' LT '2').ZG28Q                       16868900
                    AIF   ('&ZCGPR' LE '12').ZG28R                      16873200
.ZG28Q              ANOP  ,                                             16877500
&ZMS                SETC  '"OWNERID='           *KGPRA* MNOTE           16881800
&ZMS                SETC  '&ZMS.&OWNERID"'                              16886100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     16890400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              16894700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16899000
.ZG28R              ANOP  ,                                             16903300
.*----------------------------------------------------------------***   16907600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     16911900
                    AIF   (N'&TASKID LE 1).ZG31A  CK NUM                16916200
&ZMS                SETC  '"TASKID='  *KPOSA* MNOTE                     16920500
&ZMS                SETC  '&ZMS.&TASKID"'                               16924800
&ZMS                SETC  '&ZMS "TASKID"'                               16929100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           16933400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       16937700
.ZG31A              ANOP  ,                                             16942000
.*-------------------------------------------------------------------   16946300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         16950600
&ZXTASKID           SETC  'INPUT'     SET IN/OUTPUT                     16954900
&XTASKID            SETC  '0'                                           16959200
                    AIF   (K'&TASKID(1) LE 0).ZG31B  PARM               16963500
&XTASKID            SETC  '&TASKID(1)'          SET XVARIABLE           16967800
                    AIF   (N'&TASKID GT 1).ZG31B  MULTI PARMS           16972100
&XTASKID            SETC  '&TASKID'   SET XVARIABLE                     16976400
.ZG31B              ANOP  ,                                             16980700
.*-------------------------------------------------------------------   16985000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    16989300
                    AIF   (K'&ZXTASKID LE 0).ZG31R  NOT I/O             16993600
                    AIF   ('&XTASKID' EQ '0').ZG31R                     16997900
                    AIF   ('&XTASKID'(1,1) NE '(').ZG31R                17002200
&ZCGPR              SETC  '&XTASKID'(2,K'&XTASKID-2)                    17006500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                  17010800
                    AIF   (K'&ZCGPR GT 2).ZG31Q                         17015100
                    AIF   ('&ZCGPR' EQ '0').ZG31Q                       17019400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 17023700
                    AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME     17028000
.ZG31P              ANOP  ,                                             17032300
                    AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC          17036600
                    AIF   ('&ZCGPR' LT '2').ZG31Q                       17040900
                    AIF   ('&ZCGPR' LE '12').ZG31R                      17045200
.ZG31Q              ANOP  ,                                             17049500
&ZMS                SETC  '"TASKID='  *KGPRA* MNOTE                     17053800
&ZMS                SETC  '&ZMS.&TASKID"'                               17058100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     17062400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              17066700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17071000
.ZG31R              ANOP  ,                                             17075300
.*----------------------------------------------------------------***   17079600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     17083900
                    AIF   (N'&THREAD LE 1).ZG34A  CK NUM                17088200
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     17092500
&ZMS                SETC  '&ZMS.&THREAD"'                               17096800
&ZMS                SETC  '&ZMS "THREAD"'                               17101100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           17105400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17109700
.ZG34A              ANOP  ,                                             17114000
.*-------------------------------------------------------------------   17118300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         17122600
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     17126900
&XTHREAD            SETC  '0'                                           17131200
                    AIF   (K'&THREAD(1) LE 0).ZG34B  PARM               17135500
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           17139800
                    AIF   (N'&THREAD GT 1).ZG34B  MULTI PARMS           17144100
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     17148400
.ZG34B              ANOP  ,                                             17152700
.*-------------------------------------------------------------------   17157000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    17161300
                    AIF   (K'&ZXTHREAD LE 0).ZG34R  NOT I/O             17165600
                    AIF   ('&XTHREAD' EQ '0').ZG34R                     17169900
                    AIF   ('&XTHREAD'(1,1) NE '(').ZG34R                17174200
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    17178500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                  17182800
                    AIF   (K'&ZCGPR GT 2).ZG34Q                         17187100
                    AIF   ('&ZCGPR' EQ '0').ZG34Q                       17191400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 17195700
                    AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME     17200000
.ZG34P              ANOP  ,                                             17204300
                    AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC          17208600
                    AIF   ('&ZCGPR' LT '2').ZG34Q                       17212900
                    AIF   ('&ZCGPR' LE '12').ZG34R                      17217200
.ZG34Q              ANOP  ,                                             17221500
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     17225800
&ZMS                SETC  '&ZMS.&THREAD"'                               17230100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     17234400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              17238700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17243000
.ZG34R              ANOP  ,                                             17247300
.*----------------------------------------------------------------***   17251600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     17255900
                    AIF   (N'&UTILRTN LE 1).ZG37A  CK NUM               17260200
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           17264500
&ZMS                SETC  '&ZMS.&UTILRTN"'                              17268800
&ZMS                SETC  '&ZMS "UTILRTN"'                              17273100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           17277400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17281700
.ZG37A              ANOP  ,                                             17286000
.*-------------------------------------------------------------------   17290300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         17294600
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     17298900
&XUTILRTN           SETC  '0'                                           17303200
                    AIF   (K'&UTILRTN(1) LE 0).ZG37B  PARM              17307500
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           17311800
                    AIF   (N'&UTILRTN GT 1).ZG37B  MULTI PARMS          17316100
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     17320400
.ZG37B              ANOP  ,                                             17324700
.*-------------------------------------------------------------------   17329000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    17333300
                    AIF   (K'&ZXUTILRTN LE 0).ZG37R  NOT I/O            17337600
                    AIF   ('&XUTILRTN' EQ '0').ZG37R                    17341900
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZG37R               17346200
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  17350500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                  17354800
                    AIF   (K'&ZCGPR GT 2).ZG37Q                         17359100
                    AIF   ('&ZCGPR' EQ '0').ZG37Q                       17363400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 17367700
                    AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME     17372000
.ZG37P              ANOP  ,                                             17376300
                    AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC          17380600
                    AIF   ('&ZCGPR' LT '2').ZG37Q                       17384900
                    AIF   ('&ZCGPR' LE '12').ZG37R                      17389200
.ZG37Q              ANOP  ,                                             17393500
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           17397800
&ZMS                SETC  '&ZMS.&UTILRTN"'                              17402100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     17406400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              17410700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17415000
.ZG37R              ANOP  ,                                             17419300
.*-------------------------------------------------------------------   17423600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           17427900
.ZG39               ANOP  ,                                             17432200
&ZTLC               SETC 'CHANGE_OWNER'                                 17436500
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG74               17440800
&XREQUEST           SETC  'CHANGE_OWNER'        SET KEYWORD             17445100
                    AIF   (N'&REQUEST LE 1).ZG39A  CK NUM               17449400
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           17453700
&ZMS                SETC  '&ZMS.&REQUEST"'                              17458000
&ZMS                SETC  '&ZMS "REQUEST"'                              17462300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           17466600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17470900
.ZG39A              ANOP  ,                                             17475200
.*------------------------------------------------------------------    17479500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           17483800
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       17488100
.ZG39A0             AIF   (K'&BUFTYPE LE 0).ZG39A1  OK                  17492400
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      17496700
.ZG39A1             AIF   (K'&PAD LE 0).ZG39A2  OK                      17501000
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      17505300
.ZG39A2             AIF   (K'&PADCHAR LE 0).ZG39A3  OK                  17509600
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      17513900
.ZG39A3             AIF   (K'&SRCERRL LE 0).ZG39A4  OK                  17518200
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      17522500
.ZG39A4             AIF   (K'&SRCGAP LE 0).ZG39A5  OK                   17526800
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      17531100
.ZG39A5             AIF   (K'&SRCLIST LE 0).ZG39A6  OK                  17535400
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      17539700
.ZG39A6             AIF   (K'&SRCNUM LE 0).ZG39A7  OK                   17544000
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      17548300
.ZG39A7             AIF   (K'&TARGERRL LE 0).ZG39A8  OK                 17552600
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      17556900
.ZG39A8             AIF   (K'&TARGGAP LE 0).ZG39A9  OK                  17561200
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      17565500
.ZG39A9             AIF   (K'&TARGLIST LE 0).ZG39A10  OK                17569800
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      17574100
.ZG39A10            AIF   (K'&TARGNUM LE 0).ZG39A11  OK                 17578400
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      17582700
.ZG39A11            AIF   (K'&BUFSIZE LE 0).ZG39A12  OK                 17587000
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      17591300
.ZG39A12            AIF   (K'&BUFSOURC LE 0).ZG39A13  OK                17595600
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      17599900
.ZG39A13            AIF   (K'&DS_INFO LE 0).ZG39A14  OK                 17604200
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      17608500
.ZG39A14            AIF   (K'&EXPBUF LE 0).ZG39A15  OK                  17612800
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      17617100
.ZG39A15            AIF   (K'&INITBUF LE 0).ZG39A16  OK                 17621400
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      17625700
.ZG39A16            AIF   (K'&MINFREE LE 0).ZG39A17  OK                 17630000
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      17634300
.ZG39A17            AIF   (K'&RETPTOKN LE 0).ZG39A18  OK                17638600
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      17642900
.ZG39A18            AIF   (K'&STATAREA LE 0).ZG39A19  OK                17647200
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      17651500
.ZG39A19            AIF   (K'&POOLTOKN LE 0).ZG39A20  OK                17655800
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      17660100
.ZG39A20            AIF   (K'&WAIT LE 0).ZG39A21  OK                    17664400
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      17668700
.ZG39A21            AIF   (K'&CLEAR LE 0).ZG39A22  OK                   17673000
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      17677300
.ZG39A22            AIF   (K'&FREETO LE 0).ZG39A23  OK                  17681600
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      17685900
.ZG39A23            AIF   (K'&FREERTN LE 0).ZG39A24  OK                 17690200
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      17694500
.ZG39A24            AIF   (K'&ZCVAL LE 0).ZG39A25  OK                   17698800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         17703100
                    AIF  (K'&ZCVAL LE 160).ZG39A25A                     17707400
&ZCVAL              SETC '&ZCVAL'(1,160)                                17711700
&ZCVAL              SETC '&ZCVAL....'                                   17716000
.ZG39A25A           ANOP                                                17720300
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     17724600
&ZMS                SETC  '&ZMS.=&REQUEST"'                             17728900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          17733200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          17737500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17741800
.ZG39A25            ANOP  ,                                             17746100
.*----------------------------------------------------------------***   17750400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     17754700
                    AIF   (N'&BUFLIST LE 1).ZG41A  CK NUM               17759000
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           17763300
&ZMS                SETC  '&ZMS.&BUFLIST"'                              17767600
&ZMS                SETC  '&ZMS "BUFLIST"'                              17771900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           17776200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17780500
.ZG41A              ANOP  ,                                             17784800
.*-------------------------------------------------------------------   17789100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         17793400
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     17797700
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           17802000
                    AIF   (N'&BUFLIST GT 1).ZG41B  MULTI PARMS          17806300
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     17810600
.ZG41B              AIF   (K'&BUFLIST(1) GT 0).ZG41C                    17814900
&ZXBUFLIST          SETC  ''          RESET IN/OUTPUT                   17819200
&ZMS                SETC  ' '         *KRQDA*                           17823500
&ZMS                SETC  '&ZMS "BUFLIST" KEY AND ITS ARGUMENT'         17827800
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       17832100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17836400
.ZG41C              ANOP  ,                                             17840700
.*-------------------------------------------------------------------   17845000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    17849300
                    AIF   (K'&ZXBUFLIST LE 0).ZG41R  NOT I/O            17853600
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZG41R               17857900
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  17862200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                  17866500
                    AIF   (K'&ZCGPR GT 2).ZG41Q                         17870800
                    AIF   ('&ZCGPR' EQ '0').ZG41Q                       17875100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 17879400
                    AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME     17883700
.ZG41P              ANOP  ,                                             17888000
                    AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC          17892300
                    AIF   ('&ZCGPR' LT '2').ZG41Q                       17896600
                    AIF   ('&ZCGPR' LE '12').ZG41R                      17900900
.ZG41Q              ANOP  ,                                             17905200
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           17909500
&ZMS                SETC  '&ZMS.&BUFLIST"'                              17913800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     17918100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              17922400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17926700
.ZG41R              ANOP  ,                                             17931000
.*----------------------------------------------------------------***   17935300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     17939600
                    AIF   (N'&BUFNUM LE 1).ZG44A  CK NUM                17943900
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     17948200
&ZMS                SETC  '&ZMS.&BUFNUM"'                               17952500
&ZMS                SETC  '&ZMS "BUFNUM"'                               17956800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           17961100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       17965400
.ZG44A              ANOP  ,                                             17969700
.*-------------------------------------------------------------------   17974000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         17978300
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     17982600
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           17986900
                    AIF   (N'&BUFNUM GT 1).ZG44B  MULTI PARMS           17991200
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     17995500
.ZG44B              AIF   (K'&BUFNUM(1) GT 0).ZG44C                     17999800
&ZXBUFNUM           SETC  ''          RESET IN/OUTPUT                   18004100
&ZMS                SETC  ' '         *KRQDA*                           18008400
&ZMS                SETC  '&ZMS "BUFNUM" KEY AND ITS ARGUMENT'          18012700
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       18017000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18021300
.ZG44C              ANOP  ,                                             18025600
.*-------------------------------------------------------------------   18029900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    18034200
                    AIF   (K'&ZXBUFNUM LE 0).ZG44R  NOT I/O             18038500
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZG44R                18042800
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    18047100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                  18051400
                    AIF   (K'&ZCGPR GT 2).ZG44Q                         18055700
                    AIF   ('&ZCGPR' EQ '0').ZG44Q                       18060000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 18064300
                    AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME     18068600
.ZG44P              ANOP  ,                                             18072900
                    AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC          18077200
                    AIF   ('&ZCGPR' LT '2').ZG44Q                       18081500
                    AIF   ('&ZCGPR' LE '12').ZG44R                      18085800
.ZG44Q              ANOP  ,                                             18090100
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     18094400
&ZMS                SETC  '&ZMS.&BUFNUM"'                               18098700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     18103000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              18107300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18111600
.ZG44R              ANOP  ,                                             18115900
.*----------------------------------------------------------------***   18120200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18124500
                    AIF   (N'&CSMUSER LE 1).ZG47A  CK NUM               18128800
&ZMS                SETC  '"CSMUSER='           *KPOSA* MNOTE           18133100
&ZMS                SETC  '&ZMS.&CSMUSER"'                              18137400
&ZMS                SETC  '&ZMS "CSMUSER"'                              18141700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           18146000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18150300
.ZG47A              ANOP  ,                                             18154600
.*-------------------------------------------------------------------   18158900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18163200
&XCSMUSER           SETC  ''          INITIALIZE XVARIABLE              18167500
.ZG48A   AIF   ('&CSMUSER(1)' NE 'NO').ZG49A                            18171800
&XCSMUSER           SETC  'NO'        SET KEYWORD                       18176100
.*-------------------------------------------------------------------   18180400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18184700
.ZG49A   AIF   ('&CSMUSER(1)' NE 'YES').ZG50A                           18189000
&XCSMUSER           SETC  'YES'       SET KEYWORD                       18193300
.*-------------------------------------------------------------------   18197600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18201900
.ZG50A              AIF   (K'&XCSMUSER GT 0).ZG50C  KEYWORD             18206200
                    AIF   (K'&CSMUSER(1) LE 0).ZG50B                    18210500
&ZMS                SETC  '"CSMUSER='           *KUKWA* MNOTE           18214800
&ZMS                SETC  '&ZMS.&CSMUSER"'                              18219100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     18223400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           18227700
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           18232000
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           18236300
                    MNOTE 8,' &ZMS '                                    18240600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18244900
.ZG50B              ANOP  ,                                             18249200
&XCSMUSER           SETC  'NO'        SET DEFAULT KEYWORD               18253500
.ZG50C              ANOP  ,                                             18257800
&ZXCSMUSER          SETC  'INPUT'     SET IN/OUTPUT                     18262100
.*-------------------------------------------------------------------   18266400
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             18270700
                    AIF   ('&XMF' EQ 'M').ZG53  BYPASS IF MF=M          18275000
.*----------------------------------------------------------------***   18279300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    18283600
                    AIF   (N'&ERRBFLST LE 1).ZG52A  CK NUM              18287900
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           18292200
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             18296500
&ZMS                SETC  '&ZMS "ERRBFLST"'                             18300800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           18305100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18309400
.ZG52A              ANOP  ,                                             18313700
.*-------------------------------------------------------------------   18318000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        18322300
                    AIF   (K'&ERRBFLST(1) LE 0).ZG52C  NO PARM          18326600
&ZXERRBFLST         SETC  'OUTPUT'    SET OUTPUT                        18330900
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           18335200
                    AIF   (N'&ERRBFLST GT 1).ZG52C                      18339500
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           18343800
.ZG52C              ANOP  ,                                             18348100
.*-------------------------------------------------------------------   18352400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   18356700
                    AIF   (K'&ZXERRBFLST LE 0).ZG52R  NOT I/O           18361000
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZG52R              18365300
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                18369600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                  18373900
                    AIF   (K'&ZCGPR GT 2).ZG52Q                         18378200
                    AIF   ('&ZCGPR' EQ '0').ZG52Q                       18382500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 18386800
                    AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME     18391100
.ZG52P              ANOP  ,                                             18395400
                    AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC          18399700
                    AIF   ('&ZCGPR' LT '2').ZG52Q                       18404000
                    AIF   ('&ZCGPR' LE '12').ZG52R                      18408300
.ZG52Q              ANOP  ,                                             18412600
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           18416900
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             18421200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     18425500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              18429800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18434100
.ZG52R              ANOP  ,                                             18438400
.*-------------------------------------------------------------------   18442700
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               18447000
.ZG53               ANOP  ,           END OF BYPASS CHECK               18451300
.*----------------------------------------------------------------***   18455600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     18459900
                    AIF   (N'&GAP LE 1).ZG55A   CK NUM                  18464200
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     18468500
&ZMS                SETC  '&ZMS.&GAP"'                                  18472800
&ZMS                SETC  '&ZMS "GAP"'                                  18477100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           18481400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18485700
.ZG55A              ANOP  ,                                             18490000
.*-------------------------------------------------------------------   18494300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         18498600
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     18502900
&XGAP               SETC  '0'                                           18507200
                    AIF   (K'&GAP(1) LE 0).ZG55B  PARM                  18511500
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     18515800
                    AIF   (N'&GAP GT 1).ZG55B   MULTI PARMS             18520100
&XGAP               SETC  '&GAP'      SET XVARIABLE                     18524400
.ZG55B              ANOP  ,                                             18528700
.*-------------------------------------------------------------------   18533000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    18537300
                    AIF   (K'&ZXGAP LE 0).ZG55R  NOT I/O                18541600
                    AIF   ('&XGAP' EQ '0').ZG55R                        18545900
                    AIF   ('&XGAP'(1,1) NE '(').ZG55R                   18550200
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          18554500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG55P                  18558800
                    AIF   (K'&ZCGPR GT 2).ZG55Q                         18563100
                    AIF   ('&ZCGPR' EQ '0').ZG55Q                       18567400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 18571700
                    AIF   (T'&ZCGPR NE 'N').ZG55Q  INVALID REG NAME     18576000
.ZG55P              ANOP  ,                                             18580300
                    AIF   (T'&ZCGPR NE 'N').ZG55R  NON NUMERIC          18584600
                    AIF   ('&ZCGPR' LT '2').ZG55Q                       18588900
                    AIF   ('&ZCGPR' LE '12').ZG55R                      18593200
.ZG55Q              ANOP  ,                                             18597500
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     18601800
&ZMS                SETC  '&ZMS.&GAP"'                                  18606100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     18610400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              18614700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18619000
.ZG55R              ANOP  ,                                             18623300
.*----------------------------------------------------------------***   18627600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     18631900
                    AIF   (N'&OWNERID LE 1).ZG58A  CK NUM               18636200
&ZMS                SETC  '"OWNERID='           *KPOSA* MNOTE           18640500
&ZMS                SETC  '&ZMS.&OWNERID"'                              18644800
&ZMS                SETC  '&ZMS "OWNERID"'                              18649100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           18653400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18657700
.ZG58A              ANOP  ,                                             18662000
.*-------------------------------------------------------------------   18666300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         18670600
&ZXOWNERID          SETC  'INPUT'     SET IN/OUTPUT                     18674900
&XOWNERID           SETC  '0'                                           18679200
                    AIF   (K'&OWNERID(1) LE 0).ZG58B  PARM              18683500
&XOWNERID           SETC  '&OWNERID(1)'         SET XVARIABLE           18687800
                    AIF   (N'&OWNERID GT 1).ZG58B  MULTI PARMS          18692100
&XOWNERID           SETC  '&OWNERID'  SET XVARIABLE                     18696400
.ZG58B              ANOP  ,                                             18700700
.*-------------------------------------------------------------------   18705000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    18709300
                    AIF   (K'&ZXOWNERID LE 0).ZG58R  NOT I/O            18713600
                    AIF   ('&XOWNERID' EQ '0').ZG58R                    18717900
                    AIF   ('&XOWNERID'(1,1) NE '(').ZG58R               18722200
&ZCGPR              SETC  '&XOWNERID'(2,K'&XOWNERID-2)                  18726500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                  18730800
                    AIF   (K'&ZCGPR GT 2).ZG58Q                         18735100
                    AIF   ('&ZCGPR' EQ '0').ZG58Q                       18739400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 18743700
                    AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME     18748000
.ZG58P              ANOP  ,                                             18752300
                    AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC          18756600
                    AIF   ('&ZCGPR' LT '2').ZG58Q                       18760900
                    AIF   ('&ZCGPR' LE '12').ZG58R                      18765200
.ZG58Q              ANOP  ,                                             18769500
&ZMS                SETC  '"OWNERID='           *KGPRA* MNOTE           18773800
&ZMS                SETC  '&ZMS.&OWNERID"'                              18778100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     18782400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              18786700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18791000
.ZG58R              ANOP  ,                                             18795300
.*----------------------------------------------------------------***   18799600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18803900
                    AIF   (N'&SKIPBUF LE 1).ZG61A  CK NUM               18808200
&ZMS                SETC  '"SKIPBUF='           *KPOSA* MNOTE           18812500
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              18816800
&ZMS                SETC  '&ZMS "SKIPBUF"'                              18821100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           18825400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18829700
.ZG61A              ANOP  ,                                             18834000
.*-------------------------------------------------------------------   18838300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18842600
&XSKIPBUF           SETC  ''          INITIALIZE XVARIABLE              18846900
.ZG62A   AIF   ('&SKIPBUF(1)' NE 'NO').ZG63A                            18851200
&XSKIPBUF           SETC  'NO'        SET KEYWORD                       18855500
.*-------------------------------------------------------------------   18859800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18864100
.ZG63A   AIF   ('&SKIPBUF(1)' NE 'YES').ZG64A                           18868400
&XSKIPBUF           SETC  'YES'       SET KEYWORD                       18872700
.*-------------------------------------------------------------------   18877000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18881300
.ZG64A              AIF   (K'&XSKIPBUF GT 0).ZG64C  KEYWORD             18885600
                    AIF   (K'&SKIPBUF(1) LE 0).ZG64B                    18889900
&ZMS                SETC  '"SKIPBUF='           *KUKWA* MNOTE           18894200
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              18898500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     18902800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           18907100
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           18911400
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           18915700
                    MNOTE 8,' &ZMS '                                    18920000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18924300
.ZG64B              ANOP  ,                                             18928600
&XSKIPBUF           SETC  'NO'        SET DEFAULT KEYWORD               18932900
.ZG64C              ANOP  ,                                             18937200
&ZXSKIPBUF          SETC  'INPUT'     SET IN/OUTPUT                     18941500
.*----------------------------------------------------------------***   18945800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     18950100
                    AIF   (N'&TASKID LE 1).ZG66A  CK NUM                18954400
&ZMS                SETC  '"TASKID='  *KPOSA* MNOTE                     18958700
&ZMS                SETC  '&ZMS.&TASKID"'                               18963000
&ZMS                SETC  '&ZMS "TASKID"'                               18967300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           18971600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       18975900
.ZG66A              ANOP  ,                                             18980200
.*-------------------------------------------------------------------   18984500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         18988800
&ZXTASKID           SETC  'INPUT'     SET IN/OUTPUT                     18993100
&XTASKID            SETC  '0'                                           18997400
                    AIF   (K'&TASKID(1) LE 0).ZG66B  PARM               19001700
&XTASKID            SETC  '&TASKID(1)'          SET XVARIABLE           19006000
                    AIF   (N'&TASKID GT 1).ZG66B  MULTI PARMS           19010300
&XTASKID            SETC  '&TASKID'   SET XVARIABLE                     19014600
.ZG66B              ANOP  ,                                             19018900
.*-------------------------------------------------------------------   19023200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    19027500
                    AIF   (K'&ZXTASKID LE 0).ZG66R  NOT I/O             19031800
                    AIF   ('&XTASKID' EQ '0').ZG66R                     19036100
                    AIF   ('&XTASKID'(1,1) NE '(').ZG66R                19040400
&ZCGPR              SETC  '&XTASKID'(2,K'&XTASKID-2)                    19044700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG66P                  19049000
                    AIF   (K'&ZCGPR GT 2).ZG66Q                         19053300
                    AIF   ('&ZCGPR' EQ '0').ZG66Q                       19057600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 19061900
                    AIF   (T'&ZCGPR NE 'N').ZG66Q  INVALID REG NAME     19066200
.ZG66P              ANOP  ,                                             19070500
                    AIF   (T'&ZCGPR NE 'N').ZG66R  NON NUMERIC          19074800
                    AIF   ('&ZCGPR' LT '2').ZG66Q                       19079100
                    AIF   ('&ZCGPR' LE '12').ZG66R                      19083400
.ZG66Q              ANOP  ,                                             19087700
&ZMS                SETC  '"TASKID='  *KGPRA* MNOTE                     19092000
&ZMS                SETC  '&ZMS.&TASKID"'                               19096300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     19100600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              19104900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19109200
.ZG66R              ANOP  ,                                             19113500
.*----------------------------------------------------------------***   19117800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     19122100
                    AIF   (N'&THREAD LE 1).ZG69A  CK NUM                19126400
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     19130700
&ZMS                SETC  '&ZMS.&THREAD"'                               19135000
&ZMS                SETC  '&ZMS "THREAD"'                               19139300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           19143600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19147900
.ZG69A              ANOP  ,                                             19152200
.*-------------------------------------------------------------------   19156500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         19160800
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     19165100
&XTHREAD            SETC  '0'                                           19169400
                    AIF   (K'&THREAD(1) LE 0).ZG69B  PARM               19173700
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           19178000
                    AIF   (N'&THREAD GT 1).ZG69B  MULTI PARMS           19182300
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     19186600
.ZG69B              ANOP  ,                                             19190900
.*-------------------------------------------------------------------   19195200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    19199500
                    AIF   (K'&ZXTHREAD LE 0).ZG69R  NOT I/O             19203800
                    AIF   ('&XTHREAD' EQ '0').ZG69R                     19208100
                    AIF   ('&XTHREAD'(1,1) NE '(').ZG69R                19212400
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    19216700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                  19221000
                    AIF   (K'&ZCGPR GT 2).ZG69Q                         19225300
                    AIF   ('&ZCGPR' EQ '0').ZG69Q                       19229600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 19233900
                    AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME     19238200
.ZG69P              ANOP  ,                                             19242500
                    AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC          19246800
                    AIF   ('&ZCGPR' LT '2').ZG69Q                       19251100
                    AIF   ('&ZCGPR' LE '12').ZG69R                      19255400
.ZG69Q              ANOP  ,                                             19259700
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     19264000
&ZMS                SETC  '&ZMS.&THREAD"'                               19268300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     19272600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              19276900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19281200
.ZG69R              ANOP  ,                                             19285500
.*----------------------------------------------------------------***   19289800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     19294100
                    AIF   (N'&UTILRTN LE 1).ZG72A  CK NUM               19298400
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           19302700
&ZMS                SETC  '&ZMS.&UTILRTN"'                              19307000
&ZMS                SETC  '&ZMS "UTILRTN"'                              19311300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           19315600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19319900
.ZG72A              ANOP  ,                                             19324200
.*-------------------------------------------------------------------   19328500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         19332800
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     19337100
&XUTILRTN           SETC  '0'                                           19341400
                    AIF   (K'&UTILRTN(1) LE 0).ZG72B  PARM              19345700
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           19350000
                    AIF   (N'&UTILRTN GT 1).ZG72B  MULTI PARMS          19354300
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     19358600
.ZG72B              ANOP  ,                                             19362900
.*-------------------------------------------------------------------   19367200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    19371500
                    AIF   (K'&ZXUTILRTN LE 0).ZG72R  NOT I/O            19375800
                    AIF   ('&XUTILRTN' EQ '0').ZG72R                    19380100
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZG72R               19384400
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  19388700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                  19393000
                    AIF   (K'&ZCGPR GT 2).ZG72Q                         19397300
                    AIF   ('&ZCGPR' EQ '0').ZG72Q                       19401600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 19405900
                    AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME     19410200
.ZG72P              ANOP  ,                                             19414500
                    AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC          19418800
                    AIF   ('&ZCGPR' LT '2').ZG72Q                       19423100
                    AIF   ('&ZCGPR' LE '12').ZG72R                      19427400
.ZG72Q              ANOP  ,                                             19431700
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           19436000
&ZMS                SETC  '&ZMS.&UTILRTN"'                              19440300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     19444600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              19448900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19453200
.ZG72R              ANOP  ,                                             19457500
.*-------------------------------------------------------------------   19461800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           19466100
.ZG74               ANOP  ,                                             19470400
&ZTLC               SETC 'COPY_DATA'                                    19474700
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG113              19479000
&XREQUEST           SETC  'COPY_DATA'           SET KEYWORD             19483300
                    AIF   (N'&REQUEST LE 1).ZG74A  CK NUM               19487600
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           19491900
&ZMS                SETC  '&ZMS.&REQUEST"'                              19496200
&ZMS                SETC  '&ZMS "REQUEST"'                              19500500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           19504800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19509100
.ZG74A              ANOP  ,                                             19513400
.*------------------------------------------------------------------    19517700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           19522000
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       19526300
.ZG74A0             AIF   (K'&BUFLIST LE 0).ZG74A1  OK                  19530600
&ZCVAL              SETC '&ZCVAL BUFLIST'       INCORRECT KEY USED      19534900
.ZG74A1             AIF   (K'&BUFNUM LE 0).ZG74A2  OK                   19539200
&ZCVAL              SETC '&ZCVAL BUFNUM'        INCORRECT KEY USED      19543500
.ZG74A2             AIF   (K'&BUFTYPE LE 0).ZG74A3  OK                  19547800
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      19552100
.ZG74A3             AIF   (K'&CSMUSER LE 0).ZG74A4  OK                  19556400
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      19560700
.ZG74A4             AIF   (K'&GAP LE 0).ZG74A5  OK                      19565000
&ZCVAL              SETC '&ZCVAL GAP'           INCORRECT KEY USED      19569300
.ZG74A5             AIF   (K'&ERRBFLST LE 0).ZG74A6  OK                 19573600
&ZCVAL              SETC '&ZCVAL ERRBFLST'      INCORRECT KEY USED      19577900
.ZG74A6             AIF   (K'&OWNERID LE 0).ZG74A7  OK                  19582200
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      19586500
.ZG74A7             AIF   (K'&TASKID LE 0).ZG74A8  OK                   19590800
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      19595100
.ZG74A8             AIF   (K'&SKIPBUF LE 0).ZG74A9  OK                  19599400
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      19603700
.ZG74A9             AIF   (K'&BUFSIZE LE 0).ZG74A10  OK                 19608000
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      19612300
.ZG74A10            AIF   (K'&BUFSOURC LE 0).ZG74A11  OK                19616600
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      19620900
.ZG74A11            AIF   (K'&DS_INFO LE 0).ZG74A12  OK                 19625200
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      19629500
.ZG74A12            AIF   (K'&EXPBUF LE 0).ZG74A13  OK                  19633800
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      19638100
.ZG74A13            AIF   (K'&INITBUF LE 0).ZG74A14  OK                 19642400
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      19646700
.ZG74A14            AIF   (K'&MINFREE LE 0).ZG74A15  OK                 19651000
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      19655300
.ZG74A15            AIF   (K'&RETPTOKN LE 0).ZG74A16  OK                19659600
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      19663900
.ZG74A16            AIF   (K'&STATAREA LE 0).ZG74A17  OK                19668200
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      19672500
.ZG74A17            AIF   (K'&POOLTOKN LE 0).ZG74A18  OK                19676800
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      19681100
.ZG74A18            AIF   (K'&WAIT LE 0).ZG74A19  OK                    19685400
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      19689700
.ZG74A19            AIF   (K'&CLEAR LE 0).ZG74A20  OK                   19694000
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      19698300
.ZG74A20            AIF   (K'&FREETO LE 0).ZG74A21  OK                  19702600
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      19706900
.ZG74A21            AIF   (K'&FREERTN LE 0).ZG74A22  OK                 19711200
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      19715500
.ZG74A22            AIF   (K'&ZCVAL LE 0).ZG74A23  OK                   19719800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         19724100
                    AIF  (K'&ZCVAL LE 160).ZG74A23A                     19728400
&ZCVAL              SETC '&ZCVAL'(1,160)                                19732700
&ZCVAL              SETC '&ZCVAL....'                                   19737000
.ZG74A23A           ANOP                                                19741300
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     19745600
&ZMS                SETC  '&ZMS.=&REQUEST"'                             19749900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          19754200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          19758500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19762800
.ZG74A23            ANOP  ,                                             19767100
.*------------------------------------------------------------------    19771400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           19775700
&XPAD               SETC  ''          INITIALIZE XVARIABLE              19780000
.*-------------------------------------------------------------------   19784300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           19788600
.ZG77               ANOP  ,                                             19792900
                    AIF   (K'&PAD(1) LE 0).ZG77A                        19797200
&ZTLC               SETC 'NO'                                           19801500
                    AIF   ('&PAD(1)' NE '&ZTLC').ZG78                   19805800
&XPAD               SETC  'NO'        SET KEYWORD                       19810100
                    AIF   (N'&PAD LE 1).ZG77A   CK NUM                  19814400
&ZMS                SETC  '"PAD='     *KPOSA* MNOTE                     19818700
&ZMS                SETC  '&ZMS.&PAD"'                                  19823000
&ZMS                SETC  '&ZMS "PAD"'                                  19827300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           19831600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19835900
.ZG77A              ANOP  ,                                             19840200
.*------------------------------------------------------------------    19844500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           19848800
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       19853100
.ZG77A0             AIF   (K'&PADCHAR LE 0).ZG77A1  OK                  19857400
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      19861700
.ZG77A1             AIF   (K'&ZCVAL LE 0).ZG77A2  OK                    19866000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         19870300
&ZMS                SETC  '"PAD'      *KMEIA* MNOTE                     19874600
&ZMS                SETC  '&ZMS.=&PAD"'                                 19878900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          19883200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          19887500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19891800
.ZG77A2             ANOP  ,                                             19896100
.*-------------------------------------------------------------------   19900400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           19904700
.ZG78               ANOP  ,                                             19909000
&ZTLC               SETC 'YES'                                          19913300
                    AIF   ('&PAD(1)' NE '&ZTLC').ZG82                   19917600
&XPAD               SETC  'YES'       SET KEYWORD                       19921900
                    AIF   (N'&PAD LE 1).ZG78A   CK NUM                  19926200
&ZMS                SETC  '"PAD='     *KPOSA* MNOTE                     19930500
&ZMS                SETC  '&ZMS.&PAD"'                                  19934800
&ZMS                SETC  '&ZMS "PAD"'                                  19939100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           19943400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19947700
.ZG78A              ANOP  ,                                             19952000
.*----------------------------------------------------------------***   19956300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 19960600
                    AIF   (N'&PADCHAR LE 1).ZG80A  CK NUM               19964900
&ZMS                SETC  '"PADCHAR='           *KPOSA* MNOTE           19969200
&ZMS                SETC  '&ZMS.&PADCHAR"'                              19973500
&ZMS                SETC  '&ZMS "PADCHAR"'                              19977800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           19982100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       19986400
.ZG80A              ANOP  ,                                             19990700
.*-------------------------------------------------------------------   19995000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     19999300
&ZXPADCHAR          SETC  'INPUT'     SET IN/OUTPUT                     20003600
&XPADCHAR           SETC  '&PADCHAR(1)'         SET XVARIABLE           20007900
                    AIF   (N'&PADCHAR GT 1).ZG80B  MULTI PARMS          20012200
&XPADCHAR           SETC  '&PADCHAR'  SET XVARIABLE                     20016500
.ZG80B              AIF   (K'&PADCHAR(1) GT 0).ZG80C                    20020800
&ZXPADCHAR          SETC  ''          RESET IN/OUTPUT                   20025100
&ZMS                SETC  ' '         *KRQDA*                           20029400
&ZMS                SETC  '&ZMS "PADCHAR" KEY AND ITS ARGUMENT'         20033700
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       20038000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20042300
.ZG80C              ANOP  ,                                             20046600
.*-------------------------------------------------------------------   20050900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                20055200
                    AIF   (K'&ZXPADCHAR LE 0).ZG80R  NOT I/O            20059500
                    AIF   ('&XPADCHAR'(1,1) NE '(').ZG80R               20063800
&ZCGPR              SETC  '&XPADCHAR'(2,K'&XPADCHAR-2)                  20068100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                  20072400
                    AIF   (K'&ZCGPR GT 2).ZG80Q                         20076700
                    AIF   ('&ZCGPR' EQ '0').ZG80Q                       20081000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 20085300
                    AIF   (T'&ZCGPR NE 'N').ZG80Q  INVALID REG NAME     20089600
.ZG80P              ANOP  ,                                             20093900
                    AIF   (T'&ZCGPR NE 'N').ZG80R  NON NUMERIC          20098200
                    AIF   ('&ZCGPR' LT '2').ZG80Q                       20102500
                    AIF   ('&ZCGPR' LE '12').ZG80R                      20106800
.ZG80Q              ANOP  ,                                             20111100
&ZMS                SETC  '"PADCHAR='           *KGPRA* MNOTE           20115400
&ZMS                SETC  '&ZMS.&PADCHAR"'                              20119700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     20124000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              20128300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20132600
.ZG80R              ANOP  ,                                             20136900
.*------------------------------------------------------------------    20141200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           20145500
.ZG82               ANOP  ,                                             20149800
&ZXPAD              SETC  'INPUT'     SET IN/OUTPUT                     20154100
                    AIF   (K'&XPAD GT 0).ZG82E  VALID ARG               20158400
                    AIF   (T'&PAD EQ 'O').ZG82D  OMITTED                20162700
&ZASYSLNDX          SETA  0                                             20167000
.ZG82A              ANOP  ,           POSITIONAL MACRO KEY              20171300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  20175600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG82C              20179900
&ZTLC               SETC 'PAD'                                          20184200
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG82A     20188500
.ZG82B              ANOP  ,                                             20192800
&ZXPAD              SETC  ''          RESET IN/OUTPUT                   20197100
&ZMS                SETC  'THE "PAD" KEY'       *KOPTA* MNOTE           20201400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       20205700
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              20210000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20214300
                    AGO   .ZG82E                                        20218600
.ZG82C              ANOP  ,                                             20222900
&ZXPAD              SETC  ''          RESET IN/OUTPUT                   20227200
&ZMS                SETC  '"PAD='     *KUKWA* MNOTE                     20231500
&ZMS                SETC  '&ZMS.&PAD"'                                  20235800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     20240100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           20244400
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           20248700
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           20253000
                    MNOTE 8,' &ZMS '                                    20257300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20261600
                    AGO   .ZG82E                                        20265900
.ZG82D              ANOP  ,                                             20270200
&XPAD               SETC  'NO'        SET DEFAULT KEYWORD               20274500
.ZG82E              ANOP  ,                                             20278800
.*-------------------------------------------------------------------   20283100
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             20287400
                    AIF   ('&XMF' EQ 'M').ZG85  BYPASS IF MF=M          20291700
.*----------------------------------------------------------------***   20296000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    20300300
                    AIF   (N'&SRCERRL LE 1).ZG84A  CK NUM               20304600
&ZMS                SETC  '"SRCERRL='           *KPOSA* MNOTE           20308900
&ZMS                SETC  '&ZMS.&SRCERRL"'                              20313200
&ZMS                SETC  '&ZMS "SRCERRL"'                              20317500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           20321800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20326100
.ZG84A              ANOP  ,                                             20330400
.*-------------------------------------------------------------------   20334700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        20339000
                    AIF   (K'&SRCERRL(1) LE 0).ZG84C  NO PARM           20343300
&ZXSRCERRL          SETC  'OUTPUT'    SET OUTPUT                        20347600
&XSRCERRL           SETC  '&SRCERRL(1)'         SET XVARIABLE           20351900
                    AIF   (N'&SRCERRL GT 1).ZG84C                       20356200
&XSRCERRL           SETC  '&SRCERRL'  SET XVARIABLE                     20360500
.ZG84C              ANOP  ,                                             20364800
.*-------------------------------------------------------------------   20369100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   20373400
                    AIF   (K'&ZXSRCERRL LE 0).ZG84R  NOT I/O            20377700
                    AIF   ('&XSRCERRL'(1,1) NE '(').ZG84R               20382000
&ZCGPR              SETC  '&XSRCERRL'(2,K'&XSRCERRL-2)                  20386300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG84P                  20390600
                    AIF   (K'&ZCGPR GT 2).ZG84Q                         20394900
                    AIF   ('&ZCGPR' EQ '0').ZG84Q                       20399200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 20403500
                    AIF   (T'&ZCGPR NE 'N').ZG84Q  INVALID REG NAME     20407800
.ZG84P              ANOP  ,                                             20412100
                    AIF   (T'&ZCGPR NE 'N').ZG84R  NON NUMERIC          20416400
                    AIF   ('&ZCGPR' LT '2').ZG84Q                       20420700
                    AIF   ('&ZCGPR' LE '12').ZG84R                      20425000
.ZG84Q              ANOP  ,                                             20429300
&ZMS                SETC  '"SRCERRL='           *KGPRA* MNOTE           20433600
&ZMS                SETC  '&ZMS.&SRCERRL"'                              20437900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     20442200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              20446500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20450800
.ZG84R              ANOP  ,                                             20455100
.*-------------------------------------------------------------------   20459400
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               20463700
.ZG85               ANOP  ,           END OF BYPASS CHECK               20468000
.*----------------------------------------------------------------***   20472300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     20476600
                    AIF   (N'&SRCGAP LE 1).ZG87A  CK NUM                20480900
&ZMS                SETC  '"SRCGAP='  *KPOSA* MNOTE                     20485200
&ZMS                SETC  '&ZMS.&SRCGAP"'                               20489500
&ZMS                SETC  '&ZMS "SRCGAP"'                               20493800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           20498100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20502400
.ZG87A              ANOP  ,                                             20506700
.*-------------------------------------------------------------------   20511000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         20515300
&ZXSRCGAP           SETC  'INPUT'     SET IN/OUTPUT                     20519600
&XSRCGAP            SETC  '0'                                           20523900
                    AIF   (K'&SRCGAP(1) LE 0).ZG87B  PARM               20528200
&XSRCGAP            SETC  '&SRCGAP(1)'          SET XVARIABLE           20532500
                    AIF   (N'&SRCGAP GT 1).ZG87B  MULTI PARMS           20536800
&XSRCGAP            SETC  '&SRCGAP'   SET XVARIABLE                     20541100
.ZG87B              ANOP  ,                                             20545400
.*-------------------------------------------------------------------   20549700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    20554000
                    AIF   (K'&ZXSRCGAP LE 0).ZG87R  NOT I/O             20558300
                    AIF   ('&XSRCGAP' EQ '0').ZG87R                     20562600
                    AIF   ('&XSRCGAP'(1,1) NE '(').ZG87R                20566900
&ZCGPR              SETC  '&XSRCGAP'(2,K'&XSRCGAP-2)                    20571200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                  20575500
                    AIF   (K'&ZCGPR GT 2).ZG87Q                         20579800
                    AIF   ('&ZCGPR' EQ '0').ZG87Q                       20584100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 20588400
                    AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME     20592700
.ZG87P              ANOP  ,                                             20597000
                    AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC          20601300
                    AIF   ('&ZCGPR' LT '2').ZG87Q                       20605600
                    AIF   ('&ZCGPR' LE '12').ZG87R                      20609900
.ZG87Q              ANOP  ,                                             20614200
&ZMS                SETC  '"SRCGAP='  *KGPRA* MNOTE                     20618500
&ZMS                SETC  '&ZMS.&SRCGAP"'                               20622800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     20627100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              20631400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20635700
.ZG87R              ANOP  ,                                             20640000
.*----------------------------------------------------------------***   20644300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     20648600
                    AIF   (N'&SRCLIST LE 1).ZG90A  CK NUM               20652900
&ZMS                SETC  '"SRCLIST='           *KPOSA* MNOTE           20657200
&ZMS                SETC  '&ZMS.&SRCLIST"'                              20661500
&ZMS                SETC  '&ZMS "SRCLIST"'                              20665800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           20670100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20674400
.ZG90A              ANOP  ,                                             20678700
.*-------------------------------------------------------------------   20683000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         20687300
&ZXSRCLIST          SETC  'INPUT'     SET IN/OUTPUT                     20691600
&XSRCLIST           SETC  '&SRCLIST(1)'         SET XVARIABLE           20695900
                    AIF   (N'&SRCLIST GT 1).ZG90B  MULTI PARMS          20700200
&XSRCLIST           SETC  '&SRCLIST'  SET XVARIABLE                     20704500
.ZG90B              AIF   (K'&SRCLIST(1) GT 0).ZG90C                    20708800
&ZXSRCLIST          SETC  ''          RESET IN/OUTPUT                   20713100
&ZMS                SETC  ' '         *KRQDA*                           20717400
&ZMS                SETC  '&ZMS "SRCLIST" KEY AND ITS ARGUMENT'         20721700
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       20726000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20730300
.ZG90C              ANOP  ,                                             20734600
.*-------------------------------------------------------------------   20738900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    20743200
                    AIF   (K'&ZXSRCLIST LE 0).ZG90R  NOT I/O            20747500
                    AIF   ('&XSRCLIST'(1,1) NE '(').ZG90R               20751800
&ZCGPR              SETC  '&XSRCLIST'(2,K'&XSRCLIST-2)                  20756100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                  20760400
                    AIF   (K'&ZCGPR GT 2).ZG90Q                         20764700
                    AIF   ('&ZCGPR' EQ '0').ZG90Q                       20769000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 20773300
                    AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME     20777600
.ZG90P              ANOP  ,                                             20781900
                    AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC          20786200
                    AIF   ('&ZCGPR' LT '2').ZG90Q                       20790500
                    AIF   ('&ZCGPR' LE '12').ZG90R                      20794800
.ZG90Q              ANOP  ,                                             20799100
&ZMS                SETC  '"SRCLIST='           *KGPRA* MNOTE           20803400
&ZMS                SETC  '&ZMS.&SRCLIST"'                              20807700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     20812000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              20816300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20820600
.ZG90R              ANOP  ,                                             20824900
.*----------------------------------------------------------------***   20829200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     20833500
                    AIF   (N'&SRCNUM LE 1).ZG93A  CK NUM                20837800
&ZMS                SETC  '"SRCNUM='  *KPOSA* MNOTE                     20842100
&ZMS                SETC  '&ZMS.&SRCNUM"'                               20846400
&ZMS                SETC  '&ZMS "SRCNUM"'                               20850700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           20855000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20859300
.ZG93A              ANOP  ,                                             20863600
.*-------------------------------------------------------------------   20867900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         20872200
&ZXSRCNUM           SETC  'INPUT'     SET IN/OUTPUT                     20876500
&XSRCNUM            SETC  '&SRCNUM(1)'          SET XVARIABLE           20880800
                    AIF   (N'&SRCNUM GT 1).ZG93B  MULTI PARMS           20885100
&XSRCNUM            SETC  '&SRCNUM'   SET XVARIABLE                     20889400
.ZG93B              AIF   (K'&SRCNUM(1) GT 0).ZG93C                     20893700
&ZXSRCNUM           SETC  ''          RESET IN/OUTPUT                   20898000
&ZMS                SETC  ' '         *KRQDA*                           20902300
&ZMS                SETC  '&ZMS "SRCNUM" KEY AND ITS ARGUMENT'          20906600
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       20910900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       20915200
.ZG93C              ANOP  ,                                             20919500
.*-------------------------------------------------------------------   20923800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    20928100
                    AIF   (K'&ZXSRCNUM LE 0).ZG93R  NOT I/O             20932400
                    AIF   ('&XSRCNUM'(1,1) NE '(').ZG93R                20936700
&ZCGPR              SETC  '&XSRCNUM'(2,K'&XSRCNUM-2)                    20941000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG93P                  20945300
                    AIF   (K'&ZCGPR GT 2).ZG93Q                         20949600
                    AIF   ('&ZCGPR' EQ '0').ZG93Q                       20953900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 20958200
                    AIF   (T'&ZCGPR NE 'N').ZG93Q  INVALID REG NAME     20962500
.ZG93P              ANOP  ,                                             20966800
                    AIF   (T'&ZCGPR NE 'N').ZG93R  NON NUMERIC          20971100
                    AIF   ('&ZCGPR' LT '2').ZG93Q                       20975400
                    AIF   ('&ZCGPR' LE '12').ZG93R                      20979700
.ZG93Q              ANOP  ,                                             20984000
&ZMS                SETC  '"SRCNUM='  *KGPRA* MNOTE                     20988300
&ZMS                SETC  '&ZMS.&SRCNUM"'                               20992600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     20996900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              21001200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21005500
.ZG93R              ANOP  ,                                             21009800
.*-------------------------------------------------------------------   21014100
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             21018400
                    AIF   ('&XMF' EQ 'M').ZG97  BYPASS IF MF=M          21022700
.*----------------------------------------------------------------***   21027000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    21031300
                    AIF   (N'&TARGERRL LE 1).ZG96A  CK NUM              21035600
&ZMS                SETC  '"TARGERRL='          *KPOSA* MNOTE           21039900
&ZMS                SETC  '&ZMS.&TARGERRL"'                             21044200
&ZMS                SETC  '&ZMS "TARGERRL"'                             21048500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           21052800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21057100
.ZG96A              ANOP  ,                                             21061400
.*-------------------------------------------------------------------   21065700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        21070000
                    AIF   (K'&TARGERRL(1) LE 0).ZG96C  NO PARM          21074300
&ZXTARGERRL         SETC  'OUTPUT'    SET OUTPUT                        21078600
&XTARGERRL          SETC  '&TARGERRL(1)'        SET XVARIABLE           21082900
                    AIF   (N'&TARGERRL GT 1).ZG96C                      21087200
&XTARGERRL          SETC  '&TARGERRL'           SET XVARIABLE           21091500
.ZG96C              ANOP  ,                                             21095800
.*-------------------------------------------------------------------   21100100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   21104400
                    AIF   (K'&ZXTARGERRL LE 0).ZG96R  NOT I/O           21108700
                    AIF   ('&XTARGERRL'(1,1) NE '(').ZG96R              21113000
&ZCGPR              SETC  '&XTARGERRL'(2,K'&XTARGERRL-2)                21117300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG96P                  21121600
                    AIF   (K'&ZCGPR GT 2).ZG96Q                         21125900
                    AIF   ('&ZCGPR' EQ '0').ZG96Q                       21130200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 21134500
                    AIF   (T'&ZCGPR NE 'N').ZG96Q  INVALID REG NAME     21138800
.ZG96P              ANOP  ,                                             21143100
                    AIF   (T'&ZCGPR NE 'N').ZG96R  NON NUMERIC          21147400
                    AIF   ('&ZCGPR' LT '2').ZG96Q                       21151700
                    AIF   ('&ZCGPR' LE '12').ZG96R                      21156000
.ZG96Q              ANOP  ,                                             21160300
&ZMS                SETC  '"TARGERRL='          *KGPRA* MNOTE           21164600
&ZMS                SETC  '&ZMS.&TARGERRL"'                             21168900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     21173200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              21177500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21181800
.ZG96R              ANOP  ,                                             21186100
.*-------------------------------------------------------------------   21190400
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               21194700
.ZG97               ANOP  ,           END OF BYPASS CHECK               21199000
.*----------------------------------------------------------------***   21203300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     21207600
                    AIF   (N'&TARGGAP LE 1).ZG99A  CK NUM               21211900
&ZMS                SETC  '"TARGGAP='           *KPOSA* MNOTE           21216200
&ZMS                SETC  '&ZMS.&TARGGAP"'                              21220500
&ZMS                SETC  '&ZMS "TARGGAP"'                              21224800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           21229100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21233400
.ZG99A              ANOP  ,                                             21237700
.*-------------------------------------------------------------------   21242000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         21246300
&ZXTARGGAP          SETC  'INPUT'     SET IN/OUTPUT                     21250600
&XTARGGAP           SETC  '0'                                           21254900
                    AIF   (K'&TARGGAP(1) LE 0).ZG99B  PARM              21259200
&XTARGGAP           SETC  '&TARGGAP(1)'         SET XVARIABLE           21263500
                    AIF   (N'&TARGGAP GT 1).ZG99B  MULTI PARMS          21267800
&XTARGGAP           SETC  '&TARGGAP'  SET XVARIABLE                     21272100
.ZG99B              ANOP  ,                                             21276400
.*-------------------------------------------------------------------   21280700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    21285000
                    AIF   (K'&ZXTARGGAP LE 0).ZG99R  NOT I/O            21289300
                    AIF   ('&XTARGGAP' EQ '0').ZG99R                    21293600
                    AIF   ('&XTARGGAP'(1,1) NE '(').ZG99R               21297900
&ZCGPR              SETC  '&XTARGGAP'(2,K'&XTARGGAP-2)                  21302200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                  21306500
                    AIF   (K'&ZCGPR GT 2).ZG99Q                         21310800
                    AIF   ('&ZCGPR' EQ '0').ZG99Q                       21315100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 21319400
                    AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME     21323700
.ZG99P              ANOP  ,                                             21328000
                    AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC          21332300
                    AIF   ('&ZCGPR' LT '2').ZG99Q                       21336600
                    AIF   ('&ZCGPR' LE '12').ZG99R                      21340900
.ZG99Q              ANOP  ,                                             21345200
&ZMS                SETC  '"TARGGAP='           *KGPRA* MNOTE           21349500
&ZMS                SETC  '&ZMS.&TARGGAP"'                              21353800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     21358100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              21362400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21366700
.ZG99R              ANOP  ,                                             21371000
.*----------------------------------------------------------------***   21375300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     21379600
                    AIF   (N'&TARGLIST LE 1).ZG102A  CK NUM             21383900
&ZMS                SETC  '"TARGLIST='          *KPOSA* MNOTE           21388200
&ZMS                SETC  '&ZMS.&TARGLIST"'                             21392500
&ZMS                SETC  '&ZMS "TARGLIST"'                             21396800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           21401100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21405400
.ZG102A             ANOP  ,                                             21409700
.*-------------------------------------------------------------------   21414000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         21418300
&ZXTARGLIST         SETC  'INPUT'     SET IN/OUTPUT                     21422600
&XTARGLIST          SETC  '&TARGLIST(1)'        SET XVARIABLE           21426900
                    AIF   (N'&TARGLIST GT 1).ZG102B  MULTI PARMS        21431200
&XTARGLIST          SETC  '&TARGLIST'           SET XVARIABLE           21435500
.ZG102B             AIF   (K'&TARGLIST(1) GT 0).ZG102C                  21439800
&ZXTARGLIST         SETC  ''          RESET IN/OUTPUT                   21444100
&ZMS                SETC  ' '         *KRQDA*                           21448400
&ZMS                SETC  '&ZMS "TARGLIST" KEY AND ITS ARGUMENT'        21452700
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       21457000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21461300
.ZG102C             ANOP  ,                                             21465600
.*-------------------------------------------------------------------   21469900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    21474200
                    AIF   (K'&ZXTARGLIST LE 0).ZG102R  NOT I/O          21478500
                    AIF   ('&XTARGLIST'(1,1) NE '(').ZG102R             21482800
&ZCGPR              SETC  '&XTARGLIST'(2,K'&XTARGLIST-2)                21487100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG102P                 21491400
                    AIF   (K'&ZCGPR GT 2).ZG102Q                        21495700
                    AIF   ('&ZCGPR' EQ '0').ZG102Q                      21500000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 21504300
                    AIF   (T'&ZCGPR NE 'N').ZG102Q  INVALID REG NAME    21508600
.ZG102P             ANOP  ,                                             21512900
                    AIF   (T'&ZCGPR NE 'N').ZG102R  NON NUMERIC         21517200
                    AIF   ('&ZCGPR' LT '2').ZG102Q                      21521500
                    AIF   ('&ZCGPR' LE '12').ZG102R                     21525800
.ZG102Q             ANOP  ,                                             21530100
&ZMS                SETC  '"TARGLIST='          *KGPRA* MNOTE           21534400
&ZMS                SETC  '&ZMS.&TARGLIST"'                             21538700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     21543000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              21547300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21551600
.ZG102R             ANOP  ,                                             21555900
.*----------------------------------------------------------------***   21560200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     21564500
                    AIF   (N'&TARGNUM LE 1).ZG105A  CK NUM              21568800
&ZMS                SETC  '"TARGNUM='           *KPOSA* MNOTE           21573100
&ZMS                SETC  '&ZMS.&TARGNUM"'                              21577400
&ZMS                SETC  '&ZMS "TARGNUM"'                              21581700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           21586000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21590300
.ZG105A             ANOP  ,                                             21594600
.*-------------------------------------------------------------------   21598900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         21603200
&ZXTARGNUM          SETC  'INPUT'     SET IN/OUTPUT                     21607500
&XTARGNUM           SETC  '&TARGNUM(1)'         SET XVARIABLE           21611800
                    AIF   (N'&TARGNUM GT 1).ZG105B  MULTI PARMS         21616100
&XTARGNUM           SETC  '&TARGNUM'  SET XVARIABLE                     21620400
.ZG105B             AIF   (K'&TARGNUM(1) GT 0).ZG105C                   21624700
&ZXTARGNUM          SETC  ''          RESET IN/OUTPUT                   21629000
&ZMS                SETC  ' '         *KRQDA*                           21633300
&ZMS                SETC  '&ZMS "TARGNUM" KEY AND ITS ARGUMENT'         21637600
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       21641900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21646200
.ZG105C             ANOP  ,                                             21650500
.*-------------------------------------------------------------------   21654800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    21659100
                    AIF   (K'&ZXTARGNUM LE 0).ZG105R  NOT I/O           21663400
                    AIF   ('&XTARGNUM'(1,1) NE '(').ZG105R              21667700
&ZCGPR              SETC  '&XTARGNUM'(2,K'&XTARGNUM-2)                  21672000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG105P                 21676300
                    AIF   (K'&ZCGPR GT 2).ZG105Q                        21680600
                    AIF   ('&ZCGPR' EQ '0').ZG105Q                      21684900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 21689200
                    AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME    21693500
.ZG105P             ANOP  ,                                             21697800
                    AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC         21702100
                    AIF   ('&ZCGPR' LT '2').ZG105Q                      21706400
                    AIF   ('&ZCGPR' LE '12').ZG105R                     21710700
.ZG105Q             ANOP  ,                                             21715000
&ZMS                SETC  '"TARGNUM='           *KGPRA* MNOTE           21719300
&ZMS                SETC  '&ZMS.&TARGNUM"'                              21723600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     21727900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              21732200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21736500
.ZG105R             ANOP  ,                                             21740800
.*----------------------------------------------------------------***   21745100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     21749400
                    AIF   (N'&THREAD LE 1).ZG108A  CK NUM               21753700
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     21758000
&ZMS                SETC  '&ZMS.&THREAD"'                               21762300
&ZMS                SETC  '&ZMS "THREAD"'                               21766600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           21770900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21775200
.ZG108A             ANOP  ,                                             21779500
.*-------------------------------------------------------------------   21783800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         21788100
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     21792400
&XTHREAD            SETC  '0'                                           21796700
                    AIF   (K'&THREAD(1) LE 0).ZG108B  PARM              21801000
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           21805300
                    AIF   (N'&THREAD GT 1).ZG108B  MULTI PARMS          21809600
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     21813900
.ZG108B             ANOP  ,                                             21818200
.*-------------------------------------------------------------------   21822500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    21826800
                    AIF   (K'&ZXTHREAD LE 0).ZG108R  NOT I/O            21831100
                    AIF   ('&XTHREAD' EQ '0').ZG108R                    21835400
                    AIF   ('&XTHREAD'(1,1) NE '(').ZG108R               21839700
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    21844000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                 21848300
                    AIF   (K'&ZCGPR GT 2).ZG108Q                        21852600
                    AIF   ('&ZCGPR' EQ '0').ZG108Q                      21856900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 21861200
                    AIF   (T'&ZCGPR NE 'N').ZG108Q  INVALID REG NAME    21865500
.ZG108P             ANOP  ,                                             21869800
                    AIF   (T'&ZCGPR NE 'N').ZG108R  NON NUMERIC         21874100
                    AIF   ('&ZCGPR' LT '2').ZG108Q                      21878400
                    AIF   ('&ZCGPR' LE '12').ZG108R                     21882700
.ZG108Q             ANOP  ,                                             21887000
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     21891300
&ZMS                SETC  '&ZMS.&THREAD"'                               21895600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     21899900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              21904200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21908500
.ZG108R             ANOP  ,                                             21912800
.*----------------------------------------------------------------***   21917100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     21921400
                    AIF   (N'&UTILRTN LE 1).ZG111A  CK NUM              21925700
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           21930000
&ZMS                SETC  '&ZMS.&UTILRTN"'                              21934300
&ZMS                SETC  '&ZMS "UTILRTN"'                              21938600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           21942900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       21947200
.ZG111A             ANOP  ,                                             21951500
.*-------------------------------------------------------------------   21955800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         21960100
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     21964400
&XUTILRTN           SETC  '0'                                           21968700
                    AIF   (K'&UTILRTN(1) LE 0).ZG111B  PARM             21973000
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           21977300
                    AIF   (N'&UTILRTN GT 1).ZG111B  MULTI PARMS         21981600
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     21985900
.ZG111B             ANOP  ,                                             21990200
.*-------------------------------------------------------------------   21994500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    21998800
                    AIF   (K'&ZXUTILRTN LE 0).ZG111R  NOT I/O           22003100
                    AIF   ('&XUTILRTN' EQ '0').ZG111R                   22007400
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZG111R              22011700
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  22016000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                 22020300
                    AIF   (K'&ZCGPR GT 2).ZG111Q                        22024600
                    AIF   ('&ZCGPR' EQ '0').ZG111Q                      22028900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 22033200
                    AIF   (T'&ZCGPR NE 'N').ZG111Q  INVALID REG NAME    22037500
.ZG111P             ANOP  ,                                             22041800
                    AIF   (T'&ZCGPR NE 'N').ZG111R  NON NUMERIC         22046100
                    AIF   ('&ZCGPR' LT '2').ZG111Q                      22050400
                    AIF   ('&ZCGPR' LE '12').ZG111R                     22054700
.ZG111Q             ANOP  ,                                             22059000
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           22063300
&ZMS                SETC  '&ZMS.&UTILRTN"'                              22067600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     22071900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              22076200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22080500
.ZG111R             ANOP  ,                                             22084800
.*-------------------------------------------------------------------   22089100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           22093400
.ZG113              ANOP  ,                                             22097700
&ZTLC               SETC 'CREATE_POOL'                                  22102000
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG140              22106300
&XREQUEST           SETC  'CREATE_POOL'         SET KEYWORD             22110600
                    AIF   (N'&REQUEST LE 1).ZG113A  CK NUM              22114900
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           22119200
&ZMS                SETC  '&ZMS.&REQUEST"'                              22123500
&ZMS                SETC  '&ZMS "REQUEST"'                              22127800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           22132100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22136400
.ZG113A             ANOP  ,                                             22140700
.*------------------------------------------------------------------    22145000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           22149300
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       22153600
.ZG113A0            AIF   (K'&BUFLIST LE 0).ZG113A1  OK                 22157900
&ZCVAL              SETC '&ZCVAL BUFLIST'       INCORRECT KEY USED      22162200
.ZG113A1            AIF   (K'&BUFNUM LE 0).ZG113A2  OK                  22166500
&ZCVAL              SETC '&ZCVAL BUFNUM'        INCORRECT KEY USED      22170800
.ZG113A2            AIF   (K'&BUFTYPE LE 0).ZG113A3  OK                 22175100
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      22179400
.ZG113A3            AIF   (K'&CSMUSER LE 0).ZG113A4  OK                 22183700
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      22188000
.ZG113A4            AIF   (K'&GAP LE 0).ZG113A5  OK                     22192300
&ZCVAL              SETC '&ZCVAL GAP'           INCORRECT KEY USED      22196600
.ZG113A5            AIF   (K'&ERRBFLST LE 0).ZG113A6  OK                22200900
&ZCVAL              SETC '&ZCVAL ERRBFLST'      INCORRECT KEY USED      22205200
.ZG113A6            AIF   (K'&OWNERID LE 0).ZG113A7  OK                 22209500
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      22213800
.ZG113A7            AIF   (K'&TASKID LE 0).ZG113A8  OK                  22218100
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      22222400
.ZG113A8            AIF   (K'&THREAD LE 0).ZG113A9  OK                  22226700
&ZCVAL              SETC '&ZCVAL THREAD'        INCORRECT KEY USED      22231000
.ZG113A9            AIF   (K'&UTILRTN LE 0).ZG113A10  OK                22235300
&ZCVAL              SETC '&ZCVAL UTILRTN'       INCORRECT KEY USED      22239600
.ZG113A10           AIF   (K'&SKIPBUF LE 0).ZG113A11  OK                22243900
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      22248200
.ZG113A11           AIF   (K'&PAD LE 0).ZG113A12  OK                    22252500
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      22256800
.ZG113A12           AIF   (K'&PADCHAR LE 0).ZG113A13  OK                22261100
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      22265400
.ZG113A13           AIF   (K'&SRCERRL LE 0).ZG113A14  OK                22269700
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      22274000
.ZG113A14           AIF   (K'&SRCGAP LE 0).ZG113A15  OK                 22278300
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      22282600
.ZG113A15           AIF   (K'&SRCLIST LE 0).ZG113A16  OK                22286900
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      22291200
.ZG113A16           AIF   (K'&SRCNUM LE 0).ZG113A17  OK                 22295500
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      22299800
.ZG113A17           AIF   (K'&TARGERRL LE 0).ZG113A18  OK               22304100
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      22308400
.ZG113A18           AIF   (K'&TARGGAP LE 0).ZG113A19  OK                22312700
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      22317000
.ZG113A19           AIF   (K'&TARGLIST LE 0).ZG113A20  OK               22321300
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      22325600
.ZG113A20           AIF   (K'&TARGNUM LE 0).ZG113A21  OK                22329900
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      22334200
.ZG113A21           AIF   (K'&POOLTOKN LE 0).ZG113A22  OK               22338500
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      22342800
.ZG113A22           AIF   (K'&WAIT LE 0).ZG113A23  OK                   22347100
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      22351400
.ZG113A23           AIF   (K'&CLEAR LE 0).ZG113A24  OK                  22355700
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      22360000
.ZG113A24           AIF   (K'&FREETO LE 0).ZG113A25  OK                 22364300
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      22368600
.ZG113A25           AIF   (K'&FREERTN LE 0).ZG113A26  OK                22372900
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      22377200
.ZG113A26           AIF   (K'&ZCVAL LE 0).ZG113A27  OK                  22381500
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         22385800
                    AIF  (K'&ZCVAL LE 160).ZG113A27A                    22390100
&ZCVAL              SETC '&ZCVAL'(1,160)                                22394400
&ZCVAL              SETC '&ZCVAL....'                                   22398700
.ZG113A27A          ANOP                                                22403000
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     22407300
&ZMS                SETC  '&ZMS.=&REQUEST"'                             22411600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          22415900
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          22420200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22424500
.ZG113A27           ANOP  ,                                             22428800
.*----------------------------------------------------------------***   22433100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     22437400
                    AIF   (N'&BUFSIZE LE 1).ZG115A  CK NUM              22441700
&ZMS                SETC  '"BUFSIZE='           *KPOSA* MNOTE           22446000
&ZMS                SETC  '&ZMS.&BUFSIZE"'                              22450300
&ZMS                SETC  '&ZMS "BUFSIZE"'                              22454600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           22458900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22463200
.ZG115A             ANOP  ,                                             22467500
.*-------------------------------------------------------------------   22471800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         22476100
&ZXBUFSIZE          SETC  'INPUT'     SET IN/OUTPUT                     22480400
&XBUFSIZE           SETC  '&BUFSIZE(1)'         SET XVARIABLE           22484700
                    AIF   (N'&BUFSIZE GT 1).ZG115B  MULTI PARMS         22489000
&XBUFSIZE           SETC  '&BUFSIZE'  SET XVARIABLE                     22493300
.ZG115B             AIF   (K'&BUFSIZE(1) GT 0).ZG115C                   22497600
&ZXBUFSIZE          SETC  ''          RESET IN/OUTPUT                   22501900
&ZMS                SETC  ' '         *KRQDA*                           22506200
&ZMS                SETC  '&ZMS "BUFSIZE" KEY AND ITS ARGUMENT'         22510500
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       22514800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22519100
.ZG115C             ANOP  ,                                             22523400
.*-------------------------------------------------------------------   22527700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    22532000
                    AIF   (K'&ZXBUFSIZE LE 0).ZG115R  NOT I/O           22536300
                    AIF   ('&XBUFSIZE'(1,1) NE '(').ZG115R              22540600
&ZCGPR              SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                  22544900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG115P                 22549200
                    AIF   (K'&ZCGPR GT 2).ZG115Q                        22553500
                    AIF   ('&ZCGPR' EQ '0').ZG115Q                      22557800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 22562100
                    AIF   (T'&ZCGPR NE 'N').ZG115Q  INVALID REG NAME    22566400
.ZG115P             ANOP  ,                                             22570700
                    AIF   (T'&ZCGPR NE 'N').ZG115R  NON NUMERIC         22575000
                    AIF   ('&ZCGPR' LT '2').ZG115Q                      22579300
                    AIF   ('&ZCGPR' LE '12').ZG115R                     22583600
.ZG115Q             ANOP  ,                                             22587900
&ZMS                SETC  '"BUFSIZE='           *KGPRA* MNOTE           22592200
&ZMS                SETC  '&ZMS.&BUFSIZE"'                              22596500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     22600800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              22605100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22609400
.ZG115R             ANOP  ,                                             22613700
.*----------------------------------------------------------------***   22618000
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             22622300
                    AIF   (N'&BUFSOURC LE 1).ZG118A  CK NUM             22626600
&ZMS                SETC  '"BUFSOURC='          *KPOSA* MNOTE           22630900
&ZMS                SETC  '&ZMS.&BUFSOURC"'                             22635200
&ZMS                SETC  '&ZMS "BUFSOURC"'                             22639500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           22643800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22648100
.ZG118A             ANOP  ,                                             22652400
.*-------------------------------------------------------------------   22656700
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             22661000
&XBUFSOURC          SETC  ''          INITIALIZE XVARIABLE              22665300
.ZG119A   AIF   ('&BUFSOURC(1)' NE 'DSPACE').ZG120A                     22669600
&XBUFSOURC          SETC  'DSPACE'    SET KEYWORD                       22673900
.*-------------------------------------------------------------------   22678200
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             22682500
.ZG120A   AIF   ('&BUFSOURC(1)' NE 'ECSA').ZG121A                       22686800
&XBUFSOURC          SETC  'ECSA'      SET KEYWORD                       22691100
.*-------------------------------------------------------------------   22695400
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             22699700
.ZG121A             AIF   (K'&XBUFSOURC GT 0).ZG121C  KEYWORD           22704000
                    AIF   (K'&BUFSOURC(1) LE 0).ZG121B                  22708300
&ZMS                SETC  '"BUFSOURC='          *KUKWA* MNOTE           22712600
&ZMS                SETC  '&ZMS.&BUFSOURC"'                             22716900
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     22721200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           22725500
&ZMS                SETC  '&ZMS "DSPACE"'       VALID KEYWORD           22729800
&ZMS                SETC  '&ZMS OR "ECSA".'     VALID KEYWORD           22734100
                    MNOTE 8,' &ZMS '                                    22738400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22742700
.ZG121B             ANOP  ,                                             22747000
&XBUFSOURC          SETC  'DSPACE'    SET DEFAULT KEYWORD               22751300
.ZG121C             ANOP  ,                                             22755600
&ZXBUFSOURC         SETC  'INPUT'     SET IN/OUTPUT                     22759900
.*-------------------------------------------------------------------   22764200
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             22768500
                    AIF   (K'&BUFSOURC(1) GT 0).ZG121D  VALID           22772800
&ZXBUFSOURC         SETC  ''          RESET IN/OUTPUT                   22777100
&ZMS                SETC  'THE'                                         22781400
&ZMS                SETC  '&ZMS "BUFSOURC" KEY AND ITS ARGUMENT'        22785700
&ZMS                SETC  '&ZMS ARE REQUIRED.'                          22790000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           22794300
&ZMS                SETC  '&ZMS "DSPACE"'       VALID KEYWORD           22798600
&ZMS                SETC  '&ZMS OR "ECSA".'     VALID KEYWORD           22802900
                    MNOTE 8,' &ZMS '                                    22807200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22811500
.ZG121D             ANOP  ,                                             22815800
.*-------------------------------------------------------------------   22820100
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             22824400
                    AIF   ('&XMF' EQ 'M').ZG124  BYPASS IF MF=M         22828700
.*----------------------------------------------------------------***   22833000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    22837300
                    AIF   (N'&DS_INFO LE 1).ZG123A  CK NUM              22841600
&ZMS                SETC  '"DS_INFO='           *KPOSA* MNOTE           22845900
&ZMS                SETC  '&ZMS.&DS_INFO"'                              22850200
&ZMS                SETC  '&ZMS "DS_INFO"'                              22854500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           22858800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22863100
.ZG123A             ANOP  ,                                             22867400
.*-------------------------------------------------------------------   22871700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        22876000
                    AIF   (K'&DS_INFO(1) LE 0).ZG123C  NO PARM          22880300
&ZXDS_INFO          SETC  'OUTPUT'    SET OUTPUT                        22884600
&XDS_INFO           SETC  '&DS_INFO(1)'         SET XVARIABLE           22888900
                    AIF   (N'&DS_INFO GT 1).ZG123C                      22893200
&XDS_INFO           SETC  '&DS_INFO'  SET XVARIABLE                     22897500
.ZG123C             ANOP  ,                                             22901800
.*-------------------------------------------------------------------   22906100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   22910400
                    AIF   (K'&ZXDS_INFO LE 0).ZG123R  NOT I/O           22914700
                    AIF   ('&XDS_INFO'(1,1) NE '(').ZG123R              22919000
&ZCGPR              SETC  '&XDS_INFO'(2,K'&XDS_INFO-2)                  22923300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG123P                 22927600
                    AIF   (K'&ZCGPR GT 2).ZG123Q                        22931900
                    AIF   ('&ZCGPR' EQ '0').ZG123Q                      22936200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 22940500
                    AIF   (T'&ZCGPR NE 'N').ZG123Q  INVALID REG NAME    22944800
.ZG123P             ANOP  ,                                             22949100
                    AIF   (T'&ZCGPR NE 'N').ZG123R  NON NUMERIC         22953400
                    AIF   ('&ZCGPR' LT '2').ZG123Q                      22957700
                    AIF   ('&ZCGPR' LE '12').ZG123R                     22962000
.ZG123Q             ANOP  ,                                             22966300
&ZMS                SETC  '"DS_INFO='           *KGPRA* MNOTE           22970600
&ZMS                SETC  '&ZMS.&DS_INFO"'                              22974900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     22979200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              22983500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       22987800
.ZG123R             ANOP  ,                                             22992100
.*-------------------------------------------------------------------   22996400
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               23000700
.ZG124              ANOP  ,           END OF BYPASS CHECK               23005000
.*----------------------------------------------------------------***   23009300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     23013600
                    AIF   (N'&EXPBUF LE 1).ZG126A  CK NUM               23017900
&ZMS                SETC  '"EXPBUF='  *KPOSA* MNOTE                     23022200
&ZMS                SETC  '&ZMS.&EXPBUF"'                               23026500
&ZMS                SETC  '&ZMS "EXPBUF"'                               23030800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           23035100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23039400
.ZG126A             ANOP  ,                                             23043700
.*-------------------------------------------------------------------   23048000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         23052300
&ZXEXPBUF           SETC  'INPUT'     SET IN/OUTPUT                     23056600
&XEXPBUF            SETC  '&EXPBUF(1)'          SET XVARIABLE           23060900
                    AIF   (N'&EXPBUF GT 1).ZG126B  MULTI PARMS          23065200
&XEXPBUF            SETC  '&EXPBUF'   SET XVARIABLE                     23069500
.ZG126B             AIF   (K'&EXPBUF(1) GT 0).ZG126C                    23073800
&ZXEXPBUF           SETC  ''          RESET IN/OUTPUT                   23078100
&ZMS                SETC  ' '         *KRQDA*                           23082400
&ZMS                SETC  '&ZMS "EXPBUF" KEY AND ITS ARGUMENT'          23086700
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       23091000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23095300
.ZG126C             ANOP  ,                                             23099600
.*-------------------------------------------------------------------   23103900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    23108200
                    AIF   (K'&ZXEXPBUF LE 0).ZG126R  NOT I/O            23112500
                    AIF   ('&XEXPBUF'(1,1) NE '(').ZG126R               23116800
&ZCGPR              SETC  '&XEXPBUF'(2,K'&XEXPBUF-2)                    23121100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG126P                 23125400
                    AIF   (K'&ZCGPR GT 2).ZG126Q                        23129700
                    AIF   ('&ZCGPR' EQ '0').ZG126Q                      23134000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 23138300
                    AIF   (T'&ZCGPR NE 'N').ZG126Q  INVALID REG NAME    23142600
.ZG126P             ANOP  ,                                             23146900
                    AIF   (T'&ZCGPR NE 'N').ZG126R  NON NUMERIC         23151200
                    AIF   ('&ZCGPR' LT '2').ZG126Q                      23155500
                    AIF   ('&ZCGPR' LE '12').ZG126R                     23159800
.ZG126Q             ANOP  ,                                             23164100
&ZMS                SETC  '"EXPBUF='  *KGPRA* MNOTE                     23168400
&ZMS                SETC  '&ZMS.&EXPBUF"'                               23172700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     23177000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              23181300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23185600
.ZG126R             ANOP  ,                                             23189900
.*----------------------------------------------------------------***   23194200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     23198500
                    AIF   (N'&INITBUF LE 1).ZG129A  CK NUM              23202800
&ZMS                SETC  '"INITBUF='           *KPOSA* MNOTE           23207100
&ZMS                SETC  '&ZMS.&INITBUF"'                              23211400
&ZMS                SETC  '&ZMS "INITBUF"'                              23215700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           23220000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23224300
.ZG129A             ANOP  ,                                             23228600
.*-------------------------------------------------------------------   23232900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         23237200
&ZXINITBUF          SETC  'INPUT'     SET IN/OUTPUT                     23241500
&XINITBUF           SETC  '&INITBUF(1)'         SET XVARIABLE           23245800
                    AIF   (N'&INITBUF GT 1).ZG129B  MULTI PARMS         23250100
&XINITBUF           SETC  '&INITBUF'  SET XVARIABLE                     23254400
.ZG129B             AIF   (K'&INITBUF(1) GT 0).ZG129C                   23258700
&ZXINITBUF          SETC  ''          RESET IN/OUTPUT                   23263000
&ZMS                SETC  ' '         *KRQDA*                           23267300
&ZMS                SETC  '&ZMS "INITBUF" KEY AND ITS ARGUMENT'         23271600
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       23275900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23280200
.ZG129C             ANOP  ,                                             23284500
.*-------------------------------------------------------------------   23288800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    23293100
                    AIF   (K'&ZXINITBUF LE 0).ZG129R  NOT I/O           23297400
                    AIF   ('&XINITBUF'(1,1) NE '(').ZG129R              23301700
&ZCGPR              SETC  '&XINITBUF'(2,K'&XINITBUF-2)                  23306000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG129P                 23310300
                    AIF   (K'&ZCGPR GT 2).ZG129Q                        23314600
                    AIF   ('&ZCGPR' EQ '0').ZG129Q                      23318900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 23323200
                    AIF   (T'&ZCGPR NE 'N').ZG129Q  INVALID REG NAME    23327500
.ZG129P             ANOP  ,                                             23331800
                    AIF   (T'&ZCGPR NE 'N').ZG129R  NON NUMERIC         23336100
                    AIF   ('&ZCGPR' LT '2').ZG129Q                      23340400
                    AIF   ('&ZCGPR' LE '12').ZG129R                     23344700
.ZG129Q             ANOP  ,                                             23349000
&ZMS                SETC  '"INITBUF='           *KGPRA* MNOTE           23353300
&ZMS                SETC  '&ZMS.&INITBUF"'                              23357600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     23361900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              23366200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23370500
.ZG129R             ANOP  ,                                             23374800
.*----------------------------------------------------------------***   23379100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     23383400
                    AIF   (N'&MINFREE LE 1).ZG132A  CK NUM              23387700
&ZMS                SETC  '"MINFREE='           *KPOSA* MNOTE           23392000
&ZMS                SETC  '&ZMS.&MINFREE"'                              23396300
&ZMS                SETC  '&ZMS "MINFREE"'                              23400600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           23404900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23409200
.ZG132A             ANOP  ,                                             23413500
.*-------------------------------------------------------------------   23417800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         23422100
&ZXMINFREE          SETC  'INPUT'     SET IN/OUTPUT                     23426400
&XMINFREE           SETC  '&MINFREE(1)'         SET XVARIABLE           23430700
                    AIF   (N'&MINFREE GT 1).ZG132B  MULTI PARMS         23435000
&XMINFREE           SETC  '&MINFREE'  SET XVARIABLE                     23439300
.ZG132B             AIF   (K'&MINFREE(1) GT 0).ZG132C                   23443600
&ZXMINFREE          SETC  ''          RESET IN/OUTPUT                   23447900
&ZMS                SETC  ' '         *KRQDA*                           23452200
&ZMS                SETC  '&ZMS "MINFREE" KEY AND ITS ARGUMENT'         23456500
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       23460800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23465100
.ZG132C             ANOP  ,                                             23469400
.*-------------------------------------------------------------------   23473700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    23478000
                    AIF   (K'&ZXMINFREE LE 0).ZG132R  NOT I/O           23482300
                    AIF   ('&XMINFREE'(1,1) NE '(').ZG132R              23486600
&ZCGPR              SETC  '&XMINFREE'(2,K'&XMINFREE-2)                  23490900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG132P                 23495200
                    AIF   (K'&ZCGPR GT 2).ZG132Q                        23499500
                    AIF   ('&ZCGPR' EQ '0').ZG132Q                      23503800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 23508100
                    AIF   (T'&ZCGPR NE 'N').ZG132Q  INVALID REG NAME    23512400
.ZG132P             ANOP  ,                                             23516700
                    AIF   (T'&ZCGPR NE 'N').ZG132R  NON NUMERIC         23521000
                    AIF   ('&ZCGPR' LT '2').ZG132Q                      23525300
                    AIF   ('&ZCGPR' LE '12').ZG132R                     23529600
.ZG132Q             ANOP  ,                                             23533900
&ZMS                SETC  '"MINFREE='           *KGPRA* MNOTE           23538200
&ZMS                SETC  '&ZMS.&MINFREE"'                              23542500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     23546800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              23551100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23555400
.ZG132R             ANOP  ,                                             23559700
.*-------------------------------------------------------------------   23564000
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             23568300
                    AIF   ('&XMF' EQ 'M').ZG136  BYPASS IF MF=M         23572600
.*----------------------------------------------------------------***   23576900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    23581200
                    AIF   (N'&RETPTOKN LE 1).ZG135A  CK NUM             23585500
&ZMS                SETC  '"RETPTOKN='          *KPOSA* MNOTE           23589800
&ZMS                SETC  '&ZMS.&RETPTOKN"'                             23594100
&ZMS                SETC  '&ZMS "RETPTOKN"'                             23598400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           23602700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23607000
.ZG135A             ANOP  ,                                             23611300
.*-------------------------------------------------------------------   23615600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        23619900
                    AIF   (K'&RETPTOKN(1) LE 0).ZG135C  NO PARM         23624200
&ZXRETPTOKN         SETC  'OUTPUT'    SET OUTPUT                        23628500
&XRETPTOKN          SETC  '&RETPTOKN(1)'        SET XVARIABLE           23632800
                    AIF   (N'&RETPTOKN GT 1).ZG135C                     23637100
&XRETPTOKN          SETC  '&RETPTOKN'           SET XVARIABLE           23641400
.ZG135C             ANOP  ,                                             23645700
.*-------------------------------------------------------------------   23650000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   23654300
                    AIF   (K'&ZXRETPTOKN LE 0).ZG135R  NOT I/O          23658600
                    AIF   ('&XRETPTOKN'(1,1) NE '(').ZG135R             23662900
&ZCGPR              SETC  '&XRETPTOKN'(2,K'&XRETPTOKN-2)                23667200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                 23671500
                    AIF   (K'&ZCGPR GT 2).ZG135Q                        23675800
                    AIF   ('&ZCGPR' EQ '0').ZG135Q                      23680100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 23684400
                    AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME    23688700
.ZG135P             ANOP  ,                                             23693000
                    AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC         23697300
                    AIF   ('&ZCGPR' LT '2').ZG135Q                      23701600
                    AIF   ('&ZCGPR' LE '12').ZG135R                     23705900
.ZG135Q             ANOP  ,                                             23710200
&ZMS                SETC  '"RETPTOKN='          *KGPRA* MNOTE           23714500
&ZMS                SETC  '&ZMS.&RETPTOKN"'                             23718800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     23723100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              23727400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23731700
.ZG135R             ANOP  ,                                             23736000
.*-------------------------------------------------------------------   23740300
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               23744600
.ZG136              ANOP  ,           END OF BYPASS CHECK               23748900
.*-------------------------------------------------------------------   23753200
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             23757500
                    AIF   ('&XMF' EQ 'M').ZG139  BYPASS IF MF=M         23761800
.*----------------------------------------------------------------***   23766100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    23770400
                    AIF   (N'&STATAREA LE 1).ZG138A  CK NUM             23774700
&ZMS                SETC  '"STATAREA='          *KPOSA* MNOTE           23779000
&ZMS                SETC  '&ZMS.&STATAREA"'                             23783300
&ZMS                SETC  '&ZMS "STATAREA"'                             23787600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           23791900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23796200
.ZG138A             ANOP  ,                                             23800500
.*-------------------------------------------------------------------   23804800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        23809100
                    AIF   (K'&STATAREA(1) LE 0).ZG138C  NO PARM         23813400
&ZXSTATAREA         SETC  'OUTPUT'    SET OUTPUT                        23817700
&XSTATAREA          SETC  '&STATAREA(1)'        SET XVARIABLE           23822000
                    AIF   (N'&STATAREA GT 1).ZG138C                     23826300
&XSTATAREA          SETC  '&STATAREA'           SET XVARIABLE           23830600
.ZG138C             ANOP  ,                                             23834900
.*-------------------------------------------------------------------   23839200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   23843500
                    AIF   (K'&ZXSTATAREA LE 0).ZG138R  NOT I/O          23847800
                    AIF   ('&XSTATAREA'(1,1) NE '(').ZG138R             23852100
&ZCGPR              SETC  '&XSTATAREA'(2,K'&XSTATAREA-2)                23856400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG138P                 23860700
                    AIF   (K'&ZCGPR GT 2).ZG138Q                        23865000
                    AIF   ('&ZCGPR' EQ '0').ZG138Q                      23869300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 23873600
                    AIF   (T'&ZCGPR NE 'N').ZG138Q  INVALID REG NAME    23877900
.ZG138P             ANOP  ,                                             23882200
                    AIF   (T'&ZCGPR NE 'N').ZG138R  NON NUMERIC         23886500
                    AIF   ('&ZCGPR' LT '2').ZG138Q                      23890800
                    AIF   ('&ZCGPR' LE '12').ZG138R                     23895100
.ZG138Q             ANOP  ,                                             23899400
&ZMS                SETC  '"STATAREA='          *KGPRA* MNOTE           23903700
&ZMS                SETC  '&ZMS.&STATAREA"'                             23908000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     23912300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              23916600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23920900
.ZG138R             ANOP  ,                                             23925200
.*-------------------------------------------------------------------   23929500
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               23933800
.ZG139              ANOP  ,           END OF BYPASS CHECK               23938100
.*-------------------------------------------------------------------   23942400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           23946700
.ZG140              ANOP  ,                                             23951000
&ZTLC               SETC 'DELETE_POOL'                                  23955300
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG144              23959600
&XREQUEST           SETC  'DELETE_POOL'         SET KEYWORD             23963900
                    AIF   (N'&REQUEST LE 1).ZG140A  CK NUM              23968200
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           23972500
&ZMS                SETC  '&ZMS.&REQUEST"'                              23976800
&ZMS                SETC  '&ZMS "REQUEST"'                              23981100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           23985400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       23989700
.ZG140A             ANOP  ,                                             23994000
.*------------------------------------------------------------------    23998300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           24002600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       24006900
.ZG140A0            AIF   (K'&BUFLIST LE 0).ZG140A1  OK                 24011200
&ZCVAL              SETC '&ZCVAL BUFLIST'       INCORRECT KEY USED      24015500
.ZG140A1            AIF   (K'&BUFNUM LE 0).ZG140A2  OK                  24019800
&ZCVAL              SETC '&ZCVAL BUFNUM'        INCORRECT KEY USED      24024100
.ZG140A2            AIF   (K'&BUFTYPE LE 0).ZG140A3  OK                 24028400
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      24032700
.ZG140A3            AIF   (K'&CSMUSER LE 0).ZG140A4  OK                 24037000
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      24041300
.ZG140A4            AIF   (K'&GAP LE 0).ZG140A5  OK                     24045600
&ZCVAL              SETC '&ZCVAL GAP'           INCORRECT KEY USED      24049900
.ZG140A5            AIF   (K'&ERRBFLST LE 0).ZG140A6  OK                24054200
&ZCVAL              SETC '&ZCVAL ERRBFLST'      INCORRECT KEY USED      24058500
.ZG140A6            AIF   (K'&OWNERID LE 0).ZG140A7  OK                 24062800
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      24067100
.ZG140A7            AIF   (K'&TASKID LE 0).ZG140A8  OK                  24071400
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      24075700
.ZG140A8            AIF   (K'&THREAD LE 0).ZG140A9  OK                  24080000
&ZCVAL              SETC '&ZCVAL THREAD'        INCORRECT KEY USED      24084300
.ZG140A9            AIF   (K'&UTILRTN LE 0).ZG140A10  OK                24088600
&ZCVAL              SETC '&ZCVAL UTILRTN'       INCORRECT KEY USED      24092900
.ZG140A10           AIF   (K'&SKIPBUF LE 0).ZG140A11  OK                24097200
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      24101500
.ZG140A11           AIF   (K'&PAD LE 0).ZG140A12  OK                    24105800
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      24110100
.ZG140A12           AIF   (K'&PADCHAR LE 0).ZG140A13  OK                24114400
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      24118700
.ZG140A13           AIF   (K'&SRCERRL LE 0).ZG140A14  OK                24123000
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      24127300
.ZG140A14           AIF   (K'&SRCGAP LE 0).ZG140A15  OK                 24131600
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      24135900
.ZG140A15           AIF   (K'&SRCLIST LE 0).ZG140A16  OK                24140200
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      24144500
.ZG140A16           AIF   (K'&SRCNUM LE 0).ZG140A17  OK                 24148800
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      24153100
.ZG140A17           AIF   (K'&TARGERRL LE 0).ZG140A18  OK               24157400
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      24161700
.ZG140A18           AIF   (K'&TARGGAP LE 0).ZG140A19  OK                24166000
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      24170300
.ZG140A19           AIF   (K'&TARGLIST LE 0).ZG140A20  OK               24174600
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      24178900
.ZG140A20           AIF   (K'&TARGNUM LE 0).ZG140A21  OK                24183200
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      24187500
.ZG140A21           AIF   (K'&BUFSIZE LE 0).ZG140A22  OK                24191800
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      24196100
.ZG140A22           AIF   (K'&BUFSOURC LE 0).ZG140A23  OK               24200400
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      24204700
.ZG140A23           AIF   (K'&DS_INFO LE 0).ZG140A24  OK                24209000
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      24213300
.ZG140A24           AIF   (K'&EXPBUF LE 0).ZG140A25  OK                 24217600
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      24221900
.ZG140A25           AIF   (K'&INITBUF LE 0).ZG140A26  OK                24226200
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      24230500
.ZG140A26           AIF   (K'&MINFREE LE 0).ZG140A27  OK                24234800
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      24239100
.ZG140A27           AIF   (K'&RETPTOKN LE 0).ZG140A28  OK               24243400
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      24247700
.ZG140A28           AIF   (K'&STATAREA LE 0).ZG140A29  OK               24252000
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      24256300
.ZG140A29           AIF   (K'&WAIT LE 0).ZG140A30  OK                   24260600
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      24264900
.ZG140A30           AIF   (K'&CLEAR LE 0).ZG140A31  OK                  24269200
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      24273500
.ZG140A31           AIF   (K'&FREETO LE 0).ZG140A32  OK                 24277800
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      24282100
.ZG140A32           AIF   (K'&FREERTN LE 0).ZG140A33  OK                24286400
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      24290700
.ZG140A33           AIF   (K'&ZCVAL LE 0).ZG140A34  OK                  24295000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         24299300
                    AIF  (K'&ZCVAL LE 160).ZG140A34A                    24303600
&ZCVAL              SETC '&ZCVAL'(1,160)                                24307900
&ZCVAL              SETC '&ZCVAL....'                                   24312200
.ZG140A34A          ANOP                                                24316500
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     24320800
&ZMS                SETC  '&ZMS.=&REQUEST"'                             24325100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          24329400
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          24333700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       24338000
.ZG140A34           ANOP  ,                                             24342300
.*----------------------------------------------------------------***   24346600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     24350900
                    AIF   (N'&POOLTOKN LE 1).ZG142A  CK NUM             24355200
&ZMS                SETC  '"POOLTOKN='          *KPOSA* MNOTE           24359500
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             24363800
&ZMS                SETC  '&ZMS "POOLTOKN"'                             24368100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           24372400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       24376700
.ZG142A             ANOP  ,                                             24381000
.*-------------------------------------------------------------------   24385300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         24389600
&ZXPOOLTOKN         SETC  'INPUT'     SET IN/OUTPUT                     24393900
&XPOOLTOKN          SETC  '&POOLTOKN(1)'        SET XVARIABLE           24398200
                    AIF   (N'&POOLTOKN GT 1).ZG142B  MULTI PARMS        24402500
&XPOOLTOKN          SETC  '&POOLTOKN'           SET XVARIABLE           24406800
.ZG142B             AIF   (K'&POOLTOKN(1) GT 0).ZG142C                  24411100
&ZXPOOLTOKN         SETC  ''          RESET IN/OUTPUT                   24415400
&ZMS                SETC  ' '         *KRQDA*                           24419700
&ZMS                SETC  '&ZMS "POOLTOKN" KEY AND ITS ARGUMENT'        24424000
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       24428300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       24432600
.ZG142C             ANOP  ,                                             24436900
.*-------------------------------------------------------------------   24441200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    24445500
                    AIF   (K'&ZXPOOLTOKN LE 0).ZG142R  NOT I/O          24449800
                    AIF   ('&XPOOLTOKN'(1,1) NE '(').ZG142R             24454100
&ZCGPR              SETC  '&XPOOLTOKN'(2,K'&XPOOLTOKN-2)                24458400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG142P                 24462700
                    AIF   (K'&ZCGPR GT 2).ZG142Q                        24467000
                    AIF   ('&ZCGPR' EQ '0').ZG142Q                      24471300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 24475600
                    AIF   (T'&ZCGPR NE 'N').ZG142Q  INVALID REG NAME    24479900
.ZG142P             ANOP  ,                                             24484200
                    AIF   (T'&ZCGPR NE 'N').ZG142R  NON NUMERIC         24488500
                    AIF   ('&ZCGPR' LT '2').ZG142Q                      24492800
                    AIF   ('&ZCGPR' LE '12').ZG142R                     24497100
.ZG142Q             ANOP  ,                                             24501400
&ZMS                SETC  '"POOLTOKN='          *KGPRA* MNOTE           24505700
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             24510000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     24514300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              24518600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       24522900
.ZG142R             ANOP  ,                                             24527200
.*-------------------------------------------------------------------   24531500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           24535800
.ZG144              ANOP  ,                                             24540100
&ZTLC               SETC 'DUMP_INFO'                                    24544400
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG148              24548700
&XREQUEST           SETC  'DUMP_INFO'           SET KEYWORD             24553000
                    AIF   (N'&REQUEST LE 1).ZG144A  CK NUM              24557300
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           24561600
&ZMS                SETC  '&ZMS.&REQUEST"'                              24565900
&ZMS                SETC  '&ZMS "REQUEST"'                              24570200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           24574500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       24578800
.ZG144A             ANOP  ,                                             24583100
.*------------------------------------------------------------------    24587400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           24591700
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       24596000
.ZG144A0            AIF   (K'&BUFLIST LE 0).ZG144A1  OK                 24600300
&ZCVAL              SETC '&ZCVAL BUFLIST'       INCORRECT KEY USED      24604600
.ZG144A1            AIF   (K'&BUFNUM LE 0).ZG144A2  OK                  24608900
&ZCVAL              SETC '&ZCVAL BUFNUM'        INCORRECT KEY USED      24613200
.ZG144A2            AIF   (K'&BUFTYPE LE 0).ZG144A3  OK                 24617500
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      24621800
.ZG144A3            AIF   (K'&CSMUSER LE 0).ZG144A4  OK                 24626100
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      24630400
.ZG144A4            AIF   (K'&GAP LE 0).ZG144A5  OK                     24634700
&ZCVAL              SETC '&ZCVAL GAP'           INCORRECT KEY USED      24639000
.ZG144A5            AIF   (K'&ERRBFLST LE 0).ZG144A6  OK                24643300
&ZCVAL              SETC '&ZCVAL ERRBFLST'      INCORRECT KEY USED      24647600
.ZG144A6            AIF   (K'&OWNERID LE 0).ZG144A7  OK                 24651900
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      24656200
.ZG144A7            AIF   (K'&TASKID LE 0).ZG144A8  OK                  24660500
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      24664800
.ZG144A8            AIF   (K'&THREAD LE 0).ZG144A9  OK                  24669100
&ZCVAL              SETC '&ZCVAL THREAD'        INCORRECT KEY USED      24673400
.ZG144A9            AIF   (K'&UTILRTN LE 0).ZG144A10  OK                24677700
&ZCVAL              SETC '&ZCVAL UTILRTN'       INCORRECT KEY USED      24682000
.ZG144A10           AIF   (K'&SKIPBUF LE 0).ZG144A11  OK                24686300
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      24690600
.ZG144A11           AIF   (K'&PAD LE 0).ZG144A12  OK                    24694900
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      24699200
.ZG144A12           AIF   (K'&PADCHAR LE 0).ZG144A13  OK                24703500
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      24707800
.ZG144A13           AIF   (K'&SRCERRL LE 0).ZG144A14  OK                24712100
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      24716400
.ZG144A14           AIF   (K'&SRCGAP LE 0).ZG144A15  OK                 24720700
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      24725000
.ZG144A15           AIF   (K'&SRCLIST LE 0).ZG144A16  OK                24729300
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      24733600
.ZG144A16           AIF   (K'&SRCNUM LE 0).ZG144A17  OK                 24737900
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      24742200
.ZG144A17           AIF   (K'&TARGERRL LE 0).ZG144A18  OK               24746500
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      24750800
.ZG144A18           AIF   (K'&TARGGAP LE 0).ZG144A19  OK                24755100
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      24759400
.ZG144A19           AIF   (K'&TARGLIST LE 0).ZG144A20  OK               24763700
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      24768000
.ZG144A20           AIF   (K'&TARGNUM LE 0).ZG144A21  OK                24772300
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      24776600
.ZG144A21           AIF   (K'&BUFSIZE LE 0).ZG144A22  OK                24780900
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      24785200
.ZG144A22           AIF   (K'&BUFSOURC LE 0).ZG144A23  OK               24789500
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      24793800
.ZG144A23           AIF   (K'&EXPBUF LE 0).ZG144A24  OK                 24798100
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      24802400
.ZG144A24           AIF   (K'&INITBUF LE 0).ZG144A25  OK                24806700
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      24811000
.ZG144A25           AIF   (K'&MINFREE LE 0).ZG144A26  OK                24815300
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      24819600
.ZG144A26           AIF   (K'&RETPTOKN LE 0).ZG144A27  OK               24823900
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      24828200
.ZG144A27           AIF   (K'&STATAREA LE 0).ZG144A28  OK               24832500
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      24836800
.ZG144A28           AIF   (K'&POOLTOKN LE 0).ZG144A29  OK               24841100
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      24845400
.ZG144A29           AIF   (K'&WAIT LE 0).ZG144A30  OK                   24849700
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      24854000
.ZG144A30           AIF   (K'&CLEAR LE 0).ZG144A31  OK                  24858300
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      24862600
.ZG144A31           AIF   (K'&FREETO LE 0).ZG144A32  OK                 24866900
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      24871200
.ZG144A32           AIF   (K'&FREERTN LE 0).ZG144A33  OK                24875500
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      24879800
.ZG144A33           AIF   (K'&ZCVAL LE 0).ZG144A34  OK                  24884100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         24888400
                    AIF  (K'&ZCVAL LE 160).ZG144A34A                    24892700
&ZCVAL              SETC '&ZCVAL'(1,160)                                24897000
&ZCVAL              SETC '&ZCVAL....'                                   24901300
.ZG144A34A          ANOP                                                24905600
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     24909900
&ZMS                SETC  '&ZMS.=&REQUEST"'                             24914200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          24918500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          24922800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       24927100
.ZG144A34           ANOP  ,                                             24931400
.*-------------------------------------------------------------------   24935700
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             24940000
                    AIF   ('&XMF' EQ 'M').ZG147  BYPASS IF MF=M         24944300
.*----------------------------------------------------------------***   24948600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    24952900
                    AIF   (N'&DS_INFO LE 1).ZG146A  CK NUM              24957200
&ZMS                SETC  '"DS_INFO='           *KPOSA* MNOTE           24961500
&ZMS                SETC  '&ZMS.&DS_INFO"'                              24965800
&ZMS                SETC  '&ZMS "DS_INFO"'                              24970100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           24974400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       24978700
.ZG146A             ANOP  ,                                             24983000
.*-------------------------------------------------------------------   24987300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        24991600
                    AIF   (K'&DS_INFO(1) LE 0).ZG146C  NO PARM          24995900
&ZXDS_INFO          SETC  'OUTPUT'    SET OUTPUT                        25000200
&XDS_INFO           SETC  '&DS_INFO(1)'         SET XVARIABLE           25004500
                    AIF   (N'&DS_INFO GT 1).ZG146C                      25008800
&XDS_INFO           SETC  '&DS_INFO'  SET XVARIABLE                     25013100
.ZG146C             ANOP  ,                                             25017400
.*-------------------------------------------------------------------   25021700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   25026000
                    AIF   (K'&ZXDS_INFO LE 0).ZG146R  NOT I/O           25030300
                    AIF   ('&XDS_INFO'(1,1) NE '(').ZG146R              25034600
&ZCGPR              SETC  '&XDS_INFO'(2,K'&XDS_INFO-2)                  25038900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG146P                 25043200
                    AIF   (K'&ZCGPR GT 2).ZG146Q                        25047500
                    AIF   ('&ZCGPR' EQ '0').ZG146Q                      25051800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 25056100
                    AIF   (T'&ZCGPR NE 'N').ZG146Q  INVALID REG NAME    25060400
.ZG146P             ANOP  ,                                             25064700
                    AIF   (T'&ZCGPR NE 'N').ZG146R  NON NUMERIC         25069000
                    AIF   ('&ZCGPR' LT '2').ZG146Q                      25073300
                    AIF   ('&ZCGPR' LE '12').ZG146R                     25077600
.ZG146Q             ANOP  ,                                             25081900
&ZMS                SETC  '"DS_INFO='           *KGPRA* MNOTE           25086200
&ZMS                SETC  '&ZMS.&DS_INFO"'                              25090500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     25094800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              25099100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25103400
.ZG146R             ANOP  ,                                             25107700
.*-------------------------------------------------------------------   25112000
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               25116300
.ZG147              ANOP  ,           END OF BYPASS CHECK               25120600
.*-------------------------------------------------------------------   25124900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           25129200
.ZG148              ANOP  ,                                             25133500
&ZTLC               SETC 'FIX_BUFFER'                                   25137800
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG172              25142100
&XREQUEST           SETC  'FIX_BUFFER'          SET KEYWORD             25146400
                    AIF   (N'&REQUEST LE 1).ZG148A  CK NUM              25150700
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           25155000
&ZMS                SETC  '&ZMS.&REQUEST"'                              25159300
&ZMS                SETC  '&ZMS "REQUEST"'                              25163600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           25167900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25172200
.ZG148A             ANOP  ,                                             25176500
.*------------------------------------------------------------------    25180800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           25185100
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       25189400
.ZG148A0            AIF   (K'&BUFTYPE LE 0).ZG148A1  OK                 25193700
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      25198000
.ZG148A1            AIF   (K'&CSMUSER LE 0).ZG148A2  OK                 25202300
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      25206600
.ZG148A2            AIF   (K'&OWNERID LE 0).ZG148A3  OK                 25210900
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      25215200
.ZG148A3            AIF   (K'&TASKID LE 0).ZG148A4  OK                  25219500
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      25223800
.ZG148A4            AIF   (K'&SKIPBUF LE 0).ZG148A5  OK                 25228100
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      25232400
.ZG148A5            AIF   (K'&PAD LE 0).ZG148A6  OK                     25236700
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      25241000
.ZG148A6            AIF   (K'&PADCHAR LE 0).ZG148A7  OK                 25245300
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      25249600
.ZG148A7            AIF   (K'&SRCERRL LE 0).ZG148A8  OK                 25253900
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      25258200
.ZG148A8            AIF   (K'&SRCGAP LE 0).ZG148A9  OK                  25262500
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      25266800
.ZG148A9            AIF   (K'&SRCLIST LE 0).ZG148A10  OK                25271100
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      25275400
.ZG148A10           AIF   (K'&SRCNUM LE 0).ZG148A11  OK                 25279700
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      25284000
.ZG148A11           AIF   (K'&TARGERRL LE 0).ZG148A12  OK               25288300
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      25292600
.ZG148A12           AIF   (K'&TARGGAP LE 0).ZG148A13  OK                25296900
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      25301200
.ZG148A13           AIF   (K'&TARGLIST LE 0).ZG148A14  OK               25305500
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      25309800
.ZG148A14           AIF   (K'&TARGNUM LE 0).ZG148A15  OK                25314100
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      25318400
.ZG148A15           AIF   (K'&BUFSIZE LE 0).ZG148A16  OK                25322700
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      25327000
.ZG148A16           AIF   (K'&BUFSOURC LE 0).ZG148A17  OK               25331300
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      25335600
.ZG148A17           AIF   (K'&DS_INFO LE 0).ZG148A18  OK                25339900
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      25344200
.ZG148A18           AIF   (K'&EXPBUF LE 0).ZG148A19  OK                 25348500
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      25352800
.ZG148A19           AIF   (K'&INITBUF LE 0).ZG148A20  OK                25357100
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      25361400
.ZG148A20           AIF   (K'&MINFREE LE 0).ZG148A21  OK                25365700
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      25370000
.ZG148A21           AIF   (K'&RETPTOKN LE 0).ZG148A22  OK               25374300
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      25378600
.ZG148A22           AIF   (K'&STATAREA LE 0).ZG148A23  OK               25382900
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      25387200
.ZG148A23           AIF   (K'&POOLTOKN LE 0).ZG148A24  OK               25391500
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      25395800
.ZG148A24           AIF   (K'&CLEAR LE 0).ZG148A25  OK                  25400100
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      25404400
.ZG148A25           AIF   (K'&FREETO LE 0).ZG148A26  OK                 25408700
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      25413000
.ZG148A26           AIF   (K'&FREERTN LE 0).ZG148A27  OK                25417300
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      25421600
.ZG148A27           AIF   (K'&ZCVAL LE 0).ZG148A28  OK                  25425900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         25430200
                    AIF  (K'&ZCVAL LE 160).ZG148A28A                    25434500
&ZCVAL              SETC '&ZCVAL'(1,160)                                25438800
&ZCVAL              SETC '&ZCVAL....'                                   25443100
.ZG148A28A          ANOP                                                25447400
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     25451700
&ZMS                SETC  '&ZMS.=&REQUEST"'                             25456000
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          25460300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          25464600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25468900
.ZG148A28           ANOP  ,                                             25473200
.*----------------------------------------------------------------***   25477500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     25481800
                    AIF   (N'&BUFLIST LE 1).ZG150A  CK NUM              25486100
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           25490400
&ZMS                SETC  '&ZMS.&BUFLIST"'                              25494700
&ZMS                SETC  '&ZMS "BUFLIST"'                              25499000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           25503300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25507600
.ZG150A             ANOP  ,                                             25511900
.*-------------------------------------------------------------------   25516200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         25520500
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     25524800
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           25529100
                    AIF   (N'&BUFLIST GT 1).ZG150B  MULTI PARMS         25533400
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     25537700
.ZG150B             AIF   (K'&BUFLIST(1) GT 0).ZG150C                   25542000
&ZXBUFLIST          SETC  ''          RESET IN/OUTPUT                   25546300
&ZMS                SETC  ' '         *KRQDA*                           25550600
&ZMS                SETC  '&ZMS "BUFLIST" KEY AND ITS ARGUMENT'         25554900
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       25559200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25563500
.ZG150C             ANOP  ,                                             25567800
.*-------------------------------------------------------------------   25572100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    25576400
                    AIF   (K'&ZXBUFLIST LE 0).ZG150R  NOT I/O           25580700
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZG150R              25585000
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  25589300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG150P                 25593600
                    AIF   (K'&ZCGPR GT 2).ZG150Q                        25597900
                    AIF   ('&ZCGPR' EQ '0').ZG150Q                      25602200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 25606500
                    AIF   (T'&ZCGPR NE 'N').ZG150Q  INVALID REG NAME    25610800
.ZG150P             ANOP  ,                                             25615100
                    AIF   (T'&ZCGPR NE 'N').ZG150R  NON NUMERIC         25619400
                    AIF   ('&ZCGPR' LT '2').ZG150Q                      25623700
                    AIF   ('&ZCGPR' LE '12').ZG150R                     25628000
.ZG150Q             ANOP  ,                                             25632300
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           25636600
&ZMS                SETC  '&ZMS.&BUFLIST"'                              25640900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     25645200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              25649500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25653800
.ZG150R             ANOP  ,                                             25658100
.*----------------------------------------------------------------***   25662400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     25666700
                    AIF   (N'&BUFNUM LE 1).ZG153A  CK NUM               25671000
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     25675300
&ZMS                SETC  '&ZMS.&BUFNUM"'                               25679600
&ZMS                SETC  '&ZMS "BUFNUM"'                               25683900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           25688200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25692500
.ZG153A             ANOP  ,                                             25696800
.*-------------------------------------------------------------------   25701100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         25705400
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     25709700
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           25714000
                    AIF   (N'&BUFNUM GT 1).ZG153B  MULTI PARMS          25718300
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     25722600
.ZG153B             AIF   (K'&BUFNUM(1) GT 0).ZG153C                    25726900
&ZXBUFNUM           SETC  ''          RESET IN/OUTPUT                   25731200
&ZMS                SETC  ' '         *KRQDA*                           25735500
&ZMS                SETC  '&ZMS "BUFNUM" KEY AND ITS ARGUMENT'          25739800
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       25744100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25748400
.ZG153C             ANOP  ,                                             25752700
.*-------------------------------------------------------------------   25757000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    25761300
                    AIF   (K'&ZXBUFNUM LE 0).ZG153R  NOT I/O            25765600
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZG153R               25769900
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    25774200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG153P                 25778500
                    AIF   (K'&ZCGPR GT 2).ZG153Q                        25782800
                    AIF   ('&ZCGPR' EQ '0').ZG153Q                      25787100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 25791400
                    AIF   (T'&ZCGPR NE 'N').ZG153Q  INVALID REG NAME    25795700
.ZG153P             ANOP  ,                                             25800000
                    AIF   (T'&ZCGPR NE 'N').ZG153R  NON NUMERIC         25804300
                    AIF   ('&ZCGPR' LT '2').ZG153Q                      25808600
                    AIF   ('&ZCGPR' LE '12').ZG153R                     25812900
.ZG153Q             ANOP  ,                                             25817200
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     25821500
&ZMS                SETC  '&ZMS.&BUFNUM"'                               25825800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     25830100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              25834400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25838700
.ZG153R             ANOP  ,                                             25843000
.*-------------------------------------------------------------------   25847300
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             25851600
                    AIF   ('&XMF' EQ 'M').ZG157  BYPASS IF MF=M         25855900
.*----------------------------------------------------------------***   25860200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    25864500
                    AIF   (N'&ERRBFLST LE 1).ZG156A  CK NUM             25868800
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           25873100
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             25877400
&ZMS                SETC  '&ZMS "ERRBFLST"'                             25881700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           25886000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       25890300
.ZG156A             ANOP  ,                                             25894600
.*-------------------------------------------------------------------   25898900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        25903200
                    AIF   (K'&ERRBFLST(1) LE 0).ZG156C  NO PARM         25907500
&ZXERRBFLST         SETC  'OUTPUT'    SET OUTPUT                        25911800
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           25916100
                    AIF   (N'&ERRBFLST GT 1).ZG156C                     25920400
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           25924700
.ZG156C             ANOP  ,                                             25929000
.*-------------------------------------------------------------------   25933300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   25937600
                    AIF   (K'&ZXERRBFLST LE 0).ZG156R  NOT I/O          25941900
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZG156R             25946200
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                25950500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG156P                 25954800
                    AIF   (K'&ZCGPR GT 2).ZG156Q                        25959100
                    AIF   ('&ZCGPR' EQ '0').ZG156Q                      25963400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 25967700
                    AIF   (T'&ZCGPR NE 'N').ZG156Q  INVALID REG NAME    25972000
.ZG156P             ANOP  ,                                             25976300
                    AIF   (T'&ZCGPR NE 'N').ZG156R  NON NUMERIC         25980600
                    AIF   ('&ZCGPR' LT '2').ZG156Q                      25984900
                    AIF   ('&ZCGPR' LE '12').ZG156R                     25989200
.ZG156Q             ANOP  ,                                             25993500
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           25997800
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             26002100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     26006400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              26010700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26015000
.ZG156R             ANOP  ,                                             26019300
.*-------------------------------------------------------------------   26023600
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               26027900
.ZG157              ANOP  ,           END OF BYPASS CHECK               26032200
.*----------------------------------------------------------------***   26036500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     26040800
                    AIF   (N'&GAP LE 1).ZG159A  CK NUM                  26045100
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     26049400
&ZMS                SETC  '&ZMS.&GAP"'                                  26053700
&ZMS                SETC  '&ZMS "GAP"'                                  26058000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           26062300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26066600
.ZG159A             ANOP  ,                                             26070900
.*-------------------------------------------------------------------   26075200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         26079500
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     26083800
&XGAP               SETC  '0'                                           26088100
                    AIF   (K'&GAP(1) LE 0).ZG159B  PARM                 26092400
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     26096700
                    AIF   (N'&GAP GT 1).ZG159B  MULTI PARMS             26101000
&XGAP               SETC  '&GAP'      SET XVARIABLE                     26105300
.ZG159B             ANOP  ,                                             26109600
.*-------------------------------------------------------------------   26113900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    26118200
                    AIF   (K'&ZXGAP LE 0).ZG159R  NOT I/O               26122500
                    AIF   ('&XGAP' EQ '0').ZG159R                       26126800
                    AIF   ('&XGAP'(1,1) NE '(').ZG159R                  26131100
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          26135400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG159P                 26139700
                    AIF   (K'&ZCGPR GT 2).ZG159Q                        26144000
                    AIF   ('&ZCGPR' EQ '0').ZG159Q                      26148300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 26152600
                    AIF   (T'&ZCGPR NE 'N').ZG159Q  INVALID REG NAME    26156900
.ZG159P             ANOP  ,                                             26161200
                    AIF   (T'&ZCGPR NE 'N').ZG159R  NON NUMERIC         26165500
                    AIF   ('&ZCGPR' LT '2').ZG159Q                      26169800
                    AIF   ('&ZCGPR' LE '12').ZG159R                     26174100
.ZG159Q             ANOP  ,                                             26178400
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     26182700
&ZMS                SETC  '&ZMS.&GAP"'                                  26187000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     26191300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              26195600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26199900
.ZG159R             ANOP  ,                                             26204200
.*----------------------------------------------------------------***   26208500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     26212800
                    AIF   (N'&THREAD LE 1).ZG162A  CK NUM               26217100
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     26221400
&ZMS                SETC  '&ZMS.&THREAD"'                               26225700
&ZMS                SETC  '&ZMS "THREAD"'                               26230000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           26234300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26238600
.ZG162A             ANOP  ,                                             26242900
.*-------------------------------------------------------------------   26247200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         26251500
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     26255800
&XTHREAD            SETC  '0'                                           26260100
                    AIF   (K'&THREAD(1) LE 0).ZG162B  PARM              26264400
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           26268700
                    AIF   (N'&THREAD GT 1).ZG162B  MULTI PARMS          26273000
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     26277300
.ZG162B             ANOP  ,                                             26281600
.*-------------------------------------------------------------------   26285900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    26290200
                    AIF   (K'&ZXTHREAD LE 0).ZG162R  NOT I/O            26294500
                    AIF   ('&XTHREAD' EQ '0').ZG162R                    26298800
                    AIF   ('&XTHREAD'(1,1) NE '(').ZG162R               26303100
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    26307400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG162P                 26311700
                    AIF   (K'&ZCGPR GT 2).ZG162Q                        26316000
                    AIF   ('&ZCGPR' EQ '0').ZG162Q                      26320300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 26324600
                    AIF   (T'&ZCGPR NE 'N').ZG162Q  INVALID REG NAME    26328900
.ZG162P             ANOP  ,                                             26333200
                    AIF   (T'&ZCGPR NE 'N').ZG162R  NON NUMERIC         26337500
                    AIF   ('&ZCGPR' LT '2').ZG162Q                      26341800
                    AIF   ('&ZCGPR' LE '12').ZG162R                     26346100
.ZG162Q             ANOP  ,                                             26350400
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     26354700
&ZMS                SETC  '&ZMS.&THREAD"'                               26359000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     26363300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              26367600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26371900
.ZG162R             ANOP  ,                                             26376200
.*----------------------------------------------------------------***   26380500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     26384800
                    AIF   (N'&UTILRTN LE 1).ZG165A  CK NUM              26389100
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           26393400
&ZMS                SETC  '&ZMS.&UTILRTN"'                              26397700
&ZMS                SETC  '&ZMS "UTILRTN"'                              26402000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           26406300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26410600
.ZG165A             ANOP  ,                                             26414900
.*-------------------------------------------------------------------   26419200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         26423500
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     26427800
&XUTILRTN           SETC  '0'                                           26432100
                    AIF   (K'&UTILRTN(1) LE 0).ZG165B  PARM             26436400
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           26440700
                    AIF   (N'&UTILRTN GT 1).ZG165B  MULTI PARMS         26445000
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     26449300
.ZG165B             ANOP  ,                                             26453600
.*-------------------------------------------------------------------   26457900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    26462200
                    AIF   (K'&ZXUTILRTN LE 0).ZG165R  NOT I/O           26466500
                    AIF   ('&XUTILRTN' EQ '0').ZG165R                   26470800
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZG165R              26475100
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  26479400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG165P                 26483700
                    AIF   (K'&ZCGPR GT 2).ZG165Q                        26488000
                    AIF   ('&ZCGPR' EQ '0').ZG165Q                      26492300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 26496600
                    AIF   (T'&ZCGPR NE 'N').ZG165Q  INVALID REG NAME    26500900
.ZG165P             ANOP  ,                                             26505200
                    AIF   (T'&ZCGPR NE 'N').ZG165R  NON NUMERIC         26509500
                    AIF   ('&ZCGPR' LT '2').ZG165Q                      26513800
                    AIF   ('&ZCGPR' LE '12').ZG165R                     26518100
.ZG165Q             ANOP  ,                                             26522400
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           26526700
&ZMS                SETC  '&ZMS.&UTILRTN"'                              26531000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     26535300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              26539600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26543900
.ZG165R             ANOP  ,                                             26548200
.*----------------------------------------------------------------***   26552500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26556800
                    AIF   (N'&WAIT LE 1).ZG168A  CK NUM                 26561100
&ZMS                SETC  '"WAIT='    *KPOSA* MNOTE                     26565400
&ZMS                SETC  '&ZMS.&WAIT"'                                 26569700
&ZMS                SETC  '&ZMS "WAIT"'                                 26574000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           26578300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26582600
.ZG168A             ANOP  ,                                             26586900
.*-------------------------------------------------------------------   26591200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26595500
&XWAIT              SETC  ''          INITIALIZE XVARIABLE              26599800
.ZG169A   AIF   ('&WAIT(1)' NE 'NO').ZG170A                             26604100
&XWAIT              SETC  'NO'        SET KEYWORD                       26608400
.*-------------------------------------------------------------------   26612700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26617000
.ZG170A   AIF   ('&WAIT(1)' NE 'YES').ZG171A                            26621300
&XWAIT              SETC  'YES'       SET KEYWORD                       26625600
.*-------------------------------------------------------------------   26629900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26634200
.ZG171A             AIF   (K'&XWAIT GT 0).ZG171C  KEYWORD               26638500
                    AIF   (K'&WAIT(1) LE 0).ZG171B                      26642800
&ZMS                SETC  '"WAIT='    *KUKWA* MNOTE                     26647100
&ZMS                SETC  '&ZMS.&WAIT"'                                 26651400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     26655700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           26660000
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           26664300
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           26668600
                    MNOTE 8,' &ZMS '                                    26672900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26677200
.ZG171B             ANOP  ,                                             26681500
&XWAIT              SETC  'NO'        SET DEFAULT KEYWORD               26685800
.ZG171C             ANOP  ,                                             26690100
&ZXWAIT             SETC  'INPUT'     SET IN/OUTPUT                     26694400
.*-------------------------------------------------------------------   26698700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           26703000
.ZG172              ANOP  ,                                             26707300
&ZTLC               SETC 'FREE_BUFFER'                                  26711600
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG206              26715900
&XREQUEST           SETC  'FREE_BUFFER'         SET KEYWORD             26720200
                    AIF   (N'&REQUEST LE 1).ZG172A  CK NUM              26724500
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           26728800
&ZMS                SETC  '&ZMS.&REQUEST"'                              26733100
&ZMS                SETC  '&ZMS "REQUEST"'                              26737400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           26741700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       26746000
.ZG172A             ANOP  ,                                             26750300
.*------------------------------------------------------------------    26754600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           26758900
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       26763200
.ZG172A0            AIF   (K'&BUFTYPE LE 0).ZG172A1  OK                 26767500
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      26771800
.ZG172A1            AIF   (K'&CSMUSER LE 0).ZG172A2  OK                 26776100
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      26780400
.ZG172A2            AIF   (K'&OWNERID LE 0).ZG172A3  OK                 26784700
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      26789000
.ZG172A3            AIF   (K'&TASKID LE 0).ZG172A4  OK                  26793300
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      26797600
.ZG172A4            AIF   (K'&PAD LE 0).ZG172A5  OK                     26801900
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      26806200
.ZG172A5            AIF   (K'&PADCHAR LE 0).ZG172A6  OK                 26810500
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      26814800
.ZG172A6            AIF   (K'&SRCERRL LE 0).ZG172A7  OK                 26819100
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      26823400
.ZG172A7            AIF   (K'&SRCGAP LE 0).ZG172A8  OK                  26827700
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      26832000
.ZG172A8            AIF   (K'&SRCLIST LE 0).ZG172A9  OK                 26836300
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      26840600
.ZG172A9            AIF   (K'&SRCNUM LE 0).ZG172A10  OK                 26844900
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      26849200
.ZG172A10           AIF   (K'&TARGERRL LE 0).ZG172A11  OK               26853500
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      26857800
.ZG172A11           AIF   (K'&TARGGAP LE 0).ZG172A12  OK                26862100
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      26866400
.ZG172A12           AIF   (K'&TARGLIST LE 0).ZG172A13  OK               26870700
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      26875000
.ZG172A13           AIF   (K'&TARGNUM LE 0).ZG172A14  OK                26879300
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      26883600
.ZG172A14           AIF   (K'&BUFSIZE LE 0).ZG172A15  OK                26887900
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      26892200
.ZG172A15           AIF   (K'&BUFSOURC LE 0).ZG172A16  OK               26896500
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      26900800
.ZG172A16           AIF   (K'&DS_INFO LE 0).ZG172A17  OK                26905100
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      26909400
.ZG172A17           AIF   (K'&EXPBUF LE 0).ZG172A18  OK                 26913700
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      26918000
.ZG172A18           AIF   (K'&INITBUF LE 0).ZG172A19  OK                26922300
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      26926600
.ZG172A19           AIF   (K'&MINFREE LE 0).ZG172A20  OK                26930900
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      26935200
.ZG172A20           AIF   (K'&RETPTOKN LE 0).ZG172A21  OK               26939500
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      26943800
.ZG172A21           AIF   (K'&STATAREA LE 0).ZG172A22  OK               26948100
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      26952400
.ZG172A22           AIF   (K'&POOLTOKN LE 0).ZG172A23  OK               26956700
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      26961000
.ZG172A23           AIF   (K'&WAIT LE 0).ZG172A24  OK                   26965300
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      26969600
.ZG172A24           AIF   (K'&FREERTN LE 0).ZG172A25  OK                26973900
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      26978200
.ZG172A25           AIF   (K'&ZCVAL LE 0).ZG172A26  OK                  26982500
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         26986800
                    AIF  (K'&ZCVAL LE 160).ZG172A26A                    26991100
&ZCVAL              SETC '&ZCVAL'(1,160)                                26995400
&ZCVAL              SETC '&ZCVAL....'                                   26999700
.ZG172A26A          ANOP                                                27004000
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     27008300
&ZMS                SETC  '&ZMS.=&REQUEST"'                             27012600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          27016900
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          27021200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27025500
.ZG172A26           ANOP  ,                                             27029800
.*----------------------------------------------------------------***   27034100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     27038400
                    AIF   (N'&BUFLIST LE 1).ZG174A  CK NUM              27042700
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           27047000
&ZMS                SETC  '&ZMS.&BUFLIST"'                              27051300
&ZMS                SETC  '&ZMS "BUFLIST"'                              27055600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           27059900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27064200
.ZG174A             ANOP  ,                                             27068500
.*-------------------------------------------------------------------   27072800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         27077100
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     27081400
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           27085700
                    AIF   (N'&BUFLIST GT 1).ZG174B  MULTI PARMS         27090000
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     27094300
.ZG174B             AIF   (K'&BUFLIST(1) GT 0).ZG174C                   27098600
&ZXBUFLIST          SETC  ''          RESET IN/OUTPUT                   27102900
&ZMS                SETC  ' '         *KRQDA*                           27107200
&ZMS                SETC  '&ZMS "BUFLIST" KEY AND ITS ARGUMENT'         27111500
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       27115800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27120100
.ZG174C             ANOP  ,                                             27124400
.*-------------------------------------------------------------------   27128700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    27133000
                    AIF   (K'&ZXBUFLIST LE 0).ZG174R  NOT I/O           27137300
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZG174R              27141600
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  27145900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG174P                 27150200
                    AIF   (K'&ZCGPR GT 2).ZG174Q                        27154500
                    AIF   ('&ZCGPR' EQ '0').ZG174Q                      27158800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 27163100
                    AIF   (T'&ZCGPR NE 'N').ZG174Q  INVALID REG NAME    27167400
.ZG174P             ANOP  ,                                             27171700
                    AIF   (T'&ZCGPR NE 'N').ZG174R  NON NUMERIC         27176000
                    AIF   ('&ZCGPR' LT '2').ZG174Q                      27180300
                    AIF   ('&ZCGPR' LE '12').ZG174R                     27184600
.ZG174Q             ANOP  ,                                             27188900
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           27193200
&ZMS                SETC  '&ZMS.&BUFLIST"'                              27197500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     27201800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              27206100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27210400
.ZG174R             ANOP  ,                                             27214700
.*----------------------------------------------------------------***   27219000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     27223300
                    AIF   (N'&BUFNUM LE 1).ZG177A  CK NUM               27227600
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     27231900
&ZMS                SETC  '&ZMS.&BUFNUM"'                               27236200
&ZMS                SETC  '&ZMS "BUFNUM"'                               27240500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           27244800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27249100
.ZG177A             ANOP  ,                                             27253400
.*-------------------------------------------------------------------   27257700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         27262000
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     27266300
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           27270600
                    AIF   (N'&BUFNUM GT 1).ZG177B  MULTI PARMS          27274900
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     27279200
.ZG177B             AIF   (K'&BUFNUM(1) GT 0).ZG177C                    27283500
&ZXBUFNUM           SETC  ''          RESET IN/OUTPUT                   27287800
&ZMS                SETC  ' '         *KRQDA*                           27292100
&ZMS                SETC  '&ZMS "BUFNUM" KEY AND ITS ARGUMENT'          27296400
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       27300700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27305000
.ZG177C             ANOP  ,                                             27309300
.*-------------------------------------------------------------------   27313600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    27317900
                    AIF   (K'&ZXBUFNUM LE 0).ZG177R  NOT I/O            27322200
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZG177R               27326500
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    27330800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG177P                 27335100
                    AIF   (K'&ZCGPR GT 2).ZG177Q                        27339400
                    AIF   ('&ZCGPR' EQ '0').ZG177Q                      27343700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 27348000
                    AIF   (T'&ZCGPR NE 'N').ZG177Q  INVALID REG NAME    27352300
.ZG177P             ANOP  ,                                             27356600
                    AIF   (T'&ZCGPR NE 'N').ZG177R  NON NUMERIC         27360900
                    AIF   ('&ZCGPR' LT '2').ZG177Q                      27365200
                    AIF   ('&ZCGPR' LE '12').ZG177R                     27369500
.ZG177Q             ANOP  ,                                             27373800
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     27378100
&ZMS                SETC  '&ZMS.&BUFNUM"'                               27382400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     27386700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              27391000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27395300
.ZG177R             ANOP  ,                                             27399600
.*----------------------------------------------------------------***   27403900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27408200
                    AIF   (N'&CLEAR LE 1).ZG180A  CK NUM                27412500
&ZMS                SETC  '"CLEAR='   *KPOSA* MNOTE                     27416800
&ZMS                SETC  '&ZMS.&CLEAR"'                                27421100
&ZMS                SETC  '&ZMS "CLEAR"'                                27425400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           27429700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27434000
.ZG180A             ANOP  ,                                             27438300
.*-------------------------------------------------------------------   27442600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27446900
&XCLEAR             SETC  ''          INITIALIZE XVARIABLE              27451200
.ZG181A   AIF   ('&CLEAR(1)' NE 'NO').ZG182A                            27455500
&XCLEAR             SETC  'NO'        SET KEYWORD                       27459800
.*-------------------------------------------------------------------   27464100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27468400
.ZG182A   AIF   ('&CLEAR(1)' NE 'YES').ZG183A                           27472700
&XCLEAR             SETC  'YES'       SET KEYWORD                       27477000
.*-------------------------------------------------------------------   27481300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27485600
.ZG183A             AIF   (K'&XCLEAR GT 0).ZG183C  KEYWORD              27489900
                    AIF   (K'&CLEAR(1) LE 0).ZG183B                     27494200
&ZMS                SETC  '"CLEAR='   *KUKWA* MNOTE                     27498500
&ZMS                SETC  '&ZMS.&CLEAR"'                                27502800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     27507100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           27511400
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           27515700
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           27520000
                    MNOTE 8,' &ZMS '                                    27524300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27528600
.ZG183B             ANOP  ,                                             27532900
&XCLEAR             SETC  'NO'        SET DEFAULT KEYWORD               27537200
.ZG183C             ANOP  ,                                             27541500
&ZXCLEAR            SETC  'INPUT'     SET IN/OUTPUT                     27545800
.*-------------------------------------------------------------------   27550100
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             27554400
                    AIF   ('&XMF' EQ 'M').ZG186  BYPASS IF MF=M         27558700
.*----------------------------------------------------------------***   27563000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    27567300
                    AIF   (N'&ERRBFLST LE 1).ZG185A  CK NUM             27571600
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           27575900
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             27580200
&ZMS                SETC  '&ZMS "ERRBFLST"'                             27584500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           27588800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27593100
.ZG185A             ANOP  ,                                             27597400
.*-------------------------------------------------------------------   27601700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        27606000
                    AIF   (K'&ERRBFLST(1) LE 0).ZG185C  NO PARM         27610300
&ZXERRBFLST         SETC  'OUTPUT'    SET OUTPUT                        27614600
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           27618900
                    AIF   (N'&ERRBFLST GT 1).ZG185C                     27623200
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           27627500
.ZG185C             ANOP  ,                                             27631800
.*-------------------------------------------------------------------   27636100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   27640400
                    AIF   (K'&ZXERRBFLST LE 0).ZG185R  NOT I/O          27644700
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZG185R             27649000
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                27653300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG185P                 27657600
                    AIF   (K'&ZCGPR GT 2).ZG185Q                        27661900
                    AIF   ('&ZCGPR' EQ '0').ZG185Q                      27666200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 27670500
                    AIF   (T'&ZCGPR NE 'N').ZG185Q  INVALID REG NAME    27674800
.ZG185P             ANOP  ,                                             27679100
                    AIF   (T'&ZCGPR NE 'N').ZG185R  NON NUMERIC         27683400
                    AIF   ('&ZCGPR' LT '2').ZG185Q                      27687700
                    AIF   ('&ZCGPR' LE '12').ZG185R                     27692000
.ZG185Q             ANOP  ,                                             27696300
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           27700600
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             27704900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     27709200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              27713500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27717800
.ZG185R             ANOP  ,                                             27722100
.*-------------------------------------------------------------------   27726400
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               27730700
.ZG186              ANOP  ,           END OF BYPASS CHECK               27735000
.*----------------------------------------------------------------***   27739300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27743600
                    AIF   (N'&FREETO LE 1).ZG188A  CK NUM               27747900
&ZMS                SETC  '"FREETO='  *KPOSA* MNOTE                     27752200
&ZMS                SETC  '&ZMS.&FREETO"'                               27756500
&ZMS                SETC  '&ZMS "FREETO"'                               27760800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           27765100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27769400
.ZG188A             ANOP  ,                                             27773700
.*-------------------------------------------------------------------   27778000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27782300
&XFREETO            SETC  ''          INITIALIZE XVARIABLE              27786600
.ZG189A   AIF   ('&FREETO(1)' NE 'USER').ZG190A                         27790900
&XFREETO            SETC  'USER'      SET KEYWORD                       27795200
.*-------------------------------------------------------------------   27799500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27803800
.ZG190A   AIF   ('&FREETO(1)' NE 'CSM').ZG191A                          27808100
&XFREETO            SETC  'CSM'       SET KEYWORD                       27812400
.*-------------------------------------------------------------------   27816700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27821000
.ZG191A             AIF   (K'&XFREETO GT 0).ZG191C  KEYWORD             27825300
                    AIF   (K'&FREETO(1) LE 0).ZG191B                    27829600
&ZMS                SETC  '"FREETO='  *KUKWA* MNOTE                     27833900
&ZMS                SETC  '&ZMS.&FREETO"'                               27838200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     27842500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           27846800
&ZMS                SETC  '&ZMS "USER"'         VALID KEYWORD           27851100
&ZMS                SETC  '&ZMS OR "CSM".'      VALID KEYWORD           27855400
                    MNOTE 8,' &ZMS '                                    27859700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27864000
.ZG191B             ANOP  ,                                             27868300
&XFREETO            SETC  'USER'      SET DEFAULT KEYWORD               27872600
.ZG191C             ANOP  ,                                             27876900
&ZXFREETO           SETC  'INPUT'     SET IN/OUTPUT                     27881200
.*----------------------------------------------------------------***   27885500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     27889800
                    AIF   (N'&GAP LE 1).ZG193A  CK NUM                  27894100
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     27898400
&ZMS                SETC  '&ZMS.&GAP"'                                  27902700
&ZMS                SETC  '&ZMS "GAP"'                                  27907000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           27911300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       27915600
.ZG193A             ANOP  ,                                             27919900
.*-------------------------------------------------------------------   27924200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         27928500
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     27932800
&XGAP               SETC  '0'                                           27937100
                    AIF   (K'&GAP(1) LE 0).ZG193B  PARM                 27941400
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     27945700
                    AIF   (N'&GAP GT 1).ZG193B  MULTI PARMS             27950000
&XGAP               SETC  '&GAP'      SET XVARIABLE                     27954300
.ZG193B             ANOP  ,                                             27958600
.*-------------------------------------------------------------------   27962900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    27967200
                    AIF   (K'&ZXGAP LE 0).ZG193R  NOT I/O               27971500
                    AIF   ('&XGAP' EQ '0').ZG193R                       27975800
                    AIF   ('&XGAP'(1,1) NE '(').ZG193R                  27980100
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          27984400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG193P                 27988700
                    AIF   (K'&ZCGPR GT 2).ZG193Q                        27993000
                    AIF   ('&ZCGPR' EQ '0').ZG193Q                      27997300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 28001600
                    AIF   (T'&ZCGPR NE 'N').ZG193Q  INVALID REG NAME    28005900
.ZG193P             ANOP  ,                                             28010200
                    AIF   (T'&ZCGPR NE 'N').ZG193R  NON NUMERIC         28014500
                    AIF   ('&ZCGPR' LT '2').ZG193Q                      28018800
                    AIF   ('&ZCGPR' LE '12').ZG193R                     28023100
.ZG193Q             ANOP  ,                                             28027400
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     28031700
&ZMS                SETC  '&ZMS.&GAP"'                                  28036000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     28040300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              28044600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28048900
.ZG193R             ANOP  ,                                             28053200
.*----------------------------------------------------------------***   28057500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             28061800
                    AIF   (N'&SKIPBUF LE 1).ZG196A  CK NUM              28066100
&ZMS                SETC  '"SKIPBUF='           *KPOSA* MNOTE           28070400
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              28074700
&ZMS                SETC  '&ZMS "SKIPBUF"'                              28079000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           28083300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28087600
.ZG196A             ANOP  ,                                             28091900
.*-------------------------------------------------------------------   28096200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             28100500
&XSKIPBUF           SETC  ''          INITIALIZE XVARIABLE              28104800
.ZG197A   AIF   ('&SKIPBUF(1)' NE 'NO').ZG198A                          28109100
&XSKIPBUF           SETC  'NO'        SET KEYWORD                       28113400
.*-------------------------------------------------------------------   28117700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             28122000
.ZG198A   AIF   ('&SKIPBUF(1)' NE 'YES').ZG199A                         28126300
&XSKIPBUF           SETC  'YES'       SET KEYWORD                       28130600
.*-------------------------------------------------------------------   28134900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             28139200
.ZG199A             AIF   (K'&XSKIPBUF GT 0).ZG199C  KEYWORD            28143500
                    AIF   (K'&SKIPBUF(1) LE 0).ZG199B                   28147800
&ZMS                SETC  '"SKIPBUF='           *KUKWA* MNOTE           28152100
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              28156400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     28160700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           28165000
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           28169300
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           28173600
                    MNOTE 8,' &ZMS '                                    28177900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28182200
.ZG199B             ANOP  ,                                             28186500
&XSKIPBUF           SETC  'NO'        SET DEFAULT KEYWORD               28190800
.ZG199C             ANOP  ,                                             28195100
&ZXSKIPBUF          SETC  'INPUT'     SET IN/OUTPUT                     28199400
.*----------------------------------------------------------------***   28203700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     28208000
                    AIF   (N'&THREAD LE 1).ZG201A  CK NUM               28212300
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     28216600
&ZMS                SETC  '&ZMS.&THREAD"'                               28220900
&ZMS                SETC  '&ZMS "THREAD"'                               28225200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           28229500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28233800
.ZG201A             ANOP  ,                                             28238100
.*-------------------------------------------------------------------   28242400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         28246700
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     28251000
&XTHREAD            SETC  '0'                                           28255300
                    AIF   (K'&THREAD(1) LE 0).ZG201B  PARM              28259600
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           28263900
                    AIF   (N'&THREAD GT 1).ZG201B  MULTI PARMS          28268200
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     28272500
.ZG201B             ANOP  ,                                             28276800
.*-------------------------------------------------------------------   28281100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    28285400
                    AIF   (K'&ZXTHREAD LE 0).ZG201R  NOT I/O            28289700
                    AIF   ('&XTHREAD' EQ '0').ZG201R                    28294000
                    AIF   ('&XTHREAD'(1,1) NE '(').ZG201R               28298300
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    28302600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG201P                 28306900
                    AIF   (K'&ZCGPR GT 2).ZG201Q                        28311200
                    AIF   ('&ZCGPR' EQ '0').ZG201Q                      28315500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 28319800
                    AIF   (T'&ZCGPR NE 'N').ZG201Q  INVALID REG NAME    28324100
.ZG201P             ANOP  ,                                             28328400
                    AIF   (T'&ZCGPR NE 'N').ZG201R  NON NUMERIC         28332700
                    AIF   ('&ZCGPR' LT '2').ZG201Q                      28337000
                    AIF   ('&ZCGPR' LE '12').ZG201R                     28341300
.ZG201Q             ANOP  ,                                             28345600
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     28349900
&ZMS                SETC  '&ZMS.&THREAD"'                               28354200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     28358500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              28362800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28367100
.ZG201R             ANOP  ,                                             28371400
.*----------------------------------------------------------------***   28375700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     28380000
                    AIF   (N'&UTILRTN LE 1).ZG204A  CK NUM              28384300
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           28388600
&ZMS                SETC  '&ZMS.&UTILRTN"'                              28392900
&ZMS                SETC  '&ZMS "UTILRTN"'                              28397200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           28401500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28405800
.ZG204A             ANOP  ,                                             28410100
.*-------------------------------------------------------------------   28414400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         28418700
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     28423000
&XUTILRTN           SETC  '0'                                           28427300
                    AIF   (K'&UTILRTN(1) LE 0).ZG204B  PARM             28431600
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           28435900
                    AIF   (N'&UTILRTN GT 1).ZG204B  MULTI PARMS         28440200
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     28444500
.ZG204B             ANOP  ,                                             28448800
.*-------------------------------------------------------------------   28453100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    28457400
                    AIF   (K'&ZXUTILRTN LE 0).ZG204R  NOT I/O           28461700
                    AIF   ('&XUTILRTN' EQ '0').ZG204R                   28466000
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZG204R              28470300
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  28474600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG204P                 28478900
                    AIF   (K'&ZCGPR GT 2).ZG204Q                        28483200
                    AIF   ('&ZCGPR' EQ '0').ZG204Q                      28487500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 28491800
                    AIF   (T'&ZCGPR NE 'N').ZG204Q  INVALID REG NAME    28496100
.ZG204P             ANOP  ,                                             28500400
                    AIF   (T'&ZCGPR NE 'N').ZG204R  NON NUMERIC         28504700
                    AIF   ('&ZCGPR' LT '2').ZG204Q                      28509000
                    AIF   ('&ZCGPR' LE '12').ZG204R                     28513300
.ZG204Q             ANOP  ,                                             28517600
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           28521900
&ZMS                SETC  '&ZMS.&UTILRTN"'                              28526200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     28530500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              28534800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28539100
.ZG204R             ANOP  ,                                             28543400
.*-------------------------------------------------------------------   28547700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           28552000
.ZG206              ANOP  ,                                             28556300
&ZTLC               SETC 'GET_BUFFER'                                   28560600
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG259              28564900
&XREQUEST           SETC  'GET_BUFFER'          SET KEYWORD             28569200
                    AIF   (N'&REQUEST LE 1).ZG206A  CK NUM              28573500
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           28577800
&ZMS                SETC  '&ZMS.&REQUEST"'                              28582100
&ZMS                SETC  '&ZMS "REQUEST"'                              28586400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           28590700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28595000
.ZG206A             ANOP  ,                                             28599300
.*------------------------------------------------------------------    28603600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           28607900
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       28612200
.ZG206A0            AIF   (K'&SKIPBUF LE 0).ZG206A1  OK                 28616500
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      28620800
.ZG206A1            AIF   (K'&PAD LE 0).ZG206A2  OK                     28625100
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      28629400
.ZG206A2            AIF   (K'&PADCHAR LE 0).ZG206A3  OK                 28633700
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      28638000
.ZG206A3            AIF   (K'&SRCERRL LE 0).ZG206A4  OK                 28642300
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      28646600
.ZG206A4            AIF   (K'&SRCGAP LE 0).ZG206A5  OK                  28650900
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      28655200
.ZG206A5            AIF   (K'&SRCLIST LE 0).ZG206A6  OK                 28659500
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      28663800
.ZG206A6            AIF   (K'&SRCNUM LE 0).ZG206A7  OK                  28668100
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      28672400
.ZG206A7            AIF   (K'&TARGERRL LE 0).ZG206A8  OK                28676700
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      28681000
.ZG206A8            AIF   (K'&TARGGAP LE 0).ZG206A9  OK                 28685300
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      28689600
.ZG206A9            AIF   (K'&TARGLIST LE 0).ZG206A10  OK               28693900
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      28698200
.ZG206A10           AIF   (K'&TARGNUM LE 0).ZG206A11  OK                28702500
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      28706800
.ZG206A11           AIF   (K'&BUFSIZE LE 0).ZG206A12  OK                28711100
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      28715400
.ZG206A12           AIF   (K'&BUFSOURC LE 0).ZG206A13  OK               28719700
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      28724000
.ZG206A13           AIF   (K'&DS_INFO LE 0).ZG206A14  OK                28728300
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      28732600
.ZG206A14           AIF   (K'&EXPBUF LE 0).ZG206A15  OK                 28736900
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      28741200
.ZG206A15           AIF   (K'&INITBUF LE 0).ZG206A16  OK                28745500
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      28749800
.ZG206A16           AIF   (K'&MINFREE LE 0).ZG206A17  OK                28754100
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      28758400
.ZG206A17           AIF   (K'&RETPTOKN LE 0).ZG206A18  OK               28762700
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      28767000
.ZG206A18           AIF   (K'&STATAREA LE 0).ZG206A19  OK               28771300
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      28775600
.ZG206A19           AIF   (K'&FREETO LE 0).ZG206A20  OK                 28779900
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      28784200
.ZG206A20           AIF   (K'&ZCVAL LE 0).ZG206A21  OK                  28788500
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         28792800
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     28797100
&ZMS                SETC  '&ZMS.=&REQUEST"'                             28801400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          28805700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          28810000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28814300
.ZG206A21           ANOP  ,                                             28818600
.*----------------------------------------------------------------***   28822900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     28827200
                    AIF   (N'&BUFLIST LE 1).ZG208A  CK NUM              28831500
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           28835800
&ZMS                SETC  '&ZMS.&BUFLIST"'                              28840100
&ZMS                SETC  '&ZMS "BUFLIST"'                              28844400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           28848700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28853000
.ZG208A             ANOP  ,                                             28857300
.*-------------------------------------------------------------------   28861600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         28865900
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     28870200
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           28874500
                    AIF   (N'&BUFLIST GT 1).ZG208B  MULTI PARMS         28878800
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     28883100
.ZG208B             AIF   (K'&BUFLIST(1) GT 0).ZG208C                   28887400
&ZXBUFLIST          SETC  ''          RESET IN/OUTPUT                   28891700
&ZMS                SETC  ' '         *KRQDA*                           28896000
&ZMS                SETC  '&ZMS "BUFLIST" KEY AND ITS ARGUMENT'         28900300
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       28904600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28908900
.ZG208C             ANOP  ,                                             28913200
.*-------------------------------------------------------------------   28917500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    28921800
                    AIF   (K'&ZXBUFLIST LE 0).ZG208R  NOT I/O           28926100
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZG208R              28930400
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  28934700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG208P                 28939000
                    AIF   (K'&ZCGPR GT 2).ZG208Q                        28943300
                    AIF   ('&ZCGPR' EQ '0').ZG208Q                      28947600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 28951900
                    AIF   (T'&ZCGPR NE 'N').ZG208Q  INVALID REG NAME    28956200
.ZG208P             ANOP  ,                                             28960500
                    AIF   (T'&ZCGPR NE 'N').ZG208R  NON NUMERIC         28964800
                    AIF   ('&ZCGPR' LT '2').ZG208Q                      28969100
                    AIF   ('&ZCGPR' LE '12').ZG208R                     28973400
.ZG208Q             ANOP  ,                                             28977700
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           28982000
&ZMS                SETC  '&ZMS.&BUFLIST"'                              28986300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     28990600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              28994900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       28999200
.ZG208R             ANOP  ,                                             29003500
.*----------------------------------------------------------------***   29007800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     29012100
                    AIF   (N'&BUFNUM LE 1).ZG211A  CK NUM               29016400
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     29020700
&ZMS                SETC  '&ZMS.&BUFNUM"'                               29025000
&ZMS                SETC  '&ZMS "BUFNUM"'                               29029300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           29033600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29037900
.ZG211A             ANOP  ,                                             29042200
.*-------------------------------------------------------------------   29046500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         29050800
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     29055100
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           29059400
                    AIF   (N'&BUFNUM GT 1).ZG211B  MULTI PARMS          29063700
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     29068000
.ZG211B             AIF   (K'&BUFNUM(1) GT 0).ZG211C                    29072300
&ZXBUFNUM           SETC  ''          RESET IN/OUTPUT                   29076600
&ZMS                SETC  ' '         *KRQDA*                           29080900
&ZMS                SETC  '&ZMS "BUFNUM" KEY AND ITS ARGUMENT'          29085200
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       29089500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29093800
.ZG211C             ANOP  ,                                             29098100
.*-------------------------------------------------------------------   29102400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    29106700
                    AIF   (K'&ZXBUFNUM LE 0).ZG211R  NOT I/O            29111000
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZG211R               29115300
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    29119600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG211P                 29123900
                    AIF   (K'&ZCGPR GT 2).ZG211Q                        29128200
                    AIF   ('&ZCGPR' EQ '0').ZG211Q                      29132500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 29136800
                    AIF   (T'&ZCGPR NE 'N').ZG211Q  INVALID REG NAME    29141100
.ZG211P             ANOP  ,                                             29145400
                    AIF   (T'&ZCGPR NE 'N').ZG211R  NON NUMERIC         29149700
                    AIF   ('&ZCGPR' LT '2').ZG211Q                      29154000
                    AIF   ('&ZCGPR' LE '12').ZG211R                     29158300
.ZG211Q             ANOP  ,                                             29162600
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     29166900
&ZMS                SETC  '&ZMS.&BUFNUM"'                               29171200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     29175500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              29179800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29184100
.ZG211R             ANOP  ,                                             29188400
.*----------------------------------------------------------------***   29192700
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             29197000
                    AIF   (N'&BUFTYPE LE 1).ZG214A  CK NUM              29201300
&ZMS                SETC  '"BUFTYPE='           *KPOSA* MNOTE           29205600
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              29209900
&ZMS                SETC  '&ZMS "BUFTYPE"'                              29214200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           29218500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29222800
.ZG214A             ANOP  ,                                             29227100
.*-------------------------------------------------------------------   29231400
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             29235700
&XBUFTYPE           SETC  ''          INITIALIZE XVARIABLE              29240000
.ZG215A   AIF   ('&BUFTYPE(1)' NE 'PAGEELIG').ZG216A                    29244300
&XBUFTYPE           SETC  'PAGEELIG'  SET KEYWORD                       29248600
.*-------------------------------------------------------------------   29252900
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             29257200
.ZG216A   AIF   ('&BUFTYPE(1)' NE 'PAGEABLE').ZG217A                    29261500
&XBUFTYPE           SETC  'PAGEABLE'  SET KEYWORD                       29265800
.*-------------------------------------------------------------------   29270100
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             29274400
.ZG217A   AIF   ('&BUFTYPE(1)' NE 'FIXED').ZG218A                       29278700
&XBUFTYPE           SETC  'FIXED'     SET KEYWORD                       29283000
.*-------------------------------------------------------------------   29287300
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             29291600
.ZG218A             AIF   (K'&XBUFTYPE GT 0).ZG218C  KEYWORD            29295900
                    AIF   (K'&BUFTYPE(1) LE 0).ZG218B                   29300200
&ZMS                SETC  '"BUFTYPE='           *KUKWA* MNOTE           29304500
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              29308800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     29313100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           29317400
&ZMS                SETC  '&ZMS "PAGEELIG",'    VALID KEYWORD           29321700
&ZMS                SETC  '&ZMS "PAGEABLE",'    VALID KEYWORD           29326000
&ZMS                SETC  '&ZMS OR "FIXED".'    VALID KEYWORD           29330300
                    MNOTE 8,' &ZMS '                                    29334600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29338900
.ZG218B             ANOP  ,                                             29343200
&XBUFTYPE           SETC  'PAGEELIG'  SET DEFAULT KEYWORD               29347500
.ZG218C             ANOP  ,                                             29351800
&ZXBUFTYPE          SETC  'INPUT'     SET IN/OUTPUT                     29356100
.*-------------------------------------------------------------------   29360400
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             29364700
                    AIF   (K'&BUFTYPE(1) GT 0).ZG218D  VALID            29369000
&ZXBUFTYPE          SETC  ''          RESET IN/OUTPUT                   29373300
&ZMS                SETC  'THE'                                         29377600
&ZMS                SETC  '&ZMS "BUFTYPE" KEY AND ITS ARGUMENT'         29381900
&ZMS                SETC  '&ZMS ARE REQUIRED.'                          29386200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           29390500
&ZMS                SETC  '&ZMS "PAGEELIG",'    VALID KEYWORD           29394800
&ZMS                SETC  '&ZMS "PAGEABLE",'    VALID KEYWORD           29399100
&ZMS                SETC  '&ZMS OR "FIXED".'    VALID KEYWORD           29403400
                    MNOTE 8,' &ZMS '                                    29407700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29412000
.ZG218D             ANOP  ,                                             29416300
.*----------------------------------------------------------------***   29420600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29424900
                    AIF   (N'&CLEAR LE 1).ZG220A  CK NUM                29429200
&ZMS                SETC  '"CLEAR='   *KPOSA* MNOTE                     29433500
&ZMS                SETC  '&ZMS.&CLEAR"'                                29437800
&ZMS                SETC  '&ZMS "CLEAR"'                                29442100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           29446400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29450700
.ZG220A             ANOP  ,                                             29455000
.*-------------------------------------------------------------------   29459300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29463600
&XCLEAR             SETC  ''          INITIALIZE XVARIABLE              29467900
.ZG221A   AIF   ('&CLEAR(1)' NE 'NO').ZG222A                            29472200
&XCLEAR             SETC  'NO'        SET KEYWORD                       29476500
.*-------------------------------------------------------------------   29480800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29485100
.ZG222A   AIF   ('&CLEAR(1)' NE 'YES').ZG223A                           29489400
&XCLEAR             SETC  'YES'       SET KEYWORD                       29493700
.*-------------------------------------------------------------------   29498000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29502300
.ZG223A             AIF   (K'&XCLEAR GT 0).ZG223C  KEYWORD              29506600
                    AIF   (K'&CLEAR(1) LE 0).ZG223B                     29510900
&ZMS                SETC  '"CLEAR='   *KUKWA* MNOTE                     29515200
&ZMS                SETC  '&ZMS.&CLEAR"'                                29519500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     29523800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           29528100
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           29532400
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           29536700
                    MNOTE 8,' &ZMS '                                    29541000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29545300
.ZG223B             ANOP  ,                                             29549600
&XCLEAR             SETC  'NO'        SET DEFAULT KEYWORD               29553900
.ZG223C             ANOP  ,                                             29558200
&ZXCLEAR            SETC  'INPUT'     SET IN/OUTPUT                     29562500
.*----------------------------------------------------------------***   29566800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29571100
                    AIF   (N'&CSMUSER LE 1).ZG225A  CK NUM              29575400
&ZMS                SETC  '"CSMUSER='           *KPOSA* MNOTE           29579700
&ZMS                SETC  '&ZMS.&CSMUSER"'                              29584000
&ZMS                SETC  '&ZMS "CSMUSER"'                              29588300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           29592600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29596900
.ZG225A             ANOP  ,                                             29601200
.*-------------------------------------------------------------------   29605500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29609800
&XCSMUSER           SETC  ''          INITIALIZE XVARIABLE              29614100
.ZG226A   AIF   ('&CSMUSER(1)' NE 'NO').ZG227A                          29618400
&XCSMUSER           SETC  'NO'        SET KEYWORD                       29622700
.*-------------------------------------------------------------------   29627000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29631300
.ZG227A   AIF   ('&CSMUSER(1)' NE 'YES').ZG228A                         29635600
&XCSMUSER           SETC  'YES'       SET KEYWORD                       29639900
.*-------------------------------------------------------------------   29644200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             29648500
.ZG228A             AIF   (K'&XCSMUSER GT 0).ZG228C  KEYWORD            29652800
                    AIF   (K'&CSMUSER(1) LE 0).ZG228B                   29657100
&ZMS                SETC  '"CSMUSER='           *KUKWA* MNOTE           29661400
&ZMS                SETC  '&ZMS.&CSMUSER"'                              29665700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     29670000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           29674300
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           29678600
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           29682900
                    MNOTE 8,' &ZMS '                                    29687200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29691500
.ZG228B             ANOP  ,                                             29695800
&XCSMUSER           SETC  'NO'        SET DEFAULT KEYWORD               29700100
.ZG228C             ANOP  ,                                             29704400
&ZXCSMUSER          SETC  'INPUT'     SET IN/OUTPUT                     29708700
.*-------------------------------------------------------------------   29713000
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             29717300
                    AIF   ('&XMF' EQ 'M').ZG231  BYPASS IF MF=M         29721600
.*----------------------------------------------------------------***   29725900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    29730200
                    AIF   (N'&ERRBFLST LE 1).ZG230A  CK NUM             29734500
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           29738800
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             29743100
&ZMS                SETC  '&ZMS "ERRBFLST"'                             29747400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           29751700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29756000
.ZG230A             ANOP  ,                                             29760300
.*-------------------------------------------------------------------   29764600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        29768900
                    AIF   (K'&ERRBFLST(1) LE 0).ZG230C  NO PARM         29773200
&ZXERRBFLST         SETC  'OUTPUT'    SET OUTPUT                        29777500
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           29781800
                    AIF   (N'&ERRBFLST GT 1).ZG230C                     29786100
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           29790400
.ZG230C             ANOP  ,                                             29794700
.*-------------------------------------------------------------------   29799000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   29803300
                    AIF   (K'&ZXERRBFLST LE 0).ZG230R  NOT I/O          29807600
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZG230R             29811900
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                29816200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG230P                 29820500
                    AIF   (K'&ZCGPR GT 2).ZG230Q                        29824800
                    AIF   ('&ZCGPR' EQ '0').ZG230Q                      29829100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 29833400
                    AIF   (T'&ZCGPR NE 'N').ZG230Q  INVALID REG NAME    29837700
.ZG230P             ANOP  ,                                             29842000
                    AIF   (T'&ZCGPR NE 'N').ZG230R  NON NUMERIC         29846300
                    AIF   ('&ZCGPR' LT '2').ZG230Q                      29850600
                    AIF   ('&ZCGPR' LE '12').ZG230R                     29854900
.ZG230Q             ANOP  ,                                             29859200
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           29863500
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             29867800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     29872100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              29876400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29880700
.ZG230R             ANOP  ,                                             29885000
.*-------------------------------------------------------------------   29889300
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               29893600
.ZG231              ANOP  ,           END OF BYPASS CHECK               29897900
.*----------------------------------------------------------------***   29902200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     29906500
                    AIF   (N'&FREERTN LE 1).ZG233A  CK NUM              29910800
&ZMS                SETC  '"FREERTN='           *KPOSA* MNOTE           29915100
&ZMS                SETC  '&ZMS.&FREERTN"'                              29919400
&ZMS                SETC  '&ZMS "FREERTN"'                              29923700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           29928000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       29932300
.ZG233A             ANOP  ,                                             29936600
.*-------------------------------------------------------------------   29940900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         29945200
&ZXFREERTN          SETC  'INPUT'     SET IN/OUTPUT                     29949500
&XFREERTN           SETC  'CSM'                                         29953800
                    AIF   (K'&FREERTN(1) LE 0).ZG233B  PARM             29958100
&XFREERTN           SETC  '&FREERTN(1)'         SET XVARIABLE           29962400
                    AIF   (N'&FREERTN GT 1).ZG233B  MULTI PARMS         29966700
&XFREERTN           SETC  '&FREERTN'  SET XVARIABLE                     29971000
.ZG233B             ANOP  ,                                             29975300
.*-------------------------------------------------------------------   29979600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    29983900
                    AIF   (K'&ZXFREERTN LE 0).ZG233R  NOT I/O           29988200
                    AIF   ('&XFREERTN' EQ 'CSM').ZG233R                 29992500
                    AIF   ('&XFREERTN'(1,1) NE '(').ZG233R              29996800
&ZCGPR              SETC  '&XFREERTN'(2,K'&XFREERTN-2)                  30001100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG233P                 30005400
                    AIF   (K'&ZCGPR GT 2).ZG233Q                        30009700
                    AIF   ('&ZCGPR' EQ '0').ZG233Q                      30014000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 30018300
                    AIF   (T'&ZCGPR NE 'N').ZG233Q  INVALID REG NAME    30022600
.ZG233P             ANOP  ,                                             30026900
                    AIF   (T'&ZCGPR NE 'N').ZG233R  NON NUMERIC         30031200
                    AIF   ('&ZCGPR' LT '2').ZG233Q                      30035500
                    AIF   ('&ZCGPR' LE '12').ZG233R                     30039800
.ZG233Q             ANOP  ,                                             30044100
&ZMS                SETC  '"FREERTN='           *KGPRA* MNOTE           30048400
&ZMS                SETC  '&ZMS.&FREERTN"'                              30052700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     30057000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              30061300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30065600
.ZG233R             ANOP  ,                                             30069900
.*----------------------------------------------------------------***   30074200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     30078500
                    AIF   (N'&GAP LE 1).ZG236A  CK NUM                  30082800
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     30087100
&ZMS                SETC  '&ZMS.&GAP"'                                  30091400
&ZMS                SETC  '&ZMS "GAP"'                                  30095700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           30100000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30104300
.ZG236A             ANOP  ,                                             30108600
.*-------------------------------------------------------------------   30112900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         30117200
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     30121500
&XGAP               SETC  '0'                                           30125800
                    AIF   (K'&GAP(1) LE 0).ZG236B  PARM                 30130100
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     30134400
                    AIF   (N'&GAP GT 1).ZG236B  MULTI PARMS             30138700
&XGAP               SETC  '&GAP'      SET XVARIABLE                     30143000
.ZG236B             ANOP  ,                                             30147300
.*-------------------------------------------------------------------   30151600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    30155900
                    AIF   (K'&ZXGAP LE 0).ZG236R  NOT I/O               30160200
                    AIF   ('&XGAP' EQ '0').ZG236R                       30164500
                    AIF   ('&XGAP'(1,1) NE '(').ZG236R                  30168800
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          30173100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG236P                 30177400
                    AIF   (K'&ZCGPR GT 2).ZG236Q                        30181700
                    AIF   ('&ZCGPR' EQ '0').ZG236Q                      30186000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 30190300
                    AIF   (T'&ZCGPR NE 'N').ZG236Q  INVALID REG NAME    30194600
.ZG236P             ANOP  ,                                             30198900
                    AIF   (T'&ZCGPR NE 'N').ZG236R  NON NUMERIC         30203200
                    AIF   ('&ZCGPR' LT '2').ZG236Q                      30207500
                    AIF   ('&ZCGPR' LE '12').ZG236R                     30211800
.ZG236Q             ANOP  ,                                             30216100
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     30220400
&ZMS                SETC  '&ZMS.&GAP"'                                  30224700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     30229000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              30233300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30237600
.ZG236R             ANOP  ,                                             30241900
.*----------------------------------------------------------------***   30246200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     30250500
                    AIF   (N'&OWNERID LE 1).ZG239A  CK NUM              30254800
&ZMS                SETC  '"OWNERID='           *KPOSA* MNOTE           30259100
&ZMS                SETC  '&ZMS.&OWNERID"'                              30263400
&ZMS                SETC  '&ZMS "OWNERID"'                              30267700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           30272000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30276300
.ZG239A             ANOP  ,                                             30280600
.*-------------------------------------------------------------------   30284900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         30289200
&ZXOWNERID          SETC  'INPUT'     SET IN/OUTPUT                     30293500
&XOWNERID           SETC  '0'                                           30297800
                    AIF   (K'&OWNERID(1) LE 0).ZG239B  PARM             30302100
&XOWNERID           SETC  '&OWNERID(1)'         SET XVARIABLE           30306400
                    AIF   (N'&OWNERID GT 1).ZG239B  MULTI PARMS         30310700
&XOWNERID           SETC  '&OWNERID'  SET XVARIABLE                     30315000
.ZG239B             ANOP  ,                                             30319300
.*-------------------------------------------------------------------   30323600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    30327900
                    AIF   (K'&ZXOWNERID LE 0).ZG239R  NOT I/O           30332200
                    AIF   ('&XOWNERID' EQ '0').ZG239R                   30336500
                    AIF   ('&XOWNERID'(1,1) NE '(').ZG239R              30340800
&ZCGPR              SETC  '&XOWNERID'(2,K'&XOWNERID-2)                  30345100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG239P                 30349400
                    AIF   (K'&ZCGPR GT 2).ZG239Q                        30353700
                    AIF   ('&ZCGPR' EQ '0').ZG239Q                      30358000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 30362300
                    AIF   (T'&ZCGPR NE 'N').ZG239Q  INVALID REG NAME    30366600
.ZG239P             ANOP  ,                                             30370900
                    AIF   (T'&ZCGPR NE 'N').ZG239R  NON NUMERIC         30375200
                    AIF   ('&ZCGPR' LT '2').ZG239Q                      30379500
                    AIF   ('&ZCGPR' LE '12').ZG239R                     30383800
.ZG239Q             ANOP  ,                                             30388100
&ZMS                SETC  '"OWNERID='           *KGPRA* MNOTE           30392400
&ZMS                SETC  '&ZMS.&OWNERID"'                              30396700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     30401000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              30405300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30409600
.ZG239R             ANOP  ,                                             30413900
.*----------------------------------------------------------------***   30418200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     30422500
                    AIF   (N'&POOLTOKN LE 1).ZG242A  CK NUM             30426800
&ZMS                SETC  '"POOLTOKN='          *KPOSA* MNOTE           30431100
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             30435400
&ZMS                SETC  '&ZMS "POOLTOKN"'                             30439700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           30444000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30448300
.ZG242A             ANOP  ,                                             30452600
.*-------------------------------------------------------------------   30456900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         30461200
&ZXPOOLTOKN         SETC  'INPUT'     SET IN/OUTPUT                     30465500
&XPOOLTOKN          SETC  '&POOLTOKN(1)'        SET XVARIABLE           30469800
                    AIF   (N'&POOLTOKN GT 1).ZG242B  MULTI PARMS        30474100
&XPOOLTOKN          SETC  '&POOLTOKN'           SET XVARIABLE           30478400
.ZG242B             AIF   (K'&POOLTOKN(1) GT 0).ZG242C                  30482700
&ZXPOOLTOKN         SETC  ''          RESET IN/OUTPUT                   30487000
&ZMS                SETC  ' '         *KRQDA*                           30491300
&ZMS                SETC  '&ZMS "POOLTOKN" KEY AND ITS ARGUMENT'        30495600
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       30499900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30504200
.ZG242C             ANOP  ,                                             30508500
.*-------------------------------------------------------------------   30512800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    30517100
                    AIF   (K'&ZXPOOLTOKN LE 0).ZG242R  NOT I/O          30521400
                    AIF   ('&XPOOLTOKN'(1,1) NE '(').ZG242R             30525700
&ZCGPR              SETC  '&XPOOLTOKN'(2,K'&XPOOLTOKN-2)                30530000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG242P                 30534300
                    AIF   (K'&ZCGPR GT 2).ZG242Q                        30538600
                    AIF   ('&ZCGPR' EQ '0').ZG242Q                      30542900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 30547200
                    AIF   (T'&ZCGPR NE 'N').ZG242Q  INVALID REG NAME    30551500
.ZG242P             ANOP  ,                                             30555800
                    AIF   (T'&ZCGPR NE 'N').ZG242R  NON NUMERIC         30560100
                    AIF   ('&ZCGPR' LT '2').ZG242Q                      30564400
                    AIF   ('&ZCGPR' LE '12').ZG242R                     30568700
.ZG242Q             ANOP  ,                                             30573000
&ZMS                SETC  '"POOLTOKN='          *KGPRA* MNOTE           30577300
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             30581600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     30585900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              30590200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30594500
.ZG242R             ANOP  ,                                             30598800
.*----------------------------------------------------------------***   30603100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     30607400
                    AIF   (N'&TASKID LE 1).ZG245A  CK NUM               30611700
&ZMS                SETC  '"TASKID='  *KPOSA* MNOTE                     30616000
&ZMS                SETC  '&ZMS.&TASKID"'                               30620300
&ZMS                SETC  '&ZMS "TASKID"'                               30624600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           30628900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30633200
.ZG245A             ANOP  ,                                             30637500
.*-------------------------------------------------------------------   30641800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         30646100
&ZXTASKID           SETC  'INPUT'     SET IN/OUTPUT                     30650400
&XTASKID            SETC  '0'                                           30654700
                    AIF   (K'&TASKID(1) LE 0).ZG245B  PARM              30659000
&XTASKID            SETC  '&TASKID(1)'          SET XVARIABLE           30663300
                    AIF   (N'&TASKID GT 1).ZG245B  MULTI PARMS          30667600
&XTASKID            SETC  '&TASKID'   SET XVARIABLE                     30671900
.ZG245B             ANOP  ,                                             30676200
.*-------------------------------------------------------------------   30680500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    30684800
                    AIF   (K'&ZXTASKID LE 0).ZG245R  NOT I/O            30689100
                    AIF   ('&XTASKID' EQ '0').ZG245R                    30693400
                    AIF   ('&XTASKID'(1,1) NE '(').ZG245R               30697700
&ZCGPR              SETC  '&XTASKID'(2,K'&XTASKID-2)                    30702000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG245P                 30706300
                    AIF   (K'&ZCGPR GT 2).ZG245Q                        30710600
                    AIF   ('&ZCGPR' EQ '0').ZG245Q                      30714900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 30719200
                    AIF   (T'&ZCGPR NE 'N').ZG245Q  INVALID REG NAME    30723500
.ZG245P             ANOP  ,                                             30727800
                    AIF   (T'&ZCGPR NE 'N').ZG245R  NON NUMERIC         30732100
                    AIF   ('&ZCGPR' LT '2').ZG245Q                      30736400
                    AIF   ('&ZCGPR' LE '12').ZG245R                     30740700
.ZG245Q             ANOP  ,                                             30745000
&ZMS                SETC  '"TASKID='  *KGPRA* MNOTE                     30749300
&ZMS                SETC  '&ZMS.&TASKID"'                               30753600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     30757900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              30762200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30766500
.ZG245R             ANOP  ,                                             30770800
.*----------------------------------------------------------------***   30775100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     30779400
                    AIF   (N'&THREAD LE 1).ZG248A  CK NUM               30783700
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     30788000
&ZMS                SETC  '&ZMS.&THREAD"'                               30792300
&ZMS                SETC  '&ZMS "THREAD"'                               30796600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           30800900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30805200
.ZG248A             ANOP  ,                                             30809500
.*-------------------------------------------------------------------   30813800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         30818100
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     30822400
&XTHREAD            SETC  '0'                                           30826700
                    AIF   (K'&THREAD(1) LE 0).ZG248B  PARM              30831000
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           30835300
                    AIF   (N'&THREAD GT 1).ZG248B  MULTI PARMS          30839600
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     30843900
.ZG248B             ANOP  ,                                             30848200
.*-------------------------------------------------------------------   30852500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    30856800
                    AIF   (K'&ZXTHREAD LE 0).ZG248R  NOT I/O            30861100
                    AIF   ('&XTHREAD' EQ '0').ZG248R                    30865400
                    AIF   ('&XTHREAD'(1,1) NE '(').ZG248R               30869700
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    30874000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG248P                 30878300
                    AIF   (K'&ZCGPR GT 2).ZG248Q                        30882600
                    AIF   ('&ZCGPR' EQ '0').ZG248Q                      30886900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 30891200
                    AIF   (T'&ZCGPR NE 'N').ZG248Q  INVALID REG NAME    30895500
.ZG248P             ANOP  ,                                             30899800
                    AIF   (T'&ZCGPR NE 'N').ZG248R  NON NUMERIC         30904100
                    AIF   ('&ZCGPR' LT '2').ZG248Q                      30908400
                    AIF   ('&ZCGPR' LE '12').ZG248R                     30912700
.ZG248Q             ANOP  ,                                             30917000
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     30921300
&ZMS                SETC  '&ZMS.&THREAD"'                               30925600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     30929900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              30934200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30938500
.ZG248R             ANOP  ,                                             30942800
.*----------------------------------------------------------------***   30947100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     30951400
                    AIF   (N'&UTILRTN LE 1).ZG251A  CK NUM              30955700
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           30960000
&ZMS                SETC  '&ZMS.&UTILRTN"'                              30964300
&ZMS                SETC  '&ZMS "UTILRTN"'                              30968600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           30972900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       30977200
.ZG251A             ANOP  ,                                             30981500
.*-------------------------------------------------------------------   30985800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         30990100
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     30994400
&XUTILRTN           SETC  '0'                                           30998700
                    AIF   (K'&UTILRTN(1) LE 0).ZG251B  PARM             31003000
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           31007300
                    AIF   (N'&UTILRTN GT 1).ZG251B  MULTI PARMS         31011600
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     31015900
.ZG251B             ANOP  ,                                             31020200
.*-------------------------------------------------------------------   31024500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    31028800
                    AIF   (K'&ZXUTILRTN LE 0).ZG251R  NOT I/O           31033100
                    AIF   ('&XUTILRTN' EQ '0').ZG251R                   31037400
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZG251R              31041700
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  31046000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG251P                 31050300
                    AIF   (K'&ZCGPR GT 2).ZG251Q                        31054600
                    AIF   ('&ZCGPR' EQ '0').ZG251Q                      31058900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 31063200
                    AIF   (T'&ZCGPR NE 'N').ZG251Q  INVALID REG NAME    31067500
.ZG251P             ANOP  ,                                             31071800
                    AIF   (T'&ZCGPR NE 'N').ZG251R  NON NUMERIC         31076100
                    AIF   ('&ZCGPR' LT '2').ZG251Q                      31080400
                    AIF   ('&ZCGPR' LE '12').ZG251R                     31084700
.ZG251Q             ANOP  ,                                             31089000
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           31093300
&ZMS                SETC  '&ZMS.&UTILRTN"'                              31097600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     31101900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              31106200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31110500
.ZG251R             ANOP  ,                                             31114800
.*----------------------------------------------------------------***   31119100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             31123400
                    AIF   (N'&WAIT LE 1).ZG254A  CK NUM                 31127700
&ZMS                SETC  '"WAIT='    *KPOSA* MNOTE                     31132000
&ZMS                SETC  '&ZMS.&WAIT"'                                 31136300
&ZMS                SETC  '&ZMS "WAIT"'                                 31140600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           31144900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31149200
.ZG254A             ANOP  ,                                             31153500
.*-------------------------------------------------------------------   31157800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             31162100
&XWAIT              SETC  ''          INITIALIZE XVARIABLE              31166400
.ZG255A   AIF   ('&WAIT(1)' NE 'NO').ZG256A                             31170700
&XWAIT              SETC  'NO'        SET KEYWORD                       31175000
.*-------------------------------------------------------------------   31179300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             31183600
.ZG256A   AIF   ('&WAIT(1)' NE 'YES').ZG257A                            31187900
&XWAIT              SETC  'YES'       SET KEYWORD                       31192200
.*-------------------------------------------------------------------   31196500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             31200800
.ZG257A   AIF   ('&WAIT(1)' NE 'EXPAND').ZG258A                         31205100
&XWAIT              SETC  'EXPAND'    SET KEYWORD                       31209400
.*-------------------------------------------------------------------   31213700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             31218000
.ZG258A             AIF   (K'&XWAIT GT 0).ZG258C  KEYWORD               31222300
                    AIF   (K'&WAIT(1) LE 0).ZG258B                      31226600
&ZMS                SETC  '"WAIT='    *KUKWA* MNOTE                     31230900
&ZMS                SETC  '&ZMS.&WAIT"'                                 31235200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     31239500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           31243800
&ZMS                SETC  '&ZMS "NO",'          VALID KEYWORD           31248100
&ZMS                SETC  '&ZMS "YES",'         VALID KEYWORD           31252400
&ZMS                SETC  '&ZMS OR "EXPAND".'   VALID KEYWORD           31256700
                    MNOTE 8,' &ZMS '                                    31261000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31265300
.ZG258B             ANOP  ,                                             31269600
&XWAIT              SETC  'NO'        SET DEFAULT KEYWORD               31273900
.ZG258C             ANOP  ,                                             31278200
&ZXWAIT             SETC  'INPUT'     SET IN/OUTPUT                     31282500
.*-------------------------------------------------------------------   31286800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           31291100
.ZG259              ANOP  ,                                             31295400
&ZTLC               SETC 'PAGE_BUFFER'                                  31299700
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG283              31304000
&XREQUEST           SETC  'PAGE_BUFFER'         SET KEYWORD             31308300
                    AIF   (N'&REQUEST LE 1).ZG259A  CK NUM              31312600
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           31316900
&ZMS                SETC  '&ZMS.&REQUEST"'                              31321200
&ZMS                SETC  '&ZMS "REQUEST"'                              31325500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           31329800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31334100
.ZG259A             ANOP  ,                                             31338400
.*------------------------------------------------------------------    31342700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           31347000
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       31351300
.ZG259A0            AIF   (K'&CSMUSER LE 0).ZG259A1  OK                 31355600
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      31359900
.ZG259A1            AIF   (K'&OWNERID LE 0).ZG259A2  OK                 31364200
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      31368500
.ZG259A2            AIF   (K'&TASKID LE 0).ZG259A3  OK                  31372800
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      31377100
.ZG259A3            AIF   (K'&SKIPBUF LE 0).ZG259A4  OK                 31381400
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      31385700
.ZG259A4            AIF   (K'&PAD LE 0).ZG259A5  OK                     31390000
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      31394300
.ZG259A5            AIF   (K'&PADCHAR LE 0).ZG259A6  OK                 31398600
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      31402900
.ZG259A6            AIF   (K'&SRCERRL LE 0).ZG259A7  OK                 31407200
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      31411500
.ZG259A7            AIF   (K'&SRCGAP LE 0).ZG259A8  OK                  31415800
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      31420100
.ZG259A8            AIF   (K'&SRCLIST LE 0).ZG259A9  OK                 31424400
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      31428700
.ZG259A9            AIF   (K'&SRCNUM LE 0).ZG259A10  OK                 31433000
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      31437300
.ZG259A10           AIF   (K'&TARGERRL LE 0).ZG259A11  OK               31441600
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      31445900
.ZG259A11           AIF   (K'&TARGGAP LE 0).ZG259A12  OK                31450200
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      31454500
.ZG259A12           AIF   (K'&TARGLIST LE 0).ZG259A13  OK               31458800
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      31463100
.ZG259A13           AIF   (K'&TARGNUM LE 0).ZG259A14  OK                31467400
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      31471700
.ZG259A14           AIF   (K'&BUFSIZE LE 0).ZG259A15  OK                31476000
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      31480300
.ZG259A15           AIF   (K'&BUFSOURC LE 0).ZG259A16  OK               31484600
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      31488900
.ZG259A16           AIF   (K'&DS_INFO LE 0).ZG259A17  OK                31493200
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      31497500
.ZG259A17           AIF   (K'&EXPBUF LE 0).ZG259A18  OK                 31501800
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      31506100
.ZG259A18           AIF   (K'&INITBUF LE 0).ZG259A19  OK                31510400
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      31514700
.ZG259A19           AIF   (K'&MINFREE LE 0).ZG259A20  OK                31519000
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      31523300
.ZG259A20           AIF   (K'&RETPTOKN LE 0).ZG259A21  OK               31527600
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      31531900
.ZG259A21           AIF   (K'&STATAREA LE 0).ZG259A22  OK               31536200
&ZCVAL              SETC '&ZCVAL STATAREA'      INCORRECT KEY USED      31540500
.ZG259A22           AIF   (K'&POOLTOKN LE 0).ZG259A23  OK               31544800
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      31549100
.ZG259A23           AIF   (K'&WAIT LE 0).ZG259A24  OK                   31553400
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      31557700
.ZG259A24           AIF   (K'&CLEAR LE 0).ZG259A25  OK                  31562000
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      31566300
.ZG259A25           AIF   (K'&FREETO LE 0).ZG259A26  OK                 31570600
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      31574900
.ZG259A26           AIF   (K'&FREERTN LE 0).ZG259A27  OK                31579200
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      31583500
.ZG259A27           AIF   (K'&ZCVAL LE 0).ZG259A28  OK                  31587800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         31592100
                    AIF  (K'&ZCVAL LE 160).ZG259A28A                    31596400
&ZCVAL              SETC '&ZCVAL'(1,160)                                31600700
&ZCVAL              SETC '&ZCVAL....'                                   31605000
.ZG259A28A          ANOP                                                31609300
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     31613600
&ZMS                SETC  '&ZMS.=&REQUEST"'                             31617900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          31622200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          31626500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31630800
.ZG259A28           ANOP  ,                                             31635100
.*----------------------------------------------------------------***   31639400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     31643700
                    AIF   (N'&BUFLIST LE 1).ZG261A  CK NUM              31648000
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           31652300
&ZMS                SETC  '&ZMS.&BUFLIST"'                              31656600
&ZMS                SETC  '&ZMS "BUFLIST"'                              31660900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           31665200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31669500
.ZG261A             ANOP  ,                                             31673800
.*-------------------------------------------------------------------   31678100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         31682400
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     31686700
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           31691000
                    AIF   (N'&BUFLIST GT 1).ZG261B  MULTI PARMS         31695300
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     31699600
.ZG261B             AIF   (K'&BUFLIST(1) GT 0).ZG261C                   31703900
&ZXBUFLIST          SETC  ''          RESET IN/OUTPUT                   31708200
&ZMS                SETC  ' '         *KRQDA*                           31712500
&ZMS                SETC  '&ZMS "BUFLIST" KEY AND ITS ARGUMENT'         31716800
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       31721100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31725400
.ZG261C             ANOP  ,                                             31729700
.*-------------------------------------------------------------------   31734000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    31738300
                    AIF   (K'&ZXBUFLIST LE 0).ZG261R  NOT I/O           31742600
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZG261R              31746900
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  31751200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG261P                 31755500
                    AIF   (K'&ZCGPR GT 2).ZG261Q                        31759800
                    AIF   ('&ZCGPR' EQ '0').ZG261Q                      31764100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 31768400
                    AIF   (T'&ZCGPR NE 'N').ZG261Q  INVALID REG NAME    31772700
.ZG261P             ANOP  ,                                             31777000
                    AIF   (T'&ZCGPR NE 'N').ZG261R  NON NUMERIC         31781300
                    AIF   ('&ZCGPR' LT '2').ZG261Q                      31785600
                    AIF   ('&ZCGPR' LE '12').ZG261R                     31789900
.ZG261Q             ANOP  ,                                             31794200
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           31798500
&ZMS                SETC  '&ZMS.&BUFLIST"'                              31802800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     31807100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              31811400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31815700
.ZG261R             ANOP  ,                                             31820000
.*----------------------------------------------------------------***   31824300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     31828600
                    AIF   (N'&BUFNUM LE 1).ZG264A  CK NUM               31832900
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     31837200
&ZMS                SETC  '&ZMS.&BUFNUM"'                               31841500
&ZMS                SETC  '&ZMS "BUFNUM"'                               31845800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           31850100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31854400
.ZG264A             ANOP  ,                                             31858700
.*-------------------------------------------------------------------   31863000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         31867300
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     31871600
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           31875900
                    AIF   (N'&BUFNUM GT 1).ZG264B  MULTI PARMS          31880200
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     31884500
.ZG264B             AIF   (K'&BUFNUM(1) GT 0).ZG264C                    31888800
&ZXBUFNUM           SETC  ''          RESET IN/OUTPUT                   31893100
&ZMS                SETC  ' '         *KRQDA*                           31897400
&ZMS                SETC  '&ZMS "BUFNUM" KEY AND ITS ARGUMENT'          31901700
                    MNOTE 8,' &ZMS ARE REQUIRED.'                       31906000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       31910300
.ZG264C             ANOP  ,                                             31914600
.*-------------------------------------------------------------------   31918900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    31923200
                    AIF   (K'&ZXBUFNUM LE 0).ZG264R  NOT I/O            31927500
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZG264R               31931800
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    31936100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG264P                 31940400
                    AIF   (K'&ZCGPR GT 2).ZG264Q                        31944700
                    AIF   ('&ZCGPR' EQ '0').ZG264Q                      31949000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 31953300
                    AIF   (T'&ZCGPR NE 'N').ZG264Q  INVALID REG NAME    31957600
.ZG264P             ANOP  ,                                             31961900
                    AIF   (T'&ZCGPR NE 'N').ZG264R  NON NUMERIC         31966200
                    AIF   ('&ZCGPR' LT '2').ZG264Q                      31970500
                    AIF   ('&ZCGPR' LE '12').ZG264R                     31974800
.ZG264Q             ANOP  ,                                             31979100
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     31983400
&ZMS                SETC  '&ZMS.&BUFNUM"'                               31987700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     31992000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              31996300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32000600
.ZG264R             ANOP  ,                                             32004900
.*----------------------------------------------------------------***   32009200
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             32013500
                    AIF   (N'&BUFTYPE LE 1).ZG267A  CK NUM              32017800
&ZMS                SETC  '"BUFTYPE='           *KPOSA* MNOTE           32022100
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              32026400
&ZMS                SETC  '&ZMS "BUFTYPE"'                              32030700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           32035000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32039300
.ZG267A             ANOP  ,                                             32043600
.*-------------------------------------------------------------------   32047900
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             32052200
&XBUFTYPE           SETC  ''          INITIALIZE XVARIABLE              32056500
.ZG268A   AIF   ('&BUFTYPE(1)' NE 'PAGEELIG').ZG269A                    32060800
&XBUFTYPE           SETC  'PAGEELIG'  SET KEYWORD                       32065100
.*-------------------------------------------------------------------   32069400
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             32073700
.ZG269A   AIF   ('&BUFTYPE(1)' NE 'PAGEABLE').ZG270A                    32078000
&XBUFTYPE           SETC  'PAGEABLE'  SET KEYWORD                       32082300
.*-------------------------------------------------------------------   32086600
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             32090900
.ZG270A             AIF   (K'&XBUFTYPE GT 0).ZG270C  KEYWORD            32095200
                    AIF   (K'&BUFTYPE(1) LE 0).ZG270B                   32099500
&ZMS                SETC  '"BUFTYPE='           *KUKWA* MNOTE           32103800
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              32108100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     32112400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           32116700
&ZMS                SETC  '&ZMS "PAGEELIG"'     VALID KEYWORD           32121000
&ZMS                SETC  '&ZMS OR "PAGEABLE".'  VALID KEYWORD          32125300
                    MNOTE 8,' &ZMS '                                    32129600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32133900
.ZG270B             ANOP  ,                                             32138200
&XBUFTYPE           SETC  'PAGEELIG'  SET DEFAULT KEYWORD               32142500
.ZG270C             ANOP  ,                                             32146800
&ZXBUFTYPE          SETC  'INPUT'     SET IN/OUTPUT                     32151100
.*-------------------------------------------------------------------   32155400
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             32159700
                    AIF   (K'&BUFTYPE(1) GT 0).ZG270D  VALID            32164000
&ZXBUFTYPE          SETC  ''          RESET IN/OUTPUT                   32168300
&ZMS                SETC  'THE'                                         32172600
&ZMS                SETC  '&ZMS "BUFTYPE" KEY AND ITS ARGUMENT'         32176900
&ZMS                SETC  '&ZMS ARE REQUIRED.'                          32181200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           32185500
&ZMS                SETC  '&ZMS "PAGEELIG"'     VALID KEYWORD           32189800
&ZMS                SETC  '&ZMS OR "PAGEABLE".'  VALID KEYWORD          32194100
                    MNOTE 8,' &ZMS '                                    32198400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32202700
.ZG270D             ANOP  ,                                             32207000
.*----------------------------------------------------------------***   32211300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     32215600
                    AIF   (N'&GAP LE 1).ZG272A  CK NUM                  32219900
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     32224200
&ZMS                SETC  '&ZMS.&GAP"'                                  32228500
&ZMS                SETC  '&ZMS "GAP"'                                  32232800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           32237100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32241400
.ZG272A             ANOP  ,                                             32245700
.*-------------------------------------------------------------------   32250000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         32254300
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     32258600
&XGAP               SETC  '0'                                           32262900
                    AIF   (K'&GAP(1) LE 0).ZG272B  PARM                 32267200
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     32271500
                    AIF   (N'&GAP GT 1).ZG272B  MULTI PARMS             32275800
&XGAP               SETC  '&GAP'      SET XVARIABLE                     32280100
.ZG272B             ANOP  ,                                             32284400
.*-------------------------------------------------------------------   32288700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    32293000
                    AIF   (K'&ZXGAP LE 0).ZG272R  NOT I/O               32297300
                    AIF   ('&XGAP' EQ '0').ZG272R                       32301600
                    AIF   ('&XGAP'(1,1) NE '(').ZG272R                  32305900
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          32310200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG272P                 32314500
                    AIF   (K'&ZCGPR GT 2).ZG272Q                        32318800
                    AIF   ('&ZCGPR' EQ '0').ZG272Q                      32323100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 32327400
                    AIF   (T'&ZCGPR NE 'N').ZG272Q  INVALID REG NAME    32331700
.ZG272P             ANOP  ,                                             32336000
                    AIF   (T'&ZCGPR NE 'N').ZG272R  NON NUMERIC         32340300
                    AIF   ('&ZCGPR' LT '2').ZG272Q                      32344600
                    AIF   ('&ZCGPR' LE '12').ZG272R                     32348900
.ZG272Q             ANOP  ,                                             32353200
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     32357500
&ZMS                SETC  '&ZMS.&GAP"'                                  32361800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     32366100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              32370400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32374700
.ZG272R             ANOP  ,                                             32379000
.*-------------------------------------------------------------------   32383300
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             32387600
                    AIF   ('&XMF' EQ 'M').ZG276  BYPASS IF MF=M         32391900
.*----------------------------------------------------------------***   32396200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    32400500
                    AIF   (N'&ERRBFLST LE 1).ZG275A  CK NUM             32404800
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           32409100
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             32413400
&ZMS                SETC  '&ZMS "ERRBFLST"'                             32417700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           32422000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32426300
.ZG275A             ANOP  ,                                             32430600
.*-------------------------------------------------------------------   32434900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        32439200
                    AIF   (K'&ERRBFLST(1) LE 0).ZG275C  NO PARM         32443500
&ZXERRBFLST         SETC  'OUTPUT'    SET OUTPUT                        32447800
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           32452100
                    AIF   (N'&ERRBFLST GT 1).ZG275C                     32456400
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           32460700
.ZG275C             ANOP  ,                                             32465000
.*-------------------------------------------------------------------   32469300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   32473600
                    AIF   (K'&ZXERRBFLST LE 0).ZG275R  NOT I/O          32477900
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZG275R             32482200
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                32486500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG275P                 32490800
                    AIF   (K'&ZCGPR GT 2).ZG275Q                        32495100
                    AIF   ('&ZCGPR' EQ '0').ZG275Q                      32499400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 32503700
                    AIF   (T'&ZCGPR NE 'N').ZG275Q  INVALID REG NAME    32508000
.ZG275P             ANOP  ,                                             32512300
                    AIF   (T'&ZCGPR NE 'N').ZG275R  NON NUMERIC         32516600
                    AIF   ('&ZCGPR' LT '2').ZG275Q                      32520900
                    AIF   ('&ZCGPR' LE '12').ZG275R                     32525200
.ZG275Q             ANOP  ,                                             32529500
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           32533800
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             32538100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     32542400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              32546700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32551000
.ZG275R             ANOP  ,                                             32555300
.*-------------------------------------------------------------------   32559600
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               32563900
.ZG276              ANOP  ,           END OF BYPASS CHECK               32568200
.*----------------------------------------------------------------***   32572500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     32576800
                    AIF   (N'&THREAD LE 1).ZG278A  CK NUM               32581100
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     32585400
&ZMS                SETC  '&ZMS.&THREAD"'                               32589700
&ZMS                SETC  '&ZMS "THREAD"'                               32594000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           32598300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32602600
.ZG278A             ANOP  ,                                             32606900
.*-------------------------------------------------------------------   32611200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         32615500
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     32619800
&XTHREAD            SETC  '0'                                           32624100
                    AIF   (K'&THREAD(1) LE 0).ZG278B  PARM              32628400
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           32632700
                    AIF   (N'&THREAD GT 1).ZG278B  MULTI PARMS          32637000
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     32641300
.ZG278B             ANOP  ,                                             32645600
.*-------------------------------------------------------------------   32649900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    32654200
                    AIF   (K'&ZXTHREAD LE 0).ZG278R  NOT I/O            32658500
                    AIF   ('&XTHREAD' EQ '0').ZG278R                    32662800
                    AIF   ('&XTHREAD'(1,1) NE '(').ZG278R               32667100
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    32671400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG278P                 32675700
                    AIF   (K'&ZCGPR GT 2).ZG278Q                        32680000
                    AIF   ('&ZCGPR' EQ '0').ZG278Q                      32684300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 32688600
                    AIF   (T'&ZCGPR NE 'N').ZG278Q  INVALID REG NAME    32692900
.ZG278P             ANOP  ,                                             32697200
                    AIF   (T'&ZCGPR NE 'N').ZG278R  NON NUMERIC         32701500
                    AIF   ('&ZCGPR' LT '2').ZG278Q                      32705800
                    AIF   ('&ZCGPR' LE '12').ZG278R                     32710100
.ZG278Q             ANOP  ,                                             32714400
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     32718700
&ZMS                SETC  '&ZMS.&THREAD"'                               32723000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     32727300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              32731600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32735900
.ZG278R             ANOP  ,                                             32740200
.*----------------------------------------------------------------***   32744500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     32748800
                    AIF   (N'&UTILRTN LE 1).ZG281A  CK NUM              32753100
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           32757400
&ZMS                SETC  '&ZMS.&UTILRTN"'                              32761700
&ZMS                SETC  '&ZMS "UTILRTN"'                              32766000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           32770300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32774600
.ZG281A             ANOP  ,                                             32778900
.*-------------------------------------------------------------------   32783200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         32787500
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     32791800
&XUTILRTN           SETC  '0'                                           32796100
                    AIF   (K'&UTILRTN(1) LE 0).ZG281B  PARM             32800400
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           32804700
                    AIF   (N'&UTILRTN GT 1).ZG281B  MULTI PARMS         32809000
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     32813300
.ZG281B             ANOP  ,                                             32817600
.*-------------------------------------------------------------------   32821900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    32826200
                    AIF   (K'&ZXUTILRTN LE 0).ZG281R  NOT I/O           32830500
                    AIF   ('&XUTILRTN' EQ '0').ZG281R                   32834800
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZG281R              32839100
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  32843400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG281P                 32847700
                    AIF   (K'&ZCGPR GT 2).ZG281Q                        32852000
                    AIF   ('&ZCGPR' EQ '0').ZG281Q                      32856300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 32860600
                    AIF   (T'&ZCGPR NE 'N').ZG281Q  INVALID REG NAME    32864900
.ZG281P             ANOP  ,                                             32869200
                    AIF   (T'&ZCGPR NE 'N').ZG281R  NON NUMERIC         32873500
                    AIF   ('&ZCGPR' LT '2').ZG281Q                      32877800
                    AIF   ('&ZCGPR' LE '12').ZG281R                     32882100
.ZG281Q             ANOP  ,                                             32886400
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           32890700
&ZMS                SETC  '&ZMS.&UTILRTN"'                              32895000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     32899300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              32903600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32907900
.ZG281R             ANOP  ,                                             32912200
.*-------------------------------------------------------------------   32916500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           32920800
.ZG283              ANOP  ,                                             32925100
&ZTLC               SETC 'RESOURCE_STATS'                               32929400
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG287              32933700
&XREQUEST           SETC  'RESOURCE_STATS'      SET KEYWORD             32938000
                    AIF   (N'&REQUEST LE 1).ZG283A  CK NUM              32942300
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           32946600
&ZMS                SETC  '&ZMS.&REQUEST"'                              32950900
&ZMS                SETC  '&ZMS "REQUEST"'                              32955200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           32959500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       32963800
.ZG283A             ANOP  ,                                             32968100
.*------------------------------------------------------------------    32972400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           32976700
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       32981000
.ZG283A0            AIF   (K'&BUFLIST LE 0).ZG283A1  OK                 32985300
&ZCVAL              SETC '&ZCVAL BUFLIST'       INCORRECT KEY USED      32989600
.ZG283A1            AIF   (K'&BUFNUM LE 0).ZG283A2  OK                  32993900
&ZCVAL              SETC '&ZCVAL BUFNUM'        INCORRECT KEY USED      32998200
.ZG283A2            AIF   (K'&BUFTYPE LE 0).ZG283A3  OK                 33002500
&ZCVAL              SETC '&ZCVAL BUFTYPE'       INCORRECT KEY USED      33006800
.ZG283A3            AIF   (K'&CSMUSER LE 0).ZG283A4  OK                 33011100
&ZCVAL              SETC '&ZCVAL CSMUSER'       INCORRECT KEY USED      33015400
.ZG283A4            AIF   (K'&GAP LE 0).ZG283A5  OK                     33019700
&ZCVAL              SETC '&ZCVAL GAP'           INCORRECT KEY USED      33024000
.ZG283A5            AIF   (K'&ERRBFLST LE 0).ZG283A6  OK                33028300
&ZCVAL              SETC '&ZCVAL ERRBFLST'      INCORRECT KEY USED      33032600
.ZG283A6            AIF   (K'&OWNERID LE 0).ZG283A7  OK                 33036900
&ZCVAL              SETC '&ZCVAL OWNERID'       INCORRECT KEY USED      33041200
.ZG283A7            AIF   (K'&TASKID LE 0).ZG283A8  OK                  33045500
&ZCVAL              SETC '&ZCVAL TASKID'        INCORRECT KEY USED      33049800
.ZG283A8            AIF   (K'&THREAD LE 0).ZG283A9  OK                  33054100
&ZCVAL              SETC '&ZCVAL THREAD'        INCORRECT KEY USED      33058400
.ZG283A9            AIF   (K'&UTILRTN LE 0).ZG283A10  OK                33062700
&ZCVAL              SETC '&ZCVAL UTILRTN'       INCORRECT KEY USED      33067000
.ZG283A10           AIF   (K'&SKIPBUF LE 0).ZG283A11  OK                33071300
&ZCVAL              SETC '&ZCVAL SKIPBUF'       INCORRECT KEY USED      33075600
.ZG283A11           AIF   (K'&PAD LE 0).ZG283A12  OK                    33079900
&ZCVAL              SETC '&ZCVAL PAD'           INCORRECT KEY USED      33084200
.ZG283A12           AIF   (K'&PADCHAR LE 0).ZG283A13  OK                33088500
&ZCVAL              SETC '&ZCVAL PADCHAR'       INCORRECT KEY USED      33092800
.ZG283A13           AIF   (K'&SRCERRL LE 0).ZG283A14  OK                33097100
&ZCVAL              SETC '&ZCVAL SRCERRL'       INCORRECT KEY USED      33101400
.ZG283A14           AIF   (K'&SRCGAP LE 0).ZG283A15  OK                 33105700
&ZCVAL              SETC '&ZCVAL SRCGAP'        INCORRECT KEY USED      33110000
.ZG283A15           AIF   (K'&SRCLIST LE 0).ZG283A16  OK                33114300
&ZCVAL              SETC '&ZCVAL SRCLIST'       INCORRECT KEY USED      33118600
.ZG283A16           AIF   (K'&SRCNUM LE 0).ZG283A17  OK                 33122900
&ZCVAL              SETC '&ZCVAL SRCNUM'        INCORRECT KEY USED      33127200
.ZG283A17           AIF   (K'&TARGERRL LE 0).ZG283A18  OK               33131500
&ZCVAL              SETC '&ZCVAL TARGERRL'      INCORRECT KEY USED      33135800
.ZG283A18           AIF   (K'&TARGGAP LE 0).ZG283A19  OK                33140100
&ZCVAL              SETC '&ZCVAL TARGGAP'       INCORRECT KEY USED      33144400
.ZG283A19           AIF   (K'&TARGLIST LE 0).ZG283A20  OK               33148700
&ZCVAL              SETC '&ZCVAL TARGLIST'      INCORRECT KEY USED      33153000
.ZG283A20           AIF   (K'&TARGNUM LE 0).ZG283A21  OK                33157300
&ZCVAL              SETC '&ZCVAL TARGNUM'       INCORRECT KEY USED      33161600
.ZG283A21           AIF   (K'&BUFSIZE LE 0).ZG283A22  OK                33165900
&ZCVAL              SETC '&ZCVAL BUFSIZE'       INCORRECT KEY USED      33170200
.ZG283A22           AIF   (K'&BUFSOURC LE 0).ZG283A23  OK               33174500
&ZCVAL              SETC '&ZCVAL BUFSOURC'      INCORRECT KEY USED      33178800
.ZG283A23           AIF   (K'&DS_INFO LE 0).ZG283A24  OK                33183100
&ZCVAL              SETC '&ZCVAL DS_INFO'       INCORRECT KEY USED      33187400
.ZG283A24           AIF   (K'&EXPBUF LE 0).ZG283A25  OK                 33191700
&ZCVAL              SETC '&ZCVAL EXPBUF'        INCORRECT KEY USED      33196000
.ZG283A25           AIF   (K'&INITBUF LE 0).ZG283A26  OK                33200300
&ZCVAL              SETC '&ZCVAL INITBUF'       INCORRECT KEY USED      33204600
.ZG283A26           AIF   (K'&MINFREE LE 0).ZG283A27  OK                33208900
&ZCVAL              SETC '&ZCVAL MINFREE'       INCORRECT KEY USED      33213200
.ZG283A27           AIF   (K'&RETPTOKN LE 0).ZG283A28  OK               33217500
&ZCVAL              SETC '&ZCVAL RETPTOKN'      INCORRECT KEY USED      33221800
.ZG283A28           AIF   (K'&POOLTOKN LE 0).ZG283A29  OK               33226100
&ZCVAL              SETC '&ZCVAL POOLTOKN'      INCORRECT KEY USED      33230400
.ZG283A29           AIF   (K'&WAIT LE 0).ZG283A30  OK                   33234700
&ZCVAL              SETC '&ZCVAL WAIT'          INCORRECT KEY USED      33239000
.ZG283A30           AIF   (K'&CLEAR LE 0).ZG283A31  OK                  33243300
&ZCVAL              SETC '&ZCVAL CLEAR'         INCORRECT KEY USED      33247600
.ZG283A31           AIF   (K'&FREETO LE 0).ZG283A32  OK                 33251900
&ZCVAL              SETC '&ZCVAL FREETO'        INCORRECT KEY USED      33256200
.ZG283A32           AIF   (K'&FREERTN LE 0).ZG283A33  OK                33260500
&ZCVAL              SETC '&ZCVAL FREERTN'       INCORRECT KEY USED      33264800
.ZG283A33           AIF   (K'&ZCVAL LE 0).ZG283A34  OK                  33269100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         33273400
                    AIF  (K'&ZCVAL LE 160).ZG283A34A                    33277700
&ZCVAL              SETC '&ZCVAL'(1,160)                                33282000
&ZCVAL              SETC '&ZCVAL....'                                   33286300
.ZG283A34A          ANOP                                                33290600
&ZMS                SETC  '"REQUEST'  *KMEIA* MNOTE                     33294900
&ZMS                SETC  '&ZMS.=&REQUEST"'                             33299200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          33303500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          33307800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33312100
.ZG283A34           ANOP  ,                                             33316400
.*-------------------------------------------------------------------   33320700
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             33325000
                    AIF   ('&XMF' EQ 'M').ZG286  BYPASS IF MF=M         33329300
.*----------------------------------------------------------------***   33333600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    33337900
                    AIF   (N'&STATAREA LE 1).ZG285A  CK NUM             33342200
&ZMS                SETC  '"STATAREA='          *KPOSA* MNOTE           33346500
&ZMS                SETC  '&ZMS.&STATAREA"'                             33350800
&ZMS                SETC  '&ZMS "STATAREA"'                             33355100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           33359400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33363700
.ZG285A             ANOP  ,                                             33368000
.*-------------------------------------------------------------------   33372300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        33376600
                    AIF   (K'&STATAREA(1) LE 0).ZG285C  NO PARM         33380900
&ZXSTATAREA         SETC  'OUTPUT'    SET OUTPUT                        33385200
&XSTATAREA          SETC  '&STATAREA(1)'        SET XVARIABLE           33389500
                    AIF   (N'&STATAREA GT 1).ZG285C                     33393800
&XSTATAREA          SETC  '&STATAREA'           SET XVARIABLE           33398100
.ZG285C             ANOP  ,                                             33402400
.*-------------------------------------------------------------------   33406700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   33411000
                    AIF   (K'&ZXSTATAREA LE 0).ZG285R  NOT I/O          33415300
                    AIF   ('&XSTATAREA'(1,1) NE '(').ZG285R             33419600
&ZCGPR              SETC  '&XSTATAREA'(2,K'&XSTATAREA-2)                33423900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG285P                 33428200
                    AIF   (K'&ZCGPR GT 2).ZG285Q                        33432500
                    AIF   ('&ZCGPR' EQ '0').ZG285Q                      33436800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 33441100
                    AIF   (T'&ZCGPR NE 'N').ZG285Q  INVALID REG NAME    33445400
.ZG285P             ANOP  ,                                             33449700
                    AIF   (T'&ZCGPR NE 'N').ZG285R  NON NUMERIC         33454000
                    AIF   ('&ZCGPR' LT '2').ZG285Q                      33458300
                    AIF   ('&ZCGPR' LE '12').ZG285R                     33462600
.ZG285Q             ANOP  ,                                             33466900
&ZMS                SETC  '"STATAREA='          *KGPRA* MNOTE           33471200
&ZMS                SETC  '&ZMS.&STATAREA"'                             33475500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     33479800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              33484100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33488400
.ZG285R             ANOP  ,                                             33492700
.*-------------------------------------------------------------------   33497000
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               33501300
.ZG286              ANOP  ,           END OF BYPASS CHECK               33505600
.*------------------------------------------------------------------    33509900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           33514200
.ZG287              ANOP  ,                                             33518500
&ZXREQUEST          SETC  'INPUT'     SET IN/OUTPUT                     33522800
                    AIF   (K'&XREQUEST GT 0).ZG287E  VALID ARG          33527100
                    AIF   (T'&REQUEST EQ 'O').ZG287D  OMITTED           33531400
&ZASYSLNDX          SETA  0                                             33535700
.ZG287A             ANOP  ,           POSITIONAL MACRO KEY              33540000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  33544300
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG287C             33548600
&ZTLC               SETC 'REQUEST'                                      33552900
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG287A    33557200
.ZG287B             ANOP  ,                                             33561500
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   33565800
&ZMS                SETC  'THE "REQUEST" KEY'   *KOPTA* MNOTE           33570100
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       33574400
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              33578700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33583000
                    AGO   .ZG287E                                       33587300
.ZG287C             ANOP  ,                                             33591600
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   33595900
&ZMS                SETC  '"REQUEST='           *KUKWA* MNOTE           33600200
&ZMS                SETC  '&ZMS.&REQUEST"'                              33604500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     33608800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           33613100
&ZMS                SETC  '&ZMS "ASSIGN_BUFFER",'  VALID KEYWORD        33617400
&ZMS                SETC  '&ZMS "CHANGE_OWNER",'  VALID KEYWORD         33621700
&ZMS                SETC  '&ZMS "COPY_DATA",'   VALID KEYWORD           33626000
&ZMS                SETC  '&ZMS "CREATE_POOL",'  VALID KEYWORD          33630300
&ZMS                SETC  '&ZMS "DELETE_POOL",'  VALID KEYWORD          33634600
&ZMS                SETC  '&ZMS "DUMP_INFO",'   VALID KEYWORD           33638900
&ZMS                SETC  '&ZMS "FIX_BUFFER",'  VALID KEYWORD           33643200
&ZMS                SETC  '&ZMS "FREE_BUFFER",'  VALID KEYWORD          33647500
&ZMS                SETC  '&ZMS "GET_BUFFER",'  VALID KEYWORD           33651800
&ZMS                SETC  '&ZMS "PAGE_BUFFER",'  VALID KEYWORD          33656100
                    MNOTE 8,' &ZMS '                                    33660400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33664700
&ZMS                SETC  '(CONTINUED) '                                33669000
&ZMS                SETC  '&ZMS OR "RESOURCE_STATS".'  VALID KEYWORD    33673300
                    MNOTE 8,' &ZMS '                                    33677600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33681900
                    AGO   .ZG287E                                       33686200
.ZG287D             ANOP  ,                                             33690500
&XREQUEST           SETC  'ASSIGN_BUFFER'       SET DEFAULT KEYWORD     33694800
.ZG287E             ANOP  ,                                             33699100
.*------------------------------------------------------------------    33703400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           33707700
                    AIF   (K'&REQUEST(1) GT 0).ZG287F  PARM             33712000
&XREQUEST           SETC  ''          ENSURE NULL KEYWORD               33716300
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   33720600
&ZMS                SETC  'THE'                                         33724900
&ZMS                SETC  '&ZMS "REQUEST" KEY AND ITS ARGUMENT'         33729200
&ZMS                SETC  '&ZMS ARE REQUIRED.'                          33733500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           33737800
&ZMS                SETC  '&ZMS "ASSIGN_BUFFER",'  VALID KEYWORD        33742100
&ZMS                SETC  '&ZMS "CHANGE_OWNER",'  VALID KEYWORD         33746400
&ZMS                SETC  '&ZMS "COPY_DATA",'   VALID KEYWORD           33750700
&ZMS                SETC  '&ZMS "CREATE_POOL",'  VALID KEYWORD          33755000
&ZMS                SETC  '&ZMS "DELETE_POOL",'  VALID KEYWORD          33759300
&ZMS                SETC  '&ZMS "DUMP_INFO",'   VALID KEYWORD           33763600
&ZMS                SETC  '&ZMS "FIX_BUFFER",'  VALID KEYWORD           33767900
&ZMS                SETC  '&ZMS "FREE_BUFFER",'  VALID KEYWORD          33772200
&ZMS                SETC  '&ZMS "GET_BUFFER",'  VALID KEYWORD           33776500
                    MNOTE 8,' &ZMS '                                    33780800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33785100
&ZMS                SETC  '(CONTINUED) '                                33789400
&ZMS                SETC  '&ZMS "PAGE_BUFFER",'  VALID KEYWORD          33793700
&ZMS                SETC  '&ZMS OR "RESOURCE_STATS".'  VALID KEYWORD    33798000
                    MNOTE 8,' &ZMS '                                    33802300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33806600
.ZG287F             ANOP  ,                                             33810900
.*----------------------------------------------------------------***   33815200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    33819500
                    AIF   (N'&RETCODE LE 1).ZG289A  CK NUM              33823800
&ZMS                SETC  '"RETCODE='           *KPOSA* MNOTE           33828100
&ZMS                SETC  '&ZMS.&RETCODE"'                              33832400
&ZMS                SETC  '&ZMS "RETCODE"'                              33836700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           33841000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33845300
.ZG289A             ANOP  ,                                             33849600
.*-------------------------------------------------------------------   33853900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        33858200
                    AIF   (K'&RETCODE(1) LE 0).ZG289C  NO PARM          33862500
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        33866800
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           33871100
                    AIF   (N'&RETCODE GT 1).ZG289C                      33875400
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     33879700
.ZG289C             ANOP  ,                                             33884000
.*-------------------------------------------------------------------   33888300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   33892600
                    AIF   (K'&ZXRETCODE LE 0).ZG289R  NOT I/O           33896900
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG289R              33901200
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  33905500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG289P                 33909800
                    AIF   (K'&ZCGPR GT 2).ZG289Q                        33914100
                    AIF   ('&ZCGPR' EQ '0').ZG289Q                      33918400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 33922700
                    AIF   (T'&ZCGPR NE 'N').ZG289Q  INVALID REG NAME    33927000
.ZG289P             ANOP  ,                                             33931300
                    AIF   (T'&ZCGPR NE 'N').ZG289R  NON NUMERIC         33935600
                    AIF   ('&ZCGPR' LT '2').ZG289Q                      33939900
                    AIF   ('&ZCGPR' LE '12').ZG289R                     33944200
.ZG289Q             ANOP  ,                                             33948500
&ZMS                SETC  '"RETCODE='           *KGPRA* MNOTE           33952800
&ZMS                SETC  '&ZMS.&RETCODE"'                              33957100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     33961400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              33965700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       33970000
.ZG289R             ANOP  ,                                             33974300
.*----------------------------------------------------------------***   33978600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    33982900
                    AIF   (N'&RSNCODE LE 1).ZG292A  CK NUM              33987200
&ZMS                SETC  '"RSNCODE='           *KPOSA* MNOTE           33991500
&ZMS                SETC  '&ZMS.&RSNCODE"'                              33995800
&ZMS                SETC  '&ZMS "RSNCODE"'                              34000100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           34004400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34008700
.ZG292A             ANOP  ,                                             34013000
.*-------------------------------------------------------------------   34017300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        34021600
                    AIF   (K'&RSNCODE(1) LE 0).ZG292C  NO PARM          34025900
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        34030200
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           34034500
                    AIF   (N'&RSNCODE GT 1).ZG292C                      34038800
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     34043100
.ZG292C             ANOP  ,                                             34047400
.*-------------------------------------------------------------------   34051700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   34056000
                    AIF   (K'&ZXRSNCODE LE 0).ZG292R  NOT I/O           34060300
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG292R              34064600
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  34068900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG292P                 34073200
                    AIF   (K'&ZCGPR GT 2).ZG292Q                        34077500
                    AIF   ('&ZCGPR' EQ '0').ZG292Q                      34081800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 34086100
                    AIF   (T'&ZCGPR NE 'N').ZG292Q  INVALID REG NAME    34090400
.ZG292P             ANOP  ,                                             34094700
                    AIF   (T'&ZCGPR NE 'N').ZG292R  NON NUMERIC         34099000
                    AIF   ('&ZCGPR' LT '2').ZG292Q                      34103300
                    AIF   ('&ZCGPR' LE '12').ZG292R                     34107600
.ZG292Q             ANOP  ,                                             34111900
&ZMS                SETC  '"RSNCODE='           *KGPRA* MNOTE           34116200
&ZMS                SETC  '&ZMS.&RSNCODE"'                              34120500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     34124800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              34129100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34133400
.ZG292R             ANOP  ,                                             34137700
.******************************************************************     34142000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        34146300
.******************************************************************     34150600
                    ACTR  10000                                         34154900
.*----------------------------------------------------------------***   34159200
.***AH.P02 EXTRA POSITIONALS                                            34163500
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          34167800
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          34172100
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      34176400
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       34180700
.ZGLISTX1           ANOP  ,                                             34185000
&ZCVAL              SETC  ''          ERROR FIELD                       34189300
&ZAWRK              SETA  0           POSITIONAL NUMBER                 34193600
.ZGLIST2            ANOP  ,                                             34197900
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   34202200
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          34206500
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               34210800
                    AGO   .ZGLIST2                                      34215100
.*                                                                      34219400
.ZGLIST3            ANOP  ,                                             34223700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            34228000
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE      34232300
&ZMS                SETC  '&ZMS "&ZCVAL"'                               34236600
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        34240900
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                34245200
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        34249500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34253800
.ZGLISTX            ANOP  ,                                             34258100
&ZASYSLNDX          SETA  0                                             34262400
.*-------------------------------------------------------------------   34266700
.***AG.MF04 MF=(SLME)                                                   34271000
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          34275300
.********************************************************************   34279600
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             34283900
.********************************************************************   34288200
                    ACTR  10000                                         34292500
.*-------------------------------------------------------------------   34296800
.***AE.MF01 MF=(SLME)                                                   34301100
                    AIF   ('&XMF' EQ 'L').ZEMFX                         34305400
                    AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                34309700
.********************************************************************   34314000
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        34318300
.********************************************************************   34322600
&XREQUEST           SETC  ''          INITIALIZE XVARIABLE              34326900
&XBUFTYPE           SETC  ''          INITIALIZE XVARIABLE              34331200
&XCSMUSER           SETC  ''          INITIALIZE XVARIABLE              34335500
&XSKIPBUF           SETC  ''          INITIALIZE XVARIABLE              34339800
&XPAD               SETC  ''          INITIALIZE XVARIABLE              34344100
&XBUFSOURC          SETC  ''          INITIALIZE XVARIABLE              34348400
&XWAIT              SETC  ''          INITIALIZE XVARIABLE              34352700
&XCLEAR             SETC  ''          INITIALIZE XVARIABLE              34357000
&XFREETO            SETC  ''          INITIALIZE XVARIABLE              34361300
.*-------------------------------------------------------------------   34365600
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           34369900
&ZTLC               SETC 'ASSIGN_BUFFER'                                34374200
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE3A               34378500
&XREQUEST           SETC  'ASSIGN_BUFFER'       SET KEYWORD             34382800
                    AIF   (N'&REQUEST LE 1).ZE3A  CK NUM                34387100
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           34391400
&ZMS                SETC  '&ZMS.&REQUEST"'                              34395700
&ZMS                SETC  '&ZMS "REQUEST"'                              34400000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           34404300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34408600
.ZE3A               ANOP  ,                                             34412900
.*----------------------------------------------------------------***   34417200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          34421500
                    AIF   (N'&BUFLIST LE 1).ZE5A  CK NUM                34425800
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           34430100
&ZMS                SETC  '&ZMS.&BUFLIST"'                              34434400
&ZMS                SETC  '&ZMS "BUFLIST"'                              34438700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           34443000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34447300
.ZE5A               ANOP  ,                                             34451600
.*-------------------------------------------------------------------   34455900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     34460200
                    AIF   (K'&BUFLIST(1) LE 0).ZE5B NO PRM              34464500
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     34468800
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           34473100
                    AIF   (N'&BUFLIST GT 1).ZE5B                        34477400
.*                  ANOP              MULTIPLE PARMS                    34481700
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     34486000
.ZE5B               ANOP  ,                                             34490300
.*-------------------------------------------------------------------   34494600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    34498900
                    AIF   (K'&ZXBUFLIST LE 0).ZE5R  NOT I/O             34503200
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZE5R                34507500
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  34511800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE5P                   34516100
                    AIF   (K'&ZCGPR GT 2).ZE5Q                          34520400
                    AIF   ('&ZCGPR' EQ '0').ZE5Q                        34524700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 34529000
                    AIF   (T'&ZCGPR NE 'N').ZE5Q  INVALID REG NAME      34533300
.ZE5P               ANOP  ,                                             34537600
                    AIF   (T'&ZCGPR NE 'N').ZE5R  NON NUMERIC           34541900
                    AIF   ('&ZCGPR' LT '2').ZE5Q                        34546200
                    AIF   ('&ZCGPR' LE '12').ZE5R                       34550500
.ZE5Q               ANOP  ,                                             34554800
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           34559100
&ZMS                SETC  '&ZMS.&BUFLIST"'                              34563400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     34567700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              34572000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34576300
.ZE5R               ANOP  ,                                             34580600
.*----------------------------------------------------------------***   34584900
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          34589200
                    AIF   (N'&BUFNUM LE 1).ZE8A  CK NUM                 34593500
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     34597800
&ZMS                SETC  '&ZMS.&BUFNUM"'                               34602100
&ZMS                SETC  '&ZMS "BUFNUM"'                               34606400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           34610700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34615000
.ZE8A               ANOP  ,                                             34619300
.*-------------------------------------------------------------------   34623600
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     34627900
                    AIF   (K'&BUFNUM(1) LE 0).ZE8B NO PRM               34632200
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     34636500
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           34640800
                    AIF   (N'&BUFNUM GT 1).ZE8B                         34645100
.*                  ANOP              MULTIPLE PARMS                    34649400
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     34653700
.ZE8B               ANOP  ,                                             34658000
.*-------------------------------------------------------------------   34662300
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    34666600
                    AIF   (K'&ZXBUFNUM LE 0).ZE8R  NOT I/O              34670900
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZE8R                 34675200
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    34679500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE8P                   34683800
                    AIF   (K'&ZCGPR GT 2).ZE8Q                          34688100
                    AIF   ('&ZCGPR' EQ '0').ZE8Q                        34692400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 34696700
                    AIF   (T'&ZCGPR NE 'N').ZE8Q  INVALID REG NAME      34701000
.ZE8P               ANOP  ,                                             34705300
                    AIF   (T'&ZCGPR NE 'N').ZE8R  NON NUMERIC           34709600
                    AIF   ('&ZCGPR' LT '2').ZE8Q                        34713900
                    AIF   ('&ZCGPR' LE '12').ZE8R                       34718200
.ZE8Q               ANOP  ,                                             34722500
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     34726800
&ZMS                SETC  '&ZMS.&BUFNUM"'                               34731100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     34735400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              34739700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34744000
.ZE8R               ANOP  ,                                             34748300
.*----------------------------------------------------------------***   34752600
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34756900
                    AIF   (N'&BUFTYPE LE 1).ZE11A  CK NUM               34761200
&ZMS                SETC  '"BUFTYPE='           *KPOSA* MNOTE           34765500
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              34769800
&ZMS                SETC  '&ZMS "BUFTYPE"'                              34774100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           34778400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34782700
.ZE11A              ANOP  ,                                             34787000
.*-------------------------------------------------------------------   34791300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34795600
.ZE12A   AIF   ('&BUFTYPE(1)' NE 'SAME').ZE13A                          34799900
&XBUFTYPE           SETC  'SAME'      SET KEYWORD                       34804200
.*-------------------------------------------------------------------   34808500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34812800
.ZE13A   AIF   ('&BUFTYPE(1)' NE 'PAGEELIG').ZE14A                      34817100
&XBUFTYPE           SETC  'PAGEELIG'  SET KEYWORD                       34821400
.*-------------------------------------------------------------------   34825700
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34830000
.ZE14A   AIF   ('&BUFTYPE(1)' NE 'FIXED').ZE15A                         34834300
&XBUFTYPE           SETC  'FIXED'     SET KEYWORD                       34838600
.*----------------------------------------------------------------***   34842900
.***AE.KKWRD06 Additional value checks                                  34847200
.ZE15A   AIF   ('&BUFTYPE(1)' NE 'PAGEABLE').ZE0P11Q216A                34851500
&XBUFTYPE           SETC  'PAGEABLE'  SET KEYWORD                       34855800
.*-------------------------------------------------------------------   34860100
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34864400
.ZE0P11Q216A        AIF   (K'&XBUFTYPE GT 0).ZE0P11Q216B                34868700
                    AIF   (K'&BUFTYPE(1) LE 0).ZE0P11Q216C              34873000
&ZMS                SETC  '"BUFTYPE='           *KUKWA* MNOTE           34877300
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              34881600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     34885900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           34890200
&ZMS                SETC  '&ZMS "SAME",'        VALID KEYWORD           34894500
&ZMS                SETC  '&ZMS "PAGEELIG",'    VALID KEYWORD           34898800
&ZMS                SETC  '&ZMS OR "FIXED".'    VALID KEYWORD           34903100
                    MNOTE 8,' &ZMS '                                    34907400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34911700
                    AGO   .ZE0P11Q216C                                  34916000
.*                                                                      34920300
.ZE0P11Q216B        ANOP  ,                                             34924600
&ZXBUFTYPE          SETC  'INPUT'     SET IN/OUTPUT                     34928900
.ZE0P11Q216C        ANOP  ,                                             34933200
.*----------------------------------------------------------------***   34937500
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34941800
                    AIF   (N'&CSMUSER LE 1).ZE17A  CK NUM               34946100
&ZMS                SETC  '"CSMUSER='           *KPOSA* MNOTE           34950400
&ZMS                SETC  '&ZMS.&CSMUSER"'                              34954700
&ZMS                SETC  '&ZMS "CSMUSER"'                              34959000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           34963300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       34967600
.ZE17A              ANOP  ,                                             34971900
.*-------------------------------------------------------------------   34976200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34980500
.ZE18A   AIF   ('&CSMUSER(1)' NE 'NO').ZE19A                            34984800
&XCSMUSER           SETC  'NO'        SET KEYWORD                       34989100
.*-------------------------------------------------------------------   34993400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34997700
.ZE19A   AIF   ('&CSMUSER(1)' NE 'YES').ZE20A                           35002000
&XCSMUSER           SETC  'YES'       SET KEYWORD                       35006300
.*-------------------------------------------------------------------   35010600
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             35014900
.ZE20A              AIF   (K'&XCSMUSER GT 0).ZE20B                      35019200
                    AIF   (K'&CSMUSER(1) LE 0).ZE20C                    35023500
&ZMS                SETC  '"CSMUSER='           *KUKWA* MNOTE           35027800
&ZMS                SETC  '&ZMS.&CSMUSER"'                              35032100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     35036400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           35040700
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           35045000
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           35049300
                    MNOTE 8,' &ZMS '                                    35053600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35057900
                    AGO   .ZE20C                                        35062200
.*                                                                      35066500
.ZE20B              ANOP  ,                                             35070800
&ZXCSMUSER          SETC  'INPUT'     SET IN/OUTPUT                     35075100
.ZE20C              ANOP  ,                                             35079400
.*----------------------------------------------------------------***   35083700
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          35088000
                    AIF   (N'&GAP LE 1).ZE22A   CK NUM                  35092300
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     35096600
&ZMS                SETC  '&ZMS.&GAP"'                                  35100900
&ZMS                SETC  '&ZMS "GAP"'                                  35105200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           35109500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35113800
.ZE22A              ANOP  ,                                             35118100
.*-------------------------------------------------------------------   35122400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     35126700
                    AIF   (K'&GAP(1) LE 0).ZE22B NO PRM                 35131000
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     35135300
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     35139600
                    AIF   (N'&GAP GT 1).ZE22B                           35143900
.*                  ANOP              MULTIPLE PARMS                    35148200
&XGAP               SETC  '&GAP'      SET XVARIABLE                     35152500
.ZE22B              ANOP  ,                                             35156800
.*-------------------------------------------------------------------   35161100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    35165400
                    AIF   (K'&ZXGAP LE 0).ZE22R  NOT I/O                35169700
                    AIF   ('&XGAP'(1,1) NE '(').ZE22R                   35174000
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          35178300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE22P                  35182600
                    AIF   (K'&ZCGPR GT 2).ZE22Q                         35186900
                    AIF   ('&ZCGPR' EQ '0').ZE22Q                       35191200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 35195500
                    AIF   (T'&ZCGPR NE 'N').ZE22Q  INVALID REG NAME     35199800
.ZE22P              ANOP  ,                                             35204100
                    AIF   (T'&ZCGPR NE 'N').ZE22R  NON NUMERIC          35208400
                    AIF   ('&ZCGPR' LT '2').ZE22Q                       35212700
                    AIF   ('&ZCGPR' LE '12').ZE22R                      35217000
.ZE22Q              ANOP  ,                                             35221300
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     35225600
&ZMS                SETC  '&ZMS.&GAP"'                                  35229900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     35234200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              35238500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35242800
.ZE22R              ANOP  ,                                             35247100
.*----------------------------------------------------------------***   35251400
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         35255700
                    AIF   (N'&ERRBFLST LE 1).ZE25A  CK NUM              35260000
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           35264300
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             35268600
&ZMS                SETC  '&ZMS "ERRBFLST"'                             35272900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           35277200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35281500
.ZE25A              ANOP  ,                                             35285800
.*-------------------------------------------------------------------   35290100
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    35294400
                    AIF   (K'&ERRBFLST(1) LE 0).ZE25B NO PRM            35298700
&ZXERRBFLST         SETC  'OUTPUT'    SET IN/OUTPUT                     35303000
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           35307300
                    AIF   (N'&ERRBFLST GT 1).ZE25B                      35311600
.*                  ANOP              MULTIPLE PARMS                    35315900
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           35320200
.ZE25B              ANOP  ,                                             35324500
.*-------------------------------------------------------------------   35328800
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   35333100
                    AIF   (K'&ZXERRBFLST LE 0).ZE25R  NOT I/O           35337400
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZE25R              35341700
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                35346000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE25P                  35350300
                    AIF   (K'&ZCGPR GT 2).ZE25Q                         35354600
                    AIF   ('&ZCGPR' EQ '0').ZE25Q                       35358900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 35363200
                    AIF   (T'&ZCGPR NE 'N').ZE25Q  INVALID REG NAME     35367500
.ZE25P              ANOP  ,                                             35371800
                    AIF   (T'&ZCGPR NE 'N').ZE25R  NON NUMERIC          35376100
                    AIF   ('&ZCGPR' LT '2').ZE25Q                       35380400
                    AIF   ('&ZCGPR' LE '12').ZE25R                      35384700
.ZE25Q              ANOP  ,                                             35389000
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           35393300
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             35397600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     35401900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              35406200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35410500
.ZE25R              ANOP  ,                                             35414800
.*----------------------------------------------------------------***   35419100
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          35423400
                    AIF   (N'&OWNERID LE 1).ZE28A  CK NUM               35427700
&ZMS                SETC  '"OWNERID='           *KPOSA* MNOTE           35432000
&ZMS                SETC  '&ZMS.&OWNERID"'                              35436300
&ZMS                SETC  '&ZMS "OWNERID"'                              35440600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           35444900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35449200
.ZE28A              ANOP  ,                                             35453500
.*-------------------------------------------------------------------   35457800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     35462100
                    AIF   (K'&OWNERID(1) LE 0).ZE28B NO PRM             35466400
&ZXOWNERID          SETC  'INPUT'     SET IN/OUTPUT                     35470700
&XOWNERID           SETC  '&OWNERID(1)'         SET XVARIABLE           35475000
                    AIF   (N'&OWNERID GT 1).ZE28B                       35479300
.*                  ANOP              MULTIPLE PARMS                    35483600
&XOWNERID           SETC  '&OWNERID'  SET XVARIABLE                     35487900
.ZE28B              ANOP  ,                                             35492200
.*-------------------------------------------------------------------   35496500
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    35500800
                    AIF   (K'&ZXOWNERID LE 0).ZE28R  NOT I/O            35505100
                    AIF   ('&XOWNERID'(1,1) NE '(').ZE28R               35509400
&ZCGPR              SETC  '&XOWNERID'(2,K'&XOWNERID-2)                  35513700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE28P                  35518000
                    AIF   (K'&ZCGPR GT 2).ZE28Q                         35522300
                    AIF   ('&ZCGPR' EQ '0').ZE28Q                       35526600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 35530900
                    AIF   (T'&ZCGPR NE 'N').ZE28Q  INVALID REG NAME     35535200
.ZE28P              ANOP  ,                                             35539500
                    AIF   (T'&ZCGPR NE 'N').ZE28R  NON NUMERIC          35543800
                    AIF   ('&ZCGPR' LT '2').ZE28Q                       35548100
                    AIF   ('&ZCGPR' LE '12').ZE28R                      35552400
.ZE28Q              ANOP  ,                                             35556700
&ZMS                SETC  '"OWNERID='           *KGPRA* MNOTE           35561000
&ZMS                SETC  '&ZMS.&OWNERID"'                              35565300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     35569600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              35573900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35578200
.ZE28R              ANOP  ,                                             35582500
.*----------------------------------------------------------------***   35586800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          35591100
                    AIF   (N'&TASKID LE 1).ZE31A  CK NUM                35595400
&ZMS                SETC  '"TASKID='  *KPOSA* MNOTE                     35599700
&ZMS                SETC  '&ZMS.&TASKID"'                               35604000
&ZMS                SETC  '&ZMS "TASKID"'                               35608300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           35612600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35616900
.ZE31A              ANOP  ,                                             35621200
.*-------------------------------------------------------------------   35625500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     35629800
                    AIF   (K'&TASKID(1) LE 0).ZE31B NO PRM              35634100
&ZXTASKID           SETC  'INPUT'     SET IN/OUTPUT                     35638400
&XTASKID            SETC  '&TASKID(1)'          SET XVARIABLE           35642700
                    AIF   (N'&TASKID GT 1).ZE31B                        35647000
.*                  ANOP              MULTIPLE PARMS                    35651300
&XTASKID            SETC  '&TASKID'   SET XVARIABLE                     35655600
.ZE31B              ANOP  ,                                             35659900
.*-------------------------------------------------------------------   35664200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    35668500
                    AIF   (K'&ZXTASKID LE 0).ZE31R  NOT I/O             35672800
                    AIF   ('&XTASKID'(1,1) NE '(').ZE31R                35677100
&ZCGPR              SETC  '&XTASKID'(2,K'&XTASKID-2)                    35681400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE31P                  35685700
                    AIF   (K'&ZCGPR GT 2).ZE31Q                         35690000
                    AIF   ('&ZCGPR' EQ '0').ZE31Q                       35694300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 35698600
                    AIF   (T'&ZCGPR NE 'N').ZE31Q  INVALID REG NAME     35702900
.ZE31P              ANOP  ,                                             35707200
                    AIF   (T'&ZCGPR NE 'N').ZE31R  NON NUMERIC          35711500
                    AIF   ('&ZCGPR' LT '2').ZE31Q                       35715800
                    AIF   ('&ZCGPR' LE '12').ZE31R                      35720100
.ZE31Q              ANOP  ,                                             35724400
&ZMS                SETC  '"TASKID='  *KGPRA* MNOTE                     35728700
&ZMS                SETC  '&ZMS.&TASKID"'                               35733000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     35737300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              35741600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35745900
.ZE31R              ANOP  ,                                             35750200
.*----------------------------------------------------------------***   35754500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          35758800
                    AIF   (N'&THREAD LE 1).ZE34A  CK NUM                35763100
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     35767400
&ZMS                SETC  '&ZMS.&THREAD"'                               35771700
&ZMS                SETC  '&ZMS "THREAD"'                               35776000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           35780300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35784600
.ZE34A              ANOP  ,                                             35788900
.*-------------------------------------------------------------------   35793200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     35797500
                    AIF   (K'&THREAD(1) LE 0).ZE34B NO PRM              35801800
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     35806100
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           35810400
                    AIF   (N'&THREAD GT 1).ZE34B                        35814700
.*                  ANOP              MULTIPLE PARMS                    35819000
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     35823300
.ZE34B              ANOP  ,                                             35827600
.*-------------------------------------------------------------------   35831900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    35836200
                    AIF   (K'&ZXTHREAD LE 0).ZE34R  NOT I/O             35840500
                    AIF   ('&XTHREAD'(1,1) NE '(').ZE34R                35844800
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    35849100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE34P                  35853400
                    AIF   (K'&ZCGPR GT 2).ZE34Q                         35857700
                    AIF   ('&ZCGPR' EQ '0').ZE34Q                       35862000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 35866300
                    AIF   (T'&ZCGPR NE 'N').ZE34Q  INVALID REG NAME     35870600
.ZE34P              ANOP  ,                                             35874900
                    AIF   (T'&ZCGPR NE 'N').ZE34R  NON NUMERIC          35879200
                    AIF   ('&ZCGPR' LT '2').ZE34Q                       35883500
                    AIF   ('&ZCGPR' LE '12').ZE34R                      35887800
.ZE34Q              ANOP  ,                                             35892100
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     35896400
&ZMS                SETC  '&ZMS.&THREAD"'                               35900700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     35905000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              35909300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35913600
.ZE34R              ANOP  ,                                             35917900
.*----------------------------------------------------------------***   35922200
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          35926500
                    AIF   (N'&UTILRTN LE 1).ZE37A  CK NUM               35930800
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           35935100
&ZMS                SETC  '&ZMS.&UTILRTN"'                              35939400
&ZMS                SETC  '&ZMS "UTILRTN"'                              35943700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           35948000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       35952300
.ZE37A              ANOP  ,                                             35956600
.*-------------------------------------------------------------------   35960900
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     35965200
                    AIF   (K'&UTILRTN(1) LE 0).ZE37B NO PRM             35969500
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     35973800
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           35978100
                    AIF   (N'&UTILRTN GT 1).ZE37B                       35982400
.*                  ANOP              MULTIPLE PARMS                    35986700
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     35991000
.ZE37B              ANOP  ,                                             35995300
.*-------------------------------------------------------------------   35999600
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    36003900
                    AIF   (K'&ZXUTILRTN LE 0).ZE37R  NOT I/O            36008200
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZE37R               36012500
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  36016800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE37P                  36021100
                    AIF   (K'&ZCGPR GT 2).ZE37Q                         36025400
                    AIF   ('&ZCGPR' EQ '0').ZE37Q                       36029700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 36034000
                    AIF   (T'&ZCGPR NE 'N').ZE37Q  INVALID REG NAME     36038300
.ZE37P              ANOP  ,                                             36042600
                    AIF   (T'&ZCGPR NE 'N').ZE37R  NON NUMERIC          36046900
                    AIF   ('&ZCGPR' LT '2').ZE37Q                       36051200
                    AIF   ('&ZCGPR' LE '12').ZE37R                      36055500
.ZE37Q              ANOP  ,                                             36059800
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           36064100
&ZMS                SETC  '&ZMS.&UTILRTN"'                              36068400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     36072700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              36077000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36081300
.ZE37R              ANOP  ,                                             36085600
.*-------------------------------------------------------------------   36089900
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           36094200
&ZTLC               SETC 'CHANGE_OWNER'                                 36098500
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE39A              36102800
&XREQUEST           SETC  'CHANGE_OWNER'        SET KEYWORD             36107100
                    AIF   (N'&REQUEST LE 1).ZE39A  CK NUM               36111400
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           36115700
&ZMS                SETC  '&ZMS.&REQUEST"'                              36120000
&ZMS                SETC  '&ZMS "REQUEST"'                              36124300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           36128600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36132900
.ZE39A              ANOP  ,                                             36137200
.*----------------------------------------------------------------***   36141500
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          36145800
                    AIF   (N'&BUFLIST LE 1).ZE41A  CK NUM               36150100
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           36154400
&ZMS                SETC  '&ZMS.&BUFLIST"'                              36158700
&ZMS                SETC  '&ZMS "BUFLIST"'                              36163000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           36167300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36171600
.ZE41A              ANOP  ,                                             36175900
.*-------------------------------------------------------------------   36180200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     36184500
                    AIF   (K'&BUFLIST(1) LE 0).ZE41B NO PRM             36188800
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     36193100
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           36197400
                    AIF   (N'&BUFLIST GT 1).ZE41B                       36201700
.*                  ANOP              MULTIPLE PARMS                    36206000
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     36210300
.ZE41B              ANOP  ,                                             36214600
.*-------------------------------------------------------------------   36218900
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    36223200
                    AIF   (K'&ZXBUFLIST LE 0).ZE41R  NOT I/O            36227500
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZE41R               36231800
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  36236100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE41P                  36240400
                    AIF   (K'&ZCGPR GT 2).ZE41Q                         36244700
                    AIF   ('&ZCGPR' EQ '0').ZE41Q                       36249000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 36253300
                    AIF   (T'&ZCGPR NE 'N').ZE41Q  INVALID REG NAME     36257600
.ZE41P              ANOP  ,                                             36261900
                    AIF   (T'&ZCGPR NE 'N').ZE41R  NON NUMERIC          36266200
                    AIF   ('&ZCGPR' LT '2').ZE41Q                       36270500
                    AIF   ('&ZCGPR' LE '12').ZE41R                      36274800
.ZE41Q              ANOP  ,                                             36279100
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           36283400
&ZMS                SETC  '&ZMS.&BUFLIST"'                              36287700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     36292000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              36296300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36300600
.ZE41R              ANOP  ,                                             36304900
.*----------------------------------------------------------------***   36309200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          36313500
                    AIF   (N'&BUFNUM LE 1).ZE44A  CK NUM                36317800
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     36322100
&ZMS                SETC  '&ZMS.&BUFNUM"'                               36326400
&ZMS                SETC  '&ZMS "BUFNUM"'                               36330700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           36335000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36339300
.ZE44A              ANOP  ,                                             36343600
.*-------------------------------------------------------------------   36347900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     36352200
                    AIF   (K'&BUFNUM(1) LE 0).ZE44B NO PRM              36356500
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     36360800
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           36365100
                    AIF   (N'&BUFNUM GT 1).ZE44B                        36369400
.*                  ANOP              MULTIPLE PARMS                    36373700
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     36378000
.ZE44B              ANOP  ,                                             36382300
.*-------------------------------------------------------------------   36386600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    36390900
                    AIF   (K'&ZXBUFNUM LE 0).ZE44R  NOT I/O             36395200
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZE44R                36399500
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    36403800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE44P                  36408100
                    AIF   (K'&ZCGPR GT 2).ZE44Q                         36412400
                    AIF   ('&ZCGPR' EQ '0').ZE44Q                       36416700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 36421000
                    AIF   (T'&ZCGPR NE 'N').ZE44Q  INVALID REG NAME     36425300
.ZE44P              ANOP  ,                                             36429600
                    AIF   (T'&ZCGPR NE 'N').ZE44R  NON NUMERIC          36433900
                    AIF   ('&ZCGPR' LT '2').ZE44Q                       36438200
                    AIF   ('&ZCGPR' LE '12').ZE44R                      36442500
.ZE44Q              ANOP  ,                                             36446800
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     36451100
&ZMS                SETC  '&ZMS.&BUFNUM"'                               36455400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     36459700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              36464000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36468300
.ZE44R              ANOP  ,                                             36472600
.*----------------------------------------------------------------***   36476900
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             36481200
                    AIF   (N'&CSMUSER LE 1).ZE47A  CK NUM               36485500
&ZMS                SETC  '"CSMUSER='           *KPOSA* MNOTE           36489800
&ZMS                SETC  '&ZMS.&CSMUSER"'                              36494100
&ZMS                SETC  '&ZMS "CSMUSER"'                              36498400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           36502700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36507000
.ZE47A              ANOP  ,                                             36511300
.*-------------------------------------------------------------------   36515600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             36519900
.ZE48A   AIF   ('&CSMUSER(1)' NE 'NO').ZE49A                            36524200
&XCSMUSER           SETC  'NO'        SET KEYWORD                       36528500
.*-------------------------------------------------------------------   36532800
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             36537100
.ZE49A   AIF   ('&CSMUSER(1)' NE 'YES').ZE50A                           36541400
&XCSMUSER           SETC  'YES'       SET KEYWORD                       36545700
.*-------------------------------------------------------------------   36550000
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             36554300
.ZE50A              AIF   (K'&XCSMUSER GT 0).ZE50B                      36558600
                    AIF   (K'&CSMUSER(1) LE 0).ZE50C                    36562900
&ZMS                SETC  '"CSMUSER='           *KUKWA* MNOTE           36567200
&ZMS                SETC  '&ZMS.&CSMUSER"'                              36571500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     36575800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           36580100
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           36584400
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           36588700
                    MNOTE 8,' &ZMS '                                    36593000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36597300
                    AGO   .ZE50C                                        36601600
.*                                                                      36605900
.ZE50B              ANOP  ,                                             36610200
&ZXCSMUSER          SETC  'INPUT'     SET IN/OUTPUT                     36614500
.ZE50C              ANOP  ,                                             36618800
.*----------------------------------------------------------------***   36623100
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         36627400
                    AIF   (N'&ERRBFLST LE 1).ZE52A  CK NUM              36631700
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           36636000
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             36640300
&ZMS                SETC  '&ZMS "ERRBFLST"'                             36644600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           36648900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36653200
.ZE52A              ANOP  ,                                             36657500
.*-------------------------------------------------------------------   36661800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    36666100
                    AIF   (K'&ERRBFLST(1) LE 0).ZE52B NO PRM            36670400
&ZXERRBFLST         SETC  'OUTPUT'    SET IN/OUTPUT                     36674700
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           36679000
                    AIF   (N'&ERRBFLST GT 1).ZE52B                      36683300
.*                  ANOP              MULTIPLE PARMS                    36687600
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           36691900
.ZE52B              ANOP  ,                                             36696200
.*-------------------------------------------------------------------   36700500
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   36704800
                    AIF   (K'&ZXERRBFLST LE 0).ZE52R  NOT I/O           36709100
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZE52R              36713400
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                36717700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE52P                  36722000
                    AIF   (K'&ZCGPR GT 2).ZE52Q                         36726300
                    AIF   ('&ZCGPR' EQ '0').ZE52Q                       36730600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 36734900
                    AIF   (T'&ZCGPR NE 'N').ZE52Q  INVALID REG NAME     36739200
.ZE52P              ANOP  ,                                             36743500
                    AIF   (T'&ZCGPR NE 'N').ZE52R  NON NUMERIC          36747800
                    AIF   ('&ZCGPR' LT '2').ZE52Q                       36752100
                    AIF   ('&ZCGPR' LE '12').ZE52R                      36756400
.ZE52Q              ANOP  ,                                             36760700
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           36765000
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             36769300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     36773600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              36777900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36782200
.ZE52R              ANOP  ,                                             36786500
.*----------------------------------------------------------------***   36790800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          36795100
                    AIF   (N'&GAP LE 1).ZE55A   CK NUM                  36799400
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     36803700
&ZMS                SETC  '&ZMS.&GAP"'                                  36808000
&ZMS                SETC  '&ZMS "GAP"'                                  36812300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           36816600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36820900
.ZE55A              ANOP  ,                                             36825200
.*-------------------------------------------------------------------   36829500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     36833800
                    AIF   (K'&GAP(1) LE 0).ZE55B NO PRM                 36838100
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     36842400
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     36846700
                    AIF   (N'&GAP GT 1).ZE55B                           36851000
.*                  ANOP              MULTIPLE PARMS                    36855300
&XGAP               SETC  '&GAP'      SET XVARIABLE                     36859600
.ZE55B              ANOP  ,                                             36863900
.*-------------------------------------------------------------------   36868200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    36872500
                    AIF   (K'&ZXGAP LE 0).ZE55R  NOT I/O                36876800
                    AIF   ('&XGAP'(1,1) NE '(').ZE55R                   36881100
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          36885400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE55P                  36889700
                    AIF   (K'&ZCGPR GT 2).ZE55Q                         36894000
                    AIF   ('&ZCGPR' EQ '0').ZE55Q                       36898300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 36902600
                    AIF   (T'&ZCGPR NE 'N').ZE55Q  INVALID REG NAME     36906900
.ZE55P              ANOP  ,                                             36911200
                    AIF   (T'&ZCGPR NE 'N').ZE55R  NON NUMERIC          36915500
                    AIF   ('&ZCGPR' LT '2').ZE55Q                       36919800
                    AIF   ('&ZCGPR' LE '12').ZE55R                      36924100
.ZE55Q              ANOP  ,                                             36928400
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     36932700
&ZMS                SETC  '&ZMS.&GAP"'                                  36937000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     36941300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              36945600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36949900
.ZE55R              ANOP  ,                                             36954200
.*----------------------------------------------------------------***   36958500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          36962800
                    AIF   (N'&OWNERID LE 1).ZE58A  CK NUM               36967100
&ZMS                SETC  '"OWNERID='           *KPOSA* MNOTE           36971400
&ZMS                SETC  '&ZMS.&OWNERID"'                              36975700
&ZMS                SETC  '&ZMS "OWNERID"'                              36980000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           36984300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       36988600
.ZE58A              ANOP  ,                                             36992900
.*-------------------------------------------------------------------   36997200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     37001500
                    AIF   (K'&OWNERID(1) LE 0).ZE58B NO PRM             37005800
&ZXOWNERID          SETC  'INPUT'     SET IN/OUTPUT                     37010100
&XOWNERID           SETC  '&OWNERID(1)'         SET XVARIABLE           37014400
                    AIF   (N'&OWNERID GT 1).ZE58B                       37018700
.*                  ANOP              MULTIPLE PARMS                    37023000
&XOWNERID           SETC  '&OWNERID'  SET XVARIABLE                     37027300
.ZE58B              ANOP  ,                                             37031600
.*-------------------------------------------------------------------   37035900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    37040200
                    AIF   (K'&ZXOWNERID LE 0).ZE58R  NOT I/O            37044500
                    AIF   ('&XOWNERID'(1,1) NE '(').ZE58R               37048800
&ZCGPR              SETC  '&XOWNERID'(2,K'&XOWNERID-2)                  37053100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE58P                  37057400
                    AIF   (K'&ZCGPR GT 2).ZE58Q                         37061700
                    AIF   ('&ZCGPR' EQ '0').ZE58Q                       37066000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 37070300
                    AIF   (T'&ZCGPR NE 'N').ZE58Q  INVALID REG NAME     37074600
.ZE58P              ANOP  ,                                             37078900
                    AIF   (T'&ZCGPR NE 'N').ZE58R  NON NUMERIC          37083200
                    AIF   ('&ZCGPR' LT '2').ZE58Q                       37087500
                    AIF   ('&ZCGPR' LE '12').ZE58R                      37091800
.ZE58Q              ANOP  ,                                             37096100
&ZMS                SETC  '"OWNERID='           *KGPRA* MNOTE           37100400
&ZMS                SETC  '&ZMS.&OWNERID"'                              37104700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     37109000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              37113300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37117600
.ZE58R              ANOP  ,                                             37121900
.*----------------------------------------------------------------***   37126200
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             37130500
                    AIF   (N'&SKIPBUF LE 1).ZE61A  CK NUM               37134800
&ZMS                SETC  '"SKIPBUF='           *KPOSA* MNOTE           37139100
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              37143400
&ZMS                SETC  '&ZMS "SKIPBUF"'                              37147700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37152000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37156300
.ZE61A              ANOP  ,                                             37160600
.*-------------------------------------------------------------------   37164900
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             37169200
.ZE62A   AIF   ('&SKIPBUF(1)' NE 'NO').ZE63A                            37173500
&XSKIPBUF           SETC  'NO'        SET KEYWORD                       37177800
.*-------------------------------------------------------------------   37182100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             37186400
.ZE63A   AIF   ('&SKIPBUF(1)' NE 'YES').ZE64A                           37190700
&XSKIPBUF           SETC  'YES'       SET KEYWORD                       37195000
.*-------------------------------------------------------------------   37199300
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             37203600
.ZE64A              AIF   (K'&XSKIPBUF GT 0).ZE64B                      37207900
                    AIF   (K'&SKIPBUF(1) LE 0).ZE64C                    37212200
&ZMS                SETC  '"SKIPBUF='           *KUKWA* MNOTE           37216500
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              37220800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     37225100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           37229400
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           37233700
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           37238000
                    MNOTE 8,' &ZMS '                                    37242300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37246600
                    AGO   .ZE64C                                        37250900
.*                                                                      37255200
.ZE64B              ANOP  ,                                             37259500
&ZXSKIPBUF          SETC  'INPUT'     SET IN/OUTPUT                     37263800
.ZE64C              ANOP  ,                                             37268100
.*----------------------------------------------------------------***   37272400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          37276700
                    AIF   (N'&TASKID LE 1).ZE66A  CK NUM                37281000
&ZMS                SETC  '"TASKID='  *KPOSA* MNOTE                     37285300
&ZMS                SETC  '&ZMS.&TASKID"'                               37289600
&ZMS                SETC  '&ZMS "TASKID"'                               37293900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37298200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37302500
.ZE66A              ANOP  ,                                             37306800
.*-------------------------------------------------------------------   37311100
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     37315400
                    AIF   (K'&TASKID(1) LE 0).ZE66B NO PRM              37319700
&ZXTASKID           SETC  'INPUT'     SET IN/OUTPUT                     37324000
&XTASKID            SETC  '&TASKID(1)'          SET XVARIABLE           37328300
                    AIF   (N'&TASKID GT 1).ZE66B                        37332600
.*                  ANOP              MULTIPLE PARMS                    37336900
&XTASKID            SETC  '&TASKID'   SET XVARIABLE                     37341200
.ZE66B              ANOP  ,                                             37345500
.*-------------------------------------------------------------------   37349800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    37354100
                    AIF   (K'&ZXTASKID LE 0).ZE66R  NOT I/O             37358400
                    AIF   ('&XTASKID'(1,1) NE '(').ZE66R                37362700
&ZCGPR              SETC  '&XTASKID'(2,K'&XTASKID-2)                    37367000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE66P                  37371300
                    AIF   (K'&ZCGPR GT 2).ZE66Q                         37375600
                    AIF   ('&ZCGPR' EQ '0').ZE66Q                       37379900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 37384200
                    AIF   (T'&ZCGPR NE 'N').ZE66Q  INVALID REG NAME     37388500
.ZE66P              ANOP  ,                                             37392800
                    AIF   (T'&ZCGPR NE 'N').ZE66R  NON NUMERIC          37397100
                    AIF   ('&ZCGPR' LT '2').ZE66Q                       37401400
                    AIF   ('&ZCGPR' LE '12').ZE66R                      37405700
.ZE66Q              ANOP  ,                                             37410000
&ZMS                SETC  '"TASKID='  *KGPRA* MNOTE                     37414300
&ZMS                SETC  '&ZMS.&TASKID"'                               37418600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     37422900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              37427200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37431500
.ZE66R              ANOP  ,                                             37435800
.*----------------------------------------------------------------***   37440100
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          37444400
                    AIF   (N'&THREAD LE 1).ZE69A  CK NUM                37448700
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     37453000
&ZMS                SETC  '&ZMS.&THREAD"'                               37457300
&ZMS                SETC  '&ZMS "THREAD"'                               37461600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37465900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37470200
.ZE69A              ANOP  ,                                             37474500
.*-------------------------------------------------------------------   37478800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     37483100
                    AIF   (K'&THREAD(1) LE 0).ZE69B NO PRM              37487400
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     37491700
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           37496000
                    AIF   (N'&THREAD GT 1).ZE69B                        37500300
.*                  ANOP              MULTIPLE PARMS                    37504600
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     37508900
.ZE69B              ANOP  ,                                             37513200
.*-------------------------------------------------------------------   37517500
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    37521800
                    AIF   (K'&ZXTHREAD LE 0).ZE69R  NOT I/O             37526100
                    AIF   ('&XTHREAD'(1,1) NE '(').ZE69R                37530400
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    37534700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE69P                  37539000
                    AIF   (K'&ZCGPR GT 2).ZE69Q                         37543300
                    AIF   ('&ZCGPR' EQ '0').ZE69Q                       37547600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 37551900
                    AIF   (T'&ZCGPR NE 'N').ZE69Q  INVALID REG NAME     37556200
.ZE69P              ANOP  ,                                             37560500
                    AIF   (T'&ZCGPR NE 'N').ZE69R  NON NUMERIC          37564800
                    AIF   ('&ZCGPR' LT '2').ZE69Q                       37569100
                    AIF   ('&ZCGPR' LE '12').ZE69R                      37573400
.ZE69Q              ANOP  ,                                             37577700
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     37582000
&ZMS                SETC  '&ZMS.&THREAD"'                               37586300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     37590600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              37594900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37599200
.ZE69R              ANOP  ,                                             37603500
.*----------------------------------------------------------------***   37607800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          37612100
                    AIF   (N'&UTILRTN LE 1).ZE72A  CK NUM               37616400
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           37620700
&ZMS                SETC  '&ZMS.&UTILRTN"'                              37625000
&ZMS                SETC  '&ZMS "UTILRTN"'                              37629300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37633600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37637900
.ZE72A              ANOP  ,                                             37642200
.*-------------------------------------------------------------------   37646500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     37650800
                    AIF   (K'&UTILRTN(1) LE 0).ZE72B NO PRM             37655100
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     37659400
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           37663700
                    AIF   (N'&UTILRTN GT 1).ZE72B                       37668000
.*                  ANOP              MULTIPLE PARMS                    37672300
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     37676600
.ZE72B              ANOP  ,                                             37680900
.*-------------------------------------------------------------------   37685200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    37689500
                    AIF   (K'&ZXUTILRTN LE 0).ZE72R  NOT I/O            37693800
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZE72R               37698100
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  37702400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE72P                  37706700
                    AIF   (K'&ZCGPR GT 2).ZE72Q                         37711000
                    AIF   ('&ZCGPR' EQ '0').ZE72Q                       37715300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 37719600
                    AIF   (T'&ZCGPR NE 'N').ZE72Q  INVALID REG NAME     37723900
.ZE72P              ANOP  ,                                             37728200
                    AIF   (T'&ZCGPR NE 'N').ZE72R  NON NUMERIC          37732500
                    AIF   ('&ZCGPR' LT '2').ZE72Q                       37736800
                    AIF   ('&ZCGPR' LE '12').ZE72R                      37741100
.ZE72Q              ANOP  ,                                             37745400
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           37749700
&ZMS                SETC  '&ZMS.&UTILRTN"'                              37754000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     37758300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              37762600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37766900
.ZE72R              ANOP  ,                                             37771200
.*-------------------------------------------------------------------   37775500
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           37779800
&ZTLC               SETC 'COPY_DATA'                                    37784100
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE74A              37788400
&XREQUEST           SETC  'COPY_DATA'           SET KEYWORD             37792700
                    AIF   (N'&REQUEST LE 1).ZE74A  CK NUM               37797000
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           37801300
&ZMS                SETC  '&ZMS.&REQUEST"'                              37805600
&ZMS                SETC  '&ZMS "REQUEST"'                              37809900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37814200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37818500
.ZE74A              ANOP  ,                                             37822800
.*-------------------------------------------------------------------   37827100
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           37831400
&ZTLC               SETC 'NO'                                           37835700
                    AIF   ('&PAD(1)' NE '&ZTLC').ZE77A                  37840000
&XPAD               SETC  'NO'        SET KEYWORD                       37844300
                    AIF   (N'&PAD LE 1).ZE77A   CK NUM                  37848600
&ZMS                SETC  '"PAD='     *KPOSA* MNOTE                     37852900
&ZMS                SETC  '&ZMS.&PAD"'                                  37857200
&ZMS                SETC  '&ZMS "PAD"'                                  37861500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37865800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37870100
.ZE77A              ANOP  ,                                             37874400
.*-------------------------------------------------------------------   37878700
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           37883000
&ZTLC               SETC 'YES'                                          37887300
                    AIF   ('&PAD(1)' NE '&ZTLC').ZE78A                  37891600
&XPAD               SETC  'YES'       SET KEYWORD                       37895900
                    AIF   (N'&PAD LE 1).ZE78A   CK NUM                  37900200
&ZMS                SETC  '"PAD='     *KPOSA* MNOTE                     37904500
&ZMS                SETC  '&ZMS.&PAD"'                                  37908800
&ZMS                SETC  '&ZMS "PAD"'                                  37913100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37917400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37921700
.ZE78A              ANOP  ,                                             37926000
.*----------------------------------------------------------------***   37930300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          37934600
                    AIF   (N'&PADCHAR LE 1).ZE80A  CK NUM               37938900
&ZMS                SETC  '"PADCHAR='           *KPOSA* MNOTE           37943200
&ZMS                SETC  '&ZMS.&PADCHAR"'                              37947500
&ZMS                SETC  '&ZMS "PADCHAR"'                              37951800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           37956100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       37960400
.ZE80A              ANOP  ,                                             37964700
.*-------------------------------------------------------------------   37969000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     37973300
                    AIF   (K'&PADCHAR(1) LE 0).ZE80B NO PRM             37977600
&ZXPADCHAR          SETC  'INPUT'     SET IN/OUTPUT                     37981900
&XPADCHAR           SETC  '&PADCHAR(1)'         SET XVARIABLE           37986200
                    AIF   (N'&PADCHAR GT 1).ZE80B                       37990500
.*                  ANOP              MULTIPLE PARMS                    37994800
&XPADCHAR           SETC  '&PADCHAR'  SET XVARIABLE                     37999100
.ZE80B              ANOP  ,                                             38003400
.*-------------------------------------------------------------------   38007700
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    38012000
                    AIF   (K'&ZXPADCHAR LE 0).ZE80R  NOT I/O            38016300
                    AIF   ('&XPADCHAR'(1,1) NE '(').ZE80R               38020600
&ZCGPR              SETC  '&XPADCHAR'(2,K'&XPADCHAR-2)                  38024900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE80P                  38029200
                    AIF   (K'&ZCGPR GT 2).ZE80Q                         38033500
                    AIF   ('&ZCGPR' EQ '0').ZE80Q                       38037800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 38042100
                    AIF   (T'&ZCGPR NE 'N').ZE80Q  INVALID REG NAME     38046400
.ZE80P              ANOP  ,                                             38050700
                    AIF   (T'&ZCGPR NE 'N').ZE80R  NON NUMERIC          38055000
                    AIF   ('&ZCGPR' LT '2').ZE80Q                       38059300
                    AIF   ('&ZCGPR' LE '12').ZE80R                      38063600
.ZE80Q              ANOP  ,                                             38067900
&ZMS                SETC  '"PADCHAR='           *KGPRA* MNOTE           38072200
&ZMS                SETC  '&ZMS.&PADCHAR"'                              38076500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     38080800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              38085100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38089400
.ZE80R              ANOP  ,                                             38093700
.*------------------------------------------------------------------    38098000
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           38102300
.ZE82               AIF   (K'&XPAD GT 0).ZE82A  VALID                   38106600
                    AIF   (K'&PAD(1) LE 0).ZE82B                        38110900
&ZMS                SETC  '"PAD='     *KUKWA* MNOTE                     38115200
&ZMS                SETC  '&ZMS.&PAD"'                                  38119500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     38123800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           38128100
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           38132400
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           38136700
                    MNOTE 8,' &ZMS '                                    38141000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38145300
                    AGO   .ZE82B                                        38149600
.*                                                                      38153900
.ZE82A              ANOP  ,                                             38158200
&ZXPAD              SETC  'INPUT'     SET IN/OUTPUT                     38162500
.ZE82B              ANOP  ,                                             38166800
.*----------------------------------------------------------------***   38171100
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         38175400
                    AIF   (N'&SRCERRL LE 1).ZE84A  CK NUM               38179700
&ZMS                SETC  '"SRCERRL='           *KPOSA* MNOTE           38184000
&ZMS                SETC  '&ZMS.&SRCERRL"'                              38188300
&ZMS                SETC  '&ZMS "SRCERRL"'                              38192600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           38196900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38201200
.ZE84A              ANOP  ,                                             38205500
.*-------------------------------------------------------------------   38209800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    38214100
                    AIF   (K'&SRCERRL(1) LE 0).ZE84B NO PRM             38218400
&ZXSRCERRL          SETC  'OUTPUT'    SET IN/OUTPUT                     38222700
&XSRCERRL           SETC  '&SRCERRL(1)'         SET XVARIABLE           38227000
                    AIF   (N'&SRCERRL GT 1).ZE84B                       38231300
.*                  ANOP              MULTIPLE PARMS                    38235600
&XSRCERRL           SETC  '&SRCERRL'  SET XVARIABLE                     38239900
.ZE84B              ANOP  ,                                             38244200
.*-------------------------------------------------------------------   38248500
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   38252800
                    AIF   (K'&ZXSRCERRL LE 0).ZE84R  NOT I/O            38257100
                    AIF   ('&XSRCERRL'(1,1) NE '(').ZE84R               38261400
&ZCGPR              SETC  '&XSRCERRL'(2,K'&XSRCERRL-2)                  38265700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE84P                  38270000
                    AIF   (K'&ZCGPR GT 2).ZE84Q                         38274300
                    AIF   ('&ZCGPR' EQ '0').ZE84Q                       38278600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 38282900
                    AIF   (T'&ZCGPR NE 'N').ZE84Q  INVALID REG NAME     38287200
.ZE84P              ANOP  ,                                             38291500
                    AIF   (T'&ZCGPR NE 'N').ZE84R  NON NUMERIC          38295800
                    AIF   ('&ZCGPR' LT '2').ZE84Q                       38300100
                    AIF   ('&ZCGPR' LE '12').ZE84R                      38304400
.ZE84Q              ANOP  ,                                             38308700
&ZMS                SETC  '"SRCERRL='           *KGPRA* MNOTE           38313000
&ZMS                SETC  '&ZMS.&SRCERRL"'                              38317300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     38321600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              38325900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38330200
.ZE84R              ANOP  ,                                             38334500
.*----------------------------------------------------------------***   38338800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          38343100
                    AIF   (N'&SRCGAP LE 1).ZE87A  CK NUM                38347400
&ZMS                SETC  '"SRCGAP='  *KPOSA* MNOTE                     38351700
&ZMS                SETC  '&ZMS.&SRCGAP"'                               38356000
&ZMS                SETC  '&ZMS "SRCGAP"'                               38360300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           38364600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38368900
.ZE87A              ANOP  ,                                             38373200
.*-------------------------------------------------------------------   38377500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     38381800
                    AIF   (K'&SRCGAP(1) LE 0).ZE87B NO PRM              38386100
&ZXSRCGAP           SETC  'INPUT'     SET IN/OUTPUT                     38390400
&XSRCGAP            SETC  '&SRCGAP(1)'          SET XVARIABLE           38394700
                    AIF   (N'&SRCGAP GT 1).ZE87B                        38399000
.*                  ANOP              MULTIPLE PARMS                    38403300
&XSRCGAP            SETC  '&SRCGAP'   SET XVARIABLE                     38407600
.ZE87B              ANOP  ,                                             38411900
.*-------------------------------------------------------------------   38416200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    38420500
                    AIF   (K'&ZXSRCGAP LE 0).ZE87R  NOT I/O             38424800
                    AIF   ('&XSRCGAP'(1,1) NE '(').ZE87R                38429100
&ZCGPR              SETC  '&XSRCGAP'(2,K'&XSRCGAP-2)                    38433400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE87P                  38437700
                    AIF   (K'&ZCGPR GT 2).ZE87Q                         38442000
                    AIF   ('&ZCGPR' EQ '0').ZE87Q                       38446300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 38450600
                    AIF   (T'&ZCGPR NE 'N').ZE87Q  INVALID REG NAME     38454900
.ZE87P              ANOP  ,                                             38459200
                    AIF   (T'&ZCGPR NE 'N').ZE87R  NON NUMERIC          38463500
                    AIF   ('&ZCGPR' LT '2').ZE87Q                       38467800
                    AIF   ('&ZCGPR' LE '12').ZE87R                      38472100
.ZE87Q              ANOP  ,                                             38476400
&ZMS                SETC  '"SRCGAP='  *KGPRA* MNOTE                     38480700
&ZMS                SETC  '&ZMS.&SRCGAP"'                               38485000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     38489300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              38493600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38497900
.ZE87R              ANOP  ,                                             38502200
.*----------------------------------------------------------------***   38506500
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          38510800
                    AIF   (N'&SRCLIST LE 1).ZE90A  CK NUM               38515100
&ZMS                SETC  '"SRCLIST='           *KPOSA* MNOTE           38519400
&ZMS                SETC  '&ZMS.&SRCLIST"'                              38523700
&ZMS                SETC  '&ZMS "SRCLIST"'                              38528000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           38532300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38536600
.ZE90A              ANOP  ,                                             38540900
.*-------------------------------------------------------------------   38545200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     38549500
                    AIF   (K'&SRCLIST(1) LE 0).ZE90B NO PRM             38553800
&ZXSRCLIST          SETC  'INPUT'     SET IN/OUTPUT                     38558100
&XSRCLIST           SETC  '&SRCLIST(1)'         SET XVARIABLE           38562400
                    AIF   (N'&SRCLIST GT 1).ZE90B                       38566700
.*                  ANOP              MULTIPLE PARMS                    38571000
&XSRCLIST           SETC  '&SRCLIST'  SET XVARIABLE                     38575300
.ZE90B              ANOP  ,                                             38579600
.*-------------------------------------------------------------------   38583900
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    38588200
                    AIF   (K'&ZXSRCLIST LE 0).ZE90R  NOT I/O            38592500
                    AIF   ('&XSRCLIST'(1,1) NE '(').ZE90R               38596800
&ZCGPR              SETC  '&XSRCLIST'(2,K'&XSRCLIST-2)                  38601100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE90P                  38605400
                    AIF   (K'&ZCGPR GT 2).ZE90Q                         38609700
                    AIF   ('&ZCGPR' EQ '0').ZE90Q                       38614000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 38618300
                    AIF   (T'&ZCGPR NE 'N').ZE90Q  INVALID REG NAME     38622600
.ZE90P              ANOP  ,                                             38626900
                    AIF   (T'&ZCGPR NE 'N').ZE90R  NON NUMERIC          38631200
                    AIF   ('&ZCGPR' LT '2').ZE90Q                       38635500
                    AIF   ('&ZCGPR' LE '12').ZE90R                      38639800
.ZE90Q              ANOP  ,                                             38644100
&ZMS                SETC  '"SRCLIST='           *KGPRA* MNOTE           38648400
&ZMS                SETC  '&ZMS.&SRCLIST"'                              38652700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     38657000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              38661300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38665600
.ZE90R              ANOP  ,                                             38669900
.*----------------------------------------------------------------***   38674200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          38678500
                    AIF   (N'&SRCNUM LE 1).ZE93A  CK NUM                38682800
&ZMS                SETC  '"SRCNUM='  *KPOSA* MNOTE                     38687100
&ZMS                SETC  '&ZMS.&SRCNUM"'                               38691400
&ZMS                SETC  '&ZMS "SRCNUM"'                               38695700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           38700000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38704300
.ZE93A              ANOP  ,                                             38708600
.*-------------------------------------------------------------------   38712900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     38717200
                    AIF   (K'&SRCNUM(1) LE 0).ZE93B NO PRM              38721500
&ZXSRCNUM           SETC  'INPUT'     SET IN/OUTPUT                     38725800
&XSRCNUM            SETC  '&SRCNUM(1)'          SET XVARIABLE           38730100
                    AIF   (N'&SRCNUM GT 1).ZE93B                        38734400
.*                  ANOP              MULTIPLE PARMS                    38738700
&XSRCNUM            SETC  '&SRCNUM'   SET XVARIABLE                     38743000
.ZE93B              ANOP  ,                                             38747300
.*-------------------------------------------------------------------   38751600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    38755900
                    AIF   (K'&ZXSRCNUM LE 0).ZE93R  NOT I/O             38760200
                    AIF   ('&XSRCNUM'(1,1) NE '(').ZE93R                38764500
&ZCGPR              SETC  '&XSRCNUM'(2,K'&XSRCNUM-2)                    38768800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE93P                  38773100
                    AIF   (K'&ZCGPR GT 2).ZE93Q                         38777400
                    AIF   ('&ZCGPR' EQ '0').ZE93Q                       38781700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 38786000
                    AIF   (T'&ZCGPR NE 'N').ZE93Q  INVALID REG NAME     38790300
.ZE93P              ANOP  ,                                             38794600
                    AIF   (T'&ZCGPR NE 'N').ZE93R  NON NUMERIC          38798900
                    AIF   ('&ZCGPR' LT '2').ZE93Q                       38803200
                    AIF   ('&ZCGPR' LE '12').ZE93R                      38807500
.ZE93Q              ANOP  ,                                             38811800
&ZMS                SETC  '"SRCNUM='  *KGPRA* MNOTE                     38816100
&ZMS                SETC  '&ZMS.&SRCNUM"'                               38820400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     38824700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              38829000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38833300
.ZE93R              ANOP  ,                                             38837600
.*----------------------------------------------------------------***   38841900
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         38846200
                    AIF   (N'&TARGERRL LE 1).ZE96A  CK NUM              38850500
&ZMS                SETC  '"TARGERRL='          *KPOSA* MNOTE           38854800
&ZMS                SETC  '&ZMS.&TARGERRL"'                             38859100
&ZMS                SETC  '&ZMS "TARGERRL"'                             38863400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           38867700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       38872000
.ZE96A              ANOP  ,                                             38876300
.*-------------------------------------------------------------------   38880600
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    38884900
                    AIF   (K'&TARGERRL(1) LE 0).ZE96B NO PRM            38889200
&ZXTARGERRL         SETC  'OUTPUT'    SET IN/OUTPUT                     38893500
&XTARGERRL          SETC  '&TARGERRL(1)'        SET XVARIABLE           38897800
                    AIF   (N'&TARGERRL GT 1).ZE96B                      38902100
.*                  ANOP              MULTIPLE PARMS                    38906400
&XTARGERRL          SETC  '&TARGERRL'           SET XVARIABLE           38910700
.ZE96B              ANOP  ,                                             38915000
.*-------------------------------------------------------------------   38919300
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   38923600
                    AIF   (K'&ZXTARGERRL LE 0).ZE96R  NOT I/O           38927900
                    AIF   ('&XTARGERRL'(1,1) NE '(').ZE96R              38932200
&ZCGPR              SETC  '&XTARGERRL'(2,K'&XTARGERRL-2)                38936500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE96P                  38940800
                    AIF   (K'&ZCGPR GT 2).ZE96Q                         38945100
                    AIF   ('&ZCGPR' EQ '0').ZE96Q                       38949400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 38953700
                    AIF   (T'&ZCGPR NE 'N').ZE96Q  INVALID REG NAME     38958000
.ZE96P              ANOP  ,                                             38962300
                    AIF   (T'&ZCGPR NE 'N').ZE96R  NON NUMERIC          38966600
                    AIF   ('&ZCGPR' LT '2').ZE96Q                       38970900
                    AIF   ('&ZCGPR' LE '12').ZE96R                      38975200
.ZE96Q              ANOP  ,                                             38979500
&ZMS                SETC  '"TARGERRL='          *KGPRA* MNOTE           38983800
&ZMS                SETC  '&ZMS.&TARGERRL"'                             38988100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     38992400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              38996700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39001000
.ZE96R              ANOP  ,                                             39005300
.*----------------------------------------------------------------***   39009600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          39013900
                    AIF   (N'&TARGGAP LE 1).ZE99A  CK NUM               39018200
&ZMS                SETC  '"TARGGAP='           *KPOSA* MNOTE           39022500
&ZMS                SETC  '&ZMS.&TARGGAP"'                              39026800
&ZMS                SETC  '&ZMS "TARGGAP"'                              39031100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           39035400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39039700
.ZE99A              ANOP  ,                                             39044000
.*-------------------------------------------------------------------   39048300
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     39052600
                    AIF   (K'&TARGGAP(1) LE 0).ZE99B NO PRM             39056900
&ZXTARGGAP          SETC  'INPUT'     SET IN/OUTPUT                     39061200
&XTARGGAP           SETC  '&TARGGAP(1)'         SET XVARIABLE           39065500
                    AIF   (N'&TARGGAP GT 1).ZE99B                       39069800
.*                  ANOP              MULTIPLE PARMS                    39074100
&XTARGGAP           SETC  '&TARGGAP'  SET XVARIABLE                     39078400
.ZE99B              ANOP  ,                                             39082700
.*-------------------------------------------------------------------   39087000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    39091300
                    AIF   (K'&ZXTARGGAP LE 0).ZE99R  NOT I/O            39095600
                    AIF   ('&XTARGGAP'(1,1) NE '(').ZE99R               39099900
&ZCGPR              SETC  '&XTARGGAP'(2,K'&XTARGGAP-2)                  39104200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE99P                  39108500
                    AIF   (K'&ZCGPR GT 2).ZE99Q                         39112800
                    AIF   ('&ZCGPR' EQ '0').ZE99Q                       39117100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 39121400
                    AIF   (T'&ZCGPR NE 'N').ZE99Q  INVALID REG NAME     39125700
.ZE99P              ANOP  ,                                             39130000
                    AIF   (T'&ZCGPR NE 'N').ZE99R  NON NUMERIC          39134300
                    AIF   ('&ZCGPR' LT '2').ZE99Q                       39138600
                    AIF   ('&ZCGPR' LE '12').ZE99R                      39142900
.ZE99Q              ANOP  ,                                             39147200
&ZMS                SETC  '"TARGGAP='           *KGPRA* MNOTE           39151500
&ZMS                SETC  '&ZMS.&TARGGAP"'                              39155800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     39160100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              39164400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39168700
.ZE99R              ANOP  ,                                             39173000
.*----------------------------------------------------------------***   39177300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          39181600
                    AIF   (N'&TARGLIST LE 1).ZE102A  CK NUM             39185900
&ZMS                SETC  '"TARGLIST='          *KPOSA* MNOTE           39190200
&ZMS                SETC  '&ZMS.&TARGLIST"'                             39194500
&ZMS                SETC  '&ZMS "TARGLIST"'                             39198800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           39203100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39207400
.ZE102A             ANOP  ,                                             39211700
.*-------------------------------------------------------------------   39216000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     39220300
                    AIF   (K'&TARGLIST(1) LE 0).ZE102B NO PRM           39224600
&ZXTARGLIST         SETC  'INPUT'     SET IN/OUTPUT                     39228900
&XTARGLIST          SETC  '&TARGLIST(1)'        SET XVARIABLE           39233200
                    AIF   (N'&TARGLIST GT 1).ZE102B                     39237500
.*                  ANOP              MULTIPLE PARMS                    39241800
&XTARGLIST          SETC  '&TARGLIST'           SET XVARIABLE           39246100
.ZE102B             ANOP  ,                                             39250400
.*-------------------------------------------------------------------   39254700
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    39259000
                    AIF   (K'&ZXTARGLIST LE 0).ZE102R  NOT I/O          39263300
                    AIF   ('&XTARGLIST'(1,1) NE '(').ZE102R             39267600
&ZCGPR              SETC  '&XTARGLIST'(2,K'&XTARGLIST-2)                39271900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE102P                 39276200
                    AIF   (K'&ZCGPR GT 2).ZE102Q                        39280500
                    AIF   ('&ZCGPR' EQ '0').ZE102Q                      39284800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 39289100
                    AIF   (T'&ZCGPR NE 'N').ZE102Q  INVALID REG NAME    39293400
.ZE102P             ANOP  ,                                             39297700
                    AIF   (T'&ZCGPR NE 'N').ZE102R  NON NUMERIC         39302000
                    AIF   ('&ZCGPR' LT '2').ZE102Q                      39306300
                    AIF   ('&ZCGPR' LE '12').ZE102R                     39310600
.ZE102Q             ANOP  ,                                             39314900
&ZMS                SETC  '"TARGLIST='          *KGPRA* MNOTE           39319200
&ZMS                SETC  '&ZMS.&TARGLIST"'                             39323500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     39327800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              39332100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39336400
.ZE102R             ANOP  ,                                             39340700
.*----------------------------------------------------------------***   39345000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          39349300
                    AIF   (N'&TARGNUM LE 1).ZE105A  CK NUM              39353600
&ZMS                SETC  '"TARGNUM='           *KPOSA* MNOTE           39357900
&ZMS                SETC  '&ZMS.&TARGNUM"'                              39362200
&ZMS                SETC  '&ZMS "TARGNUM"'                              39366500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           39370800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39375100
.ZE105A             ANOP  ,                                             39379400
.*-------------------------------------------------------------------   39383700
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     39388000
                    AIF   (K'&TARGNUM(1) LE 0).ZE105B NO PRM            39392300
&ZXTARGNUM          SETC  'INPUT'     SET IN/OUTPUT                     39396600
&XTARGNUM           SETC  '&TARGNUM(1)'         SET XVARIABLE           39400900
                    AIF   (N'&TARGNUM GT 1).ZE105B                      39405200
.*                  ANOP              MULTIPLE PARMS                    39409500
&XTARGNUM           SETC  '&TARGNUM'  SET XVARIABLE                     39413800
.ZE105B             ANOP  ,                                             39418100
.*-------------------------------------------------------------------   39422400
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    39426700
                    AIF   (K'&ZXTARGNUM LE 0).ZE105R  NOT I/O           39431000
                    AIF   ('&XTARGNUM'(1,1) NE '(').ZE105R              39435300
&ZCGPR              SETC  '&XTARGNUM'(2,K'&XTARGNUM-2)                  39439600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE105P                 39443900
                    AIF   (K'&ZCGPR GT 2).ZE105Q                        39448200
                    AIF   ('&ZCGPR' EQ '0').ZE105Q                      39452500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 39456800
                    AIF   (T'&ZCGPR NE 'N').ZE105Q  INVALID REG NAME    39461100
.ZE105P             ANOP  ,                                             39465400
                    AIF   (T'&ZCGPR NE 'N').ZE105R  NON NUMERIC         39469700
                    AIF   ('&ZCGPR' LT '2').ZE105Q                      39474000
                    AIF   ('&ZCGPR' LE '12').ZE105R                     39478300
.ZE105Q             ANOP  ,                                             39482600
&ZMS                SETC  '"TARGNUM='           *KGPRA* MNOTE           39486900
&ZMS                SETC  '&ZMS.&TARGNUM"'                              39491200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     39495500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              39499800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39504100
.ZE105R             ANOP  ,                                             39508400
.*----------------------------------------------------------------***   39512700
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          39517000
                    AIF   (N'&THREAD LE 1).ZE108A  CK NUM               39521300
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     39525600
&ZMS                SETC  '&ZMS.&THREAD"'                               39529900
&ZMS                SETC  '&ZMS "THREAD"'                               39534200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           39538500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39542800
.ZE108A             ANOP  ,                                             39547100
.*-------------------------------------------------------------------   39551400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     39555700
                    AIF   (K'&THREAD(1) LE 0).ZE108B NO PRM             39560000
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     39564300
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           39568600
                    AIF   (N'&THREAD GT 1).ZE108B                       39572900
.*                  ANOP              MULTIPLE PARMS                    39577200
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     39581500
.ZE108B             ANOP  ,                                             39585800
.*-------------------------------------------------------------------   39590100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    39594400
                    AIF   (K'&ZXTHREAD LE 0).ZE108R  NOT I/O            39598700
                    AIF   ('&XTHREAD'(1,1) NE '(').ZE108R               39603000
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    39607300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE108P                 39611600
                    AIF   (K'&ZCGPR GT 2).ZE108Q                        39615900
                    AIF   ('&ZCGPR' EQ '0').ZE108Q                      39620200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 39624500
                    AIF   (T'&ZCGPR NE 'N').ZE108Q  INVALID REG NAME    39628800
.ZE108P             ANOP  ,                                             39633100
                    AIF   (T'&ZCGPR NE 'N').ZE108R  NON NUMERIC         39637400
                    AIF   ('&ZCGPR' LT '2').ZE108Q                      39641700
                    AIF   ('&ZCGPR' LE '12').ZE108R                     39646000
.ZE108Q             ANOP  ,                                             39650300
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     39654600
&ZMS                SETC  '&ZMS.&THREAD"'                               39658900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     39663200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              39667500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39671800
.ZE108R             ANOP  ,                                             39676100
.*----------------------------------------------------------------***   39680400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          39684700
                    AIF   (N'&UTILRTN LE 1).ZE111A  CK NUM              39689000
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           39693300
&ZMS                SETC  '&ZMS.&UTILRTN"'                              39697600
&ZMS                SETC  '&ZMS "UTILRTN"'                              39701900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           39706200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39710500
.ZE111A             ANOP  ,                                             39714800
.*-------------------------------------------------------------------   39719100
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     39723400
                    AIF   (K'&UTILRTN(1) LE 0).ZE111B NO PRM            39727700
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     39732000
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           39736300
                    AIF   (N'&UTILRTN GT 1).ZE111B                      39740600
.*                  ANOP              MULTIPLE PARMS                    39744900
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     39749200
.ZE111B             ANOP  ,                                             39753500
.*-------------------------------------------------------------------   39757800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    39762100
                    AIF   (K'&ZXUTILRTN LE 0).ZE111R  NOT I/O           39766400
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZE111R              39770700
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  39775000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE111P                 39779300
                    AIF   (K'&ZCGPR GT 2).ZE111Q                        39783600
                    AIF   ('&ZCGPR' EQ '0').ZE111Q                      39787900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 39792200
                    AIF   (T'&ZCGPR NE 'N').ZE111Q  INVALID REG NAME    39796500
.ZE111P             ANOP  ,                                             39800800
                    AIF   (T'&ZCGPR NE 'N').ZE111R  NON NUMERIC         39805100
                    AIF   ('&ZCGPR' LT '2').ZE111Q                      39809400
                    AIF   ('&ZCGPR' LE '12').ZE111R                     39813700
.ZE111Q             ANOP  ,                                             39818000
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           39822300
&ZMS                SETC  '&ZMS.&UTILRTN"'                              39826600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     39830900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              39835200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39839500
.ZE111R             ANOP  ,                                             39843800
.*-------------------------------------------------------------------   39848100
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           39852400
&ZTLC               SETC 'CREATE_POOL'                                  39856700
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE113A             39861000
&XREQUEST           SETC  'CREATE_POOL'         SET KEYWORD             39865300
                    AIF   (N'&REQUEST LE 1).ZE113A  CK NUM              39869600
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           39873900
&ZMS                SETC  '&ZMS.&REQUEST"'                              39878200
&ZMS                SETC  '&ZMS "REQUEST"'                              39882500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           39886800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39891100
.ZE113A             ANOP  ,                                             39895400
.*----------------------------------------------------------------***   39899700
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          39904000
                    AIF   (N'&BUFSIZE LE 1).ZE115A  CK NUM              39908300
&ZMS                SETC  '"BUFSIZE='           *KPOSA* MNOTE           39912600
&ZMS                SETC  '&ZMS.&BUFSIZE"'                              39916900
&ZMS                SETC  '&ZMS "BUFSIZE"'                              39921200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           39925500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       39929800
.ZE115A             ANOP  ,                                             39934100
.*-------------------------------------------------------------------   39938400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     39942700
                    AIF   (K'&BUFSIZE(1) LE 0).ZE115B NO PRM            39947000
&ZXBUFSIZE          SETC  'INPUT'     SET IN/OUTPUT                     39951300
&XBUFSIZE           SETC  '&BUFSIZE(1)'         SET XVARIABLE           39955600
                    AIF   (N'&BUFSIZE GT 1).ZE115B                      39959900
.*                  ANOP              MULTIPLE PARMS                    39964200
&XBUFSIZE           SETC  '&BUFSIZE'  SET XVARIABLE                     39968500
.ZE115B             ANOP  ,                                             39972800
.*-------------------------------------------------------------------   39977100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    39981400
                    AIF   (K'&ZXBUFSIZE LE 0).ZE115R  NOT I/O           39985700
                    AIF   ('&XBUFSIZE'(1,1) NE '(').ZE115R              39990000
&ZCGPR              SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                  39994300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE115P                 39998600
                    AIF   (K'&ZCGPR GT 2).ZE115Q                        40002900
                    AIF   ('&ZCGPR' EQ '0').ZE115Q                      40007200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 40011500
                    AIF   (T'&ZCGPR NE 'N').ZE115Q  INVALID REG NAME    40015800
.ZE115P             ANOP  ,                                             40020100
                    AIF   (T'&ZCGPR NE 'N').ZE115R  NON NUMERIC         40024400
                    AIF   ('&ZCGPR' LT '2').ZE115Q                      40028700
                    AIF   ('&ZCGPR' LE '12').ZE115R                     40033000
.ZE115Q             ANOP  ,                                             40037300
&ZMS                SETC  '"BUFSIZE='           *KGPRA* MNOTE           40041600
&ZMS                SETC  '&ZMS.&BUFSIZE"'                              40045900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     40050200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              40054500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40058800
.ZE115R             ANOP  ,                                             40063100
.*----------------------------------------------------------------***   40067400
.***AE.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             40071700
                    AIF   (N'&BUFSOURC LE 1).ZE118A  CK NUM             40076000
&ZMS                SETC  '"BUFSOURC='          *KPOSA* MNOTE           40080300
&ZMS                SETC  '&ZMS.&BUFSOURC"'                             40084600
&ZMS                SETC  '&ZMS "BUFSOURC"'                             40088900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           40093200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40097500
.ZE118A             ANOP  ,                                             40101800
.*-------------------------------------------------------------------   40106100
.***AE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             40110400
.ZE119A   AIF   ('&BUFSOURC(1)' NE 'DSPACE').ZE120A                     40114700
&XBUFSOURC          SETC  'DSPACE'    SET KEYWORD                       40119000
.*-------------------------------------------------------------------   40123300
.***AE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             40127600
.ZE120A   AIF   ('&BUFSOURC(1)' NE 'ECSA').ZE121A                       40131900
&XBUFSOURC          SETC  'ECSA'      SET KEYWORD                       40136200
.*-------------------------------------------------------------------   40140500
.***AE.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             40144800
.ZE121A             AIF   (K'&XBUFSOURC GT 0).ZE121B                    40149100
                    AIF   (K'&BUFSOURC(1) LE 0).ZE121C                  40153400
&ZMS                SETC  '"BUFSOURC='          *KUKWA* MNOTE           40157700
&ZMS                SETC  '&ZMS.&BUFSOURC"'                             40162000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     40166300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           40170600
&ZMS                SETC  '&ZMS "DSPACE"'       VALID KEYWORD           40174900
&ZMS                SETC  '&ZMS OR "ECSA".'     VALID KEYWORD           40179200
                    MNOTE 8,' &ZMS '                                    40183500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40187800
                    AGO   .ZE121C                                       40192100
.*                                                                      40196400
.ZE121B             ANOP  ,                                             40200700
&ZXBUFSOURC         SETC  'INPUT'     SET IN/OUTPUT                     40205000
.ZE121C             ANOP  ,                                             40209300
.*----------------------------------------------------------------***   40213600
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         40217900
                    AIF   (N'&DS_INFO LE 1).ZE123A  CK NUM              40222200
&ZMS                SETC  '"DS_INFO='           *KPOSA* MNOTE           40226500
&ZMS                SETC  '&ZMS.&DS_INFO"'                              40230800
&ZMS                SETC  '&ZMS "DS_INFO"'                              40235100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           40239400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40243700
.ZE123A             ANOP  ,                                             40248000
.*-------------------------------------------------------------------   40252300
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    40256600
                    AIF   (K'&DS_INFO(1) LE 0).ZE123B NO PRM            40260900
&ZXDS_INFO          SETC  'OUTPUT'    SET IN/OUTPUT                     40265200
&XDS_INFO           SETC  '&DS_INFO(1)'         SET XVARIABLE           40269500
                    AIF   (N'&DS_INFO GT 1).ZE123B                      40273800
.*                  ANOP              MULTIPLE PARMS                    40278100
&XDS_INFO           SETC  '&DS_INFO'  SET XVARIABLE                     40282400
.ZE123B             ANOP  ,                                             40286700
.*-------------------------------------------------------------------   40291000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   40295300
                    AIF   (K'&ZXDS_INFO LE 0).ZE123R  NOT I/O           40299600
                    AIF   ('&XDS_INFO'(1,1) NE '(').ZE123R              40303900
&ZCGPR              SETC  '&XDS_INFO'(2,K'&XDS_INFO-2)                  40308200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE123P                 40312500
                    AIF   (K'&ZCGPR GT 2).ZE123Q                        40316800
                    AIF   ('&ZCGPR' EQ '0').ZE123Q                      40321100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 40325400
                    AIF   (T'&ZCGPR NE 'N').ZE123Q  INVALID REG NAME    40329700
.ZE123P             ANOP  ,                                             40334000
                    AIF   (T'&ZCGPR NE 'N').ZE123R  NON NUMERIC         40338300
                    AIF   ('&ZCGPR' LT '2').ZE123Q                      40342600
                    AIF   ('&ZCGPR' LE '12').ZE123R                     40346900
.ZE123Q             ANOP  ,                                             40351200
&ZMS                SETC  '"DS_INFO='           *KGPRA* MNOTE           40355500
&ZMS                SETC  '&ZMS.&DS_INFO"'                              40359800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     40364100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              40368400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40372700
.ZE123R             ANOP  ,                                             40377000
.*----------------------------------------------------------------***   40381300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          40385600
                    AIF   (N'&EXPBUF LE 1).ZE126A  CK NUM               40389900
&ZMS                SETC  '"EXPBUF='  *KPOSA* MNOTE                     40394200
&ZMS                SETC  '&ZMS.&EXPBUF"'                               40398500
&ZMS                SETC  '&ZMS "EXPBUF"'                               40402800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           40407100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40411400
.ZE126A             ANOP  ,                                             40415700
.*-------------------------------------------------------------------   40420000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     40424300
                    AIF   (K'&EXPBUF(1) LE 0).ZE126B NO PRM             40428600
&ZXEXPBUF           SETC  'INPUT'     SET IN/OUTPUT                     40432900
&XEXPBUF            SETC  '&EXPBUF(1)'          SET XVARIABLE           40437200
                    AIF   (N'&EXPBUF GT 1).ZE126B                       40441500
.*                  ANOP              MULTIPLE PARMS                    40445800
&XEXPBUF            SETC  '&EXPBUF'   SET XVARIABLE                     40450100
.ZE126B             ANOP  ,                                             40454400
.*-------------------------------------------------------------------   40458700
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    40463000
                    AIF   (K'&ZXEXPBUF LE 0).ZE126R  NOT I/O            40467300
                    AIF   ('&XEXPBUF'(1,1) NE '(').ZE126R               40471600
&ZCGPR              SETC  '&XEXPBUF'(2,K'&XEXPBUF-2)                    40475900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE126P                 40480200
                    AIF   (K'&ZCGPR GT 2).ZE126Q                        40484500
                    AIF   ('&ZCGPR' EQ '0').ZE126Q                      40488800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 40493100
                    AIF   (T'&ZCGPR NE 'N').ZE126Q  INVALID REG NAME    40497400
.ZE126P             ANOP  ,                                             40501700
                    AIF   (T'&ZCGPR NE 'N').ZE126R  NON NUMERIC         40506000
                    AIF   ('&ZCGPR' LT '2').ZE126Q                      40510300
                    AIF   ('&ZCGPR' LE '12').ZE126R                     40514600
.ZE126Q             ANOP  ,                                             40518900
&ZMS                SETC  '"EXPBUF='  *KGPRA* MNOTE                     40523200
&ZMS                SETC  '&ZMS.&EXPBUF"'                               40527500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     40531800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              40536100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40540400
.ZE126R             ANOP  ,                                             40544700
.*----------------------------------------------------------------***   40549000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          40553300
                    AIF   (N'&INITBUF LE 1).ZE129A  CK NUM              40557600
&ZMS                SETC  '"INITBUF='           *KPOSA* MNOTE           40561900
&ZMS                SETC  '&ZMS.&INITBUF"'                              40566200
&ZMS                SETC  '&ZMS "INITBUF"'                              40570500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           40574800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40579100
.ZE129A             ANOP  ,                                             40583400
.*-------------------------------------------------------------------   40587700
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     40592000
                    AIF   (K'&INITBUF(1) LE 0).ZE129B NO PRM            40596300
&ZXINITBUF          SETC  'INPUT'     SET IN/OUTPUT                     40600600
&XINITBUF           SETC  '&INITBUF(1)'         SET XVARIABLE           40604900
                    AIF   (N'&INITBUF GT 1).ZE129B                      40609200
.*                  ANOP              MULTIPLE PARMS                    40613500
&XINITBUF           SETC  '&INITBUF'  SET XVARIABLE                     40617800
.ZE129B             ANOP  ,                                             40622100
.*-------------------------------------------------------------------   40626400
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    40630700
                    AIF   (K'&ZXINITBUF LE 0).ZE129R  NOT I/O           40635000
                    AIF   ('&XINITBUF'(1,1) NE '(').ZE129R              40639300
&ZCGPR              SETC  '&XINITBUF'(2,K'&XINITBUF-2)                  40643600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE129P                 40647900
                    AIF   (K'&ZCGPR GT 2).ZE129Q                        40652200
                    AIF   ('&ZCGPR' EQ '0').ZE129Q                      40656500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 40660800
                    AIF   (T'&ZCGPR NE 'N').ZE129Q  INVALID REG NAME    40665100
.ZE129P             ANOP  ,                                             40669400
                    AIF   (T'&ZCGPR NE 'N').ZE129R  NON NUMERIC         40673700
                    AIF   ('&ZCGPR' LT '2').ZE129Q                      40678000
                    AIF   ('&ZCGPR' LE '12').ZE129R                     40682300
.ZE129Q             ANOP  ,                                             40686600
&ZMS                SETC  '"INITBUF='           *KGPRA* MNOTE           40690900
&ZMS                SETC  '&ZMS.&INITBUF"'                              40695200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     40699500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              40703800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40708100
.ZE129R             ANOP  ,                                             40712400
.*----------------------------------------------------------------***   40716700
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          40721000
                    AIF   (N'&MINFREE LE 1).ZE132A  CK NUM              40725300
&ZMS                SETC  '"MINFREE='           *KPOSA* MNOTE           40729600
&ZMS                SETC  '&ZMS.&MINFREE"'                              40733900
&ZMS                SETC  '&ZMS "MINFREE"'                              40738200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           40742500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40746800
.ZE132A             ANOP  ,                                             40751100
.*-------------------------------------------------------------------   40755400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     40759700
                    AIF   (K'&MINFREE(1) LE 0).ZE132B NO PRM            40764000
&ZXMINFREE          SETC  'INPUT'     SET IN/OUTPUT                     40768300
&XMINFREE           SETC  '&MINFREE(1)'         SET XVARIABLE           40772600
                    AIF   (N'&MINFREE GT 1).ZE132B                      40776900
.*                  ANOP              MULTIPLE PARMS                    40781200
&XMINFREE           SETC  '&MINFREE'  SET XVARIABLE                     40785500
.ZE132B             ANOP  ,                                             40789800
.*-------------------------------------------------------------------   40794100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    40798400
                    AIF   (K'&ZXMINFREE LE 0).ZE132R  NOT I/O           40802700
                    AIF   ('&XMINFREE'(1,1) NE '(').ZE132R              40807000
&ZCGPR              SETC  '&XMINFREE'(2,K'&XMINFREE-2)                  40811300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE132P                 40815600
                    AIF   (K'&ZCGPR GT 2).ZE132Q                        40819900
                    AIF   ('&ZCGPR' EQ '0').ZE132Q                      40824200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 40828500
                    AIF   (T'&ZCGPR NE 'N').ZE132Q  INVALID REG NAME    40832800
.ZE132P             ANOP  ,                                             40837100
                    AIF   (T'&ZCGPR NE 'N').ZE132R  NON NUMERIC         40841400
                    AIF   ('&ZCGPR' LT '2').ZE132Q                      40845700
                    AIF   ('&ZCGPR' LE '12').ZE132R                     40850000
.ZE132Q             ANOP  ,                                             40854300
&ZMS                SETC  '"MINFREE='           *KGPRA* MNOTE           40858600
&ZMS                SETC  '&ZMS.&MINFREE"'                              40862900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     40867200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              40871500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40875800
.ZE132R             ANOP  ,                                             40880100
.*----------------------------------------------------------------***   40884400
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         40888700
                    AIF   (N'&RETPTOKN LE 1).ZE135A  CK NUM             40893000
&ZMS                SETC  '"RETPTOKN='          *KPOSA* MNOTE           40897300
&ZMS                SETC  '&ZMS.&RETPTOKN"'                             40901600
&ZMS                SETC  '&ZMS "RETPTOKN"'                             40905900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           40910200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       40914500
.ZE135A             ANOP  ,                                             40918800
.*-------------------------------------------------------------------   40923100
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    40927400
                    AIF   (K'&RETPTOKN(1) LE 0).ZE135B NO PRM           40931700
&ZXRETPTOKN         SETC  'OUTPUT'    SET IN/OUTPUT                     40936000
&XRETPTOKN          SETC  '&RETPTOKN(1)'        SET XVARIABLE           40940300
                    AIF   (N'&RETPTOKN GT 1).ZE135B                     40944600
.*                  ANOP              MULTIPLE PARMS                    40948900
&XRETPTOKN          SETC  '&RETPTOKN'           SET XVARIABLE           40953200
.ZE135B             ANOP  ,                                             40957500
.*-------------------------------------------------------------------   40961800
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   40966100
                    AIF   (K'&ZXRETPTOKN LE 0).ZE135R  NOT I/O          40970400
                    AIF   ('&XRETPTOKN'(1,1) NE '(').ZE135R             40974700
&ZCGPR              SETC  '&XRETPTOKN'(2,K'&XRETPTOKN-2)                40979000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE135P                 40983300
                    AIF   (K'&ZCGPR GT 2).ZE135Q                        40987600
                    AIF   ('&ZCGPR' EQ '0').ZE135Q                      40991900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 40996200
                    AIF   (T'&ZCGPR NE 'N').ZE135Q  INVALID REG NAME    41000500
.ZE135P             ANOP  ,                                             41004800
                    AIF   (T'&ZCGPR NE 'N').ZE135R  NON NUMERIC         41009100
                    AIF   ('&ZCGPR' LT '2').ZE135Q                      41013400
                    AIF   ('&ZCGPR' LE '12').ZE135R                     41017700
.ZE135Q             ANOP  ,                                             41022000
&ZMS                SETC  '"RETPTOKN='          *KGPRA* MNOTE           41026300
&ZMS                SETC  '&ZMS.&RETPTOKN"'                             41030600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     41034900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              41039200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41043500
.ZE135R             ANOP  ,                                             41047800
.*----------------------------------------------------------------***   41052100
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         41056400
                    AIF   (N'&STATAREA LE 1).ZE138A  CK NUM             41060700
&ZMS                SETC  '"STATAREA='          *KPOSA* MNOTE           41065000
&ZMS                SETC  '&ZMS.&STATAREA"'                             41069300
&ZMS                SETC  '&ZMS "STATAREA"'                             41073600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41077900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41082200
.ZE138A             ANOP  ,                                             41086500
.*-------------------------------------------------------------------   41090800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    41095100
                    AIF   (K'&STATAREA(1) LE 0).ZE138B NO PRM           41099400
&ZXSTATAREA         SETC  'OUTPUT'    SET IN/OUTPUT                     41103700
&XSTATAREA          SETC  '&STATAREA(1)'        SET XVARIABLE           41108000
                    AIF   (N'&STATAREA GT 1).ZE138B                     41112300
.*                  ANOP              MULTIPLE PARMS                    41116600
&XSTATAREA          SETC  '&STATAREA'           SET XVARIABLE           41120900
.ZE138B             ANOP  ,                                             41125200
.*-------------------------------------------------------------------   41129500
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   41133800
                    AIF   (K'&ZXSTATAREA LE 0).ZE138R  NOT I/O          41138100
                    AIF   ('&XSTATAREA'(1,1) NE '(').ZE138R             41142400
&ZCGPR              SETC  '&XSTATAREA'(2,K'&XSTATAREA-2)                41146700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE138P                 41151000
                    AIF   (K'&ZCGPR GT 2).ZE138Q                        41155300
                    AIF   ('&ZCGPR' EQ '0').ZE138Q                      41159600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 41163900
                    AIF   (T'&ZCGPR NE 'N').ZE138Q  INVALID REG NAME    41168200
.ZE138P             ANOP  ,                                             41172500
                    AIF   (T'&ZCGPR NE 'N').ZE138R  NON NUMERIC         41176800
                    AIF   ('&ZCGPR' LT '2').ZE138Q                      41181100
                    AIF   ('&ZCGPR' LE '12').ZE138R                     41185400
.ZE138Q             ANOP  ,                                             41189700
&ZMS                SETC  '"STATAREA='          *KGPRA* MNOTE           41194000
&ZMS                SETC  '&ZMS.&STATAREA"'                             41198300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     41202600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              41206900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41211200
.ZE138R             ANOP  ,                                             41215500
.*-------------------------------------------------------------------   41219800
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           41224100
&ZTLC               SETC 'DELETE_POOL'                                  41228400
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE140A             41232700
&XREQUEST           SETC  'DELETE_POOL'         SET KEYWORD             41237000
                    AIF   (N'&REQUEST LE 1).ZE140A  CK NUM              41241300
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           41245600
&ZMS                SETC  '&ZMS.&REQUEST"'                              41249900
&ZMS                SETC  '&ZMS "REQUEST"'                              41254200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41258500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41262800
.ZE140A             ANOP  ,                                             41267100
.*----------------------------------------------------------------***   41271400
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          41275700
                    AIF   (N'&POOLTOKN LE 1).ZE142A  CK NUM             41280000
&ZMS                SETC  '"POOLTOKN='          *KPOSA* MNOTE           41284300
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             41288600
&ZMS                SETC  '&ZMS "POOLTOKN"'                             41292900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41297200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41301500
.ZE142A             ANOP  ,                                             41305800
.*-------------------------------------------------------------------   41310100
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     41314400
                    AIF   (K'&POOLTOKN(1) LE 0).ZE142B NO PRM           41318700
&ZXPOOLTOKN         SETC  'INPUT'     SET IN/OUTPUT                     41323000
&XPOOLTOKN          SETC  '&POOLTOKN(1)'        SET XVARIABLE           41327300
                    AIF   (N'&POOLTOKN GT 1).ZE142B                     41331600
.*                  ANOP              MULTIPLE PARMS                    41335900
&XPOOLTOKN          SETC  '&POOLTOKN'           SET XVARIABLE           41340200
.ZE142B             ANOP  ,                                             41344500
.*-------------------------------------------------------------------   41348800
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    41353100
                    AIF   (K'&ZXPOOLTOKN LE 0).ZE142R  NOT I/O          41357400
                    AIF   ('&XPOOLTOKN'(1,1) NE '(').ZE142R             41361700
&ZCGPR              SETC  '&XPOOLTOKN'(2,K'&XPOOLTOKN-2)                41366000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE142P                 41370300
                    AIF   (K'&ZCGPR GT 2).ZE142Q                        41374600
                    AIF   ('&ZCGPR' EQ '0').ZE142Q                      41378900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 41383200
                    AIF   (T'&ZCGPR NE 'N').ZE142Q  INVALID REG NAME    41387500
.ZE142P             ANOP  ,                                             41391800
                    AIF   (T'&ZCGPR NE 'N').ZE142R  NON NUMERIC         41396100
                    AIF   ('&ZCGPR' LT '2').ZE142Q                      41400400
                    AIF   ('&ZCGPR' LE '12').ZE142R                     41404700
.ZE142Q             ANOP  ,                                             41409000
&ZMS                SETC  '"POOLTOKN='          *KGPRA* MNOTE           41413300
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             41417600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     41421900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              41426200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41430500
.ZE142R             ANOP  ,                                             41434800
.*-------------------------------------------------------------------   41439100
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           41443400
&ZTLC               SETC 'DUMP_INFO'                                    41447700
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE144A             41452000
&XREQUEST           SETC  'DUMP_INFO'           SET KEYWORD             41456300
                    AIF   (N'&REQUEST LE 1).ZE144A  CK NUM              41460600
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           41464900
&ZMS                SETC  '&ZMS.&REQUEST"'                              41469200
&ZMS                SETC  '&ZMS "REQUEST"'                              41473500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41477800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41482100
.ZE144A             ANOP  ,                                             41486400
.*----------------------------------------------------------------***   41490700
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         41495000
                    AIF   (N'&DS_INFO LE 1).ZE146A  CK NUM              41499300
&ZMS                SETC  '"DS_INFO='           *KPOSA* MNOTE           41503600
&ZMS                SETC  '&ZMS.&DS_INFO"'                              41507900
&ZMS                SETC  '&ZMS "DS_INFO"'                              41512200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41516500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41520800
.ZE146A             ANOP  ,                                             41525100
.*-------------------------------------------------------------------   41529400
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    41533700
                    AIF   (K'&DS_INFO(1) LE 0).ZE146B NO PRM            41538000
&ZXDS_INFO          SETC  'OUTPUT'    SET IN/OUTPUT                     41542300
&XDS_INFO           SETC  '&DS_INFO(1)'         SET XVARIABLE           41546600
                    AIF   (N'&DS_INFO GT 1).ZE146B                      41550900
.*                  ANOP              MULTIPLE PARMS                    41555200
&XDS_INFO           SETC  '&DS_INFO'  SET XVARIABLE                     41559500
.ZE146B             ANOP  ,                                             41563800
.*-------------------------------------------------------------------   41568100
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   41572400
                    AIF   (K'&ZXDS_INFO LE 0).ZE146R  NOT I/O           41576700
                    AIF   ('&XDS_INFO'(1,1) NE '(').ZE146R              41581000
&ZCGPR              SETC  '&XDS_INFO'(2,K'&XDS_INFO-2)                  41585300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE146P                 41589600
                    AIF   (K'&ZCGPR GT 2).ZE146Q                        41593900
                    AIF   ('&ZCGPR' EQ '0').ZE146Q                      41598200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 41602500
                    AIF   (T'&ZCGPR NE 'N').ZE146Q  INVALID REG NAME    41606800
.ZE146P             ANOP  ,                                             41611100
                    AIF   (T'&ZCGPR NE 'N').ZE146R  NON NUMERIC         41615400
                    AIF   ('&ZCGPR' LT '2').ZE146Q                      41619700
                    AIF   ('&ZCGPR' LE '12').ZE146R                     41624000
.ZE146Q             ANOP  ,                                             41628300
&ZMS                SETC  '"DS_INFO='           *KGPRA* MNOTE           41632600
&ZMS                SETC  '&ZMS.&DS_INFO"'                              41636900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     41641200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              41645500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41649800
.ZE146R             ANOP  ,                                             41654100
.*-------------------------------------------------------------------   41658400
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           41662700
&ZTLC               SETC 'FIX_BUFFER'                                   41667000
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE148A             41671300
&XREQUEST           SETC  'FIX_BUFFER'          SET KEYWORD             41675600
                    AIF   (N'&REQUEST LE 1).ZE148A  CK NUM              41679900
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           41684200
&ZMS                SETC  '&ZMS.&REQUEST"'                              41688500
&ZMS                SETC  '&ZMS "REQUEST"'                              41692800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41697100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41701400
.ZE148A             ANOP  ,                                             41705700
.*----------------------------------------------------------------***   41710000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          41714300
                    AIF   (N'&BUFLIST LE 1).ZE150A  CK NUM              41718600
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           41722900
&ZMS                SETC  '&ZMS.&BUFLIST"'                              41727200
&ZMS                SETC  '&ZMS "BUFLIST"'                              41731500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41735800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41740100
.ZE150A             ANOP  ,                                             41744400
.*-------------------------------------------------------------------   41748700
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     41753000
                    AIF   (K'&BUFLIST(1) LE 0).ZE150B NO PRM            41757300
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     41761600
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           41765900
                    AIF   (N'&BUFLIST GT 1).ZE150B                      41770200
.*                  ANOP              MULTIPLE PARMS                    41774500
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     41778800
.ZE150B             ANOP  ,                                             41783100
.*-------------------------------------------------------------------   41787400
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    41791700
                    AIF   (K'&ZXBUFLIST LE 0).ZE150R  NOT I/O           41796000
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZE150R              41800300
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  41804600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE150P                 41808900
                    AIF   (K'&ZCGPR GT 2).ZE150Q                        41813200
                    AIF   ('&ZCGPR' EQ '0').ZE150Q                      41817500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 41821800
                    AIF   (T'&ZCGPR NE 'N').ZE150Q  INVALID REG NAME    41826100
.ZE150P             ANOP  ,                                             41830400
                    AIF   (T'&ZCGPR NE 'N').ZE150R  NON NUMERIC         41834700
                    AIF   ('&ZCGPR' LT '2').ZE150Q                      41839000
                    AIF   ('&ZCGPR' LE '12').ZE150R                     41843300
.ZE150Q             ANOP  ,                                             41847600
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           41851900
&ZMS                SETC  '&ZMS.&BUFLIST"'                              41856200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     41860500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              41864800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41869100
.ZE150R             ANOP  ,                                             41873400
.*----------------------------------------------------------------***   41877700
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          41882000
                    AIF   (N'&BUFNUM LE 1).ZE153A  CK NUM               41886300
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     41890600
&ZMS                SETC  '&ZMS.&BUFNUM"'                               41894900
&ZMS                SETC  '&ZMS "BUFNUM"'                               41899200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           41903500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       41907800
.ZE153A             ANOP  ,                                             41912100
.*-------------------------------------------------------------------   41916400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     41920700
                    AIF   (K'&BUFNUM(1) LE 0).ZE153B NO PRM             41925000
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     41929300
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           41933600
                    AIF   (N'&BUFNUM GT 1).ZE153B                       41937900
.*                  ANOP              MULTIPLE PARMS                    41942200
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     41946500
.ZE153B             ANOP  ,                                             41950800
.*-------------------------------------------------------------------   41955100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    41959400
                    AIF   (K'&ZXBUFNUM LE 0).ZE153R  NOT I/O            41963700
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZE153R               41968000
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    41972300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE153P                 41976600
                    AIF   (K'&ZCGPR GT 2).ZE153Q                        41980900
                    AIF   ('&ZCGPR' EQ '0').ZE153Q                      41985200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 41989500
                    AIF   (T'&ZCGPR NE 'N').ZE153Q  INVALID REG NAME    41993800
.ZE153P             ANOP  ,                                             41998100
                    AIF   (T'&ZCGPR NE 'N').ZE153R  NON NUMERIC         42002400
                    AIF   ('&ZCGPR' LT '2').ZE153Q                      42006700
                    AIF   ('&ZCGPR' LE '12').ZE153R                     42011000
.ZE153Q             ANOP  ,                                             42015300
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     42019600
&ZMS                SETC  '&ZMS.&BUFNUM"'                               42023900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     42028200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              42032500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42036800
.ZE153R             ANOP  ,                                             42041100
.*----------------------------------------------------------------***   42045400
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         42049700
                    AIF   (N'&ERRBFLST LE 1).ZE156A  CK NUM             42054000
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           42058300
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             42062600
&ZMS                SETC  '&ZMS "ERRBFLST"'                             42066900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           42071200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42075500
.ZE156A             ANOP  ,                                             42079800
.*-------------------------------------------------------------------   42084100
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    42088400
                    AIF   (K'&ERRBFLST(1) LE 0).ZE156B NO PRM           42092700
&ZXERRBFLST         SETC  'OUTPUT'    SET IN/OUTPUT                     42097000
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           42101300
                    AIF   (N'&ERRBFLST GT 1).ZE156B                     42105600
.*                  ANOP              MULTIPLE PARMS                    42109900
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           42114200
.ZE156B             ANOP  ,                                             42118500
.*-------------------------------------------------------------------   42122800
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   42127100
                    AIF   (K'&ZXERRBFLST LE 0).ZE156R  NOT I/O          42131400
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZE156R             42135700
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                42140000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE156P                 42144300
                    AIF   (K'&ZCGPR GT 2).ZE156Q                        42148600
                    AIF   ('&ZCGPR' EQ '0').ZE156Q                      42152900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 42157200
                    AIF   (T'&ZCGPR NE 'N').ZE156Q  INVALID REG NAME    42161500
.ZE156P             ANOP  ,                                             42165800
                    AIF   (T'&ZCGPR NE 'N').ZE156R  NON NUMERIC         42170100
                    AIF   ('&ZCGPR' LT '2').ZE156Q                      42174400
                    AIF   ('&ZCGPR' LE '12').ZE156R                     42178700
.ZE156Q             ANOP  ,                                             42183000
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           42187300
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             42191600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     42195900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              42200200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42204500
.ZE156R             ANOP  ,                                             42208800
.*----------------------------------------------------------------***   42213100
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42217400
                    AIF   (N'&GAP LE 1).ZE159A  CK NUM                  42221700
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     42226000
&ZMS                SETC  '&ZMS.&GAP"'                                  42230300
&ZMS                SETC  '&ZMS "GAP"'                                  42234600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           42238900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42243200
.ZE159A             ANOP  ,                                             42247500
.*-------------------------------------------------------------------   42251800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42256100
                    AIF   (K'&GAP(1) LE 0).ZE159B NO PRM                42260400
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     42264700
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     42269000
                    AIF   (N'&GAP GT 1).ZE159B                          42273300
.*                  ANOP              MULTIPLE PARMS                    42277600
&XGAP               SETC  '&GAP'      SET XVARIABLE                     42281900
.ZE159B             ANOP  ,                                             42286200
.*-------------------------------------------------------------------   42290500
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42294800
                    AIF   (K'&ZXGAP LE 0).ZE159R  NOT I/O               42299100
                    AIF   ('&XGAP'(1,1) NE '(').ZE159R                  42303400
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          42307700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE159P                 42312000
                    AIF   (K'&ZCGPR GT 2).ZE159Q                        42316300
                    AIF   ('&ZCGPR' EQ '0').ZE159Q                      42320600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 42324900
                    AIF   (T'&ZCGPR NE 'N').ZE159Q  INVALID REG NAME    42329200
.ZE159P             ANOP  ,                                             42333500
                    AIF   (T'&ZCGPR NE 'N').ZE159R  NON NUMERIC         42337800
                    AIF   ('&ZCGPR' LT '2').ZE159Q                      42342100
                    AIF   ('&ZCGPR' LE '12').ZE159R                     42346400
.ZE159Q             ANOP  ,                                             42350700
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     42355000
&ZMS                SETC  '&ZMS.&GAP"'                                  42359300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     42363600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              42367900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42372200
.ZE159R             ANOP  ,                                             42376500
.*----------------------------------------------------------------***   42380800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42385100
                    AIF   (N'&THREAD LE 1).ZE162A  CK NUM               42389400
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     42393700
&ZMS                SETC  '&ZMS.&THREAD"'                               42398000
&ZMS                SETC  '&ZMS "THREAD"'                               42402300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           42406600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42410900
.ZE162A             ANOP  ,                                             42415200
.*-------------------------------------------------------------------   42419500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42423800
                    AIF   (K'&THREAD(1) LE 0).ZE162B NO PRM             42428100
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     42432400
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           42436700
                    AIF   (N'&THREAD GT 1).ZE162B                       42441000
.*                  ANOP              MULTIPLE PARMS                    42445300
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     42449600
.ZE162B             ANOP  ,                                             42453900
.*-------------------------------------------------------------------   42458200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42462500
                    AIF   (K'&ZXTHREAD LE 0).ZE162R  NOT I/O            42466800
                    AIF   ('&XTHREAD'(1,1) NE '(').ZE162R               42471100
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    42475400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE162P                 42479700
                    AIF   (K'&ZCGPR GT 2).ZE162Q                        42484000
                    AIF   ('&ZCGPR' EQ '0').ZE162Q                      42488300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 42492600
                    AIF   (T'&ZCGPR NE 'N').ZE162Q  INVALID REG NAME    42496900
.ZE162P             ANOP  ,                                             42501200
                    AIF   (T'&ZCGPR NE 'N').ZE162R  NON NUMERIC         42505500
                    AIF   ('&ZCGPR' LT '2').ZE162Q                      42509800
                    AIF   ('&ZCGPR' LE '12').ZE162R                     42514100
.ZE162Q             ANOP  ,                                             42518400
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     42522700
&ZMS                SETC  '&ZMS.&THREAD"'                               42527000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     42531300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              42535600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42539900
.ZE162R             ANOP  ,                                             42544200
.*----------------------------------------------------------------***   42548500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42552800
                    AIF   (N'&UTILRTN LE 1).ZE165A  CK NUM              42557100
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           42561400
&ZMS                SETC  '&ZMS.&UTILRTN"'                              42565700
&ZMS                SETC  '&ZMS "UTILRTN"'                              42570000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           42574300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42578600
.ZE165A             ANOP  ,                                             42582900
.*-------------------------------------------------------------------   42587200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42591500
                    AIF   (K'&UTILRTN(1) LE 0).ZE165B NO PRM            42595800
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     42600100
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           42604400
                    AIF   (N'&UTILRTN GT 1).ZE165B                      42608700
.*                  ANOP              MULTIPLE PARMS                    42613000
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     42617300
.ZE165B             ANOP  ,                                             42621600
.*-------------------------------------------------------------------   42625900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42630200
                    AIF   (K'&ZXUTILRTN LE 0).ZE165R  NOT I/O           42634500
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZE165R              42638800
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  42643100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE165P                 42647400
                    AIF   (K'&ZCGPR GT 2).ZE165Q                        42651700
                    AIF   ('&ZCGPR' EQ '0').ZE165Q                      42656000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 42660300
                    AIF   (T'&ZCGPR NE 'N').ZE165Q  INVALID REG NAME    42664600
.ZE165P             ANOP  ,                                             42668900
                    AIF   (T'&ZCGPR NE 'N').ZE165R  NON NUMERIC         42673200
                    AIF   ('&ZCGPR' LT '2').ZE165Q                      42677500
                    AIF   ('&ZCGPR' LE '12').ZE165R                     42681800
.ZE165Q             ANOP  ,                                             42686100
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           42690400
&ZMS                SETC  '&ZMS.&UTILRTN"'                              42694700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     42699000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              42703300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42707600
.ZE165R             ANOP  ,                                             42711900
.*----------------------------------------------------------------***   42716200
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42720500
                    AIF   (N'&WAIT LE 1).ZE168A  CK NUM                 42724800
&ZMS                SETC  '"WAIT='    *KPOSA* MNOTE                     42729100
&ZMS                SETC  '&ZMS.&WAIT"'                                 42733400
&ZMS                SETC  '&ZMS "WAIT"'                                 42737700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           42742000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42746300
.ZE168A             ANOP  ,                                             42750600
.*-------------------------------------------------------------------   42754900
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42759200
.ZE169A   AIF   ('&WAIT(1)' NE 'NO').ZE170A                             42763500
&XWAIT              SETC  'NO'        SET KEYWORD                       42767800
.*-------------------------------------------------------------------   42772100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42776400
.ZE170A   AIF   ('&WAIT(1)' NE 'YES').ZE171A                            42780700
&XWAIT              SETC  'YES'       SET KEYWORD                       42785000
.*----------------------------------------------------------------***   42789300
.***AE.KKWRD06 Additional value checks                                  42793600
.ZE171A   AIF   ('&WAIT(1)' NE 'EXPAND').ZE0P168Q257A                   42797900
&XWAIT              SETC  'EXPAND'    SET KEYWORD                       42802200
.*-------------------------------------------------------------------   42806500
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42810800
.ZE0P168Q257A       AIF   (K'&XWAIT GT 0).ZE0P168Q257B                  42815100
                    AIF   (K'&WAIT(1) LE 0).ZE0P168Q257C                42819400
&ZMS                SETC  '"WAIT='    *KUKWA* MNOTE                     42823700
&ZMS                SETC  '&ZMS.&WAIT"'                                 42828000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     42832300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           42836600
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           42840900
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           42845200
                    MNOTE 8,' &ZMS '                                    42849500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42853800
                    AGO   .ZE0P168Q257C                                 42858100
.*                                                                      42862400
.ZE0P168Q257B       ANOP  ,                                             42866700
&ZXWAIT             SETC  'INPUT'     SET IN/OUTPUT                     42871000
.ZE0P168Q257C       ANOP  ,                                             42875300
.*-------------------------------------------------------------------   42879600
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           42883900
&ZTLC               SETC 'FREE_BUFFER'                                  42888200
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE172A             42892500
&XREQUEST           SETC  'FREE_BUFFER'         SET KEYWORD             42896800
                    AIF   (N'&REQUEST LE 1).ZE172A  CK NUM              42901100
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           42905400
&ZMS                SETC  '&ZMS.&REQUEST"'                              42909700
&ZMS                SETC  '&ZMS "REQUEST"'                              42914000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           42918300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42922600
.ZE172A             ANOP  ,                                             42926900
.*----------------------------------------------------------------***   42931200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          42935500
                    AIF   (N'&BUFLIST LE 1).ZE174A  CK NUM              42939800
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           42944100
&ZMS                SETC  '&ZMS.&BUFLIST"'                              42948400
&ZMS                SETC  '&ZMS "BUFLIST"'                              42952700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           42957000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       42961300
.ZE174A             ANOP  ,                                             42965600
.*-------------------------------------------------------------------   42969900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     42974200
                    AIF   (K'&BUFLIST(1) LE 0).ZE174B NO PRM            42978500
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     42982800
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           42987100
                    AIF   (N'&BUFLIST GT 1).ZE174B                      42991400
.*                  ANOP              MULTIPLE PARMS                    42995700
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     43000000
.ZE174B             ANOP  ,                                             43004300
.*-------------------------------------------------------------------   43008600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    43012900
                    AIF   (K'&ZXBUFLIST LE 0).ZE174R  NOT I/O           43017200
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZE174R              43021500
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  43025800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE174P                 43030100
                    AIF   (K'&ZCGPR GT 2).ZE174Q                        43034400
                    AIF   ('&ZCGPR' EQ '0').ZE174Q                      43038700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 43043000
                    AIF   (T'&ZCGPR NE 'N').ZE174Q  INVALID REG NAME    43047300
.ZE174P             ANOP  ,                                             43051600
                    AIF   (T'&ZCGPR NE 'N').ZE174R  NON NUMERIC         43055900
                    AIF   ('&ZCGPR' LT '2').ZE174Q                      43060200
                    AIF   ('&ZCGPR' LE '12').ZE174R                     43064500
.ZE174Q             ANOP  ,                                             43068800
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           43073100
&ZMS                SETC  '&ZMS.&BUFLIST"'                              43077400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     43081700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              43086000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43090300
.ZE174R             ANOP  ,                                             43094600
.*----------------------------------------------------------------***   43098900
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          43103200
                    AIF   (N'&BUFNUM LE 1).ZE177A  CK NUM               43107500
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     43111800
&ZMS                SETC  '&ZMS.&BUFNUM"'                               43116100
&ZMS                SETC  '&ZMS "BUFNUM"'                               43120400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           43124700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43129000
.ZE177A             ANOP  ,                                             43133300
.*-------------------------------------------------------------------   43137600
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     43141900
                    AIF   (K'&BUFNUM(1) LE 0).ZE177B NO PRM             43146200
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     43150500
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           43154800
                    AIF   (N'&BUFNUM GT 1).ZE177B                       43159100
.*                  ANOP              MULTIPLE PARMS                    43163400
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     43167700
.ZE177B             ANOP  ,                                             43172000
.*-------------------------------------------------------------------   43176300
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    43180600
                    AIF   (K'&ZXBUFNUM LE 0).ZE177R  NOT I/O            43184900
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZE177R               43189200
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    43193500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE177P                 43197800
                    AIF   (K'&ZCGPR GT 2).ZE177Q                        43202100
                    AIF   ('&ZCGPR' EQ '0').ZE177Q                      43206400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 43210700
                    AIF   (T'&ZCGPR NE 'N').ZE177Q  INVALID REG NAME    43215000
.ZE177P             ANOP  ,                                             43219300
                    AIF   (T'&ZCGPR NE 'N').ZE177R  NON NUMERIC         43223600
                    AIF   ('&ZCGPR' LT '2').ZE177Q                      43227900
                    AIF   ('&ZCGPR' LE '12').ZE177R                     43232200
.ZE177Q             ANOP  ,                                             43236500
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     43240800
&ZMS                SETC  '&ZMS.&BUFNUM"'                               43245100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     43249400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              43253700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43258000
.ZE177R             ANOP  ,                                             43262300
.*----------------------------------------------------------------***   43266600
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43270900
                    AIF   (N'&CLEAR LE 1).ZE180A  CK NUM                43275200
&ZMS                SETC  '"CLEAR='   *KPOSA* MNOTE                     43279500
&ZMS                SETC  '&ZMS.&CLEAR"'                                43283800
&ZMS                SETC  '&ZMS "CLEAR"'                                43288100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           43292400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43296700
.ZE180A             ANOP  ,                                             43301000
.*-------------------------------------------------------------------   43305300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43309600
.ZE181A   AIF   ('&CLEAR(1)' NE 'NO').ZE182A                            43313900
&XCLEAR             SETC  'NO'        SET KEYWORD                       43318200
.*-------------------------------------------------------------------   43322500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43326800
.ZE182A   AIF   ('&CLEAR(1)' NE 'YES').ZE183A                           43331100
&XCLEAR             SETC  'YES'       SET KEYWORD                       43335400
.*-------------------------------------------------------------------   43339700
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43344000
.ZE183A             AIF   (K'&XCLEAR GT 0).ZE183B                       43348300
                    AIF   (K'&CLEAR(1) LE 0).ZE183C                     43352600
&ZMS                SETC  '"CLEAR='   *KUKWA* MNOTE                     43356900
&ZMS                SETC  '&ZMS.&CLEAR"'                                43361200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     43365500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           43369800
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           43374100
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           43378400
                    MNOTE 8,' &ZMS '                                    43382700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43387000
                    AGO   .ZE183C                                       43391300
.*                                                                      43395600
.ZE183B             ANOP  ,                                             43399900
&ZXCLEAR            SETC  'INPUT'     SET IN/OUTPUT                     43404200
.ZE183C             ANOP  ,                                             43408500
.*----------------------------------------------------------------***   43412800
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         43417100
                    AIF   (N'&ERRBFLST LE 1).ZE185A  CK NUM             43421400
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           43425700
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             43430000
&ZMS                SETC  '&ZMS "ERRBFLST"'                             43434300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           43438600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43442900
.ZE185A             ANOP  ,                                             43447200
.*-------------------------------------------------------------------   43451500
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    43455800
                    AIF   (K'&ERRBFLST(1) LE 0).ZE185B NO PRM           43460100
&ZXERRBFLST         SETC  'OUTPUT'    SET IN/OUTPUT                     43464400
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           43468700
                    AIF   (N'&ERRBFLST GT 1).ZE185B                     43473000
.*                  ANOP              MULTIPLE PARMS                    43477300
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           43481600
.ZE185B             ANOP  ,                                             43485900
.*-------------------------------------------------------------------   43490200
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   43494500
                    AIF   (K'&ZXERRBFLST LE 0).ZE185R  NOT I/O          43498800
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZE185R             43503100
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                43507400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE185P                 43511700
                    AIF   (K'&ZCGPR GT 2).ZE185Q                        43516000
                    AIF   ('&ZCGPR' EQ '0').ZE185Q                      43520300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 43524600
                    AIF   (T'&ZCGPR NE 'N').ZE185Q  INVALID REG NAME    43528900
.ZE185P             ANOP  ,                                             43533200
                    AIF   (T'&ZCGPR NE 'N').ZE185R  NON NUMERIC         43537500
                    AIF   ('&ZCGPR' LT '2').ZE185Q                      43541800
                    AIF   ('&ZCGPR' LE '12').ZE185R                     43546100
.ZE185Q             ANOP  ,                                             43550400
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           43554700
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             43559000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     43563300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              43567600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43571900
.ZE185R             ANOP  ,                                             43576200
.*----------------------------------------------------------------***   43580500
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43584800
                    AIF   (N'&FREETO LE 1).ZE188A  CK NUM               43589100
&ZMS                SETC  '"FREETO='  *KPOSA* MNOTE                     43593400
&ZMS                SETC  '&ZMS.&FREETO"'                               43597700
&ZMS                SETC  '&ZMS "FREETO"'                               43602000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           43606300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43610600
.ZE188A             ANOP  ,                                             43614900
.*-------------------------------------------------------------------   43619200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43623500
.ZE189A   AIF   ('&FREETO(1)' NE 'USER').ZE190A                         43627800
&XFREETO            SETC  'USER'      SET KEYWORD                       43632100
.*-------------------------------------------------------------------   43636400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43640700
.ZE190A   AIF   ('&FREETO(1)' NE 'CSM').ZE191A                          43645000
&XFREETO            SETC  'CSM'       SET KEYWORD                       43649300
.*-------------------------------------------------------------------   43653600
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43657900
.ZE191A             AIF   (K'&XFREETO GT 0).ZE191B                      43662200
                    AIF   (K'&FREETO(1) LE 0).ZE191C                    43666500
&ZMS                SETC  '"FREETO='  *KUKWA* MNOTE                     43670800
&ZMS                SETC  '&ZMS.&FREETO"'                               43675100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     43679400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           43683700
&ZMS                SETC  '&ZMS "USER"'         VALID KEYWORD           43688000
&ZMS                SETC  '&ZMS OR "CSM".'      VALID KEYWORD           43692300
                    MNOTE 8,' &ZMS '                                    43696600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43700900
                    AGO   .ZE191C                                       43705200
.*                                                                      43709500
.ZE191B             ANOP  ,                                             43713800
&ZXFREETO           SETC  'INPUT'     SET IN/OUTPUT                     43718100
.ZE191C             ANOP  ,                                             43722400
.*----------------------------------------------------------------***   43726700
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          43731000
                    AIF   (N'&GAP LE 1).ZE193A  CK NUM                  43735300
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     43739600
&ZMS                SETC  '&ZMS.&GAP"'                                  43743900
&ZMS                SETC  '&ZMS "GAP"'                                  43748200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           43752500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43756800
.ZE193A             ANOP  ,                                             43761100
.*-------------------------------------------------------------------   43765400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     43769700
                    AIF   (K'&GAP(1) LE 0).ZE193B NO PRM                43774000
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     43778300
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     43782600
                    AIF   (N'&GAP GT 1).ZE193B                          43786900
.*                  ANOP              MULTIPLE PARMS                    43791200
&XGAP               SETC  '&GAP'      SET XVARIABLE                     43795500
.ZE193B             ANOP  ,                                             43799800
.*-------------------------------------------------------------------   43804100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    43808400
                    AIF   (K'&ZXGAP LE 0).ZE193R  NOT I/O               43812700
                    AIF   ('&XGAP'(1,1) NE '(').ZE193R                  43817000
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          43821300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE193P                 43825600
                    AIF   (K'&ZCGPR GT 2).ZE193Q                        43829900
                    AIF   ('&ZCGPR' EQ '0').ZE193Q                      43834200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 43838500
                    AIF   (T'&ZCGPR NE 'N').ZE193Q  INVALID REG NAME    43842800
.ZE193P             ANOP  ,                                             43847100
                    AIF   (T'&ZCGPR NE 'N').ZE193R  NON NUMERIC         43851400
                    AIF   ('&ZCGPR' LT '2').ZE193Q                      43855700
                    AIF   ('&ZCGPR' LE '12').ZE193R                     43860000
.ZE193Q             ANOP  ,                                             43864300
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     43868600
&ZMS                SETC  '&ZMS.&GAP"'                                  43872900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     43877200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              43881500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43885800
.ZE193R             ANOP  ,                                             43890100
.*----------------------------------------------------------------***   43894400
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43898700
                    AIF   (N'&SKIPBUF LE 1).ZE196A  CK NUM              43903000
&ZMS                SETC  '"SKIPBUF='           *KPOSA* MNOTE           43907300
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              43911600
&ZMS                SETC  '&ZMS "SKIPBUF"'                              43915900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           43920200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       43924500
.ZE196A             ANOP  ,                                             43928800
.*-------------------------------------------------------------------   43933100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43937400
.ZE197A   AIF   ('&SKIPBUF(1)' NE 'NO').ZE198A                          43941700
&XSKIPBUF           SETC  'NO'        SET KEYWORD                       43946000
.*-------------------------------------------------------------------   43950300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43954600
.ZE198A   AIF   ('&SKIPBUF(1)' NE 'YES').ZE199A                         43958900
&XSKIPBUF           SETC  'YES'       SET KEYWORD                       43963200
.*-------------------------------------------------------------------   43967500
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43971800
.ZE199A             AIF   (K'&XSKIPBUF GT 0).ZE199B                     43976100
                    AIF   (K'&SKIPBUF(1) LE 0).ZE199C                   43980400
&ZMS                SETC  '"SKIPBUF='           *KUKWA* MNOTE           43984700
&ZMS                SETC  '&ZMS.&SKIPBUF"'                              43989000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     43993300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           43997600
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           44001900
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           44006200
                    MNOTE 8,' &ZMS '                                    44010500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44014800
                    AGO   .ZE199C                                       44019100
.*                                                                      44023400
.ZE199B             ANOP  ,                                             44027700
&ZXSKIPBUF          SETC  'INPUT'     SET IN/OUTPUT                     44032000
.ZE199C             ANOP  ,                                             44036300
.*----------------------------------------------------------------***   44040600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          44044900
                    AIF   (N'&THREAD LE 1).ZE201A  CK NUM               44049200
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     44053500
&ZMS                SETC  '&ZMS.&THREAD"'                               44057800
&ZMS                SETC  '&ZMS "THREAD"'                               44062100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           44066400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44070700
.ZE201A             ANOP  ,                                             44075000
.*-------------------------------------------------------------------   44079300
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     44083600
                    AIF   (K'&THREAD(1) LE 0).ZE201B NO PRM             44087900
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     44092200
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           44096500
                    AIF   (N'&THREAD GT 1).ZE201B                       44100800
.*                  ANOP              MULTIPLE PARMS                    44105100
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     44109400
.ZE201B             ANOP  ,                                             44113700
.*-------------------------------------------------------------------   44118000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    44122300
                    AIF   (K'&ZXTHREAD LE 0).ZE201R  NOT I/O            44126600
                    AIF   ('&XTHREAD'(1,1) NE '(').ZE201R               44130900
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    44135200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE201P                 44139500
                    AIF   (K'&ZCGPR GT 2).ZE201Q                        44143800
                    AIF   ('&ZCGPR' EQ '0').ZE201Q                      44148100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 44152400
                    AIF   (T'&ZCGPR NE 'N').ZE201Q  INVALID REG NAME    44156700
.ZE201P             ANOP  ,                                             44161000
                    AIF   (T'&ZCGPR NE 'N').ZE201R  NON NUMERIC         44165300
                    AIF   ('&ZCGPR' LT '2').ZE201Q                      44169600
                    AIF   ('&ZCGPR' LE '12').ZE201R                     44173900
.ZE201Q             ANOP  ,                                             44178200
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     44182500
&ZMS                SETC  '&ZMS.&THREAD"'                               44186800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     44191100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              44195400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44199700
.ZE201R             ANOP  ,                                             44204000
.*----------------------------------------------------------------***   44208300
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          44212600
                    AIF   (N'&UTILRTN LE 1).ZE204A  CK NUM              44216900
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           44221200
&ZMS                SETC  '&ZMS.&UTILRTN"'                              44225500
&ZMS                SETC  '&ZMS "UTILRTN"'                              44229800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           44234100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44238400
.ZE204A             ANOP  ,                                             44242700
.*-------------------------------------------------------------------   44247000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     44251300
                    AIF   (K'&UTILRTN(1) LE 0).ZE204B NO PRM            44255600
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     44259900
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           44264200
                    AIF   (N'&UTILRTN GT 1).ZE204B                      44268500
.*                  ANOP              MULTIPLE PARMS                    44272800
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     44277100
.ZE204B             ANOP  ,                                             44281400
.*-------------------------------------------------------------------   44285700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    44290000
                    AIF   (K'&ZXUTILRTN LE 0).ZE204R  NOT I/O           44294300
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZE204R              44298600
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  44302900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE204P                 44307200
                    AIF   (K'&ZCGPR GT 2).ZE204Q                        44311500
                    AIF   ('&ZCGPR' EQ '0').ZE204Q                      44315800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 44320100
                    AIF   (T'&ZCGPR NE 'N').ZE204Q  INVALID REG NAME    44324400
.ZE204P             ANOP  ,                                             44328700
                    AIF   (T'&ZCGPR NE 'N').ZE204R  NON NUMERIC         44333000
                    AIF   ('&ZCGPR' LT '2').ZE204Q                      44337300
                    AIF   ('&ZCGPR' LE '12').ZE204R                     44341600
.ZE204Q             ANOP  ,                                             44345900
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           44350200
&ZMS                SETC  '&ZMS.&UTILRTN"'                              44354500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     44358800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              44363100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44367400
.ZE204R             ANOP  ,                                             44371700
.*-------------------------------------------------------------------   44376000
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           44380300
&ZTLC               SETC 'GET_BUFFER'                                   44384600
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE206A             44388900
&XREQUEST           SETC  'GET_BUFFER'          SET KEYWORD             44393200
                    AIF   (N'&REQUEST LE 1).ZE206A  CK NUM              44397500
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           44401800
&ZMS                SETC  '&ZMS.&REQUEST"'                              44406100
&ZMS                SETC  '&ZMS "REQUEST"'                              44410400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           44414700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44419000
.ZE206A             ANOP  ,                                             44423300
.*----------------------------------------------------------------***   44427600
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          44431900
                    AIF   (N'&BUFLIST LE 1).ZE208A  CK NUM              44436200
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           44440500
&ZMS                SETC  '&ZMS.&BUFLIST"'                              44444800
&ZMS                SETC  '&ZMS "BUFLIST"'                              44449100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           44453400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44457700
.ZE208A             ANOP  ,                                             44462000
.*-------------------------------------------------------------------   44466300
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     44470600
                    AIF   (K'&BUFLIST(1) LE 0).ZE208B NO PRM            44474900
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     44479200
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           44483500
                    AIF   (N'&BUFLIST GT 1).ZE208B                      44487800
.*                  ANOP              MULTIPLE PARMS                    44492100
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     44496400
.ZE208B             ANOP  ,                                             44500700
.*-------------------------------------------------------------------   44505000
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    44509300
                    AIF   (K'&ZXBUFLIST LE 0).ZE208R  NOT I/O           44513600
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZE208R              44517900
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  44522200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE208P                 44526500
                    AIF   (K'&ZCGPR GT 2).ZE208Q                        44530800
                    AIF   ('&ZCGPR' EQ '0').ZE208Q                      44535100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 44539400
                    AIF   (T'&ZCGPR NE 'N').ZE208Q  INVALID REG NAME    44543700
.ZE208P             ANOP  ,                                             44548000
                    AIF   (T'&ZCGPR NE 'N').ZE208R  NON NUMERIC         44552300
                    AIF   ('&ZCGPR' LT '2').ZE208Q                      44556600
                    AIF   ('&ZCGPR' LE '12').ZE208R                     44560900
.ZE208Q             ANOP  ,                                             44565200
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           44569500
&ZMS                SETC  '&ZMS.&BUFLIST"'                              44573800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     44578100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              44582400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44586700
.ZE208R             ANOP  ,                                             44591000
.*----------------------------------------------------------------***   44595300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          44599600
                    AIF   (N'&BUFNUM LE 1).ZE211A  CK NUM               44603900
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     44608200
&ZMS                SETC  '&ZMS.&BUFNUM"'                               44612500
&ZMS                SETC  '&ZMS "BUFNUM"'                               44616800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           44621100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44625400
.ZE211A             ANOP  ,                                             44629700
.*-------------------------------------------------------------------   44634000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     44638300
                    AIF   (K'&BUFNUM(1) LE 0).ZE211B NO PRM             44642600
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     44646900
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           44651200
                    AIF   (N'&BUFNUM GT 1).ZE211B                       44655500
.*                  ANOP              MULTIPLE PARMS                    44659800
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     44664100
.ZE211B             ANOP  ,                                             44668400
.*-------------------------------------------------------------------   44672700
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    44677000
                    AIF   (K'&ZXBUFNUM LE 0).ZE211R  NOT I/O            44681300
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZE211R               44685600
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    44689900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE211P                 44694200
                    AIF   (K'&ZCGPR GT 2).ZE211Q                        44698500
                    AIF   ('&ZCGPR' EQ '0').ZE211Q                      44702800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 44707100
                    AIF   (T'&ZCGPR NE 'N').ZE211Q  INVALID REG NAME    44711400
.ZE211P             ANOP  ,                                             44715700
                    AIF   (T'&ZCGPR NE 'N').ZE211R  NON NUMERIC         44720000
                    AIF   ('&ZCGPR' LT '2').ZE211Q                      44724300
                    AIF   ('&ZCGPR' LE '12').ZE211R                     44728600
.ZE211Q             ANOP  ,                                             44732900
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     44737200
&ZMS                SETC  '&ZMS.&BUFNUM"'                               44741500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     44745800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              44750100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44754400
.ZE211R             ANOP  ,                                             44758700
.*----------------------------------------------------------------***   44763000
.***AE.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             44767300
                    AIF   (N'&BUFTYPE LE 1).ZE214A  CK NUM              44771600
&ZMS                SETC  '"BUFTYPE='           *KPOSA* MNOTE           44775900
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              44780200
&ZMS                SETC  '&ZMS "BUFTYPE"'                              44784500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           44788800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44793100
.ZE214A             ANOP  ,                                             44797400
.*-------------------------------------------------------------------   44801700
.***AE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             44806000
.ZE215A   AIF   ('&BUFTYPE(1)' NE 'PAGEELIG').ZE216A                    44810300
&XBUFTYPE           SETC  'PAGEELIG'  SET KEYWORD                       44814600
.*-------------------------------------------------------------------   44818900
.***AE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             44823200
.ZE216A   AIF   ('&BUFTYPE(1)' NE 'PAGEABLE').ZE217A                    44827500
&XBUFTYPE           SETC  'PAGEABLE'  SET KEYWORD                       44831800
.*-------------------------------------------------------------------   44836100
.***AE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             44840400
.ZE217A   AIF   ('&BUFTYPE(1)' NE 'FIXED').ZE218A                       44844700
&XBUFTYPE           SETC  'FIXED'     SET KEYWORD                       44849000
.*-------------------------------------------------------------------   44853300
.***AE.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             44857600
.ZE218A             AIF   (K'&XBUFTYPE GT 0).ZE218B                     44861900
                    AIF   (K'&BUFTYPE(1) LE 0).ZE218C                   44866200
&ZMS                SETC  '"BUFTYPE='           *KUKWA* MNOTE           44870500
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              44874800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     44879100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           44883400
&ZMS                SETC  '&ZMS "PAGEELIG",'    VALID KEYWORD           44887700
&ZMS                SETC  '&ZMS "PAGEABLE",'    VALID KEYWORD           44892000
&ZMS                SETC  '&ZMS OR "FIXED".'    VALID KEYWORD           44896300
                    MNOTE 8,' &ZMS '                                    44900600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44904900
                    AGO   .ZE218C                                       44909200
.*                                                                      44913500
.ZE218B             ANOP  ,                                             44917800
&ZXBUFTYPE          SETC  'INPUT'     SET IN/OUTPUT                     44922100
.ZE218C             ANOP  ,                                             44926400
.*----------------------------------------------------------------***   44930700
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             44935000
                    AIF   (N'&CLEAR LE 1).ZE220A  CK NUM                44939300
&ZMS                SETC  '"CLEAR='   *KPOSA* MNOTE                     44943600
&ZMS                SETC  '&ZMS.&CLEAR"'                                44947900
&ZMS                SETC  '&ZMS "CLEAR"'                                44952200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           44956500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       44960800
.ZE220A             ANOP  ,                                             44965100
.*-------------------------------------------------------------------   44969400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             44973700
.ZE221A   AIF   ('&CLEAR(1)' NE 'NO').ZE222A                            44978000
&XCLEAR             SETC  'NO'        SET KEYWORD                       44982300
.*-------------------------------------------------------------------   44986600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             44990900
.ZE222A   AIF   ('&CLEAR(1)' NE 'YES').ZE223A                           44995200
&XCLEAR             SETC  'YES'       SET KEYWORD                       44999500
.*-------------------------------------------------------------------   45003800
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             45008100
.ZE223A             AIF   (K'&XCLEAR GT 0).ZE223B                       45012400
                    AIF   (K'&CLEAR(1) LE 0).ZE223C                     45016700
&ZMS                SETC  '"CLEAR='   *KUKWA* MNOTE                     45021000
&ZMS                SETC  '&ZMS.&CLEAR"'                                45025300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     45029600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           45033900
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           45038200
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           45042500
                    MNOTE 8,' &ZMS '                                    45046800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45051100
                    AGO   .ZE223C                                       45055400
.*                                                                      45059700
.ZE223B             ANOP  ,                                             45064000
&ZXCLEAR            SETC  'INPUT'     SET IN/OUTPUT                     45068300
.ZE223C             ANOP  ,                                             45072600
.*----------------------------------------------------------------***   45076900
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             45081200
                    AIF   (N'&CSMUSER LE 1).ZE225A  CK NUM              45085500
&ZMS                SETC  '"CSMUSER='           *KPOSA* MNOTE           45089800
&ZMS                SETC  '&ZMS.&CSMUSER"'                              45094100
&ZMS                SETC  '&ZMS "CSMUSER"'                              45098400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           45102700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45107000
.ZE225A             ANOP  ,                                             45111300
.*-------------------------------------------------------------------   45115600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             45119900
.ZE226A   AIF   ('&CSMUSER(1)' NE 'NO').ZE227A                          45124200
&XCSMUSER           SETC  'NO'        SET KEYWORD                       45128500
.*-------------------------------------------------------------------   45132800
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             45137100
.ZE227A   AIF   ('&CSMUSER(1)' NE 'YES').ZE228A                         45141400
&XCSMUSER           SETC  'YES'       SET KEYWORD                       45145700
.*-------------------------------------------------------------------   45150000
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             45154300
.ZE228A             AIF   (K'&XCSMUSER GT 0).ZE228B                     45158600
                    AIF   (K'&CSMUSER(1) LE 0).ZE228C                   45162900
&ZMS                SETC  '"CSMUSER='           *KUKWA* MNOTE           45167200
&ZMS                SETC  '&ZMS.&CSMUSER"'                              45171500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     45175800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           45180100
&ZMS                SETC  '&ZMS "NO"'           VALID KEYWORD           45184400
&ZMS                SETC  '&ZMS OR "YES".'      VALID KEYWORD           45188700
                    MNOTE 8,' &ZMS '                                    45193000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45197300
                    AGO   .ZE228C                                       45201600
.*                                                                      45205900
.ZE228B             ANOP  ,                                             45210200
&ZXCSMUSER          SETC  'INPUT'     SET IN/OUTPUT                     45214500
.ZE228C             ANOP  ,                                             45218800
.*----------------------------------------------------------------***   45223100
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         45227400
                    AIF   (N'&ERRBFLST LE 1).ZE230A  CK NUM             45231700
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           45236000
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             45240300
&ZMS                SETC  '&ZMS "ERRBFLST"'                             45244600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           45248900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45253200
.ZE230A             ANOP  ,                                             45257500
.*-------------------------------------------------------------------   45261800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    45266100
                    AIF   (K'&ERRBFLST(1) LE 0).ZE230B NO PRM           45270400
&ZXERRBFLST         SETC  'OUTPUT'    SET IN/OUTPUT                     45274700
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           45279000
                    AIF   (N'&ERRBFLST GT 1).ZE230B                     45283300
.*                  ANOP              MULTIPLE PARMS                    45287600
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           45291900
.ZE230B             ANOP  ,                                             45296200
.*-------------------------------------------------------------------   45300500
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   45304800
                    AIF   (K'&ZXERRBFLST LE 0).ZE230R  NOT I/O          45309100
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZE230R             45313400
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                45317700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE230P                 45322000
                    AIF   (K'&ZCGPR GT 2).ZE230Q                        45326300
                    AIF   ('&ZCGPR' EQ '0').ZE230Q                      45330600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 45334900
                    AIF   (T'&ZCGPR NE 'N').ZE230Q  INVALID REG NAME    45339200
.ZE230P             ANOP  ,                                             45343500
                    AIF   (T'&ZCGPR NE 'N').ZE230R  NON NUMERIC         45347800
                    AIF   ('&ZCGPR' LT '2').ZE230Q                      45352100
                    AIF   ('&ZCGPR' LE '12').ZE230R                     45356400
.ZE230Q             ANOP  ,                                             45360700
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           45365000
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             45369300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     45373600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              45377900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45382200
.ZE230R             ANOP  ,                                             45386500
.*----------------------------------------------------------------***   45390800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          45395100
                    AIF   (N'&FREERTN LE 1).ZE233A  CK NUM              45399400
&ZMS                SETC  '"FREERTN='           *KPOSA* MNOTE           45403700
&ZMS                SETC  '&ZMS.&FREERTN"'                              45408000
&ZMS                SETC  '&ZMS "FREERTN"'                              45412300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           45416600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45420900
.ZE233A             ANOP  ,                                             45425200
.*-------------------------------------------------------------------   45429500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     45433800
                    AIF   (K'&FREERTN(1) LE 0).ZE233B NO PRM            45438100
&ZXFREERTN          SETC  'INPUT'     SET IN/OUTPUT                     45442400
&XFREERTN           SETC  '&FREERTN(1)'         SET XVARIABLE           45446700
                    AIF   (N'&FREERTN GT 1).ZE233B                      45451000
.*                  ANOP              MULTIPLE PARMS                    45455300
&XFREERTN           SETC  '&FREERTN'  SET XVARIABLE                     45459600
.ZE233B             ANOP  ,                                             45463900
.*-------------------------------------------------------------------   45468200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    45472500
                    AIF   (K'&ZXFREERTN LE 0).ZE233R  NOT I/O           45476800
                    AIF   ('&XFREERTN'(1,1) NE '(').ZE233R              45481100
&ZCGPR              SETC  '&XFREERTN'(2,K'&XFREERTN-2)                  45485400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE233P                 45489700
                    AIF   (K'&ZCGPR GT 2).ZE233Q                        45494000
                    AIF   ('&ZCGPR' EQ '0').ZE233Q                      45498300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 45502600
                    AIF   (T'&ZCGPR NE 'N').ZE233Q  INVALID REG NAME    45506900
.ZE233P             ANOP  ,                                             45511200
                    AIF   (T'&ZCGPR NE 'N').ZE233R  NON NUMERIC         45515500
                    AIF   ('&ZCGPR' LT '2').ZE233Q                      45519800
                    AIF   ('&ZCGPR' LE '12').ZE233R                     45524100
.ZE233Q             ANOP  ,                                             45528400
&ZMS                SETC  '"FREERTN='           *KGPRA* MNOTE           45532700
&ZMS                SETC  '&ZMS.&FREERTN"'                              45537000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     45541300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              45545600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45549900
.ZE233R             ANOP  ,                                             45554200
.*----------------------------------------------------------------***   45558500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          45562800
                    AIF   (N'&GAP LE 1).ZE236A  CK NUM                  45567100
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     45571400
&ZMS                SETC  '&ZMS.&GAP"'                                  45575700
&ZMS                SETC  '&ZMS "GAP"'                                  45580000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           45584300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45588600
.ZE236A             ANOP  ,                                             45592900
.*-------------------------------------------------------------------   45597200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     45601500
                    AIF   (K'&GAP(1) LE 0).ZE236B NO PRM                45605800
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     45610100
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     45614400
                    AIF   (N'&GAP GT 1).ZE236B                          45618700
.*                  ANOP              MULTIPLE PARMS                    45623000
&XGAP               SETC  '&GAP'      SET XVARIABLE                     45627300
.ZE236B             ANOP  ,                                             45631600
.*-------------------------------------------------------------------   45635900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    45640200
                    AIF   (K'&ZXGAP LE 0).ZE236R  NOT I/O               45644500
                    AIF   ('&XGAP'(1,1) NE '(').ZE236R                  45648800
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          45653100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE236P                 45657400
                    AIF   (K'&ZCGPR GT 2).ZE236Q                        45661700
                    AIF   ('&ZCGPR' EQ '0').ZE236Q                      45666000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 45670300
                    AIF   (T'&ZCGPR NE 'N').ZE236Q  INVALID REG NAME    45674600
.ZE236P             ANOP  ,                                             45678900
                    AIF   (T'&ZCGPR NE 'N').ZE236R  NON NUMERIC         45683200
                    AIF   ('&ZCGPR' LT '2').ZE236Q                      45687500
                    AIF   ('&ZCGPR' LE '12').ZE236R                     45691800
.ZE236Q             ANOP  ,                                             45696100
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     45700400
&ZMS                SETC  '&ZMS.&GAP"'                                  45704700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     45709000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              45713300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45717600
.ZE236R             ANOP  ,                                             45721900
.*----------------------------------------------------------------***   45726200
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          45730500
                    AIF   (N'&OWNERID LE 1).ZE239A  CK NUM              45734800
&ZMS                SETC  '"OWNERID='           *KPOSA* MNOTE           45739100
&ZMS                SETC  '&ZMS.&OWNERID"'                              45743400
&ZMS                SETC  '&ZMS "OWNERID"'                              45747700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           45752000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45756300
.ZE239A             ANOP  ,                                             45760600
.*-------------------------------------------------------------------   45764900
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     45769200
                    AIF   (K'&OWNERID(1) LE 0).ZE239B NO PRM            45773500
&ZXOWNERID          SETC  'INPUT'     SET IN/OUTPUT                     45777800
&XOWNERID           SETC  '&OWNERID(1)'         SET XVARIABLE           45782100
                    AIF   (N'&OWNERID GT 1).ZE239B                      45786400
.*                  ANOP              MULTIPLE PARMS                    45790700
&XOWNERID           SETC  '&OWNERID'  SET XVARIABLE                     45795000
.ZE239B             ANOP  ,                                             45799300
.*-------------------------------------------------------------------   45803600
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    45807900
                    AIF   (K'&ZXOWNERID LE 0).ZE239R  NOT I/O           45812200
                    AIF   ('&XOWNERID'(1,1) NE '(').ZE239R              45816500
&ZCGPR              SETC  '&XOWNERID'(2,K'&XOWNERID-2)                  45820800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE239P                 45825100
                    AIF   (K'&ZCGPR GT 2).ZE239Q                        45829400
                    AIF   ('&ZCGPR' EQ '0').ZE239Q                      45833700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 45838000
                    AIF   (T'&ZCGPR NE 'N').ZE239Q  INVALID REG NAME    45842300
.ZE239P             ANOP  ,                                             45846600
                    AIF   (T'&ZCGPR NE 'N').ZE239R  NON NUMERIC         45850900
                    AIF   ('&ZCGPR' LT '2').ZE239Q                      45855200
                    AIF   ('&ZCGPR' LE '12').ZE239R                     45859500
.ZE239Q             ANOP  ,                                             45863800
&ZMS                SETC  '"OWNERID='           *KGPRA* MNOTE           45868100
&ZMS                SETC  '&ZMS.&OWNERID"'                              45872400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     45876700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              45881000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45885300
.ZE239R             ANOP  ,                                             45889600
.*----------------------------------------------------------------***   45893900
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          45898200
                    AIF   (N'&POOLTOKN LE 1).ZE242A  CK NUM             45902500
&ZMS                SETC  '"POOLTOKN='          *KPOSA* MNOTE           45906800
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             45911100
&ZMS                SETC  '&ZMS "POOLTOKN"'                             45915400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           45919700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       45924000
.ZE242A             ANOP  ,                                             45928300
.*-------------------------------------------------------------------   45932600
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     45936900
                    AIF   (K'&POOLTOKN(1) LE 0).ZE242B NO PRM           45941200
&ZXPOOLTOKN         SETC  'INPUT'     SET IN/OUTPUT                     45945500
&XPOOLTOKN          SETC  '&POOLTOKN(1)'        SET XVARIABLE           45949800
                    AIF   (N'&POOLTOKN GT 1).ZE242B                     45954100
.*                  ANOP              MULTIPLE PARMS                    45958400
&XPOOLTOKN          SETC  '&POOLTOKN'           SET XVARIABLE           45962700
.ZE242B             ANOP  ,                                             45967000
.*-------------------------------------------------------------------   45971300
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    45975600
                    AIF   (K'&ZXPOOLTOKN LE 0).ZE242R  NOT I/O          45979900
                    AIF   ('&XPOOLTOKN'(1,1) NE '(').ZE242R             45984200
&ZCGPR              SETC  '&XPOOLTOKN'(2,K'&XPOOLTOKN-2)                45988500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE242P                 45992800
                    AIF   (K'&ZCGPR GT 2).ZE242Q                        45997100
                    AIF   ('&ZCGPR' EQ '0').ZE242Q                      46001400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 46005700
                    AIF   (T'&ZCGPR NE 'N').ZE242Q  INVALID REG NAME    46010000
.ZE242P             ANOP  ,                                             46014300
                    AIF   (T'&ZCGPR NE 'N').ZE242R  NON NUMERIC         46018600
                    AIF   ('&ZCGPR' LT '2').ZE242Q                      46022900
                    AIF   ('&ZCGPR' LE '12').ZE242R                     46027200
.ZE242Q             ANOP  ,                                             46031500
&ZMS                SETC  '"POOLTOKN='          *KGPRA* MNOTE           46035800
&ZMS                SETC  '&ZMS.&POOLTOKN"'                             46040100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     46044400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              46048700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46053000
.ZE242R             ANOP  ,                                             46057300
.*----------------------------------------------------------------***   46061600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          46065900
                    AIF   (N'&TASKID LE 1).ZE245A  CK NUM               46070200
&ZMS                SETC  '"TASKID='  *KPOSA* MNOTE                     46074500
&ZMS                SETC  '&ZMS.&TASKID"'                               46078800
&ZMS                SETC  '&ZMS "TASKID"'                               46083100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           46087400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46091700
.ZE245A             ANOP  ,                                             46096000
.*-------------------------------------------------------------------   46100300
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     46104600
                    AIF   (K'&TASKID(1) LE 0).ZE245B NO PRM             46108900
&ZXTASKID           SETC  'INPUT'     SET IN/OUTPUT                     46113200
&XTASKID            SETC  '&TASKID(1)'          SET XVARIABLE           46117500
                    AIF   (N'&TASKID GT 1).ZE245B                       46121800
.*                  ANOP              MULTIPLE PARMS                    46126100
&XTASKID            SETC  '&TASKID'   SET XVARIABLE                     46130400
.ZE245B             ANOP  ,                                             46134700
.*-------------------------------------------------------------------   46139000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    46143300
                    AIF   (K'&ZXTASKID LE 0).ZE245R  NOT I/O            46147600
                    AIF   ('&XTASKID'(1,1) NE '(').ZE245R               46151900
&ZCGPR              SETC  '&XTASKID'(2,K'&XTASKID-2)                    46156200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE245P                 46160500
                    AIF   (K'&ZCGPR GT 2).ZE245Q                        46164800
                    AIF   ('&ZCGPR' EQ '0').ZE245Q                      46169100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 46173400
                    AIF   (T'&ZCGPR NE 'N').ZE245Q  INVALID REG NAME    46177700
.ZE245P             ANOP  ,                                             46182000
                    AIF   (T'&ZCGPR NE 'N').ZE245R  NON NUMERIC         46186300
                    AIF   ('&ZCGPR' LT '2').ZE245Q                      46190600
                    AIF   ('&ZCGPR' LE '12').ZE245R                     46194900
.ZE245Q             ANOP  ,                                             46199200
&ZMS                SETC  '"TASKID='  *KGPRA* MNOTE                     46203500
&ZMS                SETC  '&ZMS.&TASKID"'                               46207800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     46212100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              46216400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46220700
.ZE245R             ANOP  ,                                             46225000
.*----------------------------------------------------------------***   46229300
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          46233600
                    AIF   (N'&THREAD LE 1).ZE248A  CK NUM               46237900
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     46242200
&ZMS                SETC  '&ZMS.&THREAD"'                               46246500
&ZMS                SETC  '&ZMS "THREAD"'                               46250800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           46255100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46259400
.ZE248A             ANOP  ,                                             46263700
.*-------------------------------------------------------------------   46268000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     46272300
                    AIF   (K'&THREAD(1) LE 0).ZE248B NO PRM             46276600
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     46280900
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           46285200
                    AIF   (N'&THREAD GT 1).ZE248B                       46289500
.*                  ANOP              MULTIPLE PARMS                    46293800
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     46298100
.ZE248B             ANOP  ,                                             46302400
.*-------------------------------------------------------------------   46306700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    46311000
                    AIF   (K'&ZXTHREAD LE 0).ZE248R  NOT I/O            46315300
                    AIF   ('&XTHREAD'(1,1) NE '(').ZE248R               46319600
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    46323900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE248P                 46328200
                    AIF   (K'&ZCGPR GT 2).ZE248Q                        46332500
                    AIF   ('&ZCGPR' EQ '0').ZE248Q                      46336800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 46341100
                    AIF   (T'&ZCGPR NE 'N').ZE248Q  INVALID REG NAME    46345400
.ZE248P             ANOP  ,                                             46349700
                    AIF   (T'&ZCGPR NE 'N').ZE248R  NON NUMERIC         46354000
                    AIF   ('&ZCGPR' LT '2').ZE248Q                      46358300
                    AIF   ('&ZCGPR' LE '12').ZE248R                     46362600
.ZE248Q             ANOP  ,                                             46366900
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     46371200
&ZMS                SETC  '&ZMS.&THREAD"'                               46375500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     46379800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              46384100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46388400
.ZE248R             ANOP  ,                                             46392700
.*----------------------------------------------------------------***   46397000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          46401300
                    AIF   (N'&UTILRTN LE 1).ZE251A  CK NUM              46405600
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           46409900
&ZMS                SETC  '&ZMS.&UTILRTN"'                              46414200
&ZMS                SETC  '&ZMS "UTILRTN"'                              46418500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           46422800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46427100
.ZE251A             ANOP  ,                                             46431400
.*-------------------------------------------------------------------   46435700
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     46440000
                    AIF   (K'&UTILRTN(1) LE 0).ZE251B NO PRM            46444300
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     46448600
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           46452900
                    AIF   (N'&UTILRTN GT 1).ZE251B                      46457200
.*                  ANOP              MULTIPLE PARMS                    46461500
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     46465800
.ZE251B             ANOP  ,                                             46470100
.*-------------------------------------------------------------------   46474400
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    46478700
                    AIF   (K'&ZXUTILRTN LE 0).ZE251R  NOT I/O           46483000
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZE251R              46487300
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  46491600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE251P                 46495900
                    AIF   (K'&ZCGPR GT 2).ZE251Q                        46500200
                    AIF   ('&ZCGPR' EQ '0').ZE251Q                      46504500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 46508800
                    AIF   (T'&ZCGPR NE 'N').ZE251Q  INVALID REG NAME    46513100
.ZE251P             ANOP  ,                                             46517400
                    AIF   (T'&ZCGPR NE 'N').ZE251R  NON NUMERIC         46521700
                    AIF   ('&ZCGPR' LT '2').ZE251Q                      46526000
                    AIF   ('&ZCGPR' LE '12').ZE251R                     46530300
.ZE251Q             ANOP  ,                                             46534600
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           46538900
&ZMS                SETC  '&ZMS.&UTILRTN"'                              46543200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     46547500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              46551800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46556100
.ZE251R             ANOP  ,                                             46560400
.*----------------------------------------------------------------***   46564700
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             46569000
                    AIF   (N'&WAIT LE 1).ZE254A  CK NUM                 46573300
&ZMS                SETC  '"WAIT='    *KPOSA* MNOTE                     46577600
&ZMS                SETC  '&ZMS.&WAIT"'                                 46581900
&ZMS                SETC  '&ZMS "WAIT"'                                 46586200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           46590500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46594800
.ZE254A             ANOP  ,                                             46599100
.*-------------------------------------------------------------------   46603400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             46607700
.ZE255A   AIF   ('&WAIT(1)' NE 'NO').ZE256A                             46612000
&XWAIT              SETC  'NO'        SET KEYWORD                       46616300
.*-------------------------------------------------------------------   46620600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             46624900
.ZE256A   AIF   ('&WAIT(1)' NE 'YES').ZE257A                            46629200
&XWAIT              SETC  'YES'       SET KEYWORD                       46633500
.*-------------------------------------------------------------------   46637800
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             46642100
.ZE257A   AIF   ('&WAIT(1)' NE 'EXPAND').ZE258A                         46646400
&XWAIT              SETC  'EXPAND'    SET KEYWORD                       46650700
.*-------------------------------------------------------------------   46655000
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             46659300
.ZE258A             AIF   (K'&XWAIT GT 0).ZE258B                        46663600
                    AIF   (K'&WAIT(1) LE 0).ZE258C                      46667900
&ZMS                SETC  '"WAIT='    *KUKWA* MNOTE                     46672200
&ZMS                SETC  '&ZMS.&WAIT"'                                 46676500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     46680800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           46685100
&ZMS                SETC  '&ZMS "NO",'          VALID KEYWORD           46689400
&ZMS                SETC  '&ZMS "YES",'         VALID KEYWORD           46693700
&ZMS                SETC  '&ZMS OR "EXPAND".'   VALID KEYWORD           46698000
                    MNOTE 8,' &ZMS '                                    46702300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46706600
                    AGO   .ZE258C                                       46710900
.*                                                                      46715200
.ZE258B             ANOP  ,                                             46719500
&ZXWAIT             SETC  'INPUT'     SET IN/OUTPUT                     46723800
.ZE258C             ANOP  ,                                             46728100
.*-------------------------------------------------------------------   46732400
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           46736700
&ZTLC               SETC 'PAGE_BUFFER'                                  46741000
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE259A             46745300
&XREQUEST           SETC  'PAGE_BUFFER'         SET KEYWORD             46749600
                    AIF   (N'&REQUEST LE 1).ZE259A  CK NUM              46753900
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           46758200
&ZMS                SETC  '&ZMS.&REQUEST"'                              46762500
&ZMS                SETC  '&ZMS "REQUEST"'                              46766800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           46771100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46775400
.ZE259A             ANOP  ,                                             46779700
.*----------------------------------------------------------------***   46784000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          46788300
                    AIF   (N'&BUFLIST LE 1).ZE261A  CK NUM              46792600
&ZMS                SETC  '"BUFLIST='           *KPOSA* MNOTE           46796900
&ZMS                SETC  '&ZMS.&BUFLIST"'                              46801200
&ZMS                SETC  '&ZMS "BUFLIST"'                              46805500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           46809800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46814100
.ZE261A             ANOP  ,                                             46818400
.*-------------------------------------------------------------------   46822700
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     46827000
                    AIF   (K'&BUFLIST(1) LE 0).ZE261B NO PRM            46831300
&ZXBUFLIST          SETC  'INPUT'     SET IN/OUTPUT                     46835600
&XBUFLIST           SETC  '&BUFLIST(1)'         SET XVARIABLE           46839900
                    AIF   (N'&BUFLIST GT 1).ZE261B                      46844200
.*                  ANOP              MULTIPLE PARMS                    46848500
&XBUFLIST           SETC  '&BUFLIST'  SET XVARIABLE                     46852800
.ZE261B             ANOP  ,                                             46857100
.*-------------------------------------------------------------------   46861400
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    46865700
                    AIF   (K'&ZXBUFLIST LE 0).ZE261R  NOT I/O           46870000
                    AIF   ('&XBUFLIST'(1,1) NE '(').ZE261R              46874300
&ZCGPR              SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                  46878600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE261P                 46882900
                    AIF   (K'&ZCGPR GT 2).ZE261Q                        46887200
                    AIF   ('&ZCGPR' EQ '0').ZE261Q                      46891500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 46895800
                    AIF   (T'&ZCGPR NE 'N').ZE261Q  INVALID REG NAME    46900100
.ZE261P             ANOP  ,                                             46904400
                    AIF   (T'&ZCGPR NE 'N').ZE261R  NON NUMERIC         46908700
                    AIF   ('&ZCGPR' LT '2').ZE261Q                      46913000
                    AIF   ('&ZCGPR' LE '12').ZE261R                     46917300
.ZE261Q             ANOP  ,                                             46921600
&ZMS                SETC  '"BUFLIST='           *KGPRA* MNOTE           46925900
&ZMS                SETC  '&ZMS.&BUFLIST"'                              46930200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     46934500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              46938800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46943100
.ZE261R             ANOP  ,                                             46947400
.*----------------------------------------------------------------***   46951700
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          46956000
                    AIF   (N'&BUFNUM LE 1).ZE264A  CK NUM               46960300
&ZMS                SETC  '"BUFNUM='  *KPOSA* MNOTE                     46964600
&ZMS                SETC  '&ZMS.&BUFNUM"'                               46968900
&ZMS                SETC  '&ZMS "BUFNUM"'                               46973200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           46977500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       46981800
.ZE264A             ANOP  ,                                             46986100
.*-------------------------------------------------------------------   46990400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     46994700
                    AIF   (K'&BUFNUM(1) LE 0).ZE264B NO PRM             46999000
&ZXBUFNUM           SETC  'INPUT'     SET IN/OUTPUT                     47003300
&XBUFNUM            SETC  '&BUFNUM(1)'          SET XVARIABLE           47007600
                    AIF   (N'&BUFNUM GT 1).ZE264B                       47011900
.*                  ANOP              MULTIPLE PARMS                    47016200
&XBUFNUM            SETC  '&BUFNUM'   SET XVARIABLE                     47020500
.ZE264B             ANOP  ,                                             47024800
.*-------------------------------------------------------------------   47029100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    47033400
                    AIF   (K'&ZXBUFNUM LE 0).ZE264R  NOT I/O            47037700
                    AIF   ('&XBUFNUM'(1,1) NE '(').ZE264R               47042000
&ZCGPR              SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                    47046300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE264P                 47050600
                    AIF   (K'&ZCGPR GT 2).ZE264Q                        47054900
                    AIF   ('&ZCGPR' EQ '0').ZE264Q                      47059200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 47063500
                    AIF   (T'&ZCGPR NE 'N').ZE264Q  INVALID REG NAME    47067800
.ZE264P             ANOP  ,                                             47072100
                    AIF   (T'&ZCGPR NE 'N').ZE264R  NON NUMERIC         47076400
                    AIF   ('&ZCGPR' LT '2').ZE264Q                      47080700
                    AIF   ('&ZCGPR' LE '12').ZE264R                     47085000
.ZE264Q             ANOP  ,                                             47089300
&ZMS                SETC  '"BUFNUM='  *KGPRA* MNOTE                     47093600
&ZMS                SETC  '&ZMS.&BUFNUM"'                               47097900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     47102200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              47106500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47110800
.ZE264R             ANOP  ,                                             47115100
.*----------------------------------------------------------------***   47119400
.***AE.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             47123700
                    AIF   (N'&BUFTYPE LE 1).ZE267A  CK NUM              47128000
&ZMS                SETC  '"BUFTYPE='           *KPOSA* MNOTE           47132300
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              47136600
&ZMS                SETC  '&ZMS "BUFTYPE"'                              47140900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           47145200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47149500
.ZE267A             ANOP  ,                                             47153800
.*-------------------------------------------------------------------   47158100
.***AE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             47162400
.ZE268A   AIF   ('&BUFTYPE(1)' NE 'PAGEELIG').ZE269A                    47166700
&XBUFTYPE           SETC  'PAGEELIG'  SET KEYWORD                       47171000
.*-------------------------------------------------------------------   47175300
.***AE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             47179600
.ZE269A   AIF   ('&BUFTYPE(1)' NE 'PAGEABLE').ZE270A                    47183900
&XBUFTYPE           SETC  'PAGEABLE'  SET KEYWORD                       47188200
.*-------------------------------------------------------------------   47192500
.***AE.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             47196800
.ZE270A             AIF   (K'&XBUFTYPE GT 0).ZE270B                     47201100
                    AIF   (K'&BUFTYPE(1) LE 0).ZE270C                   47205400
&ZMS                SETC  '"BUFTYPE='           *KUKWA* MNOTE           47209700
&ZMS                SETC  '&ZMS.&BUFTYPE"'                              47214000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     47218300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           47222600
&ZMS                SETC  '&ZMS "PAGEELIG"'     VALID KEYWORD           47226900
&ZMS                SETC  '&ZMS OR "PAGEABLE".'  VALID KEYWORD          47231200
                    MNOTE 8,' &ZMS '                                    47235500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47239800
                    AGO   .ZE270C                                       47244100
.*                                                                      47248400
.ZE270B             ANOP  ,                                             47252700
&ZXBUFTYPE          SETC  'INPUT'     SET IN/OUTPUT                     47257000
.ZE270C             ANOP  ,                                             47261300
.*----------------------------------------------------------------***   47265600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          47269900
                    AIF   (N'&GAP LE 1).ZE272A  CK NUM                  47274200
&ZMS                SETC  '"GAP='     *KPOSA* MNOTE                     47278500
&ZMS                SETC  '&ZMS.&GAP"'                                  47282800
&ZMS                SETC  '&ZMS "GAP"'                                  47287100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           47291400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47295700
.ZE272A             ANOP  ,                                             47300000
.*-------------------------------------------------------------------   47304300
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     47308600
                    AIF   (K'&GAP(1) LE 0).ZE272B NO PRM                47312900
&ZXGAP              SETC  'INPUT'     SET IN/OUTPUT                     47317200
&XGAP               SETC  '&GAP(1)'   SET XVARIABLE                     47321500
                    AIF   (N'&GAP GT 1).ZE272B                          47325800
.*                  ANOP              MULTIPLE PARMS                    47330100
&XGAP               SETC  '&GAP'      SET XVARIABLE                     47334400
.ZE272B             ANOP  ,                                             47338700
.*-------------------------------------------------------------------   47343000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    47347300
                    AIF   (K'&ZXGAP LE 0).ZE272R  NOT I/O               47351600
                    AIF   ('&XGAP'(1,1) NE '(').ZE272R                  47355900
&ZCGPR              SETC  '&XGAP'(2,K'&XGAP-2)                          47360200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE272P                 47364500
                    AIF   (K'&ZCGPR GT 2).ZE272Q                        47368800
                    AIF   ('&ZCGPR' EQ '0').ZE272Q                      47373100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 47377400
                    AIF   (T'&ZCGPR NE 'N').ZE272Q  INVALID REG NAME    47381700
.ZE272P             ANOP  ,                                             47386000
                    AIF   (T'&ZCGPR NE 'N').ZE272R  NON NUMERIC         47390300
                    AIF   ('&ZCGPR' LT '2').ZE272Q                      47394600
                    AIF   ('&ZCGPR' LE '12').ZE272R                     47398900
.ZE272Q             ANOP  ,                                             47403200
&ZMS                SETC  '"GAP='     *KGPRA* MNOTE                     47407500
&ZMS                SETC  '&ZMS.&GAP"'                                  47411800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     47416100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              47420400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47424700
.ZE272R             ANOP  ,                                             47429000
.*----------------------------------------------------------------***   47433300
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         47437600
                    AIF   (N'&ERRBFLST LE 1).ZE275A  CK NUM             47441900
&ZMS                SETC  '"ERRBFLST='          *KPOSA* MNOTE           47446200
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             47450500
&ZMS                SETC  '&ZMS "ERRBFLST"'                             47454800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           47459100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47463400
.ZE275A             ANOP  ,                                             47467700
.*-------------------------------------------------------------------   47472000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    47476300
                    AIF   (K'&ERRBFLST(1) LE 0).ZE275B NO PRM           47480600
&ZXERRBFLST         SETC  'OUTPUT'    SET IN/OUTPUT                     47484900
&XERRBFLST          SETC  '&ERRBFLST(1)'        SET XVARIABLE           47489200
                    AIF   (N'&ERRBFLST GT 1).ZE275B                     47493500
.*                  ANOP              MULTIPLE PARMS                    47497800
&XERRBFLST          SETC  '&ERRBFLST'           SET XVARIABLE           47502100
.ZE275B             ANOP  ,                                             47506400
.*-------------------------------------------------------------------   47510700
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   47515000
                    AIF   (K'&ZXERRBFLST LE 0).ZE275R  NOT I/O          47519300
                    AIF   ('&XERRBFLST'(1,1) NE '(').ZE275R             47523600
&ZCGPR              SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                47527900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE275P                 47532200
                    AIF   (K'&ZCGPR GT 2).ZE275Q                        47536500
                    AIF   ('&ZCGPR' EQ '0').ZE275Q                      47540800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 47545100
                    AIF   (T'&ZCGPR NE 'N').ZE275Q  INVALID REG NAME    47549400
.ZE275P             ANOP  ,                                             47553700
                    AIF   (T'&ZCGPR NE 'N').ZE275R  NON NUMERIC         47558000
                    AIF   ('&ZCGPR' LT '2').ZE275Q                      47562300
                    AIF   ('&ZCGPR' LE '12').ZE275R                     47566600
.ZE275Q             ANOP  ,                                             47570900
&ZMS                SETC  '"ERRBFLST='          *KGPRA* MNOTE           47575200
&ZMS                SETC  '&ZMS.&ERRBFLST"'                             47579500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     47583800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              47588100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47592400
.ZE275R             ANOP  ,                                             47596700
.*----------------------------------------------------------------***   47601000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          47605300
                    AIF   (N'&THREAD LE 1).ZE278A  CK NUM               47609600
&ZMS                SETC  '"THREAD='  *KPOSA* MNOTE                     47613900
&ZMS                SETC  '&ZMS.&THREAD"'                               47618200
&ZMS                SETC  '&ZMS "THREAD"'                               47622500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           47626800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47631100
.ZE278A             ANOP  ,                                             47635400
.*-------------------------------------------------------------------   47639700
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     47644000
                    AIF   (K'&THREAD(1) LE 0).ZE278B NO PRM             47648300
&ZXTHREAD           SETC  'INPUT'     SET IN/OUTPUT                     47652600
&XTHREAD            SETC  '&THREAD(1)'          SET XVARIABLE           47656900
                    AIF   (N'&THREAD GT 1).ZE278B                       47661200
.*                  ANOP              MULTIPLE PARMS                    47665500
&XTHREAD            SETC  '&THREAD'   SET XVARIABLE                     47669800
.ZE278B             ANOP  ,                                             47674100
.*-------------------------------------------------------------------   47678400
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    47682700
                    AIF   (K'&ZXTHREAD LE 0).ZE278R  NOT I/O            47687000
                    AIF   ('&XTHREAD'(1,1) NE '(').ZE278R               47691300
&ZCGPR              SETC  '&XTHREAD'(2,K'&XTHREAD-2)                    47695600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE278P                 47699900
                    AIF   (K'&ZCGPR GT 2).ZE278Q                        47704200
                    AIF   ('&ZCGPR' EQ '0').ZE278Q                      47708500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 47712800
                    AIF   (T'&ZCGPR NE 'N').ZE278Q  INVALID REG NAME    47717100
.ZE278P             ANOP  ,                                             47721400
                    AIF   (T'&ZCGPR NE 'N').ZE278R  NON NUMERIC         47725700
                    AIF   ('&ZCGPR' LT '2').ZE278Q                      47730000
                    AIF   ('&ZCGPR' LE '12').ZE278R                     47734300
.ZE278Q             ANOP  ,                                             47738600
&ZMS                SETC  '"THREAD='  *KGPRA* MNOTE                     47742900
&ZMS                SETC  '&ZMS.&THREAD"'                               47747200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     47751500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              47755800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47760100
.ZE278R             ANOP  ,                                             47764400
.*----------------------------------------------------------------***   47768700
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          47773000
                    AIF   (N'&UTILRTN LE 1).ZE281A  CK NUM              47777300
&ZMS                SETC  '"UTILRTN='           *KPOSA* MNOTE           47781600
&ZMS                SETC  '&ZMS.&UTILRTN"'                              47785900
&ZMS                SETC  '&ZMS "UTILRTN"'                              47790200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           47794500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47798800
.ZE281A             ANOP  ,                                             47803100
.*-------------------------------------------------------------------   47807400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     47811700
                    AIF   (K'&UTILRTN(1) LE 0).ZE281B NO PRM            47816000
&ZXUTILRTN          SETC  'INPUT'     SET IN/OUTPUT                     47820300
&XUTILRTN           SETC  '&UTILRTN(1)'         SET XVARIABLE           47824600
                    AIF   (N'&UTILRTN GT 1).ZE281B                      47828900
.*                  ANOP              MULTIPLE PARMS                    47833200
&XUTILRTN           SETC  '&UTILRTN'  SET XVARIABLE                     47837500
.ZE281B             ANOP  ,                                             47841800
.*-------------------------------------------------------------------   47846100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    47850400
                    AIF   (K'&ZXUTILRTN LE 0).ZE281R  NOT I/O           47854700
                    AIF   ('&XUTILRTN'(1,1) NE '(').ZE281R              47859000
&ZCGPR              SETC  '&XUTILRTN'(2,K'&XUTILRTN-2)                  47863300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE281P                 47867600
                    AIF   (K'&ZCGPR GT 2).ZE281Q                        47871900
                    AIF   ('&ZCGPR' EQ '0').ZE281Q                      47876200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 47880500
                    AIF   (T'&ZCGPR NE 'N').ZE281Q  INVALID REG NAME    47884800
.ZE281P             ANOP  ,                                             47889100
                    AIF   (T'&ZCGPR NE 'N').ZE281R  NON NUMERIC         47893400
                    AIF   ('&ZCGPR' LT '2').ZE281Q                      47897700
                    AIF   ('&ZCGPR' LE '12').ZE281R                     47902000
.ZE281Q             ANOP  ,                                             47906300
&ZMS                SETC  '"UTILRTN='           *KGPRA* MNOTE           47910600
&ZMS                SETC  '&ZMS.&UTILRTN"'                              47914900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     47919200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              47923500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47927800
.ZE281R             ANOP  ,                                             47932100
.*-------------------------------------------------------------------   47936400
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           47940700
&ZTLC               SETC 'RESOURCE_STATS'                               47945000
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZE283A             47949300
&XREQUEST           SETC  'RESOURCE_STATS'      SET KEYWORD             47953600
                    AIF   (N'&REQUEST LE 1).ZE283A  CK NUM              47957900
&ZMS                SETC  '"REQUEST='           *KPOSA* MNOTE           47962200
&ZMS                SETC  '&ZMS.&REQUEST"'                              47966500
&ZMS                SETC  '&ZMS "REQUEST"'                              47970800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           47975100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       47979400
.ZE283A             ANOP  ,                                             47983700
.*----------------------------------------------------------------***   47988000
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         47992300
                    AIF   (N'&STATAREA LE 1).ZE285A  CK NUM             47996600
&ZMS                SETC  '"STATAREA='          *KPOSA* MNOTE           48000900
&ZMS                SETC  '&ZMS.&STATAREA"'                             48005200
&ZMS                SETC  '&ZMS "STATAREA"'                             48009500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           48013800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48018100
.ZE285A             ANOP  ,                                             48022400
.*-------------------------------------------------------------------   48026700
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    48031000
                    AIF   (K'&STATAREA(1) LE 0).ZE285B NO PRM           48035300
&ZXSTATAREA         SETC  'OUTPUT'    SET IN/OUTPUT                     48039600
&XSTATAREA          SETC  '&STATAREA(1)'        SET XVARIABLE           48043900
                    AIF   (N'&STATAREA GT 1).ZE285B                     48048200
.*                  ANOP              MULTIPLE PARMS                    48052500
&XSTATAREA          SETC  '&STATAREA'           SET XVARIABLE           48056800
.ZE285B             ANOP  ,                                             48061100
.*-------------------------------------------------------------------   48065400
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   48069700
                    AIF   (K'&ZXSTATAREA LE 0).ZE285R  NOT I/O          48074000
                    AIF   ('&XSTATAREA'(1,1) NE '(').ZE285R             48078300
&ZCGPR              SETC  '&XSTATAREA'(2,K'&XSTATAREA-2)                48082600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE285P                 48086900
                    AIF   (K'&ZCGPR GT 2).ZE285Q                        48091200
                    AIF   ('&ZCGPR' EQ '0').ZE285Q                      48095500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 48099800
                    AIF   (T'&ZCGPR NE 'N').ZE285Q  INVALID REG NAME    48104100
.ZE285P             ANOP  ,                                             48108400
                    AIF   (T'&ZCGPR NE 'N').ZE285R  NON NUMERIC         48112700
                    AIF   ('&ZCGPR' LT '2').ZE285Q                      48117000
                    AIF   ('&ZCGPR' LE '12').ZE285R                     48121300
.ZE285Q             ANOP  ,                                             48125600
&ZMS                SETC  '"STATAREA='          *KGPRA* MNOTE           48129900
&ZMS                SETC  '&ZMS.&STATAREA"'                             48134200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     48138500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              48142800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48147100
.ZE285R             ANOP  ,                                             48151400
.*------------------------------------------------------------------    48155700
.***AE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           48160000
.ZE287              AIF   (K'&XREQUEST GT 0).ZE287A  VALID              48164300
                    AIF   (K'&REQUEST(1) LE 0).ZE287B                   48168600
&ZMS                SETC  '"REQUEST='           *KUKWA* MNOTE           48172900
&ZMS                SETC  '&ZMS.&REQUEST"'                              48177200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     48181500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           48185800
&ZMS                SETC  '&ZMS "ASSIGN_BUFFER",'  VALID KEYWORD        48190100
&ZMS                SETC  '&ZMS "CHANGE_OWNER",'  VALID KEYWORD         48194400
&ZMS                SETC  '&ZMS "COPY_DATA",'   VALID KEYWORD           48198700
&ZMS                SETC  '&ZMS "CREATE_POOL",'  VALID KEYWORD          48203000
&ZMS                SETC  '&ZMS "DELETE_POOL",'  VALID KEYWORD          48207300
&ZMS                SETC  '&ZMS "DUMP_INFO",'   VALID KEYWORD           48211600
&ZMS                SETC  '&ZMS "FIX_BUFFER",'  VALID KEYWORD           48215900
&ZMS                SETC  '&ZMS "FREE_BUFFER",'  VALID KEYWORD          48220200
&ZMS                SETC  '&ZMS "GET_BUFFER",'  VALID KEYWORD           48224500
&ZMS                SETC  '&ZMS "PAGE_BUFFER",'  VALID KEYWORD          48228800
                    MNOTE 8,' &ZMS '                                    48233100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48237400
&ZMS                SETC  '(CONTINUED) '                                48241700
&ZMS                SETC  '&ZMS OR "RESOURCE_STATS".'  VALID KEYWORD    48246000
                    MNOTE 8,' &ZMS '                                    48250300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48254600
                    AGO   .ZE287B                                       48258900
.*                                                                      48263200
.ZE287A             ANOP  ,                                             48267500
&ZXREQUEST          SETC  'INPUT'     SET IN/OUTPUT                     48271800
.ZE287B             ANOP  ,                                             48276100
.*----------------------------------------------------------------***   48280400
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         48284700
                    AIF   (N'&RETCODE LE 1).ZE289A  CK NUM              48289000
&ZMS                SETC  '"RETCODE='           *KPOSA* MNOTE           48293300
&ZMS                SETC  '&ZMS.&RETCODE"'                              48297600
&ZMS                SETC  '&ZMS "RETCODE"'                              48301900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           48306200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48310500
.ZE289A             ANOP  ,                                             48314800
.*-------------------------------------------------------------------   48319100
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    48323400
                    AIF   (K'&RETCODE(1) LE 0).ZE289B NO PRM            48327700
&ZXRETCODE          SETC  'OUTPUT'    SET IN/OUTPUT                     48332000
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           48336300
                    AIF   (N'&RETCODE GT 1).ZE289B                      48340600
.*                  ANOP              MULTIPLE PARMS                    48344900
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     48349200
.ZE289B             ANOP  ,                                             48353500
.*-------------------------------------------------------------------   48357800
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   48362100
                    AIF   (K'&ZXRETCODE LE 0).ZE289R  NOT I/O           48366400
                    AIF   ('&XRETCODE'(1,1) NE '(').ZE289R              48370700
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  48375000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE289P                 48379300
                    AIF   (K'&ZCGPR GT 2).ZE289Q                        48383600
                    AIF   ('&ZCGPR' EQ '0').ZE289Q                      48387900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 48392200
                    AIF   (T'&ZCGPR NE 'N').ZE289Q  INVALID REG NAME    48396500
.ZE289P             ANOP  ,                                             48400800
                    AIF   (T'&ZCGPR NE 'N').ZE289R  NON NUMERIC         48405100
                    AIF   ('&ZCGPR' LT '2').ZE289Q                      48409400
                    AIF   ('&ZCGPR' LE '12').ZE289R                     48413700
.ZE289Q             ANOP  ,                                             48418000
&ZMS                SETC  '"RETCODE='           *KGPRA* MNOTE           48422300
&ZMS                SETC  '&ZMS.&RETCODE"'                              48426600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     48430900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              48435200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48439500
.ZE289R             ANOP  ,                                             48443800
.*----------------------------------------------------------------***   48448100
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         48452400
                    AIF   (N'&RSNCODE LE 1).ZE292A  CK NUM              48456700
&ZMS                SETC  '"RSNCODE='           *KPOSA* MNOTE           48461000
&ZMS                SETC  '&ZMS.&RSNCODE"'                              48465300
&ZMS                SETC  '&ZMS "RSNCODE"'                              48469600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           48473900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48478200
.ZE292A             ANOP  ,                                             48482500
.*-------------------------------------------------------------------   48486800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    48491100
                    AIF   (K'&RSNCODE(1) LE 0).ZE292B NO PRM            48495400
&ZXRSNCODE          SETC  'OUTPUT'    SET IN/OUTPUT                     48499700
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           48504000
                    AIF   (N'&RSNCODE GT 1).ZE292B                      48508300
.*                  ANOP              MULTIPLE PARMS                    48512600
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     48516900
.ZE292B             ANOP  ,                                             48521200
.*-------------------------------------------------------------------   48525500
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   48529800
                    AIF   (K'&ZXRSNCODE LE 0).ZE292R  NOT I/O           48534100
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZE292R              48538400
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  48542700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZE292P                 48547000
                    AIF   (K'&ZCGPR GT 2).ZE292Q                        48551300
                    AIF   ('&ZCGPR' EQ '0').ZE292Q                      48555600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 48559900
                    AIF   (T'&ZCGPR NE 'N').ZE292Q  INVALID REG NAME    48564200
.ZE292P             ANOP  ,                                             48568500
                    AIF   (T'&ZCGPR NE 'N').ZE292R  NON NUMERIC         48572800
                    AIF   ('&ZCGPR' LT '2').ZE292Q                      48577100
                    AIF   ('&ZCGPR' LE '12').ZE292R                     48581400
.ZE292Q             ANOP  ,                                             48585700
&ZMS                SETC  '"RSNCODE='           *KGPRA* MNOTE           48590000
&ZMS                SETC  '&ZMS.&RSNCODE"'                              48594300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     48598600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              48602900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48607200
.ZE292R             ANOP  ,                                             48611500
.******************************************************************     48615800
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        48620100
.******************************************************************     48624400
                    ACTR  10000                                         48628700
.*----------------------------------------------------------------***   48633000
.***AF.P02 EXTRA POSITIONALS                                            48637300
                    AIF   (N'&SYSLIST LE 0).ZELISTX  NO EXTRAS          48641600
&ZCVAL              SETC  ''          ERROR FIELD                       48645900
&ZAWRK              SETA  0           POSITIONAL NUMBER                 48650200
.ZELIST2            ANOP  ,                                             48654500
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   48658800
                    AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE          48663100
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               48667400
                    AGO   .ZELIST2                                      48671700
.*                                                                      48676000
.ZELIST3            ANOP  ,                                             48680300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            48684600
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE      48688900
&ZMS                SETC  '&ZMS "&ZCVAL"'                               48693200
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        48697500
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                48701800
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        48706100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       48710400
.ZELISTX            ANOP  ,                                             48714700
&ZASYSLNDX          SETA  0                                             48719000
.*-------------------------------------------------------------------   48723300
.***AE.MF02 MF=(SLME)                                                   48727600
.ZEMFX              ANOP  ,           END OF PARTIAL SYNTAX CHECK       48731900
.*******************************************************************    48736200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       48740500
.*******************************************************************    48744800
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          48749100
.*******************************************************************    48753400
.***AE.01  START OF IVTCSM MACRO CODE                                   48757700
.*******************************************************************    48762000
                    LCLC  &M0M0001                 NAME                 48766300
&M0M0001            SETC  '&XLABEL'                SET NAME             48770600
                    AIF   (K'&XLABEL NE 0).XLAB2                        48774900
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         48779200
.*                                                                      48783500
.XLAB2              ANOP  ,                                             48787800
                    AIF   ('&XMF' EQ 'L').XLAB3                         48792100
&M0M0001 DS    0H                             IVTCSM-0                  48796400
.XLAB3              ANOP  ,                                             48800700
.*******************************************************************    48805000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              48809300
.*******************************************************************    48813600
              PUSH  PRINT                                               48817900
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    48822200
                    PRINT OFF         ++ PR01                           48826500
                    AGO   .ZPRNTXX                                      48830800
.ZPRINTX            PRINT ON                                            48835100
.ZPRNTXX            ANOP  ,                                             48839400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  48843700
         AIF ('&XREQUEST' NE '').ALLOK                                  48848000
         AIF ('&XMF' NE 'E').ALLOK                                      48852300
&ZMS     SETC  'THE'                                                    48856600
&ZMS     SETC  '&ZMS "REQUEST" KEY AND ITS ARGUMENT'                    48860900
&ZMS     SETC  '&ZMS ARE REQUIRED.'                                     48865200
&ZMS     SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                      48869500
&ZMS     SETC  '&ZMS "ASSIGN_BUFFER",'  VALID KEYWORD                   48873800
&ZMS     SETC  '&ZMS "CHANGE_OWNER",'  VALID KEYWORD                    48878100
&ZMS     SETC  '&ZMS "COPY_DATA",'   VALID KEYWORD                      48882400
&ZMS     SETC  '&ZMS "CREATE_POOL",'  VALID KEYWORD                     48886700
&ZMS     SETC  '&ZMS "DELETE_POOL",'  VALID KEYWORD                     48891000
&ZMS     SETC  '&ZMS "DUMP_INFO",'   VALID KEYWORD                      48895300
&ZMS     SETC  '&ZMS "FIX_BUFFER",'  VALID KEYWORD                      48899600
&ZMS     SETC  '&ZMS "FREE_BUFFER",'  VALID KEYWORD                     48903900
&ZMS     SETC  '&ZMS "GET_BUFFER",'  VALID KEYWORD                      48908200
         MNOTE 8,' &ZMS '                                               48912500
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE                  48916800
&ZMS     SETC  '(CONTINUED) '                                           48921100
&ZMS     SETC  '&ZMS "PAGE_BUFFER",'  VALID KEYWORD                     48925400
&ZMS     SETC  '&ZMS OR "RESOURCE_STATS".'  VALID KEYWORD               48929700
         MNOTE 8,' &ZMS '                                               48934000
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE                  48938300
.ALLOK   ANOP                                                           48942600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  48946900
.********************************************************************   48951200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     48955500
.********************************************************************   48959800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       48964100
                      LCLA  &ZOPN1         INVOCATION INDEX             48968400
                      LCLC  &ZOPL(4095)    LABEL                        48972700
                      LCLC  &ZOPO(4095)    OPERATION                    48977000
                      LCLC  &ZOPV(4095)    VALUE                        48981300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  48985600
.*                                                                      48989900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     48994200
.******************************************************************     48998500
.***AL.L10 IVTCSM FMT=LIST MF=S|L PARAMETERS                            49002800
.******************************************************************     49007100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     49011400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     49015700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     49020000
&XMFATTR              SETC  '0D'                                        49024300
.*                                                                      49028600
&ZOPN                 SETA  &ZOPN+1                                     49032900
&ZOPL(&ZOPN)          SETC  ' '                                         49037200
&ZOPO(&ZOPN)          SETC  'B'                                         49041500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                49045800
&ZOPD(&ZOPN)          SETC  '++ IVTCSM ARG PARMS'                       49050100
.*                                                                      49054400
&ZOPN                 SETA  &ZOPN+1                                     49058700
&ZOPL(&ZOPN)          SETC  ' '                                         49063000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     49067300
&ZOPV(&ZOPN)          SETC  '1'                                         49071600
&ZOPD(&ZOPN)          SETC  ' '                                         49075900
.*                                                                      49080200
.ZLMFSL2              ANOP  ,                                           49084500
.*-------------------------------------------------------------------   49088800
.***AM.L00  IVTCSM FMT=LIST name                                        49093100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    49097400
&ZOPN                 SETA &ZOPN+1                                      49101700
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   49106000
&ZOPO(&ZOPN)          SETC 'EQU'                                        49110300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   49114600
&ZOPD(&ZOPN)          SETC '++ IVTCSM NAME'                             49118900
.ZLMFSL2M             ANOP  ,                                           49123200
.*-------------------------------------------------------------------   49127500
.***AM.L01  IVTCSM FMT=LIST PARAMETERS                                  49131800
&ZOPN                 SETA &ZOPN+1                                      49136100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   49140400
&ZOPO(&ZOPN)          SETC 'DS'                                         49144700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   49149000
&ZOPD(&ZOPN)          SETC '++ IVTCSM PARM LIST'                        49153300
.*-------------------------------------------------------------------   49157600
.***AM.L02 XVERSION XL1                                                 49161900
&ZOPN                 SETA &ZOPN+1                                      49166200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         49170500
&ZOPO(&ZOPN)          SETC 'DS'                                         49174800
&ZOPV(&ZOPN)          SETC 'XL1'                                        49179100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          49183400
.*-------------------------------------------------------------------   49187700
.***AM.L05 XBUFSOURC XL1                                                49192000
&ZOPN                 SETA &ZOPN+1                                      49196300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSOURC'                        49200600
&ZOPO(&ZOPN)          SETC 'DS'                                         49204900
&ZOPV(&ZOPN)          SETC 'XL1'                                        49209200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSOURC XBUFSOURC'                   49213500
.*                                                                      49217800
&ZOPN                 SETA  &ZOPN+1                                     49222100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFSOURC_ECSA'                  49226400
&ZOPO(&ZOPN)          SETC  'EQU'                                       49230700
&ZOPV(&ZOPN)          SETC  '128'                                       49235000
&ZOPD(&ZOPN)          SETC  '++ XBUFSOURC.'                             49239300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECSA'                         49243600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49247900
.*                                                                      49252200
&ZOPN                 SETA  &ZOPN+1                                     49256500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFSOURC_DSPACE'                49260800
&ZOPO(&ZOPN)          SETC  'EQU'                                       49265100
&ZOPV(&ZOPN)          SETC  '64'                                        49269400
&ZOPD(&ZOPN)          SETC  '++ XBUFSOURC.'                             49273700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DSPACE'                       49278000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49282300
.*-------------------------------------------------------------------   49286600
.***AM.L05 XBUFTYPE XL1                                                 49290900
&ZOPN                 SETA &ZOPN+1                                      49295200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFTYPE'                         49299500
&ZOPO(&ZOPN)          SETC 'DS'                                         49303800
&ZOPV(&ZOPN)          SETC 'XL1'                                        49308100
&ZOPD(&ZOPN)          SETC '++ &ZXBUFTYPE XBUFTYPE'                     49312400
.*                                                                      49316700
&ZOPN                 SETA  &ZOPN+1                                     49321000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFTYPE_SAME'                   49325300
&ZOPO(&ZOPN)          SETC  'EQU'                                       49329600
&ZOPV(&ZOPN)          SETC  '0'                                         49333900
&ZOPD(&ZOPN)          SETC  '++ XBUFTYPE.'                              49338200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SAME'                         49342500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49346800
.*                                                                      49351100
&ZOPN                 SETA  &ZOPN+1                                     49355400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFTYPE_FIXED'                  49359700
&ZOPO(&ZOPN)          SETC  'EQU'                                       49364000
&ZOPV(&ZOPN)          SETC  '128'                                       49368300
&ZOPD(&ZOPN)          SETC  '++ XBUFTYPE.'                              49372600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FIXED'                        49376900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49381200
.*                                                                      49385500
&ZOPN                 SETA  &ZOPN+1                                     49389800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFTYPE_PAGEABLE'               49394100
&ZOPO(&ZOPN)          SETC  'EQU'                                       49398400
&ZOPV(&ZOPN)          SETC  '64'                                        49402700
&ZOPD(&ZOPN)          SETC  '++ XBUFTYPE.'                              49407000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PAGEABLE'                     49411300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49415600
.*                                                                      49419900
&ZOPN                 SETA  &ZOPN+1                                     49424200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFTYPE_PAGEELIG'               49428500
&ZOPO(&ZOPN)          SETC  'EQU'                                       49432800
&ZOPV(&ZOPN)          SETC  '32'                                        49437100
&ZOPD(&ZOPN)          SETC  '++ XBUFTYPE.'                              49441400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PAGEELIG'                     49445700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49450000
.*-------------------------------------------------------------------   49454300
.***AM.L05 XCLEAR XL1                                                   49458600
&ZOPN                 SETA &ZOPN+1                                      49462900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLEAR'                           49467200
&ZOPO(&ZOPN)          SETC 'DS'                                         49471500
&ZOPV(&ZOPN)          SETC 'XL1'                                        49475800
&ZOPD(&ZOPN)          SETC '++ &ZXCLEAR XCLEAR'                         49480100
.*                                                                      49484400
&ZOPN                 SETA  &ZOPN+1                                     49488700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLEAR_NO'                       49493000
&ZOPO(&ZOPN)          SETC  'EQU'                                       49497300
&ZOPV(&ZOPN)          SETC  '0'                                         49501600
&ZOPD(&ZOPN)          SETC  '++ XCLEAR.'                                49505900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           49510200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49514500
.*                                                                      49518800
&ZOPN                 SETA  &ZOPN+1                                     49523100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLEAR_YES'                      49527400
&ZOPO(&ZOPN)          SETC  'EQU'                                       49531700
&ZOPV(&ZOPN)          SETC  '128'                                       49536000
&ZOPD(&ZOPN)          SETC  '++ XCLEAR.'                                49540300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          49544600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49548900
.*-------------------------------------------------------------------   49553200
.***AM.L05 XWAIT XL1                                                    49557500
&ZOPN                 SETA &ZOPN+1                                      49561800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWAIT'                            49566100
&ZOPO(&ZOPN)          SETC 'DS'                                         49570400
&ZOPV(&ZOPN)          SETC 'XL1'                                        49574700
&ZOPD(&ZOPN)          SETC '++ &ZXWAIT XWAIT'                           49579000
.*                                                                      49583300
&ZOPN                 SETA  &ZOPN+1                                     49587600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XWAIT_NO'                        49591900
&ZOPO(&ZOPN)          SETC  'EQU'                                       49596200
&ZOPV(&ZOPN)          SETC  '0'                                         49600500
&ZOPD(&ZOPN)          SETC  '++ XWAIT.'                                 49604800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           49609100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49613400
.*                                                                      49617700
&ZOPN                 SETA  &ZOPN+1                                     49622000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XWAIT_YES'                       49626300
&ZOPO(&ZOPN)          SETC  'EQU'                                       49630600
&ZOPV(&ZOPN)          SETC  '128'                                       49634900
&ZOPD(&ZOPN)          SETC  '++ XWAIT.'                                 49639200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          49643500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49647800
.*                                                                      49652100
&ZOPN                 SETA  &ZOPN+1                                     49656400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XWAIT_EXPAND'                    49660700
&ZOPO(&ZOPN)          SETC  'EQU'                                       49665000
&ZOPV(&ZOPN)          SETC  '64'                                        49669300
&ZOPD(&ZOPN)          SETC  '++ XWAIT.'                                 49673600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXPAND'                       49677900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49682200
.*-------------------------------------------------------------------   49686500
.***AM.L05 XFREETO XL1                                                  49690800
&ZOPN                 SETA &ZOPN+1                                      49695100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFREETO'                          49699400
&ZOPO(&ZOPN)          SETC 'DS'                                         49703700
&ZOPV(&ZOPN)          SETC 'XL1'                                        49708000
&ZOPD(&ZOPN)          SETC '++ &ZXFREETO XFREETO'                       49712300
.*                                                                      49716600
&ZOPN                 SETA  &ZOPN+1                                     49720900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFREETO_USER'                    49725200
&ZOPO(&ZOPN)          SETC  'EQU'                                       49729500
&ZOPV(&ZOPN)          SETC  '128'                                       49733800
&ZOPD(&ZOPN)          SETC  '++ XFREETO.'                               49738100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).USER'                         49742400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49746700
.*                                                                      49751000
&ZOPN                 SETA  &ZOPN+1                                     49755300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFREETO_CSM'                     49759600
&ZOPO(&ZOPN)          SETC  'EQU'                                       49763900
&ZOPV(&ZOPN)          SETC  '64'                                        49768200
&ZOPD(&ZOPN)          SETC  '++ XFREETO.'                               49772500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CSM'                          49776800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49781100
.*-------------------------------------------------------------------   49785400
.***AM.L09  XOWNERID XL2                                                49789700
&ZOPN                 SETA &ZOPN+1                                      49794000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNERID'                         49798300
&ZOPO(&ZOPN)          SETC 'DS'                                         49802600
&ZOPV(&ZOPN)          SETC 'XL2'                                        49806900
&ZOPD(&ZOPN)          SETC '++ &ZXOWNERID  XOWNERID'                    49811200
.*-------------------------------------------------------------------   49815500
.***AM.L05 XREQUEST F                                                   49819800
&ZOPN                 SETA &ZOPN+1                                      49824100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         49828400
&ZOPO(&ZOPN)          SETC 'DS'                                         49832700
&ZOPV(&ZOPN)          SETC 'F'                                          49837000
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     49841300
.*                                                                      49845600
&ZOPN                 SETA  &ZOPN+1                                     49849900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CREATE_POOL'            49854200
&ZOPO(&ZOPN)          SETC  'EQU'                                       49858500
&ZOPV(&ZOPN)          SETC  '0'                                         49862800
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              49867100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CREATE_POOL'                  49871400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49875700
.*                                                                      49880000
&ZOPN                 SETA  &ZOPN+1                                     49884300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DELETE_POOL'            49888600
&ZOPO(&ZOPN)          SETC  'EQU'                                       49892900
&ZOPV(&ZOPN)          SETC  '1'                                         49897200
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              49901500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE_POOL'                  49905800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49910100
.*                                                                      49914400
&ZOPN                 SETA  &ZOPN+1                                     49918700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_GET_BUFFER'             49923000
&ZOPO(&ZOPN)          SETC  'EQU'                                       49927300
&ZOPV(&ZOPN)          SETC  '2'                                         49931600
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              49935900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GET_BUFFER'                   49940200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49944500
.*                                                                      49948800
&ZOPN                 SETA  &ZOPN+1                                     49953100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FREE_BUFFER'            49957400
&ZOPO(&ZOPN)          SETC  'EQU'                                       49961700
&ZOPV(&ZOPN)          SETC  '3'                                         49966000
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              49970300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FREE_BUFFER'                  49974600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      49978900
.*                                                                      49983200
&ZOPN                 SETA  &ZOPN+1                                     49987500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_ASSIGN_BUFFER'          49991800
&ZOPO(&ZOPN)          SETC  'EQU'                                       49996100
&ZOPV(&ZOPN)          SETC  '4'                                         50000400
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              50004700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASSIGN_BUFFER'                50009000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50013300
.*                                                                      50017600
&ZOPN                 SETA  &ZOPN+1                                     50021900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DUMP_INFO'              50026200
&ZOPO(&ZOPN)          SETC  'EQU'                                       50030500
&ZOPV(&ZOPN)          SETC  '5'                                         50034800
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              50039100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DUMP_INFO'                    50043400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50047700
.*                                                                      50052000
&ZOPN                 SETA  &ZOPN+1                                     50056300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FIX_BUFFER'             50060600
&ZOPO(&ZOPN)          SETC  'EQU'                                       50064900
&ZOPV(&ZOPN)          SETC  '6'                                         50069200
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              50073500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FIX_BUFFER'                   50077800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50082100
.*                                                                      50086400
&ZOPN                 SETA  &ZOPN+1                                     50090700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_PAGE_BUFFER'            50095000
&ZOPO(&ZOPN)          SETC  'EQU'                                       50099300
&ZOPV(&ZOPN)          SETC  '7'                                         50103600
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              50107900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PAGE_BUFFER'                  50112200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50116500
.*                                                                      50120800
&ZOPN                 SETA  &ZOPN+1                                     50125100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_RESOURCE_STATS'         50129400
&ZOPO(&ZOPN)          SETC  'EQU'                                       50133700
&ZOPV(&ZOPN)          SETC  '8'                                         50138000
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              50142300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RESOURCE_STATS'               50146600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50150900
.*                                                                      50155200
&ZOPN                 SETA  &ZOPN+1                                     50159500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_COPY_DATA'              50163800
&ZOPO(&ZOPN)          SETC  'EQU'                                       50168100
&ZOPV(&ZOPN)          SETC  '9'                                         50172400
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              50176700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COPY_DATA'                    50181000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50185300
.*                                                                      50189600
&ZOPN                 SETA  &ZOPN+1                                     50193900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CHANGE_OWNER'           50198200
&ZOPO(&ZOPN)          SETC  'EQU'                                       50202500
&ZOPV(&ZOPN)          SETC  '100'                                       50206800
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              50211100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CHANGE_OWNER'                 50215400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50219700
.*-------------------------------------------------------------------   50224000
.***AM.L09  XBUFSIZE F                                                  50228300
&ZOPN                 SETA &ZOPN+1                                      50232600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         50236900
&ZOPO(&ZOPN)          SETC 'DS'                                         50241200
&ZOPV(&ZOPN)          SETC 'F'                                          50245500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE  XBUFSIZE'                    50249800
.*-------------------------------------------------------------------   50254100
.***AM.L09  XINITBUF F                                                  50258400
&ZOPN                 SETA &ZOPN+1                                      50262700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINITBUF'                         50267000
&ZOPO(&ZOPN)          SETC 'DS'                                         50271300
&ZOPV(&ZOPN)          SETC 'F'                                          50275600
&ZOPD(&ZOPN)          SETC '++ &ZXINITBUF  XINITBUF'                    50279900
.*-------------------------------------------------------------------   50284200
.***AM.L09  XMINFREE F                                                  50288500
&ZOPN                 SETA &ZOPN+1                                      50292800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMINFREE'                         50297100
&ZOPO(&ZOPN)          SETC 'DS'                                         50301400
&ZOPV(&ZOPN)          SETC 'F'                                          50305700
&ZOPD(&ZOPN)          SETC '++ &ZXMINFREE  XMINFREE'                    50310000
.*-------------------------------------------------------------------   50314300
.***AM.L09  XEXPBUF F                                                   50318600
&ZOPN                 SETA &ZOPN+1                                      50322900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXPBUF'                          50327200
&ZOPO(&ZOPN)          SETC 'DS'                                         50331500
&ZOPV(&ZOPN)          SETC 'F'                                          50335800
&ZOPD(&ZOPN)          SETC '++ &ZXEXPBUF  XEXPBUF'                      50340100
.*-------------------------------------------------------------------   50344400
.***AM.L09  XBUFNUM F                                                   50348700
&ZOPN                 SETA &ZOPN+1                                      50353000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          50357300
&ZOPO(&ZOPN)          SETC 'DS'                                         50361600
&ZOPV(&ZOPN)          SETC 'F'                                          50365900
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM  XBUFNUM'                      50370200
.*-------------------------------------------------------------------   50374500
.***AM.L09  XBUFLIST A                                                  50378800
&ZOPN                 SETA &ZOPN+1                                      50383100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         50387400
&ZOPO(&ZOPN)          SETC 'DS'                                         50391700
&ZOPV(&ZOPN)          SETC 'A'                                          50396000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST  XBUFLIST'                    50400300
.*-------------------------------------------------------------------   50404600
.***AM.L09  XERRBFLST F                                                 50408900
&ZOPN                 SETA &ZOPN+1                                      50413200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XERRBFLST'                        50417500
&ZOPO(&ZOPN)          SETC 'DS'                                         50421800
&ZOPV(&ZOPN)          SETC 'F'                                          50426100
&ZOPD(&ZOPN)          SETC '++ &ZXERRBFLST  XERRBFLST'                  50430400
.*-------------------------------------------------------------------   50434700
.***AM.L09  XTASKID A                                                   50439000
&ZOPN                 SETA &ZOPN+1                                      50443300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTASKID'                          50447600
&ZOPO(&ZOPN)          SETC 'DS'                                         50451900
&ZOPV(&ZOPN)          SETC 'A'                                          50456200
&ZOPD(&ZOPN)          SETC '++ &ZXTASKID  XTASKID'                      50460500
.*-------------------------------------------------------------------   50464800
.***AM.L09  XFREERTN A                                                  50469100
&ZOPN                 SETA &ZOPN+1                                      50473400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFREERTN'                         50477700
&ZOPO(&ZOPN)          SETC 'DS'                                         50482000
&ZOPV(&ZOPN)          SETC 'A'                                          50486300
&ZOPD(&ZOPN)          SETC '++ &ZXFREERTN  XFREERTN'                    50490600
.*-------------------------------------------------------------------   50494900
.***AM.L09  XGAP F                                                      50499200
&ZOPN                 SETA &ZOPN+1                                      50503500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGAP'                             50507800
&ZOPO(&ZOPN)          SETC 'DS'                                         50512100
&ZOPV(&ZOPN)          SETC 'F'                                          50516400
&ZOPD(&ZOPN)          SETC '++ &ZXGAP  XGAP'                            50520700
.*-------------------------------------------------------------------   50525000
.***AM.L09  XSRCGAP F                                                   50529300
&ZOPN                 SETA &ZOPN+1                                      50533600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSRCGAP'                          50537900
&ZOPO(&ZOPN)          SETC 'DS'                                         50542200
&ZOPV(&ZOPN)          SETC 'F'                                          50546500
&ZOPD(&ZOPN)          SETC '++ &ZXSRCGAP  XSRCGAP'                      50550800
.*-------------------------------------------------------------------   50555100
.***AM.L09  XTARGGAP F                                                  50559400
&ZOPN                 SETA &ZOPN+1                                      50563700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGGAP'                         50568000
&ZOPO(&ZOPN)          SETC 'DS'                                         50572300
&ZOPV(&ZOPN)          SETC 'F'                                          50576600
&ZOPD(&ZOPN)          SETC '++ &ZXTARGGAP  XTARGGAP'                    50580900
.*-------------------------------------------------------------------   50585200
.***AM.L09  XSRCNUM F                                                   50589500
&ZOPN                 SETA &ZOPN+1                                      50593800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSRCNUM'                          50598100
&ZOPO(&ZOPN)          SETC 'DS'                                         50602400
&ZOPV(&ZOPN)          SETC 'F'                                          50606700
&ZOPD(&ZOPN)          SETC '++ &ZXSRCNUM  XSRCNUM'                      50611000
.*-------------------------------------------------------------------   50615300
.***AM.L09  XTARGNUM F                                                  50619600
&ZOPN                 SETA &ZOPN+1                                      50623900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGNUM'                         50628200
&ZOPO(&ZOPN)          SETC 'DS'                                         50632500
&ZOPV(&ZOPN)          SETC 'F'                                          50636800
&ZOPD(&ZOPN)          SETC '++ &ZXTARGNUM  XTARGNUM'                    50641100
.*-------------------------------------------------------------------   50645400
.***AM.L09  XSRCLIST A                                                  50649700
&ZOPN                 SETA &ZOPN+1                                      50654000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSRCLIST'                         50658300
&ZOPO(&ZOPN)          SETC 'DS'                                         50662600
&ZOPV(&ZOPN)          SETC 'A'                                          50666900
&ZOPD(&ZOPN)          SETC '++ &ZXSRCLIST  XSRCLIST'                    50671200
.*-------------------------------------------------------------------   50675500
.***AM.L09  XTARGLIST A                                                 50679800
&ZOPN                 SETA &ZOPN+1                                      50684100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGLIST'                        50688400
&ZOPO(&ZOPN)          SETC 'DS'                                         50692700
&ZOPV(&ZOPN)          SETC 'A'                                          50697000
&ZOPD(&ZOPN)          SETC '++ &ZXTARGLIST  XTARGLIST'                  50701300
.*-------------------------------------------------------------------   50705600
.***AM.L09  XSRCERRL F                                                  50709900
&ZOPN                 SETA &ZOPN+1                                      50714200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSRCERRL'                         50718500
&ZOPO(&ZOPN)          SETC 'DS'                                         50722800
&ZOPV(&ZOPN)          SETC 'F'                                          50727100
&ZOPD(&ZOPN)          SETC '++ &ZXSRCERRL  XSRCERRL'                    50731400
.*-------------------------------------------------------------------   50735700
.***AM.L09  XTARGERRL F                                                 50740000
&ZOPN                 SETA &ZOPN+1                                      50744300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGERRL'                        50748600
&ZOPO(&ZOPN)          SETC 'DS'                                         50752900
&ZOPV(&ZOPN)          SETC 'F'                                          50757200
&ZOPD(&ZOPN)          SETC '++ &ZXTARGERRL  XTARGERRL'                  50761500
.*-------------------------------------------------------------------   50765800
.***AM.L09  XUTILRTN F                                                  50770100
&ZOPN                 SETA &ZOPN+1                                      50774400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUTILRTN'                         50778700
&ZOPO(&ZOPN)          SETC 'DS'                                         50783000
&ZOPV(&ZOPN)          SETC 'F'                                          50787300
&ZOPD(&ZOPN)          SETC '++ &ZXUTILRTN  XUTILRTN'                    50791600
.*-------------------------------------------------------------------   50795900
.***AM.L09  XDS_INFO A                                                  50800200
&ZOPN                 SETA &ZOPN+1                                      50804500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDS_INFO'                         50808800
&ZOPO(&ZOPN)          SETC 'DS'                                         50813100
&ZOPV(&ZOPN)          SETC 'A'                                          50817400
&ZOPD(&ZOPN)          SETC '++ &ZXDS_INFO  XDS_INFO'                    50821700
.*-------------------------------------------------------------------   50826000
.***AM.L09  XSTATAREA A                                                 50830300
&ZOPN                 SETA &ZOPN+1                                      50834600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTATAREA'                        50838900
&ZOPO(&ZOPN)          SETC 'DS'                                         50843200
&ZOPV(&ZOPN)          SETC 'A'                                          50847500
&ZOPD(&ZOPN)          SETC '++ &ZXSTATAREA  XSTATAREA'                  50851800
.*-------------------------------------------------------------------   50856100
.***AM.L09  XTHREAD CL4                                                 50860400
&ZOPN                 SETA &ZOPN+1                                      50864700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTHREAD'                          50869000
&ZOPO(&ZOPN)          SETC 'DS'                                         50873300
&ZOPV(&ZOPN)          SETC 'CL4'                                        50877600
&ZOPD(&ZOPN)          SETC '++ &ZXTHREAD  XTHREAD'                      50881900
.*-------------------------------------------------------------------   50886200
.***AM.L09  XPADCHAR CL1                                                50890500
&ZOPN                 SETA &ZOPN+1                                      50894800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPADCHAR'                         50899100
&ZOPO(&ZOPN)          SETC 'DS'                                         50903400
&ZOPV(&ZOPN)          SETC 'CL1'                                        50907700
&ZOPD(&ZOPN)          SETC '++ &ZXPADCHAR  XPADCHAR'                    50912000
.*-------------------------------------------------------------------   50916300
.***AM.L05 XPAD XL1                                                     50920600
&ZOPN                 SETA &ZOPN+1                                      50924900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPAD'                             50929200
&ZOPO(&ZOPN)          SETC 'DS'                                         50933500
&ZOPV(&ZOPN)          SETC 'XL1'                                        50937800
&ZOPD(&ZOPN)          SETC '++ &ZXPAD XPAD'                             50942100
.*                                                                      50946400
&ZOPN                 SETA  &ZOPN+1                                     50950700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAD_NO'                         50955000
&ZOPO(&ZOPN)          SETC  'EQU'                                       50959300
&ZOPV(&ZOPN)          SETC  '0'                                         50963600
&ZOPD(&ZOPN)          SETC  '++ XPAD.'                                  50967900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           50972200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      50976500
.*                                                                      50980800
&ZOPN                 SETA  &ZOPN+1                                     50985100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAD_YES'                        50989400
&ZOPO(&ZOPN)          SETC  'EQU'                                       50993700
&ZOPV(&ZOPN)          SETC  '128'                                       50998000
&ZOPD(&ZOPN)          SETC  '++ XPAD.'                                  51002300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          51006600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      51010900
.*-------------------------------------------------------------------   51015200
.***AM.L09  XPOOLTOKN CL10                                              51019500
&ZOPN                 SETA &ZOPN+1                                      51023800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPOOLTOKN'                        51028100
&ZOPO(&ZOPN)          SETC 'DS'                                         51032400
&ZOPV(&ZOPN)          SETC 'CL10'                                       51036700
&ZOPD(&ZOPN)          SETC '++ &ZXPOOLTOKN  XPOOLTOKN'                  51041000
.*-------------------------------------------------------------------   51045300
.***AM.L05 XSKIPBUF XL1                                                 51049600
&ZOPN                 SETA &ZOPN+1                                      51053900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSKIPBUF'                         51058200
&ZOPO(&ZOPN)          SETC 'DS'                                         51062500
&ZOPV(&ZOPN)          SETC 'XL1'                                        51066800
&ZOPD(&ZOPN)          SETC '++ &ZXSKIPBUF XSKIPBUF'                     51071100
.*                                                                      51075400
&ZOPN                 SETA  &ZOPN+1                                     51079700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKIPBUF_NO'                     51084000
&ZOPO(&ZOPN)          SETC  'EQU'                                       51088300
&ZOPV(&ZOPN)          SETC  '0'                                         51092600
&ZOPD(&ZOPN)          SETC  '++ XSKIPBUF.'                              51096900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           51101200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      51105500
.*                                                                      51109800
&ZOPN                 SETA  &ZOPN+1                                     51114100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKIPBUF_YES'                    51118400
&ZOPO(&ZOPN)          SETC  'EQU'                                       51122700
&ZOPV(&ZOPN)          SETC  '128'                                       51127000
&ZOPD(&ZOPN)          SETC  '++ XSKIPBUF.'                              51131300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          51135600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      51139900
.*-------------------------------------------------------------------   51144200
.***AM.L05 XCSMUSER XL1                                                 51148500
&ZOPN                 SETA &ZOPN+1                                      51152800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCSMUSER'                         51157100
&ZOPO(&ZOPN)          SETC 'DS'                                         51161400
&ZOPV(&ZOPN)          SETC 'XL1'                                        51165700
&ZOPD(&ZOPN)          SETC '++ &ZXCSMUSER XCSMUSER'                     51170000
.*                                                                      51174300
&ZOPN                 SETA  &ZOPN+1                                     51178600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCSMUSER_NO'                     51182900
&ZOPO(&ZOPN)          SETC  'EQU'                                       51187200
&ZOPV(&ZOPN)          SETC  '0'                                         51191500
&ZOPD(&ZOPN)          SETC  '++ XCSMUSER.'                              51195800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           51200100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      51204400
.*                                                                      51208700
&ZOPN                 SETA  &ZOPN+1                                     51213000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCSMUSER_YES'                    51217300
&ZOPO(&ZOPN)          SETC  'EQU'                                       51221600
&ZOPV(&ZOPN)          SETC  '128'                                       51225900
&ZOPD(&ZOPN)          SETC  '++ XCSMUSER.'                              51230200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          51234500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      51238800
.*-------------------------------------------------------------------   51243100
.***AM.L09  XRSV001 CL2                                                 51247400
&ZOPN                 SETA &ZOPN+1                                      51251700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          51256000
&ZOPO(&ZOPN)          SETC 'DS'                                         51260300
&ZOPV(&ZOPN)          SETC 'CL2'                                        51264600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       51268900
.*-------------------------------------------------------------------   51273200
.***AM.MLM1 SAVED LOCATION COUNTER                                      51277500
                      AIF  ('&ZENDBASEPL' NE '').ZL67LB                 51281800
&ZENDBASEPL           SETC 'YES'                                        51286100
&ZOPN                 SETA &ZOPN+1                                      51290400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           51294700
&ZOPO(&ZOPN)          SETC 'EQU'                                        51299000
&ZOPV(&ZOPN)          SETC '*'                                          51303300
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       51307600
.ZL67LB               ANOP  ,                                           51311900
.*-------------------------------------------------------------------   51316200
.***AM.PJR1 DEFINED ON XPOOLTOKN                                        51320500
&ZOPN                 SETA &ZOPN+1                                      51324800
&ZOPL(&ZOPN)          SETC ' '                                          51329100
&ZOPO(&ZOPN)          SETC 'ORG'                                        51333400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+102'                              51337700
&ZOPD(&ZOPN)          SETC ' '                                          51342000
.*-------------------------------------------------------------------   51346300
.***AM.L09  XRETPTOKN CL10                                              51350600
&ZOPN                 SETA &ZOPN+1                                      51354900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETPTOKN'                        51359200
&ZOPO(&ZOPN)          SETC 'DS'                                         51363500
&ZOPV(&ZOPN)          SETC 'CL10'                                       51367800
&ZOPD(&ZOPN)          SETC '++ &ZXRETPTOKN  XRETPTOKN'                  51372100
&ZOPN                 SETA &ZOPN+1                                      51376400
&ZOPL(&ZOPN)          SETC ' '                                          51380700
&ZOPO(&ZOPN)          SETC 'ORG'                                        51385000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           51389300
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     51393600
.*-------------------------------------------------------------------   51397900
.***AM.L10 END OF IVTCSM LIST PARAMETERS                                51402200
&ZOPN                 SETA &ZOPN+1                                      51406500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 51410800
&ZOPO(&ZOPN)          SETC 'EQU'                                        51415100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 51419400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         51423700
.*                                                                      51428000
&ZOPN                 SETA &ZOPN+1                                      51432300
&ZOPL(&ZOPN)          SETC ' '                                          51436600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      51440900
&ZOPV(&ZOPN)          SETC '1'                                          51445200
&ZOPD(&ZOPN)          SETC ' '                                          51449500
.*-------------------------------------------------------------------   51453800
.***AL.L12 IVTCSM FMT=LIST MF=S|L PARAMETERS                            51458100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         51462400
.*                                                                      51466700
&ZOPN                 SETA  &ZOPN+1                                     51471000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                51475300
&ZOPO(&ZOPN)          SETC  'DC'                                        51479600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   51483900
&ZOPD(&ZOPN)          SETC  '++ IVTCSM ARG PARMS'                       51488200
.*                                                                      51492500
.ZLMFSLX              ANOP  ,                                           51496800
.*-------------------------------------------------------------------   51501100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          51505400
&ZPLLEN               SETA 116                                          51509700
.*                                                                      51514000
.******************************************************************     51518300
.***AI.L01 IVTCSM FMT=LIST FILL IN PARAMETER AREA                       51522600
.******************************************************************     51526900
                      ACTR  10000                                       51531200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               51535500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    51539800
&ZCVAL                SETC  'LAE'          XAX MODE                     51544100
.ZIMFXA               ANOP ,                                            51548400
.*                                                                      51552700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    51557000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         51561300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 51565600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                51569900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 51574200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                51578500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   51582800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    51587100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   51591400
&ZOPN                 SETA  &ZOPN+1                                     51595700
&ZOPL(&ZOPN)          SETC  ' '                                         51600000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    51604300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              51608600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       51612900
                      AGO   .ZIMFNX                                     51617200
.*                                                                      51621500
.ZIMFN2               ANOP ,                                            51625800
&ZOPN                 SETA  &ZOPN+1                                     51630100
&ZOPL(&ZOPN)          SETC  ' '                                         51634400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    51638700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                51643000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       51647300
.ZIMFNX               ANOP ,                                            51651600
.********************************************************************   51655900
.***AI.L02 IVTCSM FMT=LIST INITIALIZE PARAMETER AREA                    51660200
.********************************************************************   51664500
.***AI.L03 MF=(SLME)                                                    51668800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      51673100
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            51677400
.*                                                                      51681700
&ZOPN                 SETA  &ZOPN+1                                     51686000
&ZOPL(&ZOPN)          SETC  ' '                                         51690300
&ZOPO(&ZOPN)          SETC  'XC'                                        51694600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         51698900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             51703200
.ZIMFLX               ANOP  ,                                           51707500
.*-------------------------------------------------------------------   51711800
.***AI.L07 XBUFSOURC AL1                                                51716100
&ZW                   SETC  ''                                          51720400
.*-------------------------------------------------------------------   51724700
.***AI.L15 XBUFSOURC "ECSA" AL1                                         51729000
         AIF   ('&XBUFSOURC' NE 'ECSA').ZI3A                            51733300
&ZW                   SETC  '128'                                       51737600
.ZI3A                 ANOP  ,                                           51741900
.*-------------------------------------------------------------------   51746200
.***AI.L15 XBUFSOURC "DSPACE" AL1                                       51750500
         AIF   ('&XBUFSOURC' NE 'DSPACE').ZI4A                          51754800
&ZW                   SETC  '64'                                        51759100
.ZI4A                 ANOP  ,                                           51763400
.*-------------------------------------------------------------------   51767700
.***AI.L17 XBUFSOURC AL1                                                51772000
                      AIF   ('&ZW' NE '0').ZI4C                         51776300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI4B              51780600
.ZI4C                 ANOP  ,                                           51784900
                      AIF   ('&ZW' EQ '').ZI4B                          51789200
.*                                                                      51793500
&ZOPN                 SETA  &ZOPN+1                                     51797800
&ZOPL(&ZOPN)          SETC  ' '                                         51802100
&ZOPO(&ZOPN)          SETC  'MVI'                                       51806400
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  51810700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSOURC XBUFSOURC'                  51815000
.ZI4B                 ANOP  ,                                           51819300
.*-------------------------------------------------------------------   51823600
.***AI.L07 XBUFTYPE AL1                                                 51827900
&ZW                   SETC  ''                                          51832200
.*-------------------------------------------------------------------   51836500
.***AI.L15 XBUFTYPE "SAME" AL1                                          51840800
         AIF   ('&XBUFTYPE' NE 'SAME').ZI6A                             51845100
&ZW                   SETC  '0'                                         51849400
.ZI6A                 ANOP  ,                                           51853700
.*-------------------------------------------------------------------   51858000
.***AI.L15 XBUFTYPE "FIXED" AL1                                         51862300
         AIF   ('&XBUFTYPE' NE 'FIXED').ZI7A                            51866600
&ZW                   SETC  '128'                                       51870900
.ZI7A                 ANOP  ,                                           51875200
.*-------------------------------------------------------------------   51879500
.***AI.L15 XBUFTYPE "PAGEABLE" AL1                                      51883800
         AIF   ('&XBUFTYPE' NE 'PAGEABLE').ZI8A                         51888100
&ZW                   SETC  '64'                                        51892400
.ZI8A                 ANOP  ,                                           51896700
.*-------------------------------------------------------------------   51901000
.***AI.L15 XBUFTYPE "PAGEELIG" AL1                                      51905300
         AIF   ('&XBUFTYPE' NE 'PAGEELIG').ZI9A                         51909600
&ZW                   SETC  '32'                                        51913900
.ZI9A                 ANOP  ,                                           51918200
.*-------------------------------------------------------------------   51922500
.***AI.L17 XBUFTYPE AL1                                                 51926800
                      AIF   ('&ZW' NE '0').ZI9C                         51931100
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI9B              51935400
.ZI9C                 ANOP  ,                                           51939700
                      AIF   ('&ZW' EQ '').ZI9B                          51944000
.*                                                                      51948300
&ZOPN                 SETA  &ZOPN+1                                     51952600
&ZOPL(&ZOPN)          SETC  ' '                                         51956900
&ZOPO(&ZOPN)          SETC  'MVI'                                       51961200
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  51965500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFTYPE XBUFTYPE'                    51969800
.ZI9B                 ANOP  ,                                           51974100
.*-------------------------------------------------------------------   51978400
.***AI.L07 XCLEAR AL1                                                   51982700
&ZW                   SETC  ''                                          51987000
.*-------------------------------------------------------------------   51991300
.***AI.L15 XCLEAR "NO" AL1                                              51995600
         AIF   ('&XCLEAR' NE 'NO').ZI11A                                51999900
&ZW                   SETC  '0'                                         52004200
.ZI11A                ANOP  ,                                           52008500
.*-------------------------------------------------------------------   52012800
.***AI.L15 XCLEAR "YES" AL1                                             52017100
         AIF   ('&XCLEAR' NE 'YES').ZI12A                               52021400
&ZW                   SETC  '128'                                       52025700
.ZI12A                ANOP  ,                                           52030000
.*-------------------------------------------------------------------   52034300
.***AI.L17 XCLEAR AL1                                                   52038600
                      AIF   ('&ZW' NE '0').ZI12C                        52042900
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI12B             52047200
.ZI12C                ANOP  ,                                           52051500
                      AIF   ('&ZW' EQ '').ZI12B                         52055800
.*                                                                      52060100
&ZOPN                 SETA  &ZOPN+1                                     52064400
&ZOPL(&ZOPN)          SETC  ' '                                         52068700
&ZOPO(&ZOPN)          SETC  'MVI'                                       52073000
&ZOPV(&ZOPN)          SETC  '3(1),&ZW'                                  52077300
&ZOPD(&ZOPN)          SETC  '++ &ZXCLEAR XCLEAR'                        52081600
.ZI12B                ANOP  ,                                           52085900
.*-------------------------------------------------------------------   52090200
.***AI.L07 XWAIT AL1                                                    52094500
&ZW                   SETC  ''                                          52098800
.*-------------------------------------------------------------------   52103100
.***AI.L15 XWAIT "NO" AL1                                               52107400
         AIF   ('&XWAIT' NE 'NO').ZI14A                                 52111700
&ZW                   SETC  '0'                                         52116000
.ZI14A                ANOP  ,                                           52120300
.*-------------------------------------------------------------------   52124600
.***AI.L15 XWAIT "YES" AL1                                              52128900
         AIF   ('&XWAIT' NE 'YES').ZI15A                                52133200
&ZW                   SETC  '128'                                       52137500
.ZI15A                ANOP  ,                                           52141800
.*-------------------------------------------------------------------   52146100
.***AI.L15 XWAIT "EXPAND" AL1                                           52150400
         AIF   ('&XWAIT' NE 'EXPAND').ZI16A                             52154700
&ZW                   SETC  '64'                                        52159000
.ZI16A                ANOP  ,                                           52163300
.*-------------------------------------------------------------------   52167600
.***AI.L17 XWAIT AL1                                                    52171900
                      AIF   ('&ZW' NE '0').ZI16C                        52176200
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI16B             52180500
.ZI16C                ANOP  ,                                           52184800
                      AIF   ('&ZW' EQ '').ZI16B                         52189100
.*                                                                      52193400
&ZOPN                 SETA  &ZOPN+1                                     52197700
&ZOPL(&ZOPN)          SETC  ' '                                         52202000
&ZOPO(&ZOPN)          SETC  'MVI'                                       52206300
&ZOPV(&ZOPN)          SETC  '4(1),&ZW'                                  52210600
&ZOPD(&ZOPN)          SETC  '++ &ZXWAIT XWAIT'                          52214900
.ZI16B                ANOP  ,                                           52219200
.*-------------------------------------------------------------------   52223500
.***AI.L07 XFREETO AL1                                                  52227800
&ZW                   SETC  ''                                          52232100
.*-------------------------------------------------------------------   52236400
.***AI.L15 XFREETO "USER" AL1                                           52240700
         AIF   ('&XFREETO' NE 'USER').ZI18A                             52245000
&ZW                   SETC  '128'                                       52249300
.ZI18A                ANOP  ,                                           52253600
.*-------------------------------------------------------------------   52257900
.***AI.L15 XFREETO "CSM" AL1                                            52262200
         AIF   ('&XFREETO' NE 'CSM').ZI19A                              52266500
&ZW                   SETC  '64'                                        52270800
.ZI19A                ANOP  ,                                           52275100
.*-------------------------------------------------------------------   52279400
.***AI.L17 XFREETO AL1                                                  52283700
                      AIF   ('&ZW' NE '0').ZI19C                        52288000
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI19B             52292300
.ZI19C                ANOP  ,                                           52296600
                      AIF   ('&ZW' EQ '').ZI19B                         52300900
.*                                                                      52305200
&ZOPN                 SETA  &ZOPN+1                                     52309500
&ZOPL(&ZOPN)          SETC  ' '                                         52313800
&ZOPO(&ZOPN)          SETC  'MVI'                                       52318100
&ZOPV(&ZOPN)          SETC  '5(1),&ZW'                                  52322400
&ZOPD(&ZOPN)          SETC  '++ &ZXFREETO XFREETO'                      52326700
.ZI19B                ANOP  ,                                           52331000
.*-------------------------------------------------------------------   52335300
.***AI.L18  XOWNERID XL2                                                52339600
         AIF   ('&XOWNERID' NE '0').ZI20                                52343900
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI20  CK *        52348200
&ZXOWNERID            SETC  ''             RESET INPUT/OUTPUT           52352500
.ZI20                 ANOP  ,                                           52356800
.*-------------------------------------------------------------------   52361100
.***AI.L25  XOWNERID XL2                                                52365400
                      AIF   ('&ZXOWNERID' EQ '').ZI20E                  52369700
                      AIF   ('&ZXOWNERID' EQ 'OUTPUT').ZI20E            52374000
&ZCGPR                SETC  '&XOWNERID'                                 52378300
         AIF   ('&XOWNERID' NE '0').ZI20A                               52382600
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI20E                          52386900
.*                                                                      52391200
&ZCGPR                SETC  '=XL2''00'''                                52395500
.ZI20A                ANOP  ,                                           52399800
.*                                                                      52404100
                      AIF   ('&XOWNERID'(1,1) NE '(').ZI20B             52408400
&ZCGPR   SETC  '0('.'&XOWNERID'(2,K'&XOWNERID-2).')'                    52412700
                      AGO   .ZI20D                                      52417000
.ZI20B                ANOP  ,                                           52421300
.*                                                                      52425600
&ZC                   SETC  '&XOWNERID'(1,1)                            52429900
                      AIF   (T'&ZC NE 'N').ZI20D                        52434200
&ZC                   SETC  '&XOWNERID'                                 52438500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI20D               52442800
&ZCGPR                SETC  '=FL2''&XOWNERID'''                         52447100
.*                                                                      52451400
.ZI20D                ANOP  ,                                           52455700
.*                                                                      52460000
&ZOPN                 SETA  &ZOPN+1                                     52464300
&ZOPL(&ZOPN)          SETC  ' '                                         52468600
&ZOPO(&ZOPN)          SETC  'MVC'                                       52472900
&ZOPV(&ZOPN)          SETC  '6(2,1),&ZCGPR'                             52477200
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNERID XOWNERID'                    52481500
.*                                                                      52485800
.ZI20E                ANOP  ,                                           52490100
.*-------------------------------------------------------------------   52494400
.***AI.L07 XREQUEST A                                                   52498700
&ZW                   SETC  ''                                          52503000
.*-------------------------------------------------------------------   52507300
.***AI.L15 XREQUEST "CREATE_POOL" A                                     52511600
         AIF   ('&XREQUEST' NE 'CREATE_POOL').ZI22A                     52515900
&ZW                   SETC  '0'                                         52520200
.ZI22A                ANOP  ,                                           52524500
.*-------------------------------------------------------------------   52528800
.***AI.L15 XREQUEST "DELETE_POOL" A                                     52533100
         AIF   ('&XREQUEST' NE 'DELETE_POOL').ZI23A                     52537400
&ZW                   SETC  '1'                                         52541700
.ZI23A                ANOP  ,                                           52546000
.*-------------------------------------------------------------------   52550300
.***AI.L15 XREQUEST "GET_BUFFER" A                                      52554600
         AIF   ('&XREQUEST' NE 'GET_BUFFER').ZI24A                      52558900
&ZW                   SETC  '2'                                         52563200
.ZI24A                ANOP  ,                                           52567500
.*-------------------------------------------------------------------   52571800
.***AI.L15 XREQUEST "FREE_BUFFER" A                                     52576100
         AIF   ('&XREQUEST' NE 'FREE_BUFFER').ZI25A                     52580400
&ZW                   SETC  '3'                                         52584700
.ZI25A                ANOP  ,                                           52589000
.*-------------------------------------------------------------------   52593300
.***AI.L15 XREQUEST "ASSIGN_BUFFER" A                                   52597600
         AIF   ('&XREQUEST' NE 'ASSIGN_BUFFER').ZI26A                   52601900
&ZW                   SETC  '4'                                         52606200
.ZI26A                ANOP  ,                                           52610500
.*-------------------------------------------------------------------   52614800
.***AI.L15 XREQUEST "DUMP_INFO" A                                       52619100
         AIF   ('&XREQUEST' NE 'DUMP_INFO').ZI27A                       52623400
&ZW                   SETC  '5'                                         52627700
.ZI27A                ANOP  ,                                           52632000
.*-------------------------------------------------------------------   52636300
.***AI.L15 XREQUEST "FIX_BUFFER" A                                      52640600
         AIF   ('&XREQUEST' NE 'FIX_BUFFER').ZI28A                      52644900
&ZW                   SETC  '6'                                         52649200
.ZI28A                ANOP  ,                                           52653500
.*-------------------------------------------------------------------   52657800
.***AI.L15 XREQUEST "PAGE_BUFFER" A                                     52662100
         AIF   ('&XREQUEST' NE 'PAGE_BUFFER').ZI29A                     52666400
&ZW                   SETC  '7'                                         52670700
.ZI29A                ANOP  ,                                           52675000
.*-------------------------------------------------------------------   52679300
.***AI.L15 XREQUEST "RESOURCE_STATS" A                                  52683600
         AIF   ('&XREQUEST' NE 'RESOURCE_STATS').ZI30A                  52687900
&ZW                   SETC  '8'                                         52692200
.ZI30A                ANOP  ,                                           52696500
.*-------------------------------------------------------------------   52700800
.***AI.L15 XREQUEST "COPY_DATA" A                                       52705100
         AIF   ('&XREQUEST' NE 'COPY_DATA').ZI31A                       52709400
&ZW                   SETC  '9'                                         52713700
.ZI31A                ANOP  ,                                           52718000
.*-------------------------------------------------------------------   52722300
.***AI.L15 XREQUEST "CHANGE_OWNER" A                                    52726600
         AIF   ('&XREQUEST' NE 'CHANGE_OWNER').ZI32A                    52730900
&ZW                   SETC  '100'                                       52735200
.ZI32A                ANOP  ,                                           52739500
.*-------------------------------------------------------------------   52743800
.***AI.L15 XREQUEST A                                                   52748100
                      AIF   ('&ZW' NE '0').ZI32C                        52752400
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI32B             52756700
.ZI32C                ANOP  ,                                           52761000
                      AIF   ('&ZW' EQ '').ZI32B                         52765300
.*                                                                      52769600
&ZOPN                 SETA  &ZOPN+1                                     52773900
&ZOPL(&ZOPN)          SETC  ' '                                         52778200
&ZOPO(&ZOPN)          SETC  'MVC'                                       52782500
&ZOPV(&ZOPN)          SETC  '8(4,1),=A(&ZW)'                            52786800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    52791100
.ZI32B                ANOP  ,                                           52795400
.*-------------------------------------------------------------------   52799700
.***AI.L25  XBUFSIZE F                                                  52804000
                      AIF   ('&ZXBUFSIZE' EQ '').ZI33E                  52808300
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI33E            52812600
&ZCGPR                SETC  '&XBUFSIZE'                                 52816900
.*                                                                      52821200
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI33B             52825500
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    52829800
                      AGO   .ZI33D                                      52834100
.ZI33B                ANOP  ,                                           52838400
.*                                                                      52842700
&ZC                   SETC  '&XBUFSIZE'(1,1)                            52847000
                      AIF   (T'&ZC NE 'N').ZI33D                        52851300
&ZC                   SETC  '&XBUFSIZE'                                 52855600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI33D               52859900
&ZCGPR                SETC  '=FL4''&XBUFSIZE'''                         52864200
.*                                                                      52868500
.ZI33D                ANOP  ,                                           52872800
.*                                                                      52877100
&ZOPN                 SETA  &ZOPN+1                                     52881400
&ZOPL(&ZOPN)          SETC  ' '                                         52885700
&ZOPO(&ZOPN)          SETC  'MVC'                                       52890000
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            52894300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    52898600
.*                                                                      52902900
.ZI33E                ANOP  ,                                           52907200
.*-------------------------------------------------------------------   52911500
.***AI.L25  XINITBUF F                                                  52915800
                      AIF   ('&ZXINITBUF' EQ '').ZI34E                  52920100
                      AIF   ('&ZXINITBUF' EQ 'OUTPUT').ZI34E            52924400
&ZCGPR                SETC  '&XINITBUF'                                 52928700
.*                                                                      52933000
                      AIF   ('&XINITBUF'(1,1) NE '(').ZI34B             52937300
&ZCGPR   SETC  '0('.'&XINITBUF'(2,K'&XINITBUF-2).')'                    52941600
                      AGO   .ZI34D                                      52945900
.ZI34B                ANOP  ,                                           52950200
.*                                                                      52954500
&ZC                   SETC  '&XINITBUF'(1,1)                            52958800
                      AIF   (T'&ZC NE 'N').ZI34D                        52963100
&ZC                   SETC  '&XINITBUF'                                 52967400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               52971700
&ZCGPR                SETC  '=FL4''&XINITBUF'''                         52976000
.*                                                                      52980300
.ZI34D                ANOP  ,                                           52984600
.*                                                                      52988900
&ZOPN                 SETA  &ZOPN+1                                     52993200
&ZOPL(&ZOPN)          SETC  ' '                                         52997500
&ZOPO(&ZOPN)          SETC  'MVC'                                       53001800
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            53006100
&ZOPD(&ZOPN)          SETC  '++ &ZXINITBUF XINITBUF'                    53010400
.*                                                                      53014700
.ZI34E                ANOP  ,                                           53019000
.*-------------------------------------------------------------------   53023300
.***AI.L25  XMINFREE F                                                  53027600
                      AIF   ('&ZXMINFREE' EQ '').ZI35E                  53031900
                      AIF   ('&ZXMINFREE' EQ 'OUTPUT').ZI35E            53036200
&ZCGPR                SETC  '&XMINFREE'                                 53040500
.*                                                                      53044800
                      AIF   ('&XMINFREE'(1,1) NE '(').ZI35B             53049100
&ZCGPR   SETC  '0('.'&XMINFREE'(2,K'&XMINFREE-2).')'                    53053400
                      AGO   .ZI35D                                      53057700
.ZI35B                ANOP  ,                                           53062000
.*                                                                      53066300
&ZC                   SETC  '&XMINFREE'(1,1)                            53070600
                      AIF   (T'&ZC NE 'N').ZI35D                        53074900
&ZC                   SETC  '&XMINFREE'                                 53079200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               53083500
&ZCGPR                SETC  '=FL4''&XMINFREE'''                         53087800
.*                                                                      53092100
.ZI35D                ANOP  ,                                           53096400
.*                                                                      53100700
&ZOPN                 SETA  &ZOPN+1                                     53105000
&ZOPL(&ZOPN)          SETC  ' '                                         53109300
&ZOPO(&ZOPN)          SETC  'MVC'                                       53113600
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            53117900
&ZOPD(&ZOPN)          SETC  '++ &ZXMINFREE XMINFREE'                    53122200
.*                                                                      53126500
.ZI35E                ANOP  ,                                           53130800
.*-------------------------------------------------------------------   53135100
.***AI.L25  XEXPBUF F                                                   53139400
                      AIF   ('&ZXEXPBUF' EQ '').ZI36E                   53143700
                      AIF   ('&ZXEXPBUF' EQ 'OUTPUT').ZI36E             53148000
&ZCGPR                SETC  '&XEXPBUF'                                  53152300
.*                                                                      53156600
                      AIF   ('&XEXPBUF'(1,1) NE '(').ZI36B              53160900
&ZCGPR   SETC  '0('.'&XEXPBUF'(2,K'&XEXPBUF-2).')'                      53165200
                      AGO   .ZI36D                                      53169500
.ZI36B                ANOP  ,                                           53173800
.*                                                                      53178100
&ZC                   SETC  '&XEXPBUF'(1,1)                             53182400
                      AIF   (T'&ZC NE 'N').ZI36D                        53186700
&ZC                   SETC  '&XEXPBUF'                                  53191000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI36D               53195300
&ZCGPR                SETC  '=FL4''&XEXPBUF'''                          53199600
.*                                                                      53203900
.ZI36D                ANOP  ,                                           53208200
.*                                                                      53212500
&ZOPN                 SETA  &ZOPN+1                                     53216800
&ZOPL(&ZOPN)          SETC  ' '                                         53221100
&ZOPO(&ZOPN)          SETC  'MVC'                                       53225400
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            53229700
&ZOPD(&ZOPN)          SETC  '++ &ZXEXPBUF XEXPBUF'                      53234000
.*                                                                      53238300
.ZI36E                ANOP  ,                                           53242600
.*-------------------------------------------------------------------   53246900
.***AI.L25  XBUFNUM F                                                   53251200
                      AIF   ('&ZXBUFNUM' EQ '').ZI37E                   53255500
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI37E             53259800
&ZCGPR                SETC  '&XBUFNUM'                                  53264100
.*                                                                      53268400
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI37B              53272700
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      53277000
                      AGO   .ZI37D                                      53281300
.ZI37B                ANOP  ,                                           53285600
.*                                                                      53289900
&ZC                   SETC  '&XBUFNUM'(1,1)                             53294200
                      AIF   (T'&ZC NE 'N').ZI37D                        53298500
&ZC                   SETC  '&XBUFNUM'                                  53302800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI37D               53307100
&ZCGPR                SETC  '=FL4''&XBUFNUM'''                          53311400
.*                                                                      53315700
.ZI37D                ANOP  ,                                           53320000
.*                                                                      53324300
&ZOPN                 SETA  &ZOPN+1                                     53328600
&ZOPL(&ZOPN)          SETC  ' '                                         53332900
&ZOPO(&ZOPN)          SETC  'MVC'                                       53337200
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            53341500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      53345800
.*                                                                      53350100
.ZI37E                ANOP  ,                                           53354400
.*-------------------------------------------------------------------   53358700
.***AI.L19  XBUFLIST A                                                  53363000
                      AIF   ('&ZXBUFLIST' EQ '').ZI38H                  53367300
&ZCLNG                SETC  '&XBUFLIST'                                 53371600
&ZCGPR                SETC  '14'                                        53375900
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI38F  IN GPR                  53380200
.*                                                                      53384500
&ZOPN                 SETA  &ZOPN+1                                     53388800
&ZOPL(&ZOPN)          SETC  ' '                                         53393100
&ZOPO(&ZOPN)          SETC  'LA'                                        53397400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             53401700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    53406000
.*                                                                      53410300
                      AGO   .ZI38G                                      53414600
.*                                                                      53418900
.ZI38F                ANOP  ,                                           53423200
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             53427500
.*                                                                      53431800
.ZI38G                ANOP  ,                                           53436100
.*                                                                      53440400
&ZOPN                 SETA  &ZOPN+1                                     53444700
&ZOPL(&ZOPN)          SETC  ' '                                         53449000
&ZOPO(&ZOPN)          SETC  'ST'                                        53453300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             53457600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    53461900
.*                                                                      53466200
.ZI38H                ANOP  ,                                           53470500
.*-------------------------------------------------------------------   53474800
.***AI.L18  XTASKID AL4                                                 53479100
         AIF   ('&XTASKID' NE '0').ZI40                                 53483400
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI40  CK *        53487700
&ZXTASKID             SETC  ''             RESET INPUT/OUTPUT           53492000
.ZI40                 ANOP  ,                                           53496300
.*-------------------------------------------------------------------   53500600
.***AI.L25  XTASKID AL4                                                 53504900
                      AIF   ('&ZXTASKID' EQ '').ZI40E                   53509200
                      AIF   ('&ZXTASKID' EQ 'OUTPUT').ZI40E             53513500
&ZCGPR                SETC  '&XTASKID'                                  53517800
         AIF   ('&XTASKID' NE '0').ZI40A                                53522100
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI40E                          53526400
.*                                                                      53530700
&ZCGPR                SETC  '=XL4''00'''                                53535000
.ZI40A                ANOP  ,                                           53539300
.*                                                                      53543600
                      AIF   ('&XTASKID'(1,1) NE '(').ZI40B              53547900
&ZCGPR   SETC  '0('.'&XTASKID'(2,K'&XTASKID-2).')'                      53552200
                      AGO   .ZI40D                                      53556500
.ZI40B                ANOP  ,                                           53560800
.*                                                                      53565100
&ZC                   SETC  '&XTASKID'(1,1)                             53569400
                      AIF   (T'&ZC NE 'N').ZI40D                        53573700
&ZC                   SETC  '&XTASKID'                                  53578000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI40D               53582300
&ZCGPR                SETC  '=AL4(&XTASKID)'                            53586600
.*                                                                      53590900
.ZI40D                ANOP  ,                                           53595200
.*                                                                      53599500
&ZOPN                 SETA  &ZOPN+1                                     53603800
&ZOPL(&ZOPN)          SETC  ' '                                         53608100
&ZOPO(&ZOPN)          SETC  'MVC'                                       53612400
&ZOPV(&ZOPN)          SETC  '40(4,1),&ZCGPR'                            53616700
&ZOPD(&ZOPN)          SETC  '++ &ZXTASKID XTASKID'                      53621000
.*                                                                      53625300
.ZI40E                ANOP  ,                                           53629600
.*-------------------------------------------------------------------   53633900
.***AI.L18  XFREERTN AL4                                                53638200
         AIF   ('&XFREERTN' NE 'CSM').ZI41                              53642500
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI41  CK *        53646800
&ZXFREERTN            SETC  ''             RESET INPUT/OUTPUT           53651100
.ZI41                 ANOP  ,                                           53655400
.*-------------------------------------------------------------------   53659700
.***AI.L25  XFREERTN AL4                                                53664000
                      AIF   ('&ZXFREERTN' EQ '').ZI41E                  53668300
                      AIF   ('&ZXFREERTN' EQ 'OUTPUT').ZI41E            53672600
&ZCGPR                SETC  '&XFREERTN'                                 53676900
         AIF   ('&XFREERTN' NE 'CSM').ZI41A                             53681200
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI41E                          53685500
.*                                                                      53689800
&ZCGPR                SETC  '=XL4''00'''                                53694100
.ZI41A                ANOP  ,                                           53698400
.*                                                                      53702700
                      AIF   ('&XFREERTN'(1,1) NE '(').ZI41B             53707000
&ZCGPR   SETC  '0('.'&XFREERTN'(2,K'&XFREERTN-2).')'                    53711300
                      AGO   .ZI41D                                      53715600
.ZI41B                ANOP  ,                                           53719900
.*                                                                      53724200
&ZC                   SETC  '&XFREERTN'(1,1)                            53728500
                      AIF   (T'&ZC NE 'N').ZI41D                        53732800
&ZC                   SETC  '&XFREERTN'                                 53737100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI41D               53741400
&ZCGPR                SETC  '=AL4(&XFREERTN)'                           53745700
.*                                                                      53750000
.ZI41D                ANOP  ,                                           53754300
.*                                                                      53758600
&ZOPN                 SETA  &ZOPN+1                                     53762900
&ZOPL(&ZOPN)          SETC  ' '                                         53767200
&ZOPO(&ZOPN)          SETC  'MVC'                                       53771500
&ZOPV(&ZOPN)          SETC  '44(4,1),&ZCGPR'                            53775800
&ZOPD(&ZOPN)          SETC  '++ &ZXFREERTN XFREERTN'                    53780100
.*                                                                      53784400
.ZI41E                ANOP  ,                                           53788700
.*-------------------------------------------------------------------   53793000
.***AI.L18  XGAP F                                                      53797300
         AIF   ('&XGAP' NE '0').ZI42                                    53801600
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI42  CK *        53805900
&ZXGAP                SETC  ''             RESET INPUT/OUTPUT           53810200
.ZI42                 ANOP  ,                                           53814500
.*-------------------------------------------------------------------   53818800
.***AI.L25  XGAP F                                                      53823100
                      AIF   ('&ZXGAP' EQ '').ZI42E                      53827400
                      AIF   ('&ZXGAP' EQ 'OUTPUT').ZI42E                53831700
&ZCGPR                SETC  '&XGAP'                                     53836000
         AIF   ('&XGAP' NE '0').ZI42A                                   53840300
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI42E                          53844600
.*                                                                      53848900
&ZCGPR                SETC  '=XL4''00'''                                53853200
.ZI42A                ANOP  ,                                           53857500
.*                                                                      53861800
                      AIF   ('&XGAP'(1,1) NE '(').ZI42B                 53866100
&ZCGPR   SETC  '0('.'&XGAP'(2,K'&XGAP-2).')'                            53870400
                      AGO   .ZI42D                                      53874700
.ZI42B                ANOP  ,                                           53879000
.*                                                                      53883300
&ZC                   SETC  '&XGAP'(1,1)                                53887600
                      AIF   (T'&ZC NE 'N').ZI42D                        53891900
&ZC                   SETC  '&XGAP'                                     53896200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI42D               53900500
&ZCGPR                SETC  '=FL4''&XGAP'''                             53904800
.*                                                                      53909100
.ZI42D                ANOP  ,                                           53913400
.*                                                                      53917700
&ZOPN                 SETA  &ZOPN+1                                     53922000
&ZOPL(&ZOPN)          SETC  ' '                                         53926300
&ZOPO(&ZOPN)          SETC  'MVC'                                       53930600
&ZOPV(&ZOPN)          SETC  '48(4,1),&ZCGPR'                            53934900
&ZOPD(&ZOPN)          SETC  '++ &ZXGAP XGAP'                            53939200
.*                                                                      53943500
.ZI42E                ANOP  ,                                           53947800
.*-------------------------------------------------------------------   53952100
.***AI.L18  XSRCGAP F                                                   53956400
         AIF   ('&XSRCGAP' NE '0').ZI43                                 53960700
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI43  CK *        53965000
&ZXSRCGAP             SETC  ''             RESET INPUT/OUTPUT           53969300
.ZI43                 ANOP  ,                                           53973600
.*-------------------------------------------------------------------   53977900
.***AI.L25  XSRCGAP F                                                   53982200
                      AIF   ('&ZXSRCGAP' EQ '').ZI43E                   53986500
                      AIF   ('&ZXSRCGAP' EQ 'OUTPUT').ZI43E             53990800
&ZCGPR                SETC  '&XSRCGAP'                                  53995100
         AIF   ('&XSRCGAP' NE '0').ZI43A                                53999400
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI43E                          54003700
.*                                                                      54008000
&ZCGPR                SETC  '=XL4''00'''                                54012300
.ZI43A                ANOP  ,                                           54016600
.*                                                                      54020900
                      AIF   ('&XSRCGAP'(1,1) NE '(').ZI43B              54025200
&ZCGPR   SETC  '0('.'&XSRCGAP'(2,K'&XSRCGAP-2).')'                      54029500
                      AGO   .ZI43D                                      54033800
.ZI43B                ANOP  ,                                           54038100
.*                                                                      54042400
&ZC                   SETC  '&XSRCGAP'(1,1)                             54046700
                      AIF   (T'&ZC NE 'N').ZI43D                        54051000
&ZC                   SETC  '&XSRCGAP'                                  54055300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI43D               54059600
&ZCGPR                SETC  '=FL4''&XSRCGAP'''                          54063900
.*                                                                      54068200
.ZI43D                ANOP  ,                                           54072500
.*                                                                      54076800
&ZOPN                 SETA  &ZOPN+1                                     54081100
&ZOPL(&ZOPN)          SETC  ' '                                         54085400
&ZOPO(&ZOPN)          SETC  'MVC'                                       54089700
&ZOPV(&ZOPN)          SETC  '52(4,1),&ZCGPR'                            54094000
&ZOPD(&ZOPN)          SETC  '++ &ZXSRCGAP XSRCGAP'                      54098300
.*                                                                      54102600
.ZI43E                ANOP  ,                                           54106900
.*-------------------------------------------------------------------   54111200
.***AI.L18  XTARGGAP F                                                  54115500
         AIF   ('&XTARGGAP' NE '0').ZI44                                54119800
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI44  CK *        54124100
&ZXTARGGAP            SETC  ''             RESET INPUT/OUTPUT           54128400
.ZI44                 ANOP  ,                                           54132700
.*-------------------------------------------------------------------   54137000
.***AI.L25  XTARGGAP F                                                  54141300
                      AIF   ('&ZXTARGGAP' EQ '').ZI44E                  54145600
                      AIF   ('&ZXTARGGAP' EQ 'OUTPUT').ZI44E            54149900
&ZCGPR                SETC  '&XTARGGAP'                                 54154200
         AIF   ('&XTARGGAP' NE '0').ZI44A                               54158500
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI44E                          54162800
.*                                                                      54167100
&ZCGPR                SETC  '=XL4''00'''                                54171400
.ZI44A                ANOP  ,                                           54175700
.*                                                                      54180000
                      AIF   ('&XTARGGAP'(1,1) NE '(').ZI44B             54184300
&ZCGPR   SETC  '0('.'&XTARGGAP'(2,K'&XTARGGAP-2).')'                    54188600
                      AGO   .ZI44D                                      54192900
.ZI44B                ANOP  ,                                           54197200
.*                                                                      54201500
&ZC                   SETC  '&XTARGGAP'(1,1)                            54205800
                      AIF   (T'&ZC NE 'N').ZI44D                        54210100
&ZC                   SETC  '&XTARGGAP'                                 54214400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI44D               54218700
&ZCGPR                SETC  '=FL4''&XTARGGAP'''                         54223000
.*                                                                      54227300
.ZI44D                ANOP  ,                                           54231600
.*                                                                      54235900
&ZOPN                 SETA  &ZOPN+1                                     54240200
&ZOPL(&ZOPN)          SETC  ' '                                         54244500
&ZOPO(&ZOPN)          SETC  'MVC'                                       54248800
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            54253100
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGGAP XTARGGAP'                    54257400
.*                                                                      54261700
.ZI44E                ANOP  ,                                           54266000
.*-------------------------------------------------------------------   54270300
.***AI.L25  XSRCNUM F                                                   54274600
                      AIF   ('&ZXSRCNUM' EQ '').ZI45E                   54278900
                      AIF   ('&ZXSRCNUM' EQ 'OUTPUT').ZI45E             54283200
&ZCGPR                SETC  '&XSRCNUM'                                  54287500
.*                                                                      54291800
                      AIF   ('&XSRCNUM'(1,1) NE '(').ZI45B              54296100
&ZCGPR   SETC  '0('.'&XSRCNUM'(2,K'&XSRCNUM-2).')'                      54300400
                      AGO   .ZI45D                                      54304700
.ZI45B                ANOP  ,                                           54309000
.*                                                                      54313300
&ZC                   SETC  '&XSRCNUM'(1,1)                             54317600
                      AIF   (T'&ZC NE 'N').ZI45D                        54321900
&ZC                   SETC  '&XSRCNUM'                                  54326200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI45D               54330500
&ZCGPR                SETC  '=FL4''&XSRCNUM'''                          54334800
.*                                                                      54339100
.ZI45D                ANOP  ,                                           54343400
.*                                                                      54347700
&ZOPN                 SETA  &ZOPN+1                                     54352000
&ZOPL(&ZOPN)          SETC  ' '                                         54356300
&ZOPO(&ZOPN)          SETC  'MVC'                                       54360600
&ZOPV(&ZOPN)          SETC  '60(4,1),&ZCGPR'                            54364900
&ZOPD(&ZOPN)          SETC  '++ &ZXSRCNUM XSRCNUM'                      54369200
.*                                                                      54373500
.ZI45E                ANOP  ,                                           54377800
.*-------------------------------------------------------------------   54382100
.***AI.L25  XTARGNUM F                                                  54386400
                      AIF   ('&ZXTARGNUM' EQ '').ZI46E                  54390700
                      AIF   ('&ZXTARGNUM' EQ 'OUTPUT').ZI46E            54395000
&ZCGPR                SETC  '&XTARGNUM'                                 54399300
.*                                                                      54403600
                      AIF   ('&XTARGNUM'(1,1) NE '(').ZI46B             54407900
&ZCGPR   SETC  '0('.'&XTARGNUM'(2,K'&XTARGNUM-2).')'                    54412200
                      AGO   .ZI46D                                      54416500
.ZI46B                ANOP  ,                                           54420800
.*                                                                      54425100
&ZC                   SETC  '&XTARGNUM'(1,1)                            54429400
                      AIF   (T'&ZC NE 'N').ZI46D                        54433700
&ZC                   SETC  '&XTARGNUM'                                 54438000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI46D               54442300
&ZCGPR                SETC  '=FL4''&XTARGNUM'''                         54446600
.*                                                                      54450900
.ZI46D                ANOP  ,                                           54455200
.*                                                                      54459500
&ZOPN                 SETA  &ZOPN+1                                     54463800
&ZOPL(&ZOPN)          SETC  ' '                                         54468100
&ZOPO(&ZOPN)          SETC  'MVC'                                       54472400
&ZOPV(&ZOPN)          SETC  '64(4,1),&ZCGPR'                            54476700
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGNUM XTARGNUM'                    54481000
.*                                                                      54485300
.ZI46E                ANOP  ,                                           54489600
.*-------------------------------------------------------------------   54493900
.***AI.L19  XSRCLIST A                                                  54498200
                      AIF   ('&ZXSRCLIST' EQ '').ZI47H                  54502500
&ZCLNG                SETC  '&XSRCLIST'                                 54506800
&ZCGPR                SETC  '14'                                        54511100
         AIF   ('&XSRCLIST'(1,1) EQ '(').ZI47F  IN GPR                  54515400
.*                                                                      54519700
&ZOPN                 SETA  &ZOPN+1                                     54524000
&ZOPL(&ZOPN)          SETC  ' '                                         54528300
&ZOPO(&ZOPN)          SETC  'LA'                                        54532600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             54536900
&ZOPD(&ZOPN)          SETC  '++ &ZXSRCLIST XSRCLIST'                    54541200
.*                                                                      54545500
                      AGO   .ZI47G                                      54549800
.*                                                                      54554100
.ZI47F                ANOP  ,                                           54558400
&ZCGPR   SETC  '&XSRCLIST'(2,K'&XSRCLIST-2)                             54562700
.*                                                                      54567000
.ZI47G                ANOP  ,                                           54571300
.*                                                                      54575600
&ZOPN                 SETA  &ZOPN+1                                     54579900
&ZOPL(&ZOPN)          SETC  ' '                                         54584200
&ZOPO(&ZOPN)          SETC  'ST'                                        54588500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,68(,1)'                             54592800
&ZOPD(&ZOPN)          SETC  '++ &ZXSRCLIST XSRCLIST'                    54597100
.*                                                                      54601400
.ZI47H                ANOP  ,                                           54605700
.*-------------------------------------------------------------------   54610000
.***AI.L19  XTARGLIST A                                                 54614300
                      AIF   ('&ZXTARGLIST' EQ '').ZI48H                 54618600
&ZCLNG                SETC  '&XTARGLIST'                                54622900
&ZCGPR                SETC  '14'                                        54627200
         AIF   ('&XTARGLIST'(1,1) EQ '(').ZI48F  IN GPR                 54631500
.*                                                                      54635800
&ZOPN                 SETA  &ZOPN+1                                     54640100
&ZOPL(&ZOPN)          SETC  ' '                                         54644400
&ZOPO(&ZOPN)          SETC  'LA'                                        54648700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             54653000
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGLIST XTARGLIST'                  54657300
.*                                                                      54661600
                      AGO   .ZI48G                                      54665900
.*                                                                      54670200
.ZI48F                ANOP  ,                                           54674500
&ZCGPR   SETC  '&XTARGLIST'(2,K'&XTARGLIST-2)                           54678800
.*                                                                      54683100
.ZI48G                ANOP  ,                                           54687400
.*                                                                      54691700
&ZOPN                 SETA  &ZOPN+1                                     54696000
&ZOPL(&ZOPN)          SETC  ' '                                         54700300
&ZOPO(&ZOPN)          SETC  'ST'                                        54704600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,72(,1)'                             54708900
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGLIST XTARGLIST'                  54713200
.*                                                                      54717500
.ZI48H                ANOP  ,                                           54721800
.*-------------------------------------------------------------------   54726100
.***AI.L18  XUTILRTN F                                                  54730400
         AIF   ('&XUTILRTN' NE '0').ZI51                                54734700
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI51  CK *        54739000
&ZXUTILRTN            SETC  ''             RESET INPUT/OUTPUT           54743300
.ZI51                 ANOP  ,                                           54747600
.*-------------------------------------------------------------------   54751900
.***AI.L25  XUTILRTN F                                                  54756200
                      AIF   ('&ZXUTILRTN' EQ '').ZI51E                  54760500
                      AIF   ('&ZXUTILRTN' EQ 'OUTPUT').ZI51E            54764800
&ZCGPR                SETC  '&XUTILRTN'                                 54769100
         AIF   ('&XUTILRTN' NE '0').ZI51A                               54773400
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI51E                          54777700
.*                                                                      54782000
&ZCGPR                SETC  '=XL4''00'''                                54786300
.ZI51A                ANOP  ,                                           54790600
.*                                                                      54794900
                      AIF   ('&XUTILRTN'(1,1) NE '(').ZI51B             54799200
&ZCGPR   SETC  '0('.'&XUTILRTN'(2,K'&XUTILRTN-2).')'                    54803500
                      AGO   .ZI51D                                      54807800
.ZI51B                ANOP  ,                                           54812100
.*                                                                      54816400
&ZC                   SETC  '&XUTILRTN'(1,1)                            54820700
                      AIF   (T'&ZC NE 'N').ZI51D                        54825000
&ZC                   SETC  '&XUTILRTN'                                 54829300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI51D               54833600
&ZCGPR                SETC  '=FL4''&XUTILRTN'''                         54837900
.*                                                                      54842200
.ZI51D                ANOP  ,                                           54846500
.*                                                                      54850800
&ZOPN                 SETA  &ZOPN+1                                     54855100
&ZOPL(&ZOPN)          SETC  ' '                                         54859400
&ZOPO(&ZOPN)          SETC  'MVC'                                       54863700
&ZOPV(&ZOPN)          SETC  '84(4,1),&ZCGPR'                            54868000
&ZOPD(&ZOPN)          SETC  '++ &ZXUTILRTN XUTILRTN'                    54872300
.*                                                                      54876600
.ZI51E                ANOP  ,                                           54880900
.*-------------------------------------------------------------------   54885200
.***AI.L18  XTHREAD CL4                                                 54889500
         AIF   ('&XTHREAD' NE '0').ZI54                                 54893800
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI54  CK *        54898100
&ZXTHREAD             SETC  ''             RESET INPUT/OUTPUT           54902400
.ZI54                 ANOP  ,                                           54906700
.*-------------------------------------------------------------------   54911000
.***AI.L25  XTHREAD CL4                                                 54915300
                      AIF   ('&ZXTHREAD' EQ '').ZI54E                   54919600
                      AIF   ('&ZXTHREAD' EQ 'OUTPUT').ZI54E             54923900
&ZCGPR                SETC  '&XTHREAD'                                  54928200
         AIF   ('&XTHREAD' NE '0').ZI54A                                54932500
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI54E                          54936800
.*                                                                      54941100
&ZCGPR                SETC  '=XL4''00'''                                54945400
.ZI54A                ANOP  ,                                           54949700
.*                                                                      54954000
                      AIF   ('&XTHREAD'(1,1) NE '(').ZI54B              54958300
&ZCGPR   SETC  '0('.'&XTHREAD'(2,K'&XTHREAD-2).')'                      54962600
.ZI54B                ANOP  ,                                           54966900
.*                                                                      54971200
&ZOPN                 SETA  &ZOPN+1                                     54975500
&ZOPL(&ZOPN)          SETC  ' '                                         54979800
&ZOPO(&ZOPN)          SETC  'MVC'                                       54984100
&ZOPV(&ZOPN)          SETC  '96(4,1),&ZCGPR'                            54988400
&ZOPD(&ZOPN)          SETC  '++ &ZXTHREAD XTHREAD'                      54992700
.*                                                                      54997000
.ZI54E                ANOP  ,                                           55001300
.*-------------------------------------------------------------------   55005600
.***AI.L25  XPADCHAR CL1                                                55009900
                      AIF   ('&ZXPADCHAR' EQ '').ZI55E                  55014200
                      AIF   ('&ZXPADCHAR' EQ 'OUTPUT').ZI55E            55018500
&ZCGPR                SETC  '&XPADCHAR'                                 55022800
.*                                                                      55027100
                      AIF   ('&XPADCHAR'(1,1) NE '(').ZI55B             55031400
&ZCGPR   SETC  '0('.'&XPADCHAR'(2,K'&XPADCHAR-2).')'                    55035700
.ZI55B                ANOP  ,                                           55040000
.*                                                                      55044300
&ZOPN                 SETA  &ZOPN+1                                     55048600
&ZOPL(&ZOPN)          SETC  ' '                                         55052900
&ZOPO(&ZOPN)          SETC  'MVC'                                       55057200
&ZOPV(&ZOPN)          SETC  '100(1,1),&ZCGPR'                           55061500
&ZOPD(&ZOPN)          SETC  '++ &ZXPADCHAR XPADCHAR'                    55065800
.*                                                                      55070100
.ZI55E                ANOP  ,                                           55074400
.*-------------------------------------------------------------------   55078700
.***AI.L07 XPAD AL1                                                     55083000
&ZW                   SETC  ''                                          55087300
.*-------------------------------------------------------------------   55091600
.***AI.L15 XPAD "NO" AL1                                                55095900
         AIF   ('&XPAD' NE 'NO').ZI57A                                  55100200
&ZW                   SETC  '0'                                         55104500
.ZI57A                ANOP  ,                                           55108800
.*-------------------------------------------------------------------   55113100
.***AI.L15 XPAD "YES" AL1                                               55117400
         AIF   ('&XPAD' NE 'YES').ZI58A                                 55121700
&ZW                   SETC  '128'                                       55126000
.ZI58A                ANOP  ,                                           55130300
.*-------------------------------------------------------------------   55134600
.***AI.L17 XPAD AL1                                                     55138900
                      AIF   ('&ZW' NE '0').ZI58C                        55143200
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI58B             55147500
.ZI58C                ANOP  ,                                           55151800
                      AIF   ('&ZW' EQ '').ZI58B                         55156100
.*                                                                      55160400
&ZOPN                 SETA  &ZOPN+1                                     55164700
&ZOPL(&ZOPN)          SETC  ' '                                         55169000
&ZOPO(&ZOPN)          SETC  'MVI'                                       55173300
&ZOPV(&ZOPN)          SETC  '101(1),&ZW'                                55177600
&ZOPD(&ZOPN)          SETC  '++ &ZXPAD XPAD'                            55181900
.ZI58B                ANOP  ,                                           55186200
.*-------------------------------------------------------------------   55190500
.***AI.L25  XPOOLTOKN CL10                                              55194800
                      AIF   ('&ZXPOOLTOKN' EQ '').ZI59E                 55199100
                      AIF   ('&ZXPOOLTOKN' EQ 'OUTPUT').ZI59E           55203400
&ZCGPR                SETC  '&XPOOLTOKN'                                55207700
.*                                                                      55212000
                      AIF   ('&XPOOLTOKN'(1,1) NE '(').ZI59B            55216300
&ZCGPR   SETC  '0('.'&XPOOLTOKN'(2,K'&XPOOLTOKN-2).')'                  55220600
.ZI59B                ANOP  ,                                           55224900
.*                                                                      55229200
&ZOPN                 SETA  &ZOPN+1                                     55233500
&ZOPL(&ZOPN)          SETC  ' '                                         55237800
&ZOPO(&ZOPN)          SETC  'MVC'                                       55242100
&ZOPV(&ZOPN)          SETC  '102(10,1),&ZCGPR'                          55246400
&ZOPD(&ZOPN)          SETC  '++ &ZXPOOLTOKN XPOOLTOKN'                  55250700
.*                                                                      55255000
.ZI59E                ANOP  ,                                           55259300
.*-------------------------------------------------------------------   55263600
.***AI.L07 XSKIPBUF AL1                                                 55267900
&ZW                   SETC  ''                                          55272200
.*-------------------------------------------------------------------   55276500
.***AI.L15 XSKIPBUF "NO" AL1                                            55280800
         AIF   ('&XSKIPBUF' NE 'NO').ZI61A                              55285100
&ZW                   SETC  '0'                                         55289400
.ZI61A                ANOP  ,                                           55293700
.*-------------------------------------------------------------------   55298000
.***AI.L15 XSKIPBUF "YES" AL1                                           55302300
         AIF   ('&XSKIPBUF' NE 'YES').ZI62A                             55306600
&ZW                   SETC  '128'                                       55310900
.ZI62A                ANOP  ,                                           55315200
.*-------------------------------------------------------------------   55319500
.***AI.L17 XSKIPBUF AL1                                                 55323800
                      AIF   ('&ZW' NE '0').ZI62C                        55328100
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI62B             55332400
.ZI62C                ANOP  ,                                           55336700
                      AIF   ('&ZW' EQ '').ZI62B                         55341000
.*                                                                      55345300
&ZOPN                 SETA  &ZOPN+1                                     55349600
&ZOPL(&ZOPN)          SETC  ' '                                         55353900
&ZOPO(&ZOPN)          SETC  'MVI'                                       55358200
&ZOPV(&ZOPN)          SETC  '112(1),&ZW'                                55362500
&ZOPD(&ZOPN)          SETC  '++ &ZXSKIPBUF XSKIPBUF'                    55366800
.ZI62B                ANOP  ,                                           55371100
.*-------------------------------------------------------------------   55375400
.***AI.L07 XCSMUSER AL1                                                 55379700
&ZW                   SETC  ''                                          55384000
.*-------------------------------------------------------------------   55388300
.***AI.L15 XCSMUSER "NO" AL1                                            55392600
         AIF   ('&XCSMUSER' NE 'NO').ZI64A                              55396900
&ZW                   SETC  '0'                                         55401200
.ZI64A                ANOP  ,                                           55405500
.*-------------------------------------------------------------------   55409800
.***AI.L15 XCSMUSER "YES" AL1                                           55414100
         AIF   ('&XCSMUSER' NE 'YES').ZI65A                             55418400
&ZW                   SETC  '128'                                       55422700
.ZI65A                ANOP  ,                                           55427000
.*-------------------------------------------------------------------   55431300
.***AI.L17 XCSMUSER AL1                                                 55435600
                      AIF   ('&ZW' NE '0').ZI65C                        55439900
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI65B             55444200
.ZI65C                ANOP  ,                                           55448500
                      AIF   ('&ZW' EQ '').ZI65B                         55452800
.*                                                                      55457100
&ZOPN                 SETA  &ZOPN+1                                     55461400
&ZOPL(&ZOPN)          SETC  ' '                                         55465700
&ZOPO(&ZOPN)          SETC  'MVI'                                       55470000
&ZOPV(&ZOPN)          SETC  '113(1),&ZW'                                55474300
&ZOPD(&ZOPN)          SETC  '++ &ZXCSMUSER XCSMUSER'                    55478600
.ZI65B                ANOP  ,                                           55482900
.*-------------------------------------------------------------------   55487200
&ZOPN1                SETA &ZOPN                                        55491500
.*-------------------------------------------------------------------   55495800
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              55500100
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         55504400
.*******************************************************************    55508700
.***  PROCESS IVTCSM OUTPUT PARAMETERS                                  55513000
.*******************************************************************    55517300
                      ACTR  10000                                       55521600
.*------------------------------------------------------------------    55525900
.***AO.L02 XERRBFLST F                                                  55530200
         AIF   ('&ZXERRBFLST' EQ 'OUTPUT').ZO39A  OUTPUT                55534500
         AIF   ('&ZXERRBFLST' NE 'INOUT').ZO39C  INOUT                  55538800
.ZO39A    AIF   ('&XERRBFLST'(1,1) NE '(').ZO39B  ADDR IN GPR           55543100
&ZCGPR   SETC  '&XERRBFLST'(2,K'&XERRBFLST-2)                           55547400
&ZOPN                 SETA  &ZOPN+1                                     55551700
&ZOPL(&ZOPN)          SETC  ' '                                         55556000
&ZOPO(&ZOPN)          SETC  'MVC'                                       55560300
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),36(1)'                         55564600
&ZOPD(&ZOPN)          SETC  '++ XERRBFLST F'                            55568900
                      AGO   .ZO39C                                      55573200
.*                                                                      55577500
.ZO39B                ANOP  ,                                           55581800
&ZAWRK   SETA  K'&XERRBFLST                                             55586100
         AIF   ('&XERRBFLST'(&ZAWRK,1) NE ')').ZO39G                    55590400
&ZN      SETA  2                                                        55594700
.ZO39H    ANOP                                                          55599000
         AIF   (&ZN GE &ZAWRK).ZO39G                                    55603300
         AIF   ('&XERRBFLST'(&ZN,1) NE '(').ZO39I                       55607600
&ZC      SETC  '&XERRBFLST'(1,&ZN).'4'.','                              55611900
&ZC      SETC  '&ZC'.'&XERRBFLST'(&ZN+1,&ZAWRK-&ZN).',36(1)'            55616200
         AGO   .ZO39J                                                   55620500
.ZO39I    ANOP                                                          55624800
&ZN      SETA  &ZN+1                                                    55629100
         AGO   .ZO39H                                                   55633400
.ZO39G    ANOP                                                          55637700
&ZC      SETC  '&XERRBFLST.(4),36(1)'                                   55642000
.ZO39J    ANOP                                                          55646300
&ZOPN                 SETA  &ZOPN+1                                     55650600
&ZOPL(&ZOPN)          SETC  ' '                                         55654900
&ZOPO(&ZOPN)          SETC  'MVC'                                       55659200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       55663500
&ZOPD(&ZOPN)          SETC  '++ XERRBFLST F'                            55667800
.ZO39C                ANOP  ,                                           55672100
.*------------------------------------------------------------------    55676400
.***AO.L02 XSRCERRL F                                                   55680700
         AIF   ('&ZXSRCERRL' EQ 'OUTPUT').ZO49A  OUTPUT                 55685000
         AIF   ('&ZXSRCERRL' NE 'INOUT').ZO49C  INOUT                   55689300
.ZO49A    AIF   ('&XSRCERRL'(1,1) NE '(').ZO49B  ADDR IN GPR            55693600
&ZCGPR   SETC  '&XSRCERRL'(2,K'&XSRCERRL-2)                             55697900
&ZOPN                 SETA  &ZOPN+1                                     55702200
&ZOPL(&ZOPN)          SETC  ' '                                         55706500
&ZOPO(&ZOPN)          SETC  'MVC'                                       55710800
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),76(1)'                         55715100
&ZOPD(&ZOPN)          SETC  '++ XSRCERRL F'                             55719400
                      AGO   .ZO49C                                      55723700
.*                                                                      55728000
.ZO49B                ANOP  ,                                           55732300
&ZAWRK   SETA  K'&XSRCERRL                                              55736600
         AIF   ('&XSRCERRL'(&ZAWRK,1) NE ')').ZO49G                     55740900
&ZN      SETA  2                                                        55745200
.ZO49H    ANOP                                                          55749500
         AIF   (&ZN GE &ZAWRK).ZO49G                                    55753800
         AIF   ('&XSRCERRL'(&ZN,1) NE '(').ZO49I                        55758100
&ZC      SETC  '&XSRCERRL'(1,&ZN).'4'.','                               55762400
&ZC      SETC  '&ZC'.'&XSRCERRL'(&ZN+1,&ZAWRK-&ZN).',76(1)'             55766700
         AGO   .ZO49J                                                   55771000
.ZO49I    ANOP                                                          55775300
&ZN      SETA  &ZN+1                                                    55779600
         AGO   .ZO49H                                                   55783900
.ZO49G    ANOP                                                          55788200
&ZC      SETC  '&XSRCERRL.(4),76(1)'                                    55792500
.ZO49J    ANOP                                                          55796800
&ZOPN                 SETA  &ZOPN+1                                     55801100
&ZOPL(&ZOPN)          SETC  ' '                                         55805400
&ZOPO(&ZOPN)          SETC  'MVC'                                       55809700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       55814000
&ZOPD(&ZOPN)          SETC  '++ XSRCERRL F'                             55818300
.ZO49C                ANOP  ,                                           55822600
.*------------------------------------------------------------------    55826900
.***AO.L02 XTARGERRL F                                                  55831200
         AIF   ('&ZXTARGERRL' EQ 'OUTPUT').ZO50A  OUTPUT                55835500
         AIF   ('&ZXTARGERRL' NE 'INOUT').ZO50C  INOUT                  55839800
.ZO50A    AIF   ('&XTARGERRL'(1,1) NE '(').ZO50B  ADDR IN GPR           55844100
&ZCGPR   SETC  '&XTARGERRL'(2,K'&XTARGERRL-2)                           55848400
&ZOPN                 SETA  &ZOPN+1                                     55852700
&ZOPL(&ZOPN)          SETC  ' '                                         55857000
&ZOPO(&ZOPN)          SETC  'MVC'                                       55861300
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),80(1)'                         55865600
&ZOPD(&ZOPN)          SETC  '++ XTARGERRL F'                            55869900
                      AGO   .ZO50C                                      55874200
.*                                                                      55878500
.ZO50B                ANOP  ,                                           55882800
&ZAWRK   SETA  K'&XTARGERRL                                             55887100
         AIF   ('&XTARGERRL'(&ZAWRK,1) NE ')').ZO50G                    55891400
&ZN      SETA  2                                                        55895700
.ZO50H    ANOP                                                          55900000
         AIF   (&ZN GE &ZAWRK).ZO50G                                    55904300
         AIF   ('&XTARGERRL'(&ZN,1) NE '(').ZO50I                       55908600
&ZC      SETC  '&XTARGERRL'(1,&ZN).'4'.','                              55912900
&ZC      SETC  '&ZC'.'&XTARGERRL'(&ZN+1,&ZAWRK-&ZN).',80(1)'            55917200
         AGO   .ZO50J                                                   55921500
.ZO50I    ANOP                                                          55925800
&ZN      SETA  &ZN+1                                                    55930100
         AGO   .ZO50H                                                   55934400
.ZO50G    ANOP                                                          55938700
&ZC      SETC  '&XTARGERRL.(4),80(1)'                                   55943000
.ZO50J    ANOP                                                          55947300
&ZOPN                 SETA  &ZOPN+1                                     55951600
&ZOPL(&ZOPN)          SETC  ' '                                         55955900
&ZOPO(&ZOPN)          SETC  'MVC'                                       55960200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       55964500
&ZOPD(&ZOPN)          SETC  '++ XTARGERRL F'                            55968800
.ZO50C                ANOP  ,                                           55973100
.*------------------------------------------------------------------    55977400
.***AO.L02 XDS_INFO A                                                   55981700
         AIF   ('&ZXDS_INFO' EQ 'OUTPUT').ZO52A  OUTPUT                 55986000
         AIF   ('&ZXDS_INFO' NE 'INOUT').ZO52C  INOUT                   55990300
.ZO52A    AIF   ('&XDS_INFO'(1,1) NE '(').ZO52B  ADDR IN GPR            55994600
&ZCGPR   SETC  '&XDS_INFO'(2,K'&XDS_INFO-2)                             55998900
&ZOPN                 SETA  &ZOPN+1                                     56003200
&ZOPL(&ZOPN)          SETC  ' '                                         56007500
&ZOPO(&ZOPN)          SETC  'MVC'                                       56011800
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),88(1)'                         56016100
&ZOPD(&ZOPN)          SETC  '++ XDS_INFO A'                             56020400
                      AGO   .ZO52C                                      56024700
.*                                                                      56029000
.ZO52B                ANOP  ,                                           56033300
&ZAWRK   SETA  K'&XDS_INFO                                              56037600
         AIF   ('&XDS_INFO'(&ZAWRK,1) NE ')').ZO52G                     56041900
&ZN      SETA  2                                                        56046200
.ZO52H    ANOP                                                          56050500
         AIF   (&ZN GE &ZAWRK).ZO52G                                    56054800
         AIF   ('&XDS_INFO'(&ZN,1) NE '(').ZO52I                        56059100
&ZC      SETC  '&XDS_INFO'(1,&ZN).'4'.','                               56063400
&ZC      SETC  '&ZC'.'&XDS_INFO'(&ZN+1,&ZAWRK-&ZN).',88(1)'             56067700
         AGO   .ZO52J                                                   56072000
.ZO52I    ANOP                                                          56076300
&ZN      SETA  &ZN+1                                                    56080600
         AGO   .ZO52H                                                   56084900
.ZO52G    ANOP                                                          56089200
&ZC      SETC  '&XDS_INFO.(4),88(1)'                                    56093500
.ZO52J    ANOP                                                          56097800
&ZOPN                 SETA  &ZOPN+1                                     56102100
&ZOPL(&ZOPN)          SETC  ' '                                         56106400
&ZOPO(&ZOPN)          SETC  'MVC'                                       56110700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       56115000
&ZOPD(&ZOPN)          SETC  '++ XDS_INFO A'                             56119300
.ZO52C                ANOP  ,                                           56123600
.*------------------------------------------------------------------    56127900
.***AO.L02 XSTATAREA A                                                  56132200
         AIF   ('&ZXSTATAREA' EQ 'OUTPUT').ZO53A  OUTPUT                56136500
         AIF   ('&ZXSTATAREA' NE 'INOUT').ZO53C  INOUT                  56140800
.ZO53A    AIF   ('&XSTATAREA'(1,1) NE '(').ZO53B  ADDR IN GPR           56145100
&ZCGPR   SETC  '&XSTATAREA'(2,K'&XSTATAREA-2)                           56149400
&ZOPN                 SETA  &ZOPN+1                                     56153700
&ZOPL(&ZOPN)          SETC  ' '                                         56158000
&ZOPO(&ZOPN)          SETC  'MVC'                                       56162300
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),92(1)'                         56166600
&ZOPD(&ZOPN)          SETC  '++ XSTATAREA A'                            56170900
                      AGO   .ZO53C                                      56175200
.*                                                                      56179500
.ZO53B                ANOP  ,                                           56183800
&ZAWRK   SETA  K'&XSTATAREA                                             56188100
         AIF   ('&XSTATAREA'(&ZAWRK,1) NE ')').ZO53G                    56192400
&ZN      SETA  2                                                        56196700
.ZO53H    ANOP                                                          56201000
         AIF   (&ZN GE &ZAWRK).ZO53G                                    56205300
         AIF   ('&XSTATAREA'(&ZN,1) NE '(').ZO53I                       56209600
&ZC      SETC  '&XSTATAREA'(1,&ZN).'4'.','                              56213900
&ZC      SETC  '&ZC'.'&XSTATAREA'(&ZN+1,&ZAWRK-&ZN).',92(1)'            56218200
         AGO   .ZO53J                                                   56222500
.ZO53I    ANOP                                                          56226800
&ZN      SETA  &ZN+1                                                    56231100
         AGO   .ZO53H                                                   56235400
.ZO53G    ANOP                                                          56239700
&ZC      SETC  '&XSTATAREA.(4),92(1)'                                   56244000
.ZO53J    ANOP                                                          56248300
&ZOPN                 SETA  &ZOPN+1                                     56252600
&ZOPL(&ZOPN)          SETC  ' '                                         56256900
&ZOPO(&ZOPN)          SETC  'MVC'                                       56261200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       56265500
&ZOPD(&ZOPN)          SETC  '++ XSTATAREA A'                            56269800
.ZO53C                ANOP  ,                                           56274100
.*------------------------------------------------------------------    56278400
.***AO.L02 XRETPTOKN CL10                                               56282700
         AIF   ('&ZXRETPTOKN' EQ 'OUTPUT').ZO68A  OUTPUT                56287000
         AIF   ('&ZXRETPTOKN' NE 'INOUT').ZO68C  INOUT                  56291300
.ZO68A    AIF   ('&XRETPTOKN'(1,1) NE '(').ZO68B  ADDR IN GPR           56295600
&ZCGPR   SETC  '&XRETPTOKN'(2,K'&XRETPTOKN-2)                           56299900
&ZOPN                 SETA  &ZOPN+1                                     56304200
&ZOPL(&ZOPN)          SETC  ' '                                         56308500
&ZOPO(&ZOPN)          SETC  'MVC'                                       56312800
&ZOPV(&ZOPN)          SETC  '0(10,&ZCGPR),102(1)'                       56317100
&ZOPD(&ZOPN)          SETC  '++ XRETPTOKN CL10'                         56321400
                      AGO   .ZO68C                                      56325700
.*                                                                      56330000
.ZO68B                ANOP  ,                                           56334300
&ZAWRK   SETA  K'&XRETPTOKN                                             56338600
         AIF   ('&XRETPTOKN'(&ZAWRK,1) NE ')').ZO68G                    56342900
&ZN      SETA  2                                                        56347200
.ZO68H    ANOP                                                          56351500
         AIF   (&ZN GE &ZAWRK).ZO68G                                    56355800
         AIF   ('&XRETPTOKN'(&ZN,1) NE '(').ZO68I                       56360100
&ZC      SETC  '&XRETPTOKN'(1,&ZN).'10'.','                             56364400
&ZC      SETC  '&ZC'.'&XRETPTOKN'(&ZN+1,&ZAWRK-&ZN).',102(1)'           56368700
         AGO   .ZO68J                                                   56373000
.ZO68I    ANOP                                                          56377300
&ZN      SETA  &ZN+1                                                    56381600
         AGO   .ZO68H                                                   56385900
.ZO68G    ANOP                                                          56390200
&ZC      SETC  '&XRETPTOKN.(10),102(1)'                                 56394500
.ZO68J    ANOP                                                          56398800
&ZOPN                 SETA  &ZOPN+1                                     56403100
&ZOPL(&ZOPN)          SETC  ' '                                         56407400
&ZOPO(&ZOPN)          SETC  'MVC'                                       56411700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       56416000
&ZOPD(&ZOPN)          SETC  '++ XRETPTOKN CL10'                         56420300
.ZO68C                ANOP  ,                                           56424600
.*******************************************************************    56428900
.***AO.X02  RETURN CODE PROCESSING                                      56433200
.*******************************************************************    56437500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    56441800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            56446100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             56450400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             56454700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               56459000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                56463300
&ZOPN                 SETA  &ZOPN+1                                     56467600
&ZOPL(&ZOPN)          SETC  ' '                                         56471900
&ZOPO(&ZOPN)          SETC  'ST'                                        56476200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              56480500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        56484800
                      AGO   .ZMRETX                                     56489100
.*                                                                      56493400
.ZMRET2               ANOP  ,                                           56497700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                56502000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                56506300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                56510600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  56514900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   56519200
&ZOPN                 SETA  &ZOPN+1                                     56523500
&ZOPL(&ZOPN)          SETC  ' '                                         56527800
&ZOPO(&ZOPN)          SETC  'LR'                                        56532100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 56536400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        56540700
.ZMRETX               ANOP  ,                                           56545000
.*******************************************************************    56549300
.***AO.X03  REASON CODE PROCESSING                                      56553600
.*******************************************************************    56557900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    56562200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            56566500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              56570800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             56575100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              56579400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             56583700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                56588000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 56592300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                56596600
&ZOPN                 SETA  &ZOPN+1                                     56600900
&ZOPL(&ZOPN)          SETC  ' '                                         56605200
&ZOPO(&ZOPN)          SETC  'ST'                                        56609500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               56613800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        56618100
                      AGO   .ZMRSNX                                     56622400
.*                                                                      56626700
.ZMRSN2               ANOP  ,                                           56631000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                56635300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 56639600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                56643900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 56648200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                56652500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   56656800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    56661100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   56665400
&ZOPN                 SETA  &ZOPN+1                                     56669700
&ZOPL(&ZOPN)          SETC  ' '                                         56674000
&ZOPO(&ZOPN)          SETC  'LR'                                        56678300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  56682600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        56686900
.ZMRSNX               ANOP  ,                                           56691200
.*******************************************************************    56695500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   56699800
.*******************************************************************    56704100
.ZMFLX                ANOP  ,              MF=L PROCESSING              56708400
.*******************************************************************    56712700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               56717000
.*******************************************************************    56721300
                      ACTR  10000                                       56725600
.*                                                                      56729900
                      LCLA  &ZLC           COLUMN POSITION              56734200
                      LCLA  &ZOPX          LIST TABLE INDEX             56738500
                      LCLC  &ZLL           LABEL                        56742800
                      LCLC  &ZLOP          OPERATION                    56747100
                      LCLC  &ZLV           VALUE                        56751400
                      LCLC  &ZLD           DESCRIPTION                  56755700
.*                                                                      56760000
&ZOPX                 SETA  1                                           56764300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            56768600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              56772900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              56777200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              56781500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              56785800
                      AIF   (K'&ZLD LE 0).ZL5                           56790100
&ZLC                  SETA  35             COMMENT COLUMN               56794400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    56798700
&ZLC                  SETA  33             COMMMENT COLUMN              56803000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   56807300
&ZLV                  SETC  '&ZLV'.' '                                  56811600
                      AGO   .ZL3                                        56815900
.*                                                                      56820200
.ZL4                  ANOP  ,                                           56824500
&ZLV                  SETC  '&ZLV'.' '                                  56828800
.ZL5                  ANOP  ,                                           56833100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               56837400
.*                                                                      56841700
&ZLL     &ZLOP &ZLV                                                     56846000
.*                                                                      56850300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               56854600
                      AGO   .ZL2           CONTINUE LOOPING             56858900
.*                                                                      56863200
.ZLX                  ANOP  ,                                           56867500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                56871800
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                56876100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  56880400
            L    15,16(0,0)     CVT address                             56884700
            L    15,140(,15)    ECVT address                            56889000
            ICM  15,15,200(15)  CSM structure address                   56893300
            BZ   NSRV&SYSNDX    CSM structure not anchored              56897600
            AIF  ('&XREQUEST' EQ 'CHANGE_OWNER').CHOWNER                56901900
            AIF  ('&XREQUEST' EQ 'GET_BUFFER').GETBFR                   56906200
            AIF  ('&XREQUEST' EQ 'FREE_BUFFER').FREEBFR                 56910500
            L    15,8(,15)      CSM service address                     56914800
            BALR 14,15          Call CSM service                        56919100
            B    DONE&SYSNDX                                            56923400
            AGO  .NOSERV                                                56927700
.CHOWNER    ANOP                                                        56932000
            L    15,12(,15)     Change Owner service address            56936300
            BALR 14,15          Call Change Owner service               56940600
            B    DONE&SYSNDX                                            56944900
.GETBFR     ANOP                                                        56949200
            TM   49(15),B'10000000'                                     56953500
            BNO  GPFM&SYSNDX    No performance update                   56957800
            L    15,36(,15)     Get Buffer service address              56962100
            BALR 14,15          Call Get Buffer service                 56966400
            B    DONE&SYSNDX                                            56970700
GPFM&SYSNDX EQU *                                                       56975000
            L    15,8(,15)      CSM service address                     56979300
            BALR 14,15          Call CSM service                        56983600
            B    DONE&SYSNDX                                            56987900
.FREEBFR    ANOP                                                        56992200
            TM   49(15),B'10000000'                                     56996500
            BNO  FPFM&SYSNDX    No performance update                   57000800
            L    15,40(,15)     Free Buffer service address             57005100
            BALR 14,15          Call Free Buffer service                57009400
            B    DONE&SYSNDX                                            57013700
FPFM&SYSNDX EQU *                                                       57018000
            L    15,8(,15)      CSM service address                     57022300
            BALR 14,15          Call CSM service                        57026600
            B    DONE&SYSNDX                                            57030900
.NOSERV     ANOP                                                        57035200
            AIF  ('&XREQUEST' EQ 'CREATE_POOL').CRPOOL                  57039500
NSRV&SYSNDX EQU *                                                       57043800
            LA   15,4           Set error return code                   57048100
            LA   0,2            Set error reason code                   57052400
            AGO  .CSMEND                                                57056700
.CRPOOL     ANOP                                                        57061000
NSRV&SYSNDX EQU *                                                       57065300
            LR   14,1           Save parameter list address             57069600
            LOAD EP=IVTSMCBF    Obtain CSM service address              57073900
            LR   15,0           Set CSM service address                 57078200
            LR   1,14           Restore parameter list address          57082500
            BALR 14,15          Call CSM service                        57086800
.CSMEND     ANOP                                                        57091100
DONE&SYSNDX EQU *                                                       57095400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  57099700
.ZLINKX               ANOP  ,                                           57104000
.*******************************************************************    57108300
.***AP.X01  FORMAT GENERATED CODE                                       57112600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            57116900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              57121200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              57125500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              57129800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              57134100
                      AIF   (K'&ZLD LE 0).ZL51                          57138400
&ZLC                  SETA  35             COMMENT COLUMN               57142700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   57147000
&ZLC                  SETA  33             COMMENT COLUMN               57151300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  57155600
&ZLV                  SETC  '&ZLV'.' '                                  57159900
                      AGO   .ZL31                                       57164200
.*                                                                      57168500
.ZL41                 ANOP  ,                                           57172800
&ZLV                  SETC  '&ZLV'.' '                                  57177100
.ZL51                 ANOP  ,                                           57181400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               57185700
.*                                                                      57190000
&ZLL     &ZLOP &ZLV                                                     57194300
.*                                                                      57198600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               57202900
                      AGO   .ZL21          CONTINUE LOOPING             57207200
.*                                                                      57211500
.ZLX1                 ANOP  ,                                           57215800
.*******************************************************************    57220100
.***AP.X02  END OF IVTCSM MACRO                                         57224400
&ZIVTCSM              SETC  'YES'          SET IVTCSM USED              57228700
         POP   PRINT                                                    57233000
*                                            IVTCSM-0                   57237300
         SPACE 1                                                        57241600
.ZLX2                 ANOP  ,                                           57245900
         MEND                                                           57250200
**********************************************************************/ 57254500
*/**** START OF SPECIFICATIONS **************************************** 57258800
*                                                                     * 57263100
*                                                                     * 57267400
*01* MACRO NAME:  IVTCSM                                -99/09/09-<0> * 57271700
*                                                                     * 57276000
*                                                                     * 57280300
*01* DESCRIPTIVE NAME:  Communications Storage Manager                * 57284600
*                                                                     * 57288900
*01* PROPRIETARY STATEMENT:                                           * 57293200
*                                                                     * 57297500
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 57301800
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 57306100
*     5694-A01 (C) COPYRIGHT IBM CORP. 1999                           * 57310400
*                                                                     * 57314700
* STATUS= HVT510A                                                     * 57319000
*                                                                     * 57323300
*                                                                     * 57327600
*                                                                     * 57331900
*01* FUNCTION:                                                        * 57336200
*       See the IVTCSM macro prologue for details.                    * 57340500
*                                                                     * 57344800
*01* INPUT:                                                           * 57349100
*                                                                     * 57353400
*            ?IVTCSM    REQUEST(ASSIGN_BUFFER)                       * 57357700
*                      |     BUFLIST(xbuflist)                        * 57362000
*                      |     BUFNUM(xbufnum)                          * 57366300
*                      |    [BUFTYPE(SAME|PAGEELIG|FIXED)]          * 57370600
*                      |    [CSMUSER(NO|YES)]                       * 57374900
*                      |    [GAP(xgap|0)]                           * 57379200
*                      |    [ERRBFLST(xerrbflst)]                     * 57383500
*                      |    [OWNERID(xownerid|0)]                   * 57387800
*                      |    [TASKID(xtaskid|0)]                     * 57392100
*                      |    [THREAD(xthread|0)]                     * 57396400
*                      |    [UTILRTN(xutilrtn|0)]                   * 57400700
*                       REQUEST(CHANGE_OWNER)                        * 57405000
*                      |     BUFLIST(xbuflist)                        * 57409300
*                      |     BUFNUM(xbufnum)                          * 57413600
*                      |    [CSMUSER(NO|YES)]                       * 57417900
*                      |    [ERRBFLST(xerrbflst)]                     * 57422200
*                      |    [GAP(xgap|0)]                           * 57426500
*                      |    [OWNERID(xownerid|0)]                   * 57430800
*                      |    [SKIPBUF(NO|YES)]                       * 57435100
*                      |    [TASKID(xtaskid|0)]                     * 57439400
*                      |    [THREAD(xthread|0)]                     * 57443700
*                      |    [UTILRTN(xutilrtn|0)]                   * 57448000
*                       REQUEST(COPY_DATA)                           * 57452300
*                      |   [PAD(NO)]                                 * 57456600
*                      |   [PAD(YES)                                 * 57460900
*                      |         PADCHAR(xpadchar)]                   * 57465200
*                      |    [SRCERRL(xsrcerrl)]                       * 57469500
*                      |    [SRCGAP(xsrcgap|0)]                     * 57473800
*                      |     SRCLIST(xsrclist)                        * 57478100
*                      |     SRCNUM(xsrcnum)                          * 57482400
*                      |    [TARGERRL(xtargerrl)]                     * 57486700
*                      |    [TARGGAP(xtarggap|0)]                   * 57491000
*                      |     TARGLIST(xtarglist)                      * 57495300
*                      |     TARGNUM(xtargnum)                        * 57499600
*                      |    [THREAD(xthread|0)]                     * 57503900
*                      |    [UTILRTN(xutilrtn|0)]                   * 57508200
*                       REQUEST(CREATE_POOL)                         * 57512500
*                      |     BUFSIZE(xbufsize)                        * 57516800
*                      |     BUFSOURC(DSPACE|ECSA)                  * 57521100
*                      |    [DS_INFO(xds_info)]                       * 57525400
*                      |     EXPBUF(xexpbuf)                          * 57529700
*                      |     INITBUF(xinitbuf)                        * 57534000
*                      |     MINFREE(xminfree)                        * 57538300
*                      |    [RETPTOKN(xretptokn)]                     * 57542600
*                      |    [STATAREA(xstatarea)]                     * 57546900
*                       REQUEST(DELETE_POOL)                         * 57551200
*                      |     POOLTOKN(xpooltokn)                      * 57555500
*                       REQUEST(DUMP_INFO)                           * 57559800
*                      |    [DS_INFO(xds_info)]                       * 57564100
*                       REQUEST(FIX_BUFFER)                          * 57568400
*                      |     BUFLIST(xbuflist)                        * 57572700
*                      |     BUFNUM(xbufnum)                          * 57577000
*                      |    [ERRBFLST(xerrbflst)]                     * 57581300
*                      |    [GAP(xgap|0)]                           * 57585600
*                      |    [THREAD(xthread|0)]                     * 57589900
*                      |    [UTILRTN(xutilrtn|0)]                   * 57594200
*                      |    [WAIT(NO|YES)]                          * 57598500
*                       REQUEST(FREE_BUFFER)                         * 57602800
*                      |     BUFLIST(xbuflist)                        * 57607100
*                      |     BUFNUM(xbufnum)                          * 57611400
*                      |    [CLEAR(NO|YES)]                         * 57615700
*                      |    [ERRBFLST(xerrbflst)]                     * 57620000
*                      |    [FREETO(USER|CSM)]                      * 57624300
*                      |    [GAP(xgap|0)]                           * 57628600
*                      |    [SKIPBUF(NO|YES)]                       * 57632900
*                      |    [THREAD(xthread|0)]                     * 57637200
*                      |    [UTILRTN(xutilrtn|0)]                   * 57641500
*                       REQUEST(GET_BUFFER)                          * 57645800
*                      |     BUFLIST(xbuflist)                        * 57650100
*                      |     BUFNUM(xbufnum)                          * 57654400
*                      |     BUFTYPE(PAGEELIG|PAGEABLE|              * 57658700
*                      |              FIXED)                         * 57663000
*                      |    [CLEAR(NO|YES)]                         * 57667300
*                      |    [CSMUSER(NO|YES)]                       * 57671600
*                      |    [ERRBFLST(xerrbflst)]                     * 57675900
*                      |    [FREERTN(xfreertn|CSM)]                 * 57680200
*                      |    [GAP(xgap|0)]                           * 57684500
*                      |    [OWNERID(xownerid|0)]                   * 57688800
*                      |     POOLTOKN(xpooltokn)                      * 57693100
*                      |    [TASKID(xtaskid|0)]                     * 57697400
*                      |    [THREAD(xthread|0)]                     * 57701700
*                      |    [UTILRTN(xutilrtn|0)]                   * 57706000
*                      |    [WAIT(NO|YES|EXPAND)]                   * 57710300
*                       REQUEST(PAGE_BUFFER)                         * 57714600
*                      |     BUFLIST(xbuflist)                        * 57718900
*                      |     BUFNUM(xbufnum)                          * 57723200
*                      |     BUFTYPE(PAGEELIG|PAGEABLE)             * 57727500
*                      |    [GAP(xgap|0)]                           * 57731800
*                      |    [ERRBFLST(xerrbflst)]                     * 57736100
*                      |    [THREAD(xthread|0)]                     * 57740400
*                      |    [UTILRTN(xutilrtn|0)]                   * 57744700
*                       REQUEST(RESOURCE_STATS)                      * 57749000
*                           [STATAREA(xstatarea)]                     * 57753300
*                       [RETCODE(xretcode)]                           * 57757600
*                       [RSNCODE(xrsncode)]                           * 57761900
*                       [PLISTVER(xplistver|IMPLIED_VERSION)]       * 57766200
*                      [MF(S)]                                       * 57770500
*                      [MF(L,xmfctrl,xmfattr|BDY(DWORD))]          * 57774800
*                      [MF(M,xmfctrl,COMPLETE|NOCHECK)]            * 57779100
*                      [MF(E,xmfctrl,COMPLETE|NOCHECK)]            * 57783400
*                                                                     * 57787700
****** END OF SPECIFICATIONS *****************************************/ 57792000
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 57796300
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                57800600
*  ANS('/* ? IVTCSM '||MACLIST||' ')                                    57804900
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     57809200
*                                                                       57813500
*  DCL ZELO  FIXED;                                                     57817800
*  DCL ZECOL FIXED;                                                     57822100
*                                                                       57826400
*  ZELO=1;     /* STARTING COLUMN */                                    57830700
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               57835000
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    57839300
*    IF ZECOL>0                                                         57843600
*      THEN                                                             57847900
*        DO;   /* PARENTHESIS FOUND */                                  57852200
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         57856500
*             NORESCAN COL(MACLMAR+5);                                  57860800
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   57865100
*        END;                                                           57869400
*      ELSE                                                             57873700
*        DO;   /* REMAINING KEYS */                                     57878000
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           57882300
*             NORESCAN COL(MACLMAR+5);                                  57886600
*          ZELO=LENGTH(MACKEYS)+1;                                      57890900
*        END;                                                           57895200
*  END;                                                                 57899500
*  ANS(' -99/09/09-0- */')                                              57903800
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       57908100
*/********************************************************************/ 57912400
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 57916700
*/********************************************************************/ 57921000
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 57925300
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 57929600
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 57933900
*                                                                       57938200
*  DCL   ZIVTCSM CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */   57942500
*  DEACT ZIVTCSM;                                                       57946800
*                                                                       57951100
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    57955400
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 57959700
*                                                                       57964000
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 57968300
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 57972600
*                                                                       57976900
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 57981200
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 57985500
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 57989800
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 57994100
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 57998400
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 58002700
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 58007000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 58011300
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 58015600
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 58019900
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 58024200
*                                                                       58028500
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 58032800
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 58037100
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 58041400
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 58045700
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 58050000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 58054300
*/*******************************************************************/  58058600
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  58062900
*/*******************************************************************/  58067200
*  DCL XREQUEST;  DEACT XREQUEST;  /***PV.XVAR02 INPUT VALUE */         58071500
*  DCL ZXREQUEST; DEACT ZXREQUEST;  /***INPUT/OUTPUT CONTROL */         58075800
*  DCL XBUFLIST;  DEACT XBUFLIST;  /***PV.XVAR02 INPUT NAME */          58080100
*  DCL ZXBUFLIST; DEACT ZXBUFLIST;  /***INPUT/OUTPUT CONTROL */         58084400
*  DCL XBUFNUM;  DEACT XBUFNUM;    /***PV.XVAR02 INPUT NAME */          58088700
*  DCL ZXBUFNUM; DEACT ZXBUFNUM;   /***INPUT/OUTPUT CONTROL */          58093000
*  DCL XBUFTYPE;  DEACT XBUFTYPE;  /***PV.XVAR02 INPUT VALUE */         58097300
*  DCL ZXBUFTYPE; DEACT ZXBUFTYPE;  /***INPUT/OUTPUT CONTROL */         58101600
*  DCL XCSMUSER;  DEACT XCSMUSER;  /***PV.XVAR02 INPUT VALUE */         58105900
*  DCL ZXCSMUSER; DEACT ZXCSMUSER;  /***INPUT/OUTPUT CONTROL */         58110200
*  DCL XGAP;  DEACT XGAP;          /***PV.XVAR02 INPUT NAME */          58114500
*  DCL ZXGAP; DEACT ZXGAP;         /***INPUT/OUTPUT CONTROL */          58118800
*  DCL XERRBFLST;  DEACT XERRBFLST;  /***PV.XVAR02 OUTPUT NAME */       58123100
*  DCL ZXERRBFLST; DEACT ZXERRBFLST;  /***INPUT/OUTPUT CONTROL */       58127400
*  DCL XOWNERID;  DEACT XOWNERID;  /***PV.XVAR02 INPUT NAME */          58131700
*  DCL ZXOWNERID; DEACT ZXOWNERID;  /***INPUT/OUTPUT CONTROL */         58136000
*  DCL XTASKID;  DEACT XTASKID;    /***PV.XVAR02 INPUT NAME */          58140300
*  DCL ZXTASKID; DEACT ZXTASKID;   /***INPUT/OUTPUT CONTROL */          58144600
*  DCL XTHREAD;  DEACT XTHREAD;    /***PV.XVAR02 INPUT NAME */          58148900
*  DCL ZXTHREAD; DEACT ZXTHREAD;   /***INPUT/OUTPUT CONTROL */          58153200
*  DCL XUTILRTN;  DEACT XUTILRTN;  /***PV.XVAR02 INPUT NAME */          58157500
*  DCL ZXUTILRTN; DEACT ZXUTILRTN;  /***INPUT/OUTPUT CONTROL */         58161800
*  DCL XSKIPBUF;  DEACT XSKIPBUF;  /***PV.XVAR02 INPUT VALUE */         58166100
*  DCL ZXSKIPBUF; DEACT ZXSKIPBUF;  /***INPUT/OUTPUT CONTROL */         58170400
*  DCL XPAD;  DEACT XPAD;          /***PV.XVAR02 INPUT VALUE */         58174700
*  DCL ZXPAD; DEACT ZXPAD;         /***INPUT/OUTPUT CONTROL */          58179000
*  DCL XPADCHAR;  DEACT XPADCHAR;  /***PV.XVAR02 INPUT NAME */          58183300
*  DCL ZXPADCHAR; DEACT ZXPADCHAR;  /***INPUT/OUTPUT CONTROL */         58187600
*  DCL XSRCERRL;  DEACT XSRCERRL;  /***PV.XVAR02 OUTPUT NAME */         58191900
*  DCL ZXSRCERRL; DEACT ZXSRCERRL;  /***INPUT/OUTPUT CONTROL */         58196200
*  DCL XSRCGAP;  DEACT XSRCGAP;    /***PV.XVAR02 INPUT NAME */          58200500
*  DCL ZXSRCGAP; DEACT ZXSRCGAP;   /***INPUT/OUTPUT CONTROL */          58204800
*  DCL XSRCLIST;  DEACT XSRCLIST;  /***PV.XVAR02 INPUT NAME */          58209100
*  DCL ZXSRCLIST; DEACT ZXSRCLIST;  /***INPUT/OUTPUT CONTROL */         58213400
*  DCL XSRCNUM;  DEACT XSRCNUM;    /***PV.XVAR02 INPUT NAME */          58217700
*  DCL ZXSRCNUM; DEACT ZXSRCNUM;   /***INPUT/OUTPUT CONTROL */          58222000
*  DCL XTARGERRL;  DEACT XTARGERRL;  /***PV.XVAR02 OUTPUT NAME */       58226300
*  DCL ZXTARGERRL; DEACT ZXTARGERRL;  /***INPUT/OUTPUT CONTROL */       58230600
*  DCL XTARGGAP;  DEACT XTARGGAP;  /***PV.XVAR02 INPUT NAME */          58234900
*  DCL ZXTARGGAP; DEACT ZXTARGGAP;  /***INPUT/OUTPUT CONTROL */         58239200
*  DCL XTARGLIST;  DEACT XTARGLIST;  /***PV.XVAR02 INPUT NAME */        58243500
*  DCL ZXTARGLIST; DEACT ZXTARGLIST;  /***INPUT/OUTPUT CONTROL */       58247800
*  DCL XTARGNUM;  DEACT XTARGNUM;  /***PV.XVAR02 INPUT NAME */          58252100
*  DCL ZXTARGNUM; DEACT ZXTARGNUM;  /***INPUT/OUTPUT CONTROL */         58256400
*  DCL XBUFSIZE;  DEACT XBUFSIZE;  /***PV.XVAR02 INPUT NAME */          58260700
*  DCL ZXBUFSIZE; DEACT ZXBUFSIZE;  /***INPUT/OUTPUT CONTROL */         58265000
*  DCL XBUFSOURC;  DEACT XBUFSOURC;  /***PV.XVAR02 INPUT VALUE */       58269300
*  DCL ZXBUFSOURC; DEACT ZXBUFSOURC;  /***INPUT/OUTPUT CONTROL */       58273600
*  DCL XDS_INFO;  DEACT XDS_INFO;  /***PV.XVAR02 OUTPUT NAME */         58277900
*  DCL ZXDS_INFO; DEACT ZXDS_INFO;  /***INPUT/OUTPUT CONTROL */         58282200
*  DCL XEXPBUF;  DEACT XEXPBUF;    /***PV.XVAR02 INPUT NAME */          58286500
*  DCL ZXEXPBUF; DEACT ZXEXPBUF;   /***INPUT/OUTPUT CONTROL */          58290800
*  DCL XINITBUF;  DEACT XINITBUF;  /***PV.XVAR02 INPUT NAME */          58295100
*  DCL ZXINITBUF; DEACT ZXINITBUF;  /***INPUT/OUTPUT CONTROL */         58299400
*  DCL XMINFREE;  DEACT XMINFREE;  /***PV.XVAR02 INPUT NAME */          58303700
*  DCL ZXMINFREE; DEACT ZXMINFREE;  /***INPUT/OUTPUT CONTROL */         58308000
*  DCL XRETPTOKN;  DEACT XRETPTOKN;  /***PV.XVAR02 OUTPUT NAME */       58312300
*  DCL ZXRETPTOKN; DEACT ZXRETPTOKN;  /***INPUT/OUTPUT CONTROL */       58316600
*  DCL XSTATAREA;  DEACT XSTATAREA;  /***PV.XVAR02 OUTPUT NAME */       58320900
*  DCL ZXSTATAREA; DEACT ZXSTATAREA;  /***INPUT/OUTPUT CONTROL */       58325200
*  DCL XPOOLTOKN;  DEACT XPOOLTOKN;  /***PV.XVAR02 INPUT NAME */        58329500
*  DCL ZXPOOLTOKN; DEACT ZXPOOLTOKN;  /***INPUT/OUTPUT CONTROL */       58333800
*  DCL XWAIT;  DEACT XWAIT;        /***PV.XVAR02 INPUT VALUE */         58338100
*  DCL ZXWAIT; DEACT ZXWAIT;       /***INPUT/OUTPUT CONTROL */          58342400
*  DCL XCLEAR;  DEACT XCLEAR;      /***PV.XVAR02 INPUT VALUE */         58346700
*  DCL ZXCLEAR; DEACT ZXCLEAR;     /***INPUT/OUTPUT CONTROL */          58351000
*  DCL XFREETO;  DEACT XFREETO;    /***PV.XVAR02 INPUT VALUE */         58355300
*  DCL ZXFREETO; DEACT ZXFREETO;   /***INPUT/OUTPUT CONTROL */          58359600
*  DCL XFREERTN;  DEACT XFREERTN;  /***PV.XVAR02 INPUT NAME */          58363900
*  DCL ZXFREERTN; DEACT ZXFREERTN;  /***INPUT/OUTPUT CONTROL */         58368200
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         58372500
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         58376800
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         58381100
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         58385400
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 58389700
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       58394000
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         58398300
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          58402600
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          58406900
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          58411200
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         58415500
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          58419800
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         58424100
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          58428400
*/********************************************************************/ 58432700
*/***PC.PLV01  PROCESS PLISTVER                                      */ 58437000
*/********************************************************************/ 58441300
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               58445600
*    XPLISTVER=0;                                                       58449900
*  ELSE                                                                 58454200
*    XPLISTVER=0;                                                       58458500
*  IF PLISTVER^=''                                                      58462800
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       58467100
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   58471400
*    THEN                                                               58475700
*      DO;                                                              58480000
*                                                                       58484300
*        ZCVAL='';                           /* ERROR FLAG */           58488600
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        58492900
*          THEN                                                         58497200
*            DO;                                                        58501500
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           58505800
*                  ' MUST CONTAIN ONE'||                                58510100
*                  ' (OR MORE) ARGUMENT(S).';                           58514400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           58518700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58523000
*              ZMACRET=8;                    /* MACRO ERROR */          58527300
*              ZCVAL='NO_ARGUMENT';                                     58531600
*            END;                                                       58535900
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    58540200
*          THEN                                                         58544500
*            DO;                                                        58548800
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            58553100
*                  PLISTVER||                                           58557400
*                  '" "PLISTVER"'||                                     58561700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        58566000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           58570300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58574600
*              ZMACRET=8;                    /* MACRO ERROR */          58578900
*            END;                                                       58583200
*                                                                       58587500
*        ZC=PLISTVER(1);                                                58591800
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       58596100
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      58600400
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      58604700
*            THEN                                                       58609000
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        58613300
*        END;                                                           58617600
*        IF ZCVAL=''                                                    58621900
*          THEN                                                         58626200
*            DO;                             /* CHECK RANGE LIMITS */   58630500
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           58634800
*              THEN                                                     58639100
*                XPLISTVER=FIXED(PLISTVER(1));                          58643400
*              ELSE                                                     58647700
*                DO;                                                    58652000
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            58656300
*                    PLISTVER(1)||                                      58660600
*                  ', BUT PLISTVER OF '||                               58664900
*                    CHAR(XPLISTVER)||                                  58669200
*                  ' IS REQUIRED.';                                     58673500
*              ANS MSG('?IVTCSM ---> '||ZMS);                           58677800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58682100
*              ZMACRET=8;                    /* MACRO ERROR */          58686400
*                END;                                                   58690700
*              IF XPLISTVER<0 |              /* LOW LIMIT */            58695000
*                 XPLISTVER>0                /* HIGH LIMIT */           58699300
*                THEN                                                   58703600
*                  ZCVAL='RANGE';            /* RANGE ERROR */          58707900
*            END;                                                       58712200
*        IF ZCVAL^=''                                                   58716500
*          THEN                                                         58720800
*            DO;                             /* RANGE ERROR */          58725100
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      58729400
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            58733700
*                  PLISTVER||                                           58738000
*                  '" THE RANGE IS "0-0"'||                             58742300
*                  ' FOR ARGUMENT 1.';                                  58746600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           58750900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58755200
*              ZMACRET=8;                    /* MACRO ERROR */          58759500
*            END;                                                       58763800
*      END;                                                             58768100
*                                                                       58772400
*/********************************************************************/ 58776700
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 58781000
*/********************************************************************/ 58785300
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 58789600
*  XMF='';                                                              58793900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 58798200
*  IF TRANSLATE(MF(1))                                                  58802500
*              = 'S'                         /* CHECK FOR KEYWORD */    58806800
*    THEN                                                               58811100
*      DO;                                                              58815400
*        XMFSCK='COMPLETE';                                             58819700
*        XMF='S';                            /* SET XVARIABLE */        58824000
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    58828300
*          THEN                                                         58832600
*            DO;                                                        58836900
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            58841200
*                  MF||                                                 58845500
*                  '" "MF"'||                                           58849800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        58854100
*              ANS MSG('?IVTCSM ---> '||ZMS);                           58858400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58862700
*              ZMACRET=8;                    /* MACRO ERROR */          58867000
*            END;                                                       58871300
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 58875600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     58879900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 58884200
*  IF TRANSLATE(MF(1))                                                  58888500
*              = 'L'                         /* CHECK FOR KEYWORD */    58892800
*    THEN                                                               58897100
*      DO;                                                              58901400
*        XMF='L';                            /* SET XVARIABLE */        58905700
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    58910000
*          THEN                                                         58914300
*            DO;                                                        58918600
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            58922900
*                  MF||                                                 58927200
*                  '" "MF"'||                                           58931500
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       58935800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           58940100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58944400
*              ZMACRET=8;                    /* MACRO ERROR */          58948700
*            END;                                                       58953000
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 58957300
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 58961600
*        IF PLISTVER ^= ''                                              58965900
*          THEN                                                         58970200
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          58974500
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            58978800
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 58983100
*          THEN                                                         58987400
*            DO;                                                        58991700
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          58996000
*                  ' CAN ONLY HAVE'||                                   59000300
*                  ' THE "PLISTVER" KEY'||                              59004600
*                  ' SPECIFIED ON THE INVOCATION.';                     59008900
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59013200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59017500
*              ZMACRET=8;                    /* MACRO ERROR */          59021800
*            END;                                                       59026100
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 59030400
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        59034700
*  IF MF(2)=''                               /* CHECK FOR NULL */       59039000
*   THEN                                                                59043300
*    DO;                                     /* KEY IS REQUIRED */      59047600
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      59051900
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              59056200
*            ' FOR THE "MF" KEY, POSITIONAL'||                          59060500
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            59064800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 59069100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                59073400
*        ZMACRET=8;                          /* MACRO ERROR */          59077700
*    END;                                                               59082000
*  ELSE                                                                 59086300
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        59090600
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 59094900
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        59099200
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          59103500
*  IF MF(3)^=''                              /* CHECK FOR NULL */       59107800
*    THEN                                                               59112100
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        59116400
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 59120700
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        59125000
*     LENGTH(XMFATTR)>60                                                59129300
*    THEN                                                               59133600
*      DO;                                                              59137900
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      59142200
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            59146500
*            MF||                                                       59150800
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       59155100
*            ' LENGTH OF 60 CHARACTERS. ';                              59159400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 59163700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                59168000
*        ZMACRET=8;                          /* MACRO ERROR */          59172300
*      END;                                                             59176600
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59180900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     59185200
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59189500
*  IF TRANSLATE(MF(1))                                                  59193800
*              = 'M'                         /* CHECK FOR KEYWORD */    59198100
*    THEN                                                               59202400
*      DO;                                                              59206700
*        XMF='M';                            /* SET XVARIABLE */        59211000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    59215300
*          THEN                                                         59219600
*            DO;                                                        59223900
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            59228200
*                  MF||                                                 59232500
*                  '" "MF"'||                                           59236800
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       59241100
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59245400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59249700
*              ZMACRET=8;                    /* MACRO ERROR */          59254000
*            END;                                                       59258300
*/*PG.KKCTL11 -MF(M) OUTPUT KEYS SPECIFIED?--------------------------*/ 59262600
*        IF ERRBFLST ^= ''                   /* OUTPUT KEY SPECIFIED */ 59266900
*        | SRCERRL ^= ''                                                59271200
*        | TARGERRL ^= ''                                               59275500
*        | DS_INFO ^= ''                                                59279800
*        | RETPTOKN ^= ''                                               59284100
*        | STATAREA ^= ''                                               59288400
*          THEN                                                         59292700
*            DO;                                                        59297000
*              ZMS=' 8, THE "M" FORM OF "MF" CANNOT'|| /**MFMOP* MSG*/  59301300
*                  ' HAVE THE FOLLOWING OUTPUT KEY(S)'||                59305600
*                  ' SPECIFIED ON THE INVOCATION:'||                    59309900
*                  ' "ERRBFLST"'||           /* INVALID KEY */          59314200
*                  ' OR "SRCERRL"'||         /* INVALID KEY */          59318500
*                  ' OR "TARGERRL"'||        /* INVALID KEY */          59322800
*                  ' OR "DS_INFO"'||         /* INVALID KEY */          59327100
*                  ' OR "RETPTOKN"'||        /* INVALID KEY */          59331400
*                  ' OR "STATAREA".';        /* INVALID KEY */          59335700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59340000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59344300
*              ZMACRET=8;                    /* MACRO ERROR */          59348600
*            END;                                                       59352900
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 59357200
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        59361500
*  IF MF(2)=''                               /* CHECK FOR NULL */       59365800
*   THEN                                                                59370100
*    DO;                                     /* KEY IS REQUIRED */      59374400
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      59378700
*        ZMS=' 8, WHEN "M" IS SPECIFIED'||                              59383000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          59387300
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            59391600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 59395900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                59400200
*        ZMACRET=8;                          /* MACRO ERROR */          59404500
*    END;                                                               59408800
*  ELSE                                                                 59413100
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        59417400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 59421700
*  XMFSCK='';                                /* RESET XVARIABLE */      59426000
*  IF TRANSLATE(MF(3))                                                  59430300
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    59434600
*    THEN                                                               59438900
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        59443200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 59447500
*  IF TRANSLATE(MF(3))                                                  59451800
*              = 'NOCHECK'                   /* CHECK FOR KEYWORD */    59456100
*    THEN                                                               59460400
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        59464700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 59469000
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        59473300
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    59477600
*    THEN                                                               59481900
*      DO;                                   /* KEYWORD NOT ENTERED */  59486200
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          59490500
*        IF MF(3)^=''                                                   59494800
*          THEN                                                         59499100
*            DO;                                                        59503400
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      59507700
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            59512000
*                  MF||'"'||                                            59516300
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              59520600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    59524900
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        59529200
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        59533500
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59537800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59542100
*              ZMACRET=8;                    /* MACRO ERROR */          59546400
*            END;                                                       59550700
*      END;                                                             59555000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59559300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     59563600
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59567900
*  IF TRANSLATE(MF(1))                                                  59572200
*              = 'E'                         /* CHECK FOR KEYWORD */    59576500
*    THEN                                                               59580800
*      DO;                                                              59585100
*        XMF='E';                            /* SET XVARIABLE */        59589400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    59593700
*          THEN                                                         59598000
*            DO;                                                        59602300
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            59606600
*                  MF||                                                 59610900
*                  '" "MF"'||                                           59615200
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       59619500
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59623800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59628100
*              ZMACRET=8;                    /* MACRO ERROR */          59632400
*            END;                                                       59636700
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 59641000
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        59645300
*  IF MF(2)=''                               /* CHECK FOR NULL */       59649600
*   THEN                                                                59653900
*    DO;                                     /* KEY IS REQUIRED */      59658200
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      59662500
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              59666800
*            ' FOR THE "MF" KEY, POSITIONAL'||                          59671100
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            59675400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 59679700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                59684000
*        ZMACRET=8;                          /* MACRO ERROR */          59688300
*    END;                                                               59692600
*  ELSE                                                                 59696900
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        59701200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 59705500
*  XMFSCK='';                                /* RESET XVARIABLE */      59709800
*  IF TRANSLATE(MF(3))                                                  59714100
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    59718400
*    THEN                                                               59722700
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        59727000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 59731300
*  IF TRANSLATE(MF(3))                                                  59735600
*              = 'NOCHECK'                   /* CHECK FOR KEYWORD */    59739900
*    THEN                                                               59744200
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        59748500
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 59752800
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        59757100
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    59761400
*    THEN                                                               59765700
*      DO;                                   /* KEYWORD NOT ENTERED */  59770000
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          59774300
*        IF MF(3)^=''                                                   59778600
*          THEN                                                         59782900
*            DO;                                                        59787200
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      59791500
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            59795800
*                  MF||'"'||                                            59800100
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              59804400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    59808700
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        59813000
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        59817300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59821600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59825900
*              ZMACRET=8;                    /* MACRO ERROR */          59830200
*            END;                                                       59834500
*      END;                                                             59838800
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59843100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     59847400
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59851700
*  IF MF='MF'                                                           59856000
*    | MF='()'                               /*CHECK ENTRY*/            59860300
*     THEN                                                              59864600
*       DO;                                                             59868900
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            59873200
*                  ' MUST CONTAIN ONE'||                                59877500
*                  ' (OR MORE) ARGUMENT(S).';                           59881800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59886100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59890400
*              ZMACRET=8;                    /* MACRO ERROR */          59894700
*       END;                                                            59899000
*  ELSE                                                                 59903300
*    DO;                                                                59907600
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        59911900
*      IF XMF=''                             /* CHECK FOR KEYWORD */    59916200
*        THEN                                                           59920500
*          DO;                               /* KEYWORD NOT ENTERED */  59924800
*            XMF='S';                        /* SET DEFAULT */          59929100
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    59933400
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    59937700
*              THEN                                                     59942000
*                DO;                                                    59946300
*                  ZXMF='';                  /* RESET IN/OUTPUT */      59950600
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            59954900
*                  MF||'"'||                                            59959200
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              59963500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    59967800
*                  ' "S",'||                 /* VALID KEYWORD */        59972100
*                  ' "L",'||                 /* VALID KEYWORD */        59976400
*                  ' "M",'||                 /* VALID KEYWORD */        59980700
*                  ' OR "E".';               /* VALID KEYWORD */        59985000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           59989300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59993600
*              ZMACRET=8;                    /* MACRO ERROR */          59997900
*                END;                                                   60002200
*          END;                                                         60006500
*    END;                                                               60010800
*/********************************************************************/ 60015100
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 60019400
*/********************************************************************/ 60023700
*  IF PLISTVER=''                                                       60028000
*     | PLISTVER(1)='IMPLIED_VERSION'                                   60032300
*    THEN                                                               60036600
*      ZC='ON';                              /* DEFAULT FLAG ON */      60040900
*    ELSE                                                               60045200
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     60049500
*/********************************************************************/ 60053800
*/***PD.P02 DEFAULT ECHO                                             */ 60058100
*/********************************************************************/ 60062400
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 60066700
*  IF XMF^='L'                                                          60071000
*     & XMFSCK='COMPLETE'                                               60075300
*    THEN                                                               60079600
*      DO;                                   /* FULL SYNTAX CHECK */    60083900
*        ANS('/*DEFAULT(S): */')                                        60088200
*           NORESCAN COL(MACLMAR+5);                                    60092500
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 60096800
*  IF TRANSLATE(REQUEST(1))                                             60101100
*              = 'ASSIGN_BUFFER'  |          /* CHECK FOR KEYWORD */    60105400
*     REQUEST(1)=''                          /* CHECK FOR NULL */       60109700
*    THEN                                                               60114000
*      DO;                                                              60118300
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60122600
*  XBUFTYPE='SAME';                          /* RESET XVARIABLE */      60126900
*  IF BUFTYPE(1)=''                                                     60131200
*    THEN                                                               60135500
*        ZC='ON';                            /* DEFAULT FLAG ON */      60139800
*  IF TRANSLATE(BUFTYPE(1))                                             60144100
*              = 'SAME'                                                 60148400
*    THEN                                                               60152700
*        XBUFTYPE='';                        /* SET XVARIABLE */        60157000
*  IF TRANSLATE(BUFTYPE(1))                                             60161300
*              = 'PAGEELIG'                                             60165600
*    THEN                                                               60169900
*        XBUFTYPE='';                        /* SET XVARIABLE */        60174200
*  IF TRANSLATE(BUFTYPE(1))                                             60178500
*              = 'FIXED'                                                60182800
*    THEN                                                               60187100
*        XBUFTYPE='';                        /* SET XVARIABLE */        60191400
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60195700
*  IF XBUFTYPE^=''                                                      60200000
*    THEN                                                               60204300
*      ANS('/* BUFTYPE('||                                              60208600
*          XBUFTYPE||                                                   60212900
*          ')*/')                                                       60217200
*          NORESCAN COL(MACLMAR+5);                                     60221500
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60225800
*  XCSMUSER='NO';                            /* RESET XVARIABLE */      60230100
*  IF CSMUSER(1)=''                                                     60234400
*    THEN                                                               60238700
*        ZC='ON';                            /* DEFAULT FLAG ON */      60243000
*  IF TRANSLATE(CSMUSER(1))                                             60247300
*              = 'NO'                                                   60251600
*    THEN                                                               60255900
*        XCSMUSER='';                        /* SET XVARIABLE */        60260200
*  IF TRANSLATE(CSMUSER(1))                                             60264500
*              = 'YES'                                                  60268800
*    THEN                                                               60273100
*        XCSMUSER='';                        /* SET XVARIABLE */        60277400
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60281700
*  IF XCSMUSER^=''                                                      60286000
*    THEN                                                               60290300
*      ANS('/* CSMUSER('||                                              60294600
*          XCSMUSER||                                                   60298900
*          ')*/')                                                       60303200
*          NORESCAN COL(MACLMAR+5);                                     60307500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60311800
*  XGAP='';                                                             60316100
*  IF GAP(1)=''                                                         60320400
*    THEN                                                               60324700
*      DO;                                                              60329000
*        XGAP='0';                           /* SET DEFAULT */          60333300
*        ZC='ON';                            /* DEFAULT FLAG ON */      60337600
*      END;                                                             60341900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60346200
*  IF XGAP^=''                                                          60350500
*    THEN                                                               60354800
*      ANS('/* GAP('||                                                  60359100
*          XGAP||                                                       60363400
*          ')*/')                                                       60367700
*          NORESCAN COL(MACLMAR+5);                                     60372000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60376300
*  XOWNERID='';                                                         60380600
*  IF OWNERID(1)=''                                                     60384900
*    THEN                                                               60389200
*      DO;                                                              60393500
*        XOWNERID='0';                       /* SET DEFAULT */          60397800
*        ZC='ON';                            /* DEFAULT FLAG ON */      60402100
*      END;                                                             60406400
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60410700
*  IF XOWNERID^=''                                                      60415000
*    THEN                                                               60419300
*      ANS('/* OWNERID('||                                              60423600
*          XOWNERID||                                                   60427900
*          ')*/')                                                       60432200
*          NORESCAN COL(MACLMAR+5);                                     60436500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60440800
*  XTASKID='';                                                          60445100
*  IF TASKID(1)=''                                                      60449400
*    THEN                                                               60453700
*      DO;                                                              60458000
*        XTASKID='0';                        /* SET DEFAULT */          60462300
*        ZC='ON';                            /* DEFAULT FLAG ON */      60466600
*      END;                                                             60470900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60475200
*  IF XTASKID^=''                                                       60479500
*    THEN                                                               60483800
*      ANS('/* TASKID('||                                               60488100
*          XTASKID||                                                    60492400
*          ')*/')                                                       60496700
*          NORESCAN COL(MACLMAR+5);                                     60501000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60505300
*  XTHREAD='';                                                          60509600
*  IF THREAD(1)=''                                                      60513900
*    THEN                                                               60518200
*      DO;                                                              60522500
*        XTHREAD='0';                        /* SET DEFAULT */          60526800
*        ZC='ON';                            /* DEFAULT FLAG ON */      60531100
*      END;                                                             60535400
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60539700
*  IF XTHREAD^=''                                                       60544000
*    THEN                                                               60548300
*      ANS('/* THREAD('||                                               60552600
*          XTHREAD||                                                    60556900
*          ')*/')                                                       60561200
*          NORESCAN COL(MACLMAR+5);                                     60565500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60569800
*  XUTILRTN='';                                                         60574100
*  IF UTILRTN(1)=''                                                     60578400
*    THEN                                                               60582700
*      DO;                                                              60587000
*        XUTILRTN='0';                       /* SET DEFAULT */          60591300
*        ZC='ON';                            /* DEFAULT FLAG ON */      60595600
*      END;                                                             60599900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60604200
*  IF XUTILRTN^=''                                                      60608500
*    THEN                                                               60612800
*      ANS('/* UTILRTN('||                                              60617100
*          XUTILRTN||                                                   60621400
*          ')*/')                                                       60625700
*          NORESCAN COL(MACLMAR+5);                                     60630000
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 60634300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     60638600
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 60642900
*  IF TRANSLATE(REQUEST(1))                                             60647200
*              = 'CHANGE_OWNER'              /* CHECK FOR KEYWORD */    60651500
*    THEN                                                               60655800
*      DO;                                                              60660100
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60664400
*  XCSMUSER='NO';                            /* RESET XVARIABLE */      60668700
*  IF CSMUSER(1)=''                                                     60673000
*    THEN                                                               60677300
*        ZC='ON';                            /* DEFAULT FLAG ON */      60681600
*  IF TRANSLATE(CSMUSER(1))                                             60685900
*              = 'NO'                                                   60690200
*    THEN                                                               60694500
*        XCSMUSER='';                        /* SET XVARIABLE */        60698800
*  IF TRANSLATE(CSMUSER(1))                                             60703100
*              = 'YES'                                                  60707400
*    THEN                                                               60711700
*        XCSMUSER='';                        /* SET XVARIABLE */        60716000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60720300
*  IF XCSMUSER^=''                                                      60724600
*    THEN                                                               60728900
*      ANS('/* CSMUSER('||                                              60733200
*          XCSMUSER||                                                   60737500
*          ')*/')                                                       60741800
*          NORESCAN COL(MACLMAR+5);                                     60746100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60750400
*  XGAP='';                                                             60754700
*  IF GAP(1)=''                                                         60759000
*    THEN                                                               60763300
*      DO;                                                              60767600
*        XGAP='0';                           /* SET DEFAULT */          60771900
*        ZC='ON';                            /* DEFAULT FLAG ON */      60776200
*      END;                                                             60780500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60784800
*  IF XGAP^=''                                                          60789100
*    THEN                                                               60793400
*      ANS('/* GAP('||                                                  60797700
*          XGAP||                                                       60802000
*          ')*/')                                                       60806300
*          NORESCAN COL(MACLMAR+5);                                     60810600
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60814900
*  XOWNERID='';                                                         60819200
*  IF OWNERID(1)=''                                                     60823500
*    THEN                                                               60827800
*      DO;                                                              60832100
*        XOWNERID='0';                       /* SET DEFAULT */          60836400
*        ZC='ON';                            /* DEFAULT FLAG ON */      60840700
*      END;                                                             60845000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60849300
*  IF XOWNERID^=''                                                      60853600
*    THEN                                                               60857900
*      ANS('/* OWNERID('||                                              60862200
*          XOWNERID||                                                   60866500
*          ')*/')                                                       60870800
*          NORESCAN COL(MACLMAR+5);                                     60875100
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60879400
*  XSKIPBUF='NO';                            /* RESET XVARIABLE */      60883700
*  IF SKIPBUF(1)=''                                                     60888000
*    THEN                                                               60892300
*        ZC='ON';                            /* DEFAULT FLAG ON */      60896600
*  IF TRANSLATE(SKIPBUF(1))                                             60900900
*              = 'NO'                                                   60905200
*    THEN                                                               60909500
*        XSKIPBUF='';                        /* SET XVARIABLE */        60913800
*  IF TRANSLATE(SKIPBUF(1))                                             60918100
*              = 'YES'                                                  60922400
*    THEN                                                               60926700
*        XSKIPBUF='';                        /* SET XVARIABLE */        60931000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60935300
*  IF XSKIPBUF^=''                                                      60939600
*    THEN                                                               60943900
*      ANS('/* SKIPBUF('||                                              60948200
*          XSKIPBUF||                                                   60952500
*          ')*/')                                                       60956800
*          NORESCAN COL(MACLMAR+5);                                     60961100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 60965400
*  XTASKID='';                                                          60969700
*  IF TASKID(1)=''                                                      60974000
*    THEN                                                               60978300
*      DO;                                                              60982600
*        XTASKID='0';                        /* SET DEFAULT */          60986900
*        ZC='ON';                            /* DEFAULT FLAG ON */      60991200
*      END;                                                             60995500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 60999800
*  IF XTASKID^=''                                                       61004100
*    THEN                                                               61008400
*      ANS('/* TASKID('||                                               61012700
*          XTASKID||                                                    61017000
*          ')*/')                                                       61021300
*          NORESCAN COL(MACLMAR+5);                                     61025600
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61029900
*  XTHREAD='';                                                          61034200
*  IF THREAD(1)=''                                                      61038500
*    THEN                                                               61042800
*      DO;                                                              61047100
*        XTHREAD='0';                        /* SET DEFAULT */          61051400
*        ZC='ON';                            /* DEFAULT FLAG ON */      61055700
*      END;                                                             61060000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61064300
*  IF XTHREAD^=''                                                       61068600
*    THEN                                                               61072900
*      ANS('/* THREAD('||                                               61077200
*          XTHREAD||                                                    61081500
*          ')*/')                                                       61085800
*          NORESCAN COL(MACLMAR+5);                                     61090100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61094400
*  XUTILRTN='';                                                         61098700
*  IF UTILRTN(1)=''                                                     61103000
*    THEN                                                               61107300
*      DO;                                                              61111600
*        XUTILRTN='0';                       /* SET DEFAULT */          61115900
*        ZC='ON';                            /* DEFAULT FLAG ON */      61120200
*      END;                                                             61124500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61128800
*  IF XUTILRTN^=''                                                      61133100
*    THEN                                                               61137400
*      ANS('/* UTILRTN('||                                              61141700
*          XUTILRTN||                                                   61146000
*          ')*/')                                                       61150300
*          NORESCAN COL(MACLMAR+5);                                     61154600
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61158900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     61163200
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61167500
*  IF TRANSLATE(REQUEST(1))                                             61171800
*              = 'COPY_DATA'                 /* CHECK FOR KEYWORD */    61176100
*    THEN                                                               61180400
*      DO;                                                              61184700
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61189000
*  IF PAD(1)=''                                                         61193300
*    THEN                                                               61197600
*      DO;                                                              61201900
*        ANS('/*PAD(NO)*/')                                             61206200
*            NORESCAN COL(MACLMAR+5);                                   61210500
*        ZC='ON';                            /* DEFAULT FLAG ON */      61214800
*      END;                                                             61219100
*/*PD.KXVAR01 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 61223400
*  XPADCHAR='';                                                         61227700
*  IF PADCHAR(1)=''                                                     61232000
*    THEN                                                               61236300
*      DO;                                                              61240600
*        XPADCHAR='0';                       /* SET DEFAULT */          61244900
*        ZC='ON';                            /* DEFAULT FLAG ON */      61249200
*      END;                                                             61253500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61257800
*  IF XPADCHAR^=''                                                      61262100
*    THEN                                                               61266400
*      ANS('/* PADCHAR('||                                              61270700
*          XPADCHAR||                                                   61275000
*          ')*/')                                                       61279300
*          NORESCAN COL(MACLMAR+5);                                     61283600
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61287900
*  XSRCGAP='';                                                          61292200
*  IF SRCGAP(1)=''                                                      61296500
*    THEN                                                               61300800
*      DO;                                                              61305100
*        XSRCGAP='0';                        /* SET DEFAULT */          61309400
*        ZC='ON';                            /* DEFAULT FLAG ON */      61313700
*      END;                                                             61318000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61322300
*  IF XSRCGAP^=''                                                       61326600
*    THEN                                                               61330900
*      ANS('/* SRCGAP('||                                               61335200
*          XSRCGAP||                                                    61339500
*          ')*/')                                                       61343800
*          NORESCAN COL(MACLMAR+5);                                     61348100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61352400
*  XTARGGAP='';                                                         61356700
*  IF TARGGAP(1)=''                                                     61361000
*    THEN                                                               61365300
*      DO;                                                              61369600
*        XTARGGAP='0';                       /* SET DEFAULT */          61373900
*        ZC='ON';                            /* DEFAULT FLAG ON */      61378200
*      END;                                                             61382500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61386800
*  IF XTARGGAP^=''                                                      61391100
*    THEN                                                               61395400
*      ANS('/* TARGGAP('||                                              61399700
*          XTARGGAP||                                                   61404000
*          ')*/')                                                       61408300
*          NORESCAN COL(MACLMAR+5);                                     61412600
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61416900
*  XTHREAD='';                                                          61421200
*  IF THREAD(1)=''                                                      61425500
*    THEN                                                               61429800
*      DO;                                                              61434100
*        XTHREAD='0';                        /* SET DEFAULT */          61438400
*        ZC='ON';                            /* DEFAULT FLAG ON */      61442700
*      END;                                                             61447000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61451300
*  IF XTHREAD^=''                                                       61455600
*    THEN                                                               61459900
*      ANS('/* THREAD('||                                               61464200
*          XTHREAD||                                                    61468500
*          ')*/')                                                       61472800
*          NORESCAN COL(MACLMAR+5);                                     61477100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61481400
*  XUTILRTN='';                                                         61485700
*  IF UTILRTN(1)=''                                                     61490000
*    THEN                                                               61494300
*      DO;                                                              61498600
*        XUTILRTN='0';                       /* SET DEFAULT */          61502900
*        ZC='ON';                            /* DEFAULT FLAG ON */      61507200
*      END;                                                             61511500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61515800
*  IF XUTILRTN^=''                                                      61520100
*    THEN                                                               61524400
*      ANS('/* UTILRTN('||                                              61528700
*          XUTILRTN||                                                   61533000
*          ')*/')                                                       61537300
*          NORESCAN COL(MACLMAR+5);                                     61541600
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61545900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     61550200
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61554500
*  IF TRANSLATE(REQUEST(1))                                             61558800
*              = 'FIX_BUFFER'                /* CHECK FOR KEYWORD */    61563100
*    THEN                                                               61567400
*      DO;                                                              61571700
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61576000
*  XGAP='';                                                             61580300
*  IF GAP(1)=''                                                         61584600
*    THEN                                                               61588900
*      DO;                                                              61593200
*        XGAP='0';                           /* SET DEFAULT */          61597500
*        ZC='ON';                            /* DEFAULT FLAG ON */      61601800
*      END;                                                             61606100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61610400
*  IF XGAP^=''                                                          61614700
*    THEN                                                               61619000
*      ANS('/* GAP('||                                                  61623300
*          XGAP||                                                       61627600
*          ')*/')                                                       61631900
*          NORESCAN COL(MACLMAR+5);                                     61636200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61640500
*  XTHREAD='';                                                          61644800
*  IF THREAD(1)=''                                                      61649100
*    THEN                                                               61653400
*      DO;                                                              61657700
*        XTHREAD='0';                        /* SET DEFAULT */          61662000
*        ZC='ON';                            /* DEFAULT FLAG ON */      61666300
*      END;                                                             61670600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61674900
*  IF XTHREAD^=''                                                       61679200
*    THEN                                                               61683500
*      ANS('/* THREAD('||                                               61687800
*          XTHREAD||                                                    61692100
*          ')*/')                                                       61696400
*          NORESCAN COL(MACLMAR+5);                                     61700700
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 61705000
*  XUTILRTN='';                                                         61709300
*  IF UTILRTN(1)=''                                                     61713600
*    THEN                                                               61717900
*      DO;                                                              61722200
*        XUTILRTN='0';                       /* SET DEFAULT */          61726500
*        ZC='ON';                            /* DEFAULT FLAG ON */      61730800
*      END;                                                             61735100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61739400
*  IF XUTILRTN^=''                                                      61743700
*    THEN                                                               61748000
*      ANS('/* UTILRTN('||                                              61752300
*          XUTILRTN||                                                   61756600
*          ')*/')                                                       61760900
*          NORESCAN COL(MACLMAR+5);                                     61765200
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 61769500
*  XWAIT='NO';                               /* RESET XVARIABLE */      61773800
*  IF WAIT(1)=''                                                        61778100
*    THEN                                                               61782400
*        ZC='ON';                            /* DEFAULT FLAG ON */      61786700
*  IF TRANSLATE(WAIT(1))                                                61791000
*              = 'NO'                                                   61795300
*    THEN                                                               61799600
*        XWAIT='';                           /* SET XVARIABLE */        61803900
*  IF TRANSLATE(WAIT(1))                                                61808200
*              = 'YES'                                                  61812500
*    THEN                                                               61816800
*        XWAIT='';                           /* SET XVARIABLE */        61821100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61825400
*  IF XWAIT^=''                                                         61829700
*    THEN                                                               61834000
*      ANS('/* WAIT('||                                                 61838300
*          XWAIT||                                                      61842600
*          ')*/')                                                       61846900
*          NORESCAN COL(MACLMAR+5);                                     61851200
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61855500
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     61859800
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61864100
*  IF TRANSLATE(REQUEST(1))                                             61868400
*              = 'FREE_BUFFER'               /* CHECK FOR KEYWORD */    61872700
*    THEN                                                               61877000
*      DO;                                                              61881300
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 61885600
*  XCLEAR='NO';                              /* RESET XVARIABLE */      61889900
*  IF CLEAR(1)=''                                                       61894200
*    THEN                                                               61898500
*        ZC='ON';                            /* DEFAULT FLAG ON */      61902800
*  IF TRANSLATE(CLEAR(1))                                               61907100
*              = 'NO'                                                   61911400
*    THEN                                                               61915700
*        XCLEAR='';                          /* SET XVARIABLE */        61920000
*  IF TRANSLATE(CLEAR(1))                                               61924300
*              = 'YES'                                                  61928600
*    THEN                                                               61932900
*        XCLEAR='';                          /* SET XVARIABLE */        61937200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 61941500
*  IF XCLEAR^=''                                                        61945800
*    THEN                                                               61950100
*      ANS('/* CLEAR('||                                                61954400
*          XCLEAR||                                                     61958700
*          ')*/')                                                       61963000
*          NORESCAN COL(MACLMAR+5);                                     61967300
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 61971600
*  XFREETO='USER';                           /* RESET XVARIABLE */      61975900
*  IF FREETO(1)=''                                                      61980200
*    THEN                                                               61984500
*        ZC='ON';                            /* DEFAULT FLAG ON */      61988800
*  IF TRANSLATE(FREETO(1))                                              61993100
*              = 'USER'                                                 61997400
*    THEN                                                               62001700
*        XFREETO='';                         /* SET XVARIABLE */        62006000
*  IF TRANSLATE(FREETO(1))                                              62010300
*              = 'CSM'                                                  62014600
*    THEN                                                               62018900
*        XFREETO='';                         /* SET XVARIABLE */        62023200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62027500
*  IF XFREETO^=''                                                       62031800
*    THEN                                                               62036100
*      ANS('/* FREETO('||                                               62040400
*          XFREETO||                                                    62044700
*          ')*/')                                                       62049000
*          NORESCAN COL(MACLMAR+5);                                     62053300
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62057600
*  XGAP='';                                                             62061900
*  IF GAP(1)=''                                                         62066200
*    THEN                                                               62070500
*      DO;                                                              62074800
*        XGAP='0';                           /* SET DEFAULT */          62079100
*        ZC='ON';                            /* DEFAULT FLAG ON */      62083400
*      END;                                                             62087700
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62092000
*  IF XGAP^=''                                                          62096300
*    THEN                                                               62100600
*      ANS('/* GAP('||                                                  62104900
*          XGAP||                                                       62109200
*          ')*/')                                                       62113500
*          NORESCAN COL(MACLMAR+5);                                     62117800
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 62122100
*  XSKIPBUF='NO';                            /* RESET XVARIABLE */      62126400
*  IF SKIPBUF(1)=''                                                     62130700
*    THEN                                                               62135000
*        ZC='ON';                            /* DEFAULT FLAG ON */      62139300
*  IF TRANSLATE(SKIPBUF(1))                                             62143600
*              = 'NO'                                                   62147900
*    THEN                                                               62152200
*        XSKIPBUF='';                        /* SET XVARIABLE */        62156500
*  IF TRANSLATE(SKIPBUF(1))                                             62160800
*              = 'YES'                                                  62165100
*    THEN                                                               62169400
*        XSKIPBUF='';                        /* SET XVARIABLE */        62173700
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62178000
*  IF XSKIPBUF^=''                                                      62182300
*    THEN                                                               62186600
*      ANS('/* SKIPBUF('||                                              62190900
*          XSKIPBUF||                                                   62195200
*          ')*/')                                                       62199500
*          NORESCAN COL(MACLMAR+5);                                     62203800
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62208100
*  XTHREAD='';                                                          62212400
*  IF THREAD(1)=''                                                      62216700
*    THEN                                                               62221000
*      DO;                                                              62225300
*        XTHREAD='0';                        /* SET DEFAULT */          62229600
*        ZC='ON';                            /* DEFAULT FLAG ON */      62233900
*      END;                                                             62238200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62242500
*  IF XTHREAD^=''                                                       62246800
*    THEN                                                               62251100
*      ANS('/* THREAD('||                                               62255400
*          XTHREAD||                                                    62259700
*          ')*/')                                                       62264000
*          NORESCAN COL(MACLMAR+5);                                     62268300
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62272600
*  XUTILRTN='';                                                         62276900
*  IF UTILRTN(1)=''                                                     62281200
*    THEN                                                               62285500
*      DO;                                                              62289800
*        XUTILRTN='0';                       /* SET DEFAULT */          62294100
*        ZC='ON';                            /* DEFAULT FLAG ON */      62298400
*      END;                                                             62302700
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62307000
*  IF XUTILRTN^=''                                                      62311300
*    THEN                                                               62315600
*      ANS('/* UTILRTN('||                                              62319900
*          XUTILRTN||                                                   62324200
*          ')*/')                                                       62328500
*          NORESCAN COL(MACLMAR+5);                                     62332800
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 62337100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     62341400
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 62345700
*  IF TRANSLATE(REQUEST(1))                                             62350000
*              = 'GET_BUFFER'                /* CHECK FOR KEYWORD */    62354300
*    THEN                                                               62358600
*      DO;                                                              62362900
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 62367200
*  XCLEAR='NO';                              /* RESET XVARIABLE */      62371500
*  IF CLEAR(1)=''                                                       62375800
*    THEN                                                               62380100
*        ZC='ON';                            /* DEFAULT FLAG ON */      62384400
*  IF TRANSLATE(CLEAR(1))                                               62388700
*              = 'NO'                                                   62393000
*    THEN                                                               62397300
*        XCLEAR='';                          /* SET XVARIABLE */        62401600
*  IF TRANSLATE(CLEAR(1))                                               62405900
*              = 'YES'                                                  62410200
*    THEN                                                               62414500
*        XCLEAR='';                          /* SET XVARIABLE */        62418800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62423100
*  IF XCLEAR^=''                                                        62427400
*    THEN                                                               62431700
*      ANS('/* CLEAR('||                                                62436000
*          XCLEAR||                                                     62440300
*          ')*/')                                                       62444600
*          NORESCAN COL(MACLMAR+5);                                     62448900
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 62453200
*  XCSMUSER='NO';                            /* RESET XVARIABLE */      62457500
*  IF CSMUSER(1)=''                                                     62461800
*    THEN                                                               62466100
*        ZC='ON';                            /* DEFAULT FLAG ON */      62470400
*  IF TRANSLATE(CSMUSER(1))                                             62474700
*              = 'NO'                                                   62479000
*    THEN                                                               62483300
*        XCSMUSER='';                        /* SET XVARIABLE */        62487600
*  IF TRANSLATE(CSMUSER(1))                                             62491900
*              = 'YES'                                                  62496200
*    THEN                                                               62500500
*        XCSMUSER='';                        /* SET XVARIABLE */        62504800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62509100
*  IF XCSMUSER^=''                                                      62513400
*    THEN                                                               62517700
*      ANS('/* CSMUSER('||                                              62522000
*          XCSMUSER||                                                   62526300
*          ')*/')                                                       62530600
*          NORESCAN COL(MACLMAR+5);                                     62534900
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62539200
*  XFREERTN='';                                                         62543500
*  IF FREERTN(1)=''                                                     62547800
*    THEN                                                               62552100
*      DO;                                                              62556400
*        XFREERTN='CSM';                     /* SET DEFAULT */          62560700
*        ZC='ON';                            /* DEFAULT FLAG ON */      62565000
*      END;                                                             62569300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62573600
*  IF XFREERTN^=''                                                      62577900
*    THEN                                                               62582200
*      ANS('/* FREERTN('||                                              62586500
*          XFREERTN||                                                   62590800
*          ')*/')                                                       62595100
*          NORESCAN COL(MACLMAR+5);                                     62599400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62603700
*  XGAP='';                                                             62608000
*  IF GAP(1)=''                                                         62612300
*    THEN                                                               62616600
*      DO;                                                              62620900
*        XGAP='0';                           /* SET DEFAULT */          62625200
*        ZC='ON';                            /* DEFAULT FLAG ON */      62629500
*      END;                                                             62633800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62638100
*  IF XGAP^=''                                                          62642400
*    THEN                                                               62646700
*      ANS('/* GAP('||                                                  62651000
*          XGAP||                                                       62655300
*          ')*/')                                                       62659600
*          NORESCAN COL(MACLMAR+5);                                     62663900
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62668200
*  XOWNERID='';                                                         62672500
*  IF OWNERID(1)=''                                                     62676800
*    THEN                                                               62681100
*      DO;                                                              62685400
*        XOWNERID='0';                       /* SET DEFAULT */          62689700
*        ZC='ON';                            /* DEFAULT FLAG ON */      62694000
*      END;                                                             62698300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62702600
*  IF XOWNERID^=''                                                      62706900
*    THEN                                                               62711200
*      ANS('/* OWNERID('||                                              62715500
*          XOWNERID||                                                   62719800
*          ')*/')                                                       62724100
*          NORESCAN COL(MACLMAR+5);                                     62728400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62732700
*  XTASKID='';                                                          62737000
*  IF TASKID(1)=''                                                      62741300
*    THEN                                                               62745600
*      DO;                                                              62749900
*        XTASKID='0';                        /* SET DEFAULT */          62754200
*        ZC='ON';                            /* DEFAULT FLAG ON */      62758500
*      END;                                                             62762800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62767100
*  IF XTASKID^=''                                                       62771400
*    THEN                                                               62775700
*      ANS('/* TASKID('||                                               62780000
*          XTASKID||                                                    62784300
*          ')*/')                                                       62788600
*          NORESCAN COL(MACLMAR+5);                                     62792900
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62797200
*  XTHREAD='';                                                          62801500
*  IF THREAD(1)=''                                                      62805800
*    THEN                                                               62810100
*      DO;                                                              62814400
*        XTHREAD='0';                        /* SET DEFAULT */          62818700
*        ZC='ON';                            /* DEFAULT FLAG ON */      62823000
*      END;                                                             62827300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62831600
*  IF XTHREAD^=''                                                       62835900
*    THEN                                                               62840200
*      ANS('/* THREAD('||                                               62844500
*          XTHREAD||                                                    62848800
*          ')*/')                                                       62853100
*          NORESCAN COL(MACLMAR+5);                                     62857400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 62861700
*  XUTILRTN='';                                                         62866000
*  IF UTILRTN(1)=''                                                     62870300
*    THEN                                                               62874600
*      DO;                                                              62878900
*        XUTILRTN='0';                       /* SET DEFAULT */          62883200
*        ZC='ON';                            /* DEFAULT FLAG ON */      62887500
*      END;                                                             62891800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62896100
*  IF XUTILRTN^=''                                                      62900400
*    THEN                                                               62904700
*      ANS('/* UTILRTN('||                                              62909000
*          XUTILRTN||                                                   62913300
*          ')*/')                                                       62917600
*          NORESCAN COL(MACLMAR+5);                                     62921900
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 62926200
*  XWAIT='NO';                               /* RESET XVARIABLE */      62930500
*  IF WAIT(1)=''                                                        62934800
*    THEN                                                               62939100
*        ZC='ON';                            /* DEFAULT FLAG ON */      62943400
*  IF TRANSLATE(WAIT(1))                                                62947700
*              = 'NO'                                                   62952000
*    THEN                                                               62956300
*        XWAIT='';                           /* SET XVARIABLE */        62960600
*  IF TRANSLATE(WAIT(1))                                                62964900
*              = 'YES'                                                  62969200
*    THEN                                                               62973500
*        XWAIT='';                           /* SET XVARIABLE */        62977800
*  IF TRANSLATE(WAIT(1))                                                62982100
*              = 'EXPAND'                                               62986400
*    THEN                                                               62990700
*        XWAIT='';                           /* SET XVARIABLE */        62995000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62999300
*  IF XWAIT^=''                                                         63003600
*    THEN                                                               63007900
*      ANS('/* WAIT('||                                                 63012200
*          XWAIT||                                                      63016500
*          ')*/')                                                       63020800
*          NORESCAN COL(MACLMAR+5);                                     63025100
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 63029400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     63033700
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 63038000
*  IF TRANSLATE(REQUEST(1))                                             63042300
*              = 'PAGE_BUFFER'               /* CHECK FOR KEYWORD */    63046600
*    THEN                                                               63050900
*      DO;                                                              63055200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 63059500
*  XGAP='';                                                             63063800
*  IF GAP(1)=''                                                         63068100
*    THEN                                                               63072400
*      DO;                                                              63076700
*        XGAP='0';                           /* SET DEFAULT */          63081000
*        ZC='ON';                            /* DEFAULT FLAG ON */      63085300
*      END;                                                             63089600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 63093900
*  IF XGAP^=''                                                          63098200
*    THEN                                                               63102500
*      ANS('/* GAP('||                                                  63106800
*          XGAP||                                                       63111100
*          ')*/')                                                       63115400
*          NORESCAN COL(MACLMAR+5);                                     63119700
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 63124000
*  XTHREAD='';                                                          63128300
*  IF THREAD(1)=''                                                      63132600
*    THEN                                                               63136900
*      DO;                                                              63141200
*        XTHREAD='0';                        /* SET DEFAULT */          63145500
*        ZC='ON';                            /* DEFAULT FLAG ON */      63149800
*      END;                                                             63154100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 63158400
*  IF XTHREAD^=''                                                       63162700
*    THEN                                                               63167000
*      ANS('/* THREAD('||                                               63171300
*          XTHREAD||                                                    63175600
*          ')*/')                                                       63179900
*          NORESCAN COL(MACLMAR+5);                                     63184200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 63188500
*  XUTILRTN='';                                                         63192800
*  IF UTILRTN(1)=''                                                     63197100
*    THEN                                                               63201400
*      DO;                                                              63205700
*        XUTILRTN='0';                       /* SET DEFAULT */          63210000
*        ZC='ON';                            /* DEFAULT FLAG ON */      63214300
*      END;                                                             63218600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 63222900
*  IF XUTILRTN^=''                                                      63227200
*    THEN                                                               63231500
*      ANS('/* UTILRTN('||                                              63235800
*          XUTILRTN||                                                   63240100
*          ')*/')                                                       63244400
*          NORESCAN COL(MACLMAR+5);                                     63248700
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 63253000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     63257300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 63261600
*  IF PLISTVER=''                                                       63265900
*    THEN                                                               63270200
*      ANS('/* PLISTVER('||                                             63274500
*          CHAR(XPLISTVER)||                                            63278800
*          ')*/')                                                       63283100
*          NORESCAN COL(MACLMAR+5);                                     63287400
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     63291700
*    THEN                                                               63296000
*      ANS('/* NONE. */')                                               63300300
*         NORESCAN COL(MACLMAR+5);                                      63304600
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 63308900
*      END;                                                             63313200
*/********************************************************************/ 63317500
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 63321800
*/********************************************************************/ 63326100
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 63330400
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        63334700
*                                                                       63339000
*  IF SYSASCE=''                                                        63343300
*    THEN                                                               63347600
*      DO;                                                              63351900
*        IF SYSSPLV=''                                                  63356200
*          THEN                                                         63360500
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     63364800
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 63369100
*          THEN                                                         63373400
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     63377700
*          ELSE                                                         63382000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      63386300
*      END;                                                             63390600
*/********************************************************************/ 63394900
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 63399200
*/********************************************************************/ 63403500
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 63407800
*  IF XMF^='L'                                                          63412100
*     & XMFSCK='COMPLETE'                                               63416400
*    THEN                                                               63420700
*      DO;                                   /* FULL SYNTAX CHECK */    63425000
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 63429300
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    63433600
*    THEN                                                               63437900
*      DO;                                                              63442200
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            63446500
*            ' "'||MACLIST||'"'||                                       63450800
*            ' CANNOT BE USED.'||                                       63455100
*            ' NO POSITIONAL ARGUMENTS'||                               63459400
*            ' ARE ALLOWED.';                                           63463700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 63468000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                63472300
*        ZMACRET=8;                          /* MACRO ERROR */          63476600
*      END;                                                             63480900
*/*PG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 63485200
*  XREQUEST='';                                                         63489500
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 63493800
*  IF TRANSLATE(REQUEST(1))                                             63498100
*              = 'ASSIGN_BUFFER'             /* CHECK FOR KEYWORD */    63502400
*     | REQUEST(1)=''                        /* CHECK FOR NULL */       63506700
*    THEN                                                               63511000
*      DO;                                                              63515300
*        XREQUEST='ASSIGN_BUFFER';           /* SET XVARIABLE */        63519600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    63523900
*          THEN                                                         63528200
*            DO;                                                        63532500
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            63536800
*                  REQUEST||                                            63541100
*                  '" "REQUEST"'||                                      63545400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        63549700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           63554000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          63558300
*              ZMACRET=8;                    /* MACRO ERROR */          63562600
*            END;                                                       63566900
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 63571200
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 63575500
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        63579800
*          THEN                                                         63584100
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   63588400
*        IF PAD^=''                          /* CHECK FOR KEY */        63592700
*          THEN                                                         63597000
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   63601300
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        63605600
*          THEN                                                         63609900
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   63614200
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        63618500
*          THEN                                                         63622800
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   63627100
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        63631400
*          THEN                                                         63635700
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   63640000
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        63644300
*          THEN                                                         63648600
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   63652900
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        63657200
*          THEN                                                         63661500
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   63665800
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        63670100
*          THEN                                                         63674400
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   63678700
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        63683000
*          THEN                                                         63687300
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   63691600
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        63695900
*          THEN                                                         63700200
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   63704500
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        63708800
*          THEN                                                         63713100
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   63717400
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        63721700
*          THEN                                                         63726000
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   63730300
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        63734600
*          THEN                                                         63738900
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   63743200
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        63747500
*          THEN                                                         63751800
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   63756100
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        63760400
*          THEN                                                         63764700
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   63769000
*        IF INITBUF^=''                      /* CHECK FOR KEY */        63773300
*          THEN                                                         63777600
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   63781900
*        IF MINFREE^=''                      /* CHECK FOR KEY */        63786200
*          THEN                                                         63790500
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   63794800
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        63799100
*          THEN                                                         63803400
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   63807700
*        IF STATAREA^=''                     /* CHECK FOR KEY */        63812000
*          THEN                                                         63816300
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   63820600
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        63824900
*          THEN                                                         63829200
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   63833500
*        IF WAIT^=''                         /* CHECK FOR KEY */        63837800
*          THEN                                                         63842100
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   63846400
*        IF CLEAR^=''                        /* CHECK FOR KEY */        63850700
*          THEN                                                         63855000
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   63859300
*        IF FREETO^=''                       /* CHECK FOR KEY */        63863600
*          THEN                                                         63867900
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   63872200
*        IF FREERTN^=''                      /* CHECK FOR KEY */        63876500
*          THEN                                                         63880800
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   63885100
*        IF ZCVAL^=''                                                   63889400
*          THEN                                                         63893700
*            DO;                             /* INCORRECT KEYS USED */  63898000
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            63902300
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            63906600
*                  REQUEST||'"'||                                       63910900
*                  ' DOES NOT ALLOW THE USE OF THE'||                   63915200
*                  ' FOLLOWING KEY(S) "'||                              63919500
*                  ZCVAL||'".';                                         63923800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           63928100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          63932400
*              ZMACRET=8;                    /* MACRO ERROR */          63936700
*            END;                                                       63941000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 63945300
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    63949600
*    THEN                                                               63953900
*      DO;                                                              63958200
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            63962500
*            BUFLIST||                                                  63966800
*            '" "BUFLIST"'||                                            63971100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              63975400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 63979700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                63984000
*        ZMACRET=8;                          /* MACRO ERROR */          63988300
*      END;                                                             63992600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 63996900
*  XBUFLIST=BUFLIST(1);                      /* SET XVARIABLE */        64001200
*  IF BUFLIST(1)=''                          /* CHECK FOR NULL */       64005500
*   THEN                                                                64009800
*    DO;                                     /* KEY IS REQUIRED */      64014100
*        ZXBUFLIST='';                       /* RESET IN/OUTPUT */      64018400
*        ZMS=' 8,  '||                                                  64022700
*            ' "BUFLIST" KEY AND ITS ARGUMENT'||                        64027000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            64031300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64035600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64039900
*        ZMACRET=8;                          /* MACRO ERROR */          64044200
*    END;                                                               64048500
*  ELSE                                                                 64052800
*    ZXBUFLIST='INPUT';                      /* SET IN/OUTPUT */        64057100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 64061400
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    64065700
*    THEN                                                               64070000
*      DO;                                                              64074300
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            64078600
*            BUFNUM||                                                   64082900
*            '" "BUFNUM"'||                                             64087200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              64091500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64095800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64100100
*        ZMACRET=8;                          /* MACRO ERROR */          64104400
*      END;                                                             64108700
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 64113000
*  XBUFNUM=BUFNUM(1);                        /* SET XVARIABLE */        64117300
*  IF BUFNUM(1)=''                           /* CHECK FOR NULL */       64121600
*   THEN                                                                64125900
*    DO;                                     /* KEY IS REQUIRED */      64130200
*        ZXBUFNUM='';                        /* RESET IN/OUTPUT */      64134500
*        ZMS=' 8,  '||                                                  64138800
*            ' "BUFNUM" KEY AND ITS ARGUMENT'||                         64143100
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            64147400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64151700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64156000
*        ZMACRET=8;                          /* MACRO ERROR */          64160300
*    END;                                                               64164600
*  ELSE                                                                 64168900
*    ZXBUFNUM='INPUT';                       /* SET IN/OUTPUT */        64173200
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64177500
*  IF BUFTYPE='BUFTYPE'                      /* CHECK ENTRY */          64181800
*    THEN                                                               64186100
*      DO;                                                              64190400
*        ZMS=' 8, THE "BUFTYPE" KEY'||       /**KOPTP* MSG*/            64194700
*            ' MUST CONTAIN ONE'||                                      64199000
*            ' (OR MORE) ARGUMENT(S).';                                 64203300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64207600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64211900
*        ZMACRET=8;                          /* MACRO ERROR */          64216200
*      END;                                                             64220500
*  IF NUMBER(BUFTYPE)>1                      /* CHECK POSITIONALS */    64224800
*    THEN                                                               64229100
*      DO;                                                              64233400
*        ZMS=' 8, "BUFTYPE'||                /**KPOSP* MSG*/            64237700
*            BUFTYPE||                                                  64242000
*            '" "BUFTYPE"'||                                            64246300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              64250600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64254900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64259200
*        ZMACRET=8;                          /* MACRO ERROR */          64263500
*      END;                                                             64267800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64272100
*  XBUFTYPE='';                              /* RESET XVARIABLE */      64276400
*  IF TRANSLATE(BUFTYPE(1))                                             64280700
*              = 'SAME'                      /* CHECK FOR KEYWORD */    64285000
*    THEN                                                               64289300
*      XBUFTYPE = 'SAME';                    /* SET XVARIABLE */        64293600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64297900
*  IF TRANSLATE(BUFTYPE(1))                                             64302200
*              = 'PAGEELIG'                  /* CHECK FOR KEYWORD */    64306500
*    THEN                                                               64310800
*      XBUFTYPE = 'PAGEELIG';                /* SET XVARIABLE */        64315100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64319400
*  IF TRANSLATE(BUFTYPE(1))                                             64323700
*              = 'FIXED'                     /* CHECK FOR KEYWORD */    64328000
*    THEN                                                               64332300
*      XBUFTYPE = 'FIXED';                   /* SET XVARIABLE */        64336600
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64340900
*  ZXBUFTYPE='INPUT';                        /* SET IN/OUTPUT */        64345200
*  IF XBUFTYPE=''                            /* CHECK FOR KEYWORD */    64349500
*    THEN                                                               64353800
*      DO;                                   /* KEYWORD NOT ENTERED */  64358100
*        XBUFTYPE='SAME';                    /* SET DEFAULT */          64362400
*        IF BUFTYPE(1)^=''                                              64366700
*          THEN                                                         64371000
*            DO;                                                        64375300
*              ZXBUFTYPE='';                 /* RESET IN/OUTPUT */      64379600
*              ZMS=' 8, "BUFTYPE'||          /**KUKWP* MSG*/            64383900
*                  BUFTYPE||'"'||                                       64388200
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              64392500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    64396800
*                  ' "SAME",'||              /* VALID KEYWORD */        64401100
*                  ' "PAGEELIG",'||          /* VALID KEYWORD */        64405400
*                  ' OR "FIXED".';           /* VALID KEYWORD */        64409700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           64414000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          64418300
*              ZMACRET=8;                    /* MACRO ERROR */          64422600
*            END;                                                       64426900
*      END;                                                             64431200
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64435500
*  IF CSMUSER='CSMUSER'                      /* CHECK ENTRY */          64439800
*    THEN                                                               64444100
*      DO;                                                              64448400
*        ZMS=' 8, THE "CSMUSER" KEY'||       /**KOPTP* MSG*/            64452700
*            ' MUST CONTAIN ONE'||                                      64457000
*            ' (OR MORE) ARGUMENT(S).';                                 64461300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64465600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64469900
*        ZMACRET=8;                          /* MACRO ERROR */          64474200
*      END;                                                             64478500
*  IF NUMBER(CSMUSER)>1                      /* CHECK POSITIONALS */    64482800
*    THEN                                                               64487100
*      DO;                                                              64491400
*        ZMS=' 8, "CSMUSER'||                /**KPOSP* MSG*/            64495700
*            CSMUSER||                                                  64500000
*            '" "CSMUSER"'||                                            64504300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              64508600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64512900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64517200
*        ZMACRET=8;                          /* MACRO ERROR */          64521500
*      END;                                                             64525800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64530100
*  XCSMUSER='';                              /* RESET XVARIABLE */      64534400
*  IF TRANSLATE(CSMUSER(1))                                             64538700
*              = 'NO'                        /* CHECK FOR KEYWORD */    64543000
*    THEN                                                               64547300
*      XCSMUSER = 'NO';                      /* SET XVARIABLE */        64551600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64555900
*  IF TRANSLATE(CSMUSER(1))                                             64560200
*              = 'YES'                       /* CHECK FOR KEYWORD */    64564500
*    THEN                                                               64568800
*      XCSMUSER = 'YES';                     /* SET XVARIABLE */        64573100
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64577400
*  ZXCSMUSER='INPUT';                        /* SET IN/OUTPUT */        64581700
*  IF XCSMUSER=''                            /* CHECK FOR KEYWORD */    64586000
*    THEN                                                               64590300
*      DO;                                   /* KEYWORD NOT ENTERED */  64594600
*        XCSMUSER='NO';                      /* SET DEFAULT */          64598900
*        IF CSMUSER(1)^=''                                              64603200
*          THEN                                                         64607500
*            DO;                                                        64611800
*              ZXCSMUSER='';                 /* RESET IN/OUTPUT */      64616100
*              ZMS=' 8, "CSMUSER'||          /**KUKWP* MSG*/            64620400
*                  CSMUSER||'"'||                                       64624700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              64629000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    64633300
*                  ' "NO"'||                 /* VALID KEYWORD */        64637600
*                  ' OR "YES".';             /* VALID KEYWORD */        64641900
*              ANS MSG('?IVTCSM ---> '||ZMS);                           64646200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          64650500
*              ZMACRET=8;                    /* MACRO ERROR */          64654800
*            END;                                                       64659100
*      END;                                                             64663400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 64667700
*  IF GAP='GAP' | GAP='()'                   /*CHECK ENTRY*/            64672000
*    THEN                                                               64676300
*      DO;                                                              64680600
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            64684900
*            ' MUST CONTAIN ONE'||                                      64689200
*            ' (OR MORE) ARGUMENT(S).';                                 64693500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64697800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64702100
*        ZMACRET=8;                          /* MACRO ERROR */          64706400
*      END;                                                             64710700
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    64715000
*    THEN                                                               64719300
*      DO;                                                              64723600
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            64727900
*            GAP||                                                      64732200
*            '" "GAP"'||                                                64736500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              64740800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64745100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64749400
*        ZMACRET=8;                          /* MACRO ERROR */          64753700
*      END;                                                             64758000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 64762300
*  ZXGAP='INPUT';                            /* SET IN/OUTPUT */        64766600
*  XGAP='0';                                 /* SET DEFAULT */          64770900
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       64775200
*    THEN                                                               64779500
*      XGAP=GAP(1);                          /* SET XVARIABLE */        64783800
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 64788100
*  IF XMF^='M'                               /* BYPASS IF MF=M */       64792400
*    THEN                                                               64796700
*      DO;                                                              64801000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 64805300
*  IF ERRBFLST='ERRBFLST' | ERRBFLST='()'    /*CHECK ENTRY*/            64809600
*    THEN                                                               64813900
*      DO;                                                              64818200
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            64822500
*            ' MUST CONTAIN ONE'||                                      64826800
*            ' (OR MORE) ARGUMENT(S).';                                 64831100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64835400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64839700
*        ZMACRET=8;                          /* MACRO ERROR */          64844000
*      END;                                                             64848300
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    64852600
*    THEN                                                               64856900
*      DO;                                                              64861200
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            64865500
*            ERRBFLST||                                                 64869800
*            '" "ERRBFLST"'||                                           64874100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              64878400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64882700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64887000
*        ZMACRET=8;                          /* MACRO ERROR */          64891300
*      END;                                                             64895600
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 64899900
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       64904200
*    THEN                                                               64908500
*      DO;                                                              64912800
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        64917100
*        ZXERRBFLST='OUTPUT';                /* SET OUTPUT */           64921400
*      END;                                                             64925700
*  ELSE                                                                 64930000
*    IF ZXERRBFLST^=''                                                  64934300
*      THEN                                                             64938600
*        ZXERRBFLST='';                      /* RESET OUTPUT */         64942900
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 64947200
*      END;  /**** END OF BYPASS CHECK */                               64951500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 64955800
*  IF OWNERID='OWNERID' | OWNERID='()'       /*CHECK ENTRY*/            64960100
*    THEN                                                               64964400
*      DO;                                                              64968700
*        ZMS=' 8, THE "OWNERID" KEY'||       /**KOPTP* MSG*/            64973000
*            ' MUST CONTAIN ONE'||                                      64977300
*            ' (OR MORE) ARGUMENT(S).';                                 64981600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 64985900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                64990200
*        ZMACRET=8;                          /* MACRO ERROR */          64994500
*      END;                                                             64998800
*  IF NUMBER(OWNERID)>1                      /* CHECK POSITIONALS */    65003100
*    THEN                                                               65007400
*      DO;                                                              65011700
*        ZMS=' 8, "OWNERID'||                /**KPOSP* MSG*/            65016000
*            OWNERID||                                                  65020300
*            '" "OWNERID"'||                                            65024600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              65028900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65033200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65037500
*        ZMACRET=8;                          /* MACRO ERROR */          65041800
*      END;                                                             65046100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 65050400
*  ZXOWNERID='INPUT';                        /* SET IN/OUTPUT */        65054700
*  XOWNERID='0';                             /* SET DEFAULT */          65059000
*  IF OWNERID(1)^=''                         /* CHECK FOR NULL */       65063300
*    THEN                                                               65067600
*      XOWNERID=OWNERID(1);                  /* SET XVARIABLE */        65071900
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 65076200
*  IF TASKID='TASKID' | TASKID='()'          /*CHECK ENTRY*/            65080500
*    THEN                                                               65084800
*      DO;                                                              65089100
*        ZMS=' 8, THE "TASKID" KEY'||        /**KOPTP* MSG*/            65093400
*            ' MUST CONTAIN ONE'||                                      65097700
*            ' (OR MORE) ARGUMENT(S).';                                 65102000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65106300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65110600
*        ZMACRET=8;                          /* MACRO ERROR */          65114900
*      END;                                                             65119200
*  IF NUMBER(TASKID)>1                       /* CHECK POSITIONALS */    65123500
*    THEN                                                               65127800
*      DO;                                                              65132100
*        ZMS=' 8, "TASKID'||                 /**KPOSP* MSG*/            65136400
*            TASKID||                                                   65140700
*            '" "TASKID"'||                                             65145000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              65149300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65153600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65157900
*        ZMACRET=8;                          /* MACRO ERROR */          65162200
*      END;                                                             65166500
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 65170800
*  ZXTASKID='INPUT';                         /* SET IN/OUTPUT */        65175100
*  XTASKID='0';                              /* SET DEFAULT */          65179400
*  IF TASKID(1)^=''                          /* CHECK FOR NULL */       65183700
*    THEN                                                               65188000
*      XTASKID=TASKID(1);                    /* SET XVARIABLE */        65192300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 65196600
*  IF THREAD='THREAD' | THREAD='()'          /*CHECK ENTRY*/            65200900
*    THEN                                                               65205200
*      DO;                                                              65209500
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            65213800
*            ' MUST CONTAIN ONE'||                                      65218100
*            ' (OR MORE) ARGUMENT(S).';                                 65222400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65226700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65231000
*        ZMACRET=8;                          /* MACRO ERROR */          65235300
*      END;                                                             65239600
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    65243900
*    THEN                                                               65248200
*      DO;                                                              65252500
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            65256800
*            THREAD||                                                   65261100
*            '" "THREAD"'||                                             65265400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              65269700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65274000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65278300
*        ZMACRET=8;                          /* MACRO ERROR */          65282600
*      END;                                                             65286900
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 65291200
*  ZXTHREAD='INPUT';                         /* SET IN/OUTPUT */        65295500
*  XTHREAD='0';                              /* SET DEFAULT */          65299800
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       65304100
*    THEN                                                               65308400
*      XTHREAD=THREAD(1);                    /* SET XVARIABLE */        65312700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 65317000
*  IF UTILRTN='UTILRTN' | UTILRTN='()'       /*CHECK ENTRY*/            65321300
*    THEN                                                               65325600
*      DO;                                                              65329900
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            65334200
*            ' MUST CONTAIN ONE'||                                      65338500
*            ' (OR MORE) ARGUMENT(S).';                                 65342800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65347100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65351400
*        ZMACRET=8;                          /* MACRO ERROR */          65355700
*      END;                                                             65360000
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    65364300
*    THEN                                                               65368600
*      DO;                                                              65372900
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            65377200
*            UTILRTN||                                                  65381500
*            '" "UTILRTN"'||                                            65385800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              65390100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65394400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65398700
*        ZMACRET=8;                          /* MACRO ERROR */          65403000
*      END;                                                             65407300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 65411600
*  ZXUTILRTN='INPUT';                        /* SET IN/OUTPUT */        65415900
*  XUTILRTN='0';                             /* SET DEFAULT */          65420200
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       65424500
*    THEN                                                               65428800
*      XUTILRTN=UTILRTN(1);                  /* SET XVARIABLE */        65433100
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 65437400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     65441700
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 65446000
*  IF TRANSLATE(REQUEST(1))                                             65450300
*              = 'CHANGE_OWNER'              /* CHECK FOR KEYWORD */    65454600
*    THEN                                                               65458900
*      DO;                                                              65463200
*        XREQUEST='CHANGE_OWNER';            /* SET XVARIABLE */        65467500
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    65471800
*          THEN                                                         65476100
*            DO;                                                        65480400
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            65484700
*                  REQUEST||                                            65489000
*                  '" "REQUEST"'||                                      65493300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        65497600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           65501900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          65506200
*              ZMACRET=8;                    /* MACRO ERROR */          65510500
*            END;                                                       65514800
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 65519100
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 65523400
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        65527700
*          THEN                                                         65532000
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   65536300
*        IF PAD^=''                          /* CHECK FOR KEY */        65540600
*          THEN                                                         65544900
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   65549200
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        65553500
*          THEN                                                         65557800
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   65562100
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        65566400
*          THEN                                                         65570700
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   65575000
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        65579300
*          THEN                                                         65583600
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   65587900
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        65592200
*          THEN                                                         65596500
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   65600800
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        65605100
*          THEN                                                         65609400
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   65613700
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        65618000
*          THEN                                                         65622300
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   65626600
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        65630900
*          THEN                                                         65635200
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   65639500
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        65643800
*          THEN                                                         65648100
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   65652400
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        65656700
*          THEN                                                         65661000
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   65665300
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        65669600
*          THEN                                                         65673900
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   65678200
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        65682500
*          THEN                                                         65686800
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   65691100
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        65695400
*          THEN                                                         65699700
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   65704000
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        65708300
*          THEN                                                         65712600
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   65716900
*        IF INITBUF^=''                      /* CHECK FOR KEY */        65721200
*          THEN                                                         65725500
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   65729800
*        IF MINFREE^=''                      /* CHECK FOR KEY */        65734100
*          THEN                                                         65738400
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   65742700
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        65747000
*          THEN                                                         65751300
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   65755600
*        IF STATAREA^=''                     /* CHECK FOR KEY */        65759900
*          THEN                                                         65764200
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   65768500
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        65772800
*          THEN                                                         65777100
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   65781400
*        IF WAIT^=''                         /* CHECK FOR KEY */        65785700
*          THEN                                                         65790000
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   65794300
*        IF CLEAR^=''                        /* CHECK FOR KEY */        65798600
*          THEN                                                         65802900
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   65807200
*        IF FREETO^=''                       /* CHECK FOR KEY */        65811500
*          THEN                                                         65815800
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   65820100
*        IF FREERTN^=''                      /* CHECK FOR KEY */        65824400
*          THEN                                                         65828700
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   65833000
*        IF ZCVAL^=''                                                   65837300
*          THEN                                                         65841600
*            DO;                             /* INCORRECT KEYS USED */  65845900
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            65850200
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            65854500
*                  REQUEST||'"'||                                       65858800
*                  ' DOES NOT ALLOW THE USE OF THE'||                   65863100
*                  ' FOLLOWING KEY(S) "'||                              65867400
*                  ZCVAL||'".';                                         65871700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           65876000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          65880300
*              ZMACRET=8;                    /* MACRO ERROR */          65884600
*            END;                                                       65888900
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 65893200
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    65897500
*    THEN                                                               65901800
*      DO;                                                              65906100
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            65910400
*            BUFLIST||                                                  65914700
*            '" "BUFLIST"'||                                            65919000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              65923300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65927600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65931900
*        ZMACRET=8;                          /* MACRO ERROR */          65936200
*      END;                                                             65940500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 65944800
*  XBUFLIST=BUFLIST(1);                      /* SET XVARIABLE */        65949100
*  IF BUFLIST(1)=''                          /* CHECK FOR NULL */       65953400
*   THEN                                                                65957700
*    DO;                                     /* KEY IS REQUIRED */      65962000
*        ZXBUFLIST='';                       /* RESET IN/OUTPUT */      65966300
*        ZMS=' 8,  '||                                                  65970600
*            ' "BUFLIST" KEY AND ITS ARGUMENT'||                        65974900
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            65979200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 65983500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                65987800
*        ZMACRET=8;                          /* MACRO ERROR */          65992100
*    END;                                                               65996400
*  ELSE                                                                 66000700
*    ZXBUFLIST='INPUT';                      /* SET IN/OUTPUT */        66005000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 66009300
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    66013600
*    THEN                                                               66017900
*      DO;                                                              66022200
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            66026500
*            BUFNUM||                                                   66030800
*            '" "BUFNUM"'||                                             66035100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              66039400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66043700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66048000
*        ZMACRET=8;                          /* MACRO ERROR */          66052300
*      END;                                                             66056600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 66060900
*  XBUFNUM=BUFNUM(1);                        /* SET XVARIABLE */        66065200
*  IF BUFNUM(1)=''                           /* CHECK FOR NULL */       66069500
*   THEN                                                                66073800
*    DO;                                     /* KEY IS REQUIRED */      66078100
*        ZXBUFNUM='';                        /* RESET IN/OUTPUT */      66082400
*        ZMS=' 8,  '||                                                  66086700
*            ' "BUFNUM" KEY AND ITS ARGUMENT'||                         66091000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            66095300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66099600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66103900
*        ZMACRET=8;                          /* MACRO ERROR */          66108200
*    END;                                                               66112500
*  ELSE                                                                 66116800
*    ZXBUFNUM='INPUT';                       /* SET IN/OUTPUT */        66121100
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66125400
*  IF CSMUSER='CSMUSER'                      /* CHECK ENTRY */          66129700
*    THEN                                                               66134000
*      DO;                                                              66138300
*        ZMS=' 8, THE "CSMUSER" KEY'||       /**KOPTP* MSG*/            66142600
*            ' MUST CONTAIN ONE'||                                      66146900
*            ' (OR MORE) ARGUMENT(S).';                                 66151200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66155500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66159800
*        ZMACRET=8;                          /* MACRO ERROR */          66164100
*      END;                                                             66168400
*  IF NUMBER(CSMUSER)>1                      /* CHECK POSITIONALS */    66172700
*    THEN                                                               66177000
*      DO;                                                              66181300
*        ZMS=' 8, "CSMUSER'||                /**KPOSP* MSG*/            66185600
*            CSMUSER||                                                  66189900
*            '" "CSMUSER"'||                                            66194200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              66198500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66202800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66207100
*        ZMACRET=8;                          /* MACRO ERROR */          66211400
*      END;                                                             66215700
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66220000
*  XCSMUSER='';                              /* RESET XVARIABLE */      66224300
*  IF TRANSLATE(CSMUSER(1))                                             66228600
*              = 'NO'                        /* CHECK FOR KEYWORD */    66232900
*    THEN                                                               66237200
*      XCSMUSER = 'NO';                      /* SET XVARIABLE */        66241500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66245800
*  IF TRANSLATE(CSMUSER(1))                                             66250100
*              = 'YES'                       /* CHECK FOR KEYWORD */    66254400
*    THEN                                                               66258700
*      XCSMUSER = 'YES';                     /* SET XVARIABLE */        66263000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66267300
*  ZXCSMUSER='INPUT';                        /* SET IN/OUTPUT */        66271600
*  IF XCSMUSER=''                            /* CHECK FOR KEYWORD */    66275900
*    THEN                                                               66280200
*      DO;                                   /* KEYWORD NOT ENTERED */  66284500
*        XCSMUSER='NO';                      /* SET DEFAULT */          66288800
*        IF CSMUSER(1)^=''                                              66293100
*          THEN                                                         66297400
*            DO;                                                        66301700
*              ZXCSMUSER='';                 /* RESET IN/OUTPUT */      66306000
*              ZMS=' 8, "CSMUSER'||          /**KUKWP* MSG*/            66310300
*                  CSMUSER||'"'||                                       66314600
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              66318900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    66323200
*                  ' "NO"'||                 /* VALID KEYWORD */        66327500
*                  ' OR "YES".';             /* VALID KEYWORD */        66331800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           66336100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          66340400
*              ZMACRET=8;                    /* MACRO ERROR */          66344700
*            END;                                                       66349000
*      END;                                                             66353300
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 66357600
*  IF XMF^='M'                               /* BYPASS IF MF=M */       66361900
*    THEN                                                               66366200
*      DO;                                                              66370500
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 66374800
*  IF ERRBFLST='ERRBFLST' | ERRBFLST='()'    /*CHECK ENTRY*/            66379100
*    THEN                                                               66383400
*      DO;                                                              66387700
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            66392000
*            ' MUST CONTAIN ONE'||                                      66396300
*            ' (OR MORE) ARGUMENT(S).';                                 66400600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66404900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66409200
*        ZMACRET=8;                          /* MACRO ERROR */          66413500
*      END;                                                             66417800
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    66422100
*    THEN                                                               66426400
*      DO;                                                              66430700
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            66435000
*            ERRBFLST||                                                 66439300
*            '" "ERRBFLST"'||                                           66443600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              66447900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66452200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66456500
*        ZMACRET=8;                          /* MACRO ERROR */          66460800
*      END;                                                             66465100
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 66469400
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       66473700
*    THEN                                                               66478000
*      DO;                                                              66482300
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        66486600
*        ZXERRBFLST='OUTPUT';                /* SET OUTPUT */           66490900
*      END;                                                             66495200
*  ELSE                                                                 66499500
*    IF ZXERRBFLST^=''                                                  66503800
*      THEN                                                             66508100
*        ZXERRBFLST='';                      /* RESET OUTPUT */         66512400
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 66516700
*      END;  /**** END OF BYPASS CHECK */                               66521000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 66525300
*  IF GAP='GAP' | GAP='()'                   /*CHECK ENTRY*/            66529600
*    THEN                                                               66533900
*      DO;                                                              66538200
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            66542500
*            ' MUST CONTAIN ONE'||                                      66546800
*            ' (OR MORE) ARGUMENT(S).';                                 66551100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66555400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66559700
*        ZMACRET=8;                          /* MACRO ERROR */          66564000
*      END;                                                             66568300
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    66572600
*    THEN                                                               66576900
*      DO;                                                              66581200
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            66585500
*            GAP||                                                      66589800
*            '" "GAP"'||                                                66594100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              66598400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66602700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66607000
*        ZMACRET=8;                          /* MACRO ERROR */          66611300
*      END;                                                             66615600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 66619900
*  ZXGAP='INPUT';                            /* SET IN/OUTPUT */        66624200
*  XGAP='0';                                 /* SET DEFAULT */          66628500
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       66632800
*    THEN                                                               66637100
*      XGAP=GAP(1);                          /* SET XVARIABLE */        66641400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 66645700
*  IF OWNERID='OWNERID' | OWNERID='()'       /*CHECK ENTRY*/            66650000
*    THEN                                                               66654300
*      DO;                                                              66658600
*        ZMS=' 8, THE "OWNERID" KEY'||       /**KOPTP* MSG*/            66662900
*            ' MUST CONTAIN ONE'||                                      66667200
*            ' (OR MORE) ARGUMENT(S).';                                 66671500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66675800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66680100
*        ZMACRET=8;                          /* MACRO ERROR */          66684400
*      END;                                                             66688700
*  IF NUMBER(OWNERID)>1                      /* CHECK POSITIONALS */    66693000
*    THEN                                                               66697300
*      DO;                                                              66701600
*        ZMS=' 8, "OWNERID'||                /**KPOSP* MSG*/            66705900
*            OWNERID||                                                  66710200
*            '" "OWNERID"'||                                            66714500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              66718800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66723100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66727400
*        ZMACRET=8;                          /* MACRO ERROR */          66731700
*      END;                                                             66736000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 66740300
*  ZXOWNERID='INPUT';                        /* SET IN/OUTPUT */        66744600
*  XOWNERID='0';                             /* SET DEFAULT */          66748900
*  IF OWNERID(1)^=''                         /* CHECK FOR NULL */       66753200
*    THEN                                                               66757500
*      XOWNERID=OWNERID(1);                  /* SET XVARIABLE */        66761800
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66766100
*  IF SKIPBUF='SKIPBUF'                      /* CHECK ENTRY */          66770400
*    THEN                                                               66774700
*      DO;                                                              66779000
*        ZMS=' 8, THE "SKIPBUF" KEY'||       /**KOPTP* MSG*/            66783300
*            ' MUST CONTAIN ONE'||                                      66787600
*            ' (OR MORE) ARGUMENT(S).';                                 66791900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66796200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66800500
*        ZMACRET=8;                          /* MACRO ERROR */          66804800
*      END;                                                             66809100
*  IF NUMBER(SKIPBUF)>1                      /* CHECK POSITIONALS */    66813400
*    THEN                                                               66817700
*      DO;                                                              66822000
*        ZMS=' 8, "SKIPBUF'||                /**KPOSP* MSG*/            66826300
*            SKIPBUF||                                                  66830600
*            '" "SKIPBUF"'||                                            66834900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              66839200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 66843500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                66847800
*        ZMACRET=8;                          /* MACRO ERROR */          66852100
*      END;                                                             66856400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66860700
*  XSKIPBUF='';                              /* RESET XVARIABLE */      66865000
*  IF TRANSLATE(SKIPBUF(1))                                             66869300
*              = 'NO'                        /* CHECK FOR KEYWORD */    66873600
*    THEN                                                               66877900
*      XSKIPBUF = 'NO';                      /* SET XVARIABLE */        66882200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66886500
*  IF TRANSLATE(SKIPBUF(1))                                             66890800
*              = 'YES'                       /* CHECK FOR KEYWORD */    66895100
*    THEN                                                               66899400
*      XSKIPBUF = 'YES';                     /* SET XVARIABLE */        66903700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 66908000
*  ZXSKIPBUF='INPUT';                        /* SET IN/OUTPUT */        66912300
*  IF XSKIPBUF=''                            /* CHECK FOR KEYWORD */    66916600
*    THEN                                                               66920900
*      DO;                                   /* KEYWORD NOT ENTERED */  66925200
*        XSKIPBUF='NO';                      /* SET DEFAULT */          66929500
*        IF SKIPBUF(1)^=''                                              66933800
*          THEN                                                         66938100
*            DO;                                                        66942400
*              ZXSKIPBUF='';                 /* RESET IN/OUTPUT */      66946700
*              ZMS=' 8, "SKIPBUF'||          /**KUKWP* MSG*/            66951000
*                  SKIPBUF||'"'||                                       66955300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              66959600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    66963900
*                  ' "NO"'||                 /* VALID KEYWORD */        66968200
*                  ' OR "YES".';             /* VALID KEYWORD */        66972500
*              ANS MSG('?IVTCSM ---> '||ZMS);                           66976800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          66981100
*              ZMACRET=8;                    /* MACRO ERROR */          66985400
*            END;                                                       66989700
*      END;                                                             66994000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 66998300
*  IF TASKID='TASKID' | TASKID='()'          /*CHECK ENTRY*/            67002600
*    THEN                                                               67006900
*      DO;                                                              67011200
*        ZMS=' 8, THE "TASKID" KEY'||        /**KOPTP* MSG*/            67015500
*            ' MUST CONTAIN ONE'||                                      67019800
*            ' (OR MORE) ARGUMENT(S).';                                 67024100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 67028400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67032700
*        ZMACRET=8;                          /* MACRO ERROR */          67037000
*      END;                                                             67041300
*  IF NUMBER(TASKID)>1                       /* CHECK POSITIONALS */    67045600
*    THEN                                                               67049900
*      DO;                                                              67054200
*        ZMS=' 8, "TASKID'||                 /**KPOSP* MSG*/            67058500
*            TASKID||                                                   67062800
*            '" "TASKID"'||                                             67067100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              67071400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 67075700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67080000
*        ZMACRET=8;                          /* MACRO ERROR */          67084300
*      END;                                                             67088600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 67092900
*  ZXTASKID='INPUT';                         /* SET IN/OUTPUT */        67097200
*  XTASKID='0';                              /* SET DEFAULT */          67101500
*  IF TASKID(1)^=''                          /* CHECK FOR NULL */       67105800
*    THEN                                                               67110100
*      XTASKID=TASKID(1);                    /* SET XVARIABLE */        67114400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 67118700
*  IF THREAD='THREAD' | THREAD='()'          /*CHECK ENTRY*/            67123000
*    THEN                                                               67127300
*      DO;                                                              67131600
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            67135900
*            ' MUST CONTAIN ONE'||                                      67140200
*            ' (OR MORE) ARGUMENT(S).';                                 67144500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 67148800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67153100
*        ZMACRET=8;                          /* MACRO ERROR */          67157400
*      END;                                                             67161700
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    67166000
*    THEN                                                               67170300
*      DO;                                                              67174600
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            67178900
*            THREAD||                                                   67183200
*            '" "THREAD"'||                                             67187500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              67191800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 67196100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67200400
*        ZMACRET=8;                          /* MACRO ERROR */          67204700
*      END;                                                             67209000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 67213300
*  ZXTHREAD='INPUT';                         /* SET IN/OUTPUT */        67217600
*  XTHREAD='0';                              /* SET DEFAULT */          67221900
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       67226200
*    THEN                                                               67230500
*      XTHREAD=THREAD(1);                    /* SET XVARIABLE */        67234800
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 67239100
*  IF UTILRTN='UTILRTN' | UTILRTN='()'       /*CHECK ENTRY*/            67243400
*    THEN                                                               67247700
*      DO;                                                              67252000
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            67256300
*            ' MUST CONTAIN ONE'||                                      67260600
*            ' (OR MORE) ARGUMENT(S).';                                 67264900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 67269200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67273500
*        ZMACRET=8;                          /* MACRO ERROR */          67277800
*      END;                                                             67282100
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    67286400
*    THEN                                                               67290700
*      DO;                                                              67295000
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            67299300
*            UTILRTN||                                                  67303600
*            '" "UTILRTN"'||                                            67307900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              67312200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 67316500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                67320800
*        ZMACRET=8;                          /* MACRO ERROR */          67325100
*      END;                                                             67329400
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 67333700
*  ZXUTILRTN='INPUT';                        /* SET IN/OUTPUT */        67338000
*  XUTILRTN='0';                             /* SET DEFAULT */          67342300
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       67346600
*    THEN                                                               67350900
*      XUTILRTN=UTILRTN(1);                  /* SET XVARIABLE */        67355200
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67359500
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     67363800
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67368100
*  IF TRANSLATE(REQUEST(1))                                             67372400
*              = 'COPY_DATA'                 /* CHECK FOR KEYWORD */    67376700
*    THEN                                                               67381000
*      DO;                                                              67385300
*        XREQUEST='COPY_DATA';               /* SET XVARIABLE */        67389600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    67393900
*          THEN                                                         67398200
*            DO;                                                        67402500
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            67406800
*                  REQUEST||                                            67411100
*                  '" "REQUEST"'||                                      67415400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        67419700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           67424000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          67428300
*              ZMACRET=8;                    /* MACRO ERROR */          67432600
*            END;                                                       67436900
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67441200
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 67445500
*        IF BUFLIST^=''                      /* CHECK FOR KEY */        67449800
*          THEN                                                         67454100
*            ZCVAL=ZCVAL||',BUFLIST';        /* INCORRECT KEY USED */   67458400
*        IF BUFNUM^=''                       /* CHECK FOR KEY */        67462700
*          THEN                                                         67467000
*            ZCVAL=ZCVAL||',BUFNUM';         /* INCORRECT KEY USED */   67471300
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        67475600
*          THEN                                                         67479900
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   67484200
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        67488500
*          THEN                                                         67492800
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   67497100
*        IF GAP^=''                          /* CHECK FOR KEY */        67501400
*          THEN                                                         67505700
*            ZCVAL=ZCVAL||',GAP';            /* INCORRECT KEY USED */   67510000
*        IF ERRBFLST^=''                     /* CHECK FOR KEY */        67514300
*          THEN                                                         67518600
*            ZCVAL=ZCVAL||',ERRBFLST';       /* INCORRECT KEY USED */   67522900
*        IF OWNERID^=''                      /* CHECK FOR KEY */        67527200
*          THEN                                                         67531500
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   67535800
*        IF TASKID^=''                       /* CHECK FOR KEY */        67540100
*          THEN                                                         67544400
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   67548700
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        67553000
*          THEN                                                         67557300
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   67561600
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        67565900
*          THEN                                                         67570200
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   67574500
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        67578800
*          THEN                                                         67583100
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   67587400
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        67591700
*          THEN                                                         67596000
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   67600300
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        67604600
*          THEN                                                         67608900
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   67613200
*        IF INITBUF^=''                      /* CHECK FOR KEY */        67617500
*          THEN                                                         67621800
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   67626100
*        IF MINFREE^=''                      /* CHECK FOR KEY */        67630400
*          THEN                                                         67634700
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   67639000
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        67643300
*          THEN                                                         67647600
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   67651900
*        IF STATAREA^=''                     /* CHECK FOR KEY */        67656200
*          THEN                                                         67660500
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   67664800
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        67669100
*          THEN                                                         67673400
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   67677700
*        IF WAIT^=''                         /* CHECK FOR KEY */        67682000
*          THEN                                                         67686300
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   67690600
*        IF CLEAR^=''                        /* CHECK FOR KEY */        67694900
*          THEN                                                         67699200
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   67703500
*        IF FREETO^=''                       /* CHECK FOR KEY */        67707800
*          THEN                                                         67712100
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   67716400
*        IF FREERTN^=''                      /* CHECK FOR KEY */        67720700
*          THEN                                                         67725000
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   67729300
*        IF ZCVAL^=''                                                   67733600
*          THEN                                                         67737900
*            DO;                             /* INCORRECT KEYS USED */  67742200
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            67746500
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            67750800
*                  REQUEST||'"'||                                       67755100
*                  ' DOES NOT ALLOW THE USE OF THE'||                   67759400
*                  ' FOLLOWING KEY(S) "'||                              67763700
*                  ZCVAL||'".';                                         67768000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           67772300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          67776600
*              ZMACRET=8;                    /* MACRO ERROR */          67780900
*            END;                                                       67785200
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67789500
*  XPAD='';                                                             67793800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67798100
*  IF TRANSLATE(PAD(1))                                                 67802400
*              = 'NO'                        /* CHECK FOR KEYWORD */    67806700
*     | PAD(1)=''                            /* CHECK FOR NULL */       67811000
*    THEN                                                               67815300
*      DO;                                                              67819600
*        XPAD='NO';                          /* SET XVARIABLE */        67823900
*        IF NUMBER(PAD)>1                    /* CHECK POSITIONALS */    67828200
*          THEN                                                         67832500
*            DO;                                                        67836800
*              ZMS=' 8, "PAD'||              /**KPOSP* MSG*/            67841100
*                  PAD||                                                67845400
*                  '" "PAD"'||                                          67849700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        67854000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           67858300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          67862600
*              ZMACRET=8;                    /* MACRO ERROR */          67866900
*            END;                                                       67871200
*/*PG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67875500
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 67879800
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        67884100
*          THEN                                                         67888400
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   67892700
*        IF ZCVAL^=''                                                   67897000
*          THEN                                                         67901300
*            DO;                             /* INCORRECT KEYS USED */  67905600
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            67909900
*              ZMS=' 8, "PAD'||              /**KMEIP* MSG*/            67914200
*                  PAD||'"'||                                           67918500
*                  ' DOES NOT ALLOW THE USE OF THE'||                   67922800
*                  ' FOLLOWING KEY(S) "'||                              67927100
*                  ZCVAL||'".';                                         67931400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           67935700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          67940000
*              ZMACRET=8;                    /* MACRO ERROR */          67944300
*            END;                                                       67948600
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67952900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     67957200
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 67961500
*  IF TRANSLATE(PAD(1))                                                 67965800
*              = 'YES'                       /* CHECK FOR KEYWORD */    67970100
*    THEN                                                               67974400
*      DO;                                                              67978700
*        XPAD='YES';                         /* SET XVARIABLE */        67983000
*        IF NUMBER(PAD)>1                    /* CHECK POSITIONALS */    67987300
*          THEN                                                         67991600
*            DO;                                                        67995900
*              ZMS=' 8, "PAD'||              /**KPOSP* MSG*/            68000200
*                  PAD||                                                68004500
*                  '" "PAD"'||                                          68008800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        68013100
*              ANS MSG('?IVTCSM ---> '||ZMS);                           68017400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          68021700
*              ZMACRET=8;                    /* MACRO ERROR */          68026000
*            END;                                                       68030300
*/*PG.KXVAR01 NAME, OPT RQD INPUT, KEYS -EXCESSIVE ARGUMENTS---------*/ 68034600
*  IF NUMBER(PADCHAR)>1                      /* CHECK POSITIONALS */    68038900
*    THEN                                                               68043200
*      DO;                                                              68047500
*        ZMS=' 8, "PADCHAR'||                /**KPOSP* MSG*/            68051800
*            PADCHAR||                                                  68056100
*            '" "PADCHAR"'||                                            68060400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              68064700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68069000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68073300
*        ZMACRET=8;                          /* MACRO ERROR */          68077600
*      END;                                                             68081900
*/*PG.KXVAR03 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 68086200
*  XPADCHAR=PADCHAR(1);                      /* SET XVARIABLE */        68090500
*  IF PADCHAR(1)=''                          /* CHECK FOR NULL */       68094800
*   THEN                                                                68099100
*    DO;                                     /* KEY IS REQUIRED */      68103400
*        ZXPADCHAR='';                       /* RESET IN/OUTPUT */      68107700
*        ZMS=' 8,  '||                                                  68112000
*            ' "PADCHAR" KEY AND ITS ARGUMENT'||                        68116300
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            68120600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68124900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68129200
*        ZMACRET=8;                          /* MACRO ERROR */          68133500
*    END;                                                               68137800
*  ELSE                                                                 68142100
*    ZXPADCHAR='INPUT';                      /* SET IN/OUTPUT */        68146400
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 68150700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     68155000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 68159300
*  IF PAD='PAD'                                                         68163600
*    | PAD='()'                              /*CHECK ENTRY*/            68167900
*     THEN                                                              68172200
*       DO;                                                             68176500
*              ZMS=' 8, THE "PAD" KEY'||     /**KOPTP* MSG*/            68180800
*                  ' MUST CONTAIN ONE'||                                68185100
*                  ' (OR MORE) ARGUMENT(S).';                           68189400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           68193700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          68198000
*              ZMACRET=8;                    /* MACRO ERROR */          68202300
*       END;                                                            68206600
*  ELSE                                                                 68210900
*    DO;                                                                68215200
*      ZXPAD='INPUT';                        /* SET IN/OUTPUT */        68219500
*      IF XPAD=''                            /* CHECK FOR KEYWORD */    68223800
*        THEN                                                           68228100
*          DO;                               /* KEYWORD NOT ENTERED */  68232400
*            XPAD='NO';                      /* SET DEFAULT */          68236700
*            IF PAD(1)^=''                   /* CHECK FOR KEYWORD */    68241000
*              THEN                                                     68245300
*                DO;                                                    68249600
*                  ZXPAD='';                 /* RESET IN/OUTPUT */      68253900
*              ZMS=' 8, "PAD'||              /**KUKWP* MSG*/            68258200
*                  PAD||'"'||                                           68262500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              68266800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    68271100
*                  ' "NO"'||                 /* VALID KEYWORD */        68275400
*                  ' OR "YES".';             /* VALID KEYWORD */        68279700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           68284000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          68288300
*              ZMACRET=8;                    /* MACRO ERROR */          68292600
*                END;                                                   68296900
*          END;                                                         68301200
*    END;                                                               68305500
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 68309800
*  IF XMF^='M'                               /* BYPASS IF MF=M */       68314100
*    THEN                                                               68318400
*      DO;                                                              68322700
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 68327000
*  IF SRCERRL='SRCERRL' | SRCERRL='()'       /*CHECK ENTRY*/            68331300
*    THEN                                                               68335600
*      DO;                                                              68339900
*        ZMS=' 8, THE "SRCERRL" KEY'||       /**KOPTP* MSG*/            68344200
*            ' MUST CONTAIN ONE'||                                      68348500
*            ' (OR MORE) ARGUMENT(S).';                                 68352800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68357100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68361400
*        ZMACRET=8;                          /* MACRO ERROR */          68365700
*      END;                                                             68370000
*  IF NUMBER(SRCERRL)>1                      /* CHECK POSITIONALS */    68374300
*    THEN                                                               68378600
*      DO;                                                              68382900
*        ZMS=' 8, "SRCERRL'||                /**KPOSP* MSG*/            68387200
*            SRCERRL||                                                  68391500
*            '" "SRCERRL"'||                                            68395800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              68400100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68404400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68408700
*        ZMACRET=8;                          /* MACRO ERROR */          68413000
*      END;                                                             68417300
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 68421600
*  IF SRCERRL(1)^=''                         /* CHECK FOR NULL */       68425900
*    THEN                                                               68430200
*      DO;                                                              68434500
*        XSRCERRL=SRCERRL(1);                /* SET XVARIABLE */        68438800
*        ZXSRCERRL='OUTPUT';                 /* SET OUTPUT */           68443100
*      END;                                                             68447400
*  ELSE                                                                 68451700
*    IF ZXSRCERRL^=''                                                   68456000
*      THEN                                                             68460300
*        ZXSRCERRL='';                       /* RESET OUTPUT */         68464600
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 68468900
*      END;  /**** END OF BYPASS CHECK */                               68473200
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 68477500
*  IF SRCGAP='SRCGAP' | SRCGAP='()'          /*CHECK ENTRY*/            68481800
*    THEN                                                               68486100
*      DO;                                                              68490400
*        ZMS=' 8, THE "SRCGAP" KEY'||        /**KOPTP* MSG*/            68494700
*            ' MUST CONTAIN ONE'||                                      68499000
*            ' (OR MORE) ARGUMENT(S).';                                 68503300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68507600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68511900
*        ZMACRET=8;                          /* MACRO ERROR */          68516200
*      END;                                                             68520500
*  IF NUMBER(SRCGAP)>1                       /* CHECK POSITIONALS */    68524800
*    THEN                                                               68529100
*      DO;                                                              68533400
*        ZMS=' 8, "SRCGAP'||                 /**KPOSP* MSG*/            68537700
*            SRCGAP||                                                   68542000
*            '" "SRCGAP"'||                                             68546300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              68550600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68554900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68559200
*        ZMACRET=8;                          /* MACRO ERROR */          68563500
*      END;                                                             68567800
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 68572100
*  ZXSRCGAP='INPUT';                         /* SET IN/OUTPUT */        68576400
*  XSRCGAP='0';                              /* SET DEFAULT */          68580700
*  IF SRCGAP(1)^=''                          /* CHECK FOR NULL */       68585000
*    THEN                                                               68589300
*      XSRCGAP=SRCGAP(1);                    /* SET XVARIABLE */        68593600
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 68597900
*  IF NUMBER(SRCLIST)>1                      /* CHECK POSITIONALS */    68602200
*    THEN                                                               68606500
*      DO;                                                              68610800
*        ZMS=' 8, "SRCLIST'||                /**KPOSP* MSG*/            68615100
*            SRCLIST||                                                  68619400
*            '" "SRCLIST"'||                                            68623700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              68628000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68632300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68636600
*        ZMACRET=8;                          /* MACRO ERROR */          68640900
*      END;                                                             68645200
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 68649500
*  XSRCLIST=SRCLIST(1);                      /* SET XVARIABLE */        68653800
*  IF SRCLIST(1)=''                          /* CHECK FOR NULL */       68658100
*   THEN                                                                68662400
*    DO;                                     /* KEY IS REQUIRED */      68666700
*        ZXSRCLIST='';                       /* RESET IN/OUTPUT */      68671000
*        ZMS=' 8,  '||                                                  68675300
*            ' "SRCLIST" KEY AND ITS ARGUMENT'||                        68679600
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            68683900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68688200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68692500
*        ZMACRET=8;                          /* MACRO ERROR */          68696800
*    END;                                                               68701100
*  ELSE                                                                 68705400
*    ZXSRCLIST='INPUT';                      /* SET IN/OUTPUT */        68709700
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 68714000
*  IF NUMBER(SRCNUM)>1                       /* CHECK POSITIONALS */    68718300
*    THEN                                                               68722600
*      DO;                                                              68726900
*        ZMS=' 8, "SRCNUM'||                 /**KPOSP* MSG*/            68731200
*            SRCNUM||                                                   68735500
*            '" "SRCNUM"'||                                             68739800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              68744100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68748400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68752700
*        ZMACRET=8;                          /* MACRO ERROR */          68757000
*      END;                                                             68761300
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 68765600
*  XSRCNUM=SRCNUM(1);                        /* SET XVARIABLE */        68769900
*  IF SRCNUM(1)=''                           /* CHECK FOR NULL */       68774200
*   THEN                                                                68778500
*    DO;                                     /* KEY IS REQUIRED */      68782800
*        ZXSRCNUM='';                        /* RESET IN/OUTPUT */      68787100
*        ZMS=' 8,  '||                                                  68791400
*            ' "SRCNUM" KEY AND ITS ARGUMENT'||                         68795700
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            68800000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68804300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68808600
*        ZMACRET=8;                          /* MACRO ERROR */          68812900
*    END;                                                               68817200
*  ELSE                                                                 68821500
*    ZXSRCNUM='INPUT';                       /* SET IN/OUTPUT */        68825800
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 68830100
*  IF XMF^='M'                               /* BYPASS IF MF=M */       68834400
*    THEN                                                               68838700
*      DO;                                                              68843000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 68847300
*  IF TARGERRL='TARGERRL' | TARGERRL='()'    /*CHECK ENTRY*/            68851600
*    THEN                                                               68855900
*      DO;                                                              68860200
*        ZMS=' 8, THE "TARGERRL" KEY'||      /**KOPTP* MSG*/            68864500
*            ' MUST CONTAIN ONE'||                                      68868800
*            ' (OR MORE) ARGUMENT(S).';                                 68873100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68877400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68881700
*        ZMACRET=8;                          /* MACRO ERROR */          68886000
*      END;                                                             68890300
*  IF NUMBER(TARGERRL)>1                     /* CHECK POSITIONALS */    68894600
*    THEN                                                               68898900
*      DO;                                                              68903200
*        ZMS=' 8, "TARGERRL'||               /**KPOSP* MSG*/            68907500
*            TARGERRL||                                                 68911800
*            '" "TARGERRL"'||                                           68916100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              68920400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 68924700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68929000
*        ZMACRET=8;                          /* MACRO ERROR */          68933300
*      END;                                                             68937600
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 68941900
*  IF TARGERRL(1)^=''                        /* CHECK FOR NULL */       68946200
*    THEN                                                               68950500
*      DO;                                                              68954800
*        XTARGERRL=TARGERRL(1);              /* SET XVARIABLE */        68959100
*        ZXTARGERRL='OUTPUT';                /* SET OUTPUT */           68963400
*      END;                                                             68967700
*  ELSE                                                                 68972000
*    IF ZXTARGERRL^=''                                                  68976300
*      THEN                                                             68980600
*        ZXTARGERRL='';                      /* RESET OUTPUT */         68984900
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 68989200
*      END;  /**** END OF BYPASS CHECK */                               68993500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 68997800
*  IF TARGGAP='TARGGAP' | TARGGAP='()'       /*CHECK ENTRY*/            69002100
*    THEN                                                               69006400
*      DO;                                                              69010700
*        ZMS=' 8, THE "TARGGAP" KEY'||       /**KOPTP* MSG*/            69015000
*            ' MUST CONTAIN ONE'||                                      69019300
*            ' (OR MORE) ARGUMENT(S).';                                 69023600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69027900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69032200
*        ZMACRET=8;                          /* MACRO ERROR */          69036500
*      END;                                                             69040800
*  IF NUMBER(TARGGAP)>1                      /* CHECK POSITIONALS */    69045100
*    THEN                                                               69049400
*      DO;                                                              69053700
*        ZMS=' 8, "TARGGAP'||                /**KPOSP* MSG*/            69058000
*            TARGGAP||                                                  69062300
*            '" "TARGGAP"'||                                            69066600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              69070900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69075200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69079500
*        ZMACRET=8;                          /* MACRO ERROR */          69083800
*      END;                                                             69088100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 69092400
*  ZXTARGGAP='INPUT';                        /* SET IN/OUTPUT */        69096700
*  XTARGGAP='0';                             /* SET DEFAULT */          69101000
*  IF TARGGAP(1)^=''                         /* CHECK FOR NULL */       69105300
*    THEN                                                               69109600
*      XTARGGAP=TARGGAP(1);                  /* SET XVARIABLE */        69113900
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 69118200
*  IF NUMBER(TARGLIST)>1                     /* CHECK POSITIONALS */    69122500
*    THEN                                                               69126800
*      DO;                                                              69131100
*        ZMS=' 8, "TARGLIST'||               /**KPOSP* MSG*/            69135400
*            TARGLIST||                                                 69139700
*            '" "TARGLIST"'||                                           69144000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              69148300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69152600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69156900
*        ZMACRET=8;                          /* MACRO ERROR */          69161200
*      END;                                                             69165500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 69169800
*  XTARGLIST=TARGLIST(1);                    /* SET XVARIABLE */        69174100
*  IF TARGLIST(1)=''                         /* CHECK FOR NULL */       69178400
*   THEN                                                                69182700
*    DO;                                     /* KEY IS REQUIRED */      69187000
*        ZXTARGLIST='';                      /* RESET IN/OUTPUT */      69191300
*        ZMS=' 8,  '||                                                  69195600
*            ' "TARGLIST" KEY AND ITS ARGUMENT'||                       69199900
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            69204200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69208500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69212800
*        ZMACRET=8;                          /* MACRO ERROR */          69217100
*    END;                                                               69221400
*  ELSE                                                                 69225700
*    ZXTARGLIST='INPUT';                     /* SET IN/OUTPUT */        69230000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 69234300
*  IF NUMBER(TARGNUM)>1                      /* CHECK POSITIONALS */    69238600
*    THEN                                                               69242900
*      DO;                                                              69247200
*        ZMS=' 8, "TARGNUM'||                /**KPOSP* MSG*/            69251500
*            TARGNUM||                                                  69255800
*            '" "TARGNUM"'||                                            69260100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              69264400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69268700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69273000
*        ZMACRET=8;                          /* MACRO ERROR */          69277300
*      END;                                                             69281600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 69285900
*  XTARGNUM=TARGNUM(1);                      /* SET XVARIABLE */        69290200
*  IF TARGNUM(1)=''                          /* CHECK FOR NULL */       69294500
*   THEN                                                                69298800
*    DO;                                     /* KEY IS REQUIRED */      69303100
*        ZXTARGNUM='';                       /* RESET IN/OUTPUT */      69307400
*        ZMS=' 8,  '||                                                  69311700
*            ' "TARGNUM" KEY AND ITS ARGUMENT'||                        69316000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            69320300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69324600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69328900
*        ZMACRET=8;                          /* MACRO ERROR */          69333200
*    END;                                                               69337500
*  ELSE                                                                 69341800
*    ZXTARGNUM='INPUT';                      /* SET IN/OUTPUT */        69346100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 69350400
*  IF THREAD='THREAD' | THREAD='()'          /*CHECK ENTRY*/            69354700
*    THEN                                                               69359000
*      DO;                                                              69363300
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            69367600
*            ' MUST CONTAIN ONE'||                                      69371900
*            ' (OR MORE) ARGUMENT(S).';                                 69376200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69380500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69384800
*        ZMACRET=8;                          /* MACRO ERROR */          69389100
*      END;                                                             69393400
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    69397700
*    THEN                                                               69402000
*      DO;                                                              69406300
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            69410600
*            THREAD||                                                   69414900
*            '" "THREAD"'||                                             69419200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              69423500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69427800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69432100
*        ZMACRET=8;                          /* MACRO ERROR */          69436400
*      END;                                                             69440700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 69445000
*  ZXTHREAD='INPUT';                         /* SET IN/OUTPUT */        69449300
*  XTHREAD='0';                              /* SET DEFAULT */          69453600
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       69457900
*    THEN                                                               69462200
*      XTHREAD=THREAD(1);                    /* SET XVARIABLE */        69466500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 69470800
*  IF UTILRTN='UTILRTN' | UTILRTN='()'       /*CHECK ENTRY*/            69475100
*    THEN                                                               69479400
*      DO;                                                              69483700
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            69488000
*            ' MUST CONTAIN ONE'||                                      69492300
*            ' (OR MORE) ARGUMENT(S).';                                 69496600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69500900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69505200
*        ZMACRET=8;                          /* MACRO ERROR */          69509500
*      END;                                                             69513800
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    69518100
*    THEN                                                               69522400
*      DO;                                                              69526700
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            69531000
*            UTILRTN||                                                  69535300
*            '" "UTILRTN"'||                                            69539600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              69543900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 69548200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69552500
*        ZMACRET=8;                          /* MACRO ERROR */          69556800
*      END;                                                             69561100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 69565400
*  ZXUTILRTN='INPUT';                        /* SET IN/OUTPUT */        69569700
*  XUTILRTN='0';                             /* SET DEFAULT */          69574000
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       69578300
*    THEN                                                               69582600
*      XUTILRTN=UTILRTN(1);                  /* SET XVARIABLE */        69586900
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 69591200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     69595500
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 69599800
*  IF TRANSLATE(REQUEST(1))                                             69604100
*              = 'CREATE_POOL'               /* CHECK FOR KEYWORD */    69608400
*    THEN                                                               69612700
*      DO;                                                              69617000
*        XREQUEST='CREATE_POOL';             /* SET XVARIABLE */        69621300
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    69625600
*          THEN                                                         69629900
*            DO;                                                        69634200
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            69638500
*                  REQUEST||                                            69642800
*                  '" "REQUEST"'||                                      69647100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        69651400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           69655700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          69660000
*              ZMACRET=8;                    /* MACRO ERROR */          69664300
*            END;                                                       69668600
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 69672900
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 69677200
*        IF BUFLIST^=''                      /* CHECK FOR KEY */        69681500
*          THEN                                                         69685800
*            ZCVAL=ZCVAL||',BUFLIST';        /* INCORRECT KEY USED */   69690100
*        IF BUFNUM^=''                       /* CHECK FOR KEY */        69694400
*          THEN                                                         69698700
*            ZCVAL=ZCVAL||',BUFNUM';         /* INCORRECT KEY USED */   69703000
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        69707300
*          THEN                                                         69711600
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   69715900
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        69720200
*          THEN                                                         69724500
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   69728800
*        IF GAP^=''                          /* CHECK FOR KEY */        69733100
*          THEN                                                         69737400
*            ZCVAL=ZCVAL||',GAP';            /* INCORRECT KEY USED */   69741700
*        IF ERRBFLST^=''                     /* CHECK FOR KEY */        69746000
*          THEN                                                         69750300
*            ZCVAL=ZCVAL||',ERRBFLST';       /* INCORRECT KEY USED */   69754600
*        IF OWNERID^=''                      /* CHECK FOR KEY */        69758900
*          THEN                                                         69763200
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   69767500
*        IF TASKID^=''                       /* CHECK FOR KEY */        69771800
*          THEN                                                         69776100
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   69780400
*        IF THREAD^=''                       /* CHECK FOR KEY */        69784700
*          THEN                                                         69789000
*            ZCVAL=ZCVAL||',THREAD';         /* INCORRECT KEY USED */   69793300
*        IF UTILRTN^=''                      /* CHECK FOR KEY */        69797600
*          THEN                                                         69801900
*            ZCVAL=ZCVAL||',UTILRTN';        /* INCORRECT KEY USED */   69806200
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        69810500
*          THEN                                                         69814800
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   69819100
*        IF PAD^=''                          /* CHECK FOR KEY */        69823400
*          THEN                                                         69827700
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   69832000
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        69836300
*          THEN                                                         69840600
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   69844900
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        69849200
*          THEN                                                         69853500
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   69857800
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        69862100
*          THEN                                                         69866400
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   69870700
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        69875000
*          THEN                                                         69879300
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   69883600
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        69887900
*          THEN                                                         69892200
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   69896500
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        69900800
*          THEN                                                         69905100
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   69909400
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        69913700
*          THEN                                                         69918000
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   69922300
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        69926600
*          THEN                                                         69930900
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   69935200
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        69939500
*          THEN                                                         69943800
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   69948100
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        69952400
*          THEN                                                         69956700
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   69961000
*        IF WAIT^=''                         /* CHECK FOR KEY */        69965300
*          THEN                                                         69969600
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   69973900
*        IF CLEAR^=''                        /* CHECK FOR KEY */        69978200
*          THEN                                                         69982500
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   69986800
*        IF FREETO^=''                       /* CHECK FOR KEY */        69991100
*          THEN                                                         69995400
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   69999700
*        IF FREERTN^=''                      /* CHECK FOR KEY */        70004000
*          THEN                                                         70008300
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   70012600
*        IF ZCVAL^=''                                                   70016900
*          THEN                                                         70021200
*            DO;                             /* INCORRECT KEYS USED */  70025500
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            70029800
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            70034100
*                  REQUEST||'"'||                                       70038400
*                  ' DOES NOT ALLOW THE USE OF THE'||                   70042700
*                  ' FOLLOWING KEY(S) "'||                              70047000
*                  ZCVAL||'".';                                         70051300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           70055600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          70059900
*              ZMACRET=8;                    /* MACRO ERROR */          70064200
*            END;                                                       70068500
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 70072800
*  IF NUMBER(BUFSIZE)>1                      /* CHECK POSITIONALS */    70077100
*    THEN                                                               70081400
*      DO;                                                              70085700
*        ZMS=' 8, "BUFSIZE'||                /**KPOSP* MSG*/            70090000
*            BUFSIZE||                                                  70094300
*            '" "BUFSIZE"'||                                            70098600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              70102900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70107200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70111500
*        ZMACRET=8;                          /* MACRO ERROR */          70115800
*      END;                                                             70120100
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 70124400
*  XBUFSIZE=BUFSIZE(1);                      /* SET XVARIABLE */        70128700
*  IF BUFSIZE(1)=''                          /* CHECK FOR NULL */       70133000
*   THEN                                                                70137300
*    DO;                                     /* KEY IS REQUIRED */      70141600
*        ZXBUFSIZE='';                       /* RESET IN/OUTPUT */      70145900
*        ZMS=' 8,  '||                                                  70150200
*            ' "BUFSIZE" KEY AND ITS ARGUMENT'||                        70154500
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            70158800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70163100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70167400
*        ZMACRET=8;                          /* MACRO ERROR */          70171700
*    END;                                                               70176000
*  ELSE                                                                 70180300
*    ZXBUFSIZE='INPUT';                      /* SET IN/OUTPUT */        70184600
*/*PG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70188900
*  IF NUMBER(BUFSOURC)>1                     /* CHECK POSITIONALS */    70193200
*    THEN                                                               70197500
*      DO;                                                              70201800
*        ZMS=' 8, "BUFSOURC'||               /**KPOSP* MSG*/            70206100
*            BUFSOURC||                                                 70210400
*            '" "BUFSOURC"'||                                           70214700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              70219000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70223300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70227600
*        ZMACRET=8;                          /* MACRO ERROR */          70231900
*      END;                                                             70236200
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70240500
*  XBUFSOURC='';                             /* RESET XVARIABLE */      70244800
*  IF TRANSLATE(BUFSOURC(1))                                            70249100
*              = 'DSPACE'                    /* CHECK FOR KEYWORD */    70253400
*    THEN                                                               70257700
*      XBUFSOURC = 'DSPACE';                 /* SET XVARIABLE */        70262000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70266300
*  IF TRANSLATE(BUFSOURC(1))                                            70270600
*              = 'ECSA'                      /* CHECK FOR KEYWORD */    70274900
*    THEN                                                               70279200
*      XBUFSOURC = 'ECSA';                   /* SET XVARIABLE */        70283500
*/*PG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70287800
*  ZXBUFSOURC='INPUT';                       /* SET IN/OUTPUT */        70292100
*  IF XBUFSOURC=''                           /* CHECK FOR KEYWORD */    70296400
*    THEN                                                               70300700
*      DO;                                   /* KEYWORD NOT ENTERED */  70305000
*        XBUFSOURC='DSPACE';                 /* SET DEFAULT */          70309300
*        IF BUFSOURC(1)^=''                                             70313600
*          THEN                                                         70317900
*            DO;                                                        70322200
*              ZXBUFSOURC='';                /* RESET IN/OUTPUT */      70326500
*              ZMS=' 8, "BUFSOURC'||         /**KUKWP* MSG*/            70330800
*                  BUFSOURC||'"'||                                      70335100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              70339400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    70343700
*                  ' "DSPACE"'||             /* VALID KEYWORD */        70348000
*                  ' OR "ECSA".';            /* VALID KEYWORD */        70352300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           70356600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          70360900
*              ZMACRET=8;                    /* MACRO ERROR */          70365200
*            END;                                                       70369500
*      END;                                                             70373800
*/*PG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70378100
*  IF BUFSOURC(1)=''                         /* CHECK FOR KEYWORD */    70382400
*    THEN                                                               70386700
*      DO;                                   /* KEYWORD NOT ENTERED */  70391000
*        ZXBUFSOURC='';                      /* RESET IN/OUTPUT */      70395300
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            70399600
*            ' "BUFSOURC" KEY AND ITS ARGUMENT'||                       70403900
*            ' ARE REQUIRED.'||                                         70408200
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          70412500
*            ' "DSPACE"'||                   /* VALID KEYWORD */        70416800
*            ' OR "ECSA".';                  /* VALID KEYWORD */        70421100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70425400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70429700
*        ZMACRET=8;                          /* MACRO ERROR */          70434000
*      END;                                                             70438300
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 70442600
*  IF XMF^='M'                               /* BYPASS IF MF=M */       70446900
*    THEN                                                               70451200
*      DO;                                                              70455500
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 70459800
*  IF DS_INFO='DS_INFO' | DS_INFO='()'       /*CHECK ENTRY*/            70464100
*    THEN                                                               70468400
*      DO;                                                              70472700
*        ZMS=' 8, THE "DS_INFO" KEY'||       /**KOPTP* MSG*/            70477000
*            ' MUST CONTAIN ONE'||                                      70481300
*            ' (OR MORE) ARGUMENT(S).';                                 70485600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70489900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70494200
*        ZMACRET=8;                          /* MACRO ERROR */          70498500
*      END;                                                             70502800
*  IF NUMBER(DS_INFO)>1                      /* CHECK POSITIONALS */    70507100
*    THEN                                                               70511400
*      DO;                                                              70515700
*        ZMS=' 8, "DS_INFO'||                /**KPOSP* MSG*/            70520000
*            DS_INFO||                                                  70524300
*            '" "DS_INFO"'||                                            70528600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              70532900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70537200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70541500
*        ZMACRET=8;                          /* MACRO ERROR */          70545800
*      END;                                                             70550100
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 70554400
*  IF DS_INFO(1)^=''                         /* CHECK FOR NULL */       70558700
*    THEN                                                               70563000
*      DO;                                                              70567300
*        XDS_INFO=DS_INFO(1);                /* SET XVARIABLE */        70571600
*        ZXDS_INFO='OUTPUT';                 /* SET OUTPUT */           70575900
*      END;                                                             70580200
*  ELSE                                                                 70584500
*    IF ZXDS_INFO^=''                                                   70588800
*      THEN                                                             70593100
*        ZXDS_INFO='';                       /* RESET OUTPUT */         70597400
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 70601700
*      END;  /**** END OF BYPASS CHECK */                               70606000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 70610300
*  IF NUMBER(EXPBUF)>1                       /* CHECK POSITIONALS */    70614600
*    THEN                                                               70618900
*      DO;                                                              70623200
*        ZMS=' 8, "EXPBUF'||                 /**KPOSP* MSG*/            70627500
*            EXPBUF||                                                   70631800
*            '" "EXPBUF"'||                                             70636100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              70640400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70644700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70649000
*        ZMACRET=8;                          /* MACRO ERROR */          70653300
*      END;                                                             70657600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 70661900
*  XEXPBUF=EXPBUF(1);                        /* SET XVARIABLE */        70666200
*  IF EXPBUF(1)=''                           /* CHECK FOR NULL */       70670500
*   THEN                                                                70674800
*    DO;                                     /* KEY IS REQUIRED */      70679100
*        ZXEXPBUF='';                        /* RESET IN/OUTPUT */      70683400
*        ZMS=' 8,  '||                                                  70687700
*            ' "EXPBUF" KEY AND ITS ARGUMENT'||                         70692000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            70696300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70700600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70704900
*        ZMACRET=8;                          /* MACRO ERROR */          70709200
*    END;                                                               70713500
*  ELSE                                                                 70717800
*    ZXEXPBUF='INPUT';                       /* SET IN/OUTPUT */        70722100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 70726400
*  IF NUMBER(INITBUF)>1                      /* CHECK POSITIONALS */    70730700
*    THEN                                                               70735000
*      DO;                                                              70739300
*        ZMS=' 8, "INITBUF'||                /**KPOSP* MSG*/            70743600
*            INITBUF||                                                  70747900
*            '" "INITBUF"'||                                            70752200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              70756500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70760800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70765100
*        ZMACRET=8;                          /* MACRO ERROR */          70769400
*      END;                                                             70773700
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 70778000
*  XINITBUF=INITBUF(1);                      /* SET XVARIABLE */        70782300
*  IF INITBUF(1)=''                          /* CHECK FOR NULL */       70786600
*   THEN                                                                70790900
*    DO;                                     /* KEY IS REQUIRED */      70795200
*        ZXINITBUF='';                       /* RESET IN/OUTPUT */      70799500
*        ZMS=' 8,  '||                                                  70803800
*            ' "INITBUF" KEY AND ITS ARGUMENT'||                        70808100
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            70812400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70816700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70821000
*        ZMACRET=8;                          /* MACRO ERROR */          70825300
*    END;                                                               70829600
*  ELSE                                                                 70833900
*    ZXINITBUF='INPUT';                      /* SET IN/OUTPUT */        70838200
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 70842500
*  IF NUMBER(MINFREE)>1                      /* CHECK POSITIONALS */    70846800
*    THEN                                                               70851100
*      DO;                                                              70855400
*        ZMS=' 8, "MINFREE'||                /**KPOSP* MSG*/            70859700
*            MINFREE||                                                  70864000
*            '" "MINFREE"'||                                            70868300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              70872600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70876900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70881200
*        ZMACRET=8;                          /* MACRO ERROR */          70885500
*      END;                                                             70889800
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 70894100
*  XMINFREE=MINFREE(1);                      /* SET XVARIABLE */        70898400
*  IF MINFREE(1)=''                          /* CHECK FOR NULL */       70902700
*   THEN                                                                70907000
*    DO;                                     /* KEY IS REQUIRED */      70911300
*        ZXMINFREE='';                       /* RESET IN/OUTPUT */      70915600
*        ZMS=' 8,  '||                                                  70919900
*            ' "MINFREE" KEY AND ITS ARGUMENT'||                        70924200
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            70928500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 70932800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70937100
*        ZMACRET=8;                          /* MACRO ERROR */          70941400
*    END;                                                               70945700
*  ELSE                                                                 70950000
*    ZXMINFREE='INPUT';                      /* SET IN/OUTPUT */        70954300
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 70958600
*  IF XMF^='M'                               /* BYPASS IF MF=M */       70962900
*    THEN                                                               70967200
*      DO;                                                              70971500
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 70975800
*  IF RETPTOKN='RETPTOKN' | RETPTOKN='()'    /*CHECK ENTRY*/            70980100
*    THEN                                                               70984400
*      DO;                                                              70988700
*        ZMS=' 8, THE "RETPTOKN" KEY'||      /**KOPTP* MSG*/            70993000
*            ' MUST CONTAIN ONE'||                                      70997300
*            ' (OR MORE) ARGUMENT(S).';                                 71001600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 71005900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71010200
*        ZMACRET=8;                          /* MACRO ERROR */          71014500
*      END;                                                             71018800
*  IF NUMBER(RETPTOKN)>1                     /* CHECK POSITIONALS */    71023100
*    THEN                                                               71027400
*      DO;                                                              71031700
*        ZMS=' 8, "RETPTOKN'||               /**KPOSP* MSG*/            71036000
*            RETPTOKN||                                                 71040300
*            '" "RETPTOKN"'||                                           71044600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              71048900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 71053200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71057500
*        ZMACRET=8;                          /* MACRO ERROR */          71061800
*      END;                                                             71066100
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 71070400
*  IF RETPTOKN(1)^=''                        /* CHECK FOR NULL */       71074700
*    THEN                                                               71079000
*      DO;                                                              71083300
*        XRETPTOKN=RETPTOKN(1);              /* SET XVARIABLE */        71087600
*        ZXRETPTOKN='OUTPUT';                /* SET OUTPUT */           71091900
*      END;                                                             71096200
*  ELSE                                                                 71100500
*    IF ZXRETPTOKN^=''                                                  71104800
*      THEN                                                             71109100
*        ZXRETPTOKN='';                      /* RESET OUTPUT */         71113400
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 71117700
*      END;  /**** END OF BYPASS CHECK */                               71122000
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 71126300
*  IF XMF^='M'                               /* BYPASS IF MF=M */       71130600
*    THEN                                                               71134900
*      DO;                                                              71139200
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 71143500
*  IF STATAREA='STATAREA' | STATAREA='()'    /*CHECK ENTRY*/            71147800
*    THEN                                                               71152100
*      DO;                                                              71156400
*        ZMS=' 8, THE "STATAREA" KEY'||      /**KOPTP* MSG*/            71160700
*            ' MUST CONTAIN ONE'||                                      71165000
*            ' (OR MORE) ARGUMENT(S).';                                 71169300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 71173600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71177900
*        ZMACRET=8;                          /* MACRO ERROR */          71182200
*      END;                                                             71186500
*  IF NUMBER(STATAREA)>1                     /* CHECK POSITIONALS */    71190800
*    THEN                                                               71195100
*      DO;                                                              71199400
*        ZMS=' 8, "STATAREA'||               /**KPOSP* MSG*/            71203700
*            STATAREA||                                                 71208000
*            '" "STATAREA"'||                                           71212300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              71216600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 71220900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71225200
*        ZMACRET=8;                          /* MACRO ERROR */          71229500
*      END;                                                             71233800
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 71238100
*  IF STATAREA(1)^=''                        /* CHECK FOR NULL */       71242400
*    THEN                                                               71246700
*      DO;                                                              71251000
*        XSTATAREA=STATAREA(1);              /* SET XVARIABLE */        71255300
*        ZXSTATAREA='OUTPUT';                /* SET OUTPUT */           71259600
*      END;                                                             71263900
*  ELSE                                                                 71268200
*    IF ZXSTATAREA^=''                                                  71272500
*      THEN                                                             71276800
*        ZXSTATAREA='';                      /* RESET OUTPUT */         71281100
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 71285400
*      END;  /**** END OF BYPASS CHECK */                               71289700
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 71294000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     71298300
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 71302600
*  IF TRANSLATE(REQUEST(1))                                             71306900
*              = 'DELETE_POOL'               /* CHECK FOR KEYWORD */    71311200
*    THEN                                                               71315500
*      DO;                                                              71319800
*        XREQUEST='DELETE_POOL';             /* SET XVARIABLE */        71324100
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    71328400
*          THEN                                                         71332700
*            DO;                                                        71337000
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            71341300
*                  REQUEST||                                            71345600
*                  '" "REQUEST"'||                                      71349900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        71354200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           71358500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          71362800
*              ZMACRET=8;                    /* MACRO ERROR */          71367100
*            END;                                                       71371400
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 71375700
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 71380000
*        IF BUFLIST^=''                      /* CHECK FOR KEY */        71384300
*          THEN                                                         71388600
*            ZCVAL=ZCVAL||',BUFLIST';        /* INCORRECT KEY USED */   71392900
*        IF BUFNUM^=''                       /* CHECK FOR KEY */        71397200
*          THEN                                                         71401500
*            ZCVAL=ZCVAL||',BUFNUM';         /* INCORRECT KEY USED */   71405800
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        71410100
*          THEN                                                         71414400
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   71418700
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        71423000
*          THEN                                                         71427300
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   71431600
*        IF GAP^=''                          /* CHECK FOR KEY */        71435900
*          THEN                                                         71440200
*            ZCVAL=ZCVAL||',GAP';            /* INCORRECT KEY USED */   71444500
*        IF ERRBFLST^=''                     /* CHECK FOR KEY */        71448800
*          THEN                                                         71453100
*            ZCVAL=ZCVAL||',ERRBFLST';       /* INCORRECT KEY USED */   71457400
*        IF OWNERID^=''                      /* CHECK FOR KEY */        71461700
*          THEN                                                         71466000
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   71470300
*        IF TASKID^=''                       /* CHECK FOR KEY */        71474600
*          THEN                                                         71478900
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   71483200
*        IF THREAD^=''                       /* CHECK FOR KEY */        71487500
*          THEN                                                         71491800
*            ZCVAL=ZCVAL||',THREAD';         /* INCORRECT KEY USED */   71496100
*        IF UTILRTN^=''                      /* CHECK FOR KEY */        71500400
*          THEN                                                         71504700
*            ZCVAL=ZCVAL||',UTILRTN';        /* INCORRECT KEY USED */   71509000
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        71513300
*          THEN                                                         71517600
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   71521900
*        IF PAD^=''                          /* CHECK FOR KEY */        71526200
*          THEN                                                         71530500
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   71534800
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        71539100
*          THEN                                                         71543400
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   71547700
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        71552000
*          THEN                                                         71556300
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   71560600
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        71564900
*          THEN                                                         71569200
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   71573500
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        71577800
*          THEN                                                         71582100
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   71586400
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        71590700
*          THEN                                                         71595000
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   71599300
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        71603600
*          THEN                                                         71607900
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   71612200
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        71616500
*          THEN                                                         71620800
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   71625100
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        71629400
*          THEN                                                         71633700
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   71638000
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        71642300
*          THEN                                                         71646600
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   71650900
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        71655200
*          THEN                                                         71659500
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   71663800
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        71668100
*          THEN                                                         71672400
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   71676700
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        71681000
*          THEN                                                         71685300
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   71689600
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        71693900
*          THEN                                                         71698200
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   71702500
*        IF INITBUF^=''                      /* CHECK FOR KEY */        71706800
*          THEN                                                         71711100
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   71715400
*        IF MINFREE^=''                      /* CHECK FOR KEY */        71719700
*          THEN                                                         71724000
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   71728300
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        71732600
*          THEN                                                         71736900
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   71741200
*        IF STATAREA^=''                     /* CHECK FOR KEY */        71745500
*          THEN                                                         71749800
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   71754100
*        IF WAIT^=''                         /* CHECK FOR KEY */        71758400
*          THEN                                                         71762700
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   71767000
*        IF CLEAR^=''                        /* CHECK FOR KEY */        71771300
*          THEN                                                         71775600
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   71779900
*        IF FREETO^=''                       /* CHECK FOR KEY */        71784200
*          THEN                                                         71788500
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   71792800
*        IF FREERTN^=''                      /* CHECK FOR KEY */        71797100
*          THEN                                                         71801400
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   71805700
*        IF ZCVAL^=''                                                   71810000
*          THEN                                                         71814300
*            DO;                             /* INCORRECT KEYS USED */  71818600
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            71822900
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            71827200
*                  REQUEST||'"'||                                       71831500
*                  ' DOES NOT ALLOW THE USE OF THE'||                   71835800
*                  ' FOLLOWING KEY(S) "'||                              71840100
*                  ZCVAL||'".';                                         71844400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           71848700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          71853000
*              ZMACRET=8;                    /* MACRO ERROR */          71857300
*            END;                                                       71861600
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 71865900
*  IF NUMBER(POOLTOKN)>1                     /* CHECK POSITIONALS */    71870200
*    THEN                                                               71874500
*      DO;                                                              71878800
*        ZMS=' 8, "POOLTOKN'||               /**KPOSP* MSG*/            71883100
*            POOLTOKN||                                                 71887400
*            '" "POOLTOKN"'||                                           71891700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              71896000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 71900300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71904600
*        ZMACRET=8;                          /* MACRO ERROR */          71908900
*      END;                                                             71913200
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 71917500
*  XPOOLTOKN=POOLTOKN(1);                    /* SET XVARIABLE */        71921800
*  IF POOLTOKN(1)=''                         /* CHECK FOR NULL */       71926100
*   THEN                                                                71930400
*    DO;                                     /* KEY IS REQUIRED */      71934700
*        ZXPOOLTOKN='';                      /* RESET IN/OUTPUT */      71939000
*        ZMS=' 8,  '||                                                  71943300
*            ' "POOLTOKN" KEY AND ITS ARGUMENT'||                       71947600
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            71951900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 71956200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71960500
*        ZMACRET=8;                          /* MACRO ERROR */          71964800
*    END;                                                               71969100
*  ELSE                                                                 71973400
*    ZXPOOLTOKN='INPUT';                     /* SET IN/OUTPUT */        71977700
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 71982000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     71986300
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 71990600
*  IF TRANSLATE(REQUEST(1))                                             71994900
*              = 'DUMP_INFO'                 /* CHECK FOR KEYWORD */    71999200
*    THEN                                                               72003500
*      DO;                                                              72007800
*        XREQUEST='DUMP_INFO';               /* SET XVARIABLE */        72012100
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    72016400
*          THEN                                                         72020700
*            DO;                                                        72025000
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            72029300
*                  REQUEST||                                            72033600
*                  '" "REQUEST"'||                                      72037900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        72042200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           72046500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          72050800
*              ZMACRET=8;                    /* MACRO ERROR */          72055100
*            END;                                                       72059400
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 72063700
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 72068000
*        IF BUFLIST^=''                      /* CHECK FOR KEY */        72072300
*          THEN                                                         72076600
*            ZCVAL=ZCVAL||',BUFLIST';        /* INCORRECT KEY USED */   72080900
*        IF BUFNUM^=''                       /* CHECK FOR KEY */        72085200
*          THEN                                                         72089500
*            ZCVAL=ZCVAL||',BUFNUM';         /* INCORRECT KEY USED */   72093800
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        72098100
*          THEN                                                         72102400
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   72106700
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        72111000
*          THEN                                                         72115300
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   72119600
*        IF GAP^=''                          /* CHECK FOR KEY */        72123900
*          THEN                                                         72128200
*            ZCVAL=ZCVAL||',GAP';            /* INCORRECT KEY USED */   72132500
*        IF ERRBFLST^=''                     /* CHECK FOR KEY */        72136800
*          THEN                                                         72141100
*            ZCVAL=ZCVAL||',ERRBFLST';       /* INCORRECT KEY USED */   72145400
*        IF OWNERID^=''                      /* CHECK FOR KEY */        72149700
*          THEN                                                         72154000
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   72158300
*        IF TASKID^=''                       /* CHECK FOR KEY */        72162600
*          THEN                                                         72166900
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   72171200
*        IF THREAD^=''                       /* CHECK FOR KEY */        72175500
*          THEN                                                         72179800
*            ZCVAL=ZCVAL||',THREAD';         /* INCORRECT KEY USED */   72184100
*        IF UTILRTN^=''                      /* CHECK FOR KEY */        72188400
*          THEN                                                         72192700
*            ZCVAL=ZCVAL||',UTILRTN';        /* INCORRECT KEY USED */   72197000
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        72201300
*          THEN                                                         72205600
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   72209900
*        IF PAD^=''                          /* CHECK FOR KEY */        72214200
*          THEN                                                         72218500
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   72222800
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        72227100
*          THEN                                                         72231400
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   72235700
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        72240000
*          THEN                                                         72244300
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   72248600
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        72252900
*          THEN                                                         72257200
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   72261500
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        72265800
*          THEN                                                         72270100
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   72274400
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        72278700
*          THEN                                                         72283000
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   72287300
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        72291600
*          THEN                                                         72295900
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   72300200
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        72304500
*          THEN                                                         72308800
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   72313100
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        72317400
*          THEN                                                         72321700
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   72326000
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        72330300
*          THEN                                                         72334600
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   72338900
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        72343200
*          THEN                                                         72347500
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   72351800
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        72356100
*          THEN                                                         72360400
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   72364700
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        72369000
*          THEN                                                         72373300
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   72377600
*        IF INITBUF^=''                      /* CHECK FOR KEY */        72381900
*          THEN                                                         72386200
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   72390500
*        IF MINFREE^=''                      /* CHECK FOR KEY */        72394800
*          THEN                                                         72399100
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   72403400
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        72407700
*          THEN                                                         72412000
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   72416300
*        IF STATAREA^=''                     /* CHECK FOR KEY */        72420600
*          THEN                                                         72424900
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   72429200
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        72433500
*          THEN                                                         72437800
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   72442100
*        IF WAIT^=''                         /* CHECK FOR KEY */        72446400
*          THEN                                                         72450700
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   72455000
*        IF CLEAR^=''                        /* CHECK FOR KEY */        72459300
*          THEN                                                         72463600
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   72467900
*        IF FREETO^=''                       /* CHECK FOR KEY */        72472200
*          THEN                                                         72476500
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   72480800
*        IF FREERTN^=''                      /* CHECK FOR KEY */        72485100
*          THEN                                                         72489400
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   72493700
*        IF ZCVAL^=''                                                   72498000
*          THEN                                                         72502300
*            DO;                             /* INCORRECT KEYS USED */  72506600
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            72510900
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            72515200
*                  REQUEST||'"'||                                       72519500
*                  ' DOES NOT ALLOW THE USE OF THE'||                   72523800
*                  ' FOLLOWING KEY(S) "'||                              72528100
*                  ZCVAL||'".';                                         72532400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           72536700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          72541000
*              ZMACRET=8;                    /* MACRO ERROR */          72545300
*            END;                                                       72549600
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 72553900
*  IF XMF^='M'                               /* BYPASS IF MF=M */       72558200
*    THEN                                                               72562500
*      DO;                                                              72566800
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 72571100
*  IF DS_INFO='DS_INFO' | DS_INFO='()'       /*CHECK ENTRY*/            72575400
*    THEN                                                               72579700
*      DO;                                                              72584000
*        ZMS=' 8, THE "DS_INFO" KEY'||       /**KOPTP* MSG*/            72588300
*            ' MUST CONTAIN ONE'||                                      72592600
*            ' (OR MORE) ARGUMENT(S).';                                 72596900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 72601200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                72605500
*        ZMACRET=8;                          /* MACRO ERROR */          72609800
*      END;                                                             72614100
*  IF NUMBER(DS_INFO)>1                      /* CHECK POSITIONALS */    72618400
*    THEN                                                               72622700
*      DO;                                                              72627000
*        ZMS=' 8, "DS_INFO'||                /**KPOSP* MSG*/            72631300
*            DS_INFO||                                                  72635600
*            '" "DS_INFO"'||                                            72639900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              72644200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 72648500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                72652800
*        ZMACRET=8;                          /* MACRO ERROR */          72657100
*      END;                                                             72661400
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 72665700
*  IF DS_INFO(1)^=''                         /* CHECK FOR NULL */       72670000
*    THEN                                                               72674300
*      DO;                                                              72678600
*        XDS_INFO=DS_INFO(1);                /* SET XVARIABLE */        72682900
*        ZXDS_INFO='OUTPUT';                 /* SET OUTPUT */           72687200
*      END;                                                             72691500
*  ELSE                                                                 72695800
*    IF ZXDS_INFO^=''                                                   72700100
*      THEN                                                             72704400
*        ZXDS_INFO='';                       /* RESET OUTPUT */         72708700
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 72713000
*      END;  /**** END OF BYPASS CHECK */                               72717300
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 72721600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     72725900
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 72730200
*  IF TRANSLATE(REQUEST(1))                                             72734500
*              = 'FIX_BUFFER'                /* CHECK FOR KEYWORD */    72738800
*    THEN                                                               72743100
*      DO;                                                              72747400
*        XREQUEST='FIX_BUFFER';              /* SET XVARIABLE */        72751700
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    72756000
*          THEN                                                         72760300
*            DO;                                                        72764600
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            72768900
*                  REQUEST||                                            72773200
*                  '" "REQUEST"'||                                      72777500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        72781800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           72786100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          72790400
*              ZMACRET=8;                    /* MACRO ERROR */          72794700
*            END;                                                       72799000
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 72803300
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 72807600
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        72811900
*          THEN                                                         72816200
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   72820500
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        72824800
*          THEN                                                         72829100
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   72833400
*        IF OWNERID^=''                      /* CHECK FOR KEY */        72837700
*          THEN                                                         72842000
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   72846300
*        IF TASKID^=''                       /* CHECK FOR KEY */        72850600
*          THEN                                                         72854900
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   72859200
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        72863500
*          THEN                                                         72867800
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   72872100
*        IF PAD^=''                          /* CHECK FOR KEY */        72876400
*          THEN                                                         72880700
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   72885000
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        72889300
*          THEN                                                         72893600
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   72897900
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        72902200
*          THEN                                                         72906500
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   72910800
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        72915100
*          THEN                                                         72919400
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   72923700
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        72928000
*          THEN                                                         72932300
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   72936600
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        72940900
*          THEN                                                         72945200
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   72949500
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        72953800
*          THEN                                                         72958100
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   72962400
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        72966700
*          THEN                                                         72971000
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   72975300
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        72979600
*          THEN                                                         72983900
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   72988200
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        72992500
*          THEN                                                         72996800
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   73001100
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        73005400
*          THEN                                                         73009700
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   73014000
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        73018300
*          THEN                                                         73022600
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   73026900
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        73031200
*          THEN                                                         73035500
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   73039800
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        73044100
*          THEN                                                         73048400
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   73052700
*        IF INITBUF^=''                      /* CHECK FOR KEY */        73057000
*          THEN                                                         73061300
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   73065600
*        IF MINFREE^=''                      /* CHECK FOR KEY */        73069900
*          THEN                                                         73074200
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   73078500
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        73082800
*          THEN                                                         73087100
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   73091400
*        IF STATAREA^=''                     /* CHECK FOR KEY */        73095700
*          THEN                                                         73100000
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   73104300
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        73108600
*          THEN                                                         73112900
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   73117200
*        IF CLEAR^=''                        /* CHECK FOR KEY */        73121500
*          THEN                                                         73125800
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   73130100
*        IF FREETO^=''                       /* CHECK FOR KEY */        73134400
*          THEN                                                         73138700
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   73143000
*        IF FREERTN^=''                      /* CHECK FOR KEY */        73147300
*          THEN                                                         73151600
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   73155900
*        IF ZCVAL^=''                                                   73160200
*          THEN                                                         73164500
*            DO;                             /* INCORRECT KEYS USED */  73168800
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            73173100
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            73177400
*                  REQUEST||'"'||                                       73181700
*                  ' DOES NOT ALLOW THE USE OF THE'||                   73186000
*                  ' FOLLOWING KEY(S) "'||                              73190300
*                  ZCVAL||'".';                                         73194600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           73198900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          73203200
*              ZMACRET=8;                    /* MACRO ERROR */          73207500
*            END;                                                       73211800
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 73216100
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    73220400
*    THEN                                                               73224700
*      DO;                                                              73229000
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            73233300
*            BUFLIST||                                                  73237600
*            '" "BUFLIST"'||                                            73241900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73246200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73250500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73254800
*        ZMACRET=8;                          /* MACRO ERROR */          73259100
*      END;                                                             73263400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 73267700
*  XBUFLIST=BUFLIST(1);                      /* SET XVARIABLE */        73272000
*  IF BUFLIST(1)=''                          /* CHECK FOR NULL */       73276300
*   THEN                                                                73280600
*    DO;                                     /* KEY IS REQUIRED */      73284900
*        ZXBUFLIST='';                       /* RESET IN/OUTPUT */      73289200
*        ZMS=' 8,  '||                                                  73293500
*            ' "BUFLIST" KEY AND ITS ARGUMENT'||                        73297800
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            73302100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73306400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73310700
*        ZMACRET=8;                          /* MACRO ERROR */          73315000
*    END;                                                               73319300
*  ELSE                                                                 73323600
*    ZXBUFLIST='INPUT';                      /* SET IN/OUTPUT */        73327900
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 73332200
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    73336500
*    THEN                                                               73340800
*      DO;                                                              73345100
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            73349400
*            BUFNUM||                                                   73353700
*            '" "BUFNUM"'||                                             73358000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73362300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73366600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73370900
*        ZMACRET=8;                          /* MACRO ERROR */          73375200
*      END;                                                             73379500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 73383800
*  XBUFNUM=BUFNUM(1);                        /* SET XVARIABLE */        73388100
*  IF BUFNUM(1)=''                           /* CHECK FOR NULL */       73392400
*   THEN                                                                73396700
*    DO;                                     /* KEY IS REQUIRED */      73401000
*        ZXBUFNUM='';                        /* RESET IN/OUTPUT */      73405300
*        ZMS=' 8,  '||                                                  73409600
*            ' "BUFNUM" KEY AND ITS ARGUMENT'||                         73413900
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            73418200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73422500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73426800
*        ZMACRET=8;                          /* MACRO ERROR */          73431100
*    END;                                                               73435400
*  ELSE                                                                 73439700
*    ZXBUFNUM='INPUT';                       /* SET IN/OUTPUT */        73444000
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 73448300
*  IF XMF^='M'                               /* BYPASS IF MF=M */       73452600
*    THEN                                                               73456900
*      DO;                                                              73461200
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 73465500
*  IF ERRBFLST='ERRBFLST' | ERRBFLST='()'    /*CHECK ENTRY*/            73469800
*    THEN                                                               73474100
*      DO;                                                              73478400
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            73482700
*            ' MUST CONTAIN ONE'||                                      73487000
*            ' (OR MORE) ARGUMENT(S).';                                 73491300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73495600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73499900
*        ZMACRET=8;                          /* MACRO ERROR */          73504200
*      END;                                                             73508500
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    73512800
*    THEN                                                               73517100
*      DO;                                                              73521400
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            73525700
*            ERRBFLST||                                                 73530000
*            '" "ERRBFLST"'||                                           73534300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73538600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73542900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73547200
*        ZMACRET=8;                          /* MACRO ERROR */          73551500
*      END;                                                             73555800
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 73560100
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       73564400
*    THEN                                                               73568700
*      DO;                                                              73573000
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        73577300
*        ZXERRBFLST='OUTPUT';                /* SET OUTPUT */           73581600
*      END;                                                             73585900
*  ELSE                                                                 73590200
*    IF ZXERRBFLST^=''                                                  73594500
*      THEN                                                             73598800
*        ZXERRBFLST='';                      /* RESET OUTPUT */         73603100
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 73607400
*      END;  /**** END OF BYPASS CHECK */                               73611700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 73616000
*  IF GAP='GAP' | GAP='()'                   /*CHECK ENTRY*/            73620300
*    THEN                                                               73624600
*      DO;                                                              73628900
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            73633200
*            ' MUST CONTAIN ONE'||                                      73637500
*            ' (OR MORE) ARGUMENT(S).';                                 73641800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73646100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73650400
*        ZMACRET=8;                          /* MACRO ERROR */          73654700
*      END;                                                             73659000
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    73663300
*    THEN                                                               73667600
*      DO;                                                              73671900
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            73676200
*            GAP||                                                      73680500
*            '" "GAP"'||                                                73684800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73689100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73693400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73697700
*        ZMACRET=8;                          /* MACRO ERROR */          73702000
*      END;                                                             73706300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 73710600
*  ZXGAP='INPUT';                            /* SET IN/OUTPUT */        73714900
*  XGAP='0';                                 /* SET DEFAULT */          73719200
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       73723500
*    THEN                                                               73727800
*      XGAP=GAP(1);                          /* SET XVARIABLE */        73732100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 73736400
*  IF THREAD='THREAD' | THREAD='()'          /*CHECK ENTRY*/            73740700
*    THEN                                                               73745000
*      DO;                                                              73749300
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            73753600
*            ' MUST CONTAIN ONE'||                                      73757900
*            ' (OR MORE) ARGUMENT(S).';                                 73762200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73766500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73770800
*        ZMACRET=8;                          /* MACRO ERROR */          73775100
*      END;                                                             73779400
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    73783700
*    THEN                                                               73788000
*      DO;                                                              73792300
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            73796600
*            THREAD||                                                   73800900
*            '" "THREAD"'||                                             73805200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73809500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73813800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73818100
*        ZMACRET=8;                          /* MACRO ERROR */          73822400
*      END;                                                             73826700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 73831000
*  ZXTHREAD='INPUT';                         /* SET IN/OUTPUT */        73835300
*  XTHREAD='0';                              /* SET DEFAULT */          73839600
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       73843900
*    THEN                                                               73848200
*      XTHREAD=THREAD(1);                    /* SET XVARIABLE */        73852500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 73856800
*  IF UTILRTN='UTILRTN' | UTILRTN='()'       /*CHECK ENTRY*/            73861100
*    THEN                                                               73865400
*      DO;                                                              73869700
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            73874000
*            ' MUST CONTAIN ONE'||                                      73878300
*            ' (OR MORE) ARGUMENT(S).';                                 73882600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73886900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73891200
*        ZMACRET=8;                          /* MACRO ERROR */          73895500
*      END;                                                             73899800
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    73904100
*    THEN                                                               73908400
*      DO;                                                              73912700
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            73917000
*            UTILRTN||                                                  73921300
*            '" "UTILRTN"'||                                            73925600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73929900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 73934200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73938500
*        ZMACRET=8;                          /* MACRO ERROR */          73942800
*      END;                                                             73947100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 73951400
*  ZXUTILRTN='INPUT';                        /* SET IN/OUTPUT */        73955700
*  XUTILRTN='0';                             /* SET DEFAULT */          73960000
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       73964300
*    THEN                                                               73968600
*      XUTILRTN=UTILRTN(1);                  /* SET XVARIABLE */        73972900
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 73977200
*  IF WAIT='WAIT'                            /* CHECK ENTRY */          73981500
*    THEN                                                               73985800
*      DO;                                                              73990100
*        ZMS=' 8, THE "WAIT" KEY'||          /**KOPTP* MSG*/            73994400
*            ' MUST CONTAIN ONE'||                                      73998700
*            ' (OR MORE) ARGUMENT(S).';                                 74003000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74007300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74011600
*        ZMACRET=8;                          /* MACRO ERROR */          74015900
*      END;                                                             74020200
*  IF NUMBER(WAIT)>1                         /* CHECK POSITIONALS */    74024500
*    THEN                                                               74028800
*      DO;                                                              74033100
*        ZMS=' 8, "WAIT'||                   /**KPOSP* MSG*/            74037400
*            WAIT||                                                     74041700
*            '" "WAIT"'||                                               74046000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              74050300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74054600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74058900
*        ZMACRET=8;                          /* MACRO ERROR */          74063200
*      END;                                                             74067500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 74071800
*  XWAIT='';                                 /* RESET XVARIABLE */      74076100
*  IF TRANSLATE(WAIT(1))                                                74080400
*              = 'NO'                        /* CHECK FOR KEYWORD */    74084700
*    THEN                                                               74089000
*      XWAIT = 'NO';                         /* SET XVARIABLE */        74093300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 74097600
*  IF TRANSLATE(WAIT(1))                                                74101900
*              = 'YES'                       /* CHECK FOR KEYWORD */    74106200
*    THEN                                                               74110500
*      XWAIT = 'YES';                        /* SET XVARIABLE */        74114800
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 74119100
*  ZXWAIT='INPUT';                           /* SET IN/OUTPUT */        74123400
*  IF XWAIT=''                               /* CHECK FOR KEYWORD */    74127700
*    THEN                                                               74132000
*      DO;                                   /* KEYWORD NOT ENTERED */  74136300
*        XWAIT='NO';                         /* SET DEFAULT */          74140600
*        IF WAIT(1)^=''                                                 74144900
*          THEN                                                         74149200
*            DO;                                                        74153500
*              ZXWAIT='';                    /* RESET IN/OUTPUT */      74157800
*              ZMS=' 8, "WAIT'||             /**KUKWP* MSG*/            74162100
*                  WAIT||'"'||                                          74166400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              74170700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    74175000
*                  ' "NO"'||                 /* VALID KEYWORD */        74179300
*                  ' OR "YES".';             /* VALID KEYWORD */        74183600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           74187900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          74192200
*              ZMACRET=8;                    /* MACRO ERROR */          74196500
*            END;                                                       74200800
*      END;                                                             74205100
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 74209400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     74213700
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 74218000
*  IF TRANSLATE(REQUEST(1))                                             74222300
*              = 'FREE_BUFFER'               /* CHECK FOR KEYWORD */    74226600
*    THEN                                                               74230900
*      DO;                                                              74235200
*        XREQUEST='FREE_BUFFER';             /* SET XVARIABLE */        74239500
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    74243800
*          THEN                                                         74248100
*            DO;                                                        74252400
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            74256700
*                  REQUEST||                                            74261000
*                  '" "REQUEST"'||                                      74265300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        74269600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           74273900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          74278200
*              ZMACRET=8;                    /* MACRO ERROR */          74282500
*            END;                                                       74286800
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 74291100
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 74295400
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        74299700
*          THEN                                                         74304000
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   74308300
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        74312600
*          THEN                                                         74316900
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   74321200
*        IF OWNERID^=''                      /* CHECK FOR KEY */        74325500
*          THEN                                                         74329800
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   74334100
*        IF TASKID^=''                       /* CHECK FOR KEY */        74338400
*          THEN                                                         74342700
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   74347000
*        IF PAD^=''                          /* CHECK FOR KEY */        74351300
*          THEN                                                         74355600
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   74359900
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        74364200
*          THEN                                                         74368500
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   74372800
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        74377100
*          THEN                                                         74381400
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   74385700
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        74390000
*          THEN                                                         74394300
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   74398600
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        74402900
*          THEN                                                         74407200
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   74411500
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        74415800
*          THEN                                                         74420100
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   74424400
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        74428700
*          THEN                                                         74433000
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   74437300
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        74441600
*          THEN                                                         74445900
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   74450200
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        74454500
*          THEN                                                         74458800
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   74463100
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        74467400
*          THEN                                                         74471700
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   74476000
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        74480300
*          THEN                                                         74484600
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   74488900
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        74493200
*          THEN                                                         74497500
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   74501800
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        74506100
*          THEN                                                         74510400
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   74514700
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        74519000
*          THEN                                                         74523300
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   74527600
*        IF INITBUF^=''                      /* CHECK FOR KEY */        74531900
*          THEN                                                         74536200
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   74540500
*        IF MINFREE^=''                      /* CHECK FOR KEY */        74544800
*          THEN                                                         74549100
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   74553400
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        74557700
*          THEN                                                         74562000
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   74566300
*        IF STATAREA^=''                     /* CHECK FOR KEY */        74570600
*          THEN                                                         74574900
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   74579200
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        74583500
*          THEN                                                         74587800
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   74592100
*        IF WAIT^=''                         /* CHECK FOR KEY */        74596400
*          THEN                                                         74600700
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   74605000
*        IF FREERTN^=''                      /* CHECK FOR KEY */        74609300
*          THEN                                                         74613600
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   74617900
*        IF ZCVAL^=''                                                   74622200
*          THEN                                                         74626500
*            DO;                             /* INCORRECT KEYS USED */  74630800
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            74635100
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            74639400
*                  REQUEST||'"'||                                       74643700
*                  ' DOES NOT ALLOW THE USE OF THE'||                   74648000
*                  ' FOLLOWING KEY(S) "'||                              74652300
*                  ZCVAL||'".';                                         74656600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           74660900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          74665200
*              ZMACRET=8;                    /* MACRO ERROR */          74669500
*            END;                                                       74673800
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 74678100
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    74682400
*    THEN                                                               74686700
*      DO;                                                              74691000
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            74695300
*            BUFLIST||                                                  74699600
*            '" "BUFLIST"'||                                            74703900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              74708200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74712500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74716800
*        ZMACRET=8;                          /* MACRO ERROR */          74721100
*      END;                                                             74725400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 74729700
*  XBUFLIST=BUFLIST(1);                      /* SET XVARIABLE */        74734000
*  IF BUFLIST(1)=''                          /* CHECK FOR NULL */       74738300
*   THEN                                                                74742600
*    DO;                                     /* KEY IS REQUIRED */      74746900
*        ZXBUFLIST='';                       /* RESET IN/OUTPUT */      74751200
*        ZMS=' 8,  '||                                                  74755500
*            ' "BUFLIST" KEY AND ITS ARGUMENT'||                        74759800
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            74764100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74768400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74772700
*        ZMACRET=8;                          /* MACRO ERROR */          74777000
*    END;                                                               74781300
*  ELSE                                                                 74785600
*    ZXBUFLIST='INPUT';                      /* SET IN/OUTPUT */        74789900
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 74794200
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    74798500
*    THEN                                                               74802800
*      DO;                                                              74807100
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            74811400
*            BUFNUM||                                                   74815700
*            '" "BUFNUM"'||                                             74820000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              74824300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74828600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74832900
*        ZMACRET=8;                          /* MACRO ERROR */          74837200
*      END;                                                             74841500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 74845800
*  XBUFNUM=BUFNUM(1);                        /* SET XVARIABLE */        74850100
*  IF BUFNUM(1)=''                           /* CHECK FOR NULL */       74854400
*   THEN                                                                74858700
*    DO;                                     /* KEY IS REQUIRED */      74863000
*        ZXBUFNUM='';                        /* RESET IN/OUTPUT */      74867300
*        ZMS=' 8,  '||                                                  74871600
*            ' "BUFNUM" KEY AND ITS ARGUMENT'||                         74875900
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            74880200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74884500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74888800
*        ZMACRET=8;                          /* MACRO ERROR */          74893100
*    END;                                                               74897400
*  ELSE                                                                 74901700
*    ZXBUFNUM='INPUT';                       /* SET IN/OUTPUT */        74906000
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 74910300
*  IF CLEAR='CLEAR'                          /* CHECK ENTRY */          74914600
*    THEN                                                               74918900
*      DO;                                                              74923200
*        ZMS=' 8, THE "CLEAR" KEY'||         /**KOPTP* MSG*/            74927500
*            ' MUST CONTAIN ONE'||                                      74931800
*            ' (OR MORE) ARGUMENT(S).';                                 74936100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74940400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74944700
*        ZMACRET=8;                          /* MACRO ERROR */          74949000
*      END;                                                             74953300
*  IF NUMBER(CLEAR)>1                        /* CHECK POSITIONALS */    74957600
*    THEN                                                               74961900
*      DO;                                                              74966200
*        ZMS=' 8, "CLEAR'||                  /**KPOSP* MSG*/            74970500
*            CLEAR||                                                    74974800
*            '" "CLEAR"'||                                              74979100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              74983400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 74987700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74992000
*        ZMACRET=8;                          /* MACRO ERROR */          74996300
*      END;                                                             75000600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75004900
*  XCLEAR='';                                /* RESET XVARIABLE */      75009200
*  IF TRANSLATE(CLEAR(1))                                               75013500
*              = 'NO'                        /* CHECK FOR KEYWORD */    75017800
*    THEN                                                               75022100
*      XCLEAR = 'NO';                        /* SET XVARIABLE */        75026400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75030700
*  IF TRANSLATE(CLEAR(1))                                               75035000
*              = 'YES'                       /* CHECK FOR KEYWORD */    75039300
*    THEN                                                               75043600
*      XCLEAR = 'YES';                       /* SET XVARIABLE */        75047900
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75052200
*  ZXCLEAR='INPUT';                          /* SET IN/OUTPUT */        75056500
*  IF XCLEAR=''                              /* CHECK FOR KEYWORD */    75060800
*    THEN                                                               75065100
*      DO;                                   /* KEYWORD NOT ENTERED */  75069400
*        XCLEAR='NO';                        /* SET DEFAULT */          75073700
*        IF CLEAR(1)^=''                                                75078000
*          THEN                                                         75082300
*            DO;                                                        75086600
*              ZXCLEAR='';                   /* RESET IN/OUTPUT */      75090900
*              ZMS=' 8, "CLEAR'||            /**KUKWP* MSG*/            75095200
*                  CLEAR||'"'||                                         75099500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              75103800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    75108100
*                  ' "NO"'||                 /* VALID KEYWORD */        75112400
*                  ' OR "YES".';             /* VALID KEYWORD */        75116700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           75121000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          75125300
*              ZMACRET=8;                    /* MACRO ERROR */          75129600
*            END;                                                       75133900
*      END;                                                             75138200
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 75142500
*  IF XMF^='M'                               /* BYPASS IF MF=M */       75146800
*    THEN                                                               75151100
*      DO;                                                              75155400
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 75159700
*  IF ERRBFLST='ERRBFLST' | ERRBFLST='()'    /*CHECK ENTRY*/            75164000
*    THEN                                                               75168300
*      DO;                                                              75172600
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            75176900
*            ' MUST CONTAIN ONE'||                                      75181200
*            ' (OR MORE) ARGUMENT(S).';                                 75185500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75189800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75194100
*        ZMACRET=8;                          /* MACRO ERROR */          75198400
*      END;                                                             75202700
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    75207000
*    THEN                                                               75211300
*      DO;                                                              75215600
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            75219900
*            ERRBFLST||                                                 75224200
*            '" "ERRBFLST"'||                                           75228500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              75232800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75237100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75241400
*        ZMACRET=8;                          /* MACRO ERROR */          75245700
*      END;                                                             75250000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 75254300
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       75258600
*    THEN                                                               75262900
*      DO;                                                              75267200
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        75271500
*        ZXERRBFLST='OUTPUT';                /* SET OUTPUT */           75275800
*      END;                                                             75280100
*  ELSE                                                                 75284400
*    IF ZXERRBFLST^=''                                                  75288700
*      THEN                                                             75293000
*        ZXERRBFLST='';                      /* RESET OUTPUT */         75297300
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 75301600
*      END;  /**** END OF BYPASS CHECK */                               75305900
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75310200
*  IF FREETO='FREETO'                        /* CHECK ENTRY */          75314500
*    THEN                                                               75318800
*      DO;                                                              75323100
*        ZMS=' 8, THE "FREETO" KEY'||        /**KOPTP* MSG*/            75327400
*            ' MUST CONTAIN ONE'||                                      75331700
*            ' (OR MORE) ARGUMENT(S).';                                 75336000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75340300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75344600
*        ZMACRET=8;                          /* MACRO ERROR */          75348900
*      END;                                                             75353200
*  IF NUMBER(FREETO)>1                       /* CHECK POSITIONALS */    75357500
*    THEN                                                               75361800
*      DO;                                                              75366100
*        ZMS=' 8, "FREETO'||                 /**KPOSP* MSG*/            75370400
*            FREETO||                                                   75374700
*            '" "FREETO"'||                                             75379000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              75383300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75387600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75391900
*        ZMACRET=8;                          /* MACRO ERROR */          75396200
*      END;                                                             75400500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75404800
*  XFREETO='';                               /* RESET XVARIABLE */      75409100
*  IF TRANSLATE(FREETO(1))                                              75413400
*              = 'USER'                      /* CHECK FOR KEYWORD */    75417700
*    THEN                                                               75422000
*      XFREETO = 'USER';                     /* SET XVARIABLE */        75426300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75430600
*  IF TRANSLATE(FREETO(1))                                              75434900
*              = 'CSM'                       /* CHECK FOR KEYWORD */    75439200
*    THEN                                                               75443500
*      XFREETO = 'CSM';                      /* SET XVARIABLE */        75447800
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75452100
*  ZXFREETO='INPUT';                         /* SET IN/OUTPUT */        75456400
*  IF XFREETO=''                             /* CHECK FOR KEYWORD */    75460700
*    THEN                                                               75465000
*      DO;                                   /* KEYWORD NOT ENTERED */  75469300
*        XFREETO='USER';                     /* SET DEFAULT */          75473600
*        IF FREETO(1)^=''                                               75477900
*          THEN                                                         75482200
*            DO;                                                        75486500
*              ZXFREETO='';                  /* RESET IN/OUTPUT */      75490800
*              ZMS=' 8, "FREETO'||           /**KUKWP* MSG*/            75495100
*                  FREETO||'"'||                                        75499400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              75503700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    75508000
*                  ' "USER"'||               /* VALID KEYWORD */        75512300
*                  ' OR "CSM".';             /* VALID KEYWORD */        75516600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           75520900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          75525200
*              ZMACRET=8;                    /* MACRO ERROR */          75529500
*            END;                                                       75533800
*      END;                                                             75538100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 75542400
*  IF GAP='GAP' | GAP='()'                   /*CHECK ENTRY*/            75546700
*    THEN                                                               75551000
*      DO;                                                              75555300
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            75559600
*            ' MUST CONTAIN ONE'||                                      75563900
*            ' (OR MORE) ARGUMENT(S).';                                 75568200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75572500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75576800
*        ZMACRET=8;                          /* MACRO ERROR */          75581100
*      END;                                                             75585400
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    75589700
*    THEN                                                               75594000
*      DO;                                                              75598300
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            75602600
*            GAP||                                                      75606900
*            '" "GAP"'||                                                75611200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              75615500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75619800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75624100
*        ZMACRET=8;                          /* MACRO ERROR */          75628400
*      END;                                                             75632700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 75637000
*  ZXGAP='INPUT';                            /* SET IN/OUTPUT */        75641300
*  XGAP='0';                                 /* SET DEFAULT */          75645600
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       75649900
*    THEN                                                               75654200
*      XGAP=GAP(1);                          /* SET XVARIABLE */        75658500
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75662800
*  IF SKIPBUF='SKIPBUF'                      /* CHECK ENTRY */          75667100
*    THEN                                                               75671400
*      DO;                                                              75675700
*        ZMS=' 8, THE "SKIPBUF" KEY'||       /**KOPTP* MSG*/            75680000
*            ' MUST CONTAIN ONE'||                                      75684300
*            ' (OR MORE) ARGUMENT(S).';                                 75688600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75692900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75697200
*        ZMACRET=8;                          /* MACRO ERROR */          75701500
*      END;                                                             75705800
*  IF NUMBER(SKIPBUF)>1                      /* CHECK POSITIONALS */    75710100
*    THEN                                                               75714400
*      DO;                                                              75718700
*        ZMS=' 8, "SKIPBUF'||                /**KPOSP* MSG*/            75723000
*            SKIPBUF||                                                  75727300
*            '" "SKIPBUF"'||                                            75731600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              75735900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75740200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75744500
*        ZMACRET=8;                          /* MACRO ERROR */          75748800
*      END;                                                             75753100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75757400
*  XSKIPBUF='';                              /* RESET XVARIABLE */      75761700
*  IF TRANSLATE(SKIPBUF(1))                                             75766000
*              = 'NO'                        /* CHECK FOR KEYWORD */    75770300
*    THEN                                                               75774600
*      XSKIPBUF = 'NO';                      /* SET XVARIABLE */        75778900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75783200
*  IF TRANSLATE(SKIPBUF(1))                                             75787500
*              = 'YES'                       /* CHECK FOR KEYWORD */    75791800
*    THEN                                                               75796100
*      XSKIPBUF = 'YES';                     /* SET XVARIABLE */        75800400
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75804700
*  ZXSKIPBUF='INPUT';                        /* SET IN/OUTPUT */        75809000
*  IF XSKIPBUF=''                            /* CHECK FOR KEYWORD */    75813300
*    THEN                                                               75817600
*      DO;                                   /* KEYWORD NOT ENTERED */  75821900
*        XSKIPBUF='NO';                      /* SET DEFAULT */          75826200
*        IF SKIPBUF(1)^=''                                              75830500
*          THEN                                                         75834800
*            DO;                                                        75839100
*              ZXSKIPBUF='';                 /* RESET IN/OUTPUT */      75843400
*              ZMS=' 8, "SKIPBUF'||          /**KUKWP* MSG*/            75847700
*                  SKIPBUF||'"'||                                       75852000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              75856300
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    75860600
*                  ' "NO"'||                 /* VALID KEYWORD */        75864900
*                  ' OR "YES".';             /* VALID KEYWORD */        75869200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           75873500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          75877800
*              ZMACRET=8;                    /* MACRO ERROR */          75882100
*            END;                                                       75886400
*      END;                                                             75890700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 75895000
*  IF THREAD='THREAD' | THREAD='()'          /*CHECK ENTRY*/            75899300
*    THEN                                                               75903600
*      DO;                                                              75907900
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            75912200
*            ' MUST CONTAIN ONE'||                                      75916500
*            ' (OR MORE) ARGUMENT(S).';                                 75920800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75925100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75929400
*        ZMACRET=8;                          /* MACRO ERROR */          75933700
*      END;                                                             75938000
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    75942300
*    THEN                                                               75946600
*      DO;                                                              75950900
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            75955200
*            THREAD||                                                   75959500
*            '" "THREAD"'||                                             75963800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              75968100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 75972400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75976700
*        ZMACRET=8;                          /* MACRO ERROR */          75981000
*      END;                                                             75985300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 75989600
*  ZXTHREAD='INPUT';                         /* SET IN/OUTPUT */        75993900
*  XTHREAD='0';                              /* SET DEFAULT */          75998200
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       76002500
*    THEN                                                               76006800
*      XTHREAD=THREAD(1);                    /* SET XVARIABLE */        76011100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 76015400
*  IF UTILRTN='UTILRTN' | UTILRTN='()'       /*CHECK ENTRY*/            76019700
*    THEN                                                               76024000
*      DO;                                                              76028300
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            76032600
*            ' MUST CONTAIN ONE'||                                      76036900
*            ' (OR MORE) ARGUMENT(S).';                                 76041200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 76045500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76049800
*        ZMACRET=8;                          /* MACRO ERROR */          76054100
*      END;                                                             76058400
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    76062700
*    THEN                                                               76067000
*      DO;                                                              76071300
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            76075600
*            UTILRTN||                                                  76079900
*            '" "UTILRTN"'||                                            76084200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              76088500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 76092800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76097100
*        ZMACRET=8;                          /* MACRO ERROR */          76101400
*      END;                                                             76105700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 76110000
*  ZXUTILRTN='INPUT';                        /* SET IN/OUTPUT */        76114300
*  XUTILRTN='0';                             /* SET DEFAULT */          76118600
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       76122900
*    THEN                                                               76127200
*      XUTILRTN=UTILRTN(1);                  /* SET XVARIABLE */        76131500
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 76135800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     76140100
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 76144400
*  IF TRANSLATE(REQUEST(1))                                             76148700
*              = 'GET_BUFFER'                /* CHECK FOR KEYWORD */    76153000
*    THEN                                                               76157300
*      DO;                                                              76161600
*        XREQUEST='GET_BUFFER';              /* SET XVARIABLE */        76165900
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    76170200
*          THEN                                                         76174500
*            DO;                                                        76178800
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            76183100
*                  REQUEST||                                            76187400
*                  '" "REQUEST"'||                                      76191700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        76196000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           76200300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          76204600
*              ZMACRET=8;                    /* MACRO ERROR */          76208900
*            END;                                                       76213200
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 76217500
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 76221800
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        76226100
*          THEN                                                         76230400
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   76234700
*        IF PAD^=''                          /* CHECK FOR KEY */        76239000
*          THEN                                                         76243300
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   76247600
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        76251900
*          THEN                                                         76256200
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   76260500
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        76264800
*          THEN                                                         76269100
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   76273400
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        76277700
*          THEN                                                         76282000
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   76286300
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        76290600
*          THEN                                                         76294900
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   76299200
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        76303500
*          THEN                                                         76307800
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   76312100
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        76316400
*          THEN                                                         76320700
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   76325000
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        76329300
*          THEN                                                         76333600
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   76337900
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        76342200
*          THEN                                                         76346500
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   76350800
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        76355100
*          THEN                                                         76359400
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   76363700
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        76368000
*          THEN                                                         76372300
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   76376600
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        76380900
*          THEN                                                         76385200
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   76389500
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        76393800
*          THEN                                                         76398100
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   76402400
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        76406700
*          THEN                                                         76411000
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   76415300
*        IF INITBUF^=''                      /* CHECK FOR KEY */        76419600
*          THEN                                                         76423900
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   76428200
*        IF MINFREE^=''                      /* CHECK FOR KEY */        76432500
*          THEN                                                         76436800
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   76441100
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        76445400
*          THEN                                                         76449700
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   76454000
*        IF STATAREA^=''                     /* CHECK FOR KEY */        76458300
*          THEN                                                         76462600
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   76466900
*        IF FREETO^=''                       /* CHECK FOR KEY */        76471200
*          THEN                                                         76475500
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   76479800
*        IF ZCVAL^=''                                                   76484100
*          THEN                                                         76488400
*            DO;                             /* INCORRECT KEYS USED */  76492700
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            76497000
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            76501300
*                  REQUEST||'"'||                                       76505600
*                  ' DOES NOT ALLOW THE USE OF THE'||                   76509900
*                  ' FOLLOWING KEY(S) "'||                              76514200
*                  ZCVAL||'".';                                         76518500
*              ANS MSG('?IVTCSM ---> '||ZMS);                           76522800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          76527100
*              ZMACRET=8;                    /* MACRO ERROR */          76531400
*            END;                                                       76535700
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 76540000
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    76544300
*    THEN                                                               76548600
*      DO;                                                              76552900
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            76557200
*            BUFLIST||                                                  76561500
*            '" "BUFLIST"'||                                            76565800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              76570100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 76574400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76578700
*        ZMACRET=8;                          /* MACRO ERROR */          76583000
*      END;                                                             76587300
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 76591600
*  XBUFLIST=BUFLIST(1);                      /* SET XVARIABLE */        76595900
*  IF BUFLIST(1)=''                          /* CHECK FOR NULL */       76600200
*   THEN                                                                76604500
*    DO;                                     /* KEY IS REQUIRED */      76608800
*        ZXBUFLIST='';                       /* RESET IN/OUTPUT */      76613100
*        ZMS=' 8,  '||                                                  76617400
*            ' "BUFLIST" KEY AND ITS ARGUMENT'||                        76621700
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            76626000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 76630300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76634600
*        ZMACRET=8;                          /* MACRO ERROR */          76638900
*    END;                                                               76643200
*  ELSE                                                                 76647500
*    ZXBUFLIST='INPUT';                      /* SET IN/OUTPUT */        76651800
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 76656100
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    76660400
*    THEN                                                               76664700
*      DO;                                                              76669000
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            76673300
*            BUFNUM||                                                   76677600
*            '" "BUFNUM"'||                                             76681900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              76686200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 76690500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76694800
*        ZMACRET=8;                          /* MACRO ERROR */          76699100
*      END;                                                             76703400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 76707700
*  XBUFNUM=BUFNUM(1);                        /* SET XVARIABLE */        76712000
*  IF BUFNUM(1)=''                           /* CHECK FOR NULL */       76716300
*   THEN                                                                76720600
*    DO;                                     /* KEY IS REQUIRED */      76724900
*        ZXBUFNUM='';                        /* RESET IN/OUTPUT */      76729200
*        ZMS=' 8,  '||                                                  76733500
*            ' "BUFNUM" KEY AND ITS ARGUMENT'||                         76737800
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            76742100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 76746400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76750700
*        ZMACRET=8;                          /* MACRO ERROR */          76755000
*    END;                                                               76759300
*  ELSE                                                                 76763600
*    ZXBUFNUM='INPUT';                       /* SET IN/OUTPUT */        76767900
*/*PG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76772200
*  IF NUMBER(BUFTYPE)>1                      /* CHECK POSITIONALS */    76776500
*    THEN                                                               76780800
*      DO;                                                              76785100
*        ZMS=' 8, "BUFTYPE'||                /**KPOSP* MSG*/            76789400
*            BUFTYPE||                                                  76793700
*            '" "BUFTYPE"'||                                            76798000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              76802300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 76806600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76810900
*        ZMACRET=8;                          /* MACRO ERROR */          76815200
*      END;                                                             76819500
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76823800
*  XBUFTYPE='';                              /* RESET XVARIABLE */      76828100
*  IF TRANSLATE(BUFTYPE(1))                                             76832400
*              = 'PAGEELIG'                  /* CHECK FOR KEYWORD */    76836700
*    THEN                                                               76841000
*      XBUFTYPE = 'PAGEELIG';                /* SET XVARIABLE */        76845300
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76849600
*  IF TRANSLATE(BUFTYPE(1))                                             76853900
*              = 'PAGEABLE'                  /* CHECK FOR KEYWORD */    76858200
*    THEN                                                               76862500
*      XBUFTYPE = 'PAGEABLE';                /* SET XVARIABLE */        76866800
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76871100
*  IF TRANSLATE(BUFTYPE(1))                                             76875400
*              = 'FIXED'                     /* CHECK FOR KEYWORD */    76879700
*    THEN                                                               76884000
*      XBUFTYPE = 'FIXED';                   /* SET XVARIABLE */        76888300
*/*PG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76892600
*  ZXBUFTYPE='INPUT';                        /* SET IN/OUTPUT */        76896900
*  IF XBUFTYPE=''                            /* CHECK FOR KEYWORD */    76901200
*    THEN                                                               76905500
*      DO;                                   /* KEYWORD NOT ENTERED */  76909800
*        XBUFTYPE='PAGEELIG';                /* SET DEFAULT */          76914100
*        IF BUFTYPE(1)^=''                                              76918400
*          THEN                                                         76922700
*            DO;                                                        76927000
*              ZXBUFTYPE='';                 /* RESET IN/OUTPUT */      76931300
*              ZMS=' 8, "BUFTYPE'||          /**KUKWP* MSG*/            76935600
*                  BUFTYPE||'"'||                                       76939900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              76944200
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    76948500
*                  ' "PAGEELIG",'||          /* VALID KEYWORD */        76952800
*                  ' "PAGEABLE",'||          /* VALID KEYWORD */        76957100
*                  ' OR "FIXED".';           /* VALID KEYWORD */        76961400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           76965700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          76970000
*              ZMACRET=8;                    /* MACRO ERROR */          76974300
*            END;                                                       76978600
*      END;                                                             76982900
*/*PG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76987200
*  IF BUFTYPE(1)=''                          /* CHECK FOR KEYWORD */    76991500
*    THEN                                                               76995800
*      DO;                                   /* KEYWORD NOT ENTERED */  77000100
*        ZXBUFTYPE='';                       /* RESET IN/OUTPUT */      77004400
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            77008700
*            ' "BUFTYPE" KEY AND ITS ARGUMENT'||                        77013000
*            ' ARE REQUIRED.'||                                         77017300
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          77021600
*            ' "PAGEELIG",'||                /* VALID KEYWORD */        77025900
*            ' "PAGEABLE",'||                /* VALID KEYWORD */        77030200
*            ' OR "FIXED".';                 /* VALID KEYWORD */        77034500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77038800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77043100
*        ZMACRET=8;                          /* MACRO ERROR */          77047400
*      END;                                                             77051700
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77056000
*  IF CLEAR='CLEAR'                          /* CHECK ENTRY */          77060300
*    THEN                                                               77064600
*      DO;                                                              77068900
*        ZMS=' 8, THE "CLEAR" KEY'||         /**KOPTP* MSG*/            77073200
*            ' MUST CONTAIN ONE'||                                      77077500
*            ' (OR MORE) ARGUMENT(S).';                                 77081800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77086100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77090400
*        ZMACRET=8;                          /* MACRO ERROR */          77094700
*      END;                                                             77099000
*  IF NUMBER(CLEAR)>1                        /* CHECK POSITIONALS */    77103300
*    THEN                                                               77107600
*      DO;                                                              77111900
*        ZMS=' 8, "CLEAR'||                  /**KPOSP* MSG*/            77116200
*            CLEAR||                                                    77120500
*            '" "CLEAR"'||                                              77124800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              77129100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77133400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77137700
*        ZMACRET=8;                          /* MACRO ERROR */          77142000
*      END;                                                             77146300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77150600
*  XCLEAR='';                                /* RESET XVARIABLE */      77154900
*  IF TRANSLATE(CLEAR(1))                                               77159200
*              = 'NO'                        /* CHECK FOR KEYWORD */    77163500
*    THEN                                                               77167800
*      XCLEAR = 'NO';                        /* SET XVARIABLE */        77172100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77176400
*  IF TRANSLATE(CLEAR(1))                                               77180700
*              = 'YES'                       /* CHECK FOR KEYWORD */    77185000
*    THEN                                                               77189300
*      XCLEAR = 'YES';                       /* SET XVARIABLE */        77193600
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77197900
*  ZXCLEAR='INPUT';                          /* SET IN/OUTPUT */        77202200
*  IF XCLEAR=''                              /* CHECK FOR KEYWORD */    77206500
*    THEN                                                               77210800
*      DO;                                   /* KEYWORD NOT ENTERED */  77215100
*        XCLEAR='NO';                        /* SET DEFAULT */          77219400
*        IF CLEAR(1)^=''                                                77223700
*          THEN                                                         77228000
*            DO;                                                        77232300
*              ZXCLEAR='';                   /* RESET IN/OUTPUT */      77236600
*              ZMS=' 8, "CLEAR'||            /**KUKWP* MSG*/            77240900
*                  CLEAR||'"'||                                         77245200
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              77249500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    77253800
*                  ' "NO"'||                 /* VALID KEYWORD */        77258100
*                  ' OR "YES".';             /* VALID KEYWORD */        77262400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           77266700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          77271000
*              ZMACRET=8;                    /* MACRO ERROR */          77275300
*            END;                                                       77279600
*      END;                                                             77283900
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77288200
*  IF CSMUSER='CSMUSER'                      /* CHECK ENTRY */          77292500
*    THEN                                                               77296800
*      DO;                                                              77301100
*        ZMS=' 8, THE "CSMUSER" KEY'||       /**KOPTP* MSG*/            77305400
*            ' MUST CONTAIN ONE'||                                      77309700
*            ' (OR MORE) ARGUMENT(S).';                                 77314000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77318300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77322600
*        ZMACRET=8;                          /* MACRO ERROR */          77326900
*      END;                                                             77331200
*  IF NUMBER(CSMUSER)>1                      /* CHECK POSITIONALS */    77335500
*    THEN                                                               77339800
*      DO;                                                              77344100
*        ZMS=' 8, "CSMUSER'||                /**KPOSP* MSG*/            77348400
*            CSMUSER||                                                  77352700
*            '" "CSMUSER"'||                                            77357000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              77361300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77365600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77369900
*        ZMACRET=8;                          /* MACRO ERROR */          77374200
*      END;                                                             77378500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77382800
*  XCSMUSER='';                              /* RESET XVARIABLE */      77387100
*  IF TRANSLATE(CSMUSER(1))                                             77391400
*              = 'NO'                        /* CHECK FOR KEYWORD */    77395700
*    THEN                                                               77400000
*      XCSMUSER = 'NO';                      /* SET XVARIABLE */        77404300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77408600
*  IF TRANSLATE(CSMUSER(1))                                             77412900
*              = 'YES'                       /* CHECK FOR KEYWORD */    77417200
*    THEN                                                               77421500
*      XCSMUSER = 'YES';                     /* SET XVARIABLE */        77425800
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77430100
*  ZXCSMUSER='INPUT';                        /* SET IN/OUTPUT */        77434400
*  IF XCSMUSER=''                            /* CHECK FOR KEYWORD */    77438700
*    THEN                                                               77443000
*      DO;                                   /* KEYWORD NOT ENTERED */  77447300
*        XCSMUSER='NO';                      /* SET DEFAULT */          77451600
*        IF CSMUSER(1)^=''                                              77455900
*          THEN                                                         77460200
*            DO;                                                        77464500
*              ZXCSMUSER='';                 /* RESET IN/OUTPUT */      77468800
*              ZMS=' 8, "CSMUSER'||          /**KUKWP* MSG*/            77473100
*                  CSMUSER||'"'||                                       77477400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              77481700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    77486000
*                  ' "NO"'||                 /* VALID KEYWORD */        77490300
*                  ' OR "YES".';             /* VALID KEYWORD */        77494600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           77498900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          77503200
*              ZMACRET=8;                    /* MACRO ERROR */          77507500
*            END;                                                       77511800
*      END;                                                             77516100
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 77520400
*  IF XMF^='M'                               /* BYPASS IF MF=M */       77524700
*    THEN                                                               77529000
*      DO;                                                              77533300
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 77537600
*  IF ERRBFLST='ERRBFLST' | ERRBFLST='()'    /*CHECK ENTRY*/            77541900
*    THEN                                                               77546200
*      DO;                                                              77550500
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            77554800
*            ' MUST CONTAIN ONE'||                                      77559100
*            ' (OR MORE) ARGUMENT(S).';                                 77563400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77567700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77572000
*        ZMACRET=8;                          /* MACRO ERROR */          77576300
*      END;                                                             77580600
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    77584900
*    THEN                                                               77589200
*      DO;                                                              77593500
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            77597800
*            ERRBFLST||                                                 77602100
*            '" "ERRBFLST"'||                                           77606400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              77610700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77615000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77619300
*        ZMACRET=8;                          /* MACRO ERROR */          77623600
*      END;                                                             77627900
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 77632200
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       77636500
*    THEN                                                               77640800
*      DO;                                                              77645100
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        77649400
*        ZXERRBFLST='OUTPUT';                /* SET OUTPUT */           77653700
*      END;                                                             77658000
*  ELSE                                                                 77662300
*    IF ZXERRBFLST^=''                                                  77666600
*      THEN                                                             77670900
*        ZXERRBFLST='';                      /* RESET OUTPUT */         77675200
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 77679500
*      END;  /**** END OF BYPASS CHECK */                               77683800
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 77688100
*  IF FREERTN='FREERTN' | FREERTN='()'       /*CHECK ENTRY*/            77692400
*    THEN                                                               77696700
*      DO;                                                              77701000
*        ZMS=' 8, THE "FREERTN" KEY'||       /**KOPTP* MSG*/            77705300
*            ' MUST CONTAIN ONE'||                                      77709600
*            ' (OR MORE) ARGUMENT(S).';                                 77713900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77718200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77722500
*        ZMACRET=8;                          /* MACRO ERROR */          77726800
*      END;                                                             77731100
*  IF NUMBER(FREERTN)>1                      /* CHECK POSITIONALS */    77735400
*    THEN                                                               77739700
*      DO;                                                              77744000
*        ZMS=' 8, "FREERTN'||                /**KPOSP* MSG*/            77748300
*            FREERTN||                                                  77752600
*            '" "FREERTN"'||                                            77756900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              77761200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77765500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77769800
*        ZMACRET=8;                          /* MACRO ERROR */          77774100
*      END;                                                             77778400
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 77782700
*  ZXFREERTN='INPUT';                        /* SET IN/OUTPUT */        77787000
*  XFREERTN='CSM';                           /* SET DEFAULT */          77791300
*  IF FREERTN(1)^=''                         /* CHECK FOR NULL */       77795600
*    THEN                                                               77799900
*      XFREERTN=FREERTN(1);                  /* SET XVARIABLE */        77804200
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 77808500
*  IF GAP='GAP' | GAP='()'                   /*CHECK ENTRY*/            77812800
*    THEN                                                               77817100
*      DO;                                                              77821400
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            77825700
*            ' MUST CONTAIN ONE'||                                      77830000
*            ' (OR MORE) ARGUMENT(S).';                                 77834300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77838600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77842900
*        ZMACRET=8;                          /* MACRO ERROR */          77847200
*      END;                                                             77851500
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    77855800
*    THEN                                                               77860100
*      DO;                                                              77864400
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            77868700
*            GAP||                                                      77873000
*            '" "GAP"'||                                                77877300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              77881600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77885900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77890200
*        ZMACRET=8;                          /* MACRO ERROR */          77894500
*      END;                                                             77898800
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 77903100
*  ZXGAP='INPUT';                            /* SET IN/OUTPUT */        77907400
*  XGAP='0';                                 /* SET DEFAULT */          77911700
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       77916000
*    THEN                                                               77920300
*      XGAP=GAP(1);                          /* SET XVARIABLE */        77924600
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 77928900
*  IF OWNERID='OWNERID' | OWNERID='()'       /*CHECK ENTRY*/            77933200
*    THEN                                                               77937500
*      DO;                                                              77941800
*        ZMS=' 8, THE "OWNERID" KEY'||       /**KOPTP* MSG*/            77946100
*            ' MUST CONTAIN ONE'||                                      77950400
*            ' (OR MORE) ARGUMENT(S).';                                 77954700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 77959000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                77963300
*        ZMACRET=8;                          /* MACRO ERROR */          77967600
*      END;                                                             77971900
*  IF NUMBER(OWNERID)>1                      /* CHECK POSITIONALS */    77976200
*    THEN                                                               77980500
*      DO;                                                              77984800
*        ZMS=' 8, "OWNERID'||                /**KPOSP* MSG*/            77989100
*            OWNERID||                                                  77993400
*            '" "OWNERID"'||                                            77997700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              78002000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78006300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78010600
*        ZMACRET=8;                          /* MACRO ERROR */          78014900
*      END;                                                             78019200
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 78023500
*  ZXOWNERID='INPUT';                        /* SET IN/OUTPUT */        78027800
*  XOWNERID='0';                             /* SET DEFAULT */          78032100
*  IF OWNERID(1)^=''                         /* CHECK FOR NULL */       78036400
*    THEN                                                               78040700
*      XOWNERID=OWNERID(1);                  /* SET XVARIABLE */        78045000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 78049300
*  IF NUMBER(POOLTOKN)>1                     /* CHECK POSITIONALS */    78053600
*    THEN                                                               78057900
*      DO;                                                              78062200
*        ZMS=' 8, "POOLTOKN'||               /**KPOSP* MSG*/            78066500
*            POOLTOKN||                                                 78070800
*            '" "POOLTOKN"'||                                           78075100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              78079400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78083700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78088000
*        ZMACRET=8;                          /* MACRO ERROR */          78092300
*      END;                                                             78096600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 78100900
*  XPOOLTOKN=POOLTOKN(1);                    /* SET XVARIABLE */        78105200
*  IF POOLTOKN(1)=''                         /* CHECK FOR NULL */       78109500
*   THEN                                                                78113800
*    DO;                                     /* KEY IS REQUIRED */      78118100
*        ZXPOOLTOKN='';                      /* RESET IN/OUTPUT */      78122400
*        ZMS=' 8,  '||                                                  78126700
*            ' "POOLTOKN" KEY AND ITS ARGUMENT'||                       78131000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            78135300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78139600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78143900
*        ZMACRET=8;                          /* MACRO ERROR */          78148200
*    END;                                                               78152500
*  ELSE                                                                 78156800
*    ZXPOOLTOKN='INPUT';                     /* SET IN/OUTPUT */        78161100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 78165400
*  IF TASKID='TASKID' | TASKID='()'          /*CHECK ENTRY*/            78169700
*    THEN                                                               78174000
*      DO;                                                              78178300
*        ZMS=' 8, THE "TASKID" KEY'||        /**KOPTP* MSG*/            78182600
*            ' MUST CONTAIN ONE'||                                      78186900
*            ' (OR MORE) ARGUMENT(S).';                                 78191200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78195500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78199800
*        ZMACRET=8;                          /* MACRO ERROR */          78204100
*      END;                                                             78208400
*  IF NUMBER(TASKID)>1                       /* CHECK POSITIONALS */    78212700
*    THEN                                                               78217000
*      DO;                                                              78221300
*        ZMS=' 8, "TASKID'||                 /**KPOSP* MSG*/            78225600
*            TASKID||                                                   78229900
*            '" "TASKID"'||                                             78234200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              78238500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78242800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78247100
*        ZMACRET=8;                          /* MACRO ERROR */          78251400
*      END;                                                             78255700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 78260000
*  ZXTASKID='INPUT';                         /* SET IN/OUTPUT */        78264300
*  XTASKID='0';                              /* SET DEFAULT */          78268600
*  IF TASKID(1)^=''                          /* CHECK FOR NULL */       78272900
*    THEN                                                               78277200
*      XTASKID=TASKID(1);                    /* SET XVARIABLE */        78281500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 78285800
*  IF THREAD='THREAD' | THREAD='()'          /*CHECK ENTRY*/            78290100
*    THEN                                                               78294400
*      DO;                                                              78298700
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            78303000
*            ' MUST CONTAIN ONE'||                                      78307300
*            ' (OR MORE) ARGUMENT(S).';                                 78311600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78315900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78320200
*        ZMACRET=8;                          /* MACRO ERROR */          78324500
*      END;                                                             78328800
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    78333100
*    THEN                                                               78337400
*      DO;                                                              78341700
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            78346000
*            THREAD||                                                   78350300
*            '" "THREAD"'||                                             78354600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              78358900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78363200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78367500
*        ZMACRET=8;                          /* MACRO ERROR */          78371800
*      END;                                                             78376100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 78380400
*  ZXTHREAD='INPUT';                         /* SET IN/OUTPUT */        78384700
*  XTHREAD='0';                              /* SET DEFAULT */          78389000
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       78393300
*    THEN                                                               78397600
*      XTHREAD=THREAD(1);                    /* SET XVARIABLE */        78401900
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 78406200
*  IF UTILRTN='UTILRTN' | UTILRTN='()'       /*CHECK ENTRY*/            78410500
*    THEN                                                               78414800
*      DO;                                                              78419100
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            78423400
*            ' MUST CONTAIN ONE'||                                      78427700
*            ' (OR MORE) ARGUMENT(S).';                                 78432000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78436300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78440600
*        ZMACRET=8;                          /* MACRO ERROR */          78444900
*      END;                                                             78449200
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    78453500
*    THEN                                                               78457800
*      DO;                                                              78462100
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            78466400
*            UTILRTN||                                                  78470700
*            '" "UTILRTN"'||                                            78475000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              78479300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78483600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78487900
*        ZMACRET=8;                          /* MACRO ERROR */          78492200
*      END;                                                             78496500
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 78500800
*  ZXUTILRTN='INPUT';                        /* SET IN/OUTPUT */        78505100
*  XUTILRTN='0';                             /* SET DEFAULT */          78509400
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       78513700
*    THEN                                                               78518000
*      XUTILRTN=UTILRTN(1);                  /* SET XVARIABLE */        78522300
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78526600
*  IF WAIT='WAIT'                            /* CHECK ENTRY */          78530900
*    THEN                                                               78535200
*      DO;                                                              78539500
*        ZMS=' 8, THE "WAIT" KEY'||          /**KOPTP* MSG*/            78543800
*            ' MUST CONTAIN ONE'||                                      78548100
*            ' (OR MORE) ARGUMENT(S).';                                 78552400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78556700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78561000
*        ZMACRET=8;                          /* MACRO ERROR */          78565300
*      END;                                                             78569600
*  IF NUMBER(WAIT)>1                         /* CHECK POSITIONALS */    78573900
*    THEN                                                               78578200
*      DO;                                                              78582500
*        ZMS=' 8, "WAIT'||                   /**KPOSP* MSG*/            78586800
*            WAIT||                                                     78591100
*            '" "WAIT"'||                                               78595400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              78599700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 78604000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78608300
*        ZMACRET=8;                          /* MACRO ERROR */          78612600
*      END;                                                             78616900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78621200
*  XWAIT='';                                 /* RESET XVARIABLE */      78625500
*  IF TRANSLATE(WAIT(1))                                                78629800
*              = 'NO'                        /* CHECK FOR KEYWORD */    78634100
*    THEN                                                               78638400
*      XWAIT = 'NO';                         /* SET XVARIABLE */        78642700
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78647000
*  IF TRANSLATE(WAIT(1))                                                78651300
*              = 'YES'                       /* CHECK FOR KEYWORD */    78655600
*    THEN                                                               78659900
*      XWAIT = 'YES';                        /* SET XVARIABLE */        78664200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78668500
*  IF TRANSLATE(WAIT(1))                                                78672800
*              = 'EXPAND'                    /* CHECK FOR KEYWORD */    78677100
*    THEN                                                               78681400
*      XWAIT = 'EXPAND';                     /* SET XVARIABLE */        78685700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78690000
*  ZXWAIT='INPUT';                           /* SET IN/OUTPUT */        78694300
*  IF XWAIT=''                               /* CHECK FOR KEYWORD */    78698600
*    THEN                                                               78702900
*      DO;                                   /* KEYWORD NOT ENTERED */  78707200
*        XWAIT='NO';                         /* SET DEFAULT */          78711500
*        IF WAIT(1)^=''                                                 78715800
*          THEN                                                         78720100
*            DO;                                                        78724400
*              ZXWAIT='';                    /* RESET IN/OUTPUT */      78728700
*              ZMS=' 8, "WAIT'||             /**KUKWP* MSG*/            78733000
*                  WAIT||'"'||                                          78737300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              78741600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    78745900
*                  ' "NO",'||                /* VALID KEYWORD */        78750200
*                  ' "YES",'||               /* VALID KEYWORD */        78754500
*                  ' OR "EXPAND".';          /* VALID KEYWORD */        78758800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           78763100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          78767400
*              ZMACRET=8;                    /* MACRO ERROR */          78771700
*            END;                                                       78776000
*      END;                                                             78780300
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 78784600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     78788900
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 78793200
*  IF TRANSLATE(REQUEST(1))                                             78797500
*              = 'PAGE_BUFFER'               /* CHECK FOR KEYWORD */    78801800
*    THEN                                                               78806100
*      DO;                                                              78810400
*        XREQUEST='PAGE_BUFFER';             /* SET XVARIABLE */        78814700
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    78819000
*          THEN                                                         78823300
*            DO;                                                        78827600
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            78831900
*                  REQUEST||                                            78836200
*                  '" "REQUEST"'||                                      78840500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        78844800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           78849100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          78853400
*              ZMACRET=8;                    /* MACRO ERROR */          78857700
*            END;                                                       78862000
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 78866300
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 78870600
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        78874900
*          THEN                                                         78879200
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   78883500
*        IF OWNERID^=''                      /* CHECK FOR KEY */        78887800
*          THEN                                                         78892100
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   78896400
*        IF TASKID^=''                       /* CHECK FOR KEY */        78900700
*          THEN                                                         78905000
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   78909300
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        78913600
*          THEN                                                         78917900
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   78922200
*        IF PAD^=''                          /* CHECK FOR KEY */        78926500
*          THEN                                                         78930800
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   78935100
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        78939400
*          THEN                                                         78943700
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   78948000
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        78952300
*          THEN                                                         78956600
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   78960900
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        78965200
*          THEN                                                         78969500
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   78973800
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        78978100
*          THEN                                                         78982400
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   78986700
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        78991000
*          THEN                                                         78995300
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   78999600
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        79003900
*          THEN                                                         79008200
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   79012500
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        79016800
*          THEN                                                         79021100
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   79025400
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        79029700
*          THEN                                                         79034000
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   79038300
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        79042600
*          THEN                                                         79046900
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   79051200
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        79055500
*          THEN                                                         79059800
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   79064100
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        79068400
*          THEN                                                         79072700
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   79077000
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        79081300
*          THEN                                                         79085600
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   79089900
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        79094200
*          THEN                                                         79098500
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   79102800
*        IF INITBUF^=''                      /* CHECK FOR KEY */        79107100
*          THEN                                                         79111400
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   79115700
*        IF MINFREE^=''                      /* CHECK FOR KEY */        79120000
*          THEN                                                         79124300
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   79128600
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        79132900
*          THEN                                                         79137200
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   79141500
*        IF STATAREA^=''                     /* CHECK FOR KEY */        79145800
*          THEN                                                         79150100
*            ZCVAL=ZCVAL||',STATAREA';       /* INCORRECT KEY USED */   79154400
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        79158700
*          THEN                                                         79163000
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   79167300
*        IF WAIT^=''                         /* CHECK FOR KEY */        79171600
*          THEN                                                         79175900
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   79180200
*        IF CLEAR^=''                        /* CHECK FOR KEY */        79184500
*          THEN                                                         79188800
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   79193100
*        IF FREETO^=''                       /* CHECK FOR KEY */        79197400
*          THEN                                                         79201700
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   79206000
*        IF FREERTN^=''                      /* CHECK FOR KEY */        79210300
*          THEN                                                         79214600
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   79218900
*        IF ZCVAL^=''                                                   79223200
*          THEN                                                         79227500
*            DO;                             /* INCORRECT KEYS USED */  79231800
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            79236100
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            79240400
*                  REQUEST||'"'||                                       79244700
*                  ' DOES NOT ALLOW THE USE OF THE'||                   79249000
*                  ' FOLLOWING KEY(S) "'||                              79253300
*                  ZCVAL||'".';                                         79257600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           79261900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          79266200
*              ZMACRET=8;                    /* MACRO ERROR */          79270500
*            END;                                                       79274800
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 79279100
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    79283400
*    THEN                                                               79287700
*      DO;                                                              79292000
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            79296300
*            BUFLIST||                                                  79300600
*            '" "BUFLIST"'||                                            79304900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              79309200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79313500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79317800
*        ZMACRET=8;                          /* MACRO ERROR */          79322100
*      END;                                                             79326400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 79330700
*  XBUFLIST=BUFLIST(1);                      /* SET XVARIABLE */        79335000
*  IF BUFLIST(1)=''                          /* CHECK FOR NULL */       79339300
*   THEN                                                                79343600
*    DO;                                     /* KEY IS REQUIRED */      79347900
*        ZXBUFLIST='';                       /* RESET IN/OUTPUT */      79352200
*        ZMS=' 8,  '||                                                  79356500
*            ' "BUFLIST" KEY AND ITS ARGUMENT'||                        79360800
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            79365100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79369400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79373700
*        ZMACRET=8;                          /* MACRO ERROR */          79378000
*    END;                                                               79382300
*  ELSE                                                                 79386600
*    ZXBUFLIST='INPUT';                      /* SET IN/OUTPUT */        79390900
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 79395200
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    79399500
*    THEN                                                               79403800
*      DO;                                                              79408100
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            79412400
*            BUFNUM||                                                   79416700
*            '" "BUFNUM"'||                                             79421000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              79425300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79429600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79433900
*        ZMACRET=8;                          /* MACRO ERROR */          79438200
*      END;                                                             79442500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 79446800
*  XBUFNUM=BUFNUM(1);                        /* SET XVARIABLE */        79451100
*  IF BUFNUM(1)=''                           /* CHECK FOR NULL */       79455400
*   THEN                                                                79459700
*    DO;                                     /* KEY IS REQUIRED */      79464000
*        ZXBUFNUM='';                        /* RESET IN/OUTPUT */      79468300
*        ZMS=' 8,  '||                                                  79472600
*            ' "BUFNUM" KEY AND ITS ARGUMENT'||                         79476900
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            79481200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79485500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79489800
*        ZMACRET=8;                          /* MACRO ERROR */          79494100
*    END;                                                               79498400
*  ELSE                                                                 79502700
*    ZXBUFNUM='INPUT';                       /* SET IN/OUTPUT */        79507000
*/*PG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 79511300
*  IF NUMBER(BUFTYPE)>1                      /* CHECK POSITIONALS */    79515600
*    THEN                                                               79519900
*      DO;                                                              79524200
*        ZMS=' 8, "BUFTYPE'||                /**KPOSP* MSG*/            79528500
*            BUFTYPE||                                                  79532800
*            '" "BUFTYPE"'||                                            79537100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              79541400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79545700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79550000
*        ZMACRET=8;                          /* MACRO ERROR */          79554300
*      END;                                                             79558600
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 79562900
*  XBUFTYPE='';                              /* RESET XVARIABLE */      79567200
*  IF TRANSLATE(BUFTYPE(1))                                             79571500
*              = 'PAGEELIG'                  /* CHECK FOR KEYWORD */    79575800
*    THEN                                                               79580100
*      XBUFTYPE = 'PAGEELIG';                /* SET XVARIABLE */        79584400
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 79588700
*  IF TRANSLATE(BUFTYPE(1))                                             79593000
*              = 'PAGEABLE'                  /* CHECK FOR KEYWORD */    79597300
*    THEN                                                               79601600
*      XBUFTYPE = 'PAGEABLE';                /* SET XVARIABLE */        79605900
*/*PG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 79610200
*  ZXBUFTYPE='INPUT';                        /* SET IN/OUTPUT */        79614500
*  IF XBUFTYPE=''                            /* CHECK FOR KEYWORD */    79618800
*    THEN                                                               79623100
*      DO;                                   /* KEYWORD NOT ENTERED */  79627400
*        XBUFTYPE='PAGEELIG';                /* SET DEFAULT */          79631700
*        IF BUFTYPE(1)^=''                                              79636000
*          THEN                                                         79640300
*            DO;                                                        79644600
*              ZXBUFTYPE='';                 /* RESET IN/OUTPUT */      79648900
*              ZMS=' 8, "BUFTYPE'||          /**KUKWP* MSG*/            79653200
*                  BUFTYPE||'"'||                                       79657500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              79661800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    79666100
*                  ' "PAGEELIG"'||           /* VALID KEYWORD */        79670400
*                  ' OR "PAGEABLE".';        /* VALID KEYWORD */        79674700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           79679000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          79683300
*              ZMACRET=8;                    /* MACRO ERROR */          79687600
*            END;                                                       79691900
*      END;                                                             79696200
*/*PG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 79700500
*  IF BUFTYPE(1)=''                          /* CHECK FOR KEYWORD */    79704800
*    THEN                                                               79709100
*      DO;                                   /* KEYWORD NOT ENTERED */  79713400
*        ZXBUFTYPE='';                       /* RESET IN/OUTPUT */      79717700
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            79722000
*            ' "BUFTYPE" KEY AND ITS ARGUMENT'||                        79726300
*            ' ARE REQUIRED.'||                                         79730600
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          79734900
*            ' "PAGEELIG"'||                 /* VALID KEYWORD */        79739200
*            ' OR "PAGEABLE".';              /* VALID KEYWORD */        79743500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79747800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79752100
*        ZMACRET=8;                          /* MACRO ERROR */          79756400
*      END;                                                             79760700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 79765000
*  IF GAP='GAP' | GAP='()'                   /*CHECK ENTRY*/            79769300
*    THEN                                                               79773600
*      DO;                                                              79777900
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            79782200
*            ' MUST CONTAIN ONE'||                                      79786500
*            ' (OR MORE) ARGUMENT(S).';                                 79790800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79795100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79799400
*        ZMACRET=8;                          /* MACRO ERROR */          79803700
*      END;                                                             79808000
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    79812300
*    THEN                                                               79816600
*      DO;                                                              79820900
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            79825200
*            GAP||                                                      79829500
*            '" "GAP"'||                                                79833800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              79838100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79842400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79846700
*        ZMACRET=8;                          /* MACRO ERROR */          79851000
*      END;                                                             79855300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 79859600
*  ZXGAP='INPUT';                            /* SET IN/OUTPUT */        79863900
*  XGAP='0';                                 /* SET DEFAULT */          79868200
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       79872500
*    THEN                                                               79876800
*      XGAP=GAP(1);                          /* SET XVARIABLE */        79881100
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 79885400
*  IF XMF^='M'                               /* BYPASS IF MF=M */       79889700
*    THEN                                                               79894000
*      DO;                                                              79898300
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 79902600
*  IF ERRBFLST='ERRBFLST' | ERRBFLST='()'    /*CHECK ENTRY*/            79906900
*    THEN                                                               79911200
*      DO;                                                              79915500
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            79919800
*            ' MUST CONTAIN ONE'||                                      79924100
*            ' (OR MORE) ARGUMENT(S).';                                 79928400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79932700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79937000
*        ZMACRET=8;                          /* MACRO ERROR */          79941300
*      END;                                                             79945600
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    79949900
*    THEN                                                               79954200
*      DO;                                                              79958500
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            79962800
*            ERRBFLST||                                                 79967100
*            '" "ERRBFLST"'||                                           79971400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              79975700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 79980000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79984300
*        ZMACRET=8;                          /* MACRO ERROR */          79988600
*      END;                                                             79992900
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 79997200
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       80001500
*    THEN                                                               80005800
*      DO;                                                              80010100
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        80014400
*        ZXERRBFLST='OUTPUT';                /* SET OUTPUT */           80018700
*      END;                                                             80023000
*  ELSE                                                                 80027300
*    IF ZXERRBFLST^=''                                                  80031600
*      THEN                                                             80035900
*        ZXERRBFLST='';                      /* RESET OUTPUT */         80040200
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 80044500
*      END;  /**** END OF BYPASS CHECK */                               80048800
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 80053100
*  IF THREAD='THREAD' | THREAD='()'          /*CHECK ENTRY*/            80057400
*    THEN                                                               80061700
*      DO;                                                              80066000
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            80070300
*            ' MUST CONTAIN ONE'||                                      80074600
*            ' (OR MORE) ARGUMENT(S).';                                 80078900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 80083200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                80087500
*        ZMACRET=8;                          /* MACRO ERROR */          80091800
*      END;                                                             80096100
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    80100400
*    THEN                                                               80104700
*      DO;                                                              80109000
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            80113300
*            THREAD||                                                   80117600
*            '" "THREAD"'||                                             80121900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              80126200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 80130500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                80134800
*        ZMACRET=8;                          /* MACRO ERROR */          80139100
*      END;                                                             80143400
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 80147700
*  ZXTHREAD='INPUT';                         /* SET IN/OUTPUT */        80152000
*  XTHREAD='0';                              /* SET DEFAULT */          80156300
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       80160600
*    THEN                                                               80164900
*      XTHREAD=THREAD(1);                    /* SET XVARIABLE */        80169200
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 80173500
*  IF UTILRTN='UTILRTN' | UTILRTN='()'       /*CHECK ENTRY*/            80177800
*    THEN                                                               80182100
*      DO;                                                              80186400
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            80190700
*            ' MUST CONTAIN ONE'||                                      80195000
*            ' (OR MORE) ARGUMENT(S).';                                 80199300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 80203600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                80207900
*        ZMACRET=8;                          /* MACRO ERROR */          80212200
*      END;                                                             80216500
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    80220800
*    THEN                                                               80225100
*      DO;                                                              80229400
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            80233700
*            UTILRTN||                                                  80238000
*            '" "UTILRTN"'||                                            80242300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              80246600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 80250900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                80255200
*        ZMACRET=8;                          /* MACRO ERROR */          80259500
*      END;                                                             80263800
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 80268100
*  ZXUTILRTN='INPUT';                        /* SET IN/OUTPUT */        80272400
*  XUTILRTN='0';                             /* SET DEFAULT */          80276700
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       80281000
*    THEN                                                               80285300
*      XUTILRTN=UTILRTN(1);                  /* SET XVARIABLE */        80289600
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 80293900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     80298200
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 80302500
*  IF TRANSLATE(REQUEST(1))                                             80306800
*              = 'RESOURCE_STATS'            /* CHECK FOR KEYWORD */    80311100
*    THEN                                                               80315400
*      DO;                                                              80319700
*        XREQUEST='RESOURCE_STATS';          /* SET XVARIABLE */        80324000
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    80328300
*          THEN                                                         80332600
*            DO;                                                        80336900
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            80341200
*                  REQUEST||                                            80345500
*                  '" "REQUEST"'||                                      80349800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        80354100
*              ANS MSG('?IVTCSM ---> '||ZMS);                           80358400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          80362700
*              ZMACRET=8;                    /* MACRO ERROR */          80367000
*            END;                                                       80371300
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 80375600
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 80379900
*        IF BUFLIST^=''                      /* CHECK FOR KEY */        80384200
*          THEN                                                         80388500
*            ZCVAL=ZCVAL||',BUFLIST';        /* INCORRECT KEY USED */   80392800
*        IF BUFNUM^=''                       /* CHECK FOR KEY */        80397100
*          THEN                                                         80401400
*            ZCVAL=ZCVAL||',BUFNUM';         /* INCORRECT KEY USED */   80405700
*        IF BUFTYPE^=''                      /* CHECK FOR KEY */        80410000
*          THEN                                                         80414300
*            ZCVAL=ZCVAL||',BUFTYPE';        /* INCORRECT KEY USED */   80418600
*        IF CSMUSER^=''                      /* CHECK FOR KEY */        80422900
*          THEN                                                         80427200
*            ZCVAL=ZCVAL||',CSMUSER';        /* INCORRECT KEY USED */   80431500
*        IF GAP^=''                          /* CHECK FOR KEY */        80435800
*          THEN                                                         80440100
*            ZCVAL=ZCVAL||',GAP';            /* INCORRECT KEY USED */   80444400
*        IF ERRBFLST^=''                     /* CHECK FOR KEY */        80448700
*          THEN                                                         80453000
*            ZCVAL=ZCVAL||',ERRBFLST';       /* INCORRECT KEY USED */   80457300
*        IF OWNERID^=''                      /* CHECK FOR KEY */        80461600
*          THEN                                                         80465900
*            ZCVAL=ZCVAL||',OWNERID';        /* INCORRECT KEY USED */   80470200
*        IF TASKID^=''                       /* CHECK FOR KEY */        80474500
*          THEN                                                         80478800
*            ZCVAL=ZCVAL||',TASKID';         /* INCORRECT KEY USED */   80483100
*        IF THREAD^=''                       /* CHECK FOR KEY */        80487400
*          THEN                                                         80491700
*            ZCVAL=ZCVAL||',THREAD';         /* INCORRECT KEY USED */   80496000
*        IF UTILRTN^=''                      /* CHECK FOR KEY */        80500300
*          THEN                                                         80504600
*            ZCVAL=ZCVAL||',UTILRTN';        /* INCORRECT KEY USED */   80508900
*        IF SKIPBUF^=''                      /* CHECK FOR KEY */        80513200
*          THEN                                                         80517500
*            ZCVAL=ZCVAL||',SKIPBUF';        /* INCORRECT KEY USED */   80521800
*        IF PAD^=''                          /* CHECK FOR KEY */        80526100
*          THEN                                                         80530400
*            ZCVAL=ZCVAL||',PAD';            /* INCORRECT KEY USED */   80534700
*        IF PADCHAR^=''                      /* CHECK FOR KEY */        80539000
*          THEN                                                         80543300
*            ZCVAL=ZCVAL||',PADCHAR';        /* INCORRECT KEY USED */   80547600
*        IF SRCERRL^=''                      /* CHECK FOR KEY */        80551900
*          THEN                                                         80556200
*            ZCVAL=ZCVAL||',SRCERRL';        /* INCORRECT KEY USED */   80560500
*        IF SRCGAP^=''                       /* CHECK FOR KEY */        80564800
*          THEN                                                         80569100
*            ZCVAL=ZCVAL||',SRCGAP';         /* INCORRECT KEY USED */   80573400
*        IF SRCLIST^=''                      /* CHECK FOR KEY */        80577700
*          THEN                                                         80582000
*            ZCVAL=ZCVAL||',SRCLIST';        /* INCORRECT KEY USED */   80586300
*        IF SRCNUM^=''                       /* CHECK FOR KEY */        80590600
*          THEN                                                         80594900
*            ZCVAL=ZCVAL||',SRCNUM';         /* INCORRECT KEY USED */   80599200
*        IF TARGERRL^=''                     /* CHECK FOR KEY */        80603500
*          THEN                                                         80607800
*            ZCVAL=ZCVAL||',TARGERRL';       /* INCORRECT KEY USED */   80612100
*        IF TARGGAP^=''                      /* CHECK FOR KEY */        80616400
*          THEN                                                         80620700
*            ZCVAL=ZCVAL||',TARGGAP';        /* INCORRECT KEY USED */   80625000
*        IF TARGLIST^=''                     /* CHECK FOR KEY */        80629300
*          THEN                                                         80633600
*            ZCVAL=ZCVAL||',TARGLIST';       /* INCORRECT KEY USED */   80637900
*        IF TARGNUM^=''                      /* CHECK FOR KEY */        80642200
*          THEN                                                         80646500
*            ZCVAL=ZCVAL||',TARGNUM';        /* INCORRECT KEY USED */   80650800
*        IF BUFSIZE^=''                      /* CHECK FOR KEY */        80655100
*          THEN                                                         80659400
*            ZCVAL=ZCVAL||',BUFSIZE';        /* INCORRECT KEY USED */   80663700
*        IF BUFSOURC^=''                     /* CHECK FOR KEY */        80668000
*          THEN                                                         80672300
*            ZCVAL=ZCVAL||',BUFSOURC';       /* INCORRECT KEY USED */   80676600
*        IF DS_INFO^=''                      /* CHECK FOR KEY */        80680900
*          THEN                                                         80685200
*            ZCVAL=ZCVAL||',DS_INFO';        /* INCORRECT KEY USED */   80689500
*        IF EXPBUF^=''                       /* CHECK FOR KEY */        80693800
*          THEN                                                         80698100
*            ZCVAL=ZCVAL||',EXPBUF';         /* INCORRECT KEY USED */   80702400
*        IF INITBUF^=''                      /* CHECK FOR KEY */        80706700
*          THEN                                                         80711000
*            ZCVAL=ZCVAL||',INITBUF';        /* INCORRECT KEY USED */   80715300
*        IF MINFREE^=''                      /* CHECK FOR KEY */        80719600
*          THEN                                                         80723900
*            ZCVAL=ZCVAL||',MINFREE';        /* INCORRECT KEY USED */   80728200
*        IF RETPTOKN^=''                     /* CHECK FOR KEY */        80732500
*          THEN                                                         80736800
*            ZCVAL=ZCVAL||',RETPTOKN';       /* INCORRECT KEY USED */   80741100
*        IF POOLTOKN^=''                     /* CHECK FOR KEY */        80745400
*          THEN                                                         80749700
*            ZCVAL=ZCVAL||',POOLTOKN';       /* INCORRECT KEY USED */   80754000
*        IF WAIT^=''                         /* CHECK FOR KEY */        80758300
*          THEN                                                         80762600
*            ZCVAL=ZCVAL||',WAIT';           /* INCORRECT KEY USED */   80766900
*        IF CLEAR^=''                        /* CHECK FOR KEY */        80771200
*          THEN                                                         80775500
*            ZCVAL=ZCVAL||',CLEAR';          /* INCORRECT KEY USED */   80779800
*        IF FREETO^=''                       /* CHECK FOR KEY */        80784100
*          THEN                                                         80788400
*            ZCVAL=ZCVAL||',FREETO';         /* INCORRECT KEY USED */   80792700
*        IF FREERTN^=''                      /* CHECK FOR KEY */        80797000
*          THEN                                                         80801300
*            ZCVAL=ZCVAL||',FREERTN';        /* INCORRECT KEY USED */   80805600
*        IF ZCVAL^=''                                                   80809900
*          THEN                                                         80814200
*            DO;                             /* INCORRECT KEYS USED */  80818500
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            80822800
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            80827100
*                  REQUEST||'"'||                                       80831400
*                  ' DOES NOT ALLOW THE USE OF THE'||                   80835700
*                  ' FOLLOWING KEY(S) "'||                              80840000
*                  ZCVAL||'".';                                         80844300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           80848600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          80852900
*              ZMACRET=8;                    /* MACRO ERROR */          80857200
*            END;                                                       80861500
*/*PG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START-----------*/ 80865800
*  IF XMF^='M'                               /* BYPASS IF MF=M */       80870100
*    THEN                                                               80874400
*      DO;                                                              80878700
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 80883000
*  IF STATAREA='STATAREA' | STATAREA='()'    /*CHECK ENTRY*/            80887300
*    THEN                                                               80891600
*      DO;                                                              80895900
*        ZMS=' 8, THE "STATAREA" KEY'||      /**KOPTP* MSG*/            80900200
*            ' MUST CONTAIN ONE'||                                      80904500
*            ' (OR MORE) ARGUMENT(S).';                                 80908800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 80913100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                80917400
*        ZMACRET=8;                          /* MACRO ERROR */          80921700
*      END;                                                             80926000
*  IF NUMBER(STATAREA)>1                     /* CHECK POSITIONALS */    80930300
*    THEN                                                               80934600
*      DO;                                                              80938900
*        ZMS=' 8, "STATAREA'||               /**KPOSP* MSG*/            80943200
*            STATAREA||                                                 80947500
*            '" "STATAREA"'||                                           80951800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              80956100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 80960400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                80964700
*        ZMACRET=8;                          /* MACRO ERROR */          80969000
*      END;                                                             80973300
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 80977600
*  IF STATAREA(1)^=''                        /* CHECK FOR NULL */       80981900
*    THEN                                                               80986200
*      DO;                                                              80990500
*        XSTATAREA=STATAREA(1);              /* SET XVARIABLE */        80994800
*        ZXSTATAREA='OUTPUT';                /* SET OUTPUT */           80999100
*      END;                                                             81003400
*  ELSE                                                                 81007700
*    IF ZXSTATAREA^=''                                                  81012000
*      THEN                                                             81016300
*        ZXSTATAREA='';                      /* RESET OUTPUT */         81020600
*/*PG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END-------------*/ 81024900
*      END;  /**** END OF BYPASS CHECK */                               81029200
*/*PG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 81033500
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     81037800
*/*PG.KKCTL06 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 81042100
*  IF REQUEST='REQUEST'                                                 81046400
*    | REQUEST='()'                          /*CHECK ENTRY*/            81050700
*     THEN                                                              81055000
*       DO;                                                             81059300
*              ZMS=' 8, THE "REQUEST" KEY'|| /**KOPTP* MSG*/            81063600
*                  ' MUST CONTAIN ONE'||                                81067900
*                  ' (OR MORE) ARGUMENT(S).';                           81072200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           81076500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          81080800
*              ZMACRET=8;                    /* MACRO ERROR */          81085100
*       END;                                                            81089400
*  ELSE                                                                 81093700
*    DO;                                                                81098000
*      ZXREQUEST='INPUT';                    /* SET IN/OUTPUT */        81102300
*      IF XREQUEST=''                        /* CHECK FOR KEYWORD */    81106600
*        THEN                                                           81110900
*          DO;                               /* KEYWORD NOT ENTERED */  81115200
*            XREQUEST='ASSIGN_BUFFER';       /* SET DEFAULT */          81119500
*            IF REQUEST(1)^=''               /* CHECK FOR KEYWORD */    81123800
*              THEN                                                     81128100
*                DO;                                                    81132400
*                  ZXREQUEST='';             /* RESET IN/OUTPUT */      81136700
*              ZMS=' 8, "REQUEST'||          /**KUKWP* MSG*/            81141000
*                  REQUEST||'"'||                                       81145300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              81149600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    81153900
*                  ' "ASSIGN_BUFFER",'||     /* VALID KEYWORD */        81158200
*                  ' "CHANGE_OWNER",'||      /* VALID KEYWORD */        81162500
*                  ' "COPY_DATA",'||         /* VALID KEYWORD */        81166800
*                  ' "CREATE_POOL",'||       /* VALID KEYWORD */        81171100
*                  ' "DELETE_POOL",'||       /* VALID KEYWORD */        81175400
*                  ' "DUMP_INFO",'||         /* VALID KEYWORD */        81179700
*                  ' "FIX_BUFFER",'||        /* VALID KEYWORD */        81184000
*                  ' "FREE_BUFFER",'||       /* VALID KEYWORD */        81188300
*                  ' "GET_BUFFER",'||        /* VALID KEYWORD */        81192600
*                  ' "PAGE_BUFFER",'||       /* VALID KEYWORD */        81196900
*                  ' OR "RESOURCE_STATS".';  /* VALID KEYWORD */        81201200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           81205500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          81209800
*              ZMACRET=8;                    /* MACRO ERROR */          81214100
*                END;                                                   81218400
*          END;                                                         81222700
*    END;                                                               81227000
*/*PG.KKCTL07 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 81231300
*  IF REQUEST(1)=''                          /* CHECK FOR KEYWORD */    81235600
*    THEN                                                               81239900
*      DO;                                                              81244200
*        ZXREQUEST='';                       /* RESET IN/OUTPUT */      81248500
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            81252800
*            ' "REQUEST" KEY AND ITS ARGUMENT'||                        81257100
*            ' ARE REQUIRED.'||                                         81261400
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          81265700
*            ' "ASSIGN_BUFFER",'||           /* VALID KEYWORD */        81270000
*            ' "CHANGE_OWNER",'||            /* VALID KEYWORD */        81274300
*            ' "COPY_DATA",'||               /* VALID KEYWORD */        81278600
*            ' "CREATE_POOL",'||             /* VALID KEYWORD */        81282900
*            ' "DELETE_POOL",'||             /* VALID KEYWORD */        81287200
*            ' "DUMP_INFO",'||               /* VALID KEYWORD */        81291500
*            ' "FIX_BUFFER",'||              /* VALID KEYWORD */        81295800
*            ' "FREE_BUFFER",'||             /* VALID KEYWORD */        81300100
*            ' "GET_BUFFER",'||              /* VALID KEYWORD */        81304400
*            ' "PAGE_BUFFER",'||             /* VALID KEYWORD */        81308700
*            ' OR "RESOURCE_STATS".';        /* VALID KEYWORD */        81313000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81317300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81321600
*        ZMACRET=8;                          /* MACRO ERROR */          81325900
*      END;                                                             81330200
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 81334500
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            81338800
*    THEN                                                               81343100
*      DO;                                                              81347400
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            81351700
*            ' MUST CONTAIN ONE'||                                      81356000
*            ' (OR MORE) ARGUMENT(S).';                                 81360300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81364600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81368900
*        ZMACRET=8;                          /* MACRO ERROR */          81373200
*      END;                                                             81377500
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    81381800
*    THEN                                                               81386100
*      DO;                                                              81390400
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            81394700
*            RETCODE||                                                  81399000
*            '" "RETCODE"'||                                            81403300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              81407600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81411900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81416200
*        ZMACRET=8;                          /* MACRO ERROR */          81420500
*      END;                                                             81424800
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 81429100
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       81433400
*    THEN                                                               81437700
*      DO;                                                              81442000
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        81446300
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           81450600
*      END;                                                             81454900
*  ELSE                                                                 81459200
*    IF ZXRETCODE^=''                                                   81463500
*      THEN                                                             81467800
*        ZXRETCODE='';                       /* RESET OUTPUT */         81472100
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 81476400
*  IF RSNCODE='RSNCODE' | RSNCODE='()'       /*CHECK ENTRY*/            81480700
*    THEN                                                               81485000
*      DO;                                                              81489300
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            81493600
*            ' MUST CONTAIN ONE'||                                      81497900
*            ' (OR MORE) ARGUMENT(S).';                                 81502200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81506500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81510800
*        ZMACRET=8;                          /* MACRO ERROR */          81515100
*      END;                                                             81519400
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    81523700
*    THEN                                                               81528000
*      DO;                                                              81532300
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            81536600
*            RSNCODE||                                                  81540900
*            '" "RSNCODE"'||                                            81545200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              81549500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81553800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81558100
*        ZMACRET=8;                          /* MACRO ERROR */          81562400
*      END;                                                             81566700
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 81571000
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       81575300
*    THEN                                                               81579600
*      DO;                                                              81583900
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        81588200
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           81592500
*      END;                                                             81596800
*  ELSE                                                                 81601100
*    IF ZXRSNCODE^=''                                                   81605400
*      THEN                                                             81609700
*        ZXRSNCODE='';                       /* RESET OUTPUT */         81614000
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 81618300
*      END;                                  /* END COMPLETE CHECKING*/ 81622600
*/********************************************************************/ 81626900
*/***PE.MF00 PARTIAL MACRO SYNTAX CHECKING                           */ 81631200
*/********************************************************************/ 81635500
*/*PE.MF01 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 81639800
*  IF XMF^='L' & XMFSCK='NOCHECK'                                       81644100
*    THEN                                                               81648400
*      DO;                                   /* PARTIAL SYNTAX CHECK */ 81652700
*/*PE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES----------------------*/ 81657000
*  XREQUEST='';                        /*ejb rmp93*/                    81661300
*  XBUFTYPE='';                        /*ejb rmp93*/                    81665600
*  XCSMUSER='';                        /*ejb rmp93*/                    81669900
*  XSKIPBUF='';                        /*ejb rmp93*/                    81674200
*  XPAD='';                        /*ejb rmp93*/                        81678500
*  XBUFSOURC='';                        /*ejb rmp93*/                   81682800
*  XWAIT='';                        /*ejb rmp93*/                       81687100
*  XCLEAR='';                        /*ejb rmp93*/                      81691400
*  XFREETO='';                        /*ejb rmp93*/                     81695700
*/*PE.P01 EXCESSIVE POSITIONALS--------------------------------------*/ 81700000
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    81704300
*    THEN                                                               81708600
*      DO;                                                              81712900
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            81717200
*            ' "'||MACLIST||'"'||                                       81721500
*            ' CANNOT BE USED.'||                                       81725800
*            ' NO POSITIONAL ARGUMENTS'||                               81730100
*            ' ARE ALLOWED.';                                           81734400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81738700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81743000
*        ZMACRET=8;                          /* MACRO ERROR */          81747300
*      END;                                                             81751600
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 81755900
*  IF TRANSLATE(REQUEST(1))                                             81760200
*              = 'ASSIGN_BUFFER'             /* CHECK FOR KEYWORD */    81764500
*    THEN                                                               81768800
*      DO;                                                              81773100
*        XREQUEST='ASSIGN_BUFFER';           /* SET XVARIABLE */        81777400
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    81781700
*          THEN                                                         81786000
*            DO;                                                        81790300
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            81794600
*                  REQUEST||                                            81798900
*                  '" "REQUEST"'||                                      81803200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        81807500
*              ANS MSG('?IVTCSM ---> '||ZMS);                           81811800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          81816100
*              ZMACRET=8;                    /* MACRO ERROR */          81820400
*            END;                                                       81824700
*      END;                                                             81829000
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 81833300
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    81837600
*    THEN                                                               81841900
*      DO;                                                              81846200
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            81850500
*            BUFLIST||                                                  81854800
*            '" "BUFLIST"'||                                            81859100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              81863400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81867700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81872000
*        ZMACRET=8;                          /* MACRO ERROR */          81876300
*      END;                                                             81880600
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 81884900
*  IF BUFLIST(1)^=''                         /* CHECK FOR NULL */       81889200
*    THEN                                                               81893500
*      DO;                                                              81897800
*        XBUFLIST=BUFLIST(1);                /* SET XVARIABLE */        81902100
*        ZXBUFLIST='INPUT';                  /* SET IN/OUTPUT */        81906400
*      END;                                                             81910700
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 81915000
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    81919300
*    THEN                                                               81923600
*      DO;                                                              81927900
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            81932200
*            BUFNUM||                                                   81936500
*            '" "BUFNUM"'||                                             81940800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              81945100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 81949400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81953700
*        ZMACRET=8;                          /* MACRO ERROR */          81958000
*      END;                                                             81962300
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 81966600
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       81970900
*    THEN                                                               81975200
*      DO;                                                              81979500
*        XBUFNUM=BUFNUM(1);                  /* SET XVARIABLE */        81983800
*        ZXBUFNUM='INPUT';                   /* SET IN/OUTPUT */        81988100
*      END;                                                             81992400
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 81996700
*  IF BUFTYPE='BUFTYPE'                      /* CHECK ENTRY */          82001000
*    THEN                                                               82005300
*      DO;                                                              82009600
*        ZMS=' 8, THE "BUFTYPE" KEY'||       /**KOPTP* MSG*/            82013900
*            ' MUST CONTAIN ONE'||                                      82018200
*            ' (OR MORE) ARGUMENT(S).';                                 82022500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82026800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82031100
*        ZMACRET=8;                          /* MACRO ERROR */          82035400
*      END;                                                             82039700
*  IF NUMBER(BUFTYPE)>1                      /* CHECK POSITIONALS */    82044000
*    THEN                                                               82048300
*      DO;                                                              82052600
*        ZMS=' 8, "BUFTYPE'||                /**KPOSP* MSG*/            82056900
*            BUFTYPE||                                                  82061200
*            '" "BUFTYPE"'||                                            82065500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82069800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82074100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82078400
*        ZMACRET=8;                          /* MACRO ERROR */          82082700
*      END;                                                             82087000
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82091300
*  IF BUFTYPE(1) = 'SAME'                                               82095600
*    THEN                                                               82099900
*      XBUFTYPE = 'SAME';                    /* SET XVARIABLE */        82104200
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82108500
*  IF BUFTYPE(1) = 'PAGEELIG'                                           82112800
*    THEN                                                               82117100
*      XBUFTYPE = 'PAGEELIG';                /* SET XVARIABLE */        82121400
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82125700
*  IF BUFTYPE(1) = 'FIXED'                                              82130000
*    THEN                                                               82134300
*      XBUFTYPE = 'FIXED';                   /* SET XVARIABLE */        82138600
*/*PE.KKWRD06 Additional value checks */                                82142900
*  IF BUFTYPE(1) = 'PAGEABLE'                                           82147200
*    THEN                                                               82151500
*      XBUFTYPE = 'PAGEABLE';                /* SET XVARIABLE */        82155800
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82160100
*  IF XBUFTYPE^=''                           /* CHECK FOR KEYWORD */    82164400
*    THEN                                                               82168700
*      ZXBUFTYPE='INPUT';                    /* SET IN/OUTPUT */        82173000
*    ELSE                                                               82177300
*      DO;                                   /* KEYWORD NOT ENTERED */  82181600
*        IF BUFTYPE(1)^=''                                              82185900
*          THEN                                                         82190200
*            DO;                                                        82194500
*              ZMS=' 8, "BUFTYPE'||          /**KUKWP* MSG*/            82198800
*                  BUFTYPE||'"'||                                       82203100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              82207400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    82211700
*                  ' "SAME",'||              /* VALID KEYWORD */        82216000
*                  ' "PAGEELIG",'||          /* VALID KEYWORD */        82220300
*                  ' OR "FIXED".';           /* VALID KEYWORD */        82224600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           82228900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          82233200
*              ZMACRET=8;                    /* MACRO ERROR */          82237500
*            END;                                                       82241800
*      END;                                                             82246100
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82250400
*  IF CSMUSER='CSMUSER'                      /* CHECK ENTRY */          82254700
*    THEN                                                               82259000
*      DO;                                                              82263300
*        ZMS=' 8, THE "CSMUSER" KEY'||       /**KOPTP* MSG*/            82267600
*            ' MUST CONTAIN ONE'||                                      82271900
*            ' (OR MORE) ARGUMENT(S).';                                 82276200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82280500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82284800
*        ZMACRET=8;                          /* MACRO ERROR */          82289100
*      END;                                                             82293400
*  IF NUMBER(CSMUSER)>1                      /* CHECK POSITIONALS */    82297700
*    THEN                                                               82302000
*      DO;                                                              82306300
*        ZMS=' 8, "CSMUSER'||                /**KPOSP* MSG*/            82310600
*            CSMUSER||                                                  82314900
*            '" "CSMUSER"'||                                            82319200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82323500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82327800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82332100
*        ZMACRET=8;                          /* MACRO ERROR */          82336400
*      END;                                                             82340700
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82345000
*  IF CSMUSER(1) = 'NO'                                                 82349300
*    THEN                                                               82353600
*      XCSMUSER = 'NO';                      /* SET XVARIABLE */        82357900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82362200
*  IF CSMUSER(1) = 'YES'                                                82366500
*    THEN                                                               82370800
*      XCSMUSER = 'YES';                     /* SET XVARIABLE */        82375100
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 82379400
*  IF XCSMUSER^=''                           /* CHECK FOR KEYWORD */    82383700
*    THEN                                                               82388000
*      ZXCSMUSER='INPUT';                    /* SET IN/OUTPUT */        82392300
*    ELSE                                                               82396600
*      DO;                                   /* KEYWORD NOT ENTERED */  82400900
*        IF CSMUSER(1)^=''                                              82405200
*          THEN                                                         82409500
*            DO;                                                        82413800
*              ZMS=' 8, "CSMUSER'||          /**KUKWP* MSG*/            82418100
*                  CSMUSER||'"'||                                       82422400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              82426700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    82431000
*                  ' "NO"'||                 /* VALID KEYWORD */        82435300
*                  ' OR "YES".';             /* VALID KEYWORD */        82439600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           82443900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          82448200
*              ZMACRET=8;                    /* MACRO ERROR */          82452500
*            END;                                                       82456800
*      END;                                                             82461100
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 82465400
*  IF GAP='GAP'                              /* CHECK ENTRY */          82469700
*    THEN                                                               82474000
*      DO;                                                              82478300
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            82482600
*            ' MUST CONTAIN ONE'||                                      82486900
*            ' (OR MORE) ARGUMENT(S).';                                 82491200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82495500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82499800
*        ZMACRET=8;                          /* MACRO ERROR */          82504100
*      END;                                                             82508400
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    82512700
*    THEN                                                               82517000
*      DO;                                                              82521300
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            82525600
*            GAP||                                                      82529900
*            '" "GAP"'||                                                82534200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82538500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82542800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82547100
*        ZMACRET=8;                          /* MACRO ERROR */          82551400
*      END;                                                             82555700
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 82560000
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       82564300
*    THEN                                                               82568600
*      DO;                                                              82572900
*        XGAP=GAP(1);                        /* SET XVARIABLE */        82577200
*        ZXGAP='INPUT';                      /* SET IN/OUTPUT */        82581500
*      END;                                                             82585800
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 82590100
*  IF ERRBFLST='ERRBFLST'                    /* CHECK ENTRY */          82594400
*    THEN                                                               82598700
*      DO;                                                              82603000
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            82607300
*            ' MUST CONTAIN ONE'||                                      82611600
*            ' (OR MORE) ARGUMENT(S).';                                 82615900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82620200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82624500
*        ZMACRET=8;                          /* MACRO ERROR */          82628800
*      END;                                                             82633100
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    82637400
*    THEN                                                               82641700
*      DO;                                                              82646000
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            82650300
*            ERRBFLST||                                                 82654600
*            '" "ERRBFLST"'||                                           82658900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82663200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82667500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82671800
*        ZMACRET=8;                          /* MACRO ERROR */          82676100
*      END;                                                             82680400
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 82684700
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       82689000
*    THEN                                                               82693300
*      DO;                                                              82697600
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        82701900
*        ZXERRBFLST='OUTPUT';                /* SET IN/OUTPUT */        82706200
*      END;                                                             82710500
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 82714800
*  IF OWNERID='OWNERID'                      /* CHECK ENTRY */          82719100
*    THEN                                                               82723400
*      DO;                                                              82727700
*        ZMS=' 8, THE "OWNERID" KEY'||       /**KOPTP* MSG*/            82732000
*            ' MUST CONTAIN ONE'||                                      82736300
*            ' (OR MORE) ARGUMENT(S).';                                 82740600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82744900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82749200
*        ZMACRET=8;                          /* MACRO ERROR */          82753500
*      END;                                                             82757800
*  IF NUMBER(OWNERID)>1                      /* CHECK POSITIONALS */    82762100
*    THEN                                                               82766400
*      DO;                                                              82770700
*        ZMS=' 8, "OWNERID'||                /**KPOSP* MSG*/            82775000
*            OWNERID||                                                  82779300
*            '" "OWNERID"'||                                            82783600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82787900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82792200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82796500
*        ZMACRET=8;                          /* MACRO ERROR */          82800800
*      END;                                                             82805100
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 82809400
*  IF OWNERID(1)^=''                         /* CHECK FOR NULL */       82813700
*    THEN                                                               82818000
*      DO;                                                              82822300
*        XOWNERID=OWNERID(1);                /* SET XVARIABLE */        82826600
*        ZXOWNERID='INPUT';                  /* SET IN/OUTPUT */        82830900
*      END;                                                             82835200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 82839500
*  IF TASKID='TASKID'                        /* CHECK ENTRY */          82843800
*    THEN                                                               82848100
*      DO;                                                              82852400
*        ZMS=' 8, THE "TASKID" KEY'||        /**KOPTP* MSG*/            82856700
*            ' MUST CONTAIN ONE'||                                      82861000
*            ' (OR MORE) ARGUMENT(S).';                                 82865300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82869600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82873900
*        ZMACRET=8;                          /* MACRO ERROR */          82878200
*      END;                                                             82882500
*  IF NUMBER(TASKID)>1                       /* CHECK POSITIONALS */    82886800
*    THEN                                                               82891100
*      DO;                                                              82895400
*        ZMS=' 8, "TASKID'||                 /**KPOSP* MSG*/            82899700
*            TASKID||                                                   82904000
*            '" "TASKID"'||                                             82908300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82912600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82916900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82921200
*        ZMACRET=8;                          /* MACRO ERROR */          82925500
*      END;                                                             82929800
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 82934100
*  IF TASKID(1)^=''                          /* CHECK FOR NULL */       82938400
*    THEN                                                               82942700
*      DO;                                                              82947000
*        XTASKID=TASKID(1);                  /* SET XVARIABLE */        82951300
*        ZXTASKID='INPUT';                   /* SET IN/OUTPUT */        82955600
*      END;                                                             82959900
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 82964200
*  IF THREAD='THREAD'                        /* CHECK ENTRY */          82968500
*    THEN                                                               82972800
*      DO;                                                              82977100
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            82981400
*            ' MUST CONTAIN ONE'||                                      82985700
*            ' (OR MORE) ARGUMENT(S).';                                 82990000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 82994300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82998600
*        ZMACRET=8;                          /* MACRO ERROR */          83002900
*      END;                                                             83007200
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    83011500
*    THEN                                                               83015800
*      DO;                                                              83020100
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            83024400
*            THREAD||                                                   83028700
*            '" "THREAD"'||                                             83033000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83037300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83041600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83045900
*        ZMACRET=8;                          /* MACRO ERROR */          83050200
*      END;                                                             83054500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 83058800
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       83063100
*    THEN                                                               83067400
*      DO;                                                              83071700
*        XTHREAD=THREAD(1);                  /* SET XVARIABLE */        83076000
*        ZXTHREAD='INPUT';                   /* SET IN/OUTPUT */        83080300
*      END;                                                             83084600
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 83088900
*  IF UTILRTN='UTILRTN'                      /* CHECK ENTRY */          83093200
*    THEN                                                               83097500
*      DO;                                                              83101800
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            83106100
*            ' MUST CONTAIN ONE'||                                      83110400
*            ' (OR MORE) ARGUMENT(S).';                                 83114700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83119000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83123300
*        ZMACRET=8;                          /* MACRO ERROR */          83127600
*      END;                                                             83131900
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    83136200
*    THEN                                                               83140500
*      DO;                                                              83144800
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            83149100
*            UTILRTN||                                                  83153400
*            '" "UTILRTN"'||                                            83157700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83162000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83166300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83170600
*        ZMACRET=8;                          /* MACRO ERROR */          83174900
*      END;                                                             83179200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 83183500
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       83187800
*    THEN                                                               83192100
*      DO;                                                              83196400
*        XUTILRTN=UTILRTN(1);                /* SET XVARIABLE */        83200700
*        ZXUTILRTN='INPUT';                  /* SET IN/OUTPUT */        83205000
*      END;                                                             83209300
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 83213600
*  IF TRANSLATE(REQUEST(1))                                             83217900
*              = 'CHANGE_OWNER'              /* CHECK FOR KEYWORD */    83222200
*    THEN                                                               83226500
*      DO;                                                              83230800
*        XREQUEST='CHANGE_OWNER';            /* SET XVARIABLE */        83235100
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    83239400
*          THEN                                                         83243700
*            DO;                                                        83248000
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            83252300
*                  REQUEST||                                            83256600
*                  '" "REQUEST"'||                                      83260900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        83265200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           83269500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          83273800
*              ZMACRET=8;                    /* MACRO ERROR */          83278100
*            END;                                                       83282400
*      END;                                                             83286700
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 83291000
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    83295300
*    THEN                                                               83299600
*      DO;                                                              83303900
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            83308200
*            BUFLIST||                                                  83312500
*            '" "BUFLIST"'||                                            83316800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83321100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83325400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83329700
*        ZMACRET=8;                          /* MACRO ERROR */          83334000
*      END;                                                             83338300
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 83342600
*  IF BUFLIST(1)^=''                         /* CHECK FOR NULL */       83346900
*    THEN                                                               83351200
*      DO;                                                              83355500
*        XBUFLIST=BUFLIST(1);                /* SET XVARIABLE */        83359800
*        ZXBUFLIST='INPUT';                  /* SET IN/OUTPUT */        83364100
*      END;                                                             83368400
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 83372700
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    83377000
*    THEN                                                               83381300
*      DO;                                                              83385600
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            83389900
*            BUFNUM||                                                   83394200
*            '" "BUFNUM"'||                                             83398500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83402800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83407100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83411400
*        ZMACRET=8;                          /* MACRO ERROR */          83415700
*      END;                                                             83420000
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 83424300
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       83428600
*    THEN                                                               83432900
*      DO;                                                              83437200
*        XBUFNUM=BUFNUM(1);                  /* SET XVARIABLE */        83441500
*        ZXBUFNUM='INPUT';                   /* SET IN/OUTPUT */        83445800
*      END;                                                             83450100
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 83454400
*  IF CSMUSER='CSMUSER'                      /* CHECK ENTRY */          83458700
*    THEN                                                               83463000
*      DO;                                                              83467300
*        ZMS=' 8, THE "CSMUSER" KEY'||       /**KOPTP* MSG*/            83471600
*            ' MUST CONTAIN ONE'||                                      83475900
*            ' (OR MORE) ARGUMENT(S).';                                 83480200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83484500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83488800
*        ZMACRET=8;                          /* MACRO ERROR */          83493100
*      END;                                                             83497400
*  IF NUMBER(CSMUSER)>1                      /* CHECK POSITIONALS */    83501700
*    THEN                                                               83506000
*      DO;                                                              83510300
*        ZMS=' 8, "CSMUSER'||                /**KPOSP* MSG*/            83514600
*            CSMUSER||                                                  83518900
*            '" "CSMUSER"'||                                            83523200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83527500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83531800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83536100
*        ZMACRET=8;                          /* MACRO ERROR */          83540400
*      END;                                                             83544700
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 83549000
*  IF CSMUSER(1) = 'NO'                                                 83553300
*    THEN                                                               83557600
*      XCSMUSER = 'NO';                      /* SET XVARIABLE */        83561900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 83566200
*  IF CSMUSER(1) = 'YES'                                                83570500
*    THEN                                                               83574800
*      XCSMUSER = 'YES';                     /* SET XVARIABLE */        83579100
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 83583400
*  IF XCSMUSER^=''                           /* CHECK FOR KEYWORD */    83587700
*    THEN                                                               83592000
*      ZXCSMUSER='INPUT';                    /* SET IN/OUTPUT */        83596300
*    ELSE                                                               83600600
*      DO;                                   /* KEYWORD NOT ENTERED */  83604900
*        IF CSMUSER(1)^=''                                              83609200
*          THEN                                                         83613500
*            DO;                                                        83617800
*              ZMS=' 8, "CSMUSER'||          /**KUKWP* MSG*/            83622100
*                  CSMUSER||'"'||                                       83626400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              83630700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    83635000
*                  ' "NO"'||                 /* VALID KEYWORD */        83639300
*                  ' OR "YES".';             /* VALID KEYWORD */        83643600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           83647900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          83652200
*              ZMACRET=8;                    /* MACRO ERROR */          83656500
*            END;                                                       83660800
*      END;                                                             83665100
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 83669400
*  IF ERRBFLST='ERRBFLST'                    /* CHECK ENTRY */          83673700
*    THEN                                                               83678000
*      DO;                                                              83682300
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            83686600
*            ' MUST CONTAIN ONE'||                                      83690900
*            ' (OR MORE) ARGUMENT(S).';                                 83695200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83699500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83703800
*        ZMACRET=8;                          /* MACRO ERROR */          83708100
*      END;                                                             83712400
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    83716700
*    THEN                                                               83721000
*      DO;                                                              83725300
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            83729600
*            ERRBFLST||                                                 83733900
*            '" "ERRBFLST"'||                                           83738200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83742500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83746800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83751100
*        ZMACRET=8;                          /* MACRO ERROR */          83755400
*      END;                                                             83759700
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 83764000
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       83768300
*    THEN                                                               83772600
*      DO;                                                              83776900
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        83781200
*        ZXERRBFLST='OUTPUT';                /* SET IN/OUTPUT */        83785500
*      END;                                                             83789800
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 83794100
*  IF GAP='GAP'                              /* CHECK ENTRY */          83798400
*    THEN                                                               83802700
*      DO;                                                              83807000
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            83811300
*            ' MUST CONTAIN ONE'||                                      83815600
*            ' (OR MORE) ARGUMENT(S).';                                 83819900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83824200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83828500
*        ZMACRET=8;                          /* MACRO ERROR */          83832800
*      END;                                                             83837100
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    83841400
*    THEN                                                               83845700
*      DO;                                                              83850000
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            83854300
*            GAP||                                                      83858600
*            '" "GAP"'||                                                83862900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83867200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83871500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83875800
*        ZMACRET=8;                          /* MACRO ERROR */          83880100
*      END;                                                             83884400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 83888700
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       83893000
*    THEN                                                               83897300
*      DO;                                                              83901600
*        XGAP=GAP(1);                        /* SET XVARIABLE */        83905900
*        ZXGAP='INPUT';                      /* SET IN/OUTPUT */        83910200
*      END;                                                             83914500
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 83918800
*  IF OWNERID='OWNERID'                      /* CHECK ENTRY */          83923100
*    THEN                                                               83927400
*      DO;                                                              83931700
*        ZMS=' 8, THE "OWNERID" KEY'||       /**KOPTP* MSG*/            83936000
*            ' MUST CONTAIN ONE'||                                      83940300
*            ' (OR MORE) ARGUMENT(S).';                                 83944600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83948900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83953200
*        ZMACRET=8;                          /* MACRO ERROR */          83957500
*      END;                                                             83961800
*  IF NUMBER(OWNERID)>1                      /* CHECK POSITIONALS */    83966100
*    THEN                                                               83970400
*      DO;                                                              83974700
*        ZMS=' 8, "OWNERID'||                /**KPOSP* MSG*/            83979000
*            OWNERID||                                                  83983300
*            '" "OWNERID"'||                                            83987600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83991900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 83996200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84000500
*        ZMACRET=8;                          /* MACRO ERROR */          84004800
*      END;                                                             84009100
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 84013400
*  IF OWNERID(1)^=''                         /* CHECK FOR NULL */       84017700
*    THEN                                                               84022000
*      DO;                                                              84026300
*        XOWNERID=OWNERID(1);                /* SET XVARIABLE */        84030600
*        ZXOWNERID='INPUT';                  /* SET IN/OUTPUT */        84034900
*      END;                                                             84039200
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84043500
*  IF SKIPBUF='SKIPBUF'                      /* CHECK ENTRY */          84047800
*    THEN                                                               84052100
*      DO;                                                              84056400
*        ZMS=' 8, THE "SKIPBUF" KEY'||       /**KOPTP* MSG*/            84060700
*            ' MUST CONTAIN ONE'||                                      84065000
*            ' (OR MORE) ARGUMENT(S).';                                 84069300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84073600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84077900
*        ZMACRET=8;                          /* MACRO ERROR */          84082200
*      END;                                                             84086500
*  IF NUMBER(SKIPBUF)>1                      /* CHECK POSITIONALS */    84090800
*    THEN                                                               84095100
*      DO;                                                              84099400
*        ZMS=' 8, "SKIPBUF'||                /**KPOSP* MSG*/            84103700
*            SKIPBUF||                                                  84108000
*            '" "SKIPBUF"'||                                            84112300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              84116600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84120900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84125200
*        ZMACRET=8;                          /* MACRO ERROR */          84129500
*      END;                                                             84133800
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84138100
*  IF SKIPBUF(1) = 'NO'                                                 84142400
*    THEN                                                               84146700
*      XSKIPBUF = 'NO';                      /* SET XVARIABLE */        84151000
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84155300
*  IF SKIPBUF(1) = 'YES'                                                84159600
*    THEN                                                               84163900
*      XSKIPBUF = 'YES';                     /* SET XVARIABLE */        84168200
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84172500
*  IF XSKIPBUF^=''                           /* CHECK FOR KEYWORD */    84176800
*    THEN                                                               84181100
*      ZXSKIPBUF='INPUT';                    /* SET IN/OUTPUT */        84185400
*    ELSE                                                               84189700
*      DO;                                   /* KEYWORD NOT ENTERED */  84194000
*        IF SKIPBUF(1)^=''                                              84198300
*          THEN                                                         84202600
*            DO;                                                        84206900
*              ZMS=' 8, "SKIPBUF'||          /**KUKWP* MSG*/            84211200
*                  SKIPBUF||'"'||                                       84215500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              84219800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    84224100
*                  ' "NO"'||                 /* VALID KEYWORD */        84228400
*                  ' OR "YES".';             /* VALID KEYWORD */        84232700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           84237000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          84241300
*              ZMACRET=8;                    /* MACRO ERROR */          84245600
*            END;                                                       84249900
*      END;                                                             84254200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 84258500
*  IF TASKID='TASKID'                        /* CHECK ENTRY */          84262800
*    THEN                                                               84267100
*      DO;                                                              84271400
*        ZMS=' 8, THE "TASKID" KEY'||        /**KOPTP* MSG*/            84275700
*            ' MUST CONTAIN ONE'||                                      84280000
*            ' (OR MORE) ARGUMENT(S).';                                 84284300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84288600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84292900
*        ZMACRET=8;                          /* MACRO ERROR */          84297200
*      END;                                                             84301500
*  IF NUMBER(TASKID)>1                       /* CHECK POSITIONALS */    84305800
*    THEN                                                               84310100
*      DO;                                                              84314400
*        ZMS=' 8, "TASKID'||                 /**KPOSP* MSG*/            84318700
*            TASKID||                                                   84323000
*            '" "TASKID"'||                                             84327300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              84331600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84335900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84340200
*        ZMACRET=8;                          /* MACRO ERROR */          84344500
*      END;                                                             84348800
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 84353100
*  IF TASKID(1)^=''                          /* CHECK FOR NULL */       84357400
*    THEN                                                               84361700
*      DO;                                                              84366000
*        XTASKID=TASKID(1);                  /* SET XVARIABLE */        84370300
*        ZXTASKID='INPUT';                   /* SET IN/OUTPUT */        84374600
*      END;                                                             84378900
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 84383200
*  IF THREAD='THREAD'                        /* CHECK ENTRY */          84387500
*    THEN                                                               84391800
*      DO;                                                              84396100
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            84400400
*            ' MUST CONTAIN ONE'||                                      84404700
*            ' (OR MORE) ARGUMENT(S).';                                 84409000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84413300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84417600
*        ZMACRET=8;                          /* MACRO ERROR */          84421900
*      END;                                                             84426200
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    84430500
*    THEN                                                               84434800
*      DO;                                                              84439100
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            84443400
*            THREAD||                                                   84447700
*            '" "THREAD"'||                                             84452000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              84456300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84460600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84464900
*        ZMACRET=8;                          /* MACRO ERROR */          84469200
*      END;                                                             84473500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 84477800
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       84482100
*    THEN                                                               84486400
*      DO;                                                              84490700
*        XTHREAD=THREAD(1);                  /* SET XVARIABLE */        84495000
*        ZXTHREAD='INPUT';                   /* SET IN/OUTPUT */        84499300
*      END;                                                             84503600
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 84507900
*  IF UTILRTN='UTILRTN'                      /* CHECK ENTRY */          84512200
*    THEN                                                               84516500
*      DO;                                                              84520800
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            84525100
*            ' MUST CONTAIN ONE'||                                      84529400
*            ' (OR MORE) ARGUMENT(S).';                                 84533700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84538000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84542300
*        ZMACRET=8;                          /* MACRO ERROR */          84546600
*      END;                                                             84550900
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    84555200
*    THEN                                                               84559500
*      DO;                                                              84563800
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            84568100
*            UTILRTN||                                                  84572400
*            '" "UTILRTN"'||                                            84576700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              84581000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84585300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84589600
*        ZMACRET=8;                          /* MACRO ERROR */          84593900
*      END;                                                             84598200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 84602500
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       84606800
*    THEN                                                               84611100
*      DO;                                                              84615400
*        XUTILRTN=UTILRTN(1);                /* SET XVARIABLE */        84619700
*        ZXUTILRTN='INPUT';                  /* SET IN/OUTPUT */        84624000
*      END;                                                             84628300
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 84632600
*  IF TRANSLATE(REQUEST(1))                                             84636900
*              = 'COPY_DATA'                 /* CHECK FOR KEYWORD */    84641200
*    THEN                                                               84645500
*      DO;                                                              84649800
*        XREQUEST='COPY_DATA';               /* SET XVARIABLE */        84654100
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    84658400
*          THEN                                                         84662700
*            DO;                                                        84667000
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            84671300
*                  REQUEST||                                            84675600
*                  '" "REQUEST"'||                                      84679900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        84684200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           84688500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          84692800
*              ZMACRET=8;                    /* MACRO ERROR */          84697100
*            END;                                                       84701400
*      END;                                                             84705700
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 84710000
*  IF TRANSLATE(PAD(1))                                                 84714300
*              = 'NO'                        /* CHECK FOR KEYWORD */    84718600
*    THEN                                                               84722900
*      DO;                                                              84727200
*        XPAD='NO';                          /* SET XVARIABLE */        84731500
*        IF NUMBER(PAD)>1                    /* CHECK POSITIONALS */    84735800
*          THEN                                                         84740100
*            DO;                                                        84744400
*              ZMS=' 8, "PAD'||              /**KPOSP* MSG*/            84748700
*                  PAD||                                                84753000
*                  '" "PAD"'||                                          84757300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        84761600
*              ANS MSG('?IVTCSM ---> '||ZMS);                           84765900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          84770200
*              ZMACRET=8;                    /* MACRO ERROR */          84774500
*            END;                                                       84778800
*      END;                                                             84783100
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 84787400
*  IF TRANSLATE(PAD(1))                                                 84791700
*              = 'YES'                       /* CHECK FOR KEYWORD */    84796000
*    THEN                                                               84800300
*      DO;                                                              84804600
*        XPAD='YES';                         /* SET XVARIABLE */        84808900
*        IF NUMBER(PAD)>1                    /* CHECK POSITIONALS */    84813200
*          THEN                                                         84817500
*            DO;                                                        84821800
*              ZMS=' 8, "PAD'||              /**KPOSP* MSG*/            84826100
*                  PAD||                                                84830400
*                  '" "PAD"'||                                          84834700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        84839000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           84843300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          84847600
*              ZMACRET=8;                    /* MACRO ERROR */          84851900
*            END;                                                       84856200
*      END;                                                             84860500
*/*PE.KXVAR01 NAME, OPT RQD INPUT, KEYS -EXCESSIVE ARGUMENTS---------*/ 84864800
*  IF NUMBER(PADCHAR)>1                      /* CHECK POSITIONALS */    84869100
*    THEN                                                               84873400
*      DO;                                                              84877700
*        ZMS=' 8, "PADCHAR'||                /**KPOSP* MSG*/            84882000
*            PADCHAR||                                                  84886300
*            '" "PADCHAR"'||                                            84890600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              84894900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 84899200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84903500
*        ZMACRET=8;                          /* MACRO ERROR */          84907800
*      END;                                                             84912100
*/*PE.KXVAR03 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 84916400
*  IF PADCHAR(1)^=''                         /* CHECK FOR NULL */       84920700
*    THEN                                                               84925000
*      DO;                                                              84929300
*        XPADCHAR=PADCHAR(1);                /* SET XVARIABLE */        84933600
*        ZXPADCHAR='INPUT';                  /* SET IN/OUTPUT */        84937900
*      END;                                                             84942200
*/*PE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 84946500
*  IF XPAD^=''                               /* CHECK FOR KEYWORD */    84950800
*    THEN                                                               84955100
*      ZXPAD='INPUT';                        /* SET IN/OUTPUT */        84959400
*    ELSE                                                               84963700
*      DO;                                   /* KEYWORD NOT ENTERED */  84968000
*        IF PAD(1)^=''                       /* CHECK FOR KEYWORD */    84972300
*          THEN                                                         84976600
*            DO;                                                        84980900
*              ZXPAD='';                     /* RESET IN/OUTPUT */      84985200
*              ZMS=' 8, "PAD'||              /**KUKWP* MSG*/            84989500
*                  PAD||'"'||                                           84993800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              84998100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    85002400
*                  ' "NO"'||                 /* VALID KEYWORD */        85006700
*                  ' OR "YES".';             /* VALID KEYWORD */        85011000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           85015300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          85019600
*              ZMACRET=8;                    /* MACRO ERROR */          85023900
*            END;                                                       85028200
*      END;                                                             85032500
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 85036800
*  IF SRCERRL='SRCERRL'                      /* CHECK ENTRY */          85041100
*    THEN                                                               85045400
*      DO;                                                              85049700
*        ZMS=' 8, THE "SRCERRL" KEY'||       /**KOPTP* MSG*/            85054000
*            ' MUST CONTAIN ONE'||                                      85058300
*            ' (OR MORE) ARGUMENT(S).';                                 85062600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85066900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85071200
*        ZMACRET=8;                          /* MACRO ERROR */          85075500
*      END;                                                             85079800
*  IF NUMBER(SRCERRL)>1                      /* CHECK POSITIONALS */    85084100
*    THEN                                                               85088400
*      DO;                                                              85092700
*        ZMS=' 8, "SRCERRL'||                /**KPOSP* MSG*/            85097000
*            SRCERRL||                                                  85101300
*            '" "SRCERRL"'||                                            85105600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85109900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85114200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85118500
*        ZMACRET=8;                          /* MACRO ERROR */          85122800
*      END;                                                             85127100
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 85131400
*  IF SRCERRL(1)^=''                         /* CHECK FOR NULL */       85135700
*    THEN                                                               85140000
*      DO;                                                              85144300
*        XSRCERRL=SRCERRL(1);                /* SET XVARIABLE */        85148600
*        ZXSRCERRL='OUTPUT';                 /* SET IN/OUTPUT */        85152900
*      END;                                                             85157200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85161500
*  IF SRCGAP='SRCGAP'                        /* CHECK ENTRY */          85165800
*    THEN                                                               85170100
*      DO;                                                              85174400
*        ZMS=' 8, THE "SRCGAP" KEY'||        /**KOPTP* MSG*/            85178700
*            ' MUST CONTAIN ONE'||                                      85183000
*            ' (OR MORE) ARGUMENT(S).';                                 85187300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85191600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85195900
*        ZMACRET=8;                          /* MACRO ERROR */          85200200
*      END;                                                             85204500
*  IF NUMBER(SRCGAP)>1                       /* CHECK POSITIONALS */    85208800
*    THEN                                                               85213100
*      DO;                                                              85217400
*        ZMS=' 8, "SRCGAP'||                 /**KPOSP* MSG*/            85221700
*            SRCGAP||                                                   85226000
*            '" "SRCGAP"'||                                             85230300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85234600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85238900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85243200
*        ZMACRET=8;                          /* MACRO ERROR */          85247500
*      END;                                                             85251800
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 85256100
*  IF SRCGAP(1)^=''                          /* CHECK FOR NULL */       85260400
*    THEN                                                               85264700
*      DO;                                                              85269000
*        XSRCGAP=SRCGAP(1);                  /* SET XVARIABLE */        85273300
*        ZXSRCGAP='INPUT';                   /* SET IN/OUTPUT */        85277600
*      END;                                                             85281900
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85286200
*  IF NUMBER(SRCLIST)>1                      /* CHECK POSITIONALS */    85290500
*    THEN                                                               85294800
*      DO;                                                              85299100
*        ZMS=' 8, "SRCLIST'||                /**KPOSP* MSG*/            85303400
*            SRCLIST||                                                  85307700
*            '" "SRCLIST"'||                                            85312000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85316300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85320600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85324900
*        ZMACRET=8;                          /* MACRO ERROR */          85329200
*      END;                                                             85333500
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 85337800
*  IF SRCLIST(1)^=''                         /* CHECK FOR NULL */       85342100
*    THEN                                                               85346400
*      DO;                                                              85350700
*        XSRCLIST=SRCLIST(1);                /* SET XVARIABLE */        85355000
*        ZXSRCLIST='INPUT';                  /* SET IN/OUTPUT */        85359300
*      END;                                                             85363600
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85367900
*  IF NUMBER(SRCNUM)>1                       /* CHECK POSITIONALS */    85372200
*    THEN                                                               85376500
*      DO;                                                              85380800
*        ZMS=' 8, "SRCNUM'||                 /**KPOSP* MSG*/            85385100
*            SRCNUM||                                                   85389400
*            '" "SRCNUM"'||                                             85393700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85398000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85402300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85406600
*        ZMACRET=8;                          /* MACRO ERROR */          85410900
*      END;                                                             85415200
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 85419500
*  IF SRCNUM(1)^=''                          /* CHECK FOR NULL */       85423800
*    THEN                                                               85428100
*      DO;                                                              85432400
*        XSRCNUM=SRCNUM(1);                  /* SET XVARIABLE */        85436700
*        ZXSRCNUM='INPUT';                   /* SET IN/OUTPUT */        85441000
*      END;                                                             85445300
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 85449600
*  IF TARGERRL='TARGERRL'                    /* CHECK ENTRY */          85453900
*    THEN                                                               85458200
*      DO;                                                              85462500
*        ZMS=' 8, THE "TARGERRL" KEY'||      /**KOPTP* MSG*/            85466800
*            ' MUST CONTAIN ONE'||                                      85471100
*            ' (OR MORE) ARGUMENT(S).';                                 85475400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85479700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85484000
*        ZMACRET=8;                          /* MACRO ERROR */          85488300
*      END;                                                             85492600
*  IF NUMBER(TARGERRL)>1                     /* CHECK POSITIONALS */    85496900
*    THEN                                                               85501200
*      DO;                                                              85505500
*        ZMS=' 8, "TARGERRL'||               /**KPOSP* MSG*/            85509800
*            TARGERRL||                                                 85514100
*            '" "TARGERRL"'||                                           85518400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85522700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85527000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85531300
*        ZMACRET=8;                          /* MACRO ERROR */          85535600
*      END;                                                             85539900
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 85544200
*  IF TARGERRL(1)^=''                        /* CHECK FOR NULL */       85548500
*    THEN                                                               85552800
*      DO;                                                              85557100
*        XTARGERRL=TARGERRL(1);              /* SET XVARIABLE */        85561400
*        ZXTARGERRL='OUTPUT';                /* SET IN/OUTPUT */        85565700
*      END;                                                             85570000
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85574300
*  IF TARGGAP='TARGGAP'                      /* CHECK ENTRY */          85578600
*    THEN                                                               85582900
*      DO;                                                              85587200
*        ZMS=' 8, THE "TARGGAP" KEY'||       /**KOPTP* MSG*/            85591500
*            ' MUST CONTAIN ONE'||                                      85595800
*            ' (OR MORE) ARGUMENT(S).';                                 85600100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85604400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85608700
*        ZMACRET=8;                          /* MACRO ERROR */          85613000
*      END;                                                             85617300
*  IF NUMBER(TARGGAP)>1                      /* CHECK POSITIONALS */    85621600
*    THEN                                                               85625900
*      DO;                                                              85630200
*        ZMS=' 8, "TARGGAP'||                /**KPOSP* MSG*/            85634500
*            TARGGAP||                                                  85638800
*            '" "TARGGAP"'||                                            85643100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85647400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85651700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85656000
*        ZMACRET=8;                          /* MACRO ERROR */          85660300
*      END;                                                             85664600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 85668900
*  IF TARGGAP(1)^=''                         /* CHECK FOR NULL */       85673200
*    THEN                                                               85677500
*      DO;                                                              85681800
*        XTARGGAP=TARGGAP(1);                /* SET XVARIABLE */        85686100
*        ZXTARGGAP='INPUT';                  /* SET IN/OUTPUT */        85690400
*      END;                                                             85694700
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85699000
*  IF NUMBER(TARGLIST)>1                     /* CHECK POSITIONALS */    85703300
*    THEN                                                               85707600
*      DO;                                                              85711900
*        ZMS=' 8, "TARGLIST'||               /**KPOSP* MSG*/            85716200
*            TARGLIST||                                                 85720500
*            '" "TARGLIST"'||                                           85724800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85729100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85733400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85737700
*        ZMACRET=8;                          /* MACRO ERROR */          85742000
*      END;                                                             85746300
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 85750600
*  IF TARGLIST(1)^=''                        /* CHECK FOR NULL */       85754900
*    THEN                                                               85759200
*      DO;                                                              85763500
*        XTARGLIST=TARGLIST(1);              /* SET XVARIABLE */        85767800
*        ZXTARGLIST='INPUT';                 /* SET IN/OUTPUT */        85772100
*      END;                                                             85776400
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85780700
*  IF NUMBER(TARGNUM)>1                      /* CHECK POSITIONALS */    85785000
*    THEN                                                               85789300
*      DO;                                                              85793600
*        ZMS=' 8, "TARGNUM'||                /**KPOSP* MSG*/            85797900
*            TARGNUM||                                                  85802200
*            '" "TARGNUM"'||                                            85806500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85810800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85815100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85819400
*        ZMACRET=8;                          /* MACRO ERROR */          85823700
*      END;                                                             85828000
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 85832300
*  IF TARGNUM(1)^=''                         /* CHECK FOR NULL */       85836600
*    THEN                                                               85840900
*      DO;                                                              85845200
*        XTARGNUM=TARGNUM(1);                /* SET XVARIABLE */        85849500
*        ZXTARGNUM='INPUT';                  /* SET IN/OUTPUT */        85853800
*      END;                                                             85858100
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85862400
*  IF THREAD='THREAD'                        /* CHECK ENTRY */          85866700
*    THEN                                                               85871000
*      DO;                                                              85875300
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            85879600
*            ' MUST CONTAIN ONE'||                                      85883900
*            ' (OR MORE) ARGUMENT(S).';                                 85888200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85892500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85896800
*        ZMACRET=8;                          /* MACRO ERROR */          85901100
*      END;                                                             85905400
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    85909700
*    THEN                                                               85914000
*      DO;                                                              85918300
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            85922600
*            THREAD||                                                   85926900
*            '" "THREAD"'||                                             85931200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85935500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 85939800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85944100
*        ZMACRET=8;                          /* MACRO ERROR */          85948400
*      END;                                                             85952700
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 85957000
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       85961300
*    THEN                                                               85965600
*      DO;                                                              85969900
*        XTHREAD=THREAD(1);                  /* SET XVARIABLE */        85974200
*        ZXTHREAD='INPUT';                   /* SET IN/OUTPUT */        85978500
*      END;                                                             85982800
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 85987100
*  IF UTILRTN='UTILRTN'                      /* CHECK ENTRY */          85991400
*    THEN                                                               85995700
*      DO;                                                              86000000
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            86004300
*            ' MUST CONTAIN ONE'||                                      86008600
*            ' (OR MORE) ARGUMENT(S).';                                 86012900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86017200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86021500
*        ZMACRET=8;                          /* MACRO ERROR */          86025800
*      END;                                                             86030100
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    86034400
*    THEN                                                               86038700
*      DO;                                                              86043000
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            86047300
*            UTILRTN||                                                  86051600
*            '" "UTILRTN"'||                                            86055900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86060200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86064500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86068800
*        ZMACRET=8;                          /* MACRO ERROR */          86073100
*      END;                                                             86077400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 86081700
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       86086000
*    THEN                                                               86090300
*      DO;                                                              86094600
*        XUTILRTN=UTILRTN(1);                /* SET XVARIABLE */        86098900
*        ZXUTILRTN='INPUT';                  /* SET IN/OUTPUT */        86103200
*      END;                                                             86107500
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 86111800
*  IF TRANSLATE(REQUEST(1))                                             86116100
*              = 'CREATE_POOL'               /* CHECK FOR KEYWORD */    86120400
*    THEN                                                               86124700
*      DO;                                                              86129000
*        XREQUEST='CREATE_POOL';             /* SET XVARIABLE */        86133300
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    86137600
*          THEN                                                         86141900
*            DO;                                                        86146200
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            86150500
*                  REQUEST||                                            86154800
*                  '" "REQUEST"'||                                      86159100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        86163400
*              ANS MSG('?IVTCSM ---> '||ZMS);                           86167700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          86172000
*              ZMACRET=8;                    /* MACRO ERROR */          86176300
*            END;                                                       86180600
*      END;                                                             86184900
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 86189200
*  IF NUMBER(BUFSIZE)>1                      /* CHECK POSITIONALS */    86193500
*    THEN                                                               86197800
*      DO;                                                              86202100
*        ZMS=' 8, "BUFSIZE'||                /**KPOSP* MSG*/            86206400
*            BUFSIZE||                                                  86210700
*            '" "BUFSIZE"'||                                            86215000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86219300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86223600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86227900
*        ZMACRET=8;                          /* MACRO ERROR */          86232200
*      END;                                                             86236500
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 86240800
*  IF BUFSIZE(1)^=''                         /* CHECK FOR NULL */       86245100
*    THEN                                                               86249400
*      DO;                                                              86253700
*        XBUFSIZE=BUFSIZE(1);                /* SET XVARIABLE */        86258000
*        ZXBUFSIZE='INPUT';                  /* SET IN/OUTPUT */        86262300
*      END;                                                             86266600
*/*PE.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86270900
*  IF NUMBER(BUFSOURC)>1                     /* CHECK POSITIONALS */    86275200
*    THEN                                                               86279500
*      DO;                                                              86283800
*        ZMS=' 8, "BUFSOURC'||               /**KPOSP* MSG*/            86288100
*            BUFSOURC||                                                 86292400
*            '" "BUFSOURC"'||                                           86296700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86301000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86305300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86309600
*        ZMACRET=8;                          /* MACRO ERROR */          86313900
*      END;                                                             86318200
*/*PE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86322500
*  IF BUFSOURC(1) = 'DSPACE'                                            86326800
*    THEN                                                               86331100
*      XBUFSOURC = 'DSPACE';                 /* SET XVARIABLE */        86335400
*/*PE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86339700
*  IF BUFSOURC(1) = 'ECSA'                                              86344000
*    THEN                                                               86348300
*      XBUFSOURC = 'ECSA';                   /* SET XVARIABLE */        86352600
*/*PE.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86356900
*  IF XBUFSOURC^=''                          /* CHECK FOR KEYWORD */    86361200
*    THEN                                                               86365500
*      ZXBUFSOURC='INPUT';                   /* SET IN/OUTPUT */        86369800
*    ELSE                                                               86374100
*      DO;                                   /* KEYWORD NOT ENTERED */  86378400
*        IF BUFSOURC(1)^=''                                             86382700
*          THEN                                                         86387000
*            DO;                                                        86391300
*              ZMS=' 8, "BUFSOURC'||         /**KUKWP* MSG*/            86395600
*                  BUFSOURC||'"'||                                      86399900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              86404200
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    86408500
*                  ' "DSPACE"'||             /* VALID KEYWORD */        86412800
*                  ' OR "ECSA".';            /* VALID KEYWORD */        86417100
*              ANS MSG('?IVTCSM ---> '||ZMS);                           86421400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          86425700
*              ZMACRET=8;                    /* MACRO ERROR */          86430000
*            END;                                                       86434300
*      END;                                                             86438600
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 86442900
*  IF DS_INFO='DS_INFO'                      /* CHECK ENTRY */          86447200
*    THEN                                                               86451500
*      DO;                                                              86455800
*        ZMS=' 8, THE "DS_INFO" KEY'||       /**KOPTP* MSG*/            86460100
*            ' MUST CONTAIN ONE'||                                      86464400
*            ' (OR MORE) ARGUMENT(S).';                                 86468700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86473000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86477300
*        ZMACRET=8;                          /* MACRO ERROR */          86481600
*      END;                                                             86485900
*  IF NUMBER(DS_INFO)>1                      /* CHECK POSITIONALS */    86490200
*    THEN                                                               86494500
*      DO;                                                              86498800
*        ZMS=' 8, "DS_INFO'||                /**KPOSP* MSG*/            86503100
*            DS_INFO||                                                  86507400
*            '" "DS_INFO"'||                                            86511700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86516000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86520300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86524600
*        ZMACRET=8;                          /* MACRO ERROR */          86528900
*      END;                                                             86533200
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 86537500
*  IF DS_INFO(1)^=''                         /* CHECK FOR NULL */       86541800
*    THEN                                                               86546100
*      DO;                                                              86550400
*        XDS_INFO=DS_INFO(1);                /* SET XVARIABLE */        86554700
*        ZXDS_INFO='OUTPUT';                 /* SET IN/OUTPUT */        86559000
*      END;                                                             86563300
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 86567600
*  IF NUMBER(EXPBUF)>1                       /* CHECK POSITIONALS */    86571900
*    THEN                                                               86576200
*      DO;                                                              86580500
*        ZMS=' 8, "EXPBUF'||                 /**KPOSP* MSG*/            86584800
*            EXPBUF||                                                   86589100
*            '" "EXPBUF"'||                                             86593400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86597700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86602000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86606300
*        ZMACRET=8;                          /* MACRO ERROR */          86610600
*      END;                                                             86614900
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 86619200
*  IF EXPBUF(1)^=''                          /* CHECK FOR NULL */       86623500
*    THEN                                                               86627800
*      DO;                                                              86632100
*        XEXPBUF=EXPBUF(1);                  /* SET XVARIABLE */        86636400
*        ZXEXPBUF='INPUT';                   /* SET IN/OUTPUT */        86640700
*      END;                                                             86645000
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 86649300
*  IF NUMBER(INITBUF)>1                      /* CHECK POSITIONALS */    86653600
*    THEN                                                               86657900
*      DO;                                                              86662200
*        ZMS=' 8, "INITBUF'||                /**KPOSP* MSG*/            86666500
*            INITBUF||                                                  86670800
*            '" "INITBUF"'||                                            86675100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86679400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86683700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86688000
*        ZMACRET=8;                          /* MACRO ERROR */          86692300
*      END;                                                             86696600
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 86700900
*  IF INITBUF(1)^=''                         /* CHECK FOR NULL */       86705200
*    THEN                                                               86709500
*      DO;                                                              86713800
*        XINITBUF=INITBUF(1);                /* SET XVARIABLE */        86718100
*        ZXINITBUF='INPUT';                  /* SET IN/OUTPUT */        86722400
*      END;                                                             86726700
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 86731000
*  IF NUMBER(MINFREE)>1                      /* CHECK POSITIONALS */    86735300
*    THEN                                                               86739600
*      DO;                                                              86743900
*        ZMS=' 8, "MINFREE'||                /**KPOSP* MSG*/            86748200
*            MINFREE||                                                  86752500
*            '" "MINFREE"'||                                            86756800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86761100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86765400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86769700
*        ZMACRET=8;                          /* MACRO ERROR */          86774000
*      END;                                                             86778300
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 86782600
*  IF MINFREE(1)^=''                         /* CHECK FOR NULL */       86786900
*    THEN                                                               86791200
*      DO;                                                              86795500
*        XMINFREE=MINFREE(1);                /* SET XVARIABLE */        86799800
*        ZXMINFREE='INPUT';                  /* SET IN/OUTPUT */        86804100
*      END;                                                             86808400
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 86812700
*  IF RETPTOKN='RETPTOKN'                    /* CHECK ENTRY */          86817000
*    THEN                                                               86821300
*      DO;                                                              86825600
*        ZMS=' 8, THE "RETPTOKN" KEY'||      /**KOPTP* MSG*/            86829900
*            ' MUST CONTAIN ONE'||                                      86834200
*            ' (OR MORE) ARGUMENT(S).';                                 86838500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86842800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86847100
*        ZMACRET=8;                          /* MACRO ERROR */          86851400
*      END;                                                             86855700
*  IF NUMBER(RETPTOKN)>1                     /* CHECK POSITIONALS */    86860000
*    THEN                                                               86864300
*      DO;                                                              86868600
*        ZMS=' 8, "RETPTOKN'||               /**KPOSP* MSG*/            86872900
*            RETPTOKN||                                                 86877200
*            '" "RETPTOKN"'||                                           86881500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              86885800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86890100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86894400
*        ZMACRET=8;                          /* MACRO ERROR */          86898700
*      END;                                                             86903000
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 86907300
*  IF RETPTOKN(1)^=''                        /* CHECK FOR NULL */       86911600
*    THEN                                                               86915900
*      DO;                                                              86920200
*        XRETPTOKN=RETPTOKN(1);              /* SET XVARIABLE */        86924500
*        ZXRETPTOKN='OUTPUT';                /* SET IN/OUTPUT */        86928800
*      END;                                                             86933100
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 86937400
*  IF STATAREA='STATAREA'                    /* CHECK ENTRY */          86941700
*    THEN                                                               86946000
*      DO;                                                              86950300
*        ZMS=' 8, THE "STATAREA" KEY'||      /**KOPTP* MSG*/            86954600
*            ' MUST CONTAIN ONE'||                                      86958900
*            ' (OR MORE) ARGUMENT(S).';                                 86963200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 86967500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86971800
*        ZMACRET=8;                          /* MACRO ERROR */          86976100
*      END;                                                             86980400
*  IF NUMBER(STATAREA)>1                     /* CHECK POSITIONALS */    86984700
*    THEN                                                               86989000
*      DO;                                                              86993300
*        ZMS=' 8, "STATAREA'||               /**KPOSP* MSG*/            86997600
*            STATAREA||                                                 87001900
*            '" "STATAREA"'||                                           87006200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87010500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87014800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87019100
*        ZMACRET=8;                          /* MACRO ERROR */          87023400
*      END;                                                             87027700
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 87032000
*  IF STATAREA(1)^=''                        /* CHECK FOR NULL */       87036300
*    THEN                                                               87040600
*      DO;                                                              87044900
*        XSTATAREA=STATAREA(1);              /* SET XVARIABLE */        87049200
*        ZXSTATAREA='OUTPUT';                /* SET IN/OUTPUT */        87053500
*      END;                                                             87057800
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 87062100
*  IF TRANSLATE(REQUEST(1))                                             87066400
*              = 'DELETE_POOL'               /* CHECK FOR KEYWORD */    87070700
*    THEN                                                               87075000
*      DO;                                                              87079300
*        XREQUEST='DELETE_POOL';             /* SET XVARIABLE */        87083600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    87087900
*          THEN                                                         87092200
*            DO;                                                        87096500
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            87100800
*                  REQUEST||                                            87105100
*                  '" "REQUEST"'||                                      87109400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        87113700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           87118000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          87122300
*              ZMACRET=8;                    /* MACRO ERROR */          87126600
*            END;                                                       87130900
*      END;                                                             87135200
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87139500
*  IF NUMBER(POOLTOKN)>1                     /* CHECK POSITIONALS */    87143800
*    THEN                                                               87148100
*      DO;                                                              87152400
*        ZMS=' 8, "POOLTOKN'||               /**KPOSP* MSG*/            87156700
*            POOLTOKN||                                                 87161000
*            '" "POOLTOKN"'||                                           87165300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87169600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87173900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87178200
*        ZMACRET=8;                          /* MACRO ERROR */          87182500
*      END;                                                             87186800
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 87191100
*  IF POOLTOKN(1)^=''                        /* CHECK FOR NULL */       87195400
*    THEN                                                               87199700
*      DO;                                                              87204000
*        XPOOLTOKN=POOLTOKN(1);              /* SET XVARIABLE */        87208300
*        ZXPOOLTOKN='INPUT';                 /* SET IN/OUTPUT */        87212600
*      END;                                                             87216900
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 87221200
*  IF TRANSLATE(REQUEST(1))                                             87225500
*              = 'DUMP_INFO'                 /* CHECK FOR KEYWORD */    87229800
*    THEN                                                               87234100
*      DO;                                                              87238400
*        XREQUEST='DUMP_INFO';               /* SET XVARIABLE */        87242700
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    87247000
*          THEN                                                         87251300
*            DO;                                                        87255600
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            87259900
*                  REQUEST||                                            87264200
*                  '" "REQUEST"'||                                      87268500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        87272800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           87277100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          87281400
*              ZMACRET=8;                    /* MACRO ERROR */          87285700
*            END;                                                       87290000
*      END;                                                             87294300
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 87298600
*  IF DS_INFO='DS_INFO'                      /* CHECK ENTRY */          87302900
*    THEN                                                               87307200
*      DO;                                                              87311500
*        ZMS=' 8, THE "DS_INFO" KEY'||       /**KOPTP* MSG*/            87315800
*            ' MUST CONTAIN ONE'||                                      87320100
*            ' (OR MORE) ARGUMENT(S).';                                 87324400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87328700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87333000
*        ZMACRET=8;                          /* MACRO ERROR */          87337300
*      END;                                                             87341600
*  IF NUMBER(DS_INFO)>1                      /* CHECK POSITIONALS */    87345900
*    THEN                                                               87350200
*      DO;                                                              87354500
*        ZMS=' 8, "DS_INFO'||                /**KPOSP* MSG*/            87358800
*            DS_INFO||                                                  87363100
*            '" "DS_INFO"'||                                            87367400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87371700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87376000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87380300
*        ZMACRET=8;                          /* MACRO ERROR */          87384600
*      END;                                                             87388900
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 87393200
*  IF DS_INFO(1)^=''                         /* CHECK FOR NULL */       87397500
*    THEN                                                               87401800
*      DO;                                                              87406100
*        XDS_INFO=DS_INFO(1);                /* SET XVARIABLE */        87410400
*        ZXDS_INFO='OUTPUT';                 /* SET IN/OUTPUT */        87414700
*      END;                                                             87419000
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 87423300
*  IF TRANSLATE(REQUEST(1))                                             87427600
*              = 'FIX_BUFFER'                /* CHECK FOR KEYWORD */    87431900
*    THEN                                                               87436200
*      DO;                                                              87440500
*        XREQUEST='FIX_BUFFER';              /* SET XVARIABLE */        87444800
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    87449100
*          THEN                                                         87453400
*            DO;                                                        87457700
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            87462000
*                  REQUEST||                                            87466300
*                  '" "REQUEST"'||                                      87470600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        87474900
*              ANS MSG('?IVTCSM ---> '||ZMS);                           87479200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          87483500
*              ZMACRET=8;                    /* MACRO ERROR */          87487800
*            END;                                                       87492100
*      END;                                                             87496400
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87500700
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    87505000
*    THEN                                                               87509300
*      DO;                                                              87513600
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            87517900
*            BUFLIST||                                                  87522200
*            '" "BUFLIST"'||                                            87526500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87530800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87535100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87539400
*        ZMACRET=8;                          /* MACRO ERROR */          87543700
*      END;                                                             87548000
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 87552300
*  IF BUFLIST(1)^=''                         /* CHECK FOR NULL */       87556600
*    THEN                                                               87560900
*      DO;                                                              87565200
*        XBUFLIST=BUFLIST(1);                /* SET XVARIABLE */        87569500
*        ZXBUFLIST='INPUT';                  /* SET IN/OUTPUT */        87573800
*      END;                                                             87578100
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87582400
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    87586700
*    THEN                                                               87591000
*      DO;                                                              87595300
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            87599600
*            BUFNUM||                                                   87603900
*            '" "BUFNUM"'||                                             87608200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87612500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87616800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87621100
*        ZMACRET=8;                          /* MACRO ERROR */          87625400
*      END;                                                             87629700
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 87634000
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       87638300
*    THEN                                                               87642600
*      DO;                                                              87646900
*        XBUFNUM=BUFNUM(1);                  /* SET XVARIABLE */        87651200
*        ZXBUFNUM='INPUT';                   /* SET IN/OUTPUT */        87655500
*      END;                                                             87659800
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 87664100
*  IF ERRBFLST='ERRBFLST'                    /* CHECK ENTRY */          87668400
*    THEN                                                               87672700
*      DO;                                                              87677000
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            87681300
*            ' MUST CONTAIN ONE'||                                      87685600
*            ' (OR MORE) ARGUMENT(S).';                                 87689900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87694200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87698500
*        ZMACRET=8;                          /* MACRO ERROR */          87702800
*      END;                                                             87707100
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    87711400
*    THEN                                                               87715700
*      DO;                                                              87720000
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            87724300
*            ERRBFLST||                                                 87728600
*            '" "ERRBFLST"'||                                           87732900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87737200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87741500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87745800
*        ZMACRET=8;                          /* MACRO ERROR */          87750100
*      END;                                                             87754400
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 87758700
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       87763000
*    THEN                                                               87767300
*      DO;                                                              87771600
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        87775900
*        ZXERRBFLST='OUTPUT';                /* SET IN/OUTPUT */        87780200
*      END;                                                             87784500
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87788800
*  IF GAP='GAP'                              /* CHECK ENTRY */          87793100
*    THEN                                                               87797400
*      DO;                                                              87801700
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            87806000
*            ' MUST CONTAIN ONE'||                                      87810300
*            ' (OR MORE) ARGUMENT(S).';                                 87814600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87818900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87823200
*        ZMACRET=8;                          /* MACRO ERROR */          87827500
*      END;                                                             87831800
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    87836100
*    THEN                                                               87840400
*      DO;                                                              87844700
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            87849000
*            GAP||                                                      87853300
*            '" "GAP"'||                                                87857600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87861900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87866200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87870500
*        ZMACRET=8;                          /* MACRO ERROR */          87874800
*      END;                                                             87879100
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 87883400
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       87887700
*    THEN                                                               87892000
*      DO;                                                              87896300
*        XGAP=GAP(1);                        /* SET XVARIABLE */        87900600
*        ZXGAP='INPUT';                      /* SET IN/OUTPUT */        87904900
*      END;                                                             87909200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87913500
*  IF THREAD='THREAD'                        /* CHECK ENTRY */          87917800
*    THEN                                                               87922100
*      DO;                                                              87926400
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            87930700
*            ' MUST CONTAIN ONE'||                                      87935000
*            ' (OR MORE) ARGUMENT(S).';                                 87939300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87943600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87947900
*        ZMACRET=8;                          /* MACRO ERROR */          87952200
*      END;                                                             87956500
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    87960800
*    THEN                                                               87965100
*      DO;                                                              87969400
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            87973700
*            THREAD||                                                   87978000
*            '" "THREAD"'||                                             87982300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87986600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 87990900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87995200
*        ZMACRET=8;                          /* MACRO ERROR */          87999500
*      END;                                                             88003800
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 88008100
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       88012400
*    THEN                                                               88016700
*      DO;                                                              88021000
*        XTHREAD=THREAD(1);                  /* SET XVARIABLE */        88025300
*        ZXTHREAD='INPUT';                   /* SET IN/OUTPUT */        88029600
*      END;                                                             88033900
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 88038200
*  IF UTILRTN='UTILRTN'                      /* CHECK ENTRY */          88042500
*    THEN                                                               88046800
*      DO;                                                              88051100
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            88055400
*            ' MUST CONTAIN ONE'||                                      88059700
*            ' (OR MORE) ARGUMENT(S).';                                 88064000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88068300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88072600
*        ZMACRET=8;                          /* MACRO ERROR */          88076900
*      END;                                                             88081200
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    88085500
*    THEN                                                               88089800
*      DO;                                                              88094100
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            88098400
*            UTILRTN||                                                  88102700
*            '" "UTILRTN"'||                                            88107000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88111300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88115600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88119900
*        ZMACRET=8;                          /* MACRO ERROR */          88124200
*      END;                                                             88128500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 88132800
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       88137100
*    THEN                                                               88141400
*      DO;                                                              88145700
*        XUTILRTN=UTILRTN(1);                /* SET XVARIABLE */        88150000
*        ZXUTILRTN='INPUT';                  /* SET IN/OUTPUT */        88154300
*      END;                                                             88158600
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88162900
*  IF WAIT='WAIT'                            /* CHECK ENTRY */          88167200
*    THEN                                                               88171500
*      DO;                                                              88175800
*        ZMS=' 8, THE "WAIT" KEY'||          /**KOPTP* MSG*/            88180100
*            ' MUST CONTAIN ONE'||                                      88184400
*            ' (OR MORE) ARGUMENT(S).';                                 88188700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88193000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88197300
*        ZMACRET=8;                          /* MACRO ERROR */          88201600
*      END;                                                             88205900
*  IF NUMBER(WAIT)>1                         /* CHECK POSITIONALS */    88210200
*    THEN                                                               88214500
*      DO;                                                              88218800
*        ZMS=' 8, "WAIT'||                   /**KPOSP* MSG*/            88223100
*            WAIT||                                                     88227400
*            '" "WAIT"'||                                               88231700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88236000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88240300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88244600
*        ZMACRET=8;                          /* MACRO ERROR */          88248900
*      END;                                                             88253200
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88257500
*  IF WAIT(1) = 'NO'                                                    88261800
*    THEN                                                               88266100
*      XWAIT = 'NO';                         /* SET XVARIABLE */        88270400
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88274700
*  IF WAIT(1) = 'YES'                                                   88279000
*    THEN                                                               88283300
*      XWAIT = 'YES';                        /* SET XVARIABLE */        88287600
*/*PE.KKWRD06 Additional value checks */                                88291900
*  IF WAIT(1) = 'EXPAND'                                                88296200
*    THEN                                                               88300500
*      XWAIT = 'EXPAND';                     /* SET XVARIABLE */        88304800
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88309100
*  IF XWAIT^=''                              /* CHECK FOR KEYWORD */    88313400
*    THEN                                                               88317700
*      ZXWAIT='INPUT';                       /* SET IN/OUTPUT */        88322000
*    ELSE                                                               88326300
*      DO;                                   /* KEYWORD NOT ENTERED */  88330600
*        IF WAIT(1)^=''                                                 88334900
*          THEN                                                         88339200
*            DO;                                                        88343500
*              ZMS=' 8, "WAIT'||             /**KUKWP* MSG*/            88347800
*                  WAIT||'"'||                                          88352100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              88356400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    88360700
*                  ' "NO"'||                 /* VALID KEYWORD */        88365000
*                  ' OR "YES".';             /* VALID KEYWORD */        88369300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           88373600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          88377900
*              ZMACRET=8;                    /* MACRO ERROR */          88382200
*            END;                                                       88386500
*      END;                                                             88390800
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 88395100
*  IF TRANSLATE(REQUEST(1))                                             88399400
*              = 'FREE_BUFFER'               /* CHECK FOR KEYWORD */    88403700
*    THEN                                                               88408000
*      DO;                                                              88412300
*        XREQUEST='FREE_BUFFER';             /* SET XVARIABLE */        88416600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    88420900
*          THEN                                                         88425200
*            DO;                                                        88429500
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            88433800
*                  REQUEST||                                            88438100
*                  '" "REQUEST"'||                                      88442400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        88446700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           88451000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          88455300
*              ZMACRET=8;                    /* MACRO ERROR */          88459600
*            END;                                                       88463900
*      END;                                                             88468200
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 88472500
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    88476800
*    THEN                                                               88481100
*      DO;                                                              88485400
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            88489700
*            BUFLIST||                                                  88494000
*            '" "BUFLIST"'||                                            88498300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88502600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88506900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88511200
*        ZMACRET=8;                          /* MACRO ERROR */          88515500
*      END;                                                             88519800
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 88524100
*  IF BUFLIST(1)^=''                         /* CHECK FOR NULL */       88528400
*    THEN                                                               88532700
*      DO;                                                              88537000
*        XBUFLIST=BUFLIST(1);                /* SET XVARIABLE */        88541300
*        ZXBUFLIST='INPUT';                  /* SET IN/OUTPUT */        88545600
*      END;                                                             88549900
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 88554200
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    88558500
*    THEN                                                               88562800
*      DO;                                                              88567100
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            88571400
*            BUFNUM||                                                   88575700
*            '" "BUFNUM"'||                                             88580000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88584300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88588600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88592900
*        ZMACRET=8;                          /* MACRO ERROR */          88597200
*      END;                                                             88601500
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 88605800
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       88610100
*    THEN                                                               88614400
*      DO;                                                              88618700
*        XBUFNUM=BUFNUM(1);                  /* SET XVARIABLE */        88623000
*        ZXBUFNUM='INPUT';                   /* SET IN/OUTPUT */        88627300
*      END;                                                             88631600
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88635900
*  IF CLEAR='CLEAR'                          /* CHECK ENTRY */          88640200
*    THEN                                                               88644500
*      DO;                                                              88648800
*        ZMS=' 8, THE "CLEAR" KEY'||         /**KOPTP* MSG*/            88653100
*            ' MUST CONTAIN ONE'||                                      88657400
*            ' (OR MORE) ARGUMENT(S).';                                 88661700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88666000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88670300
*        ZMACRET=8;                          /* MACRO ERROR */          88674600
*      END;                                                             88678900
*  IF NUMBER(CLEAR)>1                        /* CHECK POSITIONALS */    88683200
*    THEN                                                               88687500
*      DO;                                                              88691800
*        ZMS=' 8, "CLEAR'||                  /**KPOSP* MSG*/            88696100
*            CLEAR||                                                    88700400
*            '" "CLEAR"'||                                              88704700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88709000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88713300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88717600
*        ZMACRET=8;                          /* MACRO ERROR */          88721900
*      END;                                                             88726200
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88730500
*  IF CLEAR(1) = 'NO'                                                   88734800
*    THEN                                                               88739100
*      XCLEAR = 'NO';                        /* SET XVARIABLE */        88743400
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88747700
*  IF CLEAR(1) = 'YES'                                                  88752000
*    THEN                                                               88756300
*      XCLEAR = 'YES';                       /* SET XVARIABLE */        88760600
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88764900
*  IF XCLEAR^=''                             /* CHECK FOR KEYWORD */    88769200
*    THEN                                                               88773500
*      ZXCLEAR='INPUT';                      /* SET IN/OUTPUT */        88777800
*    ELSE                                                               88782100
*      DO;                                   /* KEYWORD NOT ENTERED */  88786400
*        IF CLEAR(1)^=''                                                88790700
*          THEN                                                         88795000
*            DO;                                                        88799300
*              ZMS=' 8, "CLEAR'||            /**KUKWP* MSG*/            88803600
*                  CLEAR||'"'||                                         88807900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              88812200
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    88816500
*                  ' "NO"'||                 /* VALID KEYWORD */        88820800
*                  ' OR "YES".';             /* VALID KEYWORD */        88825100
*              ANS MSG('?IVTCSM ---> '||ZMS);                           88829400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          88833700
*              ZMACRET=8;                    /* MACRO ERROR */          88838000
*            END;                                                       88842300
*      END;                                                             88846600
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 88850900
*  IF ERRBFLST='ERRBFLST'                    /* CHECK ENTRY */          88855200
*    THEN                                                               88859500
*      DO;                                                              88863800
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            88868100
*            ' MUST CONTAIN ONE'||                                      88872400
*            ' (OR MORE) ARGUMENT(S).';                                 88876700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88881000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88885300
*        ZMACRET=8;                          /* MACRO ERROR */          88889600
*      END;                                                             88893900
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    88898200
*    THEN                                                               88902500
*      DO;                                                              88906800
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            88911100
*            ERRBFLST||                                                 88915400
*            '" "ERRBFLST"'||                                           88919700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88924000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 88928300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88932600
*        ZMACRET=8;                          /* MACRO ERROR */          88936900
*      END;                                                             88941200
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 88945500
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       88949800
*    THEN                                                               88954100
*      DO;                                                              88958400
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        88962700
*        ZXERRBFLST='OUTPUT';                /* SET IN/OUTPUT */        88967000
*      END;                                                             88971300
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 88975600
*  IF FREETO='FREETO'                        /* CHECK ENTRY */          88979900
*    THEN                                                               88984200
*      DO;                                                              88988500
*        ZMS=' 8, THE "FREETO" KEY'||        /**KOPTP* MSG*/            88992800
*            ' MUST CONTAIN ONE'||                                      88997100
*            ' (OR MORE) ARGUMENT(S).';                                 89001400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89005700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89010000
*        ZMACRET=8;                          /* MACRO ERROR */          89014300
*      END;                                                             89018600
*  IF NUMBER(FREETO)>1                       /* CHECK POSITIONALS */    89022900
*    THEN                                                               89027200
*      DO;                                                              89031500
*        ZMS=' 8, "FREETO'||                 /**KPOSP* MSG*/            89035800
*            FREETO||                                                   89040100
*            '" "FREETO"'||                                             89044400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89048700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89053000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89057300
*        ZMACRET=8;                          /* MACRO ERROR */          89061600
*      END;                                                             89065900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89070200
*  IF FREETO(1) = 'USER'                                                89074500
*    THEN                                                               89078800
*      XFREETO = 'USER';                     /* SET XVARIABLE */        89083100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89087400
*  IF FREETO(1) = 'CSM'                                                 89091700
*    THEN                                                               89096000
*      XFREETO = 'CSM';                      /* SET XVARIABLE */        89100300
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89104600
*  IF XFREETO^=''                            /* CHECK FOR KEYWORD */    89108900
*    THEN                                                               89113200
*      ZXFREETO='INPUT';                     /* SET IN/OUTPUT */        89117500
*    ELSE                                                               89121800
*      DO;                                   /* KEYWORD NOT ENTERED */  89126100
*        IF FREETO(1)^=''                                               89130400
*          THEN                                                         89134700
*            DO;                                                        89139000
*              ZMS=' 8, "FREETO'||           /**KUKWP* MSG*/            89143300
*                  FREETO||'"'||                                        89147600
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              89151900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    89156200
*                  ' "USER"'||               /* VALID KEYWORD */        89160500
*                  ' OR "CSM".';             /* VALID KEYWORD */        89164800
*              ANS MSG('?IVTCSM ---> '||ZMS);                           89169100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          89173400
*              ZMACRET=8;                    /* MACRO ERROR */          89177700
*            END;                                                       89182000
*      END;                                                             89186300
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 89190600
*  IF GAP='GAP'                              /* CHECK ENTRY */          89194900
*    THEN                                                               89199200
*      DO;                                                              89203500
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            89207800
*            ' MUST CONTAIN ONE'||                                      89212100
*            ' (OR MORE) ARGUMENT(S).';                                 89216400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89220700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89225000
*        ZMACRET=8;                          /* MACRO ERROR */          89229300
*      END;                                                             89233600
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    89237900
*    THEN                                                               89242200
*      DO;                                                              89246500
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            89250800
*            GAP||                                                      89255100
*            '" "GAP"'||                                                89259400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89263700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89268000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89272300
*        ZMACRET=8;                          /* MACRO ERROR */          89276600
*      END;                                                             89280900
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 89285200
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       89289500
*    THEN                                                               89293800
*      DO;                                                              89298100
*        XGAP=GAP(1);                        /* SET XVARIABLE */        89302400
*        ZXGAP='INPUT';                      /* SET IN/OUTPUT */        89306700
*      END;                                                             89311000
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89315300
*  IF SKIPBUF='SKIPBUF'                      /* CHECK ENTRY */          89319600
*    THEN                                                               89323900
*      DO;                                                              89328200
*        ZMS=' 8, THE "SKIPBUF" KEY'||       /**KOPTP* MSG*/            89332500
*            ' MUST CONTAIN ONE'||                                      89336800
*            ' (OR MORE) ARGUMENT(S).';                                 89341100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89345400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89349700
*        ZMACRET=8;                          /* MACRO ERROR */          89354000
*      END;                                                             89358300
*  IF NUMBER(SKIPBUF)>1                      /* CHECK POSITIONALS */    89362600
*    THEN                                                               89366900
*      DO;                                                              89371200
*        ZMS=' 8, "SKIPBUF'||                /**KPOSP* MSG*/            89375500
*            SKIPBUF||                                                  89379800
*            '" "SKIPBUF"'||                                            89384100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89388400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89392700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89397000
*        ZMACRET=8;                          /* MACRO ERROR */          89401300
*      END;                                                             89405600
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89409900
*  IF SKIPBUF(1) = 'NO'                                                 89414200
*    THEN                                                               89418500
*      XSKIPBUF = 'NO';                      /* SET XVARIABLE */        89422800
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89427100
*  IF SKIPBUF(1) = 'YES'                                                89431400
*    THEN                                                               89435700
*      XSKIPBUF = 'YES';                     /* SET XVARIABLE */        89440000
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89444300
*  IF XSKIPBUF^=''                           /* CHECK FOR KEYWORD */    89448600
*    THEN                                                               89452900
*      ZXSKIPBUF='INPUT';                    /* SET IN/OUTPUT */        89457200
*    ELSE                                                               89461500
*      DO;                                   /* KEYWORD NOT ENTERED */  89465800
*        IF SKIPBUF(1)^=''                                              89470100
*          THEN                                                         89474400
*            DO;                                                        89478700
*              ZMS=' 8, "SKIPBUF'||          /**KUKWP* MSG*/            89483000
*                  SKIPBUF||'"'||                                       89487300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              89491600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    89495900
*                  ' "NO"'||                 /* VALID KEYWORD */        89500200
*                  ' OR "YES".';             /* VALID KEYWORD */        89504500
*              ANS MSG('?IVTCSM ---> '||ZMS);                           89508800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          89513100
*              ZMACRET=8;                    /* MACRO ERROR */          89517400
*            END;                                                       89521700
*      END;                                                             89526000
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 89530300
*  IF THREAD='THREAD'                        /* CHECK ENTRY */          89534600
*    THEN                                                               89538900
*      DO;                                                              89543200
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            89547500
*            ' MUST CONTAIN ONE'||                                      89551800
*            ' (OR MORE) ARGUMENT(S).';                                 89556100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89560400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89564700
*        ZMACRET=8;                          /* MACRO ERROR */          89569000
*      END;                                                             89573300
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    89577600
*    THEN                                                               89581900
*      DO;                                                              89586200
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            89590500
*            THREAD||                                                   89594800
*            '" "THREAD"'||                                             89599100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89603400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89607700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89612000
*        ZMACRET=8;                          /* MACRO ERROR */          89616300
*      END;                                                             89620600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 89624900
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       89629200
*    THEN                                                               89633500
*      DO;                                                              89637800
*        XTHREAD=THREAD(1);                  /* SET XVARIABLE */        89642100
*        ZXTHREAD='INPUT';                   /* SET IN/OUTPUT */        89646400
*      END;                                                             89650700
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 89655000
*  IF UTILRTN='UTILRTN'                      /* CHECK ENTRY */          89659300
*    THEN                                                               89663600
*      DO;                                                              89667900
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            89672200
*            ' MUST CONTAIN ONE'||                                      89676500
*            ' (OR MORE) ARGUMENT(S).';                                 89680800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89685100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89689400
*        ZMACRET=8;                          /* MACRO ERROR */          89693700
*      END;                                                             89698000
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    89702300
*    THEN                                                               89706600
*      DO;                                                              89710900
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            89715200
*            UTILRTN||                                                  89719500
*            '" "UTILRTN"'||                                            89723800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89728100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89732400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89736700
*        ZMACRET=8;                          /* MACRO ERROR */          89741000
*      END;                                                             89745300
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 89749600
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       89753900
*    THEN                                                               89758200
*      DO;                                                              89762500
*        XUTILRTN=UTILRTN(1);                /* SET XVARIABLE */        89766800
*        ZXUTILRTN='INPUT';                  /* SET IN/OUTPUT */        89771100
*      END;                                                             89775400
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 89779700
*  IF TRANSLATE(REQUEST(1))                                             89784000
*              = 'GET_BUFFER'                /* CHECK FOR KEYWORD */    89788300
*    THEN                                                               89792600
*      DO;                                                              89796900
*        XREQUEST='GET_BUFFER';              /* SET XVARIABLE */        89801200
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    89805500
*          THEN                                                         89809800
*            DO;                                                        89814100
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            89818400
*                  REQUEST||                                            89822700
*                  '" "REQUEST"'||                                      89827000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        89831300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           89835600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          89839900
*              ZMACRET=8;                    /* MACRO ERROR */          89844200
*            END;                                                       89848500
*      END;                                                             89852800
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 89857100
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    89861400
*    THEN                                                               89865700
*      DO;                                                              89870000
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            89874300
*            BUFLIST||                                                  89878600
*            '" "BUFLIST"'||                                            89882900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89887200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89891500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89895800
*        ZMACRET=8;                          /* MACRO ERROR */          89900100
*      END;                                                             89904400
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 89908700
*  IF BUFLIST(1)^=''                         /* CHECK FOR NULL */       89913000
*    THEN                                                               89917300
*      DO;                                                              89921600
*        XBUFLIST=BUFLIST(1);                /* SET XVARIABLE */        89925900
*        ZXBUFLIST='INPUT';                  /* SET IN/OUTPUT */        89930200
*      END;                                                             89934500
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 89938800
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    89943100
*    THEN                                                               89947400
*      DO;                                                              89951700
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            89956000
*            BUFNUM||                                                   89960300
*            '" "BUFNUM"'||                                             89964600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89968900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 89973200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89977500
*        ZMACRET=8;                          /* MACRO ERROR */          89981800
*      END;                                                             89986100
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 89990400
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       89994700
*    THEN                                                               89999000
*      DO;                                                              90003300
*        XBUFNUM=BUFNUM(1);                  /* SET XVARIABLE */        90007600
*        ZXBUFNUM='INPUT';                   /* SET IN/OUTPUT */        90011900
*      END;                                                             90016200
*/*PE.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90020500
*  IF NUMBER(BUFTYPE)>1                      /* CHECK POSITIONALS */    90024800
*    THEN                                                               90029100
*      DO;                                                              90033400
*        ZMS=' 8, "BUFTYPE'||                /**KPOSP* MSG*/            90037700
*            BUFTYPE||                                                  90042000
*            '" "BUFTYPE"'||                                            90046300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              90050600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90054900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90059200
*        ZMACRET=8;                          /* MACRO ERROR */          90063500
*      END;                                                             90067800
*/*PE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90072100
*  IF BUFTYPE(1) = 'PAGEELIG'                                           90076400
*    THEN                                                               90080700
*      XBUFTYPE = 'PAGEELIG';                /* SET XVARIABLE */        90085000
*/*PE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90089300
*  IF BUFTYPE(1) = 'PAGEABLE'                                           90093600
*    THEN                                                               90097900
*      XBUFTYPE = 'PAGEABLE';                /* SET XVARIABLE */        90102200
*/*PE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90106500
*  IF BUFTYPE(1) = 'FIXED'                                              90110800
*    THEN                                                               90115100
*      XBUFTYPE = 'FIXED';                   /* SET XVARIABLE */        90119400
*/*PE.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90123700
*  IF XBUFTYPE^=''                           /* CHECK FOR KEYWORD */    90128000
*    THEN                                                               90132300
*      ZXBUFTYPE='INPUT';                    /* SET IN/OUTPUT */        90136600
*    ELSE                                                               90140900
*      DO;                                   /* KEYWORD NOT ENTERED */  90145200
*        IF BUFTYPE(1)^=''                                              90149500
*          THEN                                                         90153800
*            DO;                                                        90158100
*              ZMS=' 8, "BUFTYPE'||          /**KUKWP* MSG*/            90162400
*                  BUFTYPE||'"'||                                       90166700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              90171000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    90175300
*                  ' "PAGEELIG",'||          /* VALID KEYWORD */        90179600
*                  ' "PAGEABLE",'||          /* VALID KEYWORD */        90183900
*                  ' OR "FIXED".';           /* VALID KEYWORD */        90188200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           90192500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          90196800
*              ZMACRET=8;                    /* MACRO ERROR */          90201100
*            END;                                                       90205400
*      END;                                                             90209700
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90214000
*  IF CLEAR='CLEAR'                          /* CHECK ENTRY */          90218300
*    THEN                                                               90222600
*      DO;                                                              90226900
*        ZMS=' 8, THE "CLEAR" KEY'||         /**KOPTP* MSG*/            90231200
*            ' MUST CONTAIN ONE'||                                      90235500
*            ' (OR MORE) ARGUMENT(S).';                                 90239800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90244100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90248400
*        ZMACRET=8;                          /* MACRO ERROR */          90252700
*      END;                                                             90257000
*  IF NUMBER(CLEAR)>1                        /* CHECK POSITIONALS */    90261300
*    THEN                                                               90265600
*      DO;                                                              90269900
*        ZMS=' 8, "CLEAR'||                  /**KPOSP* MSG*/            90274200
*            CLEAR||                                                    90278500
*            '" "CLEAR"'||                                              90282800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              90287100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90291400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90295700
*        ZMACRET=8;                          /* MACRO ERROR */          90300000
*      END;                                                             90304300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90308600
*  IF CLEAR(1) = 'NO'                                                   90312900
*    THEN                                                               90317200
*      XCLEAR = 'NO';                        /* SET XVARIABLE */        90321500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90325800
*  IF CLEAR(1) = 'YES'                                                  90330100
*    THEN                                                               90334400
*      XCLEAR = 'YES';                       /* SET XVARIABLE */        90338700
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90343000
*  IF XCLEAR^=''                             /* CHECK FOR KEYWORD */    90347300
*    THEN                                                               90351600
*      ZXCLEAR='INPUT';                      /* SET IN/OUTPUT */        90355900
*    ELSE                                                               90360200
*      DO;                                   /* KEYWORD NOT ENTERED */  90364500
*        IF CLEAR(1)^=''                                                90368800
*          THEN                                                         90373100
*            DO;                                                        90377400
*              ZMS=' 8, "CLEAR'||            /**KUKWP* MSG*/            90381700
*                  CLEAR||'"'||                                         90386000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              90390300
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    90394600
*                  ' "NO"'||                 /* VALID KEYWORD */        90398900
*                  ' OR "YES".';             /* VALID KEYWORD */        90403200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           90407500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          90411800
*              ZMACRET=8;                    /* MACRO ERROR */          90416100
*            END;                                                       90420400
*      END;                                                             90424700
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90429000
*  IF CSMUSER='CSMUSER'                      /* CHECK ENTRY */          90433300
*    THEN                                                               90437600
*      DO;                                                              90441900
*        ZMS=' 8, THE "CSMUSER" KEY'||       /**KOPTP* MSG*/            90446200
*            ' MUST CONTAIN ONE'||                                      90450500
*            ' (OR MORE) ARGUMENT(S).';                                 90454800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90459100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90463400
*        ZMACRET=8;                          /* MACRO ERROR */          90467700
*      END;                                                             90472000
*  IF NUMBER(CSMUSER)>1                      /* CHECK POSITIONALS */    90476300
*    THEN                                                               90480600
*      DO;                                                              90484900
*        ZMS=' 8, "CSMUSER'||                /**KPOSP* MSG*/            90489200
*            CSMUSER||                                                  90493500
*            '" "CSMUSER"'||                                            90497800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              90502100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90506400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90510700
*        ZMACRET=8;                          /* MACRO ERROR */          90515000
*      END;                                                             90519300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90523600
*  IF CSMUSER(1) = 'NO'                                                 90527900
*    THEN                                                               90532200
*      XCSMUSER = 'NO';                      /* SET XVARIABLE */        90536500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90540800
*  IF CSMUSER(1) = 'YES'                                                90545100
*    THEN                                                               90549400
*      XCSMUSER = 'YES';                     /* SET XVARIABLE */        90553700
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90558000
*  IF XCSMUSER^=''                           /* CHECK FOR KEYWORD */    90562300
*    THEN                                                               90566600
*      ZXCSMUSER='INPUT';                    /* SET IN/OUTPUT */        90570900
*    ELSE                                                               90575200
*      DO;                                   /* KEYWORD NOT ENTERED */  90579500
*        IF CSMUSER(1)^=''                                              90583800
*          THEN                                                         90588100
*            DO;                                                        90592400
*              ZMS=' 8, "CSMUSER'||          /**KUKWP* MSG*/            90596700
*                  CSMUSER||'"'||                                       90601000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              90605300
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    90609600
*                  ' "NO"'||                 /* VALID KEYWORD */        90613900
*                  ' OR "YES".';             /* VALID KEYWORD */        90618200
*              ANS MSG('?IVTCSM ---> '||ZMS);                           90622500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          90626800
*              ZMACRET=8;                    /* MACRO ERROR */          90631100
*            END;                                                       90635400
*      END;                                                             90639700
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 90644000
*  IF ERRBFLST='ERRBFLST'                    /* CHECK ENTRY */          90648300
*    THEN                                                               90652600
*      DO;                                                              90656900
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            90661200
*            ' MUST CONTAIN ONE'||                                      90665500
*            ' (OR MORE) ARGUMENT(S).';                                 90669800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90674100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90678400
*        ZMACRET=8;                          /* MACRO ERROR */          90682700
*      END;                                                             90687000
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    90691300
*    THEN                                                               90695600
*      DO;                                                              90699900
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            90704200
*            ERRBFLST||                                                 90708500
*            '" "ERRBFLST"'||                                           90712800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              90717100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90721400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90725700
*        ZMACRET=8;                          /* MACRO ERROR */          90730000
*      END;                                                             90734300
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 90738600
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       90742900
*    THEN                                                               90747200
*      DO;                                                              90751500
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        90755800
*        ZXERRBFLST='OUTPUT';                /* SET IN/OUTPUT */        90760100
*      END;                                                             90764400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 90768700
*  IF FREERTN='FREERTN'                      /* CHECK ENTRY */          90773000
*    THEN                                                               90777300
*      DO;                                                              90781600
*        ZMS=' 8, THE "FREERTN" KEY'||       /**KOPTP* MSG*/            90785900
*            ' MUST CONTAIN ONE'||                                      90790200
*            ' (OR MORE) ARGUMENT(S).';                                 90794500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90798800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90803100
*        ZMACRET=8;                          /* MACRO ERROR */          90807400
*      END;                                                             90811700
*  IF NUMBER(FREERTN)>1                      /* CHECK POSITIONALS */    90816000
*    THEN                                                               90820300
*      DO;                                                              90824600
*        ZMS=' 8, "FREERTN'||                /**KPOSP* MSG*/            90828900
*            FREERTN||                                                  90833200
*            '" "FREERTN"'||                                            90837500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              90841800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90846100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90850400
*        ZMACRET=8;                          /* MACRO ERROR */          90854700
*      END;                                                             90859000
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 90863300
*  IF FREERTN(1)^=''                         /* CHECK FOR NULL */       90867600
*    THEN                                                               90871900
*      DO;                                                              90876200
*        XFREERTN=FREERTN(1);                /* SET XVARIABLE */        90880500
*        ZXFREERTN='INPUT';                  /* SET IN/OUTPUT */        90884800
*      END;                                                             90889100
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 90893400
*  IF GAP='GAP'                              /* CHECK ENTRY */          90897700
*    THEN                                                               90902000
*      DO;                                                              90906300
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            90910600
*            ' MUST CONTAIN ONE'||                                      90914900
*            ' (OR MORE) ARGUMENT(S).';                                 90919200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90923500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90927800
*        ZMACRET=8;                          /* MACRO ERROR */          90932100
*      END;                                                             90936400
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    90940700
*    THEN                                                               90945000
*      DO;                                                              90949300
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            90953600
*            GAP||                                                      90957900
*            '" "GAP"'||                                                90962200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              90966500
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 90970800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90975100
*        ZMACRET=8;                          /* MACRO ERROR */          90979400
*      END;                                                             90983700
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 90988000
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       90992300
*    THEN                                                               90996600
*      DO;                                                              91000900
*        XGAP=GAP(1);                        /* SET XVARIABLE */        91005200
*        ZXGAP='INPUT';                      /* SET IN/OUTPUT */        91009500
*      END;                                                             91013800
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 91018100
*  IF OWNERID='OWNERID'                      /* CHECK ENTRY */          91022400
*    THEN                                                               91026700
*      DO;                                                              91031000
*        ZMS=' 8, THE "OWNERID" KEY'||       /**KOPTP* MSG*/            91035300
*            ' MUST CONTAIN ONE'||                                      91039600
*            ' (OR MORE) ARGUMENT(S).';                                 91043900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91048200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91052500
*        ZMACRET=8;                          /* MACRO ERROR */          91056800
*      END;                                                             91061100
*  IF NUMBER(OWNERID)>1                      /* CHECK POSITIONALS */    91065400
*    THEN                                                               91069700
*      DO;                                                              91074000
*        ZMS=' 8, "OWNERID'||                /**KPOSP* MSG*/            91078300
*            OWNERID||                                                  91082600
*            '" "OWNERID"'||                                            91086900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              91091200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91095500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91099800
*        ZMACRET=8;                          /* MACRO ERROR */          91104100
*      END;                                                             91108400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 91112700
*  IF OWNERID(1)^=''                         /* CHECK FOR NULL */       91117000
*    THEN                                                               91121300
*      DO;                                                              91125600
*        XOWNERID=OWNERID(1);                /* SET XVARIABLE */        91129900
*        ZXOWNERID='INPUT';                  /* SET IN/OUTPUT */        91134200
*      END;                                                             91138500
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 91142800
*  IF NUMBER(POOLTOKN)>1                     /* CHECK POSITIONALS */    91147100
*    THEN                                                               91151400
*      DO;                                                              91155700
*        ZMS=' 8, "POOLTOKN'||               /**KPOSP* MSG*/            91160000
*            POOLTOKN||                                                 91164300
*            '" "POOLTOKN"'||                                           91168600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              91172900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91177200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91181500
*        ZMACRET=8;                          /* MACRO ERROR */          91185800
*      END;                                                             91190100
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 91194400
*  IF POOLTOKN(1)^=''                        /* CHECK FOR NULL */       91198700
*    THEN                                                               91203000
*      DO;                                                              91207300
*        XPOOLTOKN=POOLTOKN(1);              /* SET XVARIABLE */        91211600
*        ZXPOOLTOKN='INPUT';                 /* SET IN/OUTPUT */        91215900
*      END;                                                             91220200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 91224500
*  IF TASKID='TASKID'                        /* CHECK ENTRY */          91228800
*    THEN                                                               91233100
*      DO;                                                              91237400
*        ZMS=' 8, THE "TASKID" KEY'||        /**KOPTP* MSG*/            91241700
*            ' MUST CONTAIN ONE'||                                      91246000
*            ' (OR MORE) ARGUMENT(S).';                                 91250300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91254600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91258900
*        ZMACRET=8;                          /* MACRO ERROR */          91263200
*      END;                                                             91267500
*  IF NUMBER(TASKID)>1                       /* CHECK POSITIONALS */    91271800
*    THEN                                                               91276100
*      DO;                                                              91280400
*        ZMS=' 8, "TASKID'||                 /**KPOSP* MSG*/            91284700
*            TASKID||                                                   91289000
*            '" "TASKID"'||                                             91293300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              91297600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91301900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91306200
*        ZMACRET=8;                          /* MACRO ERROR */          91310500
*      END;                                                             91314800
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 91319100
*  IF TASKID(1)^=''                          /* CHECK FOR NULL */       91323400
*    THEN                                                               91327700
*      DO;                                                              91332000
*        XTASKID=TASKID(1);                  /* SET XVARIABLE */        91336300
*        ZXTASKID='INPUT';                   /* SET IN/OUTPUT */        91340600
*      END;                                                             91344900
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 91349200
*  IF THREAD='THREAD'                        /* CHECK ENTRY */          91353500
*    THEN                                                               91357800
*      DO;                                                              91362100
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            91366400
*            ' MUST CONTAIN ONE'||                                      91370700
*            ' (OR MORE) ARGUMENT(S).';                                 91375000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91379300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91383600
*        ZMACRET=8;                          /* MACRO ERROR */          91387900
*      END;                                                             91392200
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    91396500
*    THEN                                                               91400800
*      DO;                                                              91405100
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            91409400
*            THREAD||                                                   91413700
*            '" "THREAD"'||                                             91418000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              91422300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91426600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91430900
*        ZMACRET=8;                          /* MACRO ERROR */          91435200
*      END;                                                             91439500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 91443800
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       91448100
*    THEN                                                               91452400
*      DO;                                                              91456700
*        XTHREAD=THREAD(1);                  /* SET XVARIABLE */        91461000
*        ZXTHREAD='INPUT';                   /* SET IN/OUTPUT */        91465300
*      END;                                                             91469600
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 91473900
*  IF UTILRTN='UTILRTN'                      /* CHECK ENTRY */          91478200
*    THEN                                                               91482500
*      DO;                                                              91486800
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            91491100
*            ' MUST CONTAIN ONE'||                                      91495400
*            ' (OR MORE) ARGUMENT(S).';                                 91499700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91504000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91508300
*        ZMACRET=8;                          /* MACRO ERROR */          91512600
*      END;                                                             91516900
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    91521200
*    THEN                                                               91525500
*      DO;                                                              91529800
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            91534100
*            UTILRTN||                                                  91538400
*            '" "UTILRTN"'||                                            91542700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              91547000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91551300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91555600
*        ZMACRET=8;                          /* MACRO ERROR */          91559900
*      END;                                                             91564200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 91568500
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       91572800
*    THEN                                                               91577100
*      DO;                                                              91581400
*        XUTILRTN=UTILRTN(1);                /* SET XVARIABLE */        91585700
*        ZXUTILRTN='INPUT';                  /* SET IN/OUTPUT */        91590000
*      END;                                                             91594300
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91598600
*  IF WAIT='WAIT'                            /* CHECK ENTRY */          91602900
*    THEN                                                               91607200
*      DO;                                                              91611500
*        ZMS=' 8, THE "WAIT" KEY'||          /**KOPTP* MSG*/            91615800
*            ' MUST CONTAIN ONE'||                                      91620100
*            ' (OR MORE) ARGUMENT(S).';                                 91624400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91628700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91633000
*        ZMACRET=8;                          /* MACRO ERROR */          91637300
*      END;                                                             91641600
*  IF NUMBER(WAIT)>1                         /* CHECK POSITIONALS */    91645900
*    THEN                                                               91650200
*      DO;                                                              91654500
*        ZMS=' 8, "WAIT'||                   /**KPOSP* MSG*/            91658800
*            WAIT||                                                     91663100
*            '" "WAIT"'||                                               91667400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              91671700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91676000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91680300
*        ZMACRET=8;                          /* MACRO ERROR */          91684600
*      END;                                                             91688900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91693200
*  IF WAIT(1) = 'NO'                                                    91697500
*    THEN                                                               91701800
*      XWAIT = 'NO';                         /* SET XVARIABLE */        91706100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91710400
*  IF WAIT(1) = 'YES'                                                   91714700
*    THEN                                                               91719000
*      XWAIT = 'YES';                        /* SET XVARIABLE */        91723300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91727600
*  IF WAIT(1) = 'EXPAND'                                                91731900
*    THEN                                                               91736200
*      XWAIT = 'EXPAND';                     /* SET XVARIABLE */        91740500
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91744800
*  IF XWAIT^=''                              /* CHECK FOR KEYWORD */    91749100
*    THEN                                                               91753400
*      ZXWAIT='INPUT';                       /* SET IN/OUTPUT */        91757700
*    ELSE                                                               91762000
*      DO;                                   /* KEYWORD NOT ENTERED */  91766300
*        IF WAIT(1)^=''                                                 91770600
*          THEN                                                         91774900
*            DO;                                                        91779200
*              ZMS=' 8, "WAIT'||             /**KUKWP* MSG*/            91783500
*                  WAIT||'"'||                                          91787800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              91792100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    91796400
*                  ' "NO",'||                /* VALID KEYWORD */        91800700
*                  ' "YES",'||               /* VALID KEYWORD */        91805000
*                  ' OR "EXPAND".';          /* VALID KEYWORD */        91809300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           91813600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          91817900
*              ZMACRET=8;                    /* MACRO ERROR */          91822200
*            END;                                                       91826500
*      END;                                                             91830800
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 91835100
*  IF TRANSLATE(REQUEST(1))                                             91839400
*              = 'PAGE_BUFFER'               /* CHECK FOR KEYWORD */    91843700
*    THEN                                                               91848000
*      DO;                                                              91852300
*        XREQUEST='PAGE_BUFFER';             /* SET XVARIABLE */        91856600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    91860900
*          THEN                                                         91865200
*            DO;                                                        91869500
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            91873800
*                  REQUEST||                                            91878100
*                  '" "REQUEST"'||                                      91882400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        91886700
*              ANS MSG('?IVTCSM ---> '||ZMS);                           91891000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          91895300
*              ZMACRET=8;                    /* MACRO ERROR */          91899600
*            END;                                                       91903900
*      END;                                                             91908200
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 91912500
*  IF NUMBER(BUFLIST)>1                      /* CHECK POSITIONALS */    91916800
*    THEN                                                               91921100
*      DO;                                                              91925400
*        ZMS=' 8, "BUFLIST'||                /**KPOSP* MSG*/            91929700
*            BUFLIST||                                                  91934000
*            '" "BUFLIST"'||                                            91938300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              91942600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 91946900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                91951200
*        ZMACRET=8;                          /* MACRO ERROR */          91955500
*      END;                                                             91959800
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 91964100
*  IF BUFLIST(1)^=''                         /* CHECK FOR NULL */       91968400
*    THEN                                                               91972700
*      DO;                                                              91977000
*        XBUFLIST=BUFLIST(1);                /* SET XVARIABLE */        91981300
*        ZXBUFLIST='INPUT';                  /* SET IN/OUTPUT */        91985600
*      END;                                                             91989900
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 91994200
*  IF NUMBER(BUFNUM)>1                       /* CHECK POSITIONALS */    91998500
*    THEN                                                               92002800
*      DO;                                                              92007100
*        ZMS=' 8, "BUFNUM'||                 /**KPOSP* MSG*/            92011400
*            BUFNUM||                                                   92015700
*            '" "BUFNUM"'||                                             92020000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92024300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92028600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92032900
*        ZMACRET=8;                          /* MACRO ERROR */          92037200
*      END;                                                             92041500
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 92045800
*  IF BUFNUM(1)^=''                          /* CHECK FOR NULL */       92050100
*    THEN                                                               92054400
*      DO;                                                              92058700
*        XBUFNUM=BUFNUM(1);                  /* SET XVARIABLE */        92063000
*        ZXBUFNUM='INPUT';                   /* SET IN/OUTPUT */        92067300
*      END;                                                             92071600
*/*PE.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92075900
*  IF NUMBER(BUFTYPE)>1                      /* CHECK POSITIONALS */    92080200
*    THEN                                                               92084500
*      DO;                                                              92088800
*        ZMS=' 8, "BUFTYPE'||                /**KPOSP* MSG*/            92093100
*            BUFTYPE||                                                  92097400
*            '" "BUFTYPE"'||                                            92101700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92106000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92110300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92114600
*        ZMACRET=8;                          /* MACRO ERROR */          92118900
*      END;                                                             92123200
*/*PE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92127500
*  IF BUFTYPE(1) = 'PAGEELIG'                                           92131800
*    THEN                                                               92136100
*      XBUFTYPE = 'PAGEELIG';                /* SET XVARIABLE */        92140400
*/*PE.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92144700
*  IF BUFTYPE(1) = 'PAGEABLE'                                           92149000
*    THEN                                                               92153300
*      XBUFTYPE = 'PAGEABLE';                /* SET XVARIABLE */        92157600
*/*PE.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92161900
*  IF XBUFTYPE^=''                           /* CHECK FOR KEYWORD */    92166200
*    THEN                                                               92170500
*      ZXBUFTYPE='INPUT';                    /* SET IN/OUTPUT */        92174800
*    ELSE                                                               92179100
*      DO;                                   /* KEYWORD NOT ENTERED */  92183400
*        IF BUFTYPE(1)^=''                                              92187700
*          THEN                                                         92192000
*            DO;                                                        92196300
*              ZMS=' 8, "BUFTYPE'||          /**KUKWP* MSG*/            92200600
*                  BUFTYPE||'"'||                                       92204900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              92209200
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    92213500
*                  ' "PAGEELIG"'||           /* VALID KEYWORD */        92217800
*                  ' OR "PAGEABLE".';        /* VALID KEYWORD */        92222100
*              ANS MSG('?IVTCSM ---> '||ZMS);                           92226400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          92230700
*              ZMACRET=8;                    /* MACRO ERROR */          92235000
*            END;                                                       92239300
*      END;                                                             92243600
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 92247900
*  IF GAP='GAP'                              /* CHECK ENTRY */          92252200
*    THEN                                                               92256500
*      DO;                                                              92260800
*        ZMS=' 8, THE "GAP" KEY'||           /**KOPTP* MSG*/            92265100
*            ' MUST CONTAIN ONE'||                                      92269400
*            ' (OR MORE) ARGUMENT(S).';                                 92273700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92278000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92282300
*        ZMACRET=8;                          /* MACRO ERROR */          92286600
*      END;                                                             92290900
*  IF NUMBER(GAP)>1                          /* CHECK POSITIONALS */    92295200
*    THEN                                                               92299500
*      DO;                                                              92303800
*        ZMS=' 8, "GAP'||                    /**KPOSP* MSG*/            92308100
*            GAP||                                                      92312400
*            '" "GAP"'||                                                92316700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92321000
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92325300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92329600
*        ZMACRET=8;                          /* MACRO ERROR */          92333900
*      END;                                                             92338200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 92342500
*  IF GAP(1)^=''                             /* CHECK FOR NULL */       92346800
*    THEN                                                               92351100
*      DO;                                                              92355400
*        XGAP=GAP(1);                        /* SET XVARIABLE */        92359700
*        ZXGAP='INPUT';                      /* SET IN/OUTPUT */        92364000
*      END;                                                             92368300
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 92372600
*  IF ERRBFLST='ERRBFLST'                    /* CHECK ENTRY */          92376900
*    THEN                                                               92381200
*      DO;                                                              92385500
*        ZMS=' 8, THE "ERRBFLST" KEY'||      /**KOPTP* MSG*/            92389800
*            ' MUST CONTAIN ONE'||                                      92394100
*            ' (OR MORE) ARGUMENT(S).';                                 92398400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92402700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92407000
*        ZMACRET=8;                          /* MACRO ERROR */          92411300
*      END;                                                             92415600
*  IF NUMBER(ERRBFLST)>1                     /* CHECK POSITIONALS */    92419900
*    THEN                                                               92424200
*      DO;                                                              92428500
*        ZMS=' 8, "ERRBFLST'||               /**KPOSP* MSG*/            92432800
*            ERRBFLST||                                                 92437100
*            '" "ERRBFLST"'||                                           92441400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92445700
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92450000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92454300
*        ZMACRET=8;                          /* MACRO ERROR */          92458600
*      END;                                                             92462900
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 92467200
*  IF ERRBFLST(1)^=''                        /* CHECK FOR NULL */       92471500
*    THEN                                                               92475800
*      DO;                                                              92480100
*        XERRBFLST=ERRBFLST(1);              /* SET XVARIABLE */        92484400
*        ZXERRBFLST='OUTPUT';                /* SET IN/OUTPUT */        92488700
*      END;                                                             92493000
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 92497300
*  IF THREAD='THREAD'                        /* CHECK ENTRY */          92501600
*    THEN                                                               92505900
*      DO;                                                              92510200
*        ZMS=' 8, THE "THREAD" KEY'||        /**KOPTP* MSG*/            92514500
*            ' MUST CONTAIN ONE'||                                      92518800
*            ' (OR MORE) ARGUMENT(S).';                                 92523100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92527400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92531700
*        ZMACRET=8;                          /* MACRO ERROR */          92536000
*      END;                                                             92540300
*  IF NUMBER(THREAD)>1                       /* CHECK POSITIONALS */    92544600
*    THEN                                                               92548900
*      DO;                                                              92553200
*        ZMS=' 8, "THREAD'||                 /**KPOSP* MSG*/            92557500
*            THREAD||                                                   92561800
*            '" "THREAD"'||                                             92566100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92570400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92574700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92579000
*        ZMACRET=8;                          /* MACRO ERROR */          92583300
*      END;                                                             92587600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 92591900
*  IF THREAD(1)^=''                          /* CHECK FOR NULL */       92596200
*    THEN                                                               92600500
*      DO;                                                              92604800
*        XTHREAD=THREAD(1);                  /* SET XVARIABLE */        92609100
*        ZXTHREAD='INPUT';                   /* SET IN/OUTPUT */        92613400
*      END;                                                             92617700
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 92622000
*  IF UTILRTN='UTILRTN'                      /* CHECK ENTRY */          92626300
*    THEN                                                               92630600
*      DO;                                                              92634900
*        ZMS=' 8, THE "UTILRTN" KEY'||       /**KOPTP* MSG*/            92639200
*            ' MUST CONTAIN ONE'||                                      92643500
*            ' (OR MORE) ARGUMENT(S).';                                 92647800
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92652100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92656400
*        ZMACRET=8;                          /* MACRO ERROR */          92660700
*      END;                                                             92665000
*  IF NUMBER(UTILRTN)>1                      /* CHECK POSITIONALS */    92669300
*    THEN                                                               92673600
*      DO;                                                              92677900
*        ZMS=' 8, "UTILRTN'||                /**KPOSP* MSG*/            92682200
*            UTILRTN||                                                  92686500
*            '" "UTILRTN"'||                                            92690800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92695100
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92699400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92703700
*        ZMACRET=8;                          /* MACRO ERROR */          92708000
*      END;                                                             92712300
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 92716600
*  IF UTILRTN(1)^=''                         /* CHECK FOR NULL */       92720900
*    THEN                                                               92725200
*      DO;                                                              92729500
*        XUTILRTN=UTILRTN(1);                /* SET XVARIABLE */        92733800
*        ZXUTILRTN='INPUT';                  /* SET IN/OUTPUT */        92738100
*      END;                                                             92742400
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 92746700
*  IF TRANSLATE(REQUEST(1))                                             92751000
*              = 'RESOURCE_STATS'            /* CHECK FOR KEYWORD */    92755300
*    THEN                                                               92759600
*      DO;                                                              92763900
*        XREQUEST='RESOURCE_STATS';          /* SET XVARIABLE */        92768200
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    92772500
*          THEN                                                         92776800
*            DO;                                                        92781100
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            92785400
*                  REQUEST||                                            92789700
*                  '" "REQUEST"'||                                      92794000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        92798300
*              ANS MSG('?IVTCSM ---> '||ZMS);                           92802600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          92806900
*              ZMACRET=8;                    /* MACRO ERROR */          92811200
*            END;                                                       92815500
*      END;                                                             92819800
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 92824100
*  IF STATAREA='STATAREA'                    /* CHECK ENTRY */          92828400
*    THEN                                                               92832700
*      DO;                                                              92837000
*        ZMS=' 8, THE "STATAREA" KEY'||      /**KOPTP* MSG*/            92841300
*            ' MUST CONTAIN ONE'||                                      92845600
*            ' (OR MORE) ARGUMENT(S).';                                 92849900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92854200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92858500
*        ZMACRET=8;                          /* MACRO ERROR */          92862800
*      END;                                                             92867100
*  IF NUMBER(STATAREA)>1                     /* CHECK POSITIONALS */    92871400
*    THEN                                                               92875700
*      DO;                                                              92880000
*        ZMS=' 8, "STATAREA'||               /**KPOSP* MSG*/            92884300
*            STATAREA||                                                 92888600
*            '" "STATAREA"'||                                           92892900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92897200
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 92901500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92905800
*        ZMACRET=8;                          /* MACRO ERROR */          92910100
*      END;                                                             92914400
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 92918700
*  IF STATAREA(1)^=''                        /* CHECK FOR NULL */       92923000
*    THEN                                                               92927300
*      DO;                                                              92931600
*        XSTATAREA=STATAREA(1);              /* SET XVARIABLE */        92935900
*        ZXSTATAREA='OUTPUT';                /* SET IN/OUTPUT */        92940200
*      END;                                                             92944500
*/*PE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 92948800
*  IF XREQUEST^=''                           /* CHECK FOR KEYWORD */    92953100
*    THEN                                                               92957400
*      ZXREQUEST='INPUT';                    /* SET IN/OUTPUT */        92961700
*    ELSE                                                               92966000
*      DO;                                   /* KEYWORD NOT ENTERED */  92970300
*        IF REQUEST(1)^=''                   /* CHECK FOR KEYWORD */    92974600
*          THEN                                                         92978900
*            DO;                                                        92983200
*              ZXREQUEST='';                 /* RESET IN/OUTPUT */      92987500
*              ZMS=' 8, "REQUEST'||          /**KUKWP* MSG*/            92991800
*                  REQUEST||'"'||                                       92996100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              93000400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    93004700
*                  ' "ASSIGN_BUFFER",'||     /* VALID KEYWORD */        93009000
*                  ' "CHANGE_OWNER",'||      /* VALID KEYWORD */        93013300
*                  ' "COPY_DATA",'||         /* VALID KEYWORD */        93017600
*                  ' "CREATE_POOL",'||       /* VALID KEYWORD */        93021900
*                  ' "DELETE_POOL",'||       /* VALID KEYWORD */        93026200
*                  ' "DUMP_INFO",'||         /* VALID KEYWORD */        93030500
*                  ' "FIX_BUFFER",'||        /* VALID KEYWORD */        93034800
*                  ' "FREE_BUFFER",'||       /* VALID KEYWORD */        93039100
*                  ' "GET_BUFFER",'||        /* VALID KEYWORD */        93043400
*                  ' "PAGE_BUFFER",'||       /* VALID KEYWORD */        93047700
*                  ' OR "RESOURCE_STATS".';  /* VALID KEYWORD */        93052000
*              ANS MSG('?IVTCSM ---> '||ZMS);                           93056300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          93060600
*              ZMACRET=8;                    /* MACRO ERROR */          93064900
*            END;                                                       93069200
*      END;                                                             93073500
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 93077800
*  IF RETCODE='RETCODE'                      /* CHECK ENTRY */          93082100
*    THEN                                                               93086400
*      DO;                                                              93090700
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            93095000
*            ' MUST CONTAIN ONE'||                                      93099300
*            ' (OR MORE) ARGUMENT(S).';                                 93103600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 93107900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                93112200
*        ZMACRET=8;                          /* MACRO ERROR */          93116500
*      END;                                                             93120800
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    93125100
*    THEN                                                               93129400
*      DO;                                                              93133700
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            93138000
*            RETCODE||                                                  93142300
*            '" "RETCODE"'||                                            93146600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              93150900
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 93155200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                93159500
*        ZMACRET=8;                          /* MACRO ERROR */          93163800
*      END;                                                             93168100
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 93172400
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       93176700
*    THEN                                                               93181000
*      DO;                                                              93185300
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        93189600
*        ZXRETCODE='OUTPUT';                 /* SET IN/OUTPUT */        93193900
*      END;                                                             93198200
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 93202500
*  IF RSNCODE='RSNCODE'                      /* CHECK ENTRY */          93206800
*    THEN                                                               93211100
*      DO;                                                              93215400
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            93219700
*            ' MUST CONTAIN ONE'||                                      93224000
*            ' (OR MORE) ARGUMENT(S).';                                 93228300
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 93232600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                93236900
*        ZMACRET=8;                          /* MACRO ERROR */          93241200
*      END;                                                             93245500
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    93249800
*    THEN                                                               93254100
*      DO;                                                              93258400
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            93262700
*            RSNCODE||                                                  93267000
*            '" "RSNCODE"'||                                            93271300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              93275600
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 93279900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                93284200
*        ZMACRET=8;                          /* MACRO ERROR */          93288500
*      END;                                                             93292800
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 93297100
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       93301400
*    THEN                                                               93305700
*      DO;                                                              93310000
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        93314300
*        ZXRSNCODE='OUTPUT';                 /* SET IN/OUTPUT */        93318600
*      END;                                                             93322900
*/*PE.MF02 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 93327200
*      END;                                  /* END PARTIAL CHECK */    93331500
*/********************************************************************/ 93335800
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 93340100
*/********************************************************************/ 93344400
*  IF ZMACRET = 0                                                       93348700
*    THEN                                                               93353000
*      DO;                                                              93357300
*/********************************************************************/ 93361600
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 93365900
*/********************************************************************/ 93370200
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             93374500
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         93378800
*    THEN                                                               93383100
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          93387400
*    ELSE                                                               93391700
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          93396000
*/********************************************************************/ 93400300
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 93404600
*  IF XMF^='L'                                                          93408900
*    THEN                                                               93413200
*      ANS('DO; /* IVTCSM-PLISTVER */')                                 93417500
*          NORESCAN COL(MACLMAR);                                       93421800
*/*MCMPLS01 RFY 15*/                                                    93426100
*  IF XMF^='L' & ZMACRET = 0                                            93430400
*    THEN                                                               93434700
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   93439000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  93443300
*  IF XREQUEST='' & XMF='E' THEN             /* CHECK FOR KEYWORD */    93447600
*      DO;                                                              93451900
*        ZMS=' 8, THE'||                                                93456200
*            ' "REQUEST" KEY AND ITS ARGUMENT'||                        93460500
*            ' ARE REQUIRED.'||                                         93464800
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          93469100
*            ' "ASSIGN_BUFFER",'||           /* VALID KEYWORD */        93473400
*            ' "CHANGE_OWNER",'||            /* VALID KEYWORD */        93477700
*            ' "COPY_DATA",'||               /* VALID KEYWORD */        93482000
*            ' "CREATE_POOL",'||             /* VALID KEYWORD */        93486300
*            ' "DELETE_POOL",'||             /* VALID KEYWORD */        93490600
*            ' "DUMP_INFO",'||               /* VALID KEYWORD */        93494900
*            ' "FIX_BUFFER",'||              /* VALID KEYWORD */        93499200
*            ' "FREE_BUFFER",'||             /* VALID KEYWORD */        93503500
*            ' "GET_BUFFER",'||              /* VALID KEYWORD */        93507800
*            ' "PAGE_BUFFER",'||             /* VALID KEYWORD */        93512100
*            ' OR "RESOURCE_STATS".';        /* VALID KEYWORD */        93516400
*        ANS MSG('?IVTCSM ---> '||ZMS);                                 93520700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                93525000
*        ZMACRET=8;                          /* MACRO ERROR */          93529300
*      END;                                                             93533600
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  93537900
*/*PL.LL01 ?IVTCSM MF=L PARAMETER LIST-------------------------------*/ 93542200
*  IF XMF='L'                                                           93546500
*    THEN                                                               93550800
*      DO;                                                              93555100
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    93559400
*            '/* ?IVTCSM PARM LIST*/')                                  93563700
*            NORESCAN COL(MACLMAR);                                     93568000
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 93572300
*        ANS('2 '||XMFCTRL||                                            93576600
*            '_XVERSION FIXED(8), '||                                   93580900
*            '/* INPUT XVERSION*/')                                     93585200
*            NORESCAN COL(MACLMAR+2);                                   93589500
*/*PL.LL04  XBUFSOURC FIXED(8) INPUT---------------------------------*/ 93593800
*        ANS('2 '||XMFCTRL||                                            93598100
*            '_XBUFSOURC FIXED(8), '||                                  93602400
*            '/* '||ZXBUFSOURC||' XBUFSOURC */')                        93606700
*            NORESCAN COL(MACLMAR+2);                                   93611000
*/*PL.LL04  XBUFTYPE FIXED(8) INPUT----------------------------------*/ 93615300
*        ANS('2 '||XMFCTRL||                                            93619600
*            '_XBUFTYPE FIXED(8), '||                                   93623900
*            '/* '||ZXBUFTYPE||' XBUFTYPE */')                          93628200
*            NORESCAN COL(MACLMAR+2);                                   93632500
*/*PL.LL04  XCLEAR FIXED(8) INPUT------------------------------------*/ 93636800
*        ANS('2 '||XMFCTRL||                                            93641100
*            '_XCLEAR FIXED(8), '||                                     93645400
*            '/* '||ZXCLEAR||' XCLEAR */')                              93649700
*            NORESCAN COL(MACLMAR+2);                                   93654000
*/*PL.LL04  XWAIT FIXED(8) INPUT-------------------------------------*/ 93658300
*        ANS('2 '||XMFCTRL||                                            93662600
*            '_XWAIT FIXED(8), '||                                      93666900
*            '/* '||ZXWAIT||' XWAIT */')                                93671200
*            NORESCAN COL(MACLMAR+2);                                   93675500
*/*PL.LL04  XFREETO FIXED(8) INPUT-----------------------------------*/ 93679800
*        ANS('2 '||XMFCTRL||                                            93684100
*            '_XFREETO FIXED(8), '||                                    93688400
*            '/* '||ZXFREETO||' XFREETO */')                            93692700
*            NORESCAN COL(MACLMAR+2);                                   93697000
*/*PL.LL13  XOWNERID FIXED(16) INPUT---------------------------------*/ 93701300
*        ANS('2 '||XMFCTRL||                                            93705600
*            '_XOWNERID FIXED(16), '||                                  93709900
*            '/* '||ZXOWNERID||' XOWNERID */')                          93714200
*            NORESCAN COL(MACLMAR+2);                                   93718500
*/*PL.LL04  XREQUEST FIXED(31) INPUT---------------------------------*/ 93722800
*        ANS('2 '||XMFCTRL||                                            93727100
*            '_XREQUEST FIXED(31), '||                                  93731400
*            '/* '||ZXREQUEST||' XREQUEST */')                          93735700
*            NORESCAN COL(MACLMAR+2);                                   93740000
*/*PL.LL13  XBUFSIZE FIXED(31) INPUT---------------------------------*/ 93744300
*        ANS('2 '||XMFCTRL||                                            93748600
*            '_XBUFSIZE FIXED(31), '||                                  93752900
*            '/* '||ZXBUFSIZE||' XBUFSIZE */')                          93757200
*            NORESCAN COL(MACLMAR+2);                                   93761500
*/*PL.LL13  XINITBUF FIXED(31) INPUT---------------------------------*/ 93765800
*        ANS('2 '||XMFCTRL||                                            93770100
*            '_XINITBUF FIXED(31), '||                                  93774400
*            '/* '||ZXINITBUF||' XINITBUF */')                          93778700
*            NORESCAN COL(MACLMAR+2);                                   93783000
*/*PL.LL13  XMINFREE FIXED(31) INPUT---------------------------------*/ 93787300
*        ANS('2 '||XMFCTRL||                                            93791600
*            '_XMINFREE FIXED(31), '||                                  93795900
*            '/* '||ZXMINFREE||' XMINFREE */')                          93800200
*            NORESCAN COL(MACLMAR+2);                                   93804500
*/*PL.LL13  XEXPBUF FIXED(31) INPUT----------------------------------*/ 93808800
*        ANS('2 '||XMFCTRL||                                            93813100
*            '_XEXPBUF FIXED(31), '||                                   93817400
*            '/* '||ZXEXPBUF||' XEXPBUF */')                            93821700
*            NORESCAN COL(MACLMAR+2);                                   93826000
*/*PL.LL13  XBUFNUM FIXED(31) INPUT----------------------------------*/ 93830300
*        ANS('2 '||XMFCTRL||                                            93834600
*            '_XBUFNUM FIXED(31), '||                                   93838900
*            '/* '||ZXBUFNUM||' XBUFNUM */')                            93843200
*            NORESCAN COL(MACLMAR+2);                                   93847500
*/*PL.LL13  XBUFLIST PTR(31) INPUT NAME------------------------------*/ 93851800
*        ANS('2 '||XMFCTRL||                                            93856100
*            '_XBUFLIST PTR(31), '||                                    93860400
*            '/* '||ZXBUFLIST||' XBUFLIST */')                          93864700
*            NORESCAN COL(MACLMAR+2);                                   93869000
*/*PL.LL13  XERRBFLST FIXED(31) OUTPUT-------------------------------*/ 93873300
*        ANS('2 '||XMFCTRL||                                            93877600
*            '_XERRBFLST FIXED(31), '||                                 93881900
*            '/* '||ZXERRBFLST||' XERRBFLST */')                        93886200
*            NORESCAN COL(MACLMAR+2);                                   93890500
*/*PL.LL13  XTASKID PTR(31) INPUT------------------------------------*/ 93894800
*        ANS('2 '||XMFCTRL||                                            93899100
*            '_XTASKID PTR(31), '||                                     93903400
*            '/* '||ZXTASKID||' XTASKID */')                            93907700
*            NORESCAN COL(MACLMAR+2);                                   93912000
*/*PL.LL13  XFREERTN PTR(31) INPUT-----------------------------------*/ 93916300
*        ANS('2 '||XMFCTRL||                                            93920600
*            '_XFREERTN PTR(31), '||                                    93924900
*            '/* '||ZXFREERTN||' XFREERTN */')                          93929200
*            NORESCAN COL(MACLMAR+2);                                   93933500
*/*PL.LL13  XGAP FIXED(31) INPUT-------------------------------------*/ 93937800
*        ANS('2 '||XMFCTRL||                                            93942100
*            '_XGAP FIXED(31), '||                                      93946400
*            '/* '||ZXGAP||' XGAP */')                                  93950700
*            NORESCAN COL(MACLMAR+2);                                   93955000
*/*PL.LL13  XSRCGAP FIXED(31) INPUT----------------------------------*/ 93959300
*        ANS('2 '||XMFCTRL||                                            93963600
*            '_XSRCGAP FIXED(31), '||                                   93967900
*            '/* '||ZXSRCGAP||' XSRCGAP */')                            93972200
*            NORESCAN COL(MACLMAR+2);                                   93976500
*/*PL.LL13  XTARGGAP FIXED(31) INPUT---------------------------------*/ 93980800
*        ANS('2 '||XMFCTRL||                                            93985100
*            '_XTARGGAP FIXED(31), '||                                  93989400
*            '/* '||ZXTARGGAP||' XTARGGAP */')                          93993700
*            NORESCAN COL(MACLMAR+2);                                   93998000
*/*PL.LL13  XSRCNUM FIXED(31) INPUT----------------------------------*/ 94002300
*        ANS('2 '||XMFCTRL||                                            94006600
*            '_XSRCNUM FIXED(31), '||                                   94010900
*            '/* '||ZXSRCNUM||' XSRCNUM */')                            94015200
*            NORESCAN COL(MACLMAR+2);                                   94019500
*/*PL.LL13  XTARGNUM FIXED(31) INPUT---------------------------------*/ 94023800
*        ANS('2 '||XMFCTRL||                                            94028100
*            '_XTARGNUM FIXED(31), '||                                  94032400
*            '/* '||ZXTARGNUM||' XTARGNUM */')                          94036700
*            NORESCAN COL(MACLMAR+2);                                   94041000
*/*PL.LL13  XSRCLIST PTR(31) INPUT NAME------------------------------*/ 94045300
*        ANS('2 '||XMFCTRL||                                            94049600
*            '_XSRCLIST PTR(31), '||                                    94053900
*            '/* '||ZXSRCLIST||' XSRCLIST */')                          94058200
*            NORESCAN COL(MACLMAR+2);                                   94062500
*/*PL.LL13  XTARGLIST PTR(31) INPUT NAME-----------------------------*/ 94066800
*        ANS('2 '||XMFCTRL||                                            94071100
*            '_XTARGLIST PTR(31), '||                                   94075400
*            '/* '||ZXTARGLIST||' XTARGLIST */')                        94079700
*            NORESCAN COL(MACLMAR+2);                                   94084000
*/*PL.LL13  XSRCERRL FIXED(31) OUTPUT--------------------------------*/ 94088300
*        ANS('2 '||XMFCTRL||                                            94092600
*            '_XSRCERRL FIXED(31), '||                                  94096900
*            '/* '||ZXSRCERRL||' XSRCERRL */')                          94101200
*            NORESCAN COL(MACLMAR+2);                                   94105500
*/*PL.LL13  XTARGERRL FIXED(31) OUTPUT-------------------------------*/ 94109800
*        ANS('2 '||XMFCTRL||                                            94114100
*            '_XTARGERRL FIXED(31), '||                                 94118400
*            '/* '||ZXTARGERRL||' XTARGERRL */')                        94122700
*            NORESCAN COL(MACLMAR+2);                                   94127000
*/*PL.LL13  XUTILRTN FIXED(32) INPUT---------------------------------*/ 94131300
*        ANS('2 '||XMFCTRL||                                            94135600
*            '_XUTILRTN FIXED(32), '||                                  94139900
*            '/* '||ZXUTILRTN||' XUTILRTN */')                          94144200
*            NORESCAN COL(MACLMAR+2);                                   94148500
*/*PL.LL13  XDS_INFO PTR(31) OUTPUT----------------------------------*/ 94152800
*        ANS('2 '||XMFCTRL||                                            94157100
*            '_XDS_INFO PTR(31), '||                                    94161400
*            '/* '||ZXDS_INFO||' XDS_INFO */')                          94165700
*            NORESCAN COL(MACLMAR+2);                                   94170000
*/*PL.LL13  XSTATAREA PTR(31) OUTPUT---------------------------------*/ 94174300
*        ANS('2 '||XMFCTRL||                                            94178600
*            '_XSTATAREA PTR(31), '||                                   94182900
*            '/* '||ZXSTATAREA||' XSTATAREA */')                        94187200
*            NORESCAN COL(MACLMAR+2);                                   94191500
*/*PL.LL13  XTHREAD CHAR(4) INPUT------------------------------------*/ 94195800
*        ANS('2 '||XMFCTRL||                                            94200100
*            '_XTHREAD CHAR(4), '||                                     94204400
*            '/* '||ZXTHREAD||' XTHREAD */')                            94208700
*            NORESCAN COL(MACLMAR+2);                                   94213000
*/*PL.LL13  XPADCHAR CHAR(1) INPUT-----------------------------------*/ 94217300
*        ANS('2 '||XMFCTRL||                                            94221600
*            '_XPADCHAR CHAR(1), '||                                    94225900
*            '/* '||ZXPADCHAR||' XPADCHAR */')                          94230200
*            NORESCAN COL(MACLMAR+2);                                   94234500
*/*PL.LL04  XPAD FIXED(8) INPUT--------------------------------------*/ 94238800
*        ANS('2 '||XMFCTRL||                                            94243100
*            '_XPAD FIXED(8), '||                                       94247400
*            '/* '||ZXPAD||' XPAD */')                                  94251700
*            NORESCAN COL(MACLMAR+2);                                   94256000
*/*PL.LL13  XPOOLTOKN CHAR(10) INPUT---------------------------------*/ 94260300
*        ANS('2 '||XMFCTRL||                                            94264600
*            '_XPOOLTOKN CHAR(10), '||                                  94268900
*            '/* '||ZXPOOLTOKN||' XPOOLTOKN */')                        94273200
*            NORESCAN COL(MACLMAR+2);                                   94277500
*/*PL.LL04  XSKIPBUF FIXED(8) INPUT----------------------------------*/ 94281800
*        ANS('2 '||XMFCTRL||                                            94286100
*            '_XSKIPBUF FIXED(8), '||                                   94290400
*            '/* '||ZXSKIPBUF||' XSKIPBUF */')                          94294700
*            NORESCAN COL(MACLMAR+2);                                   94299000
*/*PL.LL04  XCSMUSER FIXED(8) INPUT----------------------------------*/ 94303300
*        ANS('2 '||XMFCTRL||                                            94307600
*            '_XCSMUSER FIXED(8), '||                                   94311900
*            '/* '||ZXCSMUSER||' XCSMUSER */')                          94316200
*            NORESCAN COL(MACLMAR+2);                                   94320500
*/*PL.LL13  XRSV001 CHAR(2) RESERVED---------------------------------*/ 94324800
*        ANS('2 '||XMFCTRL||                                            94329100
*            '_XRSV001 CHAR(2), '||                                     94333400
*            '/* RESERVED */')                                          94337700
*            NORESCAN COL(MACLMAR+2);                                   94342000
*/*PL.L01 XPOOLTOKN DEFINED-----------------------------------------*/  94346300
*        ANS('1 * DEF('||XMFCTRL||                                      94350600
*            '_XPOOLTOKN), '||                                          94354900
*            '/* DEFINED */')                                           94359200
*            NORESCAN COL(MACLMAR);                                     94363500
*/*PL.LL13  XRETPTOKN CHAR(10) OUTPUT--------------------------------*/ 94367800
*        ANS('2 '||XMFCTRL||                                            94372100
*            '_XRETPTOKN CHAR(10), '||                                  94376400
*            '/* '||ZXRETPTOKN||' XRETPTOKN */')                        94380700
*            NORESCAN COL(MACLMAR+2);                                   94385000
*/*PL.LL18 ----------------------------------------------------------*/ 94389300
*        ANS('2 * CHAR(0);')                                            94393600
*            NORESCAN COL(MACLMAR+2);                                   94397900
*/*PL.LL15 XBUFSOURC.ECSA--------------------------------------------*/ 94402200
*        ANS('DCL '||XMFCTRL||                                          94406500
*            '_XBUFSOURC_ECSA FIXED(8) '||                              94410800
*            'CONSTANT(128); '||                                        94415100
*            '/* XBUFSOURC */')                                         94419400
*            NORESCAN COL(MACLMAR+2);                                   94423700
*/*PL.LL15 XBUFSOURC.DSPACE------------------------------------------*/ 94428000
*        ANS('DCL '||XMFCTRL||                                          94432300
*            '_XBUFSOURC_DSPACE FIXED(8) '||                            94436600
*            'CONSTANT(64); '||                                         94440900
*            '/* XBUFSOURC */')                                         94445200
*            NORESCAN COL(MACLMAR+2);                                   94449500
*/*PL.LL15 XBUFTYPE.SAME---------------------------------------------*/ 94453800
*        ANS('DCL '||XMFCTRL||                                          94458100
*            '_XBUFTYPE_SAME FIXED(8) '||                               94462400
*            'CONSTANT(0); '||                                          94466700
*            '/* XBUFTYPE */')                                          94471000
*            NORESCAN COL(MACLMAR+2);                                   94475300
*/*PL.LL15 XBUFTYPE.FIXED--------------------------------------------*/ 94479600
*        ANS('DCL '||XMFCTRL||                                          94483900
*            '_XBUFTYPE_FIXED FIXED(8) '||                              94488200
*            'CONSTANT(128); '||                                        94492500
*            '/* XBUFTYPE */')                                          94496800
*            NORESCAN COL(MACLMAR+2);                                   94501100
*/*PL.LL15 XBUFTYPE.PAGEABLE-----------------------------------------*/ 94505400
*        ANS('DCL '||XMFCTRL||                                          94509700
*            '_XBUFTYPE_PAGEABLE FIXED(8) '||                           94514000
*            'CONSTANT(64); '||                                         94518300
*            '/* XBUFTYPE */')                                          94522600
*            NORESCAN COL(MACLMAR+2);                                   94526900
*/*PL.LL15 XBUFTYPE.PAGEELIG-----------------------------------------*/ 94531200
*        ANS('DCL '||XMFCTRL||                                          94535500
*            '_XBUFTYPE_PAGEELIG FIXED(8) '||                           94539800
*            'CONSTANT(32); '||                                         94544100
*            '/* XBUFTYPE */')                                          94548400
*            NORESCAN COL(MACLMAR+2);                                   94552700
*/*PL.LL15 XCLEAR.NO-------------------------------------------------*/ 94557000
*        ANS('DCL '||XMFCTRL||                                          94561300
*            '_XCLEAR_NO FIXED(8) '||                                   94565600
*            'CONSTANT(0); '||                                          94569900
*            '/* XCLEAR */')                                            94574200
*            NORESCAN COL(MACLMAR+2);                                   94578500
*/*PL.LL15 XCLEAR.YES------------------------------------------------*/ 94582800
*        ANS('DCL '||XMFCTRL||                                          94587100
*            '_XCLEAR_YES FIXED(8) '||                                  94591400
*            'CONSTANT(128); '||                                        94595700
*            '/* XCLEAR */')                                            94600000
*            NORESCAN COL(MACLMAR+2);                                   94604300
*/*PL.LL15 XWAIT.NO--------------------------------------------------*/ 94608600
*        ANS('DCL '||XMFCTRL||                                          94612900
*            '_XWAIT_NO FIXED(8) '||                                    94617200
*            'CONSTANT(0); '||                                          94621500
*            '/* XWAIT */')                                             94625800
*            NORESCAN COL(MACLMAR+2);                                   94630100
*/*PL.LL15 XWAIT.YES-------------------------------------------------*/ 94634400
*        ANS('DCL '||XMFCTRL||                                          94638700
*            '_XWAIT_YES FIXED(8) '||                                   94643000
*            'CONSTANT(128); '||                                        94647300
*            '/* XWAIT */')                                             94651600
*            NORESCAN COL(MACLMAR+2);                                   94655900
*/*PL.LL15 XWAIT.EXPAND----------------------------------------------*/ 94660200
*        ANS('DCL '||XMFCTRL||                                          94664500
*            '_XWAIT_EXPAND FIXED(8) '||                                94668800
*            'CONSTANT(64); '||                                         94673100
*            '/* XWAIT */')                                             94677400
*            NORESCAN COL(MACLMAR+2);                                   94681700
*/*PL.LL15 XFREETO.USER----------------------------------------------*/ 94686000
*        ANS('DCL '||XMFCTRL||                                          94690300
*            '_XFREETO_USER FIXED(8) '||                                94694600
*            'CONSTANT(128); '||                                        94698900
*            '/* XFREETO */')                                           94703200
*            NORESCAN COL(MACLMAR+2);                                   94707500
*/*PL.LL15 XFREETO.CSM-----------------------------------------------*/ 94711800
*        ANS('DCL '||XMFCTRL||                                          94716100
*            '_XFREETO_CSM FIXED(8) '||                                 94720400
*            'CONSTANT(64); '||                                         94724700
*            '/* XFREETO */')                                           94729000
*            NORESCAN COL(MACLMAR+2);                                   94733300
*/*PL.LL15 XREQUEST.CREATE_POOL--------------------------------------*/ 94737600
*        ANS('DCL '||XMFCTRL||                                          94741900
*            '_XREQUEST_CREATE_POOL FIXED(31) '||                       94746200
*            'CONSTANT(0); '||                                          94750500
*            '/* XREQUEST */')                                          94754800
*            NORESCAN COL(MACLMAR+2);                                   94759100
*/*PL.LL15 XREQUEST.DELETE_POOL--------------------------------------*/ 94763400
*        ANS('DCL '||XMFCTRL||                                          94767700
*            '_XREQUEST_DELETE_POOL FIXED(31) '||                       94772000
*            'CONSTANT(1); '||                                          94776300
*            '/* XREQUEST */')                                          94780600
*            NORESCAN COL(MACLMAR+2);                                   94784900
*/*PL.LL15 XREQUEST.GET_BUFFER---------------------------------------*/ 94789200
*        ANS('DCL '||XMFCTRL||                                          94793500
*            '_XREQUEST_GET_BUFFER FIXED(31) '||                        94797800
*            'CONSTANT(2); '||                                          94802100
*            '/* XREQUEST */')                                          94806400
*            NORESCAN COL(MACLMAR+2);                                   94810700
*/*PL.LL15 XREQUEST.FREE_BUFFER--------------------------------------*/ 94815000
*        ANS('DCL '||XMFCTRL||                                          94819300
*            '_XREQUEST_FREE_BUFFER FIXED(31) '||                       94823600
*            'CONSTANT(3); '||                                          94827900
*            '/* XREQUEST */')                                          94832200
*            NORESCAN COL(MACLMAR+2);                                   94836500
*/*PL.LL15 XREQUEST.ASSIGN_BUFFER------------------------------------*/ 94840800
*        ANS('DCL '||XMFCTRL||                                          94845100
*            '_XREQUEST_ASSIGN_BUFFER FIXED(31) '||                     94849400
*            'CONSTANT(4); '||                                          94853700
*            '/* XREQUEST */')                                          94858000
*            NORESCAN COL(MACLMAR+2);                                   94862300
*/*PL.LL15 XREQUEST.DUMP_INFO----------------------------------------*/ 94866600
*        ANS('DCL '||XMFCTRL||                                          94870900
*            '_XREQUEST_DUMP_INFO FIXED(31) '||                         94875200
*            'CONSTANT(5); '||                                          94879500
*            '/* XREQUEST */')                                          94883800
*            NORESCAN COL(MACLMAR+2);                                   94888100
*/*PL.LL15 XREQUEST.FIX_BUFFER---------------------------------------*/ 94892400
*        ANS('DCL '||XMFCTRL||                                          94896700
*            '_XREQUEST_FIX_BUFFER FIXED(31) '||                        94901000
*            'CONSTANT(6); '||                                          94905300
*            '/* XREQUEST */')                                          94909600
*            NORESCAN COL(MACLMAR+2);                                   94913900
*/*PL.LL15 XREQUEST.PAGE_BUFFER--------------------------------------*/ 94918200
*        ANS('DCL '||XMFCTRL||                                          94922500
*            '_XREQUEST_PAGE_BUFFER FIXED(31) '||                       94926800
*            'CONSTANT(7); '||                                          94931100
*            '/* XREQUEST */')                                          94935400
*            NORESCAN COL(MACLMAR+2);                                   94939700
*/*PL.LL15 XREQUEST.RESOURCE_STATS-----------------------------------*/ 94944000
*        ANS('DCL '||XMFCTRL||                                          94948300
*            '_XREQUEST_RESOURCE_STATS FIXED(31) '||                    94952600
*            'CONSTANT(8); '||                                          94956900
*            '/* XREQUEST */')                                          94961200
*            NORESCAN COL(MACLMAR+2);                                   94965500
*/*PL.LL15 XREQUEST.COPY_DATA----------------------------------------*/ 94969800
*        ANS('DCL '||XMFCTRL||                                          94974100
*            '_XREQUEST_COPY_DATA FIXED(31) '||                         94978400
*            'CONSTANT(9); '||                                          94982700
*            '/* XREQUEST */')                                          94987000
*            NORESCAN COL(MACLMAR+2);                                   94991300
*/*PL.LL15 XREQUEST.CHANGE_OWNER-------------------------------------*/ 94995600
*        ANS('DCL '||XMFCTRL||                                          94999900
*            '_XREQUEST_CHANGE_OWNER FIXED(31) '||                      95004200
*            'CONSTANT(100); '||                                        95008500
*            '/* XREQUEST */')                                          95012800
*            NORESCAN COL(MACLMAR+2);                                   95017100
*/*PL.LL15 XPAD.NO---------------------------------------------------*/ 95021400
*        ANS('DCL '||XMFCTRL||                                          95025700
*            '_XPAD_NO FIXED(8) '||                                     95030000
*            'CONSTANT(0); '||                                          95034300
*            '/* XPAD */')                                              95038600
*            NORESCAN COL(MACLMAR+2);                                   95042900
*/*PL.LL15 XPAD.YES--------------------------------------------------*/ 95047200
*        ANS('DCL '||XMFCTRL||                                          95051500
*            '_XPAD_YES FIXED(8) '||                                    95055800
*            'CONSTANT(128); '||                                        95060100
*            '/* XPAD */')                                              95064400
*            NORESCAN COL(MACLMAR+2);                                   95068700
*/*PL.LL15 XSKIPBUF.NO-----------------------------------------------*/ 95073000
*        ANS('DCL '||XMFCTRL||                                          95077300
*            '_XSKIPBUF_NO FIXED(8) '||                                 95081600
*            'CONSTANT(0); '||                                          95085900
*            '/* XSKIPBUF */')                                          95090200
*            NORESCAN COL(MACLMAR+2);                                   95094500
*/*PL.LL15 XSKIPBUF.YES----------------------------------------------*/ 95098800
*        ANS('DCL '||XMFCTRL||                                          95103100
*            '_XSKIPBUF_YES FIXED(8) '||                                95107400
*            'CONSTANT(128); '||                                        95111700
*            '/* XSKIPBUF */')                                          95116000
*            NORESCAN COL(MACLMAR+2);                                   95120300
*/*PL.LL15 XCSMUSER.NO-----------------------------------------------*/ 95124600
*        ANS('DCL '||XMFCTRL||                                          95128900
*            '_XCSMUSER_NO FIXED(8) '||                                 95133200
*            'CONSTANT(0); '||                                          95137500
*            '/* XCSMUSER */')                                          95141800
*            NORESCAN COL(MACLMAR+2);                                   95146100
*/*PL.LL15 XCSMUSER.YES----------------------------------------------*/ 95150400
*        ANS('DCL '||XMFCTRL||                                          95154700
*            '_XCSMUSER_YES FIXED(8) '||                                95159000
*            'CONSTANT(128); '||                                        95163300
*            '/* XCSMUSER */')                                          95167600
*            NORESCAN COL(MACLMAR+2);                                   95171900
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 95176200
*      END;                                                             95180500
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 95184800
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  95189100
*  DEACT ZPRMLINE;                                                      95193400
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  95197700
*  DEACT ZNDX;                                                          95202000
*  ZNDX=MACINDEX;              /* MACINDEX                          */  95206300
*  DCL XVERSION CHAR;                                                   95210600
*  DEACT XVERSION;                                                      95214900
*/*PL.L02 ?IVTCSM PARAMETER LIST-------------------------------------*/ 95219200
*  IF XMF^='L'                                                          95223500
*    THEN                                                               95227800
*      DO;                                                              95232100
*/*PL.L03 ?IVTCSM PARAMETER LIST-------------------------------------*/ 95236400
*        IF XMF='S'                                                     95240700
*          THEN                                                         95245000
*            XMFCTRL='#ZPLIST';                                         95249300
*/*PL.L04 ?IVTCSM PARAMETER LIST-------------------------------------*/ 95253600
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            95257900
*                 ' /* ?IVTCSM PARM LIST*/';                            95262200
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 95266500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95270800
*                 '_XVERSION FIXED(8), '||                              95275100
*                 '/* INPUT XVERSION*/';                                95279400
*/*PL.L08  XBUFSOURC FIXED(8) INPUT----------------------------------*/ 95283700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95288000
*                 '_XBUFSOURC FIXED(8), '||                             95292300
*                 '/* '||ZXBUFSOURC||' XBUFSOURC */';                   95296600
*/*PL.L08  XBUFTYPE FIXED(8) INPUT-----------------------------------*/ 95300900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95305200
*                 '_XBUFTYPE FIXED(8), '||                              95309500
*                 '/* '||ZXBUFTYPE||' XBUFTYPE */';                     95313800
*/*PL.L08  XCLEAR FIXED(8) INPUT-------------------------------------*/ 95318100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95322400
*                 '_XCLEAR FIXED(8), '||                                95326700
*                 '/* '||ZXCLEAR||' XCLEAR */';                         95331000
*/*PL.L08  XWAIT FIXED(8) INPUT--------------------------------------*/ 95335300
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95339600
*                 '_XWAIT FIXED(8), '||                                 95343900
*                 '/* '||ZXWAIT||' XWAIT */';                           95348200
*/*PL.L08  XFREETO FIXED(8) INPUT------------------------------------*/ 95352500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95356800
*                 '_XFREETO FIXED(8), '||                               95361100
*                 '/* '||ZXFREETO||' XFREETO */';                       95365400
*/*PL.L08  XOWNERID FIXED(16) INPUT----------------------------------*/ 95369700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95374000
*                 '_XOWNERID FIXED(16), '||                             95378300
*                 '/* '||ZXOWNERID||' XOWNERID */';                     95382600
*/*PL.L08  XREQUEST FIXED(31) INPUT----------------------------------*/ 95386900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95391200
*                 '_XREQUEST FIXED(31), '||                             95395500
*                 '/* '||ZXREQUEST||' XREQUEST */';                     95399800
*/*PL.L08  XBUFSIZE FIXED(31) INPUT----------------------------------*/ 95404100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95408400
*                 '_XBUFSIZE FIXED(31), '||                             95412700
*                 '/* '||ZXBUFSIZE||' XBUFSIZE */';                     95417000
*/*PL.L08  XINITBUF FIXED(31) INPUT----------------------------------*/ 95421300
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95425600
*                 '_XINITBUF FIXED(31), '||                             95429900
*                 '/* '||ZXINITBUF||' XINITBUF */';                     95434200
*/*PL.L08  XMINFREE FIXED(31) INPUT----------------------------------*/ 95438500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95442800
*                 '_XMINFREE FIXED(31), '||                             95447100
*                 '/* '||ZXMINFREE||' XMINFREE */';                     95451400
*/*PL.L08  XEXPBUF FIXED(31) INPUT-----------------------------------*/ 95455700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95460000
*                 '_XEXPBUF FIXED(31), '||                              95464300
*                 '/* '||ZXEXPBUF||' XEXPBUF */';                       95468600
*/*PL.L08  XBUFNUM FIXED(31) INPUT-----------------------------------*/ 95472900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95477200
*                 '_XBUFNUM FIXED(31), '||                              95481500
*                 '/* '||ZXBUFNUM||' XBUFNUM */';                       95485800
*/*PL.L08  XBUFLIST PTR(31) INPUT NAME-------------------------------*/ 95490100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95494400
*                 '_XBUFLIST PTR(31), '||                               95498700
*                 '/* '||ZXBUFLIST||' XBUFLIST */';                     95503000
*/*PL.L08  XERRBFLST FIXED(31) OUTPUT--------------------------------*/ 95507300
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95511600
*                 '_XERRBFLST FIXED(31), '||                            95515900
*                 '/* '||ZXERRBFLST||' XERRBFLST */';                   95520200
*/*PL.L08  XTASKID PTR(31) INPUT-------------------------------------*/ 95524500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95528800
*                 '_XTASKID PTR(31), '||                                95533100
*                 '/* '||ZXTASKID||' XTASKID */';                       95537400
*/*PL.L08  XFREERTN PTR(31) INPUT------------------------------------*/ 95541700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95546000
*                 '_XFREERTN PTR(31), '||                               95550300
*                 '/* '||ZXFREERTN||' XFREERTN */';                     95554600
*/*PL.L08  XGAP FIXED(31) INPUT--------------------------------------*/ 95558900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95563200
*                 '_XGAP FIXED(31), '||                                 95567500
*                 '/* '||ZXGAP||' XGAP */';                             95571800
*/*PL.L08  XSRCGAP FIXED(31) INPUT-----------------------------------*/ 95576100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95580400
*                 '_XSRCGAP FIXED(31), '||                              95584700
*                 '/* '||ZXSRCGAP||' XSRCGAP */';                       95589000
*/*PL.L08  XTARGGAP FIXED(31) INPUT----------------------------------*/ 95593300
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95597600
*                 '_XTARGGAP FIXED(31), '||                             95601900
*                 '/* '||ZXTARGGAP||' XTARGGAP */';                     95606200
*/*PL.L08  XSRCNUM FIXED(31) INPUT-----------------------------------*/ 95610500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95614800
*                 '_XSRCNUM FIXED(31), '||                              95619100
*                 '/* '||ZXSRCNUM||' XSRCNUM */';                       95623400
*/*PL.L09  XTARGNUM FIXED(31) INPUT----------------------------------*/ 95627700
*        ZPRMNUM=ZPRMNUM+1;                                             95632000
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 #Z'||ZNDX||                        95636300
*            '_XTARGNUM FIXED(31), '||                                  95640600
*            '/* '||ZXTARGNUM||' XTARGNUM */';                          95644900
*        ZPRMLINE='';                                                   95649200
*/*PL.L08  XSRCLIST PTR(31) INPUT NAME-------------------------------*/ 95653500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95657800
*                 '_XSRCLIST PTR(31), '||                               95662100
*                 '/* '||ZXSRCLIST||' XSRCLIST */';                     95666400
*/*PL.L08  XTARGLIST PTR(31) INPUT NAME------------------------------*/ 95670700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95675000
*                 '_XTARGLIST PTR(31), '||                              95679300
*                 '/* '||ZXTARGLIST||' XTARGLIST */';                   95683600
*/*PL.L08  XSRCERRL FIXED(31) OUTPUT---------------------------------*/ 95687900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95692200
*                 '_XSRCERRL FIXED(31), '||                             95696500
*                 '/* '||ZXSRCERRL||' XSRCERRL */';                     95700800
*/*PL.L08  XTARGERRL FIXED(31) OUTPUT--------------------------------*/ 95705100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95709400
*                 '_XTARGERRL FIXED(31), '||                            95713700
*                 '/* '||ZXTARGERRL||' XTARGERRL */';                   95718000
*/*PL.L08  XUTILRTN FIXED(32) INPUT----------------------------------*/ 95722300
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95726600
*                 '_XUTILRTN FIXED(32), '||                             95730900
*                 '/* '||ZXUTILRTN||' XUTILRTN */';                     95735200
*/*PL.L08  XDS_INFO PTR(31) OUTPUT-----------------------------------*/ 95739500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95743800
*                 '_XDS_INFO PTR(31), '||                               95748100
*                 '/* '||ZXDS_INFO||' XDS_INFO */';                     95752400
*/*PL.L08  XSTATAREA PTR(31) OUTPUT----------------------------------*/ 95756700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95761000
*                 '_XSTATAREA PTR(31), '||                              95765300
*                 '/* '||ZXSTATAREA||' XSTATAREA */';                   95769600
*/*PL.L08  XTHREAD CHAR(4) INPUT-------------------------------------*/ 95773900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95778200
*                 '_XTHREAD CHAR(4), '||                                95782500
*                 '/* '||ZXTHREAD||' XTHREAD */';                       95786800
*/*PL.L08  XPADCHAR CHAR(1) INPUT------------------------------------*/ 95791100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95795400
*                 '_XPADCHAR CHAR(1), '||                               95799700
*                 '/* '||ZXPADCHAR||' XPADCHAR */';                     95804000
*/*PL.L08  XPAD FIXED(8) INPUT---------------------------------------*/ 95808300
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95812600
*                 '_XPAD FIXED(8), '||                                  95816900
*                 '/* '||ZXPAD||' XPAD */';                             95821200
*/*PL.L08  XPOOLTOKN CHAR(10) INPUT----------------------------------*/ 95825500
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95829800
*                 '_XPOOLTOKN CHAR(10), '||                             95834100
*                 '/* '||ZXPOOLTOKN||' XPOOLTOKN */';                   95838400
*/*PL.L08  XSKIPBUF FIXED(8) INPUT-----------------------------------*/ 95842700
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95847000
*                 '_XSKIPBUF FIXED(8), '||                              95851300
*                 '/* '||ZXSKIPBUF||' XSKIPBUF */';                     95855600
*/*PL.L08  XCSMUSER FIXED(8) INPUT-----------------------------------*/ 95859900
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95864200
*                 '_XCSMUSER FIXED(8), '||                              95868500
*                 '/* '||ZXCSMUSER||' XCSMUSER */';                     95872800
*/*PL.L08  XRSV001 CHAR(2) RESERVED----------------------------------*/ 95877100
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95881400
*                 '_XRSV001 CHAR(2), '||                                95885700
*                 '/* RESERVED */';                                     95890000
*/*PL.P01 XPOOLTOKN DEFINED-----------------------------------------*/  95894300
*        ZPRMLINE=ZPRMLINE||                                            95898600
*            ' 1 * DEF(#Z'||ZNDX||                                      95902900
*            '_XPOOLTOKN), '||                                          95907200
*            '/* DEFINED */';                                           95911500
*/*PL.L08  XRETPTOKN CHAR(10) OUTPUT---------------------------------*/ 95915800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             95920100
*                 '_XRETPTOKN CHAR(10), '||                             95924400
*                 '/* '||ZXRETPTOKN||' XRETPTOKN */';                   95928700
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 95933000
*        ZPRMNUM=ZPRMNUM+1;                                             95937300
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       95941600
*        IF XPLISTVER^=0                                                95945900
*           & XMF^='S'                                                  95950200
*          THEN                                                         95954500
*            DO;                                                        95958800
*              ZPRMNUM=ZPRMNUM+1;                                       95963100
*              ZPRM(ZPRMNUM)=                                           95967400
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       95971700
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        95976000
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            95980300
*               ' IS LONG ENOUGH */';                                   95984600
*            END;                                                       95988900
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 95993200
*        ZPLLEN=116;                                                    95997500
*        IF ZPRMMAX<ZPLLEN                                              96001800
*           & XMF^='E'                                                  96006100
*           & XMF^='M'                                                  96010400
*          THEN                                                         96014700
*            ZPRMMAX=ZPLLEN;                                            96019000
*/*PL.L13 -----------------------------------------------------------*/ 96023300
*      END;                                                             96027600
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 96031900
*  IF XMF^='L'                                                          96036200
*    THEN                                                               96040500
*      DO;                                                              96044800
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               96049100
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 96053400
*  IF XMFSCK='COMPLETE'                                                 96057700
*    THEN                                                               96062000
*            ANS('#Z'||ZNDX||'=''''B;'||                                96066300
*                '/* CLEAR PARAMETER AREA */')                          96070600
*                NORESCAN COL(MACLMAR);                                 96074900
*/*PI.L06 XBUFSOURC FIXED(8)-----------------------------------------*/ 96079200
*        ZW='';                                                         96083500
*        ZMS='';                                                        96087800
*/*PI.L12 XBUFSOURC FIXED(8)-----------------------------------------*/ 96092100
*        IF XBUFSOURC='ECSA'                                            96096400
*          THEN                                                         96100700
*            ZW='128';                                                  96105000
*/*PI.L12 XBUFSOURC FIXED(8)-----------------------------------------*/ 96109300
*        IF XBUFSOURC='DSPACE'                                          96113600
*          THEN                                                         96117900
*            ZW='64';                                                   96122200
*/*PI.L13 XBUFSOURC FIXED(8)-----------------------------------------*/ 96126500
*        IF ZW^=''                                                      96130800
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             96135100
*          THEN                                                         96139400
*            ANS('#Z'||ZNDX||'_XBUFSOURC='||                            96143700
*                ZW||'; '||                                             96148000
*                '/* XBUFSOURC FIXED(8) */')                            96152300
*                NORESCAN COL(MACLMAR);                                 96156600
*/*PI.L06 XBUFTYPE FIXED(8)------------------------------------------*/ 96160900
*        ZW='';                                                         96165200
*        ZMS='';                                                        96169500
*/*PI.L12 XBUFTYPE FIXED(8)------------------------------------------*/ 96173800
*        IF XBUFTYPE='SAME'                                             96178100
*          THEN                                                         96182400
*            ZW='0';                                                    96186700
*/*PI.L12 XBUFTYPE FIXED(8)------------------------------------------*/ 96191000
*        IF XBUFTYPE='FIXED'                                            96195300
*          THEN                                                         96199600
*            ZW='128';                                                  96203900
*/*PI.L12 XBUFTYPE FIXED(8)------------------------------------------*/ 96208200
*        IF XBUFTYPE='PAGEABLE'                                         96212500
*          THEN                                                         96216800
*            ZW='64';                                                   96221100
*/*PI.L12 XBUFTYPE FIXED(8)------------------------------------------*/ 96225400
*        IF XBUFTYPE='PAGEELIG'                                         96229700
*          THEN                                                         96234000
*            ZW='32';                                                   96238300
*/*PI.L13 XBUFTYPE FIXED(8)------------------------------------------*/ 96242600
*        IF ZW^=''                                                      96246900
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             96251200
*          THEN                                                         96255500
*            ANS('#Z'||ZNDX||'_XBUFTYPE='||                             96259800
*                ZW||'; '||                                             96264100
*                '/* XBUFTYPE FIXED(8) */')                             96268400
*                NORESCAN COL(MACLMAR);                                 96272700
*/*PI.L06 XCLEAR FIXED(8)--------------------------------------------*/ 96277000
*        ZW='';                                                         96281300
*        ZMS='';                                                        96285600
*/*PI.L12 XCLEAR FIXED(8)--------------------------------------------*/ 96289900
*        IF XCLEAR='NO'                                                 96294200
*          THEN                                                         96298500
*            ZW='0';                                                    96302800
*/*PI.L12 XCLEAR FIXED(8)--------------------------------------------*/ 96307100
*        IF XCLEAR='YES'                                                96311400
*          THEN                                                         96315700
*            ZW='128';                                                  96320000
*/*PI.L13 XCLEAR FIXED(8)--------------------------------------------*/ 96324300
*        IF ZW^=''                                                      96328600
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             96332900
*          THEN                                                         96337200
*            ANS('#Z'||ZNDX||'_XCLEAR='||                               96341500
*                ZW||'; '||                                             96345800
*                '/* XCLEAR FIXED(8) */')                               96350100
*                NORESCAN COL(MACLMAR);                                 96354400
*/*PI.L06 XWAIT FIXED(8)---------------------------------------------*/ 96358700
*        ZW='';                                                         96363000
*        ZMS='';                                                        96367300
*/*PI.L12 XWAIT FIXED(8)---------------------------------------------*/ 96371600
*        IF XWAIT='NO'                                                  96375900
*          THEN                                                         96380200
*            ZW='0';                                                    96384500
*/*PI.L12 XWAIT FIXED(8)---------------------------------------------*/ 96388800
*        IF XWAIT='YES'                                                 96393100
*          THEN                                                         96397400
*            ZW='128';                                                  96401700
*/*PI.L12 XWAIT FIXED(8)---------------------------------------------*/ 96406000
*        IF XWAIT='EXPAND'                                              96410300
*          THEN                                                         96414600
*            ZW='64';                                                   96418900
*/*PI.L13 XWAIT FIXED(8)---------------------------------------------*/ 96423200
*        IF ZW^=''                                                      96427500
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             96431800
*          THEN                                                         96436100
*            ANS('#Z'||ZNDX||'_XWAIT='||                                96440400
*                ZW||'; '||                                             96444700
*                '/* XWAIT FIXED(8) */')                                96449000
*                NORESCAN COL(MACLMAR);                                 96453300
*/*PI.L06 XFREETO FIXED(8)-------------------------------------------*/ 96457600
*        ZW='';                                                         96461900
*        ZMS='';                                                        96466200
*/*PI.L12 XFREETO FIXED(8)-------------------------------------------*/ 96470500
*        IF XFREETO='USER'                                              96474800
*          THEN                                                         96479100
*            ZW='128';                                                  96483400
*/*PI.L12 XFREETO FIXED(8)-------------------------------------------*/ 96487700
*        IF XFREETO='CSM'                                               96492000
*          THEN                                                         96496300
*            ZW='64';                                                   96500600
*/*PI.L13 XFREETO FIXED(8)-------------------------------------------*/ 96504900
*        IF ZW^=''                                                      96509200
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             96513500
*          THEN                                                         96517800
*            ANS('#Z'||ZNDX||'_XFREETO='||                              96522100
*                ZW||'; '||                                             96526400
*                '/* XFREETO FIXED(8) */')                              96530700
*                NORESCAN COL(MACLMAR);                                 96535000
*/*PI.L14 CHECK FOR * AS THE FIXED(16) ARGUMENT----------------------*/ 96539300
*        IF TRANSLATE(XOWNERID)                                         96543600
*                    = '0'                                              96547900
*           & XMFSCK='COMPLETE'                                         96552200
*          THEN                                                         96556500
*            ZXOWNERID='';                   /* RESET INPUT/INOUT */    96560800
*/*PI.L17 XOWNERID FIXED(16)-----------------------------------------*/ 96565100
*        IF ZXOWNERID='INPUT' |                                         96569400
*           ZXOWNERID='INOUT'                                           96573700
*          THEN                                                         96578000
*            DO;                                                        96582300
*            IF (XOWNERID='0' & XMFSCK^='COMPLETE')                     96586600
*              THEN                                                     96590900
*                ANS('#Z'||ZNDX||'_XOWNERID=0;'||                       96595200
*                    '/* XOWNERID FIXED(16) */')                        96599500
*                    NORESCAN COL(MACLMAR);                             96603800
*            IF XOWNERID^='0'                                           96608100
*              THEN                                                     96612400
*                ANS('#Z'||ZNDX||'_XOWNERID='||                         96616700
*                    XOWNERID||';'||                                    96621000
*                    '/* XOWNERID FIXED(16) */')                        96625300
*                    NORESCAN COL(MACLMAR);                             96629600
*            END;                                                       96633900
*/*PI.L06 XREQUEST FIXED(31)-----------------------------------------*/ 96638200
*        ZW='';                                                         96642500
*        ZMS='';                                                        96646800
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96651100
*        IF XREQUEST='CREATE_POOL'                                      96655400
*          THEN                                                         96659700
*            ZW='0';                                                    96664000
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96668300
*        IF XREQUEST='DELETE_POOL'                                      96672600
*          THEN                                                         96676900
*            ZW='1';                                                    96681200
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96685500
*        IF XREQUEST='GET_BUFFER'                                       96689800
*          THEN                                                         96694100
*            ZW='2';                                                    96698400
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96702700
*        IF XREQUEST='FREE_BUFFER'                                      96707000
*          THEN                                                         96711300
*            ZW='3';                                                    96715600
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96719900
*        IF XREQUEST='ASSIGN_BUFFER'                                    96724200
*          THEN                                                         96728500
*            ZW='4';                                                    96732800
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96737100
*        IF XREQUEST='DUMP_INFO'                                        96741400
*          THEN                                                         96745700
*            ZW='5';                                                    96750000
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96754300
*        IF XREQUEST='FIX_BUFFER'                                       96758600
*          THEN                                                         96762900
*            ZW='6';                                                    96767200
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96771500
*        IF XREQUEST='PAGE_BUFFER'                                      96775800
*          THEN                                                         96780100
*            ZW='7';                                                    96784400
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96788700
*        IF XREQUEST='RESOURCE_STATS'                                   96793000
*          THEN                                                         96797300
*            ZW='8';                                                    96801600
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96805900
*        IF XREQUEST='COPY_DATA'                                        96810200
*          THEN                                                         96814500
*            ZW='9';                                                    96818800
*/*PI.L12 XREQUEST FIXED(31)-----------------------------------------*/ 96823100
*        IF XREQUEST='CHANGE_OWNER'                                     96827400
*          THEN                                                         96831700
*            ZW='100';                                                  96836000
*/*PI.L13 XREQUEST FIXED(31)-----------------------------------------*/ 96840300
*        IF ZW^=''                                                      96844600
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             96848900
*          THEN                                                         96853200
*            ANS('#Z'||ZNDX||'_XREQUEST='||                             96857500
*                ZW||'; '||                                             96861800
*                '/* XREQUEST FIXED(31) */')                            96866100
*                NORESCAN COL(MACLMAR);                                 96870400
*/*PI.L17 XBUFSIZE FIXED(31)-----------------------------------------*/ 96874700
*        IF ZXBUFSIZE='INPUT' |                                         96879000
*           ZXBUFSIZE='INOUT'                                           96883300
*          THEN                                                         96887600
*            ANS('#Z'||ZNDX||'_XBUFSIZE='||                             96891900
*                XBUFSIZE||';'||                                        96896200
*                '/* XBUFSIZE FIXED(31) */')                            96900500
*                NORESCAN COL(MACLMAR);                                 96904800
*/*PI.L17 XINITBUF FIXED(31)-----------------------------------------*/ 96909100
*        IF ZXINITBUF='INPUT' |                                         96913400
*           ZXINITBUF='INOUT'                                           96917700
*          THEN                                                         96922000
*            ANS('#Z'||ZNDX||'_XINITBUF='||                             96926300
*                XINITBUF||';'||                                        96930600
*                '/* XINITBUF FIXED(31) */')                            96934900
*                NORESCAN COL(MACLMAR);                                 96939200
*/*PI.L17 XMINFREE FIXED(31)-----------------------------------------*/ 96943500
*        IF ZXMINFREE='INPUT' |                                         96947800
*           ZXMINFREE='INOUT'                                           96952100
*          THEN                                                         96956400
*            ANS('#Z'||ZNDX||'_XMINFREE='||                             96960700
*                XMINFREE||';'||                                        96965000
*                '/* XMINFREE FIXED(31) */')                            96969300
*                NORESCAN COL(MACLMAR);                                 96973600
*/*PI.L17 XEXPBUF FIXED(31)------------------------------------------*/ 96977900
*        IF ZXEXPBUF='INPUT' |                                          96982200
*           ZXEXPBUF='INOUT'                                            96986500
*          THEN                                                         96990800
*            ANS('#Z'||ZNDX||'_XEXPBUF='||                              96995100
*                XEXPBUF||';'||                                         96999400
*                '/* XEXPBUF FIXED(31) */')                             97003700
*                NORESCAN COL(MACLMAR);                                 97008000
*/*PI.L17 XBUFNUM FIXED(31)------------------------------------------*/ 97012300
*        IF ZXBUFNUM='INPUT' |                                          97016600
*           ZXBUFNUM='INOUT'                                            97020900
*          THEN                                                         97025200
*            ANS('#Z'||ZNDX||'_XBUFNUM='||                              97029500
*                XBUFNUM||';'||                                         97033800
*                '/* XBUFNUM FIXED(31) */')                             97038100
*                NORESCAN COL(MACLMAR);                                 97042400
*/*PI.L23 XBUFLIST NAME----------------------------------------------*/ 97046700
*        IF ZXBUFLIST^=''                                               97051000
*          THEN                                                         97055300
*            ANS('#Z'||ZNDX||'_XBUFLIST='||                             97059600
*                'ADDR('||XBUFLIST||');'||                              97063900
*                '/* XBUFLIST NAME */')                                 97068200
*                NORESCAN COL(MACLMAR);                                 97072500
*/*PI.L14 CHECK FOR * AS THE PTR(31) ARGUMENT------------------------*/ 97076800
*        IF TRANSLATE(XTASKID)                                          97081100
*                    = '0'                                              97085400
*           & XMFSCK='COMPLETE'                                         97089700
*          THEN                                                         97094000
*            ZXTASKID='';                    /* RESET INPUT/INOUT */    97098300
*/*PI.L17 XTASKID PTR(31)--------------------------------------------*/ 97102600
*        IF ZXTASKID='INPUT' |                                          97106900
*           ZXTASKID='INOUT'                                            97111200
*          THEN                                                         97115500
*            DO;                                                        97119800
*            IF (XTASKID='0' & XMFSCK^='COMPLETE')                      97124100
*              THEN                                                     97128400
*                ANS('#Z'||ZNDX||'_XTASKID=0;'||                        97132700
*                    '/* XTASKID PTR(31) */')                           97137000
*                    NORESCAN COL(MACLMAR);                             97141300
*            IF XTASKID^='0'                                            97145600
*              THEN                                                     97149900
*                ANS('#Z'||ZNDX||'_XTASKID='||                          97154200
*                    XTASKID||';'||                                     97158500
*                    '/* XTASKID PTR(31) */')                           97162800
*                    NORESCAN COL(MACLMAR);                             97167100
*            END;                                                       97171400
*/*PI.L14 CHECK FOR * AS THE PTR(31) ARGUMENT------------------------*/ 97175700
*        IF TRANSLATE(XFREERTN)                                         97180000
*                    = 'CSM'                                            97184300
*           & XMFSCK='COMPLETE'                                         97188600
*          THEN                                                         97192900
*            ZXFREERTN='';                   /* RESET INPUT/INOUT */    97197200
*/*PI.L17 XFREERTN PTR(31)-------------------------------------------*/ 97201500
*        IF ZXFREERTN='INPUT' |                                         97205800
*           ZXFREERTN='INOUT'                                           97210100
*          THEN                                                         97214400
*            DO;                                                        97218700
*            IF (XFREERTN='CSM' & XMFSCK^='COMPLETE')                   97223000
*              THEN                                                     97227300
*                ANS('#Z'||ZNDX||'_XFREERTN=0;'||                       97231600
*                    '/* XFREERTN PTR(31) */')                          97235900
*                    NORESCAN COL(MACLMAR);                             97240200
*            IF XFREERTN^='CSM'                                         97244500
*              THEN                                                     97248800
*                ANS('#Z'||ZNDX||'_XFREERTN='||                         97253100
*                    XFREERTN||';'||                                    97257400
*                    '/* XFREERTN PTR(31) */')                          97261700
*                    NORESCAN COL(MACLMAR);                             97266000
*            END;                                                       97270300
*/*PI.L14 CHECK FOR * AS THE FIXED(31) ARGUMENT----------------------*/ 97274600
*        IF TRANSLATE(XGAP)                                             97278900
*                    = '0'                                              97283200
*           & XMFSCK='COMPLETE'                                         97287500
*          THEN                                                         97291800
*            ZXGAP='';                       /* RESET INPUT/INOUT */    97296100
*/*PI.L17 XGAP FIXED(31)---------------------------------------------*/ 97300400
*        IF ZXGAP='INPUT' |                                             97304700
*           ZXGAP='INOUT'                                               97309000
*          THEN                                                         97313300
*            DO;                                                        97317600
*            IF (XGAP='0' & XMFSCK^='COMPLETE')                         97321900
*              THEN                                                     97326200
*                ANS('#Z'||ZNDX||'_XGAP=0;'||                           97330500
*                    '/* XGAP FIXED(31) */')                            97334800
*                    NORESCAN COL(MACLMAR);                             97339100
*            IF XGAP^='0'                                               97343400
*              THEN                                                     97347700
*                ANS('#Z'||ZNDX||'_XGAP='||                             97352000
*                    XGAP||';'||                                        97356300
*                    '/* XGAP FIXED(31) */')                            97360600
*                    NORESCAN COL(MACLMAR);                             97364900
*            END;                                                       97369200
*/*PI.L14 CHECK FOR * AS THE FIXED(31) ARGUMENT----------------------*/ 97373500
*        IF TRANSLATE(XSRCGAP)                                          97377800
*                    = '0'                                              97382100
*           & XMFSCK='COMPLETE'                                         97386400
*          THEN                                                         97390700
*            ZXSRCGAP='';                    /* RESET INPUT/INOUT */    97395000
*/*PI.L17 XSRCGAP FIXED(31)------------------------------------------*/ 97399300
*        IF ZXSRCGAP='INPUT' |                                          97403600
*           ZXSRCGAP='INOUT'                                            97407900
*          THEN                                                         97412200
*            DO;                                                        97416500
*            IF (XSRCGAP='0' & XMFSCK^='COMPLETE')                      97420800
*              THEN                                                     97425100
*                ANS('#Z'||ZNDX||'_XSRCGAP=0;'||                        97429400
*                    '/* XSRCGAP FIXED(31) */')                         97433700
*                    NORESCAN COL(MACLMAR);                             97438000
*            IF XSRCGAP^='0'                                            97442300
*              THEN                                                     97446600
*                ANS('#Z'||ZNDX||'_XSRCGAP='||                          97450900
*                    XSRCGAP||';'||                                     97455200
*                    '/* XSRCGAP FIXED(31) */')                         97459500
*                    NORESCAN COL(MACLMAR);                             97463800
*            END;                                                       97468100
*/*PI.L14 CHECK FOR * AS THE FIXED(31) ARGUMENT----------------------*/ 97472400
*        IF TRANSLATE(XTARGGAP)                                         97476700
*                    = '0'                                              97481000
*           & XMFSCK='COMPLETE'                                         97485300
*          THEN                                                         97489600
*            ZXTARGGAP='';                   /* RESET INPUT/INOUT */    97493900
*/*PI.L17 XTARGGAP FIXED(31)-----------------------------------------*/ 97498200
*        IF ZXTARGGAP='INPUT' |                                         97502500
*           ZXTARGGAP='INOUT'                                           97506800
*          THEN                                                         97511100
*            DO;                                                        97515400
*            IF (XTARGGAP='0' & XMFSCK^='COMPLETE')                     97519700
*              THEN                                                     97524000
*                ANS('#Z'||ZNDX||'_XTARGGAP=0;'||                       97528300
*                    '/* XTARGGAP FIXED(31) */')                        97532600
*                    NORESCAN COL(MACLMAR);                             97536900
*            IF XTARGGAP^='0'                                           97541200
*              THEN                                                     97545500
*                ANS('#Z'||ZNDX||'_XTARGGAP='||                         97549800
*                    XTARGGAP||';'||                                    97554100
*                    '/* XTARGGAP FIXED(31) */')                        97558400
*                    NORESCAN COL(MACLMAR);                             97562700
*            END;                                                       97567000
*/*PI.L17 XSRCNUM FIXED(31)------------------------------------------*/ 97571300
*        IF ZXSRCNUM='INPUT' |                                          97575600
*           ZXSRCNUM='INOUT'                                            97579900
*          THEN                                                         97584200
*            ANS('#Z'||ZNDX||'_XSRCNUM='||                              97588500
*                XSRCNUM||';'||                                         97592800
*                '/* XSRCNUM FIXED(31) */')                             97597100
*                NORESCAN COL(MACLMAR);                                 97601400
*/*PI.L17 XTARGNUM FIXED(31)-----------------------------------------*/ 97605700
*        IF ZXTARGNUM='INPUT' |                                         97610000
*           ZXTARGNUM='INOUT'                                           97614300
*          THEN                                                         97618600
*            ANS('#Z'||ZNDX||'_XTARGNUM='||                             97622900
*                XTARGNUM||';'||                                        97627200
*                '/* XTARGNUM FIXED(31) */')                            97631500
*                NORESCAN COL(MACLMAR);                                 97635800
*/*PI.L23 XSRCLIST NAME----------------------------------------------*/ 97640100
*        IF ZXSRCLIST^=''                                               97644400
*          THEN                                                         97648700
*            ANS('#Z'||ZNDX||'_XSRCLIST='||                             97653000
*                'ADDR('||XSRCLIST||');'||                              97657300
*                '/* XSRCLIST NAME */')                                 97661600
*                NORESCAN COL(MACLMAR);                                 97665900
*/*PI.L23 XTARGLIST NAME---------------------------------------------*/ 97670200
*        IF ZXTARGLIST^=''                                              97674500
*          THEN                                                         97678800
*            ANS('#Z'||ZNDX||'_XTARGLIST='||                            97683100
*                'ADDR('||XTARGLIST||');'||                             97687400
*                '/* XTARGLIST NAME */')                                97691700
*                NORESCAN COL(MACLMAR);                                 97696000
*/*PI.L14 CHECK FOR * AS THE FIXED(32) ARGUMENT----------------------*/ 97700300
*        IF TRANSLATE(XUTILRTN)                                         97704600
*                    = '0'                                              97708900
*           & XMFSCK='COMPLETE'                                         97713200
*          THEN                                                         97717500
*            ZXUTILRTN='';                   /* RESET INPUT/INOUT */    97721800
*/*PI.L17 XUTILRTN FIXED(32)-----------------------------------------*/ 97726100
*        IF ZXUTILRTN='INPUT' |                                         97730400
*           ZXUTILRTN='INOUT'                                           97734700
*          THEN                                                         97739000
*            DO;                                                        97743300
*            IF (XUTILRTN='0' & XMFSCK^='COMPLETE')                     97747600
*              THEN                                                     97751900
*                ANS('#Z'||ZNDX||'_XUTILRTN=0;'||                       97756200
*                    '/* XUTILRTN FIXED(32) */')                        97760500
*                    NORESCAN COL(MACLMAR);                             97764800
*            IF XUTILRTN^='0'                                           97769100
*              THEN                                                     97773400
*                ANS('#Z'||ZNDX||'_XUTILRTN='||                         97777700
*                    XUTILRTN||';'||                                    97782000
*                    '/* XUTILRTN FIXED(32) */')                        97786300
*                    NORESCAN COL(MACLMAR);                             97790600
*            END;                                                       97794900
*/*PI.L14 CHECK FOR * AS THE CHAR(4) ARGUMENT------------------------*/ 97799200
*        IF TRANSLATE(XTHREAD)                                          97803500
*                    = '0'                                              97807800
*           & XMFSCK='COMPLETE'                                         97812100
*          THEN                                                         97816400
*            ZXTHREAD='';                    /* RESET INPUT/INOUT */    97820700
*/*PI.L21 XTHREAD NAME CHAR(4)---------------------------------------*/ 97825000
*        IF ZXTHREAD='INPUT' |                                          97829300
*           ZXTHREAD='INOUT'                                            97833600
*          THEN                                                         97837900
*            DO;                                                        97842200
*            IF (XTHREAD='0' & XMFSCK^='COMPLETE')                      97846500
*              THEN                                                     97850800
*                ANS('#Z'||ZNDX||'_XTHREAD=''''B;'||                    97855100
*                    '/* XTHREAD CHAR(4) */')                           97859400
*                    NORESCAN COL(MACLMAR);                             97863700
*            IF XTHREAD^='0'                                            97868000
*              THEN                                                     97872300
*                ANS('#Z'||ZNDX||'_XTHREAD='||                          97876600
*                    XTHREAD||';'||                                     97880900
*                    '/* XTHREAD CHAR(4) */')                           97885200
*                    NORESCAN COL(MACLMAR);                             97889500
*            END;                                                       97893800
*/*PI.L21 XPADCHAR NAME CHAR(1)--------------------------------------*/ 97898100
*        IF ZXPADCHAR='INPUT' |                                         97902400
*           ZXPADCHAR='INOUT'                                           97906700
*          THEN                                                         97911000
*            ANS('#Z'||ZNDX||'_XPADCHAR='||                             97915300
*                XPADCHAR||';'||                                        97919600
*                '/* XPADCHAR CHAR(1) */')                              97923900
*                NORESCAN COL(MACLMAR);                                 97928200
*/*PI.L06 XPAD FIXED(8)----------------------------------------------*/ 97932500
*        ZW='';                                                         97936800
*        ZMS='';                                                        97941100
*/*PI.L12 XPAD FIXED(8)----------------------------------------------*/ 97945400
*        IF XPAD='NO'                                                   97949700
*          THEN                                                         97954000
*            ZW='0';                                                    97958300
*/*PI.L12 XPAD FIXED(8)----------------------------------------------*/ 97962600
*        IF XPAD='YES'                                                  97966900
*          THEN                                                         97971200
*            ZW='128';                                                  97975500
*/*PI.L13 XPAD FIXED(8)----------------------------------------------*/ 97979800
*        IF ZW^=''                                                      97984100
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             97988400
*          THEN                                                         97992700
*            ANS('#Z'||ZNDX||'_XPAD='||                                 97997000
*                ZW||'; '||                                             98001300
*                '/* XPAD FIXED(8) */')                                 98005600
*                NORESCAN COL(MACLMAR);                                 98009900
*/*PI.L21 XPOOLTOKN NAME CHAR(10)------------------------------------*/ 98014200
*        IF ZXPOOLTOKN='INPUT' |                                        98018500
*           ZXPOOLTOKN='INOUT'                                          98022800
*          THEN                                                         98027100
*            ANS('#Z'||ZNDX||'_XPOOLTOKN='||                            98031400
*                XPOOLTOKN||';'||                                       98035700
*                '/* XPOOLTOKN CHAR(10) */')                            98040000
*                NORESCAN COL(MACLMAR);                                 98044300
*/*PI.L06 XSKIPBUF FIXED(8)------------------------------------------*/ 98048600
*        ZW='';                                                         98052900
*        ZMS='';                                                        98057200
*/*PI.L12 XSKIPBUF FIXED(8)------------------------------------------*/ 98061500
*        IF XSKIPBUF='NO'                                               98065800
*          THEN                                                         98070100
*            ZW='0';                                                    98074400
*/*PI.L12 XSKIPBUF FIXED(8)------------------------------------------*/ 98078700
*        IF XSKIPBUF='YES'                                              98083000
*          THEN                                                         98087300
*            ZW='128';                                                  98091600
*/*PI.L13 XSKIPBUF FIXED(8)------------------------------------------*/ 98095900
*        IF ZW^=''                                                      98100200
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             98104500
*          THEN                                                         98108800
*            ANS('#Z'||ZNDX||'_XSKIPBUF='||                             98113100
*                ZW||'; '||                                             98117400
*                '/* XSKIPBUF FIXED(8) */')                             98121700
*                NORESCAN COL(MACLMAR);                                 98126000
*/*PI.L06 XCSMUSER FIXED(8)------------------------------------------*/ 98130300
*        ZW='';                                                         98134600
*        ZMS='';                                                        98138900
*/*PI.L12 XCSMUSER FIXED(8)------------------------------------------*/ 98143200
*        IF XCSMUSER='NO'                                               98147500
*          THEN                                                         98151800
*            ZW='0';                                                    98156100
*/*PI.L12 XCSMUSER FIXED(8)------------------------------------------*/ 98160400
*        IF XCSMUSER='YES'                                              98164700
*          THEN                                                         98169000
*            ZW='128';                                                  98173300
*/*PI.L13 XCSMUSER FIXED(8)------------------------------------------*/ 98177600
*        IF ZW^=''                                                      98181900
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             98186200
*          THEN                                                         98190500
*            ANS('#Z'||ZNDX||'_XCSMUSER='||                             98194800
*                ZW||'; '||                                             98199100
*                '/* XCSMUSER FIXED(8) */')                             98203400
*                NORESCAN COL(MACLMAR);                                 98207700
*/*PI.L29 NOT MF=M MACRO FORM----------------------------------------*/ 98212000
*        IF XMF^='M'                                                    98216300
*          THEN                                                         98220600
*            DO;                                                        98224900
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 98229200
*              IF NUMBER(RSNCODE)>0                                     98233500
*                THEN                                                   98237800
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       98242100
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           98246400
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       98250700
*                  '/* PARAMETER LIST */')                              98255000
*                  NORESCAN COL(MACLMAR);                               98259300
*              IF SYSASCE^='P'                                          98263600
*                THEN                                                   98267900
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              98272200
*                      '/* PARAMETER LIST AR */')                       98276500
*                      NORESCAN COL(MACLMAR);                           98280800
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  98285100
*ANS('RFY (GPR00F,GPR15F) RSTD;') NORESCAN COL(MACLMAR+2);              98289400
*ANS('GEN CODE SETS(GPR00F,GPR15F) REFS(GPR01P);')                      98293700
*  NORESCAN COL(MACLMAR+2);                                             98298000
*ANS('             L    15,16(0,0)     CVT address')                    98302300
*  NORESCAN COL(MACGLMAR);                                              98306600
*ANS('             L    15,140(,15)    ECVT address')                   98310900
*  NORESCAN COL(MACGLMAR);                                              98315200
*ANS('             ICM  15,15,200(15)  CSM structure address')          98319500
*  NORESCAN COL(MACGLMAR);                                              98323800
*ANS('             BZ   NSRV'||MACINDEX||                               98328100
*    '       CSM structure not anchored')                               98332400
*  NORESCAN COL(MACGLMAR);                                              98336700
*IF XREQUEST = 'CHANGE_OWNER' THEN DO;                                  98341000
*ANS('             L    15,12(,15)'||                                   98345300
*    '     Change Owner Service Address')                               98349600
*  NORESCAN COL(MACGLMAR);                                              98353900
*ANS('             BALR 14,15          Call Change Owner service')      98358200
*  NORESCAN COL(MACGLMAR);                                              98362500
*END;                                                                   98366800
*ELSE IF XREQUEST = 'GET_BUFFER' THEN DO;                               98371100
*ANS("      TM   49(15),B'10000000'"||                                  98375400
*    "     Check for performance update")                               98379700
*  NORESCAN COL(MACGLMAR);                                              98384000
*ANS('      BNO  GPFM'||MACINDEX||                                      98388300
*    '     No performance update')                                      98392600
*  NORESCAN COL(MACGLMAR);                                              98396900
*ANS('             L    15,36(,15)'||                                   98401200
*    '     Get Buffer Service Address')                                 98405500
*  NORESCAN COL(MACGLMAR);                                              98409800
*ANS('             BALR 14,15          Call Get Buffer service')        98414100
*  NORESCAN COL(MACGLMAR);                                              98418400
*ANS('             B    DONE'||MACINDEX)                                98422700
*  NORESCAN COL(MACGLMAR);                                              98427000
*ANS('GPFM'||MACINDEX||'     EQU *')                                    98431300
*  NORESCAN COL(MACGLMAR);                                              98435600
*ANS('             L    15,8(,15)      CSM service address')            98439900
*  NORESCAN COL(MACGLMAR);                                              98444200
*ANS('             BALR 14,15          Call CSM service')               98448500
*  NORESCAN COL(MACGLMAR);                                              98452800
*END;                                                                   98457100
*ELSE IF XREQUEST = 'FREE_BUFFER' THEN DO;                              98461400
*ANS("      TM   49(15),B'10000000'"||                                  98465700
*    "     Check for performance update")                               98470000
*  NORESCAN COL(MACGLMAR);                                              98474300
*ANS('      BNO  FPFM'||MACINDEX||                                      98478600
*    '     No performance update')                                      98482900
*  NORESCAN COL(MACGLMAR);                                              98487200
*ANS('             L    15,40(,15)'||                                   98491500
*    '     Free Buffer Service Address')                                98495800
*  NORESCAN COL(MACGLMAR);                                              98500100
*ANS('             BALR 14,15          Call Free Buffer service')       98504400
*  NORESCAN COL(MACGLMAR);                                              98508700
*ANS('             B    DONE'||MACINDEX)                                98513000
*  NORESCAN COL(MACGLMAR);                                              98517300
*ANS('FPFM'||MACINDEX||'     EQU *')                                    98521600
*  NORESCAN COL(MACGLMAR);                                              98525900
*ANS('             L    15,8(,15)      CSM service address')            98530200
*  NORESCAN COL(MACGLMAR);                                              98534500
*ANS('             BALR 14,15          Call CSM service')               98538800
*  NORESCAN COL(MACGLMAR);                                              98543100
*END;                                                                   98547400
*ELSE DO;                                                               98551700
*ANS('             L    15,8(,15)      CSM service address')            98556000
*  NORESCAN COL(MACGLMAR);                                              98560300
*ANS('             BALR 14,15          Call CSM service')               98564600
*  NORESCAN COL(MACGLMAR);                                              98568900
*END;                                                                   98573200
*ANS('             B    DONE'||MACINDEX)                                98577500
*  NORESCAN COL(MACGLMAR);                                              98581800
*IF XREQUEST = 'CREATE_POOL' THEN DO;                                   98586100
*ANS('NSRV'||MACINDEX||'     EQU *')                                    98590400
*  NORESCAN COL(MACGLMAR);                                              98594700
*ANS('             LR   14,1           Save parameter list address')    98599000
*  NORESCAN COL(MACGLMAR);                                              98603300
*ANS('             LOAD EP=IVTSMCBF    Obtain CSM service address')     98607600
*  NORESCAN COL(MACGLMAR);                                              98611900
*ANS('             LR   15,0           Set CSM service address')        98616200
*  NORESCAN COL(MACGLMAR);                                              98620500
*ANS('             LR   1,14           Restore parameter list address') 98624800
*  NORESCAN COL(MACGLMAR);                                              98629100
*ANS('             BALR 14,15          Call CSM service')               98633400
*  NORESCAN COL(MACGLMAR);                                              98637700
*END;                                                                   98642000
*ELSE DO;                                                               98646300
*ANS('NSRV'||MACINDEX||'     EQU *')                                    98650600
*  NORESCAN COL(MACGLMAR);                                              98654900
*ANS('             LA   15,4           Set error return code')          98659200
*  NORESCAN COL(MACGLMAR);                                              98663500
*ANS('             LA   0,2            Set error reason code')          98667800
*  NORESCAN COL(MACGLMAR);                                              98672100
*END;                                                                   98676400
*ANS('DONE'||MACINDEX||'     EQU *')                                    98680700
*  NORESCAN COL(MACGLMAR);                                              98685000
*ANS('@ENDGEN;') NORESCAN COL(MACLMAR+2);                               98689300
*ANS('RFY (GPR00F,GPR15F) UNRSTD;') NORESCAN COL(MACLMAR+2);            98693600
*IF INDEX(EHAREGS,'00F') = 0 THEN     /* No register 0 yet...        */ 98697900
*  EHAREGS=EHAREGS||'00F';            /* Using register 0            */ 98702200
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  98706500
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         98710800
*              IF NUMBER(RETCODE)>0                                     98715100
*                THEN                                                   98719400
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       98723700
*/*PO.L03 XERRBFLST FIXED(31)----------------------------------------*/ 98728000
*              IF ZXERRBFLST='OUTPUT' |                                 98732300
*                 ZXERRBFLST='INOUT'                                    98736600
*                THEN                                                   98740900
*                  ANS(XERRBFLST||                                      98745200
*                      '=#Z'||ZNDX||'_XERRBFLST;'||                     98749500
*                      '/* XERRBFLST FIXED(31) */')                     98753800
*                      NORESCAN COL(MACLMAR);                           98758100
*/*PO.L03 XSRCERRL FIXED(31)-----------------------------------------*/ 98762400
*              IF ZXSRCERRL='OUTPUT' |                                  98766700
*                 ZXSRCERRL='INOUT'                                     98771000
*                THEN                                                   98775300
*                  ANS(XSRCERRL||                                       98779600
*                      '=#Z'||ZNDX||'_XSRCERRL;'||                      98783900
*                      '/* XSRCERRL FIXED(31) */')                      98788200
*                      NORESCAN COL(MACLMAR);                           98792500
*/*PO.L03 XTARGERRL FIXED(31)----------------------------------------*/ 98796800
*              IF ZXTARGERRL='OUTPUT' |                                 98801100
*                 ZXTARGERRL='INOUT'                                    98805400
*                THEN                                                   98809700
*                  ANS(XTARGERRL||                                      98814000
*                      '=#Z'||ZNDX||'_XTARGERRL;'||                     98818300
*                      '/* XTARGERRL FIXED(31) */')                     98822600
*                      NORESCAN COL(MACLMAR);                           98826900
*/*PO.L02 XDS_INFO PTR(31)-------------------------------------------*/ 98831200
*              IF ZXDS_INFO='OUTPUT' |                                  98835500
*                 ZXDS_INFO='INOUT'                                     98839800
*                THEN                                                   98844100
*                  ANS(XDS_INFO||                                       98848400
*                      '=#Z'||ZNDX||'_XDS_INFO;'||                      98852700
*                      '/* XDS_INFO PTR(31) */')                        98857000
*                      NORESCAN COL(MACLMAR);                           98861300
*/*PO.L02 XSTATAREA PTR(31)------------------------------------------*/ 98865600
*              IF ZXSTATAREA='OUTPUT' |                                 98869900
*                 ZXSTATAREA='INOUT'                                    98874200
*                THEN                                                   98878500
*                  ANS(XSTATAREA||                                      98882800
*                      '=#Z'||ZNDX||'_XSTATAREA;'||                     98887100
*                      '/* XSTATAREA PTR(31) */')                       98891400
*                      NORESCAN COL(MACLMAR);                           98895700
*/*PO.L05 XRETPTOKN CHAR(10)-----------------------------------------*/ 98900000
*              IF ZXRETPTOKN='OUTPUT' |                                 98904300
*                 ZXRETPTOKN='INOUT'                                    98908600
*                THEN                                                   98912900
*                  ANS(XRETPTOKN||                                      98917200
*                      '=#Z'||ZNDX||'_XRETPTOKN;'||                     98921500
*                      '/* XRETPTOKN CHAR(10) */')                      98925800
*                      NORESCAN COL(MACLMAR);                           98930100
*/*PO.L08 XRETCODE CHAR(10) RETURN CODE------------------------------*/ 98934400
*              IF NUMBER(RETCODE)>0                                     98938700
*                THEN                                                   98943000
*                    ANS(XRETCODE||                                     98947300
*                     '=GPR15F; /* SET RETURN CODE */')                 98951600
*                      NORESCAN COL(MACLMAR);                           98955900
*/*PO.L09 XRSNCODE CHAR(10) REASON CODE------------------------------*/ 98960200
*              IF NUMBER(RSNCODE)>0                                     98964500
*                THEN                                                   98968800
*                    ANS(XRSNCODE||                                     98973100
*                     '=GPR00F; /* SET REASON CODE */')                 98977400
*                      NORESCAN COL(MACLMAR);                           98981700
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 98986000
*              IF NUMBER(RSNCODE)>0                                     98990300
*                THEN                                                   98994600
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         98998900
*              IF NUMBER(RETCODE)>0                                     99003200
*                THEN                                                   99007500
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         99011800
*/*PO.L11 END OF FUNCTION INVOCATION---------------------------------*/ 99016100
*            END;                                                       99020400
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 99024700
*      END;                                                             99029000
*/*PO.L13 IVTCSM USAGE INDICATOR-------------------------------------*/ 99033300
*  ZIVTCSM='YES';                            /* SET IVTCSM USED */      99037600
*/*PO.L15 END OF EXECUTABLE IVTCSM-PLISTVER MACRO--------------------*/ 99041900
*  IF XMF^='L'                                                          99046200
*    THEN                                                               99050500
*      ANS('END; /* IVTCSM-PLISTVER */')                                99054800
*          NORESCAN COL(MACLMAR);                                       99059100
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 99063400
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              99067700
*/*PO.L17 END OF IVTCSM MACRO----------------------------------------*/ 99072000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        99076300
*  ANS(' ') NORESCAN COL(MACLMAR);                                      99080600
*/*******************************************************************/  99084900
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  99089200
*/*******************************************************************/  99093500
*      END;                                                             99097800
*/*******************************************************************/  99102100
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  99106400
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  99110700
*/*******************************************************************/  99115000
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  99119300
*    THEN                                                               99123600
*      DO;                                                              99127900
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       99132200
*                                      DOUBLEWORD MULTIPLES        */   99136500
*/*******************************************************************/  99140800
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  99145100
*/*******************************************************************/  99149400
*        IF XMF ^= 'M' & XMF ^= 'E'                                     99153700
*          THEN                                                         99158000
*            DO;                                                        99162300
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  99166600
*                THEN                                                   99170900
*                  DO;                                                  99175200
*                    ANS('?EPILOG                                       99179500
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        99183800
*                    EHALIST=EHALIST||',AMG,';                          99188100
*                  END;                                                 99192400
*            END;                                                       99196700
*/*******************************************************************/  99201000
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  99205300
*/*******************************************************************/  99209600
*        IF XMF ^= 'M' & XMF ^= 'E'                                     99213900
*          THEN                                                         99218200
*            DO;                                                        99222500
*              IF ZPRMMAX>EHAMAXLEN                                     99226800
*                THEN                                                   99231100
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  99235400
*            END;                                                       99239700
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 99244000
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   99248300
*              COL(MACLMAR);                                            99252600
*        END;                                                           99256900
*      END;                                                             99261200
*/*-----------------------------------------------------------------*/  99265500
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  99269800
*/*        BY ?EPILOG                                               */  99274100
*/*-----------------------------------------------------------------*/  99278400
*        IF INDEX(EHAREGS,'01P')=0                                      99282700
*          THEN                                                         99287000
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  99291300
*        IF INDEX(EHAREGS,'00F')=0                                      99295600
*          & NUMBER(RSNCODE)>0                                          99299900
*          THEN                                                         99304200
*            EHAREGS=EHAREGS||'00F'; /* GPR00F                      */  99308500
*        IF INDEX(EHAREGS,'15F')=0                                      99312800
*          THEN                                                         99317100
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  99321400
*  RETURN CODE(ZMACRET);                                                99325700
*%END IVTCSM;                                                           99330000
