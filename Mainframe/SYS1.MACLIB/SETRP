*/********************************************************************/ 00007400
*/*                                                                  */ 00014800
*/*01* MACRO NAME: SETRP                                             */ 00022200
*/*                                                                  */ 00029600
*/*01* DESCRIPTIVE NAME: Set Return Parameters                       */ 00037000
*/*                                                                  */ 00044400
*/*01* PROPRIETARY STATEMENT:                                        */ 00051800
*/*                                                                  */ 00059200
*/*            5647-A01                                              */ 00079600
*/*            THIS MODULE IS "RESTRICTED MATERIALS OF IBM"          */ 00100000
*/*            (C) COPYRIGHT IBM CORP. 1980,2000                     */ 00150000
*/*            LICENSED MATERIALS - PROPERTY OF IBM                  */ 00200000
*/*                                                                  */ 00350000
*/* STATUS  = HBB7703                                                */ 00375400
*/*                                                                  */ 00400900
*/*01* FUNCTION: Provides the interface for recovery routines to     */ 00401800
*/*              communicate with RTM                                */ 00402700
*/*                                                                  */ 00403600
*/*01* EXTERNAL CLASSIFICATION:                                      */ 00404500
*/*                                                                  */ 00405400
*/*02* PI: BASE                                                      */ 00406300
*/*                                                                  */ 00407200
*/*02* NONE: FIELDS                                                  */ 00408100
*/*          CPU                                                     */ 00409000
*/*                                                                  */ 00409900
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00410800
*/*                                                                  */ 00411700
*/*01* MODULE TYPE:  ASSEM MACRO                                     */ 00412600
*/*                                                                  */ 00413500
*/*02*   PROCESSOR:  ASSEM                                           */ 00414400
*/*                                                                  */ 00415300
*/*01* COMPONENT:  SCRTM                                         @P7C*/ 00416200
*/*                                                                  */ 00417100
*/*01* DISTRIBUTION LIBRARY: AMACLIB                                 */ 00418000
*/*                                                                  */ 00418900
*/*01* CHANGE ACTIVITY:                                              */ 00419800
*/*                                                                  */ 00420700
*/* SU33(ENHANCED DUMP) 7/30/76                              @G33SPHW*/ 00421600
*/* MVS/SYSTEM PRODUCT RELEASE 2 6/26/79                     @G382P2F*/ 00422500
*/* MVS/SYSTEM PRODUCT HBB2102 03/27/81                      @G860P1C*/ 00423400
*/*          APAR OZ86653 - SET SDWAACF2 BIT ON TO FREE CML  @ZA86653*/ 00424300
*/*                         LOCK IF REQUESTED.               @ZA86653*/ 00425200
*/* $L1=RASENH ,JBB2220,840313,PDA8: RETRY ENHANCEMENTS          @L1C*/ 00426100
*/* $P1=PA20094,JBB2220,850214,PDA8: REMOVE SYSLIST CHECKING     @P1C*/ 00427000
*/* $L2 = AR    HBB3310 850901 PDXB: AR SUPPORT                      */ 00427900
*/* $D1=DCR0031,HBB3310,860423,PDT9: IOS LOCK SUPPORT            @D1A*/ 00428800
*/* $L3=DATASPAC,HBB3310,860728,PDA8: RSMDS LOCK SUPPORT         @L3A*/ 00429700
*/* $L4=DATASPAC,HBB3310,861029,PDT9: PROPAGATION OF DATA SPACE STRG */ 00430600
*/*                                   RANGES FOR ABDUMP          @L4A*/ 00431500
*/* $P2=PC40460,HBB3310,861215,PDT9: NO LOCKWORD FOR IOS LOCK    @P2A*/ 00432400
*/* $P3=PC40713,HBB3310,870225,PDT9: MOVE IOS LOCK BIT           @P3A*/ 00433300
*/* $L5=LOCKR  ,JBB3320,870916,PDT9: LOCK RESTRUCTURE            @L5A*/ 00434200
*/* $L6=CLOCK  ,JBB3320,870916,PDT9: NEW LOCK FOR ETR            @L6A*/ 00435100
*/* $L7=JUP03  ,HBB4410,870916,PDT9: NEW LOCKS FOR SMSX          @L7A*/ 00436000
*/* $L8=COUPLRTM,HBB4410,870916,PDT9: NEW LOCKS FOR XCF          @L8A*/ 00436900
*/* $L9=USERV   ,HBB4410,890626,PDCI: NEW IOSULUT LOCK           @L9A*/ 00437800
*/* $01=OY37687 ,HBB4410,901101,PDXB: FIX REASON 4095 CHECK          */ 00438700
*/* $LA=SYSLKRTM,HBB5510,900112,PD00XB: NEW LOCKS FOR SLM        @LAA*/ 00439600
*/* $P4=PIG0024,HBB5510,900112,PD00XB: REMOVE DUPLICATE ETRSET       */ 00440500
*/* $P5=PIG0063,HBB5510,900906,PD00CJ: @LAA IN CONTIUATION COLUMN    */ 00441400
*/* $LB=SUBSPRTM,HBB5510,930329,PDKD: ADD SSRESET OPTION FOR         */ 00442300
*/*                                   SUBSPACE SUPPORT           @LBA*/ 00443200
*/* $02=OW02796 ,HBB5510,931207,PDKD: NEW IXLREQST LOCK          @02A*/ 00444100
*/* $P6=PN71728  HBB5520 941007 PDKD: Fix up prolog              @P6A*/ 00445000
*/* $P7=PR20011  HBB6601 950908 PDKD: SC1CM compid split         @P7A*/ 00447500
*/* $LC=WLMPSAM  HBB6601 950929 PDKD: New locks for WLM and RRS  @LCA*/ 00448700
*/* $P8=PQC0553  HBB6603 951030 PDKD: Remove unsupported locks   @P8A*/ 00449300
*/* $P9=PQC0626  HBB6603 951204 PDKD: Rearrange locks            @P9A*/ 00449600
*/* $PA=PQC0643  HBB6603 951207 PDKD: Reinstate locks            @PAA*/ 00449800
*/* $LD=64BITRTM HBB7703 980223 PDKD: 64-bit regs                    */ 00449900
*/*                                                                  */ 00450000
* %/*                                                                   00500000
        MACRO                                                           00550000
&NAME    SETRP &RETADDR=,&RETREGS=,&DUMP=,&RECORD=,&WKAREA=,&REGS=,    J00600000
               &DUMPOPT=,&DUMPOPX=,&RECPARM=,&RC=0,&FRELOCK=,&CPU=,    X00650000
               &COMPCOD=,&FRESDWA=,&RUB=,                              S00700000
               &SERIAL=,&RETRY=,&FRLKRTY=,&REMREC=,&RETRY15=,          S00750000
               &REASON=,&SSRESET=                                  @LBC 00800000
.*A000000                                                        Y02704 01389800
         LCLC  &A                                                       01400000
         LCLA  &B                                                       01450000
         LCLA  &I                                                       01500000
         LCLA  &J                                                       01550000
         LCLA  &K                                                       01600000
         LCLA  &L                                                       01650000
         LCLA  &M                                                       01700000
         LCLC  &N                                                       01750000
         LCLA  &LFLAG1                                                  01800000
         LCLA  &LFLAG2                                                  01850000
         LCLA  &LFLAG3                                       @G860P1C   01900000
         LCLA  &LFLAG4                                       @G860P1C   01950000
         LCLA  &LFLAG5                                           @L5A   01960000
         LCLA  &LFLAG6                                           @L5A   01970000
         LCLA  &LFLAG7                                           @L5A   01980000
         LCLA  &LFLAG8                                           @L5A   01990000
         LCLB  &LOCKEXT                                      @G860P1C   02000000
         LCLB  &CCRC                                         @G860P1C   02050000
         LCLC  &LA                      "LA" OR "LAE" VIA SYSSTATE @L2A 02100000
         GBLC  &SYSASCE                                            @L2A 02450000
         SYSSTATE TEST                  TEST ASC ENVIRONMENT       @L2A 02500000
&LA      SETC  'LA'                     MUST USE LA INSTRUCTION    @L2A 02510000
         AIF   ('&SYSASCE' EQ 'P').NOLAE                           @L2A 02520000
&LA      SETC  'LAE'                    MUST USE LAE               @L2A 02530000
.NOLAE   ANOP                                                      @L2A 02540000
&B       SETA  &RC                                                      02550000
&I       SETA  1                                                        02600000
&J       SETA  N'&FRELOCK                                               02650000
&LFLAG1  SETA  0                                                        02700000
&LFLAG2  SETA  0                                                        02750000
&LFLAG3  SETA  0                                             @G860P1C   02800000
&LFLAG4  SETA  0                                             @G860P1C   02850000
&LFLAG5  SETA  0                                                        02860000
&LFLAG6  SETA  0                                                        02870000
&LFLAG7  SETA  0                                                 @L5A   02880000
&LFLAG8  SETA  0                                                 @L5A   02890000
&LOCKEXT SETB  0                                             @G860P1C   02900000
&CCRC    SETB  0                                             @G860P1C   02950000
         NOPR  SDWANOPR    IF THIS STATEMENT CAUSES ASSEMBLER ERROR     03000000
*                          IT IMPLIES THAT SETRP AND THE SDWA ARE       03050000
*                          BEING USED IMCOMPATABLY           @G38AP2F   03100000
         ORG   *-2         OVERLAY THE PREVIOUS INSTRUCTION  @G38AP2F   03150000
         AIF   ('&WKAREA' NE '').CONT                                   03200000
         AIF   ('&NAME' EQ '').RC                                       03250000
&NAME    EQU   *                                                        03300000
         AGO   .RC                                                      03350000
.CONT    ANOP                                                           03400000
&A       SETC  'WKAREA'                                                 03450000
         AIF   ('&WKAREA'(1,1) NE '(').ERR1                             03500000
&NAME    LR    1,&WKAREA(1) .           ACCESS POINTER TO SDWA          03550000
         AIF   ('&SYSASCE' EQ 'P').RC                              @L2A 03600000
         CPYA  1,&WKAREA(1)                                        @L2A 03650000
.RC      ANOP                                                           03700000
         AIF   ('&RC'(1,1) EQ '(').ERR17                                03750000
         AIF   (&B EQ 16 OR &B EQ 0).STRC                               03800000
         AIF   (&B EQ 4).RETA                                           03850000
         IHBERMAC 54,,&RC                                               03900000
         MEXIT                                                          03950000
.RETA    ANOP                                                           04000000
         AIF   ('&RETADDR' EQ '').ERR2                                  04050000
         AIF   ('&FRLKRTY' EQ '' AND '&REMREC' EQ '' AND               X04100000
               '&RETRY15' EQ '').MVRC   CHECK FOR RETRY OPTIONS    @L1A 04150000
.********************************************************************** 04200000
.*              RETRY OPTIONS PORCESSING                          @L1A* 04250000
.********************************************************************** 04300000
         L     15,SDWAXPAD-SDWA(0,1)      LIST OF EXTENSIONS PTR   @L1A 04350000
         AIF   ('&SYSASCE' EQ 'P').NOAR17                          @L2A 04400000
         CPYA  15,1                   SET UP ALET OF EXTENSION     @L2A 04450000
.NOAR17  ANOP                                                      @L2A 04500000
         L     15,SDWASRVP-SDWAPTRS(0,15) LOAD 1ST REC EXT PTR     @L1A 04550000
         AIF   ('&FRLKRTY' EQ '').TSTST15 SEE IF FRLKRTY IS USED   @L1A 04600000
         AIF   ('&FRLKRTY' EQ 'YES').SETFRLK TEST IF THERE IS REQUEST  X04650000
                                          TO FREE LOCKS            @L1A 04700000
         AIF   ('&FRLKRTY' EQ 'NO').NOFRLK TEST IF THERE IS A REQUEST  X04750000
                                          NOT TO FREE LOCKS        @L1A 04800000
         AGO   .ERR21                     ILLEGAL FRLKRTY VALUE    @L1A 04850000
.SETFRLK OI    SDWARETF-SDWARC1(15),SDWAFRLK FREE LOCKS ON RETRY   @L1A 04900000
         AGO   .TSTST15                   TEST RETRY15 KEYWORD     @L1A 04950000
.NOFRLK  NI    SDWARETF-SDWARC1(15),X'FF'-SDWAFRLK DONT FREE LOCKS @L1A 05000000
.TSTST15 AIF   ('&RETRY15' EQ '').TSTFRRD IF RETRY15 SPECIFIED     @L1A 05050000
         AIF   ('&RETRY15' EQ 'YES').SETRG TEST IF REQUEST TO SET      X05100000
                                          REGISTER 15 ON RETRY     @L1A 05150000
         AIF   ('&RETRY15' EQ 'NO').NOSETRG TEST TO SEE IF REGISTER 15 X05200000
                                          SHOULD NOT BE SET        @L1A 05250000
         AGO   .ERR22                     ILLEGAL RETRY15 VALUE    @L1A 05300000
.SETRG   OI    SDWARETF-SDWARC1(15),SDWART15 TURN BIT ON TO SET R15 TO X05350000
                                          THE VALUE IN SDWASR15    @L1A 05400000
         AGO   .TSTFRRD                   GO TEST REMREC           @L1A 05450000
.NOSETRG NI    SDWARETF-SDWARC1(15),X'FF'-SDWART15 TURN OFF BIT SO R15 X05500000
                                    WILL BE SET WITH RETRY ADDRESS @L1A 05550000
.TSTFRRD AIF   ('&REMREC' EQ '').MVRC     REMREC SPECIFIED         @L1A 05600000
         AIF   ('&REMREC' EQ 'YES').SETFRRD TEST REMREC=YES        @L1A 05650000
         AIF   ('&REMREC' EQ 'NO').NOFRRD TEST REMREC=NO           @L1A 05700000
         AGO   .ERR23                     ILLEGAL REMREC VALUE     @L1A 05750000
.SETFRRD OI    SDWARETF-SDWARC1(15),SDWAREMR INDICATE DELETE FRR   @L1A 05800000
         AGO   .MVRC                      GO TO RC PROCESSING      @L1A 05850000
.NOFRRD  NI    SDWARETF-SDWARC1(15),X'FF'-SDWAREMR KEEP FRR        @L1A 05900000
.MVRC    MVI   SDWARCDE-SDWA(1),&RC(1) . INITIALIZE RC FIELD            05950000
         AIF   ('&RETADDR'(1,1) EQ '(').RETAR                           06000000
         LA    15,&RETADDR(1) .        ACCESS RETRY ADDRESS             06050000
         AGO   .RETAB                                                   06100000
.RETAR   ANOP                                                           06150000
         LR    15,&RETADDR(1) .        ACCESS RETRY ADDRESS             06200000
.RETAB   ANOP                                                           06250000
         ST    15,SDWARTYA-SDWA(,1) .  INITIALIZE RETRY ADDRESS FIELD   06300000
.FSDWA   ANOP                                                           06350000
         AIF   ('&FRESDWA' EQ '' OR '&FRESDWA' EQ 'NO').RECORD          06400000
         AIF   ('&FRESDWA' NE 'YES').ERR11                              06450000
         OI    SDWAACF2-SDWA(1),SDWAFREE   TURN ON FREE SDWA            06500000
         AGO   .RECORD                                                  06550000
.STRC    ANOP                        THIS SECTION EXECUTED IF RC=0 @L1C 06600000
         MVI   SDWARCDE-SDWA(1),&RC(1) .       PUT RC IN SDWA           06650000
         AIF   ('&FRESDWA' NE '' AND '&FRESDWA' NE 'NO').ERR10          06700000
         AIF   ('&RETREGS' NE '' AND '&RETREGS' NE 'NO').ERR15          06750000
         AIF   ('&RETADDR' NE '').ERR3                                  06800000
         AIF   ('&FRLKRTY' NE '').ERR16                            @L1A 06850000
         AIF   ('&REMREC' NE '').ERR24                             @L1A 06900000
         AIF   ('&RETRY15' NE '').ERR25                            @L1A 06950000
.RECORD  ANOP                                                           07000000
         AIF   ('&RECORD' EQ 'NO').TRECP                                07050000
         AIF   ('&RECORD' EQ 'IGNORE' OR '&RECORD' EQ '').RECPARM       07100000
         AIF   ('&RECORD' NE 'YES').ERR4                                07150000
         OI    SDWAACF2-SDWA(1),SDWARCRD   TURN ON RECORD INDICATOR     07200000
.RECPARM ANOP                                                           07250000
         AIF   ('&RECPARM' EQ '').DUMP                                  07300000
         AIF   ('&RECPARM'(1,1) EQ '(').RECPR                           07350000
         &LA   15,&RECPARM(1) .       ACCESS RECORD PARAMETER LIST @L2C 07400000
         AGO   .RECPCOM                                                 07450000
.RECPR   ANOP                                                           07500000
         &LA   15,0(,&RECPARM(1)) .   ACCESS RECORD PARAMETER LIST @L2C 07550000
.RECPCOM ANOP                                                           07600000
         MVC   SDWARECP-SDWA(24,1),0(15)                                07650000
*                                   MOVE RECORD PARAMETER INTO SDWA     07700000
         AGO   .DUMP                                                    07750000
.TRECP   ANOP                                                           07800000
         AIF   ('&RECPARM' NE '').ERR6                                  07850000
         NI    SDWAACF2-SDWA(1),X'FF'-SDWARCRD    TURN OFF RECORD FLAG  07900000
.DUMP    ANOP                                                           07950000
         AIF   ('&DUMP' EQ 'IGNORE' OR '&DUMP' EQ '').TDUMPOP           08000000
         AIF   ('&DUMP' EQ 'NO').TDOPTS                                 08050000
         AIF   ('&DUMP' NE 'YES').ERR7                                  08100000
         OI    SDWACMPF-SDWA(1),SDWAREQ   TURN ON DUMP INDICATOR        08150000
         AIF   ('&DUMPOPT' EQ '').RETREGS                               08200000
         AIF   ('&DUMPOPX' NE '').ERR26                            @L4A 08225000
         AIF   ('&DUMPOPT'(1,1) EQ '(').DUMPR                           08250000
         &LA   15,&DUMPOPT(1) .      ACCESS PTR TO DUMP PARAMETERS @L2C 08300000
         AGO   .DOPTCOM                                                 08350000
.DUMPR   ANOP                                                           08400000
         &LA   15,0(,&DUMPOPT(1)) .  ACCESS PTR TO DUMP PARAMETERS @L2C 08450000
.DOPTCOM ANOP                                                           08500000
         OI    SDWADPFS-SDWA(1),SDWADLST  TURN ON DUMP OPTION INDICATOR 08550000
         MVC   SDWADDAT-SDWA(4,1),4(15)  ACCESS SDATA AND PDATA FIELDS  08600000
         OI    SDWADPFS-SDWA(1),SDWAENSN  INDICATE ENHANCED DUMP        08650000
*                                                              @G382P2F 08700000
         OI    SDWADPF2-SDWA(1),SDWALVL2  INDICATE HBB2102 VERSION      08750000
*                                         OF SNAP PARMLIST     @G860P1C 08800000
         TM    1(15),X'02'             TEST FOR STORAGE LIST            08850000
         BO    M&SYSNDX                BRANCH IF STORAGE LIST SPECIFIED 08900000
         SR    14,14 .                 ZERO REGISTER FOR COMPARE        08950000
         CL    14,16(,15) .            FURTHER TEST FOR STORAGE LIST    09000000
         BE    Q&SYSNDX             BRANCH IF NO STORAGE LIST  @G860P1C 09050000
M&SYSNDX EQU   *                                               @G382P2F 09100000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G382P2F 09150000
         AIF   ('&SYSASCE' EQ 'P').NOAR1                           @L2A 09200000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 09250000
.NOAR1   ANOP                                                      @L2A 09300000
         L     14,SDWADSRP-SDWAPTRS(0,14) ADDR OF DUMP STORAGE RANGES   09350000
*                                         EXTENSION            @G382P2F 09400000
         LTR   14,14                  TEST IF EXTENSION EXISTS @G382P2F 09450000
         BZ    Q&SYSNDX               BRANCH IF NO DUMP STORAGE RANGES  09500000
*                                     EXTENSION                @G860P1C 09550000
         OI    SDWADPFS-SDWA(1),SDWASLST   TURN ON STORAGE LIST         09600000
*                                          FLAG                @G382P2F 09650000
         OI    SDWADPF2-SDWA(1),SDWADVS3   INDICATE RANGES ARE IN       09700000
*                                          SDWADSR             @G382P2F 09750000
         SLR   14,14                ZERO LENGTH REG            @G382P2F 09800000
         AIF   ('&SYSASCE' EQ 'P').NOAR13                               09850000
         LAM   0,0,32(15)           GET ALET                       @L2A 09900000
.NOAR13  ANOP                                                           09950000
         TM    2(15),X'80'          TEST MAX NUMBER OF RANGES  @G382P2F 10000000
         L     15,16(,15) .            ACCESS POINTER TO STORAGE LIST   10050000
         AIF   ('&SYSASCE' EQ 'P').NOAR14                               10100000
         CPYA  15,0                 SET ACCESS REGISTER            @L2A 10150000
.NOAR14  ANOP                                                           10200000
         BO    K&SYSNDX            BRANCH IF 30 RANGES ALLOWED @G382P2F 10250000
         LA    0,32                 INIT MAX LENGTH TO 4       @G382P2F 10300000
         B     L&SYSNDX                                        @G382P2F 10350000
K&SYSNDX EQU   *                                               @G382P2F 10400000
         LA    0,240                INIT MAX LENGTH TO 30      @G382P2F 10450000
L&SYSNDX EQU   *                                               @G382P2F 10500000
N&SYSNDX EQU   *                    TOP OF LOOP WHICH CALCULATES        10550000
*                                   MVC LENGTH                 @G382P2F 10600000
         LA    14,8(,14)            INCREMENT LENGTH REG BY 8  @G382P2F 10650000
         TM    4(15),X'80'          TEST IF END OF LIST        @G382P2F 10700000
         LA    15,8(,15)            POINT TO NEXT RANGE        @G382P2F 10750000
         BO    O&SYSNDX             BRANCH IF END OF LIST      @G382P2F 10800000
         CR    14,0                 TEST IF MAX LENGTH REACHED @G382P2F 10850000
         BL    N&SYSNDX             BRANCH IF NOT REACHED      @G382P2F 10900000
O&SYSNDX EQU   *                    EXIT OF LOOP WHICH CALC MVC         10950000
*                                   LENGTH                     @G382P2F 11000000
         SR    15,14                POINT TO BEGINNING OF STORAGE       11050000
*                                   LIST                       @G382P2F 11100000
         BCTR  14,0                 ADJUST LENGTH FOR EXECUTE FORM      11150000
*                                   OF MVC                     @G382P2F 11200000
         LR    0,1                  SAVE SDWA ADDRESS          @G382P2F 11250000
         L     1,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS  @G382P2F 11300000
         L     1,SDWADSRP-SDWAPTRS(0,1) ADDRESS OF DUMP STORAGE RANGE   11350000
*                                       EXTENSION              @G382P2F 11400000
         EX    14,P&SYSNDX          EXECUTE MVC INSTRUCTION    @G382P2F 11450000
         LA    15,3                 LOAD 3 INTO REG 15         @G382P2F 11500000
         SR    14,15                CALC LENGTH TO LAST ADDR   @G382P2F 11550000
         AR    1,14                 CALC ADDR OF LAST ADDR MOVED INTO   11600000
*                                   THE SDWA                   @G382P2F 11650000
         OI    0(1),X'80'           ENSURE LAST RANGE IS IND   @G382P2F 11700000
         LR    1,0                  RESTORE REG 1 WITH SDWA             11750000
*                                   ADDRESS                    @G382P2F 11800000
         B     E&SYSNDX                                        @G382P2F 11850000
P&SYSNDX EQU   *                                               @G382P2F 11900000
         MVC   0(0,1),0(15)         MOVE DUMP STORAGE RANGES INTO       11950000
*                                   SDWA EXTENSION             @G382P2F 12000000
E&SYSNDX EQU  *                                                         12050000
         AIF  ('&DUMPOPT'(1,1) EQ '(').SBPLR                 @G860P1C   12100000
         &LA  15,&DUMPOPT(1) .      ACCESS PTR TO DUMP PARMS     @L2C   12150000
         AGO  .SBPLCOM                                       @G860P1C   12200000
.SBPLR   ANOP                                                @G860P1C   12250000
         LR   15,&DUMPOPT(1)        ACCESS PTR TO DUMP PARMS @G860P1C   12300000
         AIF  ('&SYSASCE' EQ 'P').SBPLCOM                               12350000
         CPYA 15,&DUMPOPT(1)        GET ITS ALET TOO                    12400000
.SBPLCOM ANOP                                                @G860P1C   12450000
Q&SYSNDX EQU  *                                              @G860P1C   12500000
         TM   2(15),X'02'           TEST FOR SUBPOOL LIST    @G860P1C   12550000
         BZ   U&SYSNDX              BRANCH IF NO SUBPOOL     @ZMC3083   12600000
*                                   LIST SPECIFIED           @ZMC3083   12650000
         SR   14,14                ZERO REGISTER FOR COMPARE @G860P1C   12700000
         CL   14,24(0,15)           FURTHER TEST FOR SUBPOOL LIST       12750000
*                                                            @ZMC2078   12800000
         BE   U&SYSNDX             BRANCH IF NO SUBPOOL LIST @G860P1C   12850000
V&SYSNDX EQU  *                                              @G860P1C   12900000
         L    14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS  @G860P1C   12950000
         AIF   ('&SYSASCE' EQ 'P').NOAR2                           @L2A 13000000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 13050000
.NOAR2   ANOP                                                      @L2A 13100000
         L    14,SDWAXSPL-SDWAPTRS(0,14)  ADDR OF SUBPOOL LIST          13150000
*                                         EXTENSION          @G860P1C   13200000
         LTR  14,14                TEST IF EXTENSION EXISTS  @G860P1C   13250000
         BZ   U&SYSNDX             BRANCH IF NO SUBPOOL LIST            13300000
*                                  EXTENSION                 @G860P1C   13350000
         OI   SDWADPF2-SDWA(1),SDWASUBL  TURN ON SUBPOOL LIST           13400000
*                                        FLAG                @G860P1C   13450000
         AIF   ('&SYSASCE' EQ 'P').NOAR15                               13500000
         LAM   14,14,40(15)         GET ALET                       @L2A 13550000
.NOAR15  ANOP                                                           13600000
         L    15,24(0,15)          ACCESS POINTER TO SUBPOOL LIST      *13650000
                                                             @ZMC2078   13700000
         AIF   ('&SYSASCE' EQ 'P').NOAR16                               13750000
         CPYA  15,14                SET ACCESS REGISTER            @L2A 13800000
.NOAR16  ANOP                                                           13850000
         LH   14,0(,15)           PICK UP NUMBER OF SUBPOOLS @G860P1C   13900000
         LTR  14,14               TEST FOR ZERO              @G860P1C   13950000
         BNP  U&SYSNDX            BRANCH IF NO SUBPOOLS      @ZMC3083   14000000
         LA   0,SDWASPMX(0,0)     GET MAX NUMBER SUBPOOLS    @G860P1C   14050000
         CR   14,0                TEST FOR MAX SUBPOOLS      @G860P1C   14100000
         BNH  S&SYSNDX            BRANCH IF EQUAL OR LESS    @G860P1C   14150000
         LR   14,0                MOVE ONLY MAX SUBPOOL IDS  @G860P1C   14200000
S&SYSNDX EQU  *                                              @G860P1C   14250000
         LR   0,1                 SAVE SDWA ADDRESS          @G860P1C   14300000
         L    1,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION POINTERS          14350000
*                                                            @G860P1C   14400000
         L    1,SDWAXSPL-SDWAPTRS(0,1)  ADDR OF SUBPOOL LIST            14450000
*                                       EXTENSION            @G860P1C   14500000
         STH  14,SDWASPLN-SDWANRC2(0,1)  STORE NUMBER OF SUBPOOLS       14550000
*                                                            @G860P1C   14600000
         SLL  14,1                  DOUBLE NUMBER TO GET LENGTH         14650000
*                                   OF MOVE                  @G860P1C   14700000
         BCTR  14,0                 ADJUST LENGTH FOR EXECUTE FORM      14750000
*                                   OF MVC                     @G860P1C 14800000
         EX   14,T&SYSNDX           MOVE THE SUBPOOL IDS     @G860P1C   14850000
         LR   1,0                   RESTORE REG1 WITH SDWA ADDRESS      14900000
*                                                            @G860P1C   14950000
         B    U&SYSNDX                                       @G860P1C   15000000
T&SYSNDX EQU  *                                              @G860P1C   15050000
         MVC  SDWASPLS-SDWANRC2(0,1),2(15)  MOVE SUBPOOL IDS INTO       15100000
*                                           SDWA EXTENSION   @G860P1C   15150000
U&SYSNDX EQU  *                                              @G860P1C   15200000
         AGO   .RETREGS                                                 15250000
.TDOPTS  ANOP                                                           15300000
         AIF   ('&DUMPOPT' NE '').ERR8                                  15350000
         AIF   ('&DUMPOPX' NE '').ERR8                             @L4A 15375000
         NI    SDWACMPF-SDWA(1),X'FF'-SDWAREQ TURN OFF DUMP INDICATOR   15400000
.TDUMPOP ANOP                                                           15450000
         AIF   ('&DUMPOPT' NE '').ERR8                                  15500000
         AIF   ('&DUMPOPX' NE '').ERR8                             @L4A 15525000
.RETREGS ANOP                                                           15550000
         AIF   ('&RETREGS' EQ '64').RETREG64                       @LDA 15575000
         AIF   ('&RETREGS' EQ '' OR '&RETREGS' EQ 'NO').TSTRUB          15600000
         AIF   ('&RETREGS' NE 'YES').ERR9                               15650000
         OI    SDWAACF2-SDWA(1),SDWAUPRG   TURN ON RETREGS INDICATOR    15700000
         AIF   ('&RUB' EQ '').CPU                                       15750000
         AIF   ('&RUB'(1,1) EQ '(').RUBR                                15800000
         &LA   15,&RUB(1) .       GET PTR TO REGISTER UPDATE BLOCK @L2C 15850000
         AGO   .RUBCOM                                                  15900000
.RUBR    ANOP                                                           15950000
         LR    15,&RUB(1) .         ACCESS PTR TO REG UPDATE BLOCK      16000000
         AIF  ('&SYSASCE' EQ 'P').RUBCOM                                16050000
         CPYA 15,&RUB(1)            GET ITS ALET TOO                    16100000
.RUBCOM  ANOP                                                           16150000
         LH    0,0(,15) .              ACCESS REGISTER BIT PATTERN      16200000
         LA    15,2(,15) .             CREATE PTR TO USER REG VALUES    16250000
         &LA   14,SDWASRSV-SDWA(,1)    CREATE PTR TO SDWA REG SAVE @L2C 16300000
         SLL   0,16(0) .               SHIFT BIT PATTERN TO HI BYTE     16350000
R&SYSNDX ALR   0,0 .                   SHIFT BIT TO SIGN POSITION       16400000
         BC    12,I&SYSNDX .           BRANCH IF NO CARRY INTO SIGN     16450000
         MVC   0(4,14),0(15) .         MODIFY REGISTER IN SDWA          16500000
         LA    15,4(,15) .              UPDATE POINTER                  16550000
I&SYSNDX LA    14,4(,14) .              UPDATE POINTER IN SDWA          16600000
         BC    5,R&SYSNDX .            TEST ALR CONDITION CODE TO TEST  16650000
*                                      IF ALL BITS EXHAUSTED            16700000
         AGO   .CPU                                                     16750000
.RETREG64 ANOP                                                     @LDA 16754500
         AIF   ('&RUB' NE '').ERR12A                               @LDA 16759000
         OI    SDWAACF2-SDWA(1),SDWAUPRG   TURN ON RETREGS INDICATOR    16763500
         L     15,SDWAXPAD-SDWA(0,1)      LIST OF EXTENSIONS PTR   @LDA 16768000
         AIF   ('&SYSASCE' EQ 'P').NOAR18                          @LDA 16772500
         CPYA  15,1                   SET UP ALET OF EXTENSION     @LDA 16777000
.NOAR18  ANOP                                                      @LDA 16781500
         L     15,SDWASRVP-SDWAPTRS(0,15) LOAD 1ST REC EXT PTR     @LDA 16786000
         OI    SDWARETF-SDWARC1(15),SDWAUP64 Indicate Update-64    @LDA 16790500
         AGO   .CPU                                                @LDA 16795000
.TSTRUB  ANOP                                                           16800000
         AIF   ('&RUB' NE '').ERR12                                     16850000
.CPU     ANOP                                                           16900000
         AIF   ('&CPU' EQ '').CC                                        16950000
&A       SETC  'CPU'                                                    17000000
         AIF   ('&CPU'(1,1) NE '(').ERR1                                17050000
         ST    &CPU(1),SDWACPUA-SDWA(,1)  STORE CPU ID IN SDWA          17100000
         OI    SDWAACF2-SDWA(1),SDWASPIN                                17150000
.CC      ANOP                                                           17200000
         AIF   ('&COMPCOD' EQ '').RSC                          @G860P2F 17250000
         AIF   ('&COMPCOD(1)'(1,1) EQ '(').CCR                          17300000
         AIF   (T'&COMPCOD(1) NE 'N').CCS                               17350000
         AIF   (&COMPCOD(1) GT 4095).ERR13                              17400000
.CCS     ANOP                                                           17450000
         LA    14,&COMPCOD(1).(,0) .   ACCESS COMPLETION CODE           17500000
         AGO   .CCOM                                                    17550000
.CCR     ANOP                                                           17600000
         LR    14,&COMPCOD(1) .        ACCESS COMPLETION CODE           17650000
.CCOM    ANOP                                                           17700000
         AIF   ('&COMPCOD(2)' EQ '' OR '&COMPCOD(2)' EQ 'USER').STCODE  17750000
         AIF   ('&COMPCOD(2)' NE 'SYSTEM').ERR14                        17800000
         SLL   14,12(0) .              SHIFT TO SYSTEM CODE POSITION    17850000
.STCODE  ANOP                                                           17900000
         STCM  14,7,SDWACMPC-SDWA(1)  STORE COMPLETION CODE             17950000
         L    14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS    @G860P1C 18000000
         AIF   ('&SYSASCE' EQ 'P').NOAR3                           @L2A 18050000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 18100000
.NOAR3   ANOP                                                      @L2A 18150000
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          18200000
*                                         EXTENSION            @G860P1C 18250000
         OI   SDWACCRC-SDWASERV(14),SDWACCF INDICATE CHANGE TO          18300000
*                                         COMPCODE             @G860P1C 18350000
&CCRC    SETB 1         BASE TO SERVICE EXTENSION EXISTS       @G860P1C 18400000
.RSC     ANOP                                                  @G860P2F 18450000
         AIF   ('&REASON' EQ '').SSRST                             @LBC 18500000
         AIF   (&CCRC).RSC1 BRANCH IF EXTENSION PTR IN REG14   @G860P1C 18550000
         L    14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS    @G860P2F 18600000
         AIF   ('&SYSASCE' EQ 'P').NOAR4                           @L2A 18650000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 18700000
.NOAR4   ANOP                                                      @L2A 18750000
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          18800000
*                                         EXTENSION            @G860P2F 18850000
.RSC1    ANOP                                                  @G860P1C 18900000
         AIF   ('&REASON'(1,1) EQ '(').RSCR   CHECK FOR REG    @G860P2F 18950000
         AIF   (T'&REASON(1) NE 'N').RSC2   CODE IS NOT NUMBER @G860P1C 19000000
         AIF   (&REASON(1) GT 4095).RSC2   CODE IS BIG NUMBER  @G860P1C 19050000
         AIF   (&REASON(1) LT 0).RSC2      CODE IS SMALL NUMBER    @01A 19075000
         LA    15,&REASON(1).(,0)     ACCESS REASON CODE       @G860P2F 19100000
         AGO   .RSCST15                                        @G860P1C 19150000
.RSC2    ANOP                                                  @G860P1C 19200000
         CNOP  0,4                    ALIGN ON WORD BOUNDARY   @G860P1C 19250000
         B     *+8                    BRANCH AROUND CONSTANT   @G860P1C 19300000
         DC    AL4(&REASON)           DECLARE FOR REASON CODE  @G860P1C 19350000
         L     15,*-4                 LOAD REASON CODE INTO 15 @G860P1C 19400000
.RSCST15 ANOP                                                  @G860P1C 19450000
         ST    15,SDWAHRC-SDWASERV(0,14)  STORE REASON CODE    @G860P2F 19500000
         AGO   .RSCEND                                         @G860P1C 19550000
.RSCR    ANOP                                                  @G860P2F 19600000
         ST    &REASON(1),SDWAHRC-SDWASERV(0,14)   STORE REASON CODE    19650000
*                                                              @G860P2F 19700000
.RSCEND  ANOP                                                  @G860P1C 19750000
         OI   SDWACCRC-SDWASERV(14),SDWAREAF INDICATE CHANGE TO         19800000
*                                         REASON CODE          @G860P1C 19850000
&CCRC    SETB 1         BASE TO SERVICE EXTENSION EXISTS           @LBA 19851700
.SSRST   ANOP                                                      @LBA 19853400
         AIF   ('&SSRESET' EQ '').FRELOCK  NO SSRESET SPECIFIED    @LBA 19858500
         ANOP                                                      @LBA 19860700
         AIF   (&CCRC).SSCHK     BRANCH IF EXTENSION PTR IN REG14  @LBA 19862900
         L    14,SDWAXPAD-SDWA(0,1)        ADDR OF EXTENSION PTRS  @LBA 19865300
         AIF   ('&SYSASCE' EQ 'P').NOAR12                          @LBA 19867000
         CPYA  14,1                      SET UP ALET OF EXTENSION  @LBA 19868700
.NOAR12  ANOP                                                      @LBA 19870400
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          19872100
*                                         EXTENSION                @LBA 19873800
&CCRC    SETB 1         BASE TO SERVICE EXTENSION EXISTS           @LBA 19874300
.SSCHK   AIF   ('&SSRESET' EQ 'YES').SSRST1     TEST SSRESET=YES   @LBA 19874800
         AIF   ('&SSRESET' EQ 'NO').SSRST2      TEST SSRESET=NO    @LBA 19875300
         AGO   .ERR27                      ILLEGAL SSRESET VALUE   @LBA 19875800
.SSRST1  ANOP                                                      @LBA 19876300
         OI   SDWASFLG-SDWASERV(14),SDWASSRS INDICATE SSRESET      @LBA 19877200
         AGO  .FRELOCK                                             @LBA 19878900
.SSRST2  ANOP                                                      @LBA 19887400
         NI   SDWASFLG-SDWASERV(14),SDWASSRS INDICATE NO SSRESET   @LBA 19895900
.FRELOCK ANOP                                                           19900000
         AIF   ('&FRELOCK' EQ '').SERIAL                       @G381P2F 19950000
.LOCKLP  ANOP                                                           20000000
         AIF   (K'&FRELOCK(&I) LE 2).NOLOCK                             20050000
&K       SETA  K'&FRELOCK(&I)-2                                         20100000
         AIF   ('&FRELOCK(&I)' NE 'DISP').OPTM                          20150000
&LFLAG1  SETA  &LFLAG1+16                                               20200000
         AGO   .INITLP                                                  20250000
.OPTM    ANOP                                                           20300000
         AIF   ('&FRELOCK(&I)' NE 'SRM').SALLOC                         20350000
&LFLAG2  SETA  &LFLAG2+4                                                20400000
         AGO   .INITLP                                                  20450000
.SALLOC  ANOP                                                           20500000
         AIF   ('&FRELOCK(&I)' NE 'SALLOC').CMS                         20550000
&LFLAG1  SETA  &LFLAG1+4                                                20600000
         AGO   .INITLP                                                  20650000
.CMS     ANOP                                                           20700000
         AIF   ('&FRELOCK(&I)' NE 'CMS').VSMFIX                @G860P1C 20750000
&LFLAG2  SETA  &LFLAG2+2                                                20800000
         AGO   .INITLP                                                  20850000
.VSMFIX  ANOP                                                  @G860P1C 20900000
         AIF   ('&FRELOCK(&I)' NE 'VSMFIX').RSM                @G860P1C 20950000
&LFLAG4  SETA  &LFLAG4+4                                       @G860P2F 21000000
         AGO   .INITLP                                         @G860P1C 21050000
.RSM     ANOP                                                  @G860P1C 21100000
         AIF   ('&FRELOCK(&I)' NE 'RSM').VSMPAG                @G860P1C 21150000
&LFLAG3  SETA  &LFLAG3+8                                       @G860P2F 21200000
         AGO   .INITLP                                         @G860P1C 21250000
.VSMPAG  ANOP                                                  @G860P1C 21300000
         AIF   ('&FRELOCK(&I)' NE 'VSMPAG').CPULOCK            @G860P1C 21350000
&LFLAG1  SETA  &LFLAG1+32                                      @G860P2F 21400000
         AGO   .INITLP                                         @G860P1C 21450000
.CPULOCK ANOP                                                  @G860P1C 21500000
         AIF   ('&FRELOCK(&I)' NE 'CPU').TRACE                 @G860P1C 21550000
&LFLAG3  SETA  &LFLAG3+128                                     @G860P2F 21600000
         AGO   .INITLP                                         @G860P1C 21650000
.TRACE   ANOP                                                  @G860P1C 21700000
         AIF   ('&FRELOCK(&I)' NE 'TRACE').LCL                 @G860P1C 21750000
&LFLAG3  SETA  &LFLAG3+4                                       @G860P2F 21800000
         AGO   .INITLP                                         @G860P1C 21850000
.LCL     ANOP                                                           21900000
         AIF   ('&FRELOCK(&I)' NE 'LOCAL').IOS                     @P2C 21950000
&LFLAG2  SETA  &LFLAG2+1                                                22000000
         AGO   .INITLP                                                  22050000
.IOS     ANOP                                                      @P2M 22060000
         AIF   ('&FRELOCK(&I)' NE 'IOS').BMFLSD                    @L7C 22070000
&LFLAG3  SETA  &LFLAG3+2                                           @P3C 22080000
         AGO   .INITLP                                             @P2M 22090000
.BMFLSD  ANOP                                                      @L7A 22090400
         AIF   ('&FRELOCK(&I)' NE 'BMFLSD').XCFDS                  @L7A 22090800
&LFLAG5  SETA  &LFLAG5+128                                         @L7A 22091200
         AGO   .INITLP                                             @L7A 22091600
.XCFDS   ANOP                                                      @L8A 22092000
         AIF   ('&FRELOCK(&I)' NE 'XCFDS').XCFRES                  @L8A 22092400
&LFLAG5  SETA  &LFLAG5+64                                          @L8A 22092800
         AGO   .INITLP                                             @L8A 22093200
.XCFRES  ANOP                                                      @L8A 22093600
         AIF   ('&FRELOCK(&I)' NE 'XCFRES').XCFQ                   @L8A 22094000
&LFLAG5  SETA  &LFLAG5+32                                          @L8A 22094400
         AGO   .INITLP                                             @L8A 22094800
.XCFQ    ANOP                                                      @L8A 22095200
         AIF   ('&FRELOCK(&I)' NE 'XCFQ').ETRSET                   @L8A 22095600
&LFLAG5  SETA  &LFLAG5+16                                          @L8A 22096000
         AGO   .INITLP                                             @L8A 22096400
.ETRSET  ANOP                                                     1@P4D 22096800
         AIF   ('&FRELOCK(&I)' NE 'ETRSET').IXLSCH                 @LAA 22097200
&LFLAG5  SETA  &LFLAG5+8                                           @L6A 22097600
         AGO   .INITLP                                             @L6A 22098000
.IXLSCH ANOP                                                       @LAA 22100300
         AIF   ('&FRELOCK(&I)' NE 'IXLSCH').IXLSHR                 @LAA 22102600
&LFLAG5  SETA  &LFLAG5+4                                           @LAA 22104900
         AGO   .INITLP                                             @LAA 22107200
.IXLSHR ANOP                                                       @LAA 22109500
         AIF   ('&FRELOCK(&I)' NE 'IXLSHR').IXLDS                  @LAA 22111800
&LFLAG5  SETA  &LFLAG5+2                                           @LAA 22114100
         AGO   .INITLP                                             @LAA 22116400
.IXLDS   ANOP                                                      @LAA 22118700
         AIF   ('&FRELOCK(&I)' NE 'IXLDS').IXLSHELL                @LAA 22121000
&LFLAG5  SETA  &LFLAG5+1                                           @LAA 22123300
         AGO   .INITLP                                             @LAA 22125600
.IXLSHELL ANOP                                                     @LAA 22127900
         AIF   ('&FRELOCK(&I)' NE 'IXLSHELL').IOSULUT              @LAA 22130200
&LFLAG6  SETA  &LFLAG6+128                                         @LAA 22132500
         AGO   .INITLP                                             @LAA 22134800
.IOSULUT ANOP                                                      @L9A 22137100
         AIF   ('&FRELOCK(&I)' NE 'IOSULUT').IXLREQST              @02C 22139400
&LFLAG6  SETA  &LFLAG6+64                                          @L9A 22141700
         AGO   .INITLP                                             @L9A 22144000
.IXLREQST ANOP                                                     @02A 22144200
         AIF   ('&FRELOCK(&I)' NE 'IXLREQST').WLMRES               @PAC 22144400
&LFLAG6  SETA  &LFLAG6+32                                          @02A 22144600
         AGO   .INITLP                                             @02A 22144800
.WLMRES  ANOP                                                      @PAA 22145000
         AIF   ('&FRELOCK(&I)' NE 'WLMRES').WLMQ                   @PAA 22145200
&LFLAG6  SETA  &LFLAG6+16                                          @PAA 22145400
         AGO   .INITLP                                                  22145600
.WLMQ    ANOP                                                      @LCA 22145800
         AIF   ('&FRELOCK(&I)' NE 'WLMQ').CONTEXT                  @PAC 22146400
&LFLAG6  SETA  &LFLAG6+8                                           @P9C 22147000
         AGO   .INITLP                                             @LCA 22148000
.CONTEXT ANOP                                                      @PAA 22148100
         AIF   ('&FRELOCK(&I)' NE 'CONTEXT').REGSRV                @PAA 22148200
&LFLAG6  SETA  &LFLAG6+4                                           @PAA 22148300
         AGO   .INITLP                                             @PAA 22148400
.REGSRV  ANOP                                                      @LCA 22148500
         AIF   ('&FRELOCK(&I)' NE 'REGSRV').FINDP                  @LCA 22148600
&LFLAG6  SETA  &LFLAG6+2                                           @LCA 22148700
         AGO   .INITLP                                             @LCA 22148800
.FINDP   ANOP                                                           22149000
&L       SETA  &K                                                       22150000
.FINDP2  AIF   ('&FRELOCK(&I)'(&L,1) EQ '(').GETLOCK                    22200000
&L       SETA  &L-1                                                     22250000
         AIF   (&L LE 1).ERR5                                           22300000
         AGO   .FINDP2                                                  22350000
.GETLOCK ANOP                                                           22400000
&M       SETA  &L-1                    LENGTH OF LOCK                   22450000
&N       SETC  '&FRELOCK(&I)'(&L+1,&K-&M)                               22500000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'IOSUCB').RSMDS            @P2C 22550000
&LFLAG2  SETA  &LFLAG2+128                                              22600000
         LA    15,&N                   ACCESS ADDR OF LOCKWORD          22650000
         ST    15,SDWAIULW-SDWA(,1)   INITIALIZE IOSUCB LOCKWORD        22700000
         AGO   .INITLP                                                  22750000
.RSMDS   ANOP                                                      @L3A 22776600
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMDS').RSMGL             @L3A 22780400
&LFLAG1  SETA  &LFLAG1+1                                           @L3A 22784200
         LA    15,&N                   ACCESS ADDR OF LOCKWORD     @L3A 22788000
         ST    15,SDWALRSD-SDWA(,1)   INITIALIZE RSMDS LOCKWORD    @L3A 22791800
         AGO   .INITLP                                             @L3A 22795600
.RSMGL   ANOP                                                  @G860P1C 22800000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMGL').ASMGL         @G860P1C 22850000
         AIF   (&LOCKEXT).BYPAS1                               @G860P1C 22900000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 22950000
         AIF   ('&SYSASCE' EQ 'P').NOAR5                           @L2A 23000000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 23050000
.NOAR5   ANOP                                                      @L2A 23100000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 23150000
&LOCKEXT SETB  1                                               @G860P1C 23200000
.BYPAS1  ANOP                                                  @G860P1C 23250000
&LFLAG4  SETA  &LFLAG4+8                                       @G860P2F 23300000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 23350000
         ST    15,SDWALRSG-SDWAFLCK(,14)  INIT RSMGL  LOCKWORD @G860P1C 23400000
         AGO   .INITLP                                         @G860P1C 23450000
.ASMGL   ANOP                                                  @G860P1C 23500000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'ASMGL').RSMST         @G860P1C 23550000
         AIF   (&LOCKEXT).BYPAS2                               @G860P1C 23600000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 23650000
         AIF   ('&SYSASCE' EQ 'P').NOAR6                           @L2A 23700000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 23750000
.NOAR6   ANOP                                                      @L2A 23800000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 23850000
&LOCKEXT SETB  1                                               @G860P1C 23900000
.BYPAS2  ANOP                                                  @G860P1C 23950000
&LFLAG4  SETA  &LFLAG4+2                                       @G860P2F 24000000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 24050000
         ST    15,SDWALASG-SDWAFLCK(,14)  INIT ASMGL  LOCKWORD @G860P1C 24100000
         AGO   .INITLP                                         @G860P1C 24150000
.RSMST   ANOP                                                  @G860P1C 24200000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMST').RSMCM         @G860P2F 24250000
         AIF   (&LOCKEXT).BYPAS3                               @G860P1C 24300000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 24350000
         AIF   ('&SYSASCE' EQ 'P').NOAR7                           @L2A 24400000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 24450000
.NOAR7   ANOP                                                      @L2A 24500000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 24550000
&LOCKEXT SETB  1                                               @G860P1C 24600000
.BYPAS3  ANOP                                                  @G860P1C 24650000
&LFLAG4  SETA  &LFLAG4+1                                       @G860P2F 24700000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 24750000
         ST    15,SDWALRSS-SDWAFLCK(,14)  INIT RSMST  LOCKWORD @G860P1C 24800000
         AGO   .INITLP                                         @G860P1C 24850000
.RSMCM   ANOP                                                  @G860P2F 24900000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMCM').RSMXM         @G860P2F 24950000
         AIF   (&LOCKEXT).BYPAS6                               @G860P2F 25000000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P2F 25050000
         AIF   ('&SYSASCE' EQ 'P').NOAR8                           @L2A 25100000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 25150000
.NOAR8   ANOP                                                      @L2A 25200000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P2F 25250000
&LOCKEXT SETB  1                                               @G860P2F 25300000
.BYPAS6  ANOP                                                  @G860P2F 25350000
&LFLAG4  SETA  &LFLAG4+16                                      @G860P2F 25400000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P2F 25450000
         ST    15,SDWALRSC-SDWAFLCK(,14)  INIT RSMCM  LOCKWORD @G860P2F 25500000
         AGO   .INITLP                                         @G860P2F 25550000
.RSMXM   ANOP                                                  @G860P1C 25600000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMXM').RSMAD         @G860P1C 25650000
         AIF   (&LOCKEXT).BYPAS4                               @G860P1C 25700000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 25750000
         AIF   ('&SYSASCE' EQ 'P').NOAR9                           @L2A 25800000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 25850000
.NOAR9   ANOP                                                      @L2A 25900000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 25950000
&LOCKEXT SETB  1                                               @G860P1C 26000000
.BYPAS4  ANOP                                                  @G860P1C 26050000
&LFLAG1  SETA  &LFLAG1+128                                     @G860P2F 26100000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 26150000
         ST    15,SDWALRSX-SDWAFLCK(,14)  INIT RSMXM  LOCKWORD @G860P1C 26200000
         AGO   .INITLP                                         @G860P1C 26250000
.RSMAD   ANOP                                                  @G860P1C 26300000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMAD').IOSPRG        @G860P1C 26350000
         AIF   (&LOCKEXT).BYPAS5                               @G860P1C 26400000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 26450000
         AIF   ('&SYSASCE' EQ 'P').NOAR10                          @L2A 26500000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 26550000
.NOAR10  ANOP                                                      @L2A 26600000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 26650000
&LOCKEXT SETB  1                                               @G860P1C 26700000
.BYPAS5  ANOP                                                  @G860P1C 26750000
&LFLAG1  SETA  &LFLAG1+64                                      @G860P2F 26800000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 26850000
         ST    15,SDWALRSA-SDWAFLCK(,14)  INIT RSMAD  LOCKWORD @G860P1C 26900000
         AGO   .INITLP                                         @G860P1C 26950000
.IOSPRG  ANOP                                                           27000000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'IOSYNCH').ASMPAT               27050000
&LFLAG1  SETA  &LFLAG1+2                                                27100000
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          27150000
         ST    15,SDWAIPLW-SDWA(,1)   INITIALIZE IOSPURGE LOCKWORD      27200000
         AGO   .INITLP                                                  27250000
.ASMPAT  ANOP                                                           27300000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'ASM').ACBDEB              @L5C 27350000
&LFLAG1  SETA  &LFLAG1+8                                                27400000
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          27450000
         ST    15,SDWAAPLW-SDWA(,1)   INITIALIZE ASMPAT LOCKWORD        27500000
         AGO   .INITLP                                                  27550000
.ACBDEB  ANOP                                                           28200000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'TPACBDEB').CML        @G381P2F 28250000
&LFLAG2  SETA  &LFLAG2+8                                                28300000
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          28350000
         ST    15,SDWATALW-SDWA(,1)   INITIALIZE TPACBDEB LOCKWORD      28400000
         AGO   .INITLP                                                  28450000
.CML     ANOP                                                  @G381P2F 28500000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'CML').CMLREG          @G381P2F 28550000
         OI    SDWAACF2-SDWA(1),SDWACML IND FREE CML REQUEST   @G381P2F 28600000
         L     15,&N                   OBTAIN ASCB ADDRESS     @G381P2F 28650000
         ST    15,SDWACMLA-SDWA(,1)    SAVE ASCB ADDR FOR CML  @G381P2F 28700000
         AGO   .INITLP                                         @G381P2F 28750000
.CMLREG  ANOP                          CHK FOR CMLASCB IN REG  @G381P2F 28800000
         AIF   ('&FRELOCK(&I)'(1,&M-1) NE 'CML').NXTLOCK       @G381P2F 28850000
         OI    SDWAACF2-SDWA(1),SDWACML IND FREE CML REQUEST   @ZA86653 28900000
&N       SETC  '&FRELOCK(&I)'(&L+1,(&K-&M)-1)                  @G381P2F 28950000
         ST    &N,SDWACMLA-SDWA(,1)    SAVE ASCB ADDR FOR CML  @G381P2F 29000000
         AGO   .INITLP                                         @G381P2F 29050000
.NXTLOCK ANOP                                                           29100000
.NOLOCK  ANOP                                                           29150000
         MNOTE 12,'*** INVALID LOCK IN FRELOCK SUBSTRING ELEMENT &I'    29200000
         MEXIT                                                          29250000
.INITLP  ANOP                                                           29300000
&I       SETA  &I+1                                                     29350000
         AIF   (&I LE &J).LOCKLP                                        29400000
         AIF   (&LFLAG1 EQ 0).LOCK1                                     29450000
         OI    SDWAACF3-SDWA(1),&LFLAG1 INITIALIZE LOCK FLAGS           29500000
.LOCK1   ANOP                                                           29550000
         AIF   (&LFLAG2 EQ 0).LOCK2                            @G860P1C 29600000
         OI    SDWAACF4-SDWA(1),&LFLAG2 INITIALIZE LOCK FLAGS           29650000
.LOCK2   ANOP                                                           29700000
         AIF   (&LFLAG3 EQ 0 AND &LFLAG4 EQ 0 AND &LFLAG5 EQ 0 AND     X29737500
                &LFLAG6 EQ 0 AND &LFLAG7 EQ 0 AND &LFLAG8 EQ 0).SERIAL X29775000
                                                                   @L5A 29812500
.LOCK3   ANOP                                                  @G860P1C 29850000
         AIF   (&LOCKEXT).BYPASN                               @G860P1C 29900000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 29950000
         AIF   ('&SYSASCE' EQ 'P').NOAR11                          @L2A 30000000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 30050000
.NOAR11  ANOP                                                      @L2A 30100000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK      @G860P1C 30150000
.BYPASN  ANOP                                                  @G860P1C 30200000
         AIF   (&LFLAG3 EQ 0).LOCK4                            @G860P1C 30250000
         OI    SDWAFLK1-SDWAFLCK(14),&LFLAG3 INIT LOCK FLAGS   @G860P1C 30300000
.LOCK4   ANOP                                                  @G860P1C 30350000
         AIF   (&LFLAG4 EQ 0).LOCK5                                @L5C 30400000
         OI    SDWAFLK2-SDWAFLCK(14),&LFLAG4 INIT LOCK FLAGS   @G860P1C 30450000
.LOCK5   ANOP                                                      @L5A 30453800
         AIF   (&LFLAG5 EQ 0).LOCK6                                @L5A 30457600
         OI    SDWAFLE1-SDWAFLCK(14),&LFLAG5 INIT LOCK FLAGS       @L5A 30461400
.LOCK6   ANOP                                                      @L5A 30465200
         AIF   (&LFLAG6 EQ 0).LOCK7                                @L5A 30469000
         OI    SDWAFLE2-SDWAFLCK(14),&LFLAG6 INIT LOCK FLAGS       @L5A 30472800
.LOCK7   ANOP                                                      @L5A 30476600
         AIF   (&LFLAG7 EQ 0).LOCK8                                @L5A 30480400
         OI    SDWAFLE3-SDWAFLCK(14),&LFLAG7 INIT LOCK FLAGS       @L5A 30484200
.LOCK8   ANOP                                                      @L5A 30488000
         AIF   (&LFLAG8 EQ 0).SERIAL                               @L5A 30491800
         OI    SDWAFLE4-SDWAFLCK(14),&LFLAG8 INIT LOCK FLAGS       @L5A 30495600
.SERIAL  ANOP                                                  @G381P2F 30500000
         AIF   ('&SERIAL' EQ '').RETRY                         @G381P2F 30550000
         AIF   ('&RETRY' NE '').ERR20                          @G381P2F 30600000
         AIF   ('&SERIAL' EQ 'NO').NSERIAL                     @G381P2F 30650000
         AIF   ('&SERIAL' NE 'YES').ERR18                      @G381P2F 30700000
         OI    SDWAACF2-SDWA(1),SDWASERP  INDICATE SERIAL=YES  @G381P2F 30750000
         AGO   .RETRY                                          @G381P2F 30800000
.NSERIAL NI    SDWAACF2-SDWA(1),X'FF'-SDWASERP IND SERIAL=NO   @G381P2F 30850000
.RETRY   ANOP                                                  @G381P2F 30900000
         AIF   ('&RETRY' EQ '').DUMPOPX                            @L4C 30950000
         AIF   ('&RETRY' EQ 'FRR').OPTFRR                      @G381P2F 31000000
         AIF   ('&RETRY' NE 'ERROR').ERR19                     @G381P2F 31050000
         OI    SDWAACF2-SDWA(1),SDWARERR  INDICATE RETRY=ERROR @G381P2F 31100000
         AGO   .DUMPOPX                                            @L4C 31150000
.OPTFRR  NI    SDWAACF2-SDWA(1),X'FF'-SDWARERR IND RETRY=FRR   @G381P2F 31200000
.DUMPOPX ANOP                                                      @L4A 31203800
         AIF ('&DUMPOPX' EQ '').REGS    IF NO DUMPOPX, SKIP        @L4A 31207600
         AIF ('&DUMPOPX'(1,1) EQ '(').DUMPXR  ADDRESS IN REGISTER  @L4A 31211400
         &LA   0,&DUMPOPX(1) .          GET ADDRESS OF RANGE LIST  @L4A 31215200
         AGO   .DUMPRDX                                            @L4A 31219000
.DUMPXR  ANOP                                                      @L4A 31222800
         LR    0,&DUMPOPX(1) .          GET ADDRESS OF RANGE LIST  @L4A 31224700
         AIF   ('&SYSASCE' EQ 'P').DUMPRDX                         @L4A 31226600
         CPYA  0,&DUMPOPX(1)            GET ALET OF RANGE LIST     @L4A 31228500
.DUMPRDX ANOP                                                      @L4A 31230400
         L     15,X'10'(0,0)            GET ADDRESS OF CVT         @L4A 31234200
         L     15,X'C8'(15,0)           GET ADDR OF SECONDARY CVT  @L4A 31238000
         L     15,X'60'(15)             GET POINTER TO IEAVTRDX    @L4A 31241800
         BASSM 14,15                    BRANCH TO IEAVTRDX         @L4A 31245600
.REGS    ANOP                                                           31250000
         AIF   ('&REGS(1)' EQ '').RETUSER                               31300000
&A       SETC   'REGS'                                                  31350000
         AIF   ('&REGS'(1,1) NE '(').ERR1                               31400000
         AIF   ('&REGS(2)' EQ '').RET2                                  31450000
         RETURN  (&REGS(1),&REGS(2)) .                                  31500000
         MEXIT                                                          31550000
.RET2    RETURN  (&REGS(1))                                             31600000
.RETUSER ANOP                                                           31650000
         MEXIT                                                          31700000
.ERR1    ANOP                                                           31750000
         MNOTE 12,'***  REGISTER SPECIFICATION REQUIRED FOR &A KEYWORD' 31800000
         MEXIT                                                          31850000
.ERR2    ANOP                                                           31900000
         MNOTE 12,'***   RETADDR MUST BE SPECIFIED WITH RC/&RC'         31950000
         MEXIT                                                          32000000
.ERR3    ANOP                                                           32050000
         IHBERMAC 1020,RETADDR,RC/&RC                                   32100000
         MEXIT                                                          32150000
.ERR4    ANOP                                                           32200000
         IHBERMAC 54,,&RECORD                                           32250000
         MEXIT                                                          32300000
.ERR5    ANOP                                                           32350000
         MNOTE 12,'*** INVALID SYNTAX IN FRELOCK SUBSTRING ELEMENT &I'  32400000
         MEXIT                                                          32450000
.ERR6    ANOP                                                           32500000
         IHBERMAC 1020,RECPARM,RECORD/NO                                32550000
         MEXIT                                                          32600000
.ERR7    ANOP                                                           32650000
         IHBERMAC 54,,&DUMP                                             32700000
         MEXIT                                                          32750000
.ERR8    ANOP                                                           32800000
         IHBERMAC 1020,DUMPOPT/DUMPOPX,DUMP/NO                     @L4C 32850000
         MEXIT                                                          32900000
.ERR9    ANOP                                                           32950000
         IHBERMAC 54,,&RETREGS                                          33000000
         MEXIT                                                          33050000
.ERR10   ANOP                                                           33100000
         IHBERMAC 1020,FRESDWA,RC/&RC                                   33150000
         MEXIT                                                          33200000
.ERR11   ANOP                                                           33250000
         IHBERMAC 54,,&FRESDWA                                          33300000
         MEXIT                                                          33350000
.ERR12   ANOP                                                           33400000
         IHBERMAC 1020,RUB,RETREGS/NO                                   33450000
         MEXIT                                                          33500000
.ERR12A  ANOP                                                      @LDA 33512500
         IHBERMAC 1020,RUB,RETREGS/64                              @LDA 33525000
         MEXIT                                                          33537500
.ERR13   ANOP                                                           33550000
         MNOTE 12,'***   COMPCOD OPERAND EXCEEDS SPECIFIED LIMITS'      33600000
         MEXIT                                                          33650000
.ERR14   ANOP                                                           33700000
         IHBERMAC 54,,&COMPCOD(2)                                       33750000
         MEXIT                                                          33800000
.ERR15   ANOP                                                           33850000
         IHBERMAC 1020,RETREGS,RC/&RC                                   33900000
         MEXIT                                                          33950000
.ERR16   ANOP                                                           34000000
         MNOTE 12,'** KEYWORD FRLKRTY IS ONLY VALID FOR RC=4'      @L1C 34050000
         MEXIT                                                          34100000
.ERR17   ANOP                                                           34150000
         MNOTE 12,'*** REGISTER SPECIFICATION ILLEGAL FOR RC KEYWORD'   34200000
         MEXIT                                                          34250000
.ERR18   ANOP                                                  @G381P2F 34300000
         MNOTE 12,'*** INVALID SYNTAX ON SERIAL KEYWORD'       @G381P2F 34350000
         MEXIT                                                 @G381P2F 34400000
.ERR19   ANOP                                                  @G381P2F 34450000
         MNOTE 12,'*** INVALID SYNTAX ON RETRY KEYWORD'        @G381P2F 34500000
         MEXIT                                                 @G381P2F 34550000
.ERR20   ANOP                                                  @G381P2F 34600000
         MNOTE 12,'** KEYWORDS SERIAL AND RETRY ARE MUTUALLY EXCLUSIVE' 34650000
         MEXIT                                                 @G381P2F 34700000
.ERR21   ANOP                                                      @L1A 34750000
         MNOTE 12,'** INVALID SYNTAX ON FRLKRTY KEYWORD'           @L1A 34800000
         MEXIT                                                     @L1A 34850000
.ERR22   ANOP                                                      @L1A 34900000
         MNOTE 12,'** INVALID SYNTAX ON RETRY15 KEYWORD'           @L1A 34950000
         MEXIT                                                     @L1A 35000000
.ERR23   ANOP                                                      @L1A 35050000
         MNOTE 12,'** INVALID SYNTAX ON REMREC KEYWORD'            @L1A 35100000
         MEXIT                                                     @L1A 35150000
.ERR24   ANOP                                                      @L1A 35200000
         MNOTE 12,'** KEYWORD REMREC IS ONLY VALID FOR RC=4'       @L1A 35250000
         MEXIT                                                     @L1A 35300000
.ERR25   ANOP                                                      @L1A 35350000
         MNOTE 12,'** KEYWORD RETRY15 IS ONLY VALID FOR RC=4'      @L1A 35400000
         MEXIT                                                     @L1A 35450000
.ERR26   ANOP                                                      @L4A 35460000
     MNOTE 12,'** KEYWORDS DUMPOPT AND DUMPOPX ARE MUTUALLY EXCLUSIVE' X35470000
                                                                   @L4A 35480000
         MEXIT                                                     @L4A 35490000
.ERR27   ANOP                                                      @LBA 35492500
         MNOTE 12,'** INVALID SYNTAX ON SSRESET KEYWORD'           @LBA 35495000
         MEXIT                                                     @LBA 35497500
         MEND                                                           35500000
* */                                                                    35550000
* SETRP: MACRO KEYS(WKAREA,RETADDR,RC,RETREGS,DUMP,RECORD,REGS,DUMPOPT, 35600000
*     DUMPOPX,RECPARM,FRELOCK,CPU,COMPCOD,FRESDWA,RUB,SERIAL,RETRY,     35650000
*     REASON,FRLKRTY,RETRY15,REMREC,SSRESET);            /* @LBC*/      35700000
*     ANS ('?' || MACLABEL || 'SETRPP ' || MACLIST || MACKEYS || ';');  35750000
* %END;                                                                 35800000
