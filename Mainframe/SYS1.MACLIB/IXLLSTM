*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLLSTM                               -04/25/01-<4> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES List Structure Multiple Entry Services    * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 2000, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7703                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLLSTM macro provides operations to read, move or delete  * 00002100
*      multiple list entries.                                         * 00002200
*                                                                     * 00002300
*      The list structure is accessed as a set of linked lists where  * 00002400
*      each list is comprised of some number of list entries.  The    * 00002500
*      number of lists is determined via programming interface when   * 00002600
*      the structure is allocated, and is static for the duration of  * 00002700
*      the structure.  IXLLSTM facilitates designating the head or    * 00002800
*      tail of any particular list as the starting point for various  * 00002900
*      list operations.                                               * 00003000
*                                                                     * 00003100
*      List entries are comprised of list entry data and/or list      * 00003200
*      adjunct data.  When a non-zero ELEMENTRATIO is specified on    * 00003300
*      IXLCONN then list entries may contain entry data.  The         * 00003400
*      presence or absence of entry data for a given list entry is    * 00003500
*      determined when the entry is created or written.  The          * 00003600
*      existence of adjunct data for all entries in a structure is    * 00003700
*      determined when the structure is allocated.  The areas         * 00003800
*      containing the entry data and adjunct data are referred to as  * 00003900
*      the data area and adjunct area, respectively.                  * 00004000
*                                                                     * 00004100
*      Refer to the IXLCONN service description for additional        * 00004200
*      information regarding the allocation of and connection to a    * 00004300
*      list structure.                                                * 00004400
*                                                                     * 00004500
*      List entry data, when present, is comprised of 1 to 255        * 00004600
*      elements.  The size of an element and the maximum number of    * 00004700
*      elements in an entry is specified when the structure is        * 00004800
*      allocated.  The number of elements in an entry is established  * 00004900
*      when the entry is initially written and may be changed on      * 00005000
*      subsequent writes.  List adjunct data is always 64 bytes in    * 00005100
*      length.  Note: For list entries allocated with secondary keys, * 00005200
*      the first 32 bytes of the adjunct area will contain the        * 00005300
*      secondary key of the entry.                                    * 00005400
*                                                                     * 00005500
*      Users allocate list entries by invoking IXLLSTE to "create" an * 00005600
*      entry.  Individual entries must reside on one linked list, and * 00005700
*      cannot reside on more than one list at a time.  An allocated   * 00005800
*      list entry has a system assigned entry identifier, or a user   * 00005900
*      assigned entry identifier which is unique within the structure * 00006000
*      and can be used for subsequent reference or access to that     * 00006100
*      entry.  Structure allocation allows an option to support user  * 00006200
*      defined entry identifiers or user defined entry names, which   * 00006300
*      the structure will enforce as unique within the structure on   * 00006400
*      create requests.  Entry names or identifiers may also be used  * 00006500
*      for subsequent entry reference and access.  Structure          * 00006600
*      allocation also allows optional entry key support (either      * 00006700
*      entry key or entry key and secondary keys), which functions as * 00006800
*      a mechanism for designating relative positions within a        * 00006900
*      specified list other than the list head or tail.  Entry name   * 00007000
*      and entry key support are mutually exclusive options.  A       * 00007100
*      non-optional entry characteristic is the entry version number. * 00007200
*      Users determine the version number to be assigned to each      * 00007300
*      entry, and all IXLLSTM list entry operations permit the        * 00007400
*      testing of the version number.  A list operation can read from * 00007500
*      or write to either or both of the entry data area and adjunct  * 00007600
*      area.                                                          * 00007700
*                                                                     * 00007800
*      A list structure may also be allocated to include a lock table * 00007900
*      as part of the structure.  The lock table is comprised of a    * 00008000
*      set of exclusive locks which can be manipulated either         * 00008100
*      independently of or in conjunction with list entry and adjunct * 00008200
*      data.  Locking operations for IXLLSTM permit the testing of a  * 00008300
*      specified lock.  List entry and adjunct data operations can be * 00008400
*      affected by the state of a specified lock.  The purpose and    * 00008500
*      scope of each lock is entirely user defined.                   * 00008600
*                                                                     * 00008700
*      A connection may optionally have a list notification vector    * 00008800
*      allocated on the attached host CPC.  The notification vector   * 00008900
*      may be used to monitor list state changes from the empty to    * 00009000
*      non-empty state, and vice-versa, for any list in the           * 00009100
*      structure.                                                     * 00009200
*                                                                     * 00009300
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00009400
*                                                                     * 00009500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00009600
*                                                                     * 00009700
*01* ENVIRONMENT:                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00010100
*                                                                     * 00010200
*      Dispatchable unit mode: Task or SRB mode.                      * 00010300
*                                                                     * 00010400
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00010500
*                                                                     * 00010600
*                        The current primary address space must be    * 00010700
*                        the same as the primary address space at the * 00010800
*                        time the connection service, IXLCONN, was    * 00010900
*                        issued for the structure.                    * 00011000
*                                                                     * 00011100
*      AMODE:            31-bit.                                      * 00011200
*                                                                     * 00011300
*      ASC mode:         Primary or Access Register.                  * 00011400
*                                                                     * 00011500
*      Interrupt status: Enabled or disabled for I/O and external     * 00011600
*                        interrupts.                                  * 00011700
*                                                                     * 00011800
*      Locks:            Disabled callers must be legally disabled by * 00011900
*                        holding the CPU lock and cannot hold other   * 00012000
*                        disabled locks (invocation by DIE routines   * 00012100
*                        is not supported).  Enabled callers must not * 00012200
*                        hold any locks.  When MODE=SYNCSUSPEND is    * 00012300
*                        specified the caller must be enabled.        * 00012400
*                                                                     * 00012500
*      Control parameters:                                            * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                        1.  The caller's parameter list must be      * 00012900
*                            addressable in the caller's primary      * 00013000
*                            address space.                           * 00013100
*                                                                     * 00013200
*                        2.  If the caller is running in Access       * 00013300
*                            Register ASC mode and specifies a macro  * 00013400
*                            parameter using explicit register        * 00013500
*                            notation the access register             * 00013600
*                            corresponding to the general register    * 00013700
*                            must appropriately qualify the general   * 00013800
*                            register.                                * 00013900
*                                                                     * 00014000
*                        3.  The virtual storage areas specified by   * 00014100
*                            the ADJAREA, ANSAREA, and LISTKEYAREA    * 00014200
*                            keywords must be addressable in the      * 00014300
*                            caller's primary address space or from   * 00014400
*                            the caller's PASN access list.           * 00014500
*                                                                     * 00014600
*                        4.  All other virtual storage areas          * 00014700
*                            specified on the invocation may be       * 00014800
*                            addressable in the caller's primary,     * 00014900
*                            secondary, or home address spaces, from  * 00015000
*                            the PASN access list, or from the DU     * 00015100
*                            access list.                             * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*01* PROGRAMMING REQUIREMENTS:                                        * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*    1.  Access Register mode invokers must specify SYSSTATE          * 00016100
*        ASCENV=AR prior to invoking this macro.                      * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*01* RESTRICTIONS:                                                    * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*    1.  If the caller is disabled then the parameter list and all    * 00016900
*        storage areas addressed by macro parameters must reside in   * 00017000
*        either non-pageable or disabled reference storage.           * 00017100
*                                                                     * 00017200
*    2.  The caller may not be running as a Disabled Interrupt Exit   * 00017300
*        (DIE).                                                       * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*01* INPUT REGISTER INFORMATION:                                      * 00017800
*                                                                     * 00017900
*    Before issuing the IXLLSTM macro, the caller does not have to    * 00018000
*    place any information into any register or AR unless using it in * 00018100
*    register notation for a particular parameter, or using it as a   * 00018200
*    base register.                                                   * 00018300
*                                                                     * 00018400
*01* OUTPUT REGISTER INFORMATION:                                     * 00018500
*                                                                     * 00018600
*    When control returns to the caller, the GPRs contain:            * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*    REGISTER  CONTENTS                                               * 00019000
*                                                                     * 00019100
*    0         Reason code                                            * 00019200
*                                                                     * 00019300
*    1         Used as work registers by the system                   * 00019400
*                                                                     * 00019500
*    2-13      Unchanged                                              * 00019600
*                                                                     * 00019700
*    14        Used as work registers by the system.                  * 00019800
*                                                                     * 00019900
*    15        Return code                                            * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*    When control returns to the caller, the ARs contain:             * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*    REGISTER  CONTENTS                                               * 00020700
*                                                                     * 00020800
*    0-1       Used as work registers by the system                   * 00020900
*                                                                     * 00021000
*    2-13      Unchanged                                              * 00021100
*                                                                     * 00021200
*    14-15     Used as work registers by the system.                  * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*01* PERFORMANCE IMPLICATIONS:                                        * 00021700
*                                                                     * 00021800
*    None.                                                            * 00021900
*                                                                     * 00022000
*01* SYNTAX:                                                          * 00022100
*                                                                     * 00022200
*[xlabel]  IXLLSTM     CONTOKEN=xcontoken                             * 00022300
*                    [,REQID=xreqid|NO_REQID]                       * 00022400
*                    ,REQUEST=READ_LIST                              * 00022500
*                   |     ,TYPE=ENTDATA|ADJDATA|ECONTROLS             * 00022600
*                   |    [,ADJAREA=xadjarea|NO_ADJAREA]             * 00022700
*                   |    [,DIRECTION=HEADTOTAIL|TAILTOHEAD]         * 00022800
*                   |    ,LOCATOR=CURSOR                             * 00022900
*                   |   |     ,LISTNUM=xlistnum                       * 00023000
*                   |   |    [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00023100
*                   |   |   [,AUTHCOMPARE=NO]                        * 00023200
*                   |   |   [,AUTHCOMPARE=YES                        * 00023300
*                   |   |         ,AUTHCOMP=xauthcomp                 * 00023400
*                   |   |            [,AUTHCOMPTYPE=EQUAL|           * 00023500
*                   |   |                            LESSOREQUAL]]   * 00023600
*                   |   |   [,KEYCOMPARE=NO]                         * 00023700
*                   |   |   [,KEYCOMPARE=YES                         * 00023800
*                   |   |         ,ENTRYKEY=xentrykey                 * 00023900
*                   |   |       [,KEYREQTYPE=EQUAL]                  * 00024000
*                   |   |       [,KEYREQTYPE=LESSOREQUAL]            * 00024100
*                   |   |       [,KEYREQTYPE=GREATEROREQUAL]         * 00024200
*                   |   |       [,KEYREQTYPE=RANGE                   * 00024300
*                   |   |             ,KEYRANGEEND                    * 00024400
*                   |   |                          =xkeyrangeend]]    * 00024500
*                   |   |   [,SKEYCOMPARE=NO]                        * 00024600
*                   |   |   [,SKEYCOMPARE=YES                        * 00024700
*                   |   |         ,SECONDARYKEY                       * 00024800
*                   |   |                       =xsecondarykey        * 00024900
*                   |   |       [,SKEYREQTYPE=EQUAL]                 * 00025000
*                   |   |       [,SKEYREQTYPE=LESSOREQUAL]           * 00025100
*                   |   |       [,SKEYREQTYPE=GREATEROREQUAL]        * 00025200
*                   |   |       [,SKEYREQTYPE=RANGE                  * 00025300
*                   |   |             ,SKEYRANGEEND                   * 00025400
*                   |   |                           =xskeyrangeend]]  * 00025500
*                   |    ,LOCATOR=ENTRYID                            * 00025600
*                   |   |     ,ENTRYID=xentryid                       * 00025700
*                   |   |    [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00025800
*                   |   |   [,LISTCOMPARE=NO]                        * 00025900
*                   |   |   [,LISTCOMPARE=YES                        * 00026000
*                   |   |         ,LISTNUM=xlistnum                   * 00026100
*                   |   |       [,AUTHCOMPARE=NO]                    * 00026200
*                   |   |       [,AUTHCOMPARE=YES                    * 00026300
*                   |   |             ,AUTHCOMP=xauthcomp             * 00026400
*                   |   |                [,AUTHCOMPTYPE=EQUAL|       * 00026500
*                   |   |                                LESSOREQUAL * 00026600
*                   |   |                                ]]]          * 00026700
*                   |   |   [,KEYCOMPARE=NO]                         * 00026800
*                   |   |   [,KEYCOMPARE=YES                         * 00026900
*                   |   |         ,ENTRYKEY=xentrykey                 * 00027000
*                   |   |       [,KEYREQTYPE=EQUAL]                  * 00027100
*                   |   |       [,KEYREQTYPE=LESSOREQUAL]            * 00027200
*                   |   |       [,KEYREQTYPE=GREATEROREQUAL]         * 00027300
*                   |   |       [,KEYREQTYPE=RANGE                   * 00027400
*                   |   |             ,KEYRANGEEND                    * 00027500
*                   |   |                          =xkeyrangeend]]    * 00027600
*                   |   |   [,SKEYCOMPARE=NO]                        * 00027700
*                   |   |   [,SKEYCOMPARE=YES                        * 00027800
*                   |   |         ,SECONDARYKEY                       * 00027900
*                   |   |                       =xsecondarykey        * 00028000
*                   |   |       [,SKEYREQTYPE=EQUAL]                 * 00028100
*                   |   |       [,SKEYREQTYPE=LESSOREQUAL]           * 00028200
*                   |   |       [,SKEYREQTYPE=GREATEROREQUAL]        * 00028300
*                   |   |       [,SKEYREQTYPE=RANGE                  * 00028400
*                   |   |             ,SKEYRANGEEND                   * 00028500
*                   |   |                           =xskeyrangeend]]  * 00028600
*                   |    ,LOCATOR=ENTRYNAME                          * 00028700
*                   |   |     ,ENTRYNAME=xentryname                   * 00028800
*                   |   |   [,LISTCOMPARE=NO]                        * 00028900
*                   |   |   [,LISTCOMPARE=YES                        * 00029000
*                   |   |         ,LISTNUM=xlistnum                   * 00029100
*                   |   |       [,AUTHCOMPARE=NO]                    * 00029200
*                   |   |       [,AUTHCOMPARE=YES                    * 00029300
*                   |   |             ,AUTHCOMP=xauthcomp             * 00029400
*                   |   |                [,AUTHCOMPTYPE=EQUAL|       * 00029500
*                   |   |                                LESSOREQUAL * 00029600
*                   |   |                                ]]]          * 00029700
*                   |    ,LOCATOR=UNKEYPOS                           * 00029800
*                   |   |     ,LISTNUM=xlistnum                       * 00029900
*                   |   |    [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00030000
*                   |   |   [,AUTHCOMPARE=NO]                        * 00030100
*                   |   |   [,AUTHCOMPARE=YES                        * 00030200
*                   |   |         ,AUTHCOMP=xauthcomp                 * 00030300
*                   |   |            [,AUTHCOMPTYPE=EQUAL|           * 00030400
*                   |   |                            LESSOREQUAL]]   * 00030500
*                   |   |   [,KEYCOMPARE=NO]                         * 00030600
*                   |   |   [,KEYCOMPARE=YES                         * 00030700
*                   |   |         ,ENTRYKEY=xentrykey                 * 00030800
*                   |   |       [,KEYREQTYPE=EQUAL]                  * 00030900
*                   |   |       [,KEYREQTYPE=LESSOREQUAL]            * 00031000
*                   |   |       [,KEYREQTYPE=GREATEROREQUAL]         * 00031100
*                   |   |       [,KEYREQTYPE=RANGE                   * 00031200
*                   |   |             ,KEYRANGEEND                    * 00031300
*                   |   |                          =xkeyrangeend]]    * 00031400
*                   |   |   [,SKEYCOMPARE=NO]                        * 00031500
*                   |   |   [,SKEYCOMPARE=YES                        * 00031600
*                   |   |         ,SECONDARYKEY                       * 00031700
*                   |   |                       =xsecondarykey        * 00031800
*                   |   |       [,SKEYREQTYPE=EQUAL]                 * 00031900
*                   |   |       [,SKEYREQTYPE=LESSOREQUAL]           * 00032000
*                   |   |       [,SKEYREQTYPE=GREATEROREQUAL]        * 00032100
*                   |   |       [,SKEYREQTYPE=RANGE                  * 00032200
*                   |   |             ,SKEYRANGEEND                   * 00032300
*                   |   |                           =xskeyrangeend]]  * 00032400
*                   |    ,LOCATOR=KEYPOS                             * 00032500
*                   |         ,LISTNUM=xlistnum                       * 00032600
*                   |        [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00032700
*                   |       [,AUTHCOMPARE=NO]                        * 00032800
*                   |       [,AUTHCOMPARE=YES                        * 00032900
*                   |             ,AUTHCOMP=xauthcomp                 * 00033000
*                   |                [,AUTHCOMPTYPE=EQUAL|           * 00033100
*                   |                                LESSOREQUAL]]   * 00033200
*                   |       [,KEYTYPE=ENTRY                          * 00033300
*                   |       |     ,ENTRYKEY=xentrykey                 * 00033400
*                   |       |       [,KEYREQTYPE=EQUAL]              * 00033500
*                   |       |       [,KEYREQTYPE=LESSOREQUAL]        * 00033600
*                   |       |       [,KEYREQTYPE=GREATEROREQUAL]     * 00033700
*                   |       |       [,KEYREQTYPE=RANGE               * 00033800
*                   |       |             ,KEYRANGEEND                * 00033900
*                   |       |                          =xkeyrangeend] * 00034000
*                   |       |       [,KEYCOMPARE=NO]                 * 00034100
*                   |       |       [,KEYCOMPARE=YES]                * 00034200
*                   |       |       [,SKEYCOMPARE=NO]                * 00034300
*                   |       |       [,SKEYCOMPARE=YES                * 00034400
*                   |       |             ,SECONDARYKEY               * 00034500
*                   |       |                           =xsecondaryke * 00034600
*                   |       |                           y             * 00034700
*                   |       |               [,SKEYREQTYPE=EQUAL]     * 00034800
*                   |       |               [,SKEYREQTYPE=           * 00034900
*                   |       |               |              LESSOREQUA * 00035000
*                   |       |               |              L]         * 00035100
*                   |       |               [,SKEYREQTYPE=           * 00035200
*                   |       |               |              GREATERORE * 00035300
*                   |       |               |              QUAL]      * 00035400
*                   |       |               [,SKEYREQTYPE=RANGE      * 00035500
*                   |       |                     ,SKEYRANGEEND       * 00035600
*                   |       |                                   =xske * 00035700
*                   |       |                                   yrang * 00035800
*                   |       |                                   eend] * 00035900
*                   |       |                                   ]]    * 00036000
*                   |       [,KEYTYPE=SECONDARY                      * 00036100
*                   |             ,SECONDARYKEY                       * 00036200
*                   |                           =xsecondarykey        * 00036300
*                   |               [,SKEYREQTYPE=EQUAL]             * 00036400
*                   |               [,SKEYREQTYPE=LESSOREQUAL]       * 00036500
*                   |               [,SKEYREQTYPE=GREATEROREQUAL]    * 00036600
*                   |               [,SKEYREQTYPE=RANGE              * 00036700
*                   |                     ,SKEYRANGEEND               * 00036800
*                   |                                   =xskeyrangeen * 00036900
*                   |                                   d]            * 00037000
*                   |               [,SKEYCOMPARE=NO]                * 00037100
*                   |               [,SKEYCOMPARE=YES]               * 00037200
*                   |               [,KEYCOMPARE=NO]                 * 00037300
*                   |               [,KEYCOMPARE=YES                 * 00037400
*                   |                     ,ENTRYKEY                   * 00037500
*                   |                               =xentrykey        * 00037600
*                   |                       [,KEYREQTYPE=EQUAL]      * 00037700
*                   |                       [,KEYREQTYPE=            * 00037800
*                   |                       |             LESSOREQUAL * 00037900
*                   |                       |             ]           * 00038000
*                   |                       [,KEYREQTYPE=            * 00038100
*                   |                       |             GREATEROREQ * 00038200
*                   |                       |             UAL]        * 00038300
*                   |                       [,KEYREQTYPE=RANGE       * 00038400
*                   |                             ,KEYRANGEEND        * 00038500
*                   |                                          =xkeyr * 00038600
*                   |                                          angeen * 00038700
*                   |                                          d]]]   * 00038800
*                   |   [,VERSCOMPARE=NO]                            * 00038900
*                   |   [,VERSCOMPARE=YES                            * 00039000
*                   |         ,VERSCOMP=xverscomp                     * 00039100
*                   |            [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]] * 00039200
*                   |    ,BUFLIST=[xbuflist]                         * 00039300
*                   |   |   [,BUFADDRTYPE=VIRTUAL                    * 00039400
*                   |   |   |   [,PAGEABLE=YES                       * 00039500
*                   |   |   |   |    [,BUFSTGKEY                      * 00039600
*                   |   |   |   |                =xbufstgkey|CALLERS * 00039700
*                   |   |   |   |                _KEY]]              * 00039800
*                   |   |   |   [,PAGEABLE=NO]                       * 00039900
*                   |   |   |    [,BUFALET=xbufalet|NO_BUFALET]]    * 00040000
*                   |   |   [,BUFADDRTYPE=REAL                       * 00040100
*                   |   |       [,BUFADDRSIZE=31]                    * 00040200
*                   |   |       [,BUFADDRSIZE=64]]                   * 00040300
*                   |   |     ,BUFNUM=xbufnum                         * 00040400
*                   |    ,BUFFER=[xbuffer]                           * 00040500
*                   |       [,PAGEABLE=YES                           * 00040600
*                   |       |    [,BUFSTGKEY                          * 00040700
*                   |       |                =xbufstgkey|CALLERS_KEY * 00040800
*                   |       |                ]]                      * 00040900
*                   |       [,PAGEABLE=NO]                           * 00041000
*                   |         ,BUFSIZE=xbufsize                       * 00041100
*                    ,REQUEST=DELETE_LIST                            * 00041200
*                   |    [,DIRECTION=HEADTOTAIL|TAILTOHEAD]         * 00041300
*                   |    ,LOCATOR=CURSOR                             * 00041400
*                   |   |     ,LISTNUM=xlistnum                       * 00041500
*                   |   |    [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00041600
*                   |   |   [,AUTHCOMPARE=NO]                        * 00041700
*                   |   |   [,AUTHCOMPARE=YES                        * 00041800
*                   |   |         ,AUTHCOMP=xauthcomp                 * 00041900
*                   |   |            [,AUTHCOMPTYPE=EQUAL|           * 00042000
*                   |   |                            LESSOREQUAL]]   * 00042100
*                   |   |   [,KEYCOMPARE=NO]                         * 00042200
*                   |   |   [,KEYCOMPARE=YES                         * 00042300
*                   |   |         ,ENTRYKEY=xentrykey                 * 00042400
*                   |   |       [,KEYREQTYPE=EQUAL]                  * 00042500
*                   |   |       [,KEYREQTYPE=LESSOREQUAL]            * 00042600
*                   |   |       [,KEYREQTYPE=GREATEROREQUAL]         * 00042700
*                   |   |       [,KEYREQTYPE=RANGE                   * 00042800
*                   |   |             ,KEYRANGEEND                    * 00042900
*                   |   |                          =xkeyrangeend]]    * 00043000
*                   |   |   [,SKEYCOMPARE=NO]                        * 00043100
*                   |   |   [,SKEYCOMPARE=YES                        * 00043200
*                   |   |         ,SECONDARYKEY                       * 00043300
*                   |   |                       =xsecondarykey        * 00043400
*                   |   |       [,SKEYREQTYPE=EQUAL]                 * 00043500
*                   |   |       [,SKEYREQTYPE=LESSOREQUAL]           * 00043600
*                   |   |       [,SKEYREQTYPE=GREATEROREQUAL]        * 00043700
*                   |   |       [,SKEYREQTYPE=RANGE                  * 00043800
*                   |   |             ,SKEYRANGEEND                   * 00043900
*                   |   |                           =xskeyrangeend]]  * 00044000
*                   |    ,LOCATOR=ENTRYID                            * 00044100
*                   |   |     ,ENTRYID=xentryid                       * 00044200
*                   |   |    [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00044300
*                   |   |   [,LISTCOMPARE=NO]                        * 00044400
*                   |   |   [,LISTCOMPARE=YES                        * 00044500
*                   |   |         ,LISTNUM=xlistnum                   * 00044600
*                   |   |       [,AUTHCOMPARE=NO]                    * 00044700
*                   |   |       [,AUTHCOMPARE=YES                    * 00044800
*                   |   |             ,AUTHCOMP=xauthcomp             * 00044900
*                   |   |                [,AUTHCOMPTYPE=EQUAL|       * 00045000
*                   |   |                                LESSOREQUAL * 00045100
*                   |   |                                ]]]          * 00045200
*                   |   |   [,KEYCOMPARE=NO]                         * 00045300
*                   |   |   [,KEYCOMPARE=YES                         * 00045400
*                   |   |         ,ENTRYKEY=xentrykey                 * 00045500
*                   |   |       [,KEYREQTYPE=EQUAL]                  * 00045600
*                   |   |       [,KEYREQTYPE=LESSOREQUAL]            * 00045700
*                   |   |       [,KEYREQTYPE=GREATEROREQUAL]         * 00045800
*                   |   |       [,KEYREQTYPE=RANGE                   * 00045900
*                   |   |             ,KEYRANGEEND                    * 00046000
*                   |   |                          =xkeyrangeend]]    * 00046100
*                   |   |   [,SKEYCOMPARE=NO]                        * 00046200
*                   |   |   [,SKEYCOMPARE=YES                        * 00046300
*                   |   |         ,SECONDARYKEY                       * 00046400
*                   |   |                       =xsecondarykey        * 00046500
*                   |   |       [,SKEYREQTYPE=EQUAL]                 * 00046600
*                   |   |       [,SKEYREQTYPE=LESSOREQUAL]           * 00046700
*                   |   |       [,SKEYREQTYPE=GREATEROREQUAL]        * 00046800
*                   |   |       [,SKEYREQTYPE=RANGE                  * 00046900
*                   |   |             ,SKEYRANGEEND                   * 00047000
*                   |   |                           =xskeyrangeend]]  * 00047100
*                   |    ,LOCATOR=ENTRYNAME                          * 00047200
*                   |   |     ,ENTRYNAME=xentryname                   * 00047300
*                   |   |   [,LISTCOMPARE=NO]                        * 00047400
*                   |   |   [,LISTCOMPARE=YES                        * 00047500
*                   |   |         ,LISTNUM=xlistnum                   * 00047600
*                   |   |       [,AUTHCOMPARE=NO]                    * 00047700
*                   |   |       [,AUTHCOMPARE=YES                    * 00047800
*                   |   |             ,AUTHCOMP=xauthcomp             * 00047900
*                   |   |                [,AUTHCOMPTYPE=EQUAL|       * 00048000
*                   |   |                                LESSOREQUAL * 00048100
*                   |   |                                ]]]          * 00048200
*                   |    ,LOCATOR=UNKEYPOS                           * 00048300
*                   |   |     ,LISTNUM=xlistnum                       * 00048400
*                   |   |    [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00048500
*                   |   |   [,AUTHCOMPARE=NO]                        * 00048600
*                   |   |   [,AUTHCOMPARE=YES                        * 00048700
*                   |   |         ,AUTHCOMP=xauthcomp                 * 00048800
*                   |   |            [,AUTHCOMPTYPE=EQUAL|           * 00048900
*                   |   |                            LESSOREQUAL]]   * 00049000
*                   |   |   [,KEYCOMPARE=NO]                         * 00049100
*                   |   |   [,KEYCOMPARE=YES                         * 00049200
*                   |   |         ,ENTRYKEY=xentrykey                 * 00049300
*                   |   |       [,KEYREQTYPE=EQUAL]                  * 00049400
*                   |   |       [,KEYREQTYPE=LESSOREQUAL]            * 00049500
*                   |   |       [,KEYREQTYPE=GREATEROREQUAL]         * 00049600
*                   |   |       [,KEYREQTYPE=RANGE                   * 00049700
*                   |   |             ,KEYRANGEEND                    * 00049800
*                   |   |                          =xkeyrangeend]]    * 00049900
*                   |   |   [,SKEYCOMPARE=NO]                        * 00050000
*                   |   |   [,SKEYCOMPARE=YES                        * 00050100
*                   |   |         ,SECONDARYKEY                       * 00050200
*                   |   |                       =xsecondarykey        * 00050300
*                   |   |       [,SKEYREQTYPE=EQUAL]                 * 00050400
*                   |   |       [,SKEYREQTYPE=LESSOREQUAL]           * 00050500
*                   |   |       [,SKEYREQTYPE=GREATEROREQUAL]        * 00050600
*                   |   |       [,SKEYREQTYPE=RANGE                  * 00050700
*                   |   |             ,SKEYRANGEEND                   * 00050800
*                   |   |                           =xskeyrangeend]]  * 00050900
*                   |    ,LOCATOR=KEYPOS                             * 00051000
*                   |         ,LISTNUM=xlistnum                       * 00051100
*                   |        [,KEYSCANTYPE=ENTRY|SECONDARY]         * 00051200
*                   |       [,AUTHCOMPARE=NO]                        * 00051300
*                   |       [,AUTHCOMPARE=YES                        * 00051400
*                   |             ,AUTHCOMP=xauthcomp                 * 00051500
*                   |                [,AUTHCOMPTYPE=EQUAL|           * 00051600
*                   |                                LESSOREQUAL]]   * 00051700
*                   |       [,KEYTYPE=ENTRY                          * 00051800
*                   |       |     ,ENTRYKEY=xentrykey                 * 00051900
*                   |       |       [,KEYREQTYPE=EQUAL]              * 00052000
*                   |       |       [,KEYREQTYPE=LESSOREQUAL]        * 00052100
*                   |       |       [,KEYREQTYPE=GREATEROREQUAL]     * 00052200
*                   |       |       [,KEYREQTYPE=RANGE               * 00052300
*                   |       |             ,KEYRANGEEND                * 00052400
*                   |       |                          =xkeyrangeend] * 00052500
*                   |       |       [,KEYCOMPARE=NO]                 * 00052600
*                   |       |       [,KEYCOMPARE=YES]                * 00052700
*                   |       |       [,SKEYCOMPARE=NO]                * 00052800
*                   |       |       [,SKEYCOMPARE=YES                * 00052900
*                   |       |             ,SECONDARYKEY               * 00053000
*                   |       |                           =xsecondaryke * 00053100
*                   |       |                           y             * 00053200
*                   |       |               [,SKEYREQTYPE=EQUAL]     * 00053300
*                   |       |               [,SKEYREQTYPE=           * 00053400
*                   |       |               |              LESSOREQUA * 00053500
*                   |       |               |              L]         * 00053600
*                   |       |               [,SKEYREQTYPE=           * 00053700
*                   |       |               |              GREATERORE * 00053800
*                   |       |               |              QUAL]      * 00053900
*                   |       |               [,SKEYREQTYPE=RANGE      * 00054000
*                   |       |                     ,SKEYRANGEEND       * 00054100
*                   |       |                                   =xske * 00054200
*                   |       |                                   yrang * 00054300
*                   |       |                                   eend] * 00054400
*                   |       |                                   ]]    * 00054500
*                   |       [,KEYTYPE=SECONDARY                      * 00054600
*                   |             ,SECONDARYKEY                       * 00054700
*                   |                           =xsecondarykey        * 00054800
*                   |               [,SKEYREQTYPE=EQUAL]             * 00054900
*                   |               [,SKEYREQTYPE=LESSOREQUAL]       * 00055000
*                   |               [,SKEYREQTYPE=GREATEROREQUAL]    * 00055100
*                   |               [,SKEYREQTYPE=RANGE              * 00055200
*                   |                     ,SKEYRANGEEND               * 00055300
*                   |                                   =xskeyrangeen * 00055400
*                   |                                   d]            * 00055500
*                   |               [,SKEYCOMPARE=NO]                * 00055600
*                   |               [,SKEYCOMPARE=YES]               * 00055700
*                   |               [,KEYCOMPARE=NO]                 * 00055800
*                   |               [,KEYCOMPARE=YES                 * 00055900
*                   |                     ,ENTRYKEY                   * 00056000
*                   |                               =xentrykey        * 00056100
*                   |                       [,KEYREQTYPE=EQUAL]      * 00056200
*                   |                       [,KEYREQTYPE=            * 00056300
*                   |                       |             LESSOREQUAL * 00056400
*                   |                       |             ]           * 00056500
*                   |                       [,KEYREQTYPE=            * 00056600
*                   |                       |             GREATEROREQ * 00056700
*                   |                       |             UAL]        * 00056800
*                   |                       [,KEYREQTYPE=RANGE       * 00056900
*                   |                             ,KEYRANGEEND        * 00057000
*                   |                                          =xkeyr * 00057100
*                   |                                          angeen * 00057200
*                   |                                          d]]]   * 00057300
*                   |   [,VERSCOMPARE=NO]                            * 00057400
*                   |   [,VERSCOMPARE=YES                            * 00057500
*                   |         ,VERSCOMP=xverscomp                     * 00057600
*                   |            [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]] * 00057700
*                    ,REQUEST=READ_MULT                              * 00057800
*                   |     ,TYPE=ENTDATA|ADJDATA|ECONTROLS             * 00057900
*                   |    [,ADJAREA=xadjarea|NO_ADJAREA]             * 00058000
*                   |   [,RESTOKEN                                   * 00058100
*                   |   |           =xrestoken|NO_RESTOKEN          * 00058200
*                   |    ,EXTRESTOKEN=xextrestoken|NO_EXTRESTOKEN] * 00058300
*                   |   [,LISTCOMPARE=NO]                            * 00058400
*                   |   [,LISTCOMPARE=YES                            * 00058500
*                   |         ,LISTNUM=xlistnum                       * 00058600
*                   |       [,AUTHCOMPARE=NO]                        * 00058700
*                   |       [,AUTHCOMPARE=YES                        * 00058800
*                   |             ,AUTHCOMP=xauthcomp                 * 00058900
*                   |                [,AUTHCOMPTYPE=EQUAL|           * 00059000
*                   |                                LESSOREQUAL]]]  * 00059100
*                   |   [,KEYCOMPARE=NO]                             * 00059200
*                   |   [,KEYCOMPARE=YES                             * 00059300
*                   |         ,ENTRYKEY=xentrykey                     * 00059400
*                   |       [,KEYREQTYPE=EQUAL]                      * 00059500
*                   |       [,KEYREQTYPE=LESSOREQUAL]                * 00059600
*                   |       [,KEYREQTYPE=GREATEROREQUAL]             * 00059700
*                   |       [,KEYREQTYPE=RANGE                       * 00059800
*                   |             ,KEYRANGEEND                        * 00059900
*                   |                          =xkeyrangeend]]        * 00060000
*                   |   [,SKEYCOMPARE=NO]                            * 00060100
*                   |   [,SKEYCOMPARE=YES                            * 00060200
*                   |         ,SECONDARYKEY=xsecondarykey             * 00060300
*                   |       [,SKEYREQTYPE=EQUAL]                     * 00060400
*                   |       [,SKEYREQTYPE=LESSOREQUAL]               * 00060500
*                   |       [,SKEYREQTYPE=GREATEROREQUAL]            * 00060600
*                   |       [,SKEYREQTYPE=RANGE                      * 00060700
*                   |             ,SKEYRANGEEND                       * 00060800
*                   |                           =xskeyrangeend]]      * 00060900
*                   |   [,VERSCOMPARE=NO]                            * 00061000
*                   |   [,VERSCOMPARE=YES                            * 00061100
*                   |         ,VERSCOMP=xverscomp                     * 00061200
*                   |            [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]] * 00061300
*                   |    ,BUFLIST=[xbuflist]                         * 00061400
*                   |   |   [,BUFADDRTYPE=VIRTUAL                    * 00061500
*                   |   |   |   [,PAGEABLE=YES                       * 00061600
*                   |   |   |   |    [,BUFSTGKEY                      * 00061700
*                   |   |   |   |                =xbufstgkey|CALLERS * 00061800
*                   |   |   |   |                _KEY]]              * 00061900
*                   |   |   |   [,PAGEABLE=NO]                       * 00062000
*                   |   |   |    [,BUFALET=xbufalet|NO_BUFALET]]    * 00062100
*                   |   |   [,BUFADDRTYPE=REAL                       * 00062200
*                   |   |       [,BUFADDRSIZE=31]                    * 00062300
*                   |   |       [,BUFADDRSIZE=64]]                   * 00062400
*                   |   |     ,BUFNUM=xbufnum                         * 00062500
*                   |    ,BUFFER=[xbuffer]                           * 00062600
*                   |       [,PAGEABLE=YES                           * 00062700
*                   |       |    [,BUFSTGKEY                          * 00062800
*                   |       |                =xbufstgkey|CALLERS_KEY * 00062900
*                   |       |                ]]                      * 00063000
*                   |       [,PAGEABLE=NO]                           * 00063100
*                   |         ,BUFSIZE=xbufsize                       * 00063200
*                    ,REQUEST=DELETE_MULT                            * 00063300
*                   |   [,RESTOKEN                                   * 00063400
*                   |   |           =xrestoken|NO_RESTOKEN          * 00063500
*                   |    ,EXTRESTOKEN=xextrestoken|NO_EXTRESTOKEN] * 00063600
*                   |   [,LISTCOMPARE=NO]                            * 00063700
*                   |   [,LISTCOMPARE=YES                            * 00063800
*                   |         ,LISTNUM=xlistnum                       * 00063900
*                   |       [,AUTHCOMPARE=NO]                        * 00064000
*                   |       [,AUTHCOMPARE=YES                        * 00064100
*                   |             ,AUTHCOMP=xauthcomp                 * 00064200
*                   |                [,AUTHCOMPTYPE=EQUAL|           * 00064300
*                   |                                LESSOREQUAL]]]  * 00064400
*                   |   [,KEYCOMPARE=NO]                             * 00064500
*                   |   [,KEYCOMPARE=YES                             * 00064600
*                   |         ,ENTRYKEY=xentrykey                     * 00064700
*                   |       [,KEYREQTYPE=EQUAL]                      * 00064800
*                   |       [,KEYREQTYPE=LESSOREQUAL]                * 00064900
*                   |       [,KEYREQTYPE=GREATEROREQUAL]             * 00065000
*                   |       [,KEYREQTYPE=RANGE                       * 00065100
*                   |             ,KEYRANGEEND                        * 00065200
*                   |                          =xkeyrangeend]]        * 00065300
*                   |   [,SKEYCOMPARE=NO]                            * 00065400
*                   |   [,SKEYCOMPARE=YES                            * 00065500
*                   |         ,SECONDARYKEY=xsecondarykey             * 00065600
*                   |       [,SKEYREQTYPE=EQUAL]                     * 00065700
*                   |       [,SKEYREQTYPE=LESSOREQUAL]               * 00065800
*                   |       [,SKEYREQTYPE=GREATEROREQUAL]            * 00065900
*                   |       [,SKEYREQTYPE=RANGE                      * 00066000
*                   |             ,SKEYRANGEEND                       * 00066100
*                   |                           =xskeyrangeend]]      * 00066200
*                   |   [,VERSCOMPARE=NO]                            * 00066300
*                   |   [,VERSCOMPARE=YES                            * 00066400
*                   |         ,VERSCOMP=xverscomp                     * 00066500
*                   |            [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]] * 00066600
*                    ,REQUEST=MOVE_ENTRYLIST                         * 00066700
*                   |    [,FIRSTELEM=xfirstelem|1]                  * 00066800
*                   |     ,LASTELEM=xlastelem                         * 00066900
*                   |    [,MISCOMPARE=CONTINUE|HALT]                * 00067000
*                   |    ,LISTTYPE=NAMELIST                          * 00067100
*                   |    ,LISTTYPE=IDLIST                            * 00067200
*                   |       [,KEYCOMPARE=NO]                         * 00067300
*                   |       [,KEYCOMPARE=YES                         * 00067400
*                   |             ,ENTRYKEY=xentrykey                 * 00067500
*                   |           [,KEYREQTYPE=EQUAL]                  * 00067600
*                   |           [,KEYREQTYPE=LESSOREQUAL]            * 00067700
*                   |           [,KEYREQTYPE=GREATEROREQUAL]         * 00067800
*                   |           [,KEYREQTYPE=RANGE                   * 00067900
*                   |                 ,KEYRANGEEND                    * 00068000
*                   |                              =xkeyrangeend]]    * 00068100
*                   |       [,SKEYCOMPARE=NO]                        * 00068200
*                   |       [,SKEYCOMPARE=YES                        * 00068300
*                   |             ,SECONDARYKEY                       * 00068400
*                   |                           =xsecondarykey        * 00068500
*                   |           [,SKEYREQTYPE=EQUAL]                 * 00068600
*                   |           [,SKEYREQTYPE=LESSOREQUAL]           * 00068700
*                   |           [,SKEYREQTYPE=GREATEROREQUAL]        * 00068800
*                   |           [,SKEYREQTYPE=RANGE                  * 00068900
*                   |                 ,SKEYRANGEEND                   * 00069000
*                   |                               =xskeyrangeend]]  * 00069100
*                   |       [,MOVETOKEY=UNCHANGED]                   * 00069200
*                   |       [,MOVETOKEY=TARGETKEY]                   * 00069300
*                   |       [,MOVETOKEY=LISTKEY                      * 00069400
*                   |            [,LISTKEYINC=xlistkeyinc|NO]       * 00069500
*                   |            [,LISTKEYAREA=xlistkeyarea|NO]]    * 00069600
*                   |       [,MOVETOSKEY=UNCHANGED]                  * 00069700
*                   |       [,MOVETOSKEY=TARGETKEY]                  * 00069800
*                   |   [,LISTCOMPARE=NO]                            * 00069900
*                   |   [,LISTCOMPARE=YES                            * 00070000
*                   |         ,LISTNUM=xlistnum                       * 00070100
*                   |           [,AUTHCOMPARE=NO]                    * 00070200
*                   |           [,AUTHCOMPARE=YES                    * 00070300
*                   |                 ,AUTHCOMP=xauthcomp             * 00070400
*                   |                    [,AUTHCOMPTYPE=EQUAL|       * 00070500
*                   |                                    LESSOREQUAL * 00070600
*                   |                                    ]]]          * 00070700
*                   |   [,VERSCOMPARE=NO]                            * 00070800
*                   |   [,VERSCOMPARE=BYENTRY]                       * 00070900
*                   |   [,VERSCOMPARE=YES                            * 00071000
*                   |         ,VERSCOMP=xverscomp                     * 00071100
*                   |            [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]] * 00071200
*                   |    ,BUFLIST=xbuflist                           * 00071300
*                   |   |   [,BUFADDRTYPE=VIRTUAL                    * 00071400
*                   |   |   |   [,PAGEABLE=YES                       * 00071500
*                   |   |   |   |    [,BUFSTGKEY                      * 00071600
*                   |   |   |   |                =xbufstgkey|CALLERS * 00071700
*                   |   |   |   |                _KEY]]              * 00071800
*                   |   |   |   [,PAGEABLE=NO]                       * 00071900
*                   |   |   |    [,BUFALET=xbufalet|NO_BUFALET]]    * 00072000
*                   |   |   [,BUFADDRTYPE=REAL                       * 00072100
*                   |   |       [,BUFADDRSIZE=31]                    * 00072200
*                   |   |       [,BUFADDRSIZE=64]]                   * 00072300
*                   |   |     ,BUFNUM=xbufnum                         * 00072400
*                   |   |    [,BUFINCRNUM=xbufincrnum|16]           * 00072500
*                   |    ,BUFFER=xbuffer                             * 00072600
*                   |       [,PAGEABLE=YES                           * 00072700
*                   |       |    [,BUFSTGKEY                          * 00072800
*                   |       |                =xbufstgkey|CALLERS_KEY * 00072900
*                   |       |                ]]                      * 00073000
*                   |       [,PAGEABLE=NO]                           * 00073100
*                   |         ,BUFSIZE=xbufsize                       * 00073200
*                    ,REQUEST=DELETE_ENTRYLIST                       * 00073300
*                        [,FIRSTELEM=xfirstelem|1]                  * 00073400
*                         ,LASTELEM=xlastelem                         * 00073500
*                        [,MISCOMPARE=CONTINUE|HALT]                * 00073600
*                        ,LISTTYPE=NAMELIST                          * 00073700
*                        ,LISTTYPE=IDLIST                            * 00073800
*                           [,KEYCOMPARE=NO]                         * 00073900
*                           [,KEYCOMPARE=YES                         * 00074000
*                                 ,ENTRYKEY=xentrykey                 * 00074100
*                               [,KEYREQTYPE=EQUAL]                  * 00074200
*                               [,KEYREQTYPE=LESSOREQUAL]            * 00074300
*                               [,KEYREQTYPE=GREATEROREQUAL]         * 00074400
*                               [,KEYREQTYPE=RANGE                   * 00074500
*                                     ,KEYRANGEEND                    * 00074600
*                                                  =xkeyrangeend]]    * 00074700
*                           [,SKEYCOMPARE=NO]                        * 00074800
*                           [,SKEYCOMPARE=YES                        * 00074900
*                                 ,SECONDARYKEY                       * 00075000
*                                               =xsecondarykey        * 00075100
*                               [,SKEYREQTYPE=EQUAL]                 * 00075200
*                               [,SKEYREQTYPE=LESSOREQUAL]           * 00075300
*                               [,SKEYREQTYPE=GREATEROREQUAL]        * 00075400
*                               [,SKEYREQTYPE=RANGE                  * 00075500
*                                     ,SKEYRANGEEND                   * 00075600
*                                                   =xskeyrangeend]]  * 00075700
*                       [,LISTCOMPARE=NO]                            * 00075800
*                       [,LISTCOMPARE=YES                            * 00075900
*                             ,LISTNUM=xlistnum                       * 00076000
*                               [,AUTHCOMPARE=NO]                    * 00076100
*                               [,AUTHCOMPARE=YES                    * 00076200
*                                     ,AUTHCOMP=xauthcomp             * 00076300
*                                        [,AUTHCOMPTYPE=EQUAL|       * 00076400
*                                                        LESSOREQUAL * 00076500
*                                                        ]]]          * 00076600
*                       [,VERSCOMPARE=NO]                            * 00076700
*                       [,VERSCOMPARE=BYENTRY]                       * 00076800
*                       [,VERSCOMPARE=YES                            * 00076900
*                             ,VERSCOMP=xverscomp                     * 00077000
*                                [,VERSCOMPTYPE=EQUAL|LESSOREQUAL]] * 00077100
*                        ,BUFLIST=xbuflist                           * 00077200
*                       |   [,BUFADDRTYPE=VIRTUAL                    * 00077300
*                       |   |   [,PAGEABLE=YES                       * 00077400
*                       |   |   |    [,BUFSTGKEY                      * 00077500
*                       |   |   |                =xbufstgkey|CALLERS * 00077600
*                       |   |   |                _KEY]]              * 00077700
*                       |   |   [,PAGEABLE=NO]                       * 00077800
*                       |   |    [,BUFALET=xbufalet|NO_BUFALET]]    * 00077900
*                       |   [,BUFADDRTYPE=REAL                       * 00078000
*                       |       [,BUFADDRSIZE=31]                    * 00078100
*                       |       [,BUFADDRSIZE=64]]                   * 00078200
*                       |     ,BUFNUM=xbufnum                         * 00078300
*                       |    [,BUFINCRNUM=xbufincrnum|16]           * 00078400
*                        ,BUFFER=xbuffer                             * 00078500
*                           [,PAGEABLE=YES                           * 00078600
*                           |    [,BUFSTGKEY                          * 00078700
*                           |                =xbufstgkey|CALLERS_KEY * 00078800
*                           |                ]]                      * 00078900
*                           [,PAGEABLE=NO]                           * 00079000
*                             ,BUFSIZE=xbufsize                       * 00079100
*                    [,LOCKINDEX=xlockindex|NO_LOCKINDEX            * 00079200
*                        ,LOCKOPER=NOTHELD                           * 00079300
*                        ,LOCKOPER=HELDBY                            * 00079400
*                            [,LOCKCOMP=xlockcomp|NO_LOCKCOMP]]     * 00079500
*                   [,MODE=SYNCSUSPEND                               * 00079600
*                   |     ,ANSAREA=xansarea                           * 00079700
*                   |         ,ANSLEN=xanslen]                        * 00079800
*                   [,MODE=SYNCECB                                   * 00079900
*                   |     ,ANSAREA=xansarea                           * 00080000
*                   |         ,ANSLEN=xanslen                         * 00080100
*                   |     ,REQECB=xreqecb]                            * 00080200
*                   [,MODE=SYNCEXIT                                  * 00080300
*                   |     ,ANSAREA=xansarea                           * 00080400
*                   |         ,ANSLEN=xanslen                         * 00080500
*                   |    [,REQDATA=xreqdata|NO_REQDATA]]            * 00080600
*                   [,MODE=SYNCTOKEN                                 * 00080700
*                   |     ,ANSAREA=xansarea                           * 00080800
*                   |         ,ANSLEN=xanslen                         * 00080900
*                   |     ,REQTOKEN=xreqtoken]                        * 00081000
*                   [,MODE=ASYNCECB                                  * 00081100
*                   |     ,ANSAREA=xansarea                           * 00081200
*                   |         ,ANSLEN=xanslen                         * 00081300
*                   |     ,REQECB=xreqecb]                            * 00081400
*                   [,MODE=ASYNCEXIT                                 * 00081500
*                   |     ,ANSAREA=xansarea                           * 00081600
*                   |         ,ANSLEN=xanslen                         * 00081700
*                   |    [,REQDATA=xreqdata|NO_REQDATA]]            * 00081800
*                   [,MODE=ASYNCTOKEN                                * 00081900
*                   |     ,ANSAREA=xansarea                           * 00082000
*                   |         ,ANSLEN=xanslen                         * 00082100
*                   |     ,REQTOKEN=xreqtoken]                        * 00082200
*                   [,MODE=ASYNCNORESPONSE]                          * 00082300
*                    [,RETCODE=xretcode]                              * 00082400
*                    [,RSNCODE=xrsncode]                              * 00082500
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00082600
*                   [,MF=S]                                          * 00082700
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00082800
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*      Where:                                                         * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*      [xlabel]                                                       * 00083500
*          is an optional symbol, starting in column 1, that is the   * 00083600
*          name on the IXLLSTM macro invocation.  The name must       * 00083700
*          conform to the rules for an ordinary assembler language    * 00083800
*          symbol.                                                    * 00083900
*          DEFAULT: No name.                                          * 00084000
*                                                                     * 00084100
*                                                                     * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*      CONTOKEN=xcontoken                                             * 00084500
*          is the name (RS-type), or address in register (2)-(12), of * 00084600
*          a required 16 character input field that contains the      * 00084700
*          connect token returned by the IXLCONN service.  The        * 00084800
*          CONTOKEN uniquely identifies the user's connection to the  * 00084900
*          list structure.                                            * 00085000
*                                                                     * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*      [REQID=xreqid|NO_REQID]                                      * 00085500
*          is the name (RS-type), or address in register (2)-(12), of * 00085600
*          an optional 8 character input that contains a user-defined * 00085700
*          request identifier to be associated with the request.      * 00085800
*                                                                     * 00085900
*          Requests that have not been processed may be cancelled     * 00086000
*          with this request identifier using the IXLPURGE service.   * 00086100
*          Refer to the IXLPURGE service description for additional   * 00086200
*          information regarding the purging of outstanding requests. * 00086300
*                                                                     * 00086400
*          DEFAULT: NO_REQID                                          * 00086500
*                                                                     * 00086600
*                                                                     * 00086700
*                                                                     * 00086800
*                                                                     * 00086900
*      REQUEST=READ_LIST|DELETE_LIST|READ_MULT|DELETE_MULT|MOVE_ENTR * 00087000
*          YLIST|DELETE_ENTRYLIST                                    * 00087100
*          is a required keyword input that specifies the type of     * 00087200
*          operation to be performed on the structure.                * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*          REQUEST=READ_LIST                                          * 00087600
*              Read list entries.  Requests that the entry data,      * 00087700
*              adjunct data, list entry controls, or any combination  * 00087800
*              of these for the entries on the list containing the    * 00087900
*              designated entry be read into the storage area         * 00088000
*              specified by BUFFER or the buffers specified by        * 00088100
*              BUFLIST.                                               * 00088200
*                                                                     * 00088300
*              When adjunct data is requested the adjunct data for    * 00088400
*              the first entry processed is returned in the storage   * 00088500
*              area specified by ADJAREA.  The adjunct data for all   * 00088600
*              other entries is returned in the BUFFER area or the    * 00088700
*              BUFLIST buffers.  When list entry controls are         * 00088800
*              requested the entry controls for the first entry       * 00088900
*              processed is returned in the answer area specified by  * 00089000
*              ANSAREA.  The entry controls for all other entries is  * 00089100
*              returned in the BUFFER area or the BUFLIST buffers.    * 00089200
*                                                                     * 00089300
*              Processing begins with the entry designated by the     * 00089400
*              LOCATOR keyword and proceeds sequentially along the    * 00089500
*              list in the direction specified by DIRECTION until the * 00089600
*              head or tail of the list is reached.                   * 00089700
*                                                                     * 00089800
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00089900
*              AUTHCOMP causes list authority verification for the    * 00090000
*              designated list to precede processing of any list      * 00090100
*              entries.  If the list authority verification fails,    * 00090200
*              the list authority, the list control information and   * 00090300
*              appropriate return and reason codes are provided in    * 00090400
*              the ANSAREA.  Specifying LOCKINDEX in conjunction with * 00090500
*              LOCKOPER causes lock comparison to precede processing  * 00090600
*              of any list entries.  LOCKINDEX may optionally be      * 00090700
*              specified to indicate the index of the serialized list * 00090800
*              lock to be compared within the lock table for the list * 00090900
*              structure.  If the lock comparison fails, the lock     * 00091000
*              table entry and appropriate return and reason codes    * 00091100
*              are provided in the ANSAREA.                           * 00091200
*                                                                     * 00091300
*              Specifying LISTCOMPARE=YES in conjuction with LISTNUM  * 00091400
*              causes list number verification for the designated     * 00091500
*              starting list entry to precede processing of any list  * 00091600
*              entries.  If the designated list entry exists, but the * 00091700
*              list number verification fails, the list entry         * 00091800
*              controls and appropriate return and reason codes are   * 00091900
*              provided in the ANSAREA.                               * 00092000
*                                                                     * 00092100
*              Specifying VERSCOMPARE=YES in conjunction with         * 00092200
*              VERSCOMP may optionally be used to restrict processing * 00092300
*              to those entries with a version number as specified by * 00092400
*              VERSCOMPTYPE.  Specifying KEYCOMPARE=YES in            * 00092500
*              conjunction with ENTRYKEY causes key comparison to be  * 00092600
*              performed as specified by KEYREQTYPE.  Specifying      * 00092700
*              SKEYCOMPARE=YES in conjunction with SECONDARYKEY       * 00092800
*              causes secondary key comparison to be performed as     * 00092900
*              specified by SKEYREQTYPE.                              * 00093000
*                                                                     * 00093100
*              The absence of AUTHCOMPARE or LISTCOMPARE or           * 00093200
*              specifying AUTHCOMPARE=NO or LISTCOMPARE=NO indicates  * 00093300
*              no list authority or list number comparisons are to be * 00093400
*              performed before selecting entries to be processed.    * 00093500
*              The absence of LOCKINDEX indicates that no lock        * 00093600
*              comparison is to be performed before selecting entries * 00093700
*              to be processed.  The absence of VERSCOMPARE,          * 00093800
*              KEYCOMPARE, or SKEYCOMPARE or specifying               * 00093900
*              VERSCOMPARE=NO, KEYCOMPARE=NO, or SKEYCOMPARE=NO       * 00094000
*              indicates no version number, entry key value, or       * 00094100
*              secondary key value comparisons are performed when     * 00094200
*              selecting entries to be processed.                     * 00094300
*                                                                     * 00094400
*              DIRECTION may optionally be specified to indicate      * 00094500
*              direction of processing for traversing the list.       * 00094600
*                                                                     * 00094700
*              In order for any list entries to be processed, the     * 00094800
*              list number comparison, the list authority comparison  * 00094900
*              and the lock operation if requested, must succeed.  In * 00095000
*              order for a particular list entry to be read, the      * 00095100
*              version number comparison, and the key comparison,     * 00095200
*              when requested, must succeed otherwise no processing   * 00095300
*              is performed for the current entry and processing      * 00095400
*              continues with the next entry to be considered.        * 00095500
*                                                                     * 00095600
*              When the request completes successfully the number of  * 00095700
*              entries for which entry data, adjunct data, or list    * 00095800
*              entry controls was read is returned in the answer area * 00095900
*              specified by ANSAREA.                                  * 00096000
*                                                                     * 00096100
*              A READ_LIST request may complete prematurely due to    * 00096200
*              exhaustion of the storage specified by BUFFER or       * 00096300
*              BUFLIST, or if coupling facility model dependent       * 00096400
*              timeout criteria is exceeded.  In this event           * 00096500
*              appropriate return and reason codes are provided, the  * 00096600
*              number of entries for which data has been returned is  * 00096700
*              provided in ANSAREA, and the list entry controls for   * 00096800
*              the next appropriate entry in the list sequence to be  * 00096900
*              processed is returned in ANSAREA.  These list entry    * 00097000
*              controls may be specified as input on a subsequent     * 00097100
*              READ_LIST request to resume processing with the        * 00097200
*              appropriate list entry.  Note, however, that the       * 00097300
*              disposition of this list entry may have changed after  * 00097400
*              completion of the first READ_LIST request and before   * 00097500
*              the invocation of the resuming READ_LIST request.  For * 00097600
*              example, the list entry may have been deleted or moved * 00097700
*              to a different list in the structure.                  * 00097800
*                                                                     * 00097900
*              Resumed requests are processed identically to          * 00098000
*              non-resumed requests and must meet the same interface  * 00098100
*              requirements as non-resumed requests.  For example,    * 00098200
*              BUFFER area and BUFLIST buffer boundary and length     * 00098300
*              requirements are unchanged, and a resumed request may  * 00098400
*              in turn experience premature completion.               * 00098500
*                                                                     * 00098600
*              When TYPE=ADJDATA is specified ADJAREA is also         * 00098700
*              required.                                              * 00098800
*                                                                     * 00098900
*                                                                     * 00099000
*                                                                     * 00099100
*              TYPE=ENTDATA|ADJDATA|ECONTROLS                         * 00099200
*                  is a required group of keyword input(s) that       * 00099300
*                  specifies the type of information to be read.  Any * 00099400
*                  combination of the three values may be specified.  * 00099500
*                                                                     * 00099600
*                                                                     * 00099700
*                                                                     * 00099800
*                  TYPE=ENTDATA                                       * 00099900
*                      Indicates that the entry data is to be read.   * 00100000
*                                                                     * 00100100
*                                                                     * 00100200
*                  TYPE=ADJDATA                                       * 00100300
*                      Indicates that the adjunct data is to be read. * 00100400
*                      ADJDATA is only functional for structures that * 00100500
*                      support adjunct data.                          * 00100600
*                                                                     * 00100700
*                      For structures that are allocated with         * 00100800
*                      secondary keys, the first 32 bytes of the      * 00100900
*                      adjunct data will contain the secondary key of * 00101000
*                      the entry.                                     * 00101100
*                                                                     * 00101200
*                  TYPE=ECONTROLS                                     * 00101300
*                      Indicates that list entry control information  * 00101400
*                      is to be read.                                 * 00101500
*                                                                     * 00101600
*                      For structures allocated with secondary keys,  * 00101700
*                      the secondary key is not read by               * 00101800
*                      TYPE(ECONTROLS). The secondary key is read by  * 00101900
*                      TYPE(ADJDATA).                                 * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*                                                                     * 00102400
*                                                                     * 00102500
*                                                                     * 00102600
*              [ADJAREA=xadjarea|NO_ADJAREA]                        * 00102700
*                  is an optional input.  It is the name (RS-type),   * 00102800
*                  or address in register (2)-(12), of a 64-byte area * 00102900
*                  in virtual storage where entry adjunct data for    * 00103000
*                  the first entry is to be read.                     * 00103100
*                                                                     * 00103200
*                  If the structure was allocated to use secondary    * 00103300
*                  keys, the first 32 bytes of ADJDATA will contain   * 00103400
*                  the secondary key of the entry.                    * 00103500
*                  DEFAULT: NO_ADJAREA                                * 00103600
*                                                                     * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*              [DIRECTION=HEADTOTAIL|TAILTOHEAD]                    * 00104100
*                  is an optional keyword input that indicates the    * 00104200
*                  direction of processing for traversing the given   * 00104300
*                  list.                                              * 00104400
*                  DEFAULT: HEADTOTAIL                                * 00104500
*                                                                     * 00104600
*                                                                     * 00104700
*                  DIRECTION=HEADTOTAIL                               * 00104800
*                      Indicates that processing is to begin at the   * 00104900
*                      designated entry and proceed toward the tail   * 00105000
*                      of the list.                                   * 00105100
*                                                                     * 00105200
*                  DIRECTION=TAILTOHEAD                               * 00105300
*                      Indicates that processing is to begin at the   * 00105400
*                      designated entry and proceed toward the head   * 00105500
*                      of the list.                                   * 00105600
*                      DEFAULT: HEADTOTAIL                            * 00105700
*                                                                     * 00105800
*                                                                     * 00105900
*                                                                     * 00106000
*                                                                     * 00106100
*                                                                     * 00106200
*                                                                     * 00106300
*              LOCATOR=CURSOR|ENTRYID|ENTRYNAME|UNKEYPOS|KEYPOS     * 00106400
*                  is a required keyword input that specifies the     * 00106500
*                  location mechanism to be used to locate the first  * 00106600
*                  list entry to be processed.                        * 00106700
*                                                                     * 00106800
*                                                                     * 00106900
*                  LOCATOR=CURSOR                                     * 00107000
*                      Indicates that the list cursor is to be used   * 00107100
*                      to designate the starting list entry for the   * 00107200
*                      request.                                       * 00107300
*                                                                     * 00107400
*                                                                     * 00107500
*                      LISTNUM=xlistnum                               * 00107600
*                          is the name (RS-type), or address in       * 00107700
*                          register (2)-(12), of a required fullword  * 00107800
*                          input that designates the number of the    * 00107900
*                          list on which the starting list entry      * 00108000
*                          resides.                                   * 00108100
*                                                                     * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*                                                                     * 00108500
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00108600
*                          is an optional keyword input that          * 00108700
*                          indicates which key ordering               * 00108800
*                          (Entry/secondary) is to be used to scan    * 00108900
*                          for entries on the list.                   * 00109000
*                          DEFAULT: ENTRY                             * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                          KEYSCANTYPE=ENTRY                          * 00109400
*                              indicates that entry key ordering will * 00109500
*                              be used for scanning the list.         * 00109600
*                                                                     * 00109700
*                          KEYSCANTYPE=SECONDARY                      * 00109800
*                              indicates that secondary key ordering  * 00109900
*                              will be used for scanning the list.    * 00110000
*                                                                     * 00110100
*                              KEYSCANTYPE=SECONDARY is only valid    * 00110200
*                              when the structure is allocated in a   * 00110300
*                              CFLEVEL=9 or higher CF.                * 00110400
*                                                                     * 00110500
*                                                                     * 00110600
*                                                                     * 00110700
*                                                                     * 00110800
*                                                                     * 00110900
*                                                                     * 00111000
*                      [AUTHCOMPARE=NO|YES                          * 00111100
*                          is an optional keyword input which         * 00111200
*                          determines whether the list authority      * 00111300
*                          comparison is to be used to determine if   * 00111400
*                          entries on the list should be processed.   * 00111500
*                                                                     * 00111600
*                          AUTHCOMPARE is only meaningful for list    * 00111700
*                          structures allocated on CFLEVEL=1 or       * 00111800
*                          higher CF.                                 * 00111900
*                          DEFAULT: NO                                * 00112000
*                                                                     * 00112100
*                                                                     * 00112200
*                          [AUTHCOMPARE=NO]                           * 00112300
*                              indicates no list authority comparison * 00112400
*                              is to be performed before processing   * 00112500
*                              any entries on the list.               * 00112600
*                                                                     * 00112700
*                          [AUTHCOMPARE=YES                           * 00112800
*                              indicates that list authority          * 00112900
*                              comparison should precede processing   * 00113000
*                              of any entries on the list.            * 00113100
*                                                                     * 00113200
*                                                                     * 00113300
*                              AUTHCOMP=xauthcomp                     * 00113400
*                                  is the name (RS-type), or address  * 00113500
*                                  in register (2)-(12), of a         * 00113600
*                                  required 16 character input which  * 00113700
*                                  specifies a value to be compared   * 00113800
*                                  to the list authority value for    * 00113900
*                                  the designated list.  If the       * 00114000
*                                  condition specified by             * 00114100
*                                  AUTHCOMPTYPE is not met then the   * 00114200
*                                  IXLLSTM operation is terminated,   * 00114300
*                                  and appropriate return and reason  * 00114400
*                                  codes are provided.                * 00114500
*                                                                     * 00114600
*                                                                     * 00114700
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00114800
*                                      ]                              * 00114900
*                                      is an optional keyword input   * 00115000
*                                      which specifies how the list   * 00115100
*                                      authority comparison is to be  * 00115200
*                                      performed.                     * 00115300
*                                                                     * 00115400
*                                      DEFAULT: EQUAL                 * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                                      AUTHCOMPTYPE=EQUAL             * 00115800
*                                          The list authority for the * 00115900
*                                          list specified by LISTNUM  * 00116000
*                                          must be equal to the value * 00116100
*                                          specified for AUTHCOMP.    * 00116200
*                                                                     * 00116300
*                                                                     * 00116400
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00116500
*                                          The list authority for the * 00116600
*                                          list specified by LISTNUM  * 00116700
*                                          must be less than or equal * 00116800
*                                          to the value specified for * 00116900
*                                          AUTHCOMP.                  * 00117000
*                                                                     * 00117100
*                                                                     * 00117200
*                                                                     * 00117300
*                                                                     * 00117400
*                                                                     * 00117500
*                                                                     * 00117600
*                                                                     * 00117700
*                                                                     * 00117800
*                                                                     * 00117900
*                                                                     * 00118000
*                                                                     * 00118100
*                                                                     * 00118200
*                      [KEYCOMPARE=NO|YES                           * 00118300
*                          is an optional keyword input that          * 00118400
*                          determines whether the key value of an     * 00118500
*                          existing keyed list entry is to be         * 00118600
*                          compared to determine if this entry should * 00118700
*                          be selected for processing.  KEYCOMPARE is * 00118800
*                          only meaningful for list structures        * 00118900
*                          allocated on CFLEVEL=1 or higher CF.       * 00119000
*                          DEFAULT: NO                                * 00119100
*                                                                     * 00119200
*                                                                     * 00119300
*                          [KEYCOMPARE=NO]                            * 00119400
*                              Indicates that no entry key comparison * 00119500
*                              will be performed to determine if this * 00119600
*                              entry should be processed.             * 00119700
*                                                                     * 00119800
*                          [KEYCOMPARE=YES                            * 00119900
*                              Indicates that entry key comparison    * 00120000
*                              will be performed based on the         * 00120100
*                              KEYREQTYPE specified to determine if   * 00120200
*                              this entry is selectable for           * 00120300
*                              processing.                            * 00120400
*                                                                     * 00120500
*                              KEYCOMPARE=YES is ignored if the       * 00120600
*                              target structure does not support      * 00120700
*                              keyed entries.                         * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*                              ENTRYKEY=xentrykey                     * 00121100
*                                  is the name (RS-type), or address  * 00121200
*                                  in register (2)-(12), of a         * 00121300
*                                  required 16 character input that   * 00121400
*                                  specifies the key to be used to    * 00121500
*                                  compare to the entry key of the    * 00121600
*                                  list entry.  If the condition      * 00121700
*                                  specified by KEYREQTYPE is not met * 00121800
*                                  for the current list entry then no * 00121900
*                                  processing is performed for the    * 00122000
*                                  current entry, and processing      * 00122100
*                                  continues with the next entry to   * 00122200
*                                  be considered.                     * 00122300
*                                                                     * 00122400
*                                                                     * 00122500
*                                                                     * 00122600
*                                                                     * 00122700
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00122800
*                                  OREQUAL|RANGE]]                   * 00122900
*                                  is an optional keyword input which * 00123000
*                                  specifies how entry key comparison * 00123100
*                                  is to be performed on an existing  * 00123200
*                                  keyed list entry to determine if   * 00123300
*                                  the entry is selectable for        * 00123400
*                                  processing.                        * 00123500
*                                  DEFAULT: EQUAL                     * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*                                  [KEYREQTYPE=EQUAL]                 * 00123900
*                                      a list entry must have an      * 00124000
*                                      entry key equal to the value   * 00124100
*                                      specified by ENTRYKEY.         * 00124200
*                                                                     * 00124300
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00124400
*                                      a list entry must have an      * 00124500
*                                      entry key less than or equal   * 00124600
*                                      to the value specified by      * 00124700
*                                      ENTRYKEY.                      * 00124800
*                                                                     * 00124900
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00125000
*                                      a list entry must have an      * 00125100
*                                      entry key greater than or      * 00125200
*                                      equal to the value specified   * 00125300
*                                      by ENTRYKEY.                   * 00125400
*                                                                     * 00125500
*                                  [KEYREQTYPE=RANGE                  * 00125600
*                                      a list entry must have an      * 00125700
*                                      entry key within a specified   * 00125800
*                                      range of values. The ENTRYKEY  * 00125900
*                                      specified will be used as the  * 00126000
*                                      beginning of the range of key  * 00126100
*                                      values that will be compared   * 00126200
*                                      with the existing entry key.   * 00126300
*                                      KEYRANGEEND will be used as    * 00126400
*                                      the ending value.  A list      * 00126500
*                                      entry must have an entry key   * 00126600
*                                      value within the specified     * 00126700
*                                      entry key range, inclusive,    * 00126800
*                                      for it to be selectable.       * 00126900
*                                                                     * 00127000
*                                      KEYREQTYPE=RANGE is only valid * 00127100
*                                      when the structure is          * 00127200
*                                      allocated in a CFLEVEL=9 or    * 00127300
*                                      higher CF.                     * 00127400
*                                                                     * 00127500
*                                                                     * 00127600
*                                      KEYRANGEEND=xkeyrangeend]]     * 00127700
*                                          is the name (RS-type), or  * 00127800
*                                          address in register        * 00127900
*                                          (2)-(12), of a required 16 * 00128000
*                                          character input which      * 00128100
*                                          specifies the ending value * 00128200
*                                          for the range of keys to   * 00128300
*                                          be compared to the entry   * 00128400
*                                          key of the list entry.     * 00128500
*                                                                     * 00128600
*                                                                     * 00128700
*                                                                     * 00128800
*                                                                     * 00128900
*                                                                     * 00129000
*                                                                     * 00129100
*                                                                     * 00129200
*                                                                     * 00129300
*                                                                     * 00129400
*                                                                     * 00129500
*                                                                     * 00129600
*                                                                     * 00129700
*                      [SKEYCOMPARE=NO|YES                          * 00129800
*                          is an optional keyword input that          * 00129900
*                          determines whether the secondary key value * 00130000
*                          of an existing list entry is to be         * 00130100
*                          compared to determine if this entry should * 00130200
*                          be selected for processing.                * 00130300
*                          DEFAULT: NO                                * 00130400
*                                                                     * 00130500
*                                                                     * 00130600
*                          [SKEYCOMPARE=NO]                           * 00130700
*                              Indicates that no secondary key        * 00130800
*                              comparison will be performed to        * 00130900
*                              determine if this entry should be      * 00131000
*                              processed.                             * 00131100
*                                                                     * 00131200
*                          [SKEYCOMPARE=YES                           * 00131300
*                              Indicates that secondary key           * 00131400
*                              comparison will be performed based on  * 00131500
*                              the SKEYREQTYPE specified to determine * 00131600
*                              if this entry is selectable for        * 00131700
*                              processing.                            * 00131800
*                                                                     * 00131900
*                              SKEYCOMPARE=YES is ignored if the      * 00132000
*                              target structure was not allocated     * 00132100
*                              with secondary keys.                   * 00132200
*                                                                     * 00132300
*                                                                     * 00132400
*                              SECONDARYKEY=xsecondarykey             * 00132500
*                                  is the name (RS-type), or address  * 00132600
*                                  in register (2)-(12), of a         * 00132700
*                                  required 32 character input that   * 00132800
*                                  specifies the secondary key value  * 00132900
*                                  to be used to compare to the       * 00133000
*                                  secondary key of the list entry.   * 00133100
*                                  If the condition specified by      * 00133200
*                                  SKEYREQTYPE is not met for the     * 00133300
*                                  current list entry then no         * 00133400
*                                  processing is performed for the    * 00133500
*                                  current entry, and processing      * 00133600
*                                  continues with the next entry to   * 00133700
*                                  be considered.                     * 00133800
*                                                                     * 00133900
*                                                                     * 00134000
*                                                                     * 00134100
*                                                                     * 00134200
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00134300
*                                  ROREQUAL|RANGE]]                  * 00134400
*                                  is an optional keyword input which * 00134500
*                                  specifies how secondary key        * 00134600
*                                  comparison is to be performed on   * 00134700
*                                  an existing keyed list entry to    * 00134800
*                                  determine if the entry is          * 00134900
*                                  selectable for processing.         * 00135000
*                                  DEFAULT: EQUAL                     * 00135100
*                                                                     * 00135200
*                                                                     * 00135300
*                                  [SKEYREQTYPE=EQUAL]                * 00135400
*                                      a list entry must have a       * 00135500
*                                      secondary key equal to the     * 00135600
*                                      value specified by             * 00135700
*                                      SECONDARYKEY.                  * 00135800
*                                                                     * 00135900
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00136000
*                                      a list entry must have a       * 00136100
*                                      secondary key less than or     * 00136200
*                                      equal to the value specified   * 00136300
*                                      by SECONDARYKEY.               * 00136400
*                                                                     * 00136500
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00136600
*                                      a list entry must have a       * 00136700
*                                      secondary key greater than or  * 00136800
*                                      equal to the value specified   * 00136900
*                                      by SECONDARYKEY.               * 00137000
*                                                                     * 00137100
*                                  [SKEYREQTYPE=RANGE                 * 00137200
*                                      a list entry must have a       * 00137300
*                                      secondary key within a         * 00137400
*                                      specified range of values. The * 00137500
*                                      SECONDARYKEY specified will be * 00137600
*                                      used as the beginning of the   * 00137700
*                                      range of secondary key values  * 00137800
*                                      that will be compared with the * 00137900
*                                      existing secondary key.        * 00138000
*                                      SKEYRANGEEND will be used as   * 00138100
*                                      the ending value.  A list      * 00138200
*                                      entry must have a secondary    * 00138300
*                                      key value within the specified * 00138400
*                                      secondary key range,           * 00138500
*                                      inclusive, for it to be        * 00138600
*                                      selectable.                    * 00138700
*                                                                     * 00138800
*                                                                     * 00138900
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00139000
*                                                                     * 00139100
*                                          is the name (RS-type), or  * 00139200
*                                          address in register        * 00139300
*                                          (2)-(12), of a required 32 * 00139400
*                                          character input which      * 00139500
*                                          specifies the ending value * 00139600
*                                          for the range of secondary * 00139700
*                                          keys to be compared to the * 00139800
*                                          secondary key of the list  * 00139900
*                                          entry.                     * 00140000
*                                                                     * 00140100
*                                                                     * 00140200
*                                                                     * 00140300
*                                                                     * 00140400
*                                                                     * 00140500
*                                                                     * 00140600
*                                                                     * 00140700
*                                                                     * 00140800
*                                                                     * 00140900
*                                                                     * 00141000
*                                                                     * 00141100
*                  LOCATOR=ENTRYID                                    * 00141200
*                      Indicates that the EntryID should be used to   * 00141300
*                      designate the entry to be used as the starting * 00141400
*                      entry for the request.  EntryIDs may be either * 00141500
*                      assigned or provided by the user.  User        * 00141600
*                      provided EntryIDs must be specified if         * 00141700
*                      ENTRYIDTYPE=USER was specified on the IXLCONN  * 00141800
*                      request.                                       * 00141900
*                                                                     * 00142000
*                                                                     * 00142100
*                      ENTRYID=xentryid                               * 00142200
*                          is the name (RS-type), or address in       * 00142300
*                          register (2)-(12), of a required 12        * 00142400
*                          character input specifying the list entry  * 00142500
*                          id of the entry to be used as the starting * 00142600
*                          point of the request.                      * 00142700
*                                                                     * 00142800
*                                                                     * 00142900
*                                                                     * 00143000
*                                                                     * 00143100
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00143200
*                          is an optional keyword input that          * 00143300
*                          designates which key ordering              * 00143400
*                          (Entry/Secondary) is to be used to scan    * 00143500
*                          entries on the list.  This can only        * 00143600
*                          specified for structures that support      * 00143700
*                          keyed entries.                             * 00143800
*                          DEFAULT: ENTRY                             * 00143900
*                                                                     * 00144000
*                                                                     * 00144100
*                          KEYSCANTYPE=ENTRY                          * 00144200
*                              indicates that entry key ordering will * 00144300
*                              be used for scanning the list.         * 00144400
*                                                                     * 00144500
*                          KEYSCANTYPE=SECONDARY                      * 00144600
*                              indicates that secondary key ordering  * 00144700
*                              will be used for scanning the list.    * 00144800
*                                                                     * 00144900
*                              KEYSCANTYPE=SECONDARY is only valid    * 00145000
*                              when the structure is allocated in a   * 00145100
*                              CFLEVEL=9 or higher CF.                * 00145200
*                                                                     * 00145300
*                                                                     * 00145400
*                                                                     * 00145500
*                                                                     * 00145600
*                                                                     * 00145700
*                                                                     * 00145800
*                      [LISTCOMPARE=NO|YES                          * 00145900
*                          is an optional keyword input which         * 00146000
*                          determines whether the list number         * 00146100
*                          comparison is to be performed to determine * 00146200
*                          if entries should be processed.            * 00146300
*                          DEFAULT: NO                                * 00146400
*                                                                     * 00146500
*                                                                     * 00146600
*                          [LISTCOMPARE=NO]                           * 00146700
*                              indicates no list number comparison    * 00146800
*                              should precede processing of any list  * 00146900
*                              entries.                               * 00147000
*                                                                     * 00147100
*                          [LISTCOMPARE=YES                           * 00147200
*                              indicates that list number comparison  * 00147300
*                              should precede processing of any list  * 00147400
*                              entries.                               * 00147500
*                                                                     * 00147600
*                                                                     * 00147700
*                              LISTNUM=xlistnum                       * 00147800
*                                  is the name (RS-type), or address  * 00147900
*                                  in register (2)-(12), of a         * 00148000
*                                  required fullword input that       * 00148100
*                                  designates the number of the list  * 00148200
*                                  on which the entries to be         * 00148300
*                                  processed reside. If the list      * 00148400
*                                  comparison fails then the IXLLSTM  * 00148500
*                                  operation is terminated, and the   * 00148600
*                                  list entry controls along with the * 00148700
*                                  appropriate return and reason      * 00148800
*                                  codes are provided.                * 00148900
*                                                                     * 00149000
*                                                                     * 00149100
*                                                                     * 00149200
*                                                                     * 00149300
*                              [AUTHCOMPARE=NO|YES                  * 00149400
*                                  is an optional keyword input which * 00149500
*                                  determines whether the list        * 00149600
*                                  authority comparison is to be used * 00149700
*                                  to determine if entries on the     * 00149800
*                                  list should be processed.          * 00149900
*                                                                     * 00150000
*                                  AUTHCOMPARE is only meaningful for * 00150100
*                                  list structures allocated on       * 00150200
*                                  CFLEVEL=1 or higher CF.            * 00150300
*                                  DEFAULT: NO                        * 00150400
*                                                                     * 00150500
*                                                                     * 00150600
*                                  [AUTHCOMPARE=NO]                   * 00150700
*                                      indicates no list authority    * 00150800
*                                      comparison is to be performed  * 00150900
*                                      before processing any entries  * 00151000
*                                      on the list.                   * 00151100
*                                                                     * 00151200
*                                  [AUTHCOMPARE=YES                   * 00151300
*                                      indicates that list authority  * 00151400
*                                      comparison should precede      * 00151500
*                                      processing of any entries on   * 00151600
*                                      the list.                      * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*                                      AUTHCOMP=xauthcomp             * 00152000
*                                          is the name (RS-type), or  * 00152100
*                                          address in register        * 00152200
*                                          (2)-(12), of a required 16 * 00152300
*                                          character input which      * 00152400
*                                          specifies a value to be    * 00152500
*                                          compared to the list       * 00152600
*                                          authority value for the    * 00152700
*                                          designated list.  If the   * 00152800
*                                          condition specified by     * 00152900
*                                          AUTHCOMPTYPE is not met    * 00153000
*                                          then the IXLLSTM operation * 00153100
*                                          is terminated, and         * 00153200
*                                          appropriate return and     * 00153300
*                                          reason codes are provided  * 00153400
*                                          to the invoker.            * 00153500
*                                                                     * 00153600
*                                                                     * 00153700
*                                          [AUTHCOMPTYPE=EQUAL|LESSO * 00153800
*                                              REQUAL]]]             * 00153900
*                                              is an optional keyword * 00154000
*                                              input which specifies  * 00154100
*                                              how the list authority * 00154200
*                                              comparison is to be    * 00154300
*                                              performed.             * 00154400
*                                                                     * 00154500
*                                              DEFAULT: EQUAL         * 00154600
*                                                                     * 00154700
*                                                                     * 00154800
*                                              AUTHCOMPTYPE=EQUAL     * 00154900
*                                                  The list authority * 00155000
*                                                  for the list       * 00155100
*                                                  specified by       * 00155200
*                                                  LISTNUM must be    * 00155300
*                                                  equal to the value * 00155400
*                                                  specified for      * 00155500
*                                                  AUTHCOMP.          * 00155600
*                                                                     * 00155700
*                                                                     * 00155800
*                                              AUTHCOMPTYPE=LESSOREQU * 00155900
*                                                  AL                 * 00156000
*                                                  The list authority * 00156100
*                                                  for the list       * 00156200
*                                                  specified by       * 00156300
*                                                  LISTNUM must be    * 00156400
*                                                  less than or equal * 00156500
*                                                  to the value       * 00156600
*                                                  specified for      * 00156700
*                                                  AUTHCOMP.          * 00156800
*                                                                     * 00156900
*                                                                     * 00157000
*                                                                     * 00157100
*                                                                     * 00157200
*                                                                     * 00157300
*                                                                     * 00157400
*                                                                     * 00157500
*                                                                     * 00157600
*                                                                     * 00157700
*                                                                     * 00157800
*                                                                     * 00157900
*                                                                     * 00158000
*                                                                     * 00158100
*                                                                     * 00158200
*                                                                     * 00158300
*                                                                     * 00158400
*                      [KEYCOMPARE=NO|YES                           * 00158500
*                          is an optional keyword input that          * 00158600
*                          determines whether the key value of an     * 00158700
*                          existing keyed list entry is to be         * 00158800
*                          compared to determine if this entry should * 00158900
*                          be selected for processing.  KEYCOMPARE is * 00159000
*                          only meaningful for list structures        * 00159100
*                          allocated on CFLEVEL=1 or higher CF.       * 00159200
*                          DEFAULT: NO                                * 00159300
*                                                                     * 00159400
*                                                                     * 00159500
*                          [KEYCOMPARE=NO]                            * 00159600
*                              Indicates that no entry key comparison * 00159700
*                              will be performed to determine if this * 00159800
*                              entry should be processed.             * 00159900
*                                                                     * 00160000
*                          [KEYCOMPARE=YES                            * 00160100
*                              Indicates that entry key comparison    * 00160200
*                              will be performed based on the         * 00160300
*                              KEYREQTYPE specified to determine if   * 00160400
*                              this entry is selectable for           * 00160500
*                              processing.                            * 00160600
*                                                                     * 00160700
*                              KEYCOMPARE=YES is ignored if the       * 00160800
*                              target structure does not support      * 00160900
*                              keyed entries.                         * 00161000
*                                                                     * 00161100
*                                                                     * 00161200
*                              ENTRYKEY=xentrykey                     * 00161300
*                                  is the name (RS-type), or address  * 00161400
*                                  in register (2)-(12), of a         * 00161500
*                                  required 16 character input that   * 00161600
*                                  specifies the key to be used to    * 00161700
*                                  compare to the entry key of the    * 00161800
*                                  list entry.  If the condition      * 00161900
*                                  specified by KEYREQTYPE is not met * 00162000
*                                  for the current list entry then no * 00162100
*                                  processing is performed for the    * 00162200
*                                  current entry, and processing      * 00162300
*                                  continues with the next entry to   * 00162400
*                                  be considered.                     * 00162500
*                                                                     * 00162600
*                                                                     * 00162700
*                                                                     * 00162800
*                                                                     * 00162900
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00163000
*                                  OREQUAL|RANGE]]                   * 00163100
*                                  is an optional keyword input which * 00163200
*                                  specifies how entry key comparison * 00163300
*                                  is to be performed on an existing  * 00163400
*                                  keyed list entry to determine if   * 00163500
*                                  the entry is selectable for        * 00163600
*                                  processing.                        * 00163700
*                                  DEFAULT: EQUAL                     * 00163800
*                                                                     * 00163900
*                                                                     * 00164000
*                                  [KEYREQTYPE=EQUAL]                 * 00164100
*                                      a list entry must have an      * 00164200
*                                      entry key equal to the value   * 00164300
*                                      specified by ENTRYKEY.         * 00164400
*                                                                     * 00164500
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00164600
*                                      a list entry must have an      * 00164700
*                                      entry key less than or equal   * 00164800
*                                      to the value specified by      * 00164900
*                                      ENTRYKEY.                      * 00165000
*                                                                     * 00165100
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00165200
*                                      a list entry must have an      * 00165300
*                                      entry key greater than or      * 00165400
*                                      equal to the value specified   * 00165500
*                                      by ENTRYKEY.                   * 00165600
*                                                                     * 00165700
*                                  [KEYREQTYPE=RANGE                  * 00165800
*                                      a list entry must have an      * 00165900
*                                      entry key within a specified   * 00166000
*                                      range of values. The ENTRYKEY  * 00166100
*                                      specified will be used as the  * 00166200
*                                      beginning of the range of key  * 00166300
*                                      values that will be compared   * 00166400
*                                      with the existing entry key.   * 00166500
*                                      KEYRANGEEND will be used as    * 00166600
*                                      the ending value.  A list      * 00166700
*                                      entry must have an entry key   * 00166800
*                                      value within the specified     * 00166900
*                                      entry key range, inclusive,    * 00167000
*                                      for it to be selectable.       * 00167100
*                                                                     * 00167200
*                                      KEYREQTYPE=RANGE is only valid * 00167300
*                                      when the structure is          * 00167400
*                                      allocated in a CFLEVEL=9 or    * 00167500
*                                      higher CF.                     * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*                                      KEYRANGEEND=xkeyrangeend]]     * 00167900
*                                          is the name (RS-type), or  * 00168000
*                                          address in register        * 00168100
*                                          (2)-(12), of a required 16 * 00168200
*                                          character input specifies  * 00168300
*                                          the ending value for the   * 00168400
*                                          range of keys to be        * 00168500
*                                          compared to the entry key  * 00168600
*                                          of the list entry.         * 00168700
*                                                                     * 00168800
*                                                                     * 00168900
*                                                                     * 00169000
*                                                                     * 00169100
*                                                                     * 00169200
*                                                                     * 00169300
*                                                                     * 00169400
*                                                                     * 00169500
*                                                                     * 00169600
*                                                                     * 00169700
*                                                                     * 00169800
*                                                                     * 00169900
*                      [SKEYCOMPARE=NO|YES                          * 00170000
*                          is an optional keyword input that          * 00170100
*                          determines whether the secondary key value * 00170200
*                          of an existing keyed list entry is to be   * 00170300
*                          compared to determine if this entry should * 00170400
*                          be selected for processing.                * 00170500
*                          DEFAULT: NO                                * 00170600
*                                                                     * 00170700
*                                                                     * 00170800
*                          [SKEYCOMPARE=NO]                           * 00170900
*                              Indicates that no secondary key        * 00171000
*                              comparison will be preformed to        * 00171100
*                              determine if this entry should be      * 00171200
*                              processed.                             * 00171300
*                                                                     * 00171400
*                          [SKEYCOMPARE=YES                           * 00171500
*                              Indicates that secondary key           * 00171600
*                              comparison will be performed based on  * 00171700
*                              the SKEYREQTYPE specified to determine * 00171800
*                              if this entry is selectable for        * 00171900
*                              processing.                            * 00172000
*                                                                     * 00172100
*                              SKEYCOMPARE=YES is ignored if the      * 00172200
*                              target structure was not allocated     * 00172300
*                              with secondary keys.                   * 00172400
*                                                                     * 00172500
*                                                                     * 00172600
*                              SECONDARYKEY=xsecondarykey             * 00172700
*                                  is the name (RS-type), or address  * 00172800
*                                  in register (2)-(12), of a         * 00172900
*                                  required 32 character input that   * 00173000
*                                  specifies the secondary key to be  * 00173100
*                                  used to compare to the secondary   * 00173200
*                                  key of the list entry.  If the     * 00173300
*                                  condition specified by SKEYREQTYPE * 00173400
*                                  is not met for the current list    * 00173500
*                                  entry then no processing is        * 00173600
*                                  performed for the current entry,   * 00173700
*                                  and processing continues with the  * 00173800
*                                  next entry to be considered.       * 00173900
*                                                                     * 00174000
*                                                                     * 00174100
*                                                                     * 00174200
*                                                                     * 00174300
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00174400
*                                  ROREQUAL|RANGE]]                  * 00174500
*                                  is an optional keyword input which * 00174600
*                                  specifies how secondary key        * 00174700
*                                  comparison is to be performed on   * 00174800
*                                  an existing keyed list entry to    * 00174900
*                                  determine if the entry is          * 00175000
*                                  selectable for processing.         * 00175100
*                                  DEFAULT: EQUAL                     * 00175200
*                                                                     * 00175300
*                                                                     * 00175400
*                                  [SKEYREQTYPE=EQUAL]                * 00175500
*                                      a list entry must have a       * 00175600
*                                      secondary key equal to the     * 00175700
*                                      value specified by             * 00175800
*                                      SECONDARYKEY.                  * 00175900
*                                                                     * 00176000
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00176100
*                                      a list entry must have a       * 00176200
*                                      secondary key less than or     * 00176300
*                                      equal to the value specified   * 00176400
*                                      by SECONDARYKEY.               * 00176500
*                                                                     * 00176600
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00176700
*                                      a list entry must have a       * 00176800
*                                      secondary key greater than or  * 00176900
*                                      equal to the value specified   * 00177000
*                                      by SECONDARYKEY.               * 00177100
*                                                                     * 00177200
*                                  [SKEYREQTYPE=RANGE                 * 00177300
*                                      a list entry must have a       * 00177400
*                                      secondary key within a         * 00177500
*                                      specified range of values. The * 00177600
*                                      SECONDARYKEY specified will be * 00177700
*                                      used as the beginning of the   * 00177800
*                                      range of secondary key values  * 00177900
*                                      that will be compared with the * 00178000
*                                      existing secondary key.        * 00178100
*                                      SKEYRANGEEND will be used as   * 00178200
*                                      the ending value.  A list      * 00178300
*                                      entry must have a secondary    * 00178400
*                                      key value within the specified * 00178500
*                                      secondary key range,           * 00178600
*                                      inclusive, for it to be        * 00178700
*                                      selectable.                    * 00178800
*                                                                     * 00178900
*                                                                     * 00179000
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00179100
*                                                                     * 00179200
*                                          is the name (RS-type), or  * 00179300
*                                          address in register        * 00179400
*                                          (2)-(12), of a required 32 * 00179500
*                                          character input which      * 00179600
*                                          specifies the ending value * 00179700
*                                          for the range of secondary * 00179800
*                                          keys to be compared to the * 00179900
*                                          secondary key of the list  * 00180000
*                                          entry.                     * 00180100
*                                                                     * 00180200
*                                                                     * 00180300
*                                                                     * 00180400
*                                                                     * 00180500
*                                                                     * 00180600
*                                                                     * 00180700
*                                                                     * 00180800
*                                                                     * 00180900
*                                                                     * 00181000
*                                                                     * 00181100
*                                                                     * 00181200
*                  LOCATOR=ENTRYNAME                                  * 00181300
*                      Indicates that the entry name should be used   * 00181400
*                      to designate the entry to be used as the       * 00181500
*                      starting entry for the request.  ENTRYNAME may * 00181600
*                      only be specified for structures that support  * 00181700
*                      named entries.                                 * 00181800
*                                                                     * 00181900
*                                                                     * 00182000
*                      ENTRYNAME=xentryname                           * 00182100
*                          is the name (RS-type), or address in       * 00182200
*                          register (2)-(12), of a required 16        * 00182300
*                          character input specifying the list entry  * 00182400
*                          name of the entry to be used as the        * 00182500
*                          starting point of the request.             * 00182600
*                                                                     * 00182700
*                                                                     * 00182800
*                                                                     * 00182900
*                                                                     * 00183000
*                      [LISTCOMPARE=NO|YES                          * 00183100
*                          is an optional keyword input which         * 00183200
*                          determines if the list number is to be     * 00183300
*                          compared to determine if entries should be * 00183400
*                          processed.                                 * 00183500
*                          DEFAULT: NO                                * 00183600
*                                                                     * 00183700
*                                                                     * 00183800
*                          [LISTCOMPARE=NO]                           * 00183900
*                              indicates no list number comparison    * 00184000
*                              should precede processing of any list  * 00184100
*                              entries.                               * 00184200
*                                                                     * 00184300
*                          [LISTCOMPARE=YES                           * 00184400
*                              indicates that list number comparison  * 00184500
*                              should precede processing of any list  * 00184600
*                              entries.                               * 00184700
*                                                                     * 00184800
*                                                                     * 00184900
*                              LISTNUM=xlistnum                       * 00185000
*                                  is the name (RS-type), or address  * 00185100
*                                  in register (2)-(12), of a         * 00185200
*                                  required fullword input that       * 00185300
*                                  designates the number of the list  * 00185400
*                                  on which the entries to be         * 00185500
*                                  processed reside. If the list      * 00185600
*                                  comparison fails then the IXLLSTM  * 00185700
*                                  operation is terminated, and the   * 00185800
*                                  list entry controls along with the * 00185900
*                                  appropriate return and reason      * 00186000
*                                  codes are provided to the invoker. * 00186100
*                                                                     * 00186200
*                                                                     * 00186300
*                                                                     * 00186400
*                                                                     * 00186500
*                              [AUTHCOMPARE=NO|YES                  * 00186600
*                                  is an optional keyword input which * 00186700
*                                  determines whether the list        * 00186800
*                                  authority comparison is to be used * 00186900
*                                  to determine if entries on the     * 00187000
*                                  list should be processed.          * 00187100
*                                                                     * 00187200
*                                  AUTHCOMPARE is only meaningful for * 00187300
*                                  list structures allocated on       * 00187400
*                                  CFLEVEL=1 or higher CF.            * 00187500
*                                  DEFAULT: NO                        * 00187600
*                                                                     * 00187700
*                                                                     * 00187800
*                                  [AUTHCOMPARE=NO]                   * 00187900
*                                      indicates no list authority    * 00188000
*                                      comparison is to be performed  * 00188100
*                                      before processing any entries  * 00188200
*                                      on the list.                   * 00188300
*                                                                     * 00188400
*                                  [AUTHCOMPARE=YES                   * 00188500
*                                      indicates that list authority  * 00188600
*                                      comparison should precede      * 00188700
*                                      processing of any entries on   * 00188800
*                                      the list.                      * 00188900
*                                                                     * 00189000
*                                                                     * 00189100
*                                      AUTHCOMP=xauthcomp             * 00189200
*                                          is the name (RS-type), or  * 00189300
*                                          address in register        * 00189400
*                                          (2)-(12), of a required 16 * 00189500
*                                          character input which      * 00189600
*                                          specifies a value to be    * 00189700
*                                          compared to the list       * 00189800
*                                          authority value for the    * 00189900
*                                          designated list.  If the   * 00190000
*                                          condition specified by     * 00190100
*                                          AUTHCOMPTYPE is not met    * 00190200
*                                          then the IXLLSTM operation * 00190300
*                                          is terminated, and         * 00190400
*                                          appropriate return and     * 00190500
*                                          reason codes are provided  * 00190600
*                                          to the invoker.            * 00190700
*                                                                     * 00190800
*                                                                     * 00190900
*                                          [AUTHCOMPTYPE=EQUAL|LESSO * 00191000
*                                              REQUAL]]]             * 00191100
*                                              is an optional keyword * 00191200
*                                              input which specifies  * 00191300
*                                              how the list authority * 00191400
*                                              comparison is to be    * 00191500
*                                              performed.             * 00191600
*                                                                     * 00191700
*                                              DEFAULT: EQUAL         * 00191800
*                                                                     * 00191900
*                                                                     * 00192000
*                                              AUTHCOMPTYPE=EQUAL     * 00192100
*                                                  The list authority * 00192200
*                                                  for the list       * 00192300
*                                                  specified by       * 00192400
*                                                  LISTNUM must be    * 00192500
*                                                  equal to the value * 00192600
*                                                  specified for      * 00192700
*                                                  AUTHCOMP.          * 00192800
*                                                                     * 00192900
*                                                                     * 00193000
*                                              AUTHCOMPTYPE=LESSOREQU * 00193100
*                                                  AL                 * 00193200
*                                                  The list authority * 00193300
*                                                  for the list       * 00193400
*                                                  specified by       * 00193500
*                                                  LISTNUM must be    * 00193600
*                                                  less than or equal * 00193700
*                                                  to the value       * 00193800
*                                                  specified for      * 00193900
*                                                  AUTHCOMP.          * 00194000
*                                                                     * 00194100
*                                                                     * 00194200
*                                                                     * 00194300
*                                                                     * 00194400
*                                                                     * 00194500
*                                                                     * 00194600
*                                                                     * 00194700
*                                                                     * 00194800
*                                                                     * 00194900
*                                                                     * 00195000
*                                                                     * 00195100
*                                                                     * 00195200
*                                                                     * 00195300
*                                                                     * 00195400
*                                                                     * 00195500
*                  LOCATOR=UNKEYPOS                                   * 00195600
*                      Indicates that LISTNUM and DIRECTION are to be * 00195700
*                      used to designate the entry to be used as the  * 00195800
*                      starting entry for the request.                * 00195900
*                                                                     * 00196000
*                                                                     * 00196100
*                      LISTNUM=xlistnum                               * 00196200
*                          is the name (RS-type), or address in       * 00196300
*                          register (2)-(12), of a required fullword  * 00196400
*                          input that designates the number of the    * 00196500
*                          list on which the entries to be processed  * 00196600
*                          reside.  If DIRECTION=HEADTOTAIL was       * 00196700
*                          specified, the designated starting list    * 00196800
*                          entry is the head of the list.  If         * 00196900
*                          DIRECTION=TAILTOHEAD was specified, the    * 00197000
*                          designated starting list entry is the tail * 00197100
*                          of the list.                               * 00197200
*                                                                     * 00197300
*                                                                     * 00197400
*                                                                     * 00197500
*                                                                     * 00197600
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00197700
*                          is an optional keyword input that          * 00197800
*                          indicates which key ordering               * 00197900
*                          (Entry/Secondary) is to be used to scan    * 00198000
*                          for entries on the list.                   * 00198100
*                          DEFAULT: ENTRY                             * 00198200
*                                                                     * 00198300
*                                                                     * 00198400
*                          KEYSCANTYPE=ENTRY                          * 00198500
*                              indicates that entry key ordering will * 00198600
*                              be used for scanning the list.         * 00198700
*                                                                     * 00198800
*                          KEYSCANTYPE=SECONDARY                      * 00198900
*                              indicates that secondary key ordering  * 00199000
*                              will be used for scanning the list.    * 00199100
*                                                                     * 00199200
*                              KEYSCANTYPE=SECONDARY is only valid    * 00199300
*                              when the structure is allocated in a   * 00199400
*                              CFLEVEL=9 or higher CF.                * 00199500
*                                                                     * 00199600
*                                                                     * 00199700
*                                                                     * 00199800
*                                                                     * 00199900
*                                                                     * 00200000
*                                                                     * 00200100
*                      [AUTHCOMPARE=NO|YES                          * 00200200
*                          is an optional keyword input which         * 00200300
*                          determines whether the list authority      * 00200400
*                          comparison is to be used to determine if   * 00200500
*                          entries on the list should be processed.   * 00200600
*                                                                     * 00200700
*                          AUTHCOMPARE is only meaningful for list    * 00200800
*                          structures allocated on CFLEVEL=1 or       * 00200900
*                          higher CF.                                 * 00201000
*                          DEFAULT: NO                                * 00201100
*                                                                     * 00201200
*                                                                     * 00201300
*                          [AUTHCOMPARE=NO]                           * 00201400
*                              indicates no list authority comparison * 00201500
*                              is to be performed before processing   * 00201600
*                              any entries on the list.               * 00201700
*                                                                     * 00201800
*                          [AUTHCOMPARE=YES                           * 00201900
*                              indicates that list authority          * 00202000
*                              comparison should precede processing   * 00202100
*                              of any entries on the list.            * 00202200
*                                                                     * 00202300
*                                                                     * 00202400
*                              AUTHCOMP=xauthcomp                     * 00202500
*                                  is the name (RS-type), or address  * 00202600
*                                  in register (2)-(12), of a         * 00202700
*                                  required 16 character input which  * 00202800
*                                  specifies a value to be compared   * 00202900
*                                  to the list authority value for    * 00203000
*                                  the designated list.  If the       * 00203100
*                                  condition specified by             * 00203200
*                                  AUTHCOMPTYPE is not met then the   * 00203300
*                                  IXLLSTM operation is terminated    * 00203400
*                                  with no resultant change to the    * 00203500
*                                  structure, and appropriate return  * 00203600
*                                  and reason codes are provided to   * 00203700
*                                  the invoker.                       * 00203800
*                                                                     * 00203900
*                                                                     * 00204000
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00204100
*                                      ]                              * 00204200
*                                      is an optional keyword input   * 00204300
*                                      which specifies how the list   * 00204400
*                                      authority comparison is to be  * 00204500
*                                      performed.                     * 00204600
*                                                                     * 00204700
*                                      DEFAULT: EQUAL                 * 00204800
*                                                                     * 00204900
*                                                                     * 00205000
*                                      AUTHCOMPTYPE=EQUAL             * 00205100
*                                          The list authority for the * 00205200
*                                          list specified by LISTNUM  * 00205300
*                                          must be equal to the value * 00205400
*                                          specified for AUTHCOMP.    * 00205500
*                                                                     * 00205600
*                                                                     * 00205700
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00205800
*                                          The list authority for the * 00205900
*                                          list specified by LISTNUM  * 00206000
*                                          must be less than or equal * 00206100
*                                          to the value specified for * 00206200
*                                          AUTHCOMP.                  * 00206300
*                                                                     * 00206400
*                                                                     * 00206500
*                                                                     * 00206600
*                                                                     * 00206700
*                                                                     * 00206800
*                                                                     * 00206900
*                                                                     * 00207000
*                                                                     * 00207100
*                                                                     * 00207200
*                                                                     * 00207300
*                                                                     * 00207400
*                                                                     * 00207500
*                      [KEYCOMPARE=NO|YES                           * 00207600
*                          is an optional keyword input that          * 00207700
*                          determines whether the key value of an     * 00207800
*                          existing keyed list entry is to be         * 00207900
*                          compared to determine if this entry should * 00208000
*                          be selected for processing.  KEYCOMPARE is * 00208100
*                          only meaningful for list structures        * 00208200
*                          allocated on CFLEVEL=1 or higher CF.       * 00208300
*                          DEFAULT: NO                                * 00208400
*                                                                     * 00208500
*                                                                     * 00208600
*                          [KEYCOMPARE=NO]                            * 00208700
*                              Indicates that no entry key comparison * 00208800
*                              will be performed to determine if this * 00208900
*                              entry should be processed.             * 00209000
*                                                                     * 00209100
*                          [KEYCOMPARE=YES                            * 00209200
*                              Indicates that entry key comparison    * 00209300
*                              will be performed based on the         * 00209400
*                              KEYREQTYPE specified to determine if   * 00209500
*                              this entry is selectable for           * 00209600
*                              processing.                            * 00209700
*                                                                     * 00209800
*                              KEYCOMPARE=YES is ignored if the       * 00209900
*                              target structure does not support      * 00210000
*                              keyed entries.                         * 00210100
*                                                                     * 00210200
*                                                                     * 00210300
*                              ENTRYKEY=xentrykey                     * 00210400
*                                  is the name (RS-type), or address  * 00210500
*                                  in register (2)-(12), of a         * 00210600
*                                  required 16 character input that   * 00210700
*                                  specifies the key to be used to    * 00210800
*                                  compare to the entry key of the    * 00210900
*                                  list entry.  If the condition      * 00211000
*                                  specified by KEYREQTYPE is not met * 00211100
*                                  for the current list entry then no * 00211200
*                                  processing is performed for the    * 00211300
*                                  current entry, and processing      * 00211400
*                                  continues with the next entry to   * 00211500
*                                  be considered.                     * 00211600
*                                                                     * 00211700
*                                                                     * 00211800
*                                                                     * 00211900
*                                                                     * 00212000
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00212100
*                                  OREQUAL|RANGE]]                   * 00212200
*                                  is an optional keyword input which * 00212300
*                                  specifies how entry key comparison * 00212400
*                                  is to be performed on an existing  * 00212500
*                                  keyed list entry to determine if   * 00212600
*                                  the entry is selectable for        * 00212700
*                                  processing.                        * 00212800
*                                  DEFAULT: EQUAL                     * 00212900
*                                                                     * 00213000
*                                                                     * 00213100
*                                  [KEYREQTYPE=EQUAL]                 * 00213200
*                                      a list entry must have an      * 00213300
*                                      entry key equal to the value   * 00213400
*                                      specified by ENTRYKEY.         * 00213500
*                                                                     * 00213600
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00213700
*                                      a list entry must have an      * 00213800
*                                      entry key less than or equal   * 00213900
*                                      to the value specified by      * 00214000
*                                      ENTRYKEY.                      * 00214100
*                                                                     * 00214200
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00214300
*                                      a list entry must have an      * 00214400
*                                      entry key greater than or      * 00214500
*                                      equal to the value specified   * 00214600
*                                      by ENTRYKEY.                   * 00214700
*                                                                     * 00214800
*                                  [KEYREQTYPE=RANGE                  * 00214900
*                                      a list entry must have an      * 00215000
*                                      entry key within a specified   * 00215100
*                                      range of values. The ENTRYKEY  * 00215200
*                                      specified will be used as the  * 00215300
*                                      beginning of the range of key  * 00215400
*                                      values that will be compared   * 00215500
*                                      with the existing entry key.   * 00215600
*                                      KEYRANGEEND will be used as    * 00215700
*                                      the ending value.  A list      * 00215800
*                                      entry must have an entry key   * 00215900
*                                      value within the specified     * 00216000
*                                      entry key range, inclusive,    * 00216100
*                                      for it to be selectable.       * 00216200
*                                                                     * 00216300
*                                      KEYREQTYPE=RANGE is only valid * 00216400
*                                      when the structure is          * 00216500
*                                      allocated in a CFLEVEL=9 or    * 00216600
*                                      higher CF.                     * 00216700
*                                                                     * 00216800
*                                                                     * 00216900
*                                      KEYRANGEEND=xkeyrangeend]]     * 00217000
*                                          is the name (RS-type), or  * 00217100
*                                          address in register        * 00217200
*                                          (2)-(12), of a required 16 * 00217300
*                                          character input specifies  * 00217400
*                                          the ending value for the   * 00217500
*                                          range of keys to be        * 00217600
*                                          compared to the entry key  * 00217700
*                                          of the list entry.         * 00217800
*                                                                     * 00217900
*                                                                     * 00218000
*                                                                     * 00218100
*                                                                     * 00218200
*                                                                     * 00218300
*                                                                     * 00218400
*                                                                     * 00218500
*                                                                     * 00218600
*                                                                     * 00218700
*                                                                     * 00218800
*                                                                     * 00218900
*                                                                     * 00219000
*                      [SKEYCOMPARE=NO|YES                          * 00219100
*                          is an optional keyword input that          * 00219200
*                          determines whether the secondary key value * 00219300
*                          of an existing keyed list entry is to be   * 00219400
*                          compared to determine if this entry should * 00219500
*                          be selected for processing.                * 00219600
*                          DEFAULT: NO                                * 00219700
*                                                                     * 00219800
*                                                                     * 00219900
*                          [SKEYCOMPARE=NO]                           * 00220000
*                              Indicates that no secondary key        * 00220100
*                              comparison will be performed to        * 00220200
*                              determine if this entry should be      * 00220300
*                              processed.                             * 00220400
*                                                                     * 00220500
*                          [SKEYCOMPARE=YES                           * 00220600
*                              Indicates that secondary key           * 00220700
*                              comparison will be performed based on  * 00220800
*                              the SKEYREQTYPE specified to determine * 00220900
*                              if this entry is selectable for        * 00221000
*                              processing.                            * 00221100
*                                                                     * 00221200
*                              SKEYCOMPARE=YES is ignored if the      * 00221300
*                              target structure was not allocated     * 00221400
*                              with secondary keys.                   * 00221500
*                                                                     * 00221600
*                                                                     * 00221700
*                              SECONDARYKEY=xsecondarykey             * 00221800
*                                  is the name (RS-type), or address  * 00221900
*                                  in register (2)-(12), of a         * 00222000
*                                  required 32 character input that   * 00222100
*                                  specifies the secondary key value  * 00222200
*                                  to be used to compare to the       * 00222300
*                                  secondary key of the list entry.   * 00222400
*                                  If the condition specified by      * 00222500
*                                  SKEYREQTYPE is not met for the     * 00222600
*                                  current list entry then no         * 00222700
*                                  processing is performed for the    * 00222800
*                                  current entry, and processing      * 00222900
*                                  continues with the next entry to   * 00223000
*                                  be considered.                     * 00223100
*                                                                     * 00223200
*                                                                     * 00223300
*                                                                     * 00223400
*                                                                     * 00223500
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00223600
*                                  ROREQUAL|RANGE]]                  * 00223700
*                                  is an optional keyword input which * 00223800
*                                  specifies how secondary key        * 00223900
*                                  comparison is to be performed on   * 00224000
*                                  an existing keyed list entry to    * 00224100
*                                  determine if the entry is          * 00224200
*                                  selectable for processing.         * 00224300
*                                  DEFAULT: EQUAL                     * 00224400
*                                                                     * 00224500
*                                                                     * 00224600
*                                  [SKEYREQTYPE=EQUAL]                * 00224700
*                                      a list entry must have a       * 00224800
*                                      secondary key equal to the     * 00224900
*                                      value specified by             * 00225000
*                                      SECONDARYKEY.                  * 00225100
*                                                                     * 00225200
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00225300
*                                      a list entry must have a       * 00225400
*                                      secondary key less than or     * 00225500
*                                      equal to the value specified   * 00225600
*                                      by SECONDARYKEY.               * 00225700
*                                                                     * 00225800
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00225900
*                                      a list entry must have a       * 00226000
*                                      secondary key greater than or  * 00226100
*                                      equal to the value specified   * 00226200
*                                      by SECONDARYKEY.               * 00226300
*                                                                     * 00226400
*                                  [SKEYREQTYPE=RANGE                 * 00226500
*                                      a list entry must have a       * 00226600
*                                      secondary key within a         * 00226700
*                                      specified range of values. The * 00226800
*                                      SECONDARYKEY specified will be * 00226900
*                                      used as the beginning of the   * 00227000
*                                      range of secondary key values  * 00227100
*                                      that will be compared with the * 00227200
*                                      existing secondary key.        * 00227300
*                                      SKEYRANGEEND will be used as   * 00227400
*                                      the ending value.  A list      * 00227500
*                                      entry must have a secondary    * 00227600
*                                      key value within the specified * 00227700
*                                      secondary key range,           * 00227800
*                                      inclusive, for it to be        * 00227900
*                                      selectable.                    * 00228000
*                                                                     * 00228100
*                                                                     * 00228200
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00228300
*                                                                     * 00228400
*                                          is the name (RS-type), or  * 00228500
*                                          address in register        * 00228600
*                                          (2)-(12), of a required 32 * 00228700
*                                          character input which      * 00228800
*                                          specifies the ending value * 00228900
*                                          for the range of secondary * 00229000
*                                          keys to be compared to the * 00229100
*                                          secondary key of the list  * 00229200
*                                          entry.                     * 00229300
*                                                                     * 00229400
*                                                                     * 00229500
*                                                                     * 00229600
*                                                                     * 00229700
*                                                                     * 00229800
*                                                                     * 00229900
*                                                                     * 00230000
*                                                                     * 00230100
*                                                                     * 00230200
*                                                                     * 00230300
*                                                                     * 00230400
*                  LOCATOR=KEYPOS                                     * 00230500
*                      Indicates that LISTNUM, DIRECTION, and the key * 00230600
*                      specified by KEYTYPE are to be used to         * 00230700
*                      designate the entry to be used as the starting * 00230800
*                      list entry for the request.                    * 00230900
*                                                                     * 00231000
*                                                                     * 00231100
*                      LISTNUM=xlistnum                               * 00231200
*                          is the name (RS-type), or address in       * 00231300
*                          register (2)-(12), of a required fullword  * 00231400
*                          input that designates the number of the    * 00231500
*                          list on which the starting list entry      * 00231600
*                          resides.                                   * 00231700
*                                                                     * 00231800
*                                                                     * 00231900
*                                                                     * 00232000
*                                                                     * 00232100
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00232200
*                          is an optional keyword input that          * 00232300
*                          indicates which key ordering               * 00232400
*                          (Entry/Secondary) is to be used to scan    * 00232500
*                          for entries on the list.                   * 00232600
*                          DEFAULT: ENTRY                             * 00232700
*                                                                     * 00232800
*                                                                     * 00232900
*                          KEYSCANTYPE=ENTRY                          * 00233000
*                              indicates that entry key ordering will * 00233100
*                              be used for scanning the list.         * 00233200
*                                                                     * 00233300
*                          KEYSCANTYPE=SECONDARY                      * 00233400
*                              indicates that secondary key ordering  * 00233500
*                              will be used for scanning the list.    * 00233600
*                                                                     * 00233700
*                              KEYSCANTYPE=SECONDARY is only valid    * 00233800
*                              when the structure is allocated in a   * 00233900
*                              CFLEVEL=9 or higher CF.                * 00234000
*                                                                     * 00234100
*                                                                     * 00234200
*                                                                     * 00234300
*                                                                     * 00234400
*                                                                     * 00234500
*                                                                     * 00234600
*                      [AUTHCOMPARE=NO|YES                          * 00234700
*                          is an optional keyword input which         * 00234800
*                          determines whether the list authority      * 00234900
*                          comparison is to be used to determine if   * 00235000
*                          entries on the list should be processed.   * 00235100
*                                                                     * 00235200
*                          AUTHCOMPARE is only meaningful for list    * 00235300
*                          structures allocated on CFLEVEL=1 or       * 00235400
*                          higher CF.                                 * 00235500
*                          DEFAULT: NO                                * 00235600
*                                                                     * 00235700
*                                                                     * 00235800
*                          [AUTHCOMPARE=NO]                           * 00235900
*                              indicates no list authority comparison * 00236000
*                              is to be performed before processing   * 00236100
*                              any entries on the list.               * 00236200
*                                                                     * 00236300
*                          [AUTHCOMPARE=YES                           * 00236400
*                              indicates that list authority          * 00236500
*                              comparison should precede processing   * 00236600
*                              of any entries on the list.            * 00236700
*                                                                     * 00236800
*                                                                     * 00236900
*                              AUTHCOMP=xauthcomp                     * 00237000
*                                  is the name (RS-type), or address  * 00237100
*                                  in register (2)-(12), of a         * 00237200
*                                  required 16 character input which  * 00237300
*                                  specifies a value to be compared   * 00237400
*                                  to the list authority value for    * 00237500
*                                  the designated list.  If the       * 00237600
*                                  condition specified by             * 00237700
*                                  AUTHCOMPTYPE is not met then the   * 00237800
*                                  IXLLSTM operation is terminated,   * 00237900
*                                  and appropriate return and reason  * 00238000
*                                  codes are provided to the invoker. * 00238100
*                                                                     * 00238200
*                                                                     * 00238300
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00238400
*                                      ]                              * 00238500
*                                      is an optional keyword input   * 00238600
*                                      which specifies how the list   * 00238700
*                                      authority comparison is to be  * 00238800
*                                      performed.                     * 00238900
*                                                                     * 00239000
*                                      DEFAULT: EQUAL                 * 00239100
*                                                                     * 00239200
*                                                                     * 00239300
*                                      AUTHCOMPTYPE=EQUAL             * 00239400
*                                          The list authority for the * 00239500
*                                          list specified by LISTNUM  * 00239600
*                                          must be equal to the value * 00239700
*                                          specified for AUTHCOMP.    * 00239800
*                                                                     * 00239900
*                                                                     * 00240000
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00240100
*                                          The list authority for the * 00240200
*                                          list specified by LISTNUM  * 00240300
*                                          must be less than or equal * 00240400
*                                          to the value specified for * 00240500
*                                          AUTHCOMP.                  * 00240600
*                                                                     * 00240700
*                                                                     * 00240800
*                                                                     * 00240900
*                                                                     * 00241000
*                                                                     * 00241100
*                                                                     * 00241200
*                                                                     * 00241300
*                                                                     * 00241400
*                                                                     * 00241500
*                                                                     * 00241600
*                                                                     * 00241700
*                                                                     * 00241800
*                      [KEYTYPE=ENTRY|SECONDARY                     * 00241900
*                          is an optional keyword input that          * 00242000
*                          specifies whether to locate the starting   * 00242100
*                          list entry using the entry key or the      * 00242200
*                          secondary key.                             * 00242300
*                          DEFAULT: ENTRY                             * 00242400
*                                                                     * 00242500
*                                                                     * 00242600
*                          [KEYTYPE=ENTRY                             * 00242700
*                              Indicates the entry key will be used   * 00242800
*                              to locate the starting list entry.     * 00242900
*                                                                     * 00243000
*                                                                     * 00243100
*                              ENTRYKEY=xentrykey                     * 00243200
*                                  is the name (RS-type), or address  * 00243300
*                                  in register (2)-(12), of a         * 00243400
*                                  required 16 character input that   * 00243500
*                                  specifies the key to be used to    * 00243600
*                                  partially indicate the starting    * 00243700
*                                  list entry for the request.  If    * 00243800
*                                  DIRECTION=HEADTOTAIL was           * 00243900
*                                  specified, the designated starting * 00244000
*                                  list entry is the head of the      * 00244100
*                                  sublist.  If DIRECTION=TAILTOHEAD  * 00244200
*                                  was specified, the designated      * 00244300
*                                  starting list entry is the tail of * 00244400
*                                  the sublist.                       * 00244500
*                                                                     * 00244600
*                                                                     * 00244700
*                                  [KEYREQTYPE=EQUAL|LESSOREQUAL|GRE * 00244800
*                                      ATEROREQUAL|RANGE]            * 00244900
*                                      is an optional keyword input   * 00245000
*                                      which specifies how an         * 00245100
*                                      existing keyed list entry is   * 00245200
*                                      located and/or how key         * 00245300
*                                      comparison is to be performed  * 00245400
*                                      on an existing keyed list      * 00245500
*                                      entry to determine if the      * 00245600
*                                      entry is selectable for        * 00245700
*                                      processing when KEYCOMPARE=YES * 00245800
*                                      is specified.                  * 00245900
*                                      DEFAULT: EQUAL                 * 00246000
*                                                                     * 00246100
*                                                                     * 00246200
*                                      [KEYREQTYPE=EQUAL]             * 00246300
*                                          a list entry must have an  * 00246400
*                                          entry key equal to the     * 00246500
*                                          value specified by         * 00246600
*                                          ENTRYKEY.                  * 00246700
*                                                                     * 00246800
*                                          If no such keyed entry     * 00246900
*                                          exists on the list then    * 00247000
*                                          the request will be        * 00247100
*                                          failed.                    * 00247200
*                                                                     * 00247300
*                                      [KEYREQTYPE=LESSOREQUAL]       * 00247400
*                                          a list entry must have an  * 00247500
*                                          entry key less than or     * 00247600
*                                          equal to the value         * 00247700
*                                          specified by ENTRYKEY.     * 00247800
*                                                                     * 00247900
*                                          If no entries on the list  * 00248000
*                                          have an entry key value    * 00248100
*                                          less than or equal to the  * 00248200
*                                          specified value the        * 00248300
*                                          request will be failed     * 00248400
*                                                                     * 00248500
*                                          If no entries on the list  * 00248600
*                                          have an entry key value    * 00248700
*                                          equal to the value         * 00248800
*                                          specified by ENTRYKEY, but * 00248900
*                                          entries exists with an     * 00249000
*                                          entry key value less than  * 00249100
*                                          the specified value then   * 00249200
*                                          the entry with the largest * 00249300
*                                          entry key value less than  * 00249400
*                                          the specified value is     * 00249500
*                                          selected.  When multiple   * 00249600
*                                          entries have the same      * 00249700
*                                          entry key value DIRECTION  * 00249800
*                                          is used to resolve whether * 00249900
*                                          the first or last entry    * 00250000
*                                          with the entry key value   * 00250100
*                                          is selected.               * 00250200
*                                                                     * 00250300
*                                                                     * 00250400
*                                      [KEYREQTYPE=GREATEROREQUAL]    * 00250500
*                                          a list entry must have an  * 00250600
*                                          entry key greater than or  * 00250700
*                                          equal to the value         * 00250800
*                                          specified by ENTRYKEY.     * 00250900
*                                                                     * 00251000
*                                          If no entries on the list  * 00251100
*                                          have an entry key value    * 00251200
*                                          greater than or equal to   * 00251300
*                                          the specified value the    * 00251400
*                                          request will be failed.    * 00251500
*                                                                     * 00251600
*                                          If no entries on the list  * 00251700
*                                          have an entry key value    * 00251800
*                                          equal to the value         * 00251900
*                                          specified by ENTRYKEY, but * 00252000
*                                          entries exists with an     * 00252100
*                                          entry key value greater    * 00252200
*                                          than the specified value   * 00252300
*                                          then the entry with the    * 00252400
*                                          smallest entry key value   * 00252500
*                                          greater than the specified * 00252600
*                                          value is selected.  When   * 00252700
*                                          multiple entries have the  * 00252800
*                                          same entry key value       * 00252900
*                                          DIRECTION is used to       * 00253000
*                                          resolve whether the first  * 00253100
*                                          or last entry with the     * 00253200
*                                          entry key value is         * 00253300
*                                          selected.                  * 00253400
*                                                                     * 00253500
*                                      [KEYREQTYPE=RANGE              * 00253600
*                                          a list entry must have an  * 00253700
*                                          entry key within a         * 00253800
*                                          specified range of values. * 00253900
*                                          The ENTRYKEY specified     * 00254000
*                                          will be used as the        * 00254100
*                                          beginning of the range of  * 00254200
*                                          key values that will be    * 00254300
*                                          compared with the existing * 00254400
*                                          entry key. KEYRANGEEND     * 00254500
*                                          will be used as the ending * 00254600
*                                          value.  A list entry must  * 00254700
*                                          have an entry key value    * 00254800
*                                          within the specified entry * 00254900
*                                          key range, inclusive, for  * 00255000
*                                          it to be selectable.       * 00255100
*                                                                     * 00255200
*                                          KEYREQTYPE=RANGE is only   * 00255300
*                                          valid when the structure   * 00255400
*                                          is allocated in a          * 00255500
*                                          CFLEVEL=9 or higher CF.    * 00255600
*                                                                     * 00255700
*                                          If no entries on the list  * 00255800
*                                          have an entry key value    * 00255900
*                                          within the specified       * 00256000
*                                          range, the request will be * 00256100
*                                          failed.                    * 00256200
*                                                                     * 00256300
*                                          When multiple entries have * 00256400
*                                          an entry key value within  * 00256500
*                                          the specified range,       * 00256600
*                                          DIRECTION is used to       * 00256700
*                                          resolve whether the first  * 00256800
*                                          or last entry with the     * 00256900
*                                          entry key range is         * 00257000
*                                          selected.                  * 00257100
*                                                                     * 00257200
*                                          NOTE:  When                * 00257300
*                                          KEYREQTYPE=RANGE is        * 00257400
*                                          specifed, KEYCOMPARE=YES   * 00257500
*                                          is required.               * 00257600
*                                                                     * 00257700
*                                                                     * 00257800
*                                          KEYRANGEEND=xkeyrangeend]  * 00257900
*                                                                     * 00258000
*                                              is the name (RS-type), * 00258100
*                                              or address in register * 00258200
*                                              (2)-(12), of a         * 00258300
*                                              required 16 character  * 00258400
*                                              input specifies the    * 00258500
*                                              ending value for the   * 00258600
*                                              range of keys to be    * 00258700
*                                              compared to the entry  * 00258800
*                                              key of the designated  * 00258900
*                                              list entry.            * 00259000
*                                                                     * 00259100
*                                                                     * 00259200
*                                                                     * 00259300
*                                                                     * 00259400
*                                                                     * 00259500
*                                                                     * 00259600
*                                                                     * 00259700
*                                                                     * 00259800
*                                  [KEYCOMPARE=NO|YES]              * 00259900
*                                      is an optional keyword input   * 00260000
*                                      that determines whether the    * 00260100
*                                      key value of an existing keyed * 00260200
*                                      list entry is to be compared   * 00260300
*                                      to determine if this entry     * 00260400
*                                      should be selected for         * 00260500
*                                      processing.  KEYCOMPARE is     * 00260600
*                                      only meaningful for list       * 00260700
*                                      structures allocated on        * 00260800
*                                      CFLEVEL=1 or higher CF.        * 00260900
*                                      DEFAULT: NO                    * 00261000
*                                                                     * 00261100
*                                                                     * 00261200
*                                      [KEYCOMPARE=NO]                * 00261300
*                                          Indicates that no entry    * 00261400
*                                          key comparison will be     * 00261500
*                                          performed to determine if  * 00261600
*                                          this entry should be       * 00261700
*                                          processed.                 * 00261800
*                                                                     * 00261900
*                                          NOTE:  When                * 00262000
*                                          KEYREQTYPE=RANGE is        * 00262100
*                                          specifed, KEYCOMPARE=YES   * 00262200
*                                          is required.               * 00262300
*                                                                     * 00262400
*                                      [KEYCOMPARE=YES]               * 00262500
*                                          Indicates that entry key   * 00262600
*                                          comparison will be         * 00262700
*                                          performed based on the     * 00262800
*                                          KEYREQTYPE specified to    * 00262900
*                                          determine if this entry is * 00263000
*                                          selectable for processing. * 00263100
*                                                                     * 00263200
*                                          KEYCOMPARE=YES is ignored  * 00263300
*                                          if the target structure    * 00263400
*                                          does not support keyed     * 00263500
*                                          entries.                   * 00263600
*                                                                     * 00263700
*                                                                     * 00263800
*                                                                     * 00263900
*                                                                     * 00264000
*                                                                     * 00264100
*                                                                     * 00264200
*                                  [SKEYCOMPARE=NO|YES              * 00264300
*                                      is an optional keyword input   * 00264400
*                                      that determines whether the    * 00264500
*                                      secondary key value of an      * 00264600
*                                      existing keyed list entry is   * 00264700
*                                      to be compared to determine if * 00264800
*                                      this entry should be selected  * 00264900
*                                      for processing.                * 00265000
*                                      DEFAULT: NO                    * 00265100
*                                                                     * 00265200
*                                                                     * 00265300
*                                      [SKEYCOMPARE=NO]               * 00265400
*                                          Indicates that no          * 00265500
*                                          secondary key comparison   * 00265600
*                                          will be performed to       * 00265700
*                                          determine if this entry    * 00265800
*                                          should be processed.       * 00265900
*                                                                     * 00266000
*                                      [SKEYCOMPARE=YES               * 00266100
*                                          Indicates that secondary   * 00266200
*                                          key comparison will be     * 00266300
*                                          performed based on the     * 00266400
*                                          SKEYREQTYPE specified to   * 00266500
*                                          determine if this entry is * 00266600
*                                          selectable for processing. * 00266700
*                                                                     * 00266800
*                                          SKEYCOMPARE=YES is ignored * 00266900
*                                          if the target structure    * 00267000
*                                          was not allocated with     * 00267100
*                                          secondary keys.            * 00267200
*                                                                     * 00267300
*                                                                     * 00267400
*                                          SECONDARYKEY=xsecondarykey * 00267500
*                                                                     * 00267600
*                                              is the name (RS-type), * 00267700
*                                              or address in register * 00267800
*                                              (2)-(12), of a         * 00267900
*                                              required 32 character  * 00268000
*                                              input that specifies   * 00268100
*                                              the secondary key      * 00268200
*                                              value be compared to   * 00268300
*                                              the secondary key of   * 00268400
*                                              the list entry.  If    * 00268500
*                                              the condition          * 00268600
*                                              specified by           * 00268700
*                                              SKEYREQTYPE is not met * 00268800
*                                              then the IXLLSTM       * 00268900
*                                              operation is           * 00269000
*                                              terminated, and        * 00269100
*                                              appropriate return and * 00269200
*                                              reason codes are       * 00269300
*                                              provided to the        * 00269400
*                                              invoker.               * 00269500
*                                                                     * 00269600
*                                                                     * 00269700
*                                              [SKEYREQTYPE=EQUAL|LE * 00269800
*                                                  SSOREQUAL|GREATERO * 00269900
*                                                  REQUAL|RANGE]]    * 00270000
*                                                  is an optional     * 00270100
*                                                  keyword input      * 00270200
*                                                  which specifies    * 00270300
*                                                  how key comparison * 00270400
*                                                  is to be performed * 00270500
*                                                  on an existing     * 00270600
*                                                  keyed list entry   * 00270700
*                                                  to determine if    * 00270800
*                                                  the entry is       * 00270900
*                                                  selectable for     * 00271000
*                                                  processing.        * 00271100
*                                                  DEFAULT: EQUAL     * 00271200
*                                                                     * 00271300
*                                                                     * 00271400
*                                                  [SKEYREQTYPE=EQUAL * 00271500
*                                                      ]              * 00271600
*                                                      a list entry   * 00271700
*                                                      must have a    * 00271800
*                                                      secondary key  * 00271900
*                                                      equal to the   * 00272000
*                                                      value          * 00272100
*                                                      specified by   * 00272200
*                                                      SECONDARYKEY.  * 00272300
*                                                                     * 00272400
*                                                  [SKEYREQTYPE=LESSO * 00272500
*                                                      REQUAL]        * 00272600
*                                                      a list entry   * 00272700
*                                                      must have a    * 00272800
*                                                      secondary key  * 00272900
*                                                      less than or   * 00273000
*                                                      equal to the   * 00273100
*                                                      value          * 00273200
*                                                      specified by   * 00273300
*                                                      SECONDARYKEY.  * 00273400
*                                                                     * 00273500
*                                                  [SKEYREQTYPE=GREAT * 00273600
*                                                      EROREQUAL]     * 00273700
*                                                      a list entry   * 00273800
*                                                      must have a    * 00273900
*                                                      secondary key  * 00274000
*                                                      greater than   * 00274100
*                                                      or equal to    * 00274200
*                                                      the value      * 00274300
*                                                      specified by   * 00274400
*                                                      SECONDARYKEY.  * 00274500
*                                                                     * 00274600
*                                                  [SKEYREQTYPE=RANGE * 00274700
*                                                                     * 00274800
*                                                      a list entry   * 00274900
*                                                      must have a    * 00275000
*                                                      secondary key  * 00275100
*                                                      within a       * 00275200
*                                                      specified      * 00275300
*                                                      range of       * 00275400
*                                                      values. The    * 00275500
*                                                      SECONDARYKEY   * 00275600
*                                                      specified will * 00275700
*                                                      be used as the * 00275800
*                                                      beginning of   * 00275900
*                                                      the range of   * 00276000
*                                                      secondary key  * 00276100
*                                                      values that    * 00276200
*                                                      will be        * 00276300
*                                                      compared with  * 00276400
*                                                      the existing   * 00276500
*                                                      key.           * 00276600
*                                                      SKEYRANGEEND   * 00276700
*                                                      will be used   * 00276800
*                                                      as the ending  * 00276900
*                                                      value.  A list * 00277000
*                                                      entry must     * 00277100
*                                                      have a         * 00277200
*                                                      secondary key  * 00277300
*                                                      value within   * 00277400
*                                                      the specified  * 00277500
*                                                      secondary key  * 00277600
*                                                      range,         * 00277700
*                                                      inclusive, for * 00277800
*                                                      it to be       * 00277900
*                                                      selectable.    * 00278000
*                                                                     * 00278100
*                                                                     * 00278200
*                                                      SKEYRANGEEND=x * 00278300
*                                                          skeyrangee * 00278400
*                                                          nd]]]      * 00278500
*                                                          is the     * 00278600
*                                                          name       * 00278700
*                                                          (RS-type), * 00278800
*                                                          or address * 00278900
*                                                          in         * 00279000
*                                                          register   * 00279100
*                                                          (2)-(12),  * 00279200
*                                                          of a       * 00279300
*                                                          required   * 00279400
*                                                          32         * 00279500
*                                                          character  * 00279600
*                                                          input      * 00279700
*                                                          specifies  * 00279800
*                                                          the ending * 00279900
*                                                          value for  * 00280000
*                                                          the range  * 00280100
*                                                          of keys to * 00280200
*                                                          be         * 00280300
*                                                          compared   * 00280400
*                                                          to the     * 00280500
*                                                          secondary  * 00280600
*                                                          key of the * 00280700
*                                                          designated * 00280800
*                                                          list       * 00280900
*                                                          entry.     * 00281000
*                                                                     * 00281100
*                                                                     * 00281200
*                                                                     * 00281300
*                                                                     * 00281400
*                                                                     * 00281500
*                                                                     * 00281600
*                                                                     * 00281700
*                                                                     * 00281800
*                                                                     * 00281900
*                                                                     * 00282000
*                                                                     * 00282100
*                                                                     * 00282200
*                                                                     * 00282300
*                                                                     * 00282400
*                                                                     * 00282500
*                          [KEYTYPE=SECONDARY                         * 00282600
*                              Indicates the secondary key should be  * 00282700
*                              used to locate the starting list       * 00282800
*                              entry.                                 * 00282900
*                                                                     * 00283000
*                              KEYTYPE=SECONDARY is only valid when   * 00283100
*                              the structure is allocated in a        * 00283200
*                              CFLEVEL=9 or higher CF.                * 00283300
*                                                                     * 00283400
*                                                                     * 00283500
*                              SECONDARYKEY=xsecondarykey             * 00283600
*                                  is the name (RS-type), or address  * 00283700
*                                  in register (2)-(12), of a         * 00283800
*                                  required 32 character input that   * 00283900
*                                  specifies the secondary key to be  * 00284000
*                                  used to partially indicate the     * 00284100
*                                  starting list entry for the        * 00284200
*                                  request.  If DIRECTION=HEADTOTAIL  * 00284300
*                                  was specified, the designated      * 00284400
*                                  starting list entry is the head of * 00284500
*                                  the sublist.  If                   * 00284600
*                                  DIRECTION=TAILTOHEAD was           * 00284700
*                                  specified, the designated starting * 00284800
*                                  list entry is the tail of the      * 00284900
*                                  sublist.                           * 00285000
*                                                                     * 00285100
*                                                                     * 00285200
*                                  [SKEYREQTYPE=EQUAL|LESSOREQUAL|GR * 00285300
*                                      EATEROREQUAL|RANGE]           * 00285400
*                                      is an optional keyword input   * 00285500
*                                      which specifies how an         * 00285600
*                                      existing keyed list entry is   * 00285700
*                                      located and/or how key         * 00285800
*                                      comparison is to be performed  * 00285900
*                                      on an existing keyed list      * 00286000
*                                      entry to determine if the      * 00286100
*                                      entry is selectable for        * 00286200
*                                      processing when                * 00286300
*                                      SKEYCOMPARE=YES is specified.  * 00286400
*                                      DEFAULT: EQUAL                 * 00286500
*                                                                     * 00286600
*                                                                     * 00286700
*                                      [SKEYREQTYPE=EQUAL]            * 00286800
*                                          a list entry must have a   * 00286900
*                                          secondary key equal to the * 00287000
*                                          value specified by         * 00287100
*                                          SECONDARYKEY.              * 00287200
*                                                                     * 00287300
*                                          If no such keyed entry     * 00287400
*                                          exists on the list then    * 00287500
*                                          the request will be        * 00287600
*                                          failed.                    * 00287700
*                                                                     * 00287800
*                                      [SKEYREQTYPE=LESSOREQUAL]      * 00287900
*                                          a list entry must have a   * 00288000
*                                          secondary key less than or * 00288100
*                                          equal to the value         * 00288200
*                                          specified by SECONDARYKEY. * 00288300
*                                                                     * 00288400
*                                          If no entries on the list  * 00288500
*                                          have a secondary key value * 00288600
*                                          less than or equal to the  * 00288700
*                                          specified value the        * 00288800
*                                          request will be failed     * 00288900
*                                                                     * 00289000
*                                          If no entries on the list  * 00289100
*                                          have a secondary key value * 00289200
*                                          equal to the value         * 00289300
*                                          specified by SECONDARYKEY, * 00289400
*                                          but entries exists with a  * 00289500
*                                          secondary key value less   * 00289600
*                                          than the specified value   * 00289700
*                                          then the entry with the    * 00289800
*                                          largest secondary key      * 00289900
*                                          value less than the        * 00290000
*                                          specified value is         * 00290100
*                                          selected.  When multiple   * 00290200
*                                          entries have the same      * 00290300
*                                          secondary key value        * 00290400
*                                          DIRECTION is used to       * 00290500
*                                          resolve whether the first  * 00290600
*                                          or last entry with the     * 00290700
*                                          secondary key value is     * 00290800
*                                          selected.                  * 00290900
*                                                                     * 00291000
*                                                                     * 00291100
*                                      [SKEYREQTYPE=GREATEROREQUAL]   * 00291200
*                                                                     * 00291300
*                                          a list entry must have a   * 00291400
*                                          secondary key greater than * 00291500
*                                          or equal to the value      * 00291600
*                                          specified by SECONDARYKEY. * 00291700
*                                                                     * 00291800
*                                          If no entries on the list  * 00291900
*                                          have a secondary key value * 00292000
*                                          greater than or equal to   * 00292100
*                                          the specified value the    * 00292200
*                                          request will be failed.    * 00292300
*                                                                     * 00292400
*                                          If no entries on the list  * 00292500
*                                          have a secondary key value * 00292600
*                                          equal to the value         * 00292700
*                                          specified by SECONDARYKEY, * 00292800
*                                          but entries exists with a  * 00292900
*                                          secondary key value        * 00293000
*                                          greater than the specified * 00293100
*                                          value then the entry with  * 00293200
*                                          the smallest secondary key * 00293300
*                                          value greater than the     * 00293400
*                                          specified value is         * 00293500
*                                          selected.  When multiple   * 00293600
*                                          entries have the same      * 00293700
*                                          secondary key value        * 00293800
*                                          DIRECTION is used to       * 00293900
*                                          resolve whether the first  * 00294000
*                                          or last entry with the     * 00294100
*                                          secondary key value is     * 00294200
*                                          selected.                  * 00294300
*                                                                     * 00294400
*                                      [SKEYREQTYPE=RANGE             * 00294500
*                                          a list entry must have a   * 00294600
*                                          secondary key within a     * 00294700
*                                          specified range of values. * 00294800
*                                          The SECONDARYKEY specified * 00294900
*                                          will be used as the        * 00295000
*                                          beginning of the range of  * 00295100
*                                          key values that will be    * 00295200
*                                          compared with the existing * 00295300
*                                          secondary key.             * 00295400
*                                          SKEYRANGEEND will be used  * 00295500
*                                          as the ending value.  A    * 00295600
*                                          list entry must have a     * 00295700
*                                          secondary key value within * 00295800
*                                          the specified secondary    * 00295900
*                                          key range, inclusive, for  * 00296000
*                                          it to be selectable.       * 00296100
*                                                                     * 00296200
*                                          If no entries on the list  * 00296300
*                                          have a secondary key value * 00296400
*                                          within the specified       * 00296500
*                                          range, the request will be * 00296600
*                                          failed.                    * 00296700
*                                                                     * 00296800
*                                          When multiple entries have * 00296900
*                                          a secondary key value      * 00297000
*                                          within the specified       * 00297100
*                                          range, DIRECTION is used   * 00297200
*                                          to resolve whether the     * 00297300
*                                          first or last entry with   * 00297400
*                                          the secondary key range is * 00297500
*                                          selected.                  * 00297600
*                                                                     * 00297700
*                                                                     * 00297800
*                                          SKEYRANGEEND=xskeyrangeend * 00297900
*                                              ]                      * 00298000
*                                              is the name (RS-type), * 00298100
*                                              or address in register * 00298200
*                                              (2)-(12), of a         * 00298300
*                                              required 32 character  * 00298400
*                                              input specifies the    * 00298500
*                                              ending value for the   * 00298600
*                                              range of keys to be    * 00298700
*                                              compared to the        * 00298800
*                                              secondary key of the   * 00298900
*                                              designated list entry. * 00299000
*                                                                     * 00299100
*                                                                     * 00299200
*                                                                     * 00299300
*                                                                     * 00299400
*                                                                     * 00299500
*                                                                     * 00299600
*                                                                     * 00299700
*                                                                     * 00299800
*                                  [SKEYCOMPARE=NO|YES]             * 00299900
*                                      is an optional keyword input   * 00300000
*                                      that determines whether the    * 00300100
*                                      secondary key value of an      * 00300200
*                                      existing keyed list entry is   * 00300300
*                                      to be compared to determine if * 00300400
*                                      this entry should be selected  * 00300500
*                                      for processing.                * 00300600
*                                      DEFAULT: NO                    * 00300700
*                                                                     * 00300800
*                                                                     * 00300900
*                                      [SKEYCOMPARE=NO]               * 00301000
*                                          Indicates that no          * 00301100
*                                          secondary key comparison   * 00301200
*                                          will be performed to       * 00301300
*                                          determine if this entry    * 00301400
*                                          should be processed.       * 00301500
*                                                                     * 00301600
*                                          NOTE:  When                * 00301700
*                                          SKEYREQTYPE=RANGE is       * 00301800
*                                          specifed, SKEYCOMPARE=YES  * 00301900
*                                          is required.               * 00302000
*                                                                     * 00302100
*                                      [SKEYCOMPARE=YES]              * 00302200
*                                          Indicates that secondary   * 00302300
*                                          key comparison will be     * 00302400
*                                          performed based on the     * 00302500
*                                          SKEYREQTYPE specified to   * 00302600
*                                          determine if this entry is * 00302700
*                                          selectable for processing. * 00302800
*                                                                     * 00302900
*                                                                     * 00303000
*                                                                     * 00303100
*                                                                     * 00303200
*                                                                     * 00303300
*                                                                     * 00303400
*                                  [KEYCOMPARE=NO|YES               * 00303500
*                                      is an optional keyword input   * 00303600
*                                      that determines whether the    * 00303700
*                                      key value of an existing keyed * 00303800
*                                      list entry is to be compared   * 00303900
*                                      to determine if this entry     * 00304000
*                                      should be selected for         * 00304100
*                                      processing.  KEYCOMPARE is     * 00304200
*                                      only meaningful for list       * 00304300
*                                      structures allocated on        * 00304400
*                                      CFLEVEL=1 or higher CF.        * 00304500
*                                      DEFAULT: NO                    * 00304600
*                                                                     * 00304700
*                                                                     * 00304800
*                                      [KEYCOMPARE=NO]                * 00304900
*                                          Indicates that no entry    * 00305000
*                                          key comparison will be     * 00305100
*                                          performed to determine if  * 00305200
*                                          this entry should be       * 00305300
*                                          processed.                 * 00305400
*                                                                     * 00305500
*                                      [KEYCOMPARE=YES                * 00305600
*                                          Indicates that entry key   * 00305700
*                                          comparison will be         * 00305800
*                                          performed based on the     * 00305900
*                                          KEYREQTYPE specified to    * 00306000
*                                          determine if this entry is * 00306100
*                                          selectable for processing. * 00306200
*                                                                     * 00306300
*                                          KEYCOMPARE=YES is ignored  * 00306400
*                                          if the target structure    * 00306500
*                                          does not support keyed     * 00306600
*                                          entries.                   * 00306700
*                                                                     * 00306800
*                                                                     * 00306900
*                                          ENTRYKEY=xentrykey         * 00307000
*                                              is the name (RS-type), * 00307100
*                                              or address in register * 00307200
*                                              (2)-(12), of a         * 00307300
*                                              required 16 character  * 00307400
*                                              input that specifies   * 00307500
*                                              the key to be compared * 00307600
*                                              to the entry key value * 00307700
*                                              of the list entry.  If * 00307800
*                                              the condition          * 00307900
*                                              specified by           * 00308000
*                                              KEYREQTYPE is not met  * 00308100
*                                              then the IXLLSTM       * 00308200
*                                              operation is           * 00308300
*                                              terminated, and        * 00308400
*                                              appropriate return and * 00308500
*                                              reason codes are       * 00308600
*                                              provided to the        * 00308700
*                                              invoker.               * 00308800
*                                                                     * 00308900
*                                                                     * 00309000
*                                              [KEYREQTYPE=EQUAL|LES * 00309100
*                                                  SOREQUAL|GREATEROR * 00309200
*                                                  EQUAL|RANGE]]]    * 00309300
*                                                  is an optional     * 00309400
*                                                  keyword input      * 00309500
*                                                  which specifies    * 00309600
*                                                  how key comparison * 00309700
*                                                  is to be performed * 00309800
*                                                  on an existing     * 00309900
*                                                  keyed list entry   * 00310000
*                                                  to determine if    * 00310100
*                                                  the entry is       * 00310200
*                                                  selectable for     * 00310300
*                                                  processing.        * 00310400
*                                                  DEFAULT: EQUAL     * 00310500
*                                                                     * 00310600
*                                                                     * 00310700
*                                                  [KEYREQTYPE=EQUAL] * 00310800
*                                                                     * 00310900
*                                                      a list entry   * 00311000
*                                                      must have an   * 00311100
*                                                      entry key      * 00311200
*                                                      equal to the   * 00311300
*                                                      value          * 00311400
*                                                      specified by   * 00311500
*                                                      ENTRYKEY.      * 00311600
*                                                                     * 00311700
*                                                  [KEYREQTYPE=LESSOR * 00311800
*                                                      EQUAL]         * 00311900
*                                                      a list entry   * 00312000
*                                                      must have an   * 00312100
*                                                      entry key less * 00312200
*                                                      than or equal  * 00312300
*                                                      to the value   * 00312400
*                                                      specified by   * 00312500
*                                                      ENTRYKEY.      * 00312600
*                                                                     * 00312700
*                                                  [KEYREQTYPE=GREATE * 00312800
*                                                      ROREQUAL]      * 00312900
*                                                      a list entry   * 00313000
*                                                      must have an   * 00313100
*                                                      entry key      * 00313200
*                                                      greater than   * 00313300
*                                                      or equal to    * 00313400
*                                                      the value      * 00313500
*                                                      specified by   * 00313600
*                                                      ENTRYKEY.      * 00313700
*                                                                     * 00313800
*                                                  [KEYREQTYPE=RANGE  * 00313900
*                                                                     * 00314000
*                                                      a list entry   * 00314100
*                                                      must have an   * 00314200
*                                                      entry key      * 00314300
*                                                      within a       * 00314400
*                                                      specified      * 00314500
*                                                      range of       * 00314600
*                                                      values. The    * 00314700
*                                                      ENTRYKEY       * 00314800
*                                                      specified will * 00314900
*                                                      be used as the * 00315000
*                                                      beginning of   * 00315100
*                                                      the range of   * 00315200
*                                                      key values     * 00315300
*                                                      that will be   * 00315400
*                                                      compared with  * 00315500
*                                                      the existing   * 00315600
*                                                      entry key.     * 00315700
*                                                      KEYRANGEEND    * 00315800
*                                                      will be used   * 00315900
*                                                      as the ending  * 00316000
*                                                      value.  A list * 00316100
*                                                      entry must     * 00316200
*                                                      have an entry  * 00316300
*                                                      key value      * 00316400
*                                                      within the     * 00316500
*                                                      specified      * 00316600
*                                                      entry key      * 00316700
*                                                      range,         * 00316800
*                                                      inclusive, for * 00316900
*                                                      it to be       * 00317000
*                                                      selectable.    * 00317100
*                                                                     * 00317200
*                                                                     * 00317300
*                                                      KEYRANGEEND=xk * 00317400
*                                                          eyrangeend * 00317500
*                                                          ]]]        * 00317600
*                                                          is the     * 00317700
*                                                          name       * 00317800
*                                                          (RS-type), * 00317900
*                                                          or address * 00318000
*                                                          in         * 00318100
*                                                          register   * 00318200
*                                                          (2)-(12),  * 00318300
*                                                          of a       * 00318400
*                                                          required   * 00318500
*                                                          16         * 00318600
*                                                          character  * 00318700
*                                                          input      * 00318800
*                                                          specifies  * 00318900
*                                                          the ending * 00319000
*                                                          value for  * 00319100
*                                                          the range  * 00319200
*                                                          of keys to * 00319300
*                                                          be         * 00319400
*                                                          compared   * 00319500
*                                                          to the     * 00319600
*                                                          entry key  * 00319700
*                                                          of the     * 00319800
*                                                          designated * 00319900
*                                                          list       * 00320000
*                                                          entry.     * 00320100
*                                                                     * 00320200
*                                                                     * 00320300
*                                                                     * 00320400
*                                                                     * 00320500
*                                                                     * 00320600
*                                                                     * 00320700
*                                                                     * 00320800
*                                                                     * 00320900
*                                                                     * 00321000
*                                                                     * 00321100
*                                                                     * 00321200
*                                                                     * 00321300
*                                                                     * 00321400
*                                                                     * 00321500
*                                                                     * 00321600
*                                                                     * 00321700
*                                                                     * 00321800
*                                                                     * 00321900
*                                                                     * 00322000
*                                                                     * 00322100
*                                                                     * 00322200
*                                                                     * 00322300
*                                                                     * 00322400
*                                                                     * 00322500
*              [VERSCOMPARE=NO|YES                                  * 00322600
*                  is an optional keyword input that indicates the    * 00322700
*                  version comparison be done for each list entry.    * 00322800
*                  The version number specified by VERSCOMP will be   * 00322900
*                  used to compare each list entry version number.    * 00323000
*                  DEFAULT: NO                                        * 00323100
*                                                                     * 00323200
*                                                                     * 00323300
*                  [VERSCOMPARE=NO]                                   * 00323400
*                      indicates no version comparison should precede * 00323500
*                      processing of any list entries.                * 00323600
*                                                                     * 00323700
*                  [VERSCOMPARE=YES                                   * 00323800
*                      indicates that version number comparison       * 00323900
*                      should precede processing of each list entry.  * 00324000
*                                                                     * 00324100
*                                                                     * 00324200
*                      VERSCOMP=xverscomp                             * 00324300
*                          is the name (RS-type), or address in       * 00324400
*                          register (2)-(12), of a required 8         * 00324500
*                          character input which specifies a value to * 00324600
*                          be compared to the version number of the   * 00324700
*                          list entry.  If the condition specified by * 00324800
*                          VERSCOMPTYPE is not met for the current    * 00324900
*                          list entry then no processing is performed * 00325000
*                          for the current entry and processing       * 00325100
*                          continues with the next entry to be        * 00325200
*                          considered.                                * 00325300
*                                                                     * 00325400
*                                                                     * 00325500
*                          [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]        * 00325600
*                              is an optional keyword input that      * 00325700
*                              specifies how the list entry version   * 00325800
*                              number comparison is to be performed.  * 00325900
*                                                                     * 00326000
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00326100
*                              meaningful for list structures         * 00326200
*                              allocated on CFLEVEL=1 or higher CF.   * 00326300
*                                                                     * 00326400
*                              DEFAULT: EQUAL                         * 00326500
*                                                                     * 00326600
*                                                                     * 00326700
*                              VERSCOMPTYPE=EQUAL                     * 00326800
*                                  The version number for the list    * 00326900
*                                  entry must be equal to the value   * 00327000
*                                  specified for VERSCOMP.            * 00327100
*                                                                     * 00327200
*                                                                     * 00327300
*                              VERSCOMPTYPE=LESSOREQUAL               * 00327400
*                                  The version number for the list    * 00327500
*                                  entry must be less than or equal   * 00327600
*                                  to the value specified for         * 00327700
*                                  VERSCOMP.                          * 00327800
*                                  DEFAULT: Equal                     * 00327900
*                                                                     * 00328000
*                                                                     * 00328100
*                                                                     * 00328200
*                                                                     * 00328300
*                                                                     * 00328400
*                                                                     * 00328500
*                                                                     * 00328600
*                                                                     * 00328700
*                                                                     * 00328800
*                                                                     * 00328900
*                                                                     * 00329000
*                                                                     * 00329100
*              The following is a set of mutually exclusive keys.     * 00329200
*              This set is required; only one key must be specified.  * 00329300
*                                                                     * 00329400
*                                                                     * 00329500
*              BUFLIST=[xbuflist]                                     * 00329600
*                  belongs to a set of mutually exclusive keys. It is * 00329700
*                  an output.  It is the name (RS-type), or address   * 00329800
*                  in register (2)-(12), of a 128-byte virtual        * 00329900
*                  storage area containing a list of addresses of     * 00330000
*                  buffers.  The set of buffers is used as if it were * 00330100
*                  a single contiguous area for purposes of output.   * 00330200
*                                                                     * 00330300
*                  The format of the list is a set of 8-byte          * 00330400
*                  elements.  The first four bytes of each element is * 00330500
*                  reserved space.  The second four bytes of each     * 00330600
*                  element contains the address of a buffer.          * 00330700
*                                                                     * 00330800
*                  There may be 1 to 16 buffers passed in the list.   * 00330900
*                  Each buffer in the list must be the same size and  * 00331000
*                  must reside in the same address space or data      * 00331100
*                  space.  Data is fetched from or stored into the    * 00331200
*                  buffers in the order specified.  For READ_LIST     * 00331300
*                  requests each buffer must be 4096 bytes in length  * 00331400
*                  and must start on a 4096-byte (page) boundary.     * 00331500
*                                                                     * 00331600
*                  One of BUFFER or BUFLIST is required for READ_LIST * 00331700
*                  requests.                                          * 00331800
*                                                                     * 00331900
*                  Upon successful completion of a READ_LIST request  * 00332000
*                  the BUFLIST buffers contain, starting at offset    * 00332100
*                  zero in the first buffer, an array of elements     * 00332200
*                  each of which is constructed as follows (dependent * 00332300
*                  on request options):                               * 00332400
*                                                                     * 00332500
*                  When adjunct data is requested on a READ_LIST      * 00332600
*                  request the adjunct data for the first entry       * 00332700
*                  processed is returned in the storage area          * 00332800
*                  specified by ADJAREA.  The adjunct data for all    * 00332900
*                  other entries is returned in the BUFLIST buffers.  * 00333000
*                  When list entry controls are requested the entry   * 00333100
*                  controls for the first entry processed is returned * 00333200
*                  in the answer area specified by ANSAREA.  The      * 00333300
*                  entry controls for all other entries is returned   * 00333400
*                  in the BUFLIST buffers.                            * 00333500
*                                                                     * 00333600
*                                                                     * 00333700
*                  o   When TYPE=ENTDATA was specified:               * 00333800
*                                                                     * 00333900
*                      Entry data.                                    * 00334000
*                                                                     * 00334100
*                  o   When TYPE=ADJDATA was specified:               * 00334200
*                                                                     * 00334300
*                      Adunct data.                                   * 00334400
*                                                                     * 00334500
*                  o   When TYPE=ECONTROLS was specified:             * 00334600
*                                                                     * 00334700
*                      List entry controls.                           * 00334800
*                                                                     * 00334900
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00335000
*                                                                     * 00335100
*                      Entry data, followed by adjunct data.          * 00335200
*                                                                     * 00335300
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00335400
*                                                                     * 00335500
*                      List entry controls, followed by entry data.   * 00335600
*                                                                     * 00335700
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00335800
*                                                                     * 00335900
*                      List entry controls, followed by adjunct data. * 00336000
*                                                                     * 00336100
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00336200
*                      specified:                                     * 00336300
*                                                                     * 00336400
*                      List entry controls, followed by entry data,   * 00336500
*                      followed by adjunct data.                      * 00336600
*                                                                     * 00336700
*                                                                     * 00336800
*                                                                     * 00336900
*                  One array element is returned for each processed   * 00337000
*                  entry.  The number of elements returned in the     * 00337100
*                  BUFLIST buffers is indicated in the answer area    * 00337200
*                  specified by ANSAREA.  An element length may be    * 00337300
*                  determined by considering the element make-up, the * 00337400
*                  structure element size, the number of elements in  * 00337500
*                  the entry, an adjunct data size of 64 bytes, and   * 00337600
*                  the length of list entry controls.  The length and * 00337700
*                  contents of list entry controls is defined by      * 00337800
*                  mapping macro IXLYLCTL.                            * 00337900
*                                                                     * 00338000
*                  BUFLIST is mutually exclusive with BUFFER.         * 00338100
*                                                                     * 00338200
*                                                                     * 00338300
*                  [BUFADDRTYPE=VIRTUAL|REAL                        * 00338400
*                      is an optional keyword input that specifies    * 00338500
*                      whether the buffer addresses specified in the  * 00338600
*                      BUFLIST list are virtual storage addresses or  * 00338700
*                      real storage addresses.                        * 00338800
*                                                                     * 00338900
*                      DEFAULT: VIRTUAL                               * 00339000
*                                                                     * 00339100
*                                                                     * 00339200
*                      [BUFADDRTYPE=VIRTUAL                           * 00339300
*                          Indicates that the buffer addresses        * 00339400
*                          specified in the BUFLIST list are virtual  * 00339500
*                          storage addresses.                         * 00339600
*                                                                     * 00339700
*                                                                     * 00339800
*                                                                     * 00339900
*                          [PAGEABLE=YES|NO]                        * 00340000
*                              is an optional keyword input that      * 00340100
*                              specifies whether or not the buffers   * 00340200
*                              specified by BUFLIST resides in        * 00340300
*                              pageable storage.                      * 00340400
*                                                                     * 00340500
*                              DEFAULT: YES                           * 00340600
*                                                                     * 00340700
*                                                                     * 00340800
*                              [PAGEABLE=YES                          * 00340900
*                                  Indicates that the BUFLIST buffers * 00341000
*                                  reside in pageable virtual         * 00341100
*                                  storage.                           * 00341200
*                                                                     * 00341300
*                                  This includes disabled reference   * 00341400
*                                  storage, and may include storage   * 00341500
*                                  that has the potential to become   * 00341600
*                                  pageable (such as address space    * 00341700
*                                  storage for which a PGSER FIX has  * 00341800
*                                  been successfully processed).  It  * 00341900
*                                  does not include implicitly        * 00342000
*                                  non-pageable storage (such as is   * 00342100
*                                  obtained from non-pageable         * 00342200
*                                  subpools).                         * 00342300
*                                                                     * 00342400
*                                                                     * 00342500
*                                                                     * 00342600
*                                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY * 00342700
*                                      ]]                            * 00342800
*                                      is the name (RS-type), or      * 00342900
*                                      address in register (2)-(12),  * 00343000
*                                      of an optional 8 bit input     * 00343100
*                                      containing the storage key to  * 00343200
*                                      be used when referencing the   * 00343300
*                                      buffers in the list specified  * 00343400
*                                      by BUFLIST.                    * 00343500
*                                                                     * 00343600
*                                      The high order nibble contains * 00343700
*                                      the storage key, the low order * 00343800
*                                      nibble is ignored.  For        * 00343900
*                                      example, set 'kkkk' in the     * 00344000
*                                      binary bit string 'kkkkxxxx'B  * 00344100
*                                      to correspond to the desired   * 00344200
*                                      storage key.                   * 00344300
*                                                                     * 00344400
*                                      If BUFSTGKEY is not specified, * 00344500
*                                      then all references to the     * 00344600
*                                      BUFLIST buffers are performed  * 00344700
*                                      using the caller's PSW key.    * 00344800
*                                                                     * 00344900
*                                      DEFAULT: CALLERS_KEY           * 00345000
*                                                                     * 00345100
*                                                                     * 00345200
*                                                                     * 00345300
*                              [PAGEABLE=NO]                          * 00345400
*                                  Indicates that the BUFLIST buffers * 00345500
*                                  reside in non-pageable virtual     * 00345600
*                                  storage.                           * 00345700
*                                                                     * 00345800
*                                  This includes implicitly           * 00345900
*                                  non-pageable storage areas.  If    * 00346000
*                                  the virtual storage may            * 00346100
*                                  potentially become pageable, then  * 00346200
*                                  the invoker is responsible for     * 00346300
*                                  ensuring the virtual storage       * 00346400
*                                  remains non-pageable for the       * 00346500
*                                  duration of the request.           * 00346600
*                                                                     * 00346700
*                                  If MODE=ASYNCTOKEN is specified or * 00346800
*                                  MODE=SYNCTOKEN is specified and    * 00346900
*                                  the request does not complete      * 00347000
*                                  synchronously, then the storage    * 00347100
*                                  must remain non-pageable until     * 00347200
*                                  completion of the corresponding    * 00347300
*                                  IXLFCOMP request.  If              * 00347400
*                                  MODE=ASYNCEXIT is specified or     * 00347500
*                                  MODE=SYNCEXIT is specified and the * 00347600
*                                  request does not complete          * 00347700
*                                  synchronously, then the storage    * 00347800
*                                  must remain non-pageable until the * 00347900
*                                  completion exit is driven for the  * 00348000
*                                  request.  If MODE=ASYNCECB is      * 00348100
*                                  specified or MODE=SYNCECB is       * 00348200
*                                  specified and the request does not * 00348300
*                                  complete synchronously, then the   * 00348400
*                                  storage must remain non-pageable   * 00348500
*                                  until the specified ECB is posted  * 00348600
*                                  for the request.                   * 00348700
*                                                                     * 00348800
*                                                                     * 00348900
*                                                                     * 00349000
*                                                                     * 00349100
*                                                                     * 00349200
*                                                                     * 00349300
*                          [BUFALET=xbufalet|NO_BUFALET]]           * 00349400
*                              is the name (RS-type), or address in   * 00349500
*                              register (2)-(12), of an optional      * 00349600
*                              fullword input specifying the ALET     * 00349700
*                              value to be used in referencing all of * 00349800
*                              the buffers specified for BUFLIST      * 00349900
*                                                                     * 00350000
*                              DEFAULT: NO_BUFALET                    * 00350100
*                                                                     * 00350200
*                                                                     * 00350300
*                                                                     * 00350400
*                      [BUFADDRTYPE=REAL                              * 00350500
*                          Indicates that the buffer addresses        * 00350600
*                          specified in the BUFLIST list are real     * 00350700
*                          storage addresses.                         * 00350800
*                                                                     * 00350900
*                                                                     * 00351000
*                          [BUFADDRSIZE=31|64]]                     * 00351100
*                              is an optional keyword input that      * 00351200
*                              specifies whether a 31 or a 64 bit     * 00351300
*                              address is specified by a BUFLIST      * 00351400
*                              entry.                                 * 00351500
*                                                                     * 00351600
*                              DEFAULT: 31                            * 00351700
*                                                                     * 00351800
*                                                                     * 00351900
*                              [BUFADDRSIZE=31]                       * 00352000
*                                  Indicates that the BUFLIST address * 00352100
*                                  is 31 bits in size.                * 00352200
*                                                                     * 00352300
*                              [BUFADDRSIZE=64]]                      * 00352400
*                                  Indicates that the BUFLIST address * 00352500
*                                  is 64 bits in size.                * 00352600
*                                                                     * 00352700
*                                                                     * 00352800
*                                                                     * 00352900
*                                                                     * 00353000
*                                                                     * 00353100
*                                                                     * 00353200
*                                                                     * 00353300
*                                                                     * 00353400
*                                                                     * 00353500
*                                                                     * 00353600
*                  BUFNUM=xbufnum                                     * 00353700
*                      is the name (RS-type), or address in register  * 00353800
*                      (2)-(12), of a required byte input specifying  * 00353900
*                      the number of buffers defined in the BUFLIST   * 00354000
*                      list.                                          * 00354100
*                                                                     * 00354200
*                      BUFNUM values must be in the range of 1 to 16. * 00354300
*                                                                     * 00354400
*                                                                     * 00354500
*                                                                     * 00354600
*                                                                     * 00354700
*              BUFFER=[xbuffer]                                       * 00354800
*                  belongs to a set of mutually exclusive keys. It is * 00354900
*                  an output.  It is the name (RS-type), or address   * 00355000
*                  in register (2)-(12), of a virtual storage area to * 00355100
*                  receive output data from the request.  The BUFSIZE * 00355200
*                  keyword specifies the size of the buffer.          * 00355300
*                                                                     * 00355400
*                  For READ_LIST requests the length of the buffer    * 00355500
*                  must be a multiple of 4096 bytes between 4096 and  * 00355600
*                  65536 and the buffer must start on a 4096-byte     * 00355700
*                  (page) boundary.                                   * 00355800
*                                                                     * 00355900
*                  Upon successful completion of a READ_LIST request  * 00356000
*                  the BUFFER area contains, starting at offset zero  * 00356100
*                  in the first buffer, an array of elements each of  * 00356200
*                  which is constructed as follows (dependent on      * 00356300
*                  request options):                                  * 00356400
*                                                                     * 00356500
*                  When adjunct data is requested on a READ_LIST      * 00356600
*                  request the adjunct data for the first entry       * 00356700
*                  processed is returned in the storage area          * 00356800
*                  specified by ADJAREA.  The adjunct data for all    * 00356900
*                  other entries is returned in the BUFFER area.      * 00357000
*                  When list entry controls are requested the entry   * 00357100
*                  controls for the first entry processed is returned * 00357200
*                  in the answer area specified by ANSAREA.  The      * 00357300
*                  entry controls for all other entries is returned   * 00357400
*                  in the BUFFER area.                                * 00357500
*                                                                     * 00357600
*                                                                     * 00357700
*                  o   When TYPE=ENTDATA was specified:               * 00357800
*                                                                     * 00357900
*                      Entry data.                                    * 00358000
*                                                                     * 00358100
*                  o   When TYPE=ADJDATA was specified:               * 00358200
*                                                                     * 00358300
*                      Adunct data.                                   * 00358400
*                                                                     * 00358500
*                  o   When TYPE=ECONTROLS was specified:             * 00358600
*                                                                     * 00358700
*                      List entry controls.                           * 00358800
*                                                                     * 00358900
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00359000
*                                                                     * 00359100
*                      Entry data, followed by adjunct data.          * 00359200
*                                                                     * 00359300
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00359400
*                                                                     * 00359500
*                      List entry controls, followed by entry data.   * 00359600
*                                                                     * 00359700
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00359800
*                                                                     * 00359900
*                      List entry controls, followed by adjunct data. * 00360000
*                                                                     * 00360100
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00360200
*                      specified:                                     * 00360300
*                                                                     * 00360400
*                      List entry controls, followed by entry data,   * 00360500
*                      followed by adjunct data.                      * 00360600
*                                                                     * 00360700
*                                                                     * 00360800
*                                                                     * 00360900
*                  One array element is returned for each processed   * 00361000
*                  entry.  The number of elements returned in the     * 00361100
*                  BUFFER area is indicated in the answer area        * 00361200
*                  specified by ANSAREA.  An element length may be    * 00361300
*                  determined by considering the element make-up, the * 00361400
*                  structure element size, the number of elements in  * 00361500
*                  the entry, an adjunct data size of 64 bytes, and   * 00361600
*                  the length of list entry controls.  The length and * 00361700
*                  contents of list entry controls is defined by      * 00361800
*                  mapping macro IXLYLCTL.                            * 00361900
*                                                                     * 00362000
*                  BUFFER is mutually exclusive with BUFLIST.         * 00362100
*                                                                     * 00362200
*                                                                     * 00362300
*                  [PAGEABLE=YES|NO]                                * 00362400
*                      is an optional keyword input that specifies    * 00362500
*                      whether or not the storage area specified by   * 00362600
*                      BUFFER resides in pageable storage.            * 00362700
*                                                                     * 00362800
*                      DEFAULT: YES                                   * 00362900
*                                                                     * 00363000
*                                                                     * 00363100
*                      [PAGEABLE=YES                                  * 00363200
*                          Indicates that the BUFFER area resides in  * 00363300
*                          pageable virtual storage.                  * 00363400
*                                                                     * 00363500
*                          This includes disabled reference storage,  * 00363600
*                          and may include storage that has the       * 00363700
*                          potential to become pageable It does not   * 00363800
*                          include implicitly non-pageable storage    * 00363900
*                          (such as is obtained from non-pageable     * 00364000
*                          subpools).                                 * 00364100
*                                                                     * 00364200
*                                                                     * 00364300
*                                                                     * 00364400
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00364500
*                              is the name (RS-type), or address in   * 00364600
*                              register (2)-(12), of an optional 8    * 00364700
*                              bit input containing the storage key   * 00364800
*                              to be used when referencing the        * 00364900
*                              storage area specified by BUFFER.      * 00365000
*                                                                     * 00365100
*                              The high order nibble contains the     * 00365200
*                              storage key, the low order nibble is   * 00365300
*                              ignored.  For example, set 'kkkk' in   * 00365400
*                              the binary bit string 'kkkkxxxx'B to   * 00365500
*                              correspond to the desired storage key. * 00365600
*                                                                     * 00365700
*                              If BUFSTGKEY is not specified, then    * 00365800
*                              all references to the BUFFER buffer    * 00365900
*                              storage are performed using the        * 00366000
*                              caller's PSW key.                      * 00366100
*                                                                     * 00366200
*                              DEFAULT: CALLERS_KEY                   * 00366300
*                                                                     * 00366400
*                                                                     * 00366500
*                                                                     * 00366600
*                      [PAGEABLE=NO]                                  * 00366700
*                          Indicates that the BUFFER area resides in  * 00366800
*                          non-pageable virtual storage.              * 00366900
*                                                                     * 00367000
*                          This includes implicitly non-pageable      * 00367100
*                          storage areas.  If the virtual storage may * 00367200
*                          potentially become pageable, then the      * 00367300
*                          invoker is responsible for ensuring the    * 00367400
*                          virtual storage remains non-pageable for   * 00367500
*                          the duration of the request.               * 00367600
*                                                                     * 00367700
*                          If MODE=ASYNCTOKEN is specified or         * 00367800
*                          MODE=SYNCTOKEN is specified and the        * 00367900
*                          request does not complete synchronously,   * 00368000
*                          then the storage must remain non-pageable  * 00368100
*                          until completion of the corresponding      * 00368200
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00368300
*                          specified or MODE=SYNCEXIT is specified    * 00368400
*                          and the request does not complete          * 00368500
*                          synchronously, then the storage must       * 00368600
*                          remain non-pageable until the completion   * 00368700
*                          exit is driven for the request.  If        * 00368800
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00368900
*                          is specified and the request does not      * 00369000
*                          complete synchronously, then the storage   * 00369100
*                          must remain non-pageable until the         * 00369200
*                          specified ECB is posted for the request.   * 00369300
*                                                                     * 00369400
*                                                                     * 00369500
*                                                                     * 00369600
*                                                                     * 00369700
*                                                                     * 00369800
*                                                                     * 00369900
*                  BUFSIZE=xbufsize                                   * 00370000
*                      is the name (RS-type), or address in register  * 00370100
*                      (2)-(12), of a required fullword input         * 00370200
*                      specifying the length of the virtual storage   * 00370300
*                      area specified for BUFFER in bytes.            * 00370400
*                                                                     * 00370500
*                                                                     * 00370600
*                                                                     * 00370700
*                                                                     * 00370800
*                                                                     * 00370900
*                                                                     * 00371000
*              End of a set of mutually exclusive required keys.      * 00371100
*                                                                     * 00371200
*                                                                     * 00371300
*          REQUEST=DELETE_LIST                                        * 00371400
*              Delete List entries.  Requests that designated list    * 00371500
*              entries meeting the specified criteria be removed from * 00371600
*              the list on which they reside and returned to the pool * 00371700
*              of free entries for reuse.                             * 00371800
*                                                                     * 00371900
*              Processing begins with the entry located by the        * 00372000
*              LOCATOR indicator and proceeds sequentially along the  * 00372100
*              list in the direction specified by DIRECTION until the * 00372200
*              head or tail of the list is reached                    * 00372300
*                                                                     * 00372400
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00372500
*              AUTHCOMP causes list authority comparison for the      * 00372600
*              designated list to precede processing of any list      * 00372700
*              entries.  If the list authority verification fails,    * 00372800
*              the list authority, the list control information and   * 00372900
*              appropriate return and reason codes are provided.      * 00373000
*              Specifying LOCKINDEX in conjunction with LOCKOPER      * 00373100
*              causes lock comparison to precede processing of any    * 00373200
*              list entries.  LOCKINDEX may optionally be specified   * 00373300
*              to indicate the index of the serialized list lock to   * 00373400
*              be compared within the lock table for the list         * 00373500
*              structure.  If the lock comparison fails, the lock     * 00373600
*              table entry and appropriate return and reason codes    * 00373700
*              are provided.                                          * 00373800
*                                                                     * 00373900
*              Specifying LISTCOMPARE=YES in conjuction with LISTNUM  * 00374000
*              causes list number comparison for the designated       * 00374100
*              starting list entry to precede processing of any list  * 00374200
*              entries.  If the designated list entry exists, but the * 00374300
*              list number verification fails, the list entry         * 00374400
*              controls and appropriate return and reason codes are   * 00374500
*              provided.                                              * 00374600
*                                                                     * 00374700
*              Specifying VERSCOMPARE=YES in conjunction with         * 00374800
*              VERSCOMP may optionally be used to restrict processing * 00374900
*              to those entries with a version number matching that   * 00375000
*              specified by VERSCOMPTYPE.  Specifying KEYCOMPARE=YES  * 00375100
*              in conjunction with ENTRYKEY causes entry comparison   * 00375200
*              to be performed as specified by KEYREQTYPE.            * 00375300
*              Specifying SKEYCOMPARE=YES in conjunction with         * 00375400
*              SECONDARYKEY causes secondary key comparison to be     * 00375500
*              performed as specified by SKEYREQTYPE.                 * 00375600
*                                                                     * 00375700
*              DIRECTION may optionally be specified to indicate      * 00375800
*              direction of processing for traversing the list.       * 00375900
*                                                                     * 00376000
*              The absence of AUTHCOMPARE or LISTCOMPARE or           * 00376100
*              specifying AUTHCOMPARE=NO or LISTCOMPARE=NO indicates  * 00376200
*              no list authority or list number comparisons are to be * 00376300
*              performed before processing any list entries.  The     * 00376400
*              absence of LOCKINDEX indicates that no lock comparison * 00376500
*              is to be performed before selecting entries to be      * 00376600
*              processed.  The absence of VERSCOMPARE, KEYCOMPARE, or * 00376700
*              SKEYCOMPARE, or specifying VERSCOMPARE=NO,             * 00376800
*              KEYCOMPARE=NO or SKEYCOMPARE=NO indicates no version   * 00376900
*              number, entry key value, or secondary key value        * 00377000
*              comparisons are performed when selecting entries to be * 00377100
*              processed.                                             * 00377200
*                                                                     * 00377300
*              In order for any list entries to be processed, the     * 00377400
*              list number comparison, the list authority comparison  * 00377500
*              and the lock operation if requested, must succeed.  In * 00377600
*              order for a particular list entry to be deleted, the   * 00377700
*              version number comparison, and the key comparison,     * 00377800
*              when requested, must succeed otherwise no processing   * 00377900
*              is performed for the current entry and processing      * 00378000
*              continues with the next entry to be considered.        * 00378100
*                                                                     * 00378200
*              When the request completes successfully the number of  * 00378300
*              entries deleted for this request is returned in the    * 00378400
*              answer area specified by ANSAREA.  A DELETE_LIST       * 00378500
*              request may complete prematurely if the coupling       * 00378600
*              facility model dependent timeout criteria is exceeded. * 00378700
*              In this event appropriate return and reason codes, the * 00378800
*              number of entries which have been deleted are          * 00378900
*              provided.  The list entry controls for the next        * 00379000
*              appropriate entry in the list sequence to be processed * 00379100
*              is returned in ANSAREA.  These list entry controls may * 00379200
*              be specified as input on a subsequent DELETE_LIST      * 00379300
*              request to resume processing with the appropriate list * 00379400
*              entry.  Note, however, that the disposition of this    * 00379500
*              list entry may have changed after completion of the    * 00379600
*              first DELETE_LIST request and before the invocation of * 00379700
*              the resuming DELETE_LIST request. For example, the     * 00379800
*              list entry may have been deleted or moved to a         * 00379900
*              different list in the structure.                       * 00380000
*                                                                     * 00380100
*              Resumed requests are processed identically to          * 00380200
*              non-resumed requests, and must meet the same interface * 00380300
*              requirements as non-resumed requests.  Resumed request * 00380400
*              may in turn experience premature completion.           * 00380500
*                                                                     * 00380600
*              DELETE_LIST is only valid when the structure is        * 00380700
*              allocated in a CFLEVEL=9 or higher CF.                 * 00380800
*                                                                     * 00380900
*                                                                     * 00381000
*              [DIRECTION=HEADTOTAIL|TAILTOHEAD]                    * 00381100
*                  is an optional keyword input that indicates the    * 00381200
*                  direction of processing for traversing the given   * 00381300
*                  list.                                              * 00381400
*                  DEFAULT: HEADTOTAIL                                * 00381500
*                                                                     * 00381600
*                                                                     * 00381700
*                  DIRECTION=HEADTOTAIL                               * 00381800
*                      Indicates that processing should begin at the  * 00381900
*                      designated entry and proceed toward the tail   * 00382000
*                      of the list.                                   * 00382100
*                                                                     * 00382200
*                  DIRECTION=TAILTOHEAD                               * 00382300
*                      Indicates that processing should begin at the  * 00382400
*                      designated entry and proceed toward the head   * 00382500
*                      of the list.                                   * 00382600
*                      DEFAULT: HeadToTail                            * 00382700
*                                                                     * 00382800
*                                                                     * 00382900
*                                                                     * 00383000
*                                                                     * 00383100
*                                                                     * 00383200
*                                                                     * 00383300
*              LOCATOR=CURSOR|ENTRYID|ENTRYNAME|UNKEYPOS|KEYPOS     * 00383400
*                  is a required keyword input that specifies the     * 00383500
*                  location mechanism to be used to locate the first  * 00383600
*                  list entry to be processed.                        * 00383700
*                                                                     * 00383800
*                                                                     * 00383900
*                  LOCATOR=CURSOR                                     * 00384000
*                      Indicates that the list cursor should be used  * 00384100
*                      to locate the first list entry for the         * 00384200
*                      request.                                       * 00384300
*                                                                     * 00384400
*                                                                     * 00384500
*                      LISTNUM=xlistnum                               * 00384600
*                          is the name (RS-type), or address in       * 00384700
*                          register (2)-(12), of a required fullword  * 00384800
*                          input designates the number of the list on * 00384900
*                          which the starting list entry resides.     * 00385000
*                                                                     * 00385100
*                                                                     * 00385200
*                                                                     * 00385300
*                                                                     * 00385400
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00385500
*                          is an optional keyword input that          * 00385600
*                          indicates which key ordering               * 00385700
*                          (Entry/Secondary) is to be used to scan    * 00385800
*                          for entries on the list.                   * 00385900
*                          DEFAULT: ENTRY                             * 00386000
*                                                                     * 00386100
*                                                                     * 00386200
*                          KEYSCANTYPE=ENTRY                          * 00386300
*                              indicates that entry key ordering will * 00386400
*                              be used for scanning the list.         * 00386500
*                                                                     * 00386600
*                          KEYSCANTYPE=SECONDARY                      * 00386700
*                              indicates that secondary key ordering  * 00386800
*                              will be used for scanning the list.    * 00386900
*                                                                     * 00387000
*                                                                     * 00387100
*                                                                     * 00387200
*                                                                     * 00387300
*                                                                     * 00387400
*                                                                     * 00387500
*                      [AUTHCOMPARE=NO|YES                          * 00387600
*                          is an optional keyword input which         * 00387700
*                          determines whether the list authority      * 00387800
*                          comparison is to be used to determine if   * 00387900
*                          entries on the list should be processed.   * 00388000
*                          DEFAULT: NO                                * 00388100
*                                                                     * 00388200
*                                                                     * 00388300
*                          [AUTHCOMPARE=NO]                           * 00388400
*                              indicates no list authority comparison * 00388500
*                              is to be performed before processing   * 00388600
*                              any entries on the list.               * 00388700
*                                                                     * 00388800
*                          [AUTHCOMPARE=YES                           * 00388900
*                              indicates that list authority          * 00389000
*                              comparison should precede processing   * 00389100
*                              of any entries on the list.            * 00389200
*                                                                     * 00389300
*                                                                     * 00389400
*                              AUTHCOMP=xauthcomp                     * 00389500
*                                  is the name (RS-type), or address  * 00389600
*                                  in register (2)-(12), of a         * 00389700
*                                  required 16 character input which  * 00389800
*                                  specifies a value to be compared   * 00389900
*                                  to the list authority value for    * 00390000
*                                  the designated list.  If the       * 00390100
*                                  condition specified by             * 00390200
*                                  AUTHCOMPTYPE is not met then the   * 00390300
*                                  IXLLSTM operation is terminated,   * 00390400
*                                  and appropriate return and reason  * 00390500
*                                  codes are provided to the invoker. * 00390600
*                                                                     * 00390700
*                                                                     * 00390800
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00390900
*                                      ]                              * 00391000
*                                      is an optional keyword input   * 00391100
*                                      which specifies how the list   * 00391200
*                                      authority comparison is to be  * 00391300
*                                      performed.                     * 00391400
*                                                                     * 00391500
*                                      DEFAULT: EQUAL                 * 00391600
*                                                                     * 00391700
*                                                                     * 00391800
*                                      AUTHCOMPTYPE=EQUAL             * 00391900
*                                          The list authority for the * 00392000
*                                          list specified by LISTNUM  * 00392100
*                                          must be equal to the value * 00392200
*                                          specified for AUTHCOMP.    * 00392300
*                                                                     * 00392400
*                                                                     * 00392500
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00392600
*                                          The list authority for the * 00392700
*                                          list specified by LISTNUM  * 00392800
*                                          must be less than or equal * 00392900
*                                          to the value specified for * 00393000
*                                          AUTHCOMP.                  * 00393100
*                                                                     * 00393200
*                                                                     * 00393300
*                                                                     * 00393400
*                                                                     * 00393500
*                                                                     * 00393600
*                                                                     * 00393700
*                                                                     * 00393800
*                                                                     * 00393900
*                                                                     * 00394000
*                                                                     * 00394100
*                                                                     * 00394200
*                                                                     * 00394300
*                      [KEYCOMPARE=NO|YES                           * 00394400
*                          is an optional keyword input that          * 00394500
*                          determines whether the key value of an     * 00394600
*                          existing keyed list entry is to be         * 00394700
*                          compared to determine if this entry should * 00394800
*                          be selected for processing.                * 00394900
*                          DEFAULT: NO                                * 00395000
*                                                                     * 00395100
*                                                                     * 00395200
*                          [KEYCOMPARE=NO]                            * 00395300
*                              Indicates that no entry key comparison * 00395400
*                              will be performed to determine if this * 00395500
*                              entry should be processed.             * 00395600
*                                                                     * 00395700
*                          [KEYCOMPARE=YES                            * 00395800
*                              Indicates that entry key comparison    * 00395900
*                              will be performed based on the         * 00396000
*                              KEYREQTYPE specified to determine if   * 00396100
*                              this entry is selectable for           * 00396200
*                              processing.                            * 00396300
*                                                                     * 00396400
*                              KEYCOMPARE=YES is ignored if the       * 00396500
*                              target structure does not support      * 00396600
*                              keyed entries.                         * 00396700
*                                                                     * 00396800
*                                                                     * 00396900
*                              ENTRYKEY=xentrykey                     * 00397000
*                                  is the name (RS-type), or address  * 00397100
*                                  in register (2)-(12), of a         * 00397200
*                                  required 16 character input that   * 00397300
*                                  specifies the key to be used to    * 00397400
*                                  compare to the entry key of the    * 00397500
*                                  list entry.  If the condition      * 00397600
*                                  specified by KEYREQTYPE is not met * 00397700
*                                  for the current list entry then no * 00397800
*                                  processing is performed for the    * 00397900
*                                  current entry, and processing      * 00398000
*                                  continues with the next entry to   * 00398100
*                                  be considered.                     * 00398200
*                                                                     * 00398300
*                                                                     * 00398400
*                                                                     * 00398500
*                                                                     * 00398600
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00398700
*                                  OREQUAL|RANGE]]                   * 00398800
*                                  is an optional keyword input which * 00398900
*                                  specifies how entry key comparison * 00399000
*                                  is to be performed on an existing  * 00399100
*                                  keyed list entry to determine if   * 00399200
*                                  the entry is selectable for        * 00399300
*                                  processing.                        * 00399400
*                                  DEFAULT: EQUAL                     * 00399500
*                                                                     * 00399600
*                                                                     * 00399700
*                                  [KEYREQTYPE=EQUAL]                 * 00399800
*                                      a list entry must have an      * 00399900
*                                      entry key equal to the value   * 00400000
*                                      specified by ENTRYKEY.         * 00400100
*                                                                     * 00400200
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00400300
*                                      a list entry must have an      * 00400400
*                                      entry key less than or equal   * 00400500
*                                      to the value specified by      * 00400600
*                                      ENTRYKEY.                      * 00400700
*                                                                     * 00400800
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00400900
*                                      a list entry must have an      * 00401000
*                                      entry key greater than or      * 00401100
*                                      equal to the value specified   * 00401200
*                                      by ENTRYKEY.                   * 00401300
*                                                                     * 00401400
*                                  [KEYREQTYPE=RANGE                  * 00401500
*                                      a list entry must have an      * 00401600
*                                      entry key within a specified   * 00401700
*                                      range of values. The ENTRYKEY  * 00401800
*                                      specified will be used as the  * 00401900
*                                      beginning of the range of key  * 00402000
*                                      values that will be compared   * 00402100
*                                      with the existing entry key.   * 00402200
*                                      KEYRANGEEND will be used as    * 00402300
*                                      the ending value.  A list      * 00402400
*                                      entry must have an entry key   * 00402500
*                                      value within the specified     * 00402600
*                                      entry key range, inclusive,    * 00402700
*                                      for it to be selectable.       * 00402800
*                                                                     * 00402900
*                                                                     * 00403000
*                                      KEYRANGEEND=xkeyrangeend]]     * 00403100
*                                          is the name (RS-type), or  * 00403200
*                                          address in register        * 00403300
*                                          (2)-(12), of a required 16 * 00403400
*                                          character input specifies  * 00403500
*                                          the ending value for the   * 00403600
*                                          range of keys to be        * 00403700
*                                          compared to the entry key  * 00403800
*                                          of the designated list     * 00403900
*                                          entry.                     * 00404000
*                                                                     * 00404100
*                                                                     * 00404200
*                                                                     * 00404300
*                                                                     * 00404400
*                                                                     * 00404500
*                                                                     * 00404600
*                                                                     * 00404700
*                                                                     * 00404800
*                                                                     * 00404900
*                                                                     * 00405000
*                                                                     * 00405100
*                                                                     * 00405200
*                      [SKEYCOMPARE=NO|YES                          * 00405300
*                          is an optional keyword input that          * 00405400
*                          determines whether the secondary key value * 00405500
*                          of an existing list entry is to be         * 00405600
*                          compared to determine if this entry should * 00405700
*                          be selected for processing.                * 00405800
*                          DEFAULT: NO                                * 00405900
*                                                                     * 00406000
*                                                                     * 00406100
*                          [SKEYCOMPARE=NO]                           * 00406200
*                              Indicates that no secondary key        * 00406300
*                              comparison will be performed to        * 00406400
*                              determine if this entry should be      * 00406500
*                              processed.                             * 00406600
*                                                                     * 00406700
*                          [SKEYCOMPARE=YES                           * 00406800
*                              Indicates that secondary key           * 00406900
*                              comparison will be performed based on  * 00407000
*                              the SKEYREQTYPE specified to determine * 00407100
*                              if this entry is selectable for        * 00407200
*                              processing.                            * 00407300
*                                                                     * 00407400
*                              SKEYCOMPARE=YES is ignored if the      * 00407500
*                              target structure was not allocated     * 00407600
*                              with secondary keys.                   * 00407700
*                                                                     * 00407800
*                                                                     * 00407900
*                              SECONDARYKEY=xsecondarykey             * 00408000
*                                  is the name (RS-type), or address  * 00408100
*                                  in register (2)-(12), of a         * 00408200
*                                  required 32 character input that   * 00408300
*                                  specifies the secondary key value  * 00408400
*                                  to be used to compare to the       * 00408500
*                                  secondary key of the list entry.   * 00408600
*                                  If the condition specified by      * 00408700
*                                  SKEYREQTYPE is not met for the     * 00408800
*                                  current list entry then no         * 00408900
*                                  processing is performed for the    * 00409000
*                                  current entry, and processing      * 00409100
*                                  continues with the next entry to   * 00409200
*                                  be considered.                     * 00409300
*                                                                     * 00409400
*                                                                     * 00409500
*                                                                     * 00409600
*                                                                     * 00409700
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00409800
*                                  ROREQUAL|RANGE]]                  * 00409900
*                                  is an optional keyword input which * 00410000
*                                  specifies how an existing keyed    * 00410100
*                                  list entry with secondary keys is  * 00410200
*                                  located and/or how secondary key   * 00410300
*                                  comparison is to be performed on   * 00410400
*                                  an existing keyed list entry to    * 00410500
*                                  determine if the entry is          * 00410600
*                                  selectable for processing.         * 00410700
*                                  DEFAULT: EQUAL                     * 00410800
*                                                                     * 00410900
*                                                                     * 00411000
*                                  [SKEYREQTYPE=EQUAL]                * 00411100
*                                      a list entry must have a       * 00411200
*                                      secondary key equal to the     * 00411300
*                                      value specified by             * 00411400
*                                      SECONDARYKEY.                  * 00411500
*                                                                     * 00411600
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00411700
*                                      a list entry must have a       * 00411800
*                                      secondary key less than or     * 00411900
*                                      equal to the value specified   * 00412000
*                                      by SECONDARYKEY.               * 00412100
*                                                                     * 00412200
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00412300
*                                      a list entry must have a       * 00412400
*                                      secondary key greater than or  * 00412500
*                                      equal to the value specified   * 00412600
*                                      by SECONDARYKEY.               * 00412700
*                                                                     * 00412800
*                                  [SKEYREQTYPE=RANGE                 * 00412900
*                                      a list entry must have a       * 00413000
*                                      secondary key within a         * 00413100
*                                      specified range of values. The * 00413200
*                                      SECONDARYKEY specified will be * 00413300
*                                      used as the beginning of the   * 00413400
*                                      range of secondary key values  * 00413500
*                                      that will be compared with the * 00413600
*                                      existing secondary key.        * 00413700
*                                      SKEYRANGEEND will be used as   * 00413800
*                                      the ending value.  A list      * 00413900
*                                      entry must have a secondary    * 00414000
*                                      key value within the specified * 00414100
*                                      secondary key range,           * 00414200
*                                      inclusive, for it to be        * 00414300
*                                      selectable.                    * 00414400
*                                                                     * 00414500
*                                                                     * 00414600
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00414700
*                                                                     * 00414800
*                                          is the name (RS-type), or  * 00414900
*                                          address in register        * 00415000
*                                          (2)-(12), of a required 32 * 00415100
*                                          character input which      * 00415200
*                                          specifies the ending value * 00415300
*                                          for the range of secondary * 00415400
*                                          keys to be compared to the * 00415500
*                                          secondary key of the list  * 00415600
*                                          entry.                     * 00415700
*                                                                     * 00415800
*                                                                     * 00415900
*                                                                     * 00416000
*                                                                     * 00416100
*                                                                     * 00416200
*                                                                     * 00416300
*                                                                     * 00416400
*                                                                     * 00416500
*                                                                     * 00416600
*                                                                     * 00416700
*                                                                     * 00416800
*                  LOCATOR=ENTRYID                                    * 00416900
*                      Indicates that the EntryID should be used to   * 00417000
*                      locate the entry to be used as the starting    * 00417100
*                      entry for the request.  EntryIDs may be either * 00417200
*                      assigned or provided by the user.  User        * 00417300
*                      provided EntryIDs must be specified if         * 00417400
*                      ENTRYIDTYPE=USER was specified on the IXLCONN  * 00417500
*                      request.                                       * 00417600
*                                                                     * 00417700
*                                                                     * 00417800
*                      ENTRYID=xentryid                               * 00417900
*                          is the name (RS-type), or address in       * 00418000
*                          register (2)-(12), of a required 12        * 00418100
*                          character input specifying the list entry  * 00418200
*                          id of the entry to be used as the starting * 00418300
*                          point of the request.  If the list         * 00418400
*                          comparison fails then the IXLLSTM          * 00418500
*                          operation is terminated, and the list      * 00418600
*                          entry controls along with the appropriate  * 00418700
*                          return and reason codes are provided to    * 00418800
*                          the invoker.                               * 00418900
*                                                                     * 00419000
*                                                                     * 00419100
*                                                                     * 00419200
*                                                                     * 00419300
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00419400
*                          is an optional keyword input that          * 00419500
*                          indicates which key ordering               * 00419600
*                          (Entry/Secondary) is to be used to scan    * 00419700
*                          for entries on the list.                   * 00419800
*                          DEFAULT: ENTRY                             * 00419900
*                                                                     * 00420000
*                                                                     * 00420100
*                          KEYSCANTYPE=ENTRY                          * 00420200
*                              indicates that entry key ordering will * 00420300
*                              be used for scanning the list.         * 00420400
*                                                                     * 00420500
*                          KEYSCANTYPE=SECONDARY                      * 00420600
*                              indicates that secondary key ordering  * 00420700
*                              will be used for scanning the list.    * 00420800
*                                                                     * 00420900
*                                                                     * 00421000
*                                                                     * 00421100
*                                                                     * 00421200
*                                                                     * 00421300
*                                                                     * 00421400
*                      [LISTCOMPARE=NO|YES                          * 00421500
*                          is an optional keyword input which         * 00421600
*                          determines if the list number is to be     * 00421700
*                          compared to determine if entries should be * 00421800
*                          processed.                                 * 00421900
*                          DEFAULT: NO                                * 00422000
*                                                                     * 00422100
*                                                                     * 00422200
*                          [LISTCOMPARE=NO]                           * 00422300
*                              indicates no list number comparison    * 00422400
*                              should precede processing of any list  * 00422500
*                              entries.                               * 00422600
*                                                                     * 00422700
*                          [LISTCOMPARE=YES                           * 00422800
*                              indicates that list number comparison  * 00422900
*                              should precede processing of any list  * 00423000
*                              entries.                               * 00423100
*                                                                     * 00423200
*                                                                     * 00423300
*                              LISTNUM=xlistnum                       * 00423400
*                                  is the name (RS-type), or address  * 00423500
*                                  in register (2)-(12), of a         * 00423600
*                                  required fullword input designates * 00423700
*                                  the number of the list on which    * 00423800
*                                  the entries to be processed        * 00423900
*                                  reside. If the list comparison     * 00424000
*                                  fails then the IXLLSTM operation   * 00424100
*                                  is terminated, and the list entry  * 00424200
*                                  controls along with the            * 00424300
*                                  appropriate return and reason      * 00424400
*                                  codes are provided to the invoker. * 00424500
*                                                                     * 00424600
*                                                                     * 00424700
*                                                                     * 00424800
*                                                                     * 00424900
*                              [AUTHCOMPARE=NO|YES                  * 00425000
*                                  is an optional keyword input which * 00425100
*                                  determines whether the list        * 00425200
*                                  authority comparison is to be used * 00425300
*                                  to determine if entries on the     * 00425400
*                                  list should be processed.          * 00425500
*                                  DEFAULT: NO                        * 00425600
*                                                                     * 00425700
*                                                                     * 00425800
*                                  [AUTHCOMPARE=NO]                   * 00425900
*                                      indicates no list authority    * 00426000
*                                      comparison is to be performed  * 00426100
*                                      before processing any entries  * 00426200
*                                      on the list.                   * 00426300
*                                                                     * 00426400
*                                  [AUTHCOMPARE=YES                   * 00426500
*                                      indicates that list authority  * 00426600
*                                      comparison should precede      * 00426700
*                                      processing of any entries on   * 00426800
*                                      the list.                      * 00426900
*                                                                     * 00427000
*                                                                     * 00427100
*                                      AUTHCOMP=xauthcomp             * 00427200
*                                          is the name (RS-type), or  * 00427300
*                                          address in register        * 00427400
*                                          (2)-(12), of a required 16 * 00427500
*                                          character input which      * 00427600
*                                          specifies a value to be    * 00427700
*                                          compared to the list       * 00427800
*                                          authority value for the    * 00427900
*                                          designated list.  If the   * 00428000
*                                          condition specified by     * 00428100
*                                          AUTHCOMPTYPE is not met    * 00428200
*                                          then the IXLLSTM operation * 00428300
*                                          is terminated with no      * 00428400
*                                          resultant change to the    * 00428500
*                                          structure, and appropriate * 00428600
*                                          return and reason codes    * 00428700
*                                          are provided to the        * 00428800
*                                          invoker.                   * 00428900
*                                                                     * 00429000
*                                                                     * 00429100
*                                          [AUTHCOMPTYPE=EQUAL|LESSO * 00429200
*                                              REQUAL]]]             * 00429300
*                                              is an optional keyword * 00429400
*                                              input which specifies  * 00429500
*                                              how the list authority * 00429600
*                                              comparison is to be    * 00429700
*                                              performed.             * 00429800
*                                                                     * 00429900
*                                              DEFAULT: EQUAL         * 00430000
*                                                                     * 00430100
*                                                                     * 00430200
*                                              AUTHCOMPTYPE=EQUAL     * 00430300
*                                                  The list authority * 00430400
*                                                  for the list       * 00430500
*                                                  specified by       * 00430600
*                                                  LISTNUM must be    * 00430700
*                                                  equal to the value * 00430800
*                                                  specified for      * 00430900
*                                                  AUTHCOMP.          * 00431000
*                                                                     * 00431100
*                                                                     * 00431200
*                                              AUTHCOMPTYPE=LESSOREQU * 00431300
*                                                  AL                 * 00431400
*                                                  The list authority * 00431500
*                                                  for the list       * 00431600
*                                                  specified by       * 00431700
*                                                  LISTNUM must be    * 00431800
*                                                  less than or equal * 00431900
*                                                  to the value       * 00432000
*                                                  specified for      * 00432100
*                                                  AUTHCOMP.          * 00432200
*                                                                     * 00432300
*                                                                     * 00432400
*                                                                     * 00432500
*                                                                     * 00432600
*                                                                     * 00432700
*                                                                     * 00432800
*                                                                     * 00432900
*                                                                     * 00433000
*                                                                     * 00433100
*                                                                     * 00433200
*                                                                     * 00433300
*                                                                     * 00433400
*                                                                     * 00433500
*                                                                     * 00433600
*                                                                     * 00433700
*                                                                     * 00433800
*                      [KEYCOMPARE=NO|YES                           * 00433900
*                          is an optional keyword input that          * 00434000
*                          determines whether the key value of an     * 00434100
*                          existing keyed list entry is to be         * 00434200
*                          compared to determine if this entry should * 00434300
*                          be selected for processing.                * 00434400
*                          DEFAULT: NO                                * 00434500
*                                                                     * 00434600
*                                                                     * 00434700
*                          [KEYCOMPARE=NO]                            * 00434800
*                              Indicates that no entry key comparison * 00434900
*                              will be performed to determine if this * 00435000
*                              entry should be processed.             * 00435100
*                                                                     * 00435200
*                          [KEYCOMPARE=YES                            * 00435300
*                              Indicates that entry key comparison    * 00435400
*                              will be performed based on the         * 00435500
*                              KEYREQTYPE specified to determine if   * 00435600
*                              this entry is selectable for           * 00435700
*                              processing.                            * 00435800
*                                                                     * 00435900
*                              KEYCOMPARE=YES is ignored if the       * 00436000
*                              target structure does not support      * 00436100
*                              keyed entries.                         * 00436200
*                                                                     * 00436300
*                                                                     * 00436400
*                              ENTRYKEY=xentrykey                     * 00436500
*                                  is the name (RS-type), or address  * 00436600
*                                  in register (2)-(12), of a         * 00436700
*                                  required 16 character input that   * 00436800
*                                  specifies the key to be used to    * 00436900
*                                  compare to the entry key of the    * 00437000
*                                  list entry.  If the condition      * 00437100
*                                  specified by KEYREQTYPE is not met * 00437200
*                                  for the current list entry then no * 00437300
*                                  processing is performed for the    * 00437400
*                                  current entry, and processing      * 00437500
*                                  continues with the next entry to   * 00437600
*                                  be considered.                     * 00437700
*                                                                     * 00437800
*                                                                     * 00437900
*                                                                     * 00438000
*                                                                     * 00438100
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00438200
*                                  OREQUAL|RANGE]]                   * 00438300
*                                  is an optional keyword input which * 00438400
*                                  specifies how entry key comparison * 00438500
*                                  is to be performed on an existing  * 00438600
*                                  keyed list entry to determine if   * 00438700
*                                  the entry is selectable for        * 00438800
*                                  processing.                        * 00438900
*                                  DEFAULT: EQUAL                     * 00439000
*                                                                     * 00439100
*                                                                     * 00439200
*                                  [KEYREQTYPE=EQUAL]                 * 00439300
*                                      a list entry must have an      * 00439400
*                                      entry key equal to the value   * 00439500
*                                      specified by ENTRYKEY.         * 00439600
*                                                                     * 00439700
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00439800
*                                      a list entry must have an      * 00439900
*                                      entry key less than or equal   * 00440000
*                                      to the value specified by      * 00440100
*                                      ENTRYKEY.                      * 00440200
*                                                                     * 00440300
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00440400
*                                      a list entry must have an      * 00440500
*                                      entry key greater than or      * 00440600
*                                      equal to the value specified   * 00440700
*                                      by ENTRYKEY.                   * 00440800
*                                                                     * 00440900
*                                  [KEYREQTYPE=RANGE                  * 00441000
*                                      a list entry must have an      * 00441100
*                                      entry key within a specified   * 00441200
*                                      range of values. The ENTRYKEY  * 00441300
*                                      specified will be used as the  * 00441400
*                                      beginning of the range of key  * 00441500
*                                      values that will be compared   * 00441600
*                                      with the existing entry key.   * 00441700
*                                      KEYRANGEEND will be used as    * 00441800
*                                      the ending value.  A list      * 00441900
*                                      entry must have an entry key   * 00442000
*                                      value within the specified     * 00442100
*                                      entry key range, inclusive,    * 00442200
*                                      for it to be selectable.       * 00442300
*                                                                     * 00442400
*                                                                     * 00442500
*                                      KEYRANGEEND=xkeyrangeend]]     * 00442600
*                                          is the name (RS-type), or  * 00442700
*                                          address in register        * 00442800
*                                          (2)-(12), of a required 16 * 00442900
*                                          character input specifies  * 00443000
*                                          the ending value for the   * 00443100
*                                          range of keys to be        * 00443200
*                                          compared to the entry key  * 00443300
*                                          of the list entry.         * 00443400
*                                                                     * 00443500
*                                                                     * 00443600
*                                                                     * 00443700
*                                                                     * 00443800
*                                                                     * 00443900
*                                                                     * 00444000
*                                                                     * 00444100
*                                                                     * 00444200
*                                                                     * 00444300
*                                                                     * 00444400
*                                                                     * 00444500
*                                                                     * 00444600
*                      [SKEYCOMPARE=NO|YES                          * 00444700
*                          is an optional keyword input that          * 00444800
*                          determines whether the secondary key value * 00444900
*                          of an existing keyed list entry is to be   * 00445000
*                          compared to determine if this entry should * 00445100
*                          be selected for processing.                * 00445200
*                          DEFAULT: NO                                * 00445300
*                                                                     * 00445400
*                                                                     * 00445500
*                          [SKEYCOMPARE=NO]                           * 00445600
*                              Indicates that no secondary key        * 00445700
*                              comparison will be performed to        * 00445800
*                              determine if this entry should be      * 00445900
*                              processed.                             * 00446000
*                                                                     * 00446100
*                          [SKEYCOMPARE=YES                           * 00446200
*                              Indicates that secondary key           * 00446300
*                              comparison will be performed based on  * 00446400
*                              the SKEYREQTYPE specified to determine * 00446500
*                              if this entry is selectable for        * 00446600
*                              processing.                            * 00446700
*                                                                     * 00446800
*                              SKEYCOMPARE=YES is ignored if the      * 00446900
*                              target structure was not allocated     * 00447000
*                              with secondary keys.                   * 00447100
*                                                                     * 00447200
*                                                                     * 00447300
*                              SECONDARYKEY=xsecondarykey             * 00447400
*                                  is the name (RS-type), or address  * 00447500
*                                  in register (2)-(12), of a         * 00447600
*                                  required 32 character input that   * 00447700
*                                  specifies the secondary key to be  * 00447800
*                                  used to compare to the secondary   * 00447900
*                                  key.  If the condition specified   * 00448000
*                                  by SKEYREQTYPE is not met for the  * 00448100
*                                  current list entry then no         * 00448200
*                                  processing is performed for the    * 00448300
*                                  current entry, and processing      * 00448400
*                                  continues with the next entry to   * 00448500
*                                  be considered.                     * 00448600
*                                                                     * 00448700
*                                                                     * 00448800
*                                                                     * 00448900
*                                                                     * 00449000
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00449100
*                                  ROREQUAL|RANGE]]                  * 00449200
*                                  is an optional keyword input which * 00449300
*                                  specifies how secondary key        * 00449400
*                                  comparison is to be performed on   * 00449500
*                                  an existing keyed list entry to    * 00449600
*                                  determine if the entry is          * 00449700
*                                  selectable for processing.         * 00449800
*                                  DEFAULT: EQUAL                     * 00449900
*                                                                     * 00450000
*                                                                     * 00450100
*                                  [SKEYREQTYPE=EQUAL]                * 00450200
*                                      a list entry must have a       * 00450300
*                                      secondary key equal to the     * 00450400
*                                      value specified by             * 00450500
*                                      SECONDARYKEY.                  * 00450600
*                                                                     * 00450700
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00450800
*                                      a list entry must have a       * 00450900
*                                      secondary key less than or     * 00451000
*                                      equal to the value specified   * 00451100
*                                      by SECONDARYKEY.               * 00451200
*                                                                     * 00451300
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00451400
*                                      a list entry must have a       * 00451500
*                                      secondary key greater than or  * 00451600
*                                      equal to the value specified   * 00451700
*                                      by SECONDARYKEY.               * 00451800
*                                                                     * 00451900
*                                  [SKEYREQTYPE=RANGE                 * 00452000
*                                      a list entry must have a       * 00452100
*                                      secondary key within a         * 00452200
*                                      specified range of values. The * 00452300
*                                      SECONDARYKEY specified will be * 00452400
*                                      used as the beginning of the   * 00452500
*                                      range of secondary key values  * 00452600
*                                      that will be compared with the * 00452700
*                                      existing secondary key.        * 00452800
*                                      SKEYRANGEEND will be used as   * 00452900
*                                      the ending value.  A list      * 00453000
*                                      entry must have a secondary    * 00453100
*                                      key value within the specified * 00453200
*                                      secondary key range,           * 00453300
*                                      inclusive, for it to be        * 00453400
*                                      selectable.                    * 00453500
*                                                                     * 00453600
*                                                                     * 00453700
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00453800
*                                                                     * 00453900
*                                          is the name (RS-type), or  * 00454000
*                                          address in register        * 00454100
*                                          (2)-(12), of a required 32 * 00454200
*                                          character input which      * 00454300
*                                          specifies the ending value * 00454400
*                                          for the range of secondary * 00454500
*                                          keys to be compared to the * 00454600
*                                          secondary key of the list  * 00454700
*                                          entry.                     * 00454800
*                                                                     * 00454900
*                                                                     * 00455000
*                                                                     * 00455100
*                                                                     * 00455200
*                                                                     * 00455300
*                                                                     * 00455400
*                                                                     * 00455500
*                                                                     * 00455600
*                                                                     * 00455700
*                                                                     * 00455800
*                                                                     * 00455900
*                  LOCATOR=ENTRYNAME                                  * 00456000
*                      Indicates that the entry name should be used   * 00456100
*                      to designate the entry yo be used as the       * 00456200
*                      starting point of the request.  ENTRYNAME may  * 00456300
*                      only be specified for structures that support  * 00456400
*                      named entries.                                 * 00456500
*                                                                     * 00456600
*                                                                     * 00456700
*                      ENTRYNAME=xentryname                           * 00456800
*                          is the name (RS-type), or address in       * 00456900
*                          register (2)-(12), of a required 16        * 00457000
*                          character input specifying the list entry  * 00457100
*                          name of the entry to be used as the        * 00457200
*                          starting entry for the request.            * 00457300
*                                                                     * 00457400
*                                                                     * 00457500
*                                                                     * 00457600
*                                                                     * 00457700
*                      [LISTCOMPARE=NO|YES                          * 00457800
*                          is an optional keyword input which         * 00457900
*                          determines if the list number is to be     * 00458000
*                          compared to determine if entries should be * 00458100
*                          processed.                                 * 00458200
*                          DEFAULT: NO                                * 00458300
*                                                                     * 00458400
*                                                                     * 00458500
*                          [LISTCOMPARE=NO]                           * 00458600
*                              indicates no list number criteria is   * 00458700
*                              to be applied when selecting entries   * 00458800
*                              to be processed.                       * 00458900
*                                                                     * 00459000
*                          [LISTCOMPARE=YES                           * 00459100
*                              indicates that list number comparison  * 00459200
*                              should precede processing of any list  * 00459300
*                              entries.                               * 00459400
*                                                                     * 00459500
*                                                                     * 00459600
*                              LISTNUM=xlistnum                       * 00459700
*                                  is the name (RS-type), or address  * 00459800
*                                  in register (2)-(12), of a         * 00459900
*                                  required fullword input that       * 00460000
*                                  designates the number of the list  * 00460100
*                                  on which the entries to be         * 00460200
*                                  processed reside.  If the list     * 00460300
*                                  comparison fails then the IXLLSTM  * 00460400
*                                  operation is terminated, and the   * 00460500
*                                  list entry controls along with the * 00460600
*                                  appropriate return and reason      * 00460700
*                                  codes are provided to the invoker. * 00460800
*                                                                     * 00460900
*                                                                     * 00461000
*                                                                     * 00461100
*                                                                     * 00461200
*                              [AUTHCOMPARE=NO|YES                  * 00461300
*                                  is an optional keyword input which * 00461400
*                                  determines whether the list        * 00461500
*                                  authority comparison is to be used * 00461600
*                                  to determine if entries on the     * 00461700
*                                  list should be processed.          * 00461800
*                                  DEFAULT: NO                        * 00461900
*                                                                     * 00462000
*                                                                     * 00462100
*                                  [AUTHCOMPARE=NO]                   * 00462200
*                                      indicates no list authority    * 00462300
*                                      comparison is to be performed  * 00462400
*                                      before processing any entries  * 00462500
*                                      on the list.                   * 00462600
*                                                                     * 00462700
*                                  [AUTHCOMPARE=YES                   * 00462800
*                                      indicates that list authority  * 00462900
*                                      comparison should precede      * 00463000
*                                      processing of any entries on   * 00463100
*                                      the list.                      * 00463200
*                                                                     * 00463300
*                                                                     * 00463400
*                                      AUTHCOMP=xauthcomp             * 00463500
*                                          is the name (RS-type), or  * 00463600
*                                          address in register        * 00463700
*                                          (2)-(12), of a required 16 * 00463800
*                                          character input which      * 00463900
*                                          specifies a value to be    * 00464000
*                                          compared to the list       * 00464100
*                                          authority value for the    * 00464200
*                                          designated list.  If the   * 00464300
*                                          condition specified by     * 00464400
*                                          AUTHCOMPTYPE is not met    * 00464500
*                                          then the IXLLSTM operation * 00464600
*                                          is terminated with no      * 00464700
*                                          resultant change to the    * 00464800
*                                          structure, and appropriate * 00464900
*                                          return and reason codes    * 00465000
*                                          are provided to the        * 00465100
*                                          invoker.                   * 00465200
*                                                                     * 00465300
*                                                                     * 00465400
*                                          [AUTHCOMPTYPE=EQUAL|LESSO * 00465500
*                                              REQUAL]]]             * 00465600
*                                              is an optional keyword * 00465700
*                                              input which specifies  * 00465800
*                                              how the list authority * 00465900
*                                              comparison is to be    * 00466000
*                                              performed.             * 00466100
*                                                                     * 00466200
*                                              DEFAULT: EQUAL         * 00466300
*                                                                     * 00466400
*                                                                     * 00466500
*                                              AUTHCOMPTYPE=EQUAL     * 00466600
*                                                  The list authority * 00466700
*                                                  for the list       * 00466800
*                                                  specified by       * 00466900
*                                                  LISTNUM must be    * 00467000
*                                                  equal to the value * 00467100
*                                                  specified for      * 00467200
*                                                  AUTHCOMP.          * 00467300
*                                                                     * 00467400
*                                                                     * 00467500
*                                              AUTHCOMPTYPE=LESSOREQU * 00467600
*                                                  AL                 * 00467700
*                                                  The list authority * 00467800
*                                                  for the list       * 00467900
*                                                  specified by       * 00468000
*                                                  LISTNUM must be    * 00468100
*                                                  less than or equal * 00468200
*                                                  to the value       * 00468300
*                                                  specified for      * 00468400
*                                                  AUTHCOMP.          * 00468500
*                                                                     * 00468600
*                                                                     * 00468700
*                                                                     * 00468800
*                                                                     * 00468900
*                                                                     * 00469000
*                                                                     * 00469100
*                                                                     * 00469200
*                                                                     * 00469300
*                                                                     * 00469400
*                                                                     * 00469500
*                                                                     * 00469600
*                                                                     * 00469700
*                                                                     * 00469800
*                                                                     * 00469900
*                                                                     * 00470000
*                  LOCATOR=UNKEYPOS                                   * 00470100
*                      Indicates that LISTNUM and DIRECTION as to be  * 00470200
*                      used to designate the entry to be used as the  * 00470300
*                      starting entry for the request.                * 00470400
*                                                                     * 00470500
*                                                                     * 00470600
*                      LISTNUM=xlistnum                               * 00470700
*                          is the name (RS-type), or address in       * 00470800
*                          register (2)-(12), of a required fullword  * 00470900
*                          input that designates the number of the    * 00471000
*                          list on which the entries to be processed  * 00471100
*                          reside.  If DIRECTION=HEADTOTAIL was       * 00471200
*                          specified, then the designated starting    * 00471300
*                          list entry is the head of the list.  If    * 00471400
*                          DIRECTION=TAILTOHEAD was specified, then   * 00471500
*                          the designated starting list entry is the  * 00471600
*                          tail of the list.                          * 00471700
*                                                                     * 00471800
*                                                                     * 00471900
*                                                                     * 00472000
*                                                                     * 00472100
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00472200
*                          is an optional keyword input that          * 00472300
*                          indicates which key ordering               * 00472400
*                          (Entry/Secondary) is to be used to scan    * 00472500
*                          for entries on the list.                   * 00472600
*                          DEFAULT: ENTRY                             * 00472700
*                                                                     * 00472800
*                                                                     * 00472900
*                          KEYSCANTYPE=ENTRY                          * 00473000
*                              indicates that entry key ordering will * 00473100
*                              be used for scanning the list.         * 00473200
*                                                                     * 00473300
*                          KEYSCANTYPE=SECONDARY                      * 00473400
*                              indicates that secondary key ordering  * 00473500
*                              will be used for scanning the list.    * 00473600
*                                                                     * 00473700
*                                                                     * 00473800
*                                                                     * 00473900
*                                                                     * 00474000
*                                                                     * 00474100
*                                                                     * 00474200
*                      [AUTHCOMPARE=NO|YES                          * 00474300
*                          is an optional keyword input which         * 00474400
*                          determines whether the list authority      * 00474500
*                          comparison is to be used to determine if   * 00474600
*                          entries on the list should be processed.   * 00474700
*                          DEFAULT: NO                                * 00474800
*                                                                     * 00474900
*                                                                     * 00475000
*                          [AUTHCOMPARE=NO]                           * 00475100
*                              indicates no list authority comparison * 00475200
*                              is to be performed before processing   * 00475300
*                              any entries on the list.               * 00475400
*                                                                     * 00475500
*                          [AUTHCOMPARE=YES                           * 00475600
*                              indicates that list authority          * 00475700
*                              comparison should precede processing   * 00475800
*                              of any entries on the list.            * 00475900
*                                                                     * 00476000
*                                                                     * 00476100
*                              AUTHCOMP=xauthcomp                     * 00476200
*                                  is the name (RS-type), or address  * 00476300
*                                  in register (2)-(12), of a         * 00476400
*                                  required 16 character input which  * 00476500
*                                  specifies a value to be compared   * 00476600
*                                  to the list authority value for    * 00476700
*                                  the designated list.  If the       * 00476800
*                                  condition specified by             * 00476900
*                                  AUTHCOMPTYPE is not met then the   * 00477000
*                                  IXLLSTM operation is terminated    * 00477100
*                                  with no resultant change to the    * 00477200
*                                  structure, and appropriate return  * 00477300
*                                  and reason codes are provided to   * 00477400
*                                  the invoker.                       * 00477500
*                                                                     * 00477600
*                                                                     * 00477700
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00477800
*                                      ]                              * 00477900
*                                      is an optional keyword input   * 00478000
*                                      which specifies how the list   * 00478100
*                                      authority comparison is to be  * 00478200
*                                      performed.                     * 00478300
*                                                                     * 00478400
*                                      DEFAULT: EQUAL                 * 00478500
*                                                                     * 00478600
*                                                                     * 00478700
*                                      AUTHCOMPTYPE=EQUAL             * 00478800
*                                          The list authority for the * 00478900
*                                          list specified by LISTNUM  * 00479000
*                                          must be equal to the value * 00479100
*                                          specified for AUTHCOMP.    * 00479200
*                                                                     * 00479300
*                                                                     * 00479400
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00479500
*                                          The list authority for the * 00479600
*                                          list specified by LISTNUM  * 00479700
*                                          must be less than or equal * 00479800
*                                          to the value specified for * 00479900
*                                          AUTHCOMP.                  * 00480000
*                                                                     * 00480100
*                                                                     * 00480200
*                                                                     * 00480300
*                                                                     * 00480400
*                                                                     * 00480500
*                                                                     * 00480600
*                                                                     * 00480700
*                                                                     * 00480800
*                                                                     * 00480900
*                                                                     * 00481000
*                                                                     * 00481100
*                                                                     * 00481200
*                      [KEYCOMPARE=NO|YES                           * 00481300
*                          is an optional keyword input that          * 00481400
*                          determines whether the key value of an     * 00481500
*                          existing keyed list entry is to be         * 00481600
*                          compared to determine if this entry should * 00481700
*                          be selected for processing.                * 00481800
*                          DEFAULT: NO                                * 00481900
*                                                                     * 00482000
*                                                                     * 00482100
*                          [KEYCOMPARE=NO]                            * 00482200
*                              Indicates that no entry key comparison * 00482300
*                              will be performed to determine if this * 00482400
*                              entry should be processed.             * 00482500
*                                                                     * 00482600
*                          [KEYCOMPARE=YES                            * 00482700
*                              Indicates that entry key comparison    * 00482800
*                              will be performed based on the         * 00482900
*                              KEYREQTYPE specified to determine if   * 00483000
*                              this entry is selectable for           * 00483100
*                              processing.                            * 00483200
*                                                                     * 00483300
*                              KEYCOMPARE=YES is ignored if the       * 00483400
*                              target structure does not support      * 00483500
*                              keyed entries.                         * 00483600
*                                                                     * 00483700
*                                                                     * 00483800
*                              ENTRYKEY=xentrykey                     * 00483900
*                                  is the name (RS-type), or address  * 00484000
*                                  in register (2)-(12), of a         * 00484100
*                                  required 16 character input that   * 00484200
*                                  specifies the key to be used to    * 00484300
*                                  compare to the entry key of the    * 00484400
*                                  list entry.  If the condition      * 00484500
*                                  specified by KEYREQTYPE is not met * 00484600
*                                  for the current list entry then no * 00484700
*                                  processing is performed for the    * 00484800
*                                  current entry, and processing      * 00484900
*                                  continues with the next entry to   * 00485000
*                                  be considered.                     * 00485100
*                                                                     * 00485200
*                                                                     * 00485300
*                                                                     * 00485400
*                                                                     * 00485500
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00485600
*                                  OREQUAL|RANGE]]                   * 00485700
*                                  is an optional keyword input which * 00485800
*                                  specifies how entry key comparison * 00485900
*                                  is to be performed on an existing  * 00486000
*                                  keyed list entry to determine if   * 00486100
*                                  the entry is selectable for        * 00486200
*                                  processing.                        * 00486300
*                                  DEFAULT: EQUAL                     * 00486400
*                                                                     * 00486500
*                                                                     * 00486600
*                                  [KEYREQTYPE=EQUAL]                 * 00486700
*                                      a list entry must have an      * 00486800
*                                      entry key equal to the value   * 00486900
*                                      specified by ENTRYKEY.         * 00487000
*                                                                     * 00487100
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00487200
*                                      a list entry must have an      * 00487300
*                                      entry key less than or equal   * 00487400
*                                      to the value specified by      * 00487500
*                                      ENTRYKEY.                      * 00487600
*                                                                     * 00487700
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00487800
*                                      a list entry must have an      * 00487900
*                                      entry key greater than or      * 00488000
*                                      equal to the value specified   * 00488100
*                                      by ENTRYKEY.                   * 00488200
*                                                                     * 00488300
*                                  [KEYREQTYPE=RANGE                  * 00488400
*                                      a list entry must have an      * 00488500
*                                      entry key within a specified   * 00488600
*                                      range of values. The ENTRYKEY  * 00488700
*                                      specified will be used as the  * 00488800
*                                      beginning of the range of key  * 00488900
*                                      values that will be compared   * 00489000
*                                      with the existing entry key.   * 00489100
*                                      KEYRANGEEND will be used as    * 00489200
*                                      the ending value.  A list      * 00489300
*                                      entry must have an entry key   * 00489400
*                                      value within the specified     * 00489500
*                                      entry key range, inclusive,    * 00489600
*                                      for it to be selectable.       * 00489700
*                                                                     * 00489800
*                                                                     * 00489900
*                                      KEYRANGEEND=xkeyrangeend]]     * 00490000
*                                          is the name (RS-type), or  * 00490100
*                                          address in register        * 00490200
*                                          (2)-(12), of a required 16 * 00490300
*                                          character input specifies  * 00490400
*                                          the ending value for the   * 00490500
*                                          range of keys to be        * 00490600
*                                          compared to the entry key  * 00490700
*                                          of the list entry.         * 00490800
*                                                                     * 00490900
*                                                                     * 00491000
*                                                                     * 00491100
*                                                                     * 00491200
*                                                                     * 00491300
*                                                                     * 00491400
*                                                                     * 00491500
*                                                                     * 00491600
*                                                                     * 00491700
*                                                                     * 00491800
*                                                                     * 00491900
*                                                                     * 00492000
*                      [SKEYCOMPARE=NO|YES                          * 00492100
*                          is an optional keyword input that          * 00492200
*                          determines whether the secondary key value * 00492300
*                          of an existing keyed list entry is to be   * 00492400
*                          compared to determine if this entry should * 00492500
*                          be selected for processing.                * 00492600
*                          DEFAULT: NO                                * 00492700
*                                                                     * 00492800
*                                                                     * 00492900
*                          [SKEYCOMPARE=NO]                           * 00493000
*                              Indicates that no secondary key        * 00493100
*                              comparison will be performed to        * 00493200
*                              determine if this entry should be      * 00493300
*                              processed.                             * 00493400
*                                                                     * 00493500
*                          [SKEYCOMPARE=YES                           * 00493600
*                              Indicates that secondary key           * 00493700
*                              comparison will be performed based on  * 00493800
*                              the SKEYREQTYPE specified to determine * 00493900
*                              if this entry is selectable for        * 00494000
*                              processing.                            * 00494100
*                                                                     * 00494200
*                              SKEYCOMPARE=YES is ignored if the      * 00494300
*                              target structure was not allocated     * 00494400
*                              with secondary keys.                   * 00494500
*                                                                     * 00494600
*                                                                     * 00494700
*                              SECONDARYKEY=xsecondarykey             * 00494800
*                                  is the name (RS-type), or address  * 00494900
*                                  in register (2)-(12), of a         * 00495000
*                                  required 32 character input that   * 00495100
*                                  specifies the secondary key value  * 00495200
*                                  to be used to compare to the       * 00495300
*                                  secondary key of the list entry.   * 00495400
*                                  If the condition specified by      * 00495500
*                                  SKEYREQTYPE is not met for the     * 00495600
*                                  current list entry then no         * 00495700
*                                  processing is performed for the    * 00495800
*                                  current entry, and processing      * 00495900
*                                  continues with the next entry to   * 00496000
*                                  be considered.                     * 00496100
*                                                                     * 00496200
*                                                                     * 00496300
*                                                                     * 00496400
*                                                                     * 00496500
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00496600
*                                  ROREQUAL|RANGE]]                  * 00496700
*                                  is an optional keyword input which * 00496800
*                                  specifies how secondary key        * 00496900
*                                  comparison is to be performed on   * 00497000
*                                  an existing keyed list entry to    * 00497100
*                                  determine if the entry is          * 00497200
*                                  selectable for processing.         * 00497300
*                                  DEFAULT: EQUAL                     * 00497400
*                                                                     * 00497500
*                                                                     * 00497600
*                                  [SKEYREQTYPE=EQUAL]                * 00497700
*                                      a list entry must have a       * 00497800
*                                      secondary key equal to the     * 00497900
*                                      value specified by             * 00498000
*                                      SECONDARYKEY.                  * 00498100
*                                                                     * 00498200
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00498300
*                                      a list entry must have a       * 00498400
*                                      secondary key less than or     * 00498500
*                                      equal to the value specified   * 00498600
*                                      by SECONDARYKEY.               * 00498700
*                                                                     * 00498800
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00498900
*                                      a list entry must have a       * 00499000
*                                      secondary key greater than or  * 00499100
*                                      equal to the value specified   * 00499200
*                                      by SECONDARYKEY.               * 00499300
*                                                                     * 00499400
*                                  [SKEYREQTYPE=RANGE                 * 00499500
*                                      a list entry must have a       * 00499600
*                                      secondary key within a         * 00499700
*                                      specified range of values. The * 00499800
*                                      SECONDARYKEY specified will be * 00499900
*                                      used as the beginning of the   * 00500000
*                                      range of secondary key values  * 00500100
*                                      that will be compared with the * 00500200
*                                      existing secondary key.        * 00500300
*                                      SKEYRANGEEND will be used as   * 00500400
*                                      the ending value.  A list      * 00500500
*                                      entry must have a secondary    * 00500600
*                                      key value within the specified * 00500700
*                                      secondary key range,           * 00500800
*                                      inclusive, for it to be        * 00500900
*                                      selectable.                    * 00501000
*                                                                     * 00501100
*                                                                     * 00501200
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00501300
*                                                                     * 00501400
*                                          is the name (RS-type), or  * 00501500
*                                          address in register        * 00501600
*                                          (2)-(12), of a required 32 * 00501700
*                                          character input which      * 00501800
*                                          specifies the ending value * 00501900
*                                          for the range of secondary * 00502000
*                                          keys to be compared to the * 00502100
*                                          secondary key of the list  * 00502200
*                                          entry.                     * 00502300
*                                                                     * 00502400
*                                                                     * 00502500
*                                                                     * 00502600
*                                                                     * 00502700
*                                                                     * 00502800
*                                                                     * 00502900
*                                                                     * 00503000
*                                                                     * 00503100
*                                                                     * 00503200
*                                                                     * 00503300
*                                                                     * 00503400
*                  LOCATOR=KEYPOS                                     * 00503500
*                      Indicates that LISTNUM, DIRECTION, and the key * 00503600
*                      specified by KEYTYPE are to be used to         * 00503700
*                      designate the entry to be used as the starting * 00503800
*                      list entry for the request.                    * 00503900
*                                                                     * 00504000
*                                                                     * 00504100
*                      LISTNUM=xlistnum                               * 00504200
*                          is the name (RS-type), or address in       * 00504300
*                          register (2)-(12), of a required fullword  * 00504400
*                          input designates the number of the list on * 00504500
*                          which the entries to be processed reside.  * 00504600
*                          LISTNUM is used to restrict processing to  * 00504700
*                          those entries residing on the list         * 00504800
*                          specified.                                 * 00504900
*                                                                     * 00505000
*                                                                     * 00505100
*                                                                     * 00505200
*                                                                     * 00505300
*                      [KEYSCANTYPE=ENTRY|SECONDARY]                * 00505400
*                          is an optional keyword input that          * 00505500
*                          indicates which key ordering               * 00505600
*                          (Entry/Secondary) is to be used to scan    * 00505700
*                          for entries on the list.                   * 00505800
*                          DEFAULT: ENTRY                             * 00505900
*                                                                     * 00506000
*                                                                     * 00506100
*                          KEYSCANTYPE=ENTRY                          * 00506200
*                              indicates that entry key ordering will * 00506300
*                              be used for scanning the list.         * 00506400
*                                                                     * 00506500
*                          KEYSCANTYPE=SECONDARY                      * 00506600
*                              indicates that secondary key ordering  * 00506700
*                              will be used for scanning the list.    * 00506800
*                                                                     * 00506900
*                                                                     * 00507000
*                                                                     * 00507100
*                                                                     * 00507200
*                                                                     * 00507300
*                                                                     * 00507400
*                      [AUTHCOMPARE=NO|YES                          * 00507500
*                          is an optional keyword input which         * 00507600
*                          determines whether the list authority      * 00507700
*                          comparison is to be used to determine if   * 00507800
*                          entries on the list should be processed.   * 00507900
*                          DEFAULT: NO                                * 00508000
*                                                                     * 00508100
*                                                                     * 00508200
*                          [AUTHCOMPARE=NO]                           * 00508300
*                              indicates no list authority comparison * 00508400
*                              is to be performed before processing   * 00508500
*                              any entries on the list.               * 00508600
*                                                                     * 00508700
*                          [AUTHCOMPARE=YES                           * 00508800
*                              indicates that list authority          * 00508900
*                              comparison should precede processing   * 00509000
*                              of any entries on the list.            * 00509100
*                                                                     * 00509200
*                                                                     * 00509300
*                              AUTHCOMP=xauthcomp                     * 00509400
*                                  is the name (RS-type), or address  * 00509500
*                                  in register (2)-(12), of a         * 00509600
*                                  required 16 character input which  * 00509700
*                                  specifies a value to be compared   * 00509800
*                                  to the list authority value for    * 00509900
*                                  the designated list.  If the       * 00510000
*                                  condition specified by             * 00510100
*                                  AUTHCOMPTYPE is not met then the   * 00510200
*                                  IXLLSTM operation is terminated    * 00510300
*                                  with no resultant change to the    * 00510400
*                                  structure, and appropriate return  * 00510500
*                                  and reason codes are provided to   * 00510600
*                                  the invoker.                       * 00510700
*                                                                     * 00510800
*                                                                     * 00510900
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00511000
*                                      ]                              * 00511100
*                                      is an optional keyword input   * 00511200
*                                      which specifies how the list   * 00511300
*                                      authority comparison is to be  * 00511400
*                                      performed.                     * 00511500
*                                                                     * 00511600
*                                      DEFAULT: EQUAL                 * 00511700
*                                                                     * 00511800
*                                                                     * 00511900
*                                      AUTHCOMPTYPE=EQUAL             * 00512000
*                                          The list authority for the * 00512100
*                                          list specified by LISTNUM  * 00512200
*                                          must be equal to the value * 00512300
*                                          specified for AUTHCOMP.    * 00512400
*                                                                     * 00512500
*                                                                     * 00512600
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00512700
*                                          The list authority for the * 00512800
*                                          list specified by LISTNUM  * 00512900
*                                          must be less than or equal * 00513000
*                                          to the value specified for * 00513100
*                                          AUTHCOMP.                  * 00513200
*                                                                     * 00513300
*                                                                     * 00513400
*                                                                     * 00513500
*                                                                     * 00513600
*                                                                     * 00513700
*                                                                     * 00513800
*                                                                     * 00513900
*                                                                     * 00514000
*                                                                     * 00514100
*                                                                     * 00514200
*                                                                     * 00514300
*                                                                     * 00514400
*                      [KEYTYPE=ENTRY|SECONDARY                     * 00514500
*                          is an optional keyword input that          * 00514600
*                          specifies whether to locate the starting   * 00514700
*                          list entry using the entry key or the      * 00514800
*                          secondary key.                             * 00514900
*                          DEFAULT: ENTRY                             * 00515000
*                                                                     * 00515100
*                                                                     * 00515200
*                          [KEYTYPE=ENTRY                             * 00515300
*                              Indicates the entry key will be used   * 00515400
*                              to locate the starting list entry.     * 00515500
*                                                                     * 00515600
*                                                                     * 00515700
*                              ENTRYKEY=xentrykey                     * 00515800
*                                  is the name (RS-type), or address  * 00515900
*                                  in register (2)-(12), of a         * 00516000
*                                  required 16 character input that   * 00516100
*                                  specifies the key to be used to    * 00516200
*                                  partially indicate the starting    * 00516300
*                                  list entry for the request.  If    * 00516400
*                                  DIRECTION=HEADTOTAIL was           * 00516500
*                                  specified, the designated starting * 00516600
*                                  list entry is the head of the      * 00516700
*                                  sublist.  If DIRECTION=TAILTOHEAD  * 00516800
*                                  was specified, the designated      * 00516900
*                                  starting list entry is the tail of * 00517000
*                                  the sublist.                       * 00517100
*                                                                     * 00517200
*                                                                     * 00517300
*                                  [KEYREQTYPE=EQUAL|LESSOREQUAL|GRE * 00517400
*                                      ATEROREQUAL|RANGE]            * 00517500
*                                      is an optional keyword input   * 00517600
*                                      which specifies how an         * 00517700
*                                      existing keyed list entry is   * 00517800
*                                      located and/or how key         * 00517900
*                                      comparison is to be performed  * 00518000
*                                      on an existing keyed list      * 00518100
*                                      entry to determine if the      * 00518200
*                                      entry is selectable for        * 00518300
*                                      processing KEYCOMPARE=YES is   * 00518400
*                                      specified.                     * 00518500
*                                      DEFAULT: EQUAL                 * 00518600
*                                                                     * 00518700
*                                                                     * 00518800
*                                      [KEYREQTYPE=EQUAL]             * 00518900
*                                          a list entry must have an  * 00519000
*                                          entry key equal to the     * 00519100
*                                          value specified by         * 00519200
*                                          ENTRYKEY.                  * 00519300
*                                                                     * 00519400
*                                          If no such keyed entry     * 00519500
*                                          exists on the list then    * 00519600
*                                          the request will be        * 00519700
*                                          failed.                    * 00519800
*                                                                     * 00519900
*                                      [KEYREQTYPE=LESSOREQUAL]       * 00520000
*                                          a list entry must have an  * 00520100
*                                          entry key less than or     * 00520200
*                                          equal to the value         * 00520300
*                                          specified by ENTRYKEY.     * 00520400
*                                                                     * 00520500
*                                          If no entries on the list  * 00520600
*                                          have an entry key value    * 00520700
*                                          less than or equal to the  * 00520800
*                                          specified value the        * 00520900
*                                          request will be failed     * 00521000
*                                                                     * 00521100
*                                          If no entries on the list  * 00521200
*                                          have an entry key value    * 00521300
*                                          equal to the value         * 00521400
*                                          specified by ENTRYKEY, but * 00521500
*                                          entries exists with an     * 00521600
*                                          entry key value less than  * 00521700
*                                          the specified value then   * 00521800
*                                          the entry with the largest * 00521900
*                                          entry key value less than  * 00522000
*                                          the specified value is     * 00522100
*                                          selected.  When multiple   * 00522200
*                                          entries have the same      * 00522300
*                                          entry key value DIRECTION  * 00522400
*                                          is used to resolve whether * 00522500
*                                          the first or last entry    * 00522600
*                                          with the entry key value   * 00522700
*                                          is selected.               * 00522800
*                                                                     * 00522900
*                                                                     * 00523000
*                                      [KEYREQTYPE=GREATEROREQUAL]    * 00523100
*                                          a list entry must have an  * 00523200
*                                          entry key greater than or  * 00523300
*                                          equal to the value         * 00523400
*                                          specified by ENTRYKEY.     * 00523500
*                                                                     * 00523600
*                                          If no entries on the list  * 00523700
*                                          have an entry key value    * 00523800
*                                          greater than or equal to   * 00523900
*                                          the specified value the    * 00524000
*                                          request will be failed.    * 00524100
*                                                                     * 00524200
*                                          If no entries on the list  * 00524300
*                                          have an entry key value    * 00524400
*                                          equal to the value         * 00524500
*                                          specified by ENTRYKEY, but * 00524600
*                                          entries exists with an     * 00524700
*                                          entry key value greater    * 00524800
*                                          than the specified value   * 00524900
*                                          then the entry with the    * 00525000
*                                          smallest entry key value   * 00525100
*                                          greater than the specified * 00525200
*                                          value is selected.  When   * 00525300
*                                          multiple entries have the  * 00525400
*                                          same entry key value       * 00525500
*                                          DIRECTION is used to       * 00525600
*                                          resolve whether the first  * 00525700
*                                          or last entry with the     * 00525800
*                                          entry key value is         * 00525900
*                                          selected.                  * 00526000
*                                                                     * 00526100
*                                      [KEYREQTYPE=RANGE              * 00526200
*                                          a list entry must have an  * 00526300
*                                          entry key within a         * 00526400
*                                          specified range of values. * 00526500
*                                          The ENTRYKEY specified     * 00526600
*                                          will be used as the        * 00526700
*                                          beginning of the range of  * 00526800
*                                          key values that will be    * 00526900
*                                          compared with the existing * 00527000
*                                          entry key. KEYRANGEEND     * 00527100
*                                          will be used as the ending * 00527200
*                                          value.  A list entry must  * 00527300
*                                          have an entry key value    * 00527400
*                                          within the specified entry * 00527500
*                                          key range, inclusive, for  * 00527600
*                                          it to be selectable.       * 00527700
*                                                                     * 00527800
*                                          If no entries on the list  * 00527900
*                                          have an entry key value    * 00528000
*                                          within the specified       * 00528100
*                                          range, the request will be * 00528200
*                                          failed.                    * 00528300
*                                                                     * 00528400
*                                          When multiple entries have * 00528500
*                                          an entry key value within  * 00528600
*                                          the specified range,       * 00528700
*                                          DIRECTION is used to       * 00528800
*                                          resolve whether the first  * 00528900
*                                          or last entry with the     * 00529000
*                                          entry key range is         * 00529100
*                                          selected.                  * 00529200
*                                                                     * 00529300
*                                          NOTE:  When                * 00529400
*                                          KEYREQTYPE=RANGE is        * 00529500
*                                          specifed, KEYCOMPARE=YES   * 00529600
*                                          is required.               * 00529700
*                                                                     * 00529800
*                                                                     * 00529900
*                                          KEYRANGEEND=xkeyrangeend]  * 00530000
*                                                                     * 00530100
*                                              is the name (RS-type), * 00530200
*                                              or address in register * 00530300
*                                              (2)-(12), of a         * 00530400
*                                              required 16 character  * 00530500
*                                              input specifies the    * 00530600
*                                              ending value for the   * 00530700
*                                              range of keys to be    * 00530800
*                                              compared to the entry  * 00530900
*                                              key of the designated  * 00531000
*                                              list entry.            * 00531100
*                                                                     * 00531200
*                                                                     * 00531300
*                                                                     * 00531400
*                                                                     * 00531500
*                                                                     * 00531600
*                                                                     * 00531700
*                                                                     * 00531800
*                                                                     * 00531900
*                                  [KEYCOMPARE=NO|YES]              * 00532000
*                                      is an optional keyword input   * 00532100
*                                      that determines whether the    * 00532200
*                                      key value of an existing keyed * 00532300
*                                      list entry is to be compared   * 00532400
*                                      to determine if this entry     * 00532500
*                                      should be selected for         * 00532600
*                                      processing.                    * 00532700
*                                      DEFAULT: NO                    * 00532800
*                                                                     * 00532900
*                                                                     * 00533000
*                                      [KEYCOMPARE=NO]                * 00533100
*                                          Indicates that no entry    * 00533200
*                                          key comparison will be     * 00533300
*                                          performed to determine if  * 00533400
*                                          this entry should be       * 00533500
*                                          processed.                 * 00533600
*                                                                     * 00533700
*                                          NOTE:  When                * 00533800
*                                          KEYREQTYPE=RANGE is        * 00533900
*                                          specifed, KEYCOMPARE=YES   * 00534000
*                                          is required.               * 00534100
*                                                                     * 00534200
*                                      [KEYCOMPARE=YES]               * 00534300
*                                          Indicates that entry key   * 00534400
*                                          comparison will be         * 00534500
*                                          performed based on the     * 00534600
*                                          KEYREQTYPE specified to    * 00534700
*                                          determine if this entry is * 00534800
*                                          selectable for processing. * 00534900
*                                                                     * 00535000
*                                                                     * 00535100
*                                                                     * 00535200
*                                                                     * 00535300
*                                                                     * 00535400
*                                                                     * 00535500
*                                  [SKEYCOMPARE=NO|YES              * 00535600
*                                      is an optional keyword input   * 00535700
*                                      that determines whether the    * 00535800
*                                      secondary key value of an      * 00535900
*                                      existing keyed list entry is   * 00536000
*                                      to be compared to determine if * 00536100
*                                      this entry should be selected  * 00536200
*                                      for processing.                * 00536300
*                                      DEFAULT: NO                    * 00536400
*                                                                     * 00536500
*                                                                     * 00536600
*                                      [SKEYCOMPARE=NO]               * 00536700
*                                          Indicates that no          * 00536800
*                                          secondary key comparison   * 00536900
*                                          will be performed to       * 00537000
*                                          determine if this entry    * 00537100
*                                          should be processed.       * 00537200
*                                                                     * 00537300
*                                      [SKEYCOMPARE=YES               * 00537400
*                                          Indicates that secondary   * 00537500
*                                          key comparison will be     * 00537600
*                                          performed based on the     * 00537700
*                                          SKEYREQTYPE specified to   * 00537800
*                                          determine if this entry is * 00537900
*                                          selectable for processing. * 00538000
*                                                                     * 00538100
*                                          SKEYCOMPARE=YES is ignored * 00538200
*                                          if the target structure    * 00538300
*                                          was not allocated with     * 00538400
*                                          secondary keys.            * 00538500
*                                                                     * 00538600
*                                                                     * 00538700
*                                          SECONDARYKEY=xsecondarykey * 00538800
*                                                                     * 00538900
*                                              is the name (RS-type), * 00539000
*                                              or address in register * 00539100
*                                              (2)-(12), of a         * 00539200
*                                              required 32 character  * 00539300
*                                              input that specifies   * 00539400
*                                              the secondary key      * 00539500
*                                              value to be compared   * 00539600
*                                              to the secondary key   * 00539700
*                                              of the list entry.     * 00539800
*                                                                     * 00539900
*                                                                     * 00540000
*                                              [SKEYREQTYPE=EQUAL|LE * 00540100
*                                                  SSOREQUAL|GREATERO * 00540200
*                                                  REQUAL|RANGE]]    * 00540300
*                                                  is an optional     * 00540400
*                                                  keyword input      * 00540500
*                                                  which specifies    * 00540600
*                                                  how key comparison * 00540700
*                                                  is to be performed * 00540800
*                                                  on an existing     * 00540900
*                                                  keyed list entry   * 00541000
*                                                  to determine if    * 00541100
*                                                  the entry is       * 00541200
*                                                  selectable for     * 00541300
*                                                  processing.        * 00541400
*                                                  DEFAULT: EQUAL     * 00541500
*                                                                     * 00541600
*                                                                     * 00541700
*                                                  [SKEYREQTYPE=EQUAL * 00541800
*                                                      ]              * 00541900
*                                                      a list entry   * 00542000
*                                                      must have a    * 00542100
*                                                      secondary key  * 00542200
*                                                      equal to the   * 00542300
*                                                      value          * 00542400
*                                                      specified by   * 00542500
*                                                      SECONDARYKEY.  * 00542600
*                                                                     * 00542700
*                                                  [SKEYREQTYPE=LESSO * 00542800
*                                                      REQUAL]        * 00542900
*                                                      a list entry   * 00543000
*                                                      must have a    * 00543100
*                                                      secondary key  * 00543200
*                                                      less than or   * 00543300
*                                                      equal to the   * 00543400
*                                                      value          * 00543500
*                                                      specified by   * 00543600
*                                                      SECONDARYKEY.  * 00543700
*                                                                     * 00543800
*                                                  [SKEYREQTYPE=GREAT * 00543900
*                                                      EROREQUAL]     * 00544000
*                                                      a list entry   * 00544100
*                                                      must have a    * 00544200
*                                                      secondary key  * 00544300
*                                                      greater than   * 00544400
*                                                      or equal to    * 00544500
*                                                      the value      * 00544600
*                                                      specified by   * 00544700
*                                                      SECONDARYKEY.  * 00544800
*                                                                     * 00544900
*                                                  [SKEYREQTYPE=RANGE * 00545000
*                                                                     * 00545100
*                                                      a list entry   * 00545200
*                                                      must have a    * 00545300
*                                                      secondary key  * 00545400
*                                                      within a       * 00545500
*                                                      specified      * 00545600
*                                                      range of       * 00545700
*                                                      values. The    * 00545800
*                                                      SECONDARYKEY   * 00545900
*                                                      specified will * 00546000
*                                                      be used as the * 00546100
*                                                      beginning of   * 00546200
*                                                      the range of   * 00546300
*                                                      key values     * 00546400
*                                                      that will be   * 00546500
*                                                      compared with  * 00546600
*                                                      the existing   * 00546700
*                                                      secondary key. * 00546800
*                                                      SKEYRANGEEND   * 00546900
*                                                      will be used   * 00547000
*                                                      as the ending  * 00547100
*                                                      value.  A list * 00547200
*                                                      entry must     * 00547300
*                                                      have a         * 00547400
*                                                      secondary key  * 00547500
*                                                      value within   * 00547600
*                                                      the specified  * 00547700
*                                                      secondary key  * 00547800
*                                                      range,         * 00547900
*                                                      inclusive, for * 00548000
*                                                      it to be       * 00548100
*                                                      selectable.    * 00548200
*                                                                     * 00548300
*                                                                     * 00548400
*                                                      SKEYRANGEEND=x * 00548500
*                                                          skeyrangee * 00548600
*                                                          nd]]]      * 00548700
*                                                          is the     * 00548800
*                                                          name       * 00548900
*                                                          (RS-type), * 00549000
*                                                          or address * 00549100
*                                                          in         * 00549200
*                                                          register   * 00549300
*                                                          (2)-(12),  * 00549400
*                                                          of a       * 00549500
*                                                          required   * 00549600
*                                                          32         * 00549700
*                                                          character  * 00549800
*                                                          input      * 00549900
*                                                          specifies  * 00550000
*                                                          the ending * 00550100
*                                                          value for  * 00550200
*                                                          the range  * 00550300
*                                                          of keys to * 00550400
*                                                          be         * 00550500
*                                                          compared   * 00550600
*                                                          to the     * 00550700
*                                                          secondary  * 00550800
*                                                          key of the * 00550900
*                                                          designated * 00551000
*                                                          list       * 00551100
*                                                          entry.     * 00551200
*                                                                     * 00551300
*                                                                     * 00551400
*                                                                     * 00551500
*                                                                     * 00551600
*                                                                     * 00551700
*                                                                     * 00551800
*                                                                     * 00551900
*                                                                     * 00552000
*                                                                     * 00552100
*                                                                     * 00552200
*                                                                     * 00552300
*                                                                     * 00552400
*                                                                     * 00552500
*                                                                     * 00552600
*                                                                     * 00552700
*                          [KEYTYPE=SECONDARY                         * 00552800
*                              Indicates the secondary key should be  * 00552900
*                              used to locate the starting list       * 00553000
*                              entry.                                 * 00553100
*                                                                     * 00553200
*                                                                     * 00553300
*                              SECONDARYKEY=xsecondarykey             * 00553400
*                                  is the name (RS-type), or address  * 00553500
*                                  in register (2)-(12), of a         * 00553600
*                                  required 32 character input that   * 00553700
*                                  specifies the secondary key to be  * 00553800
*                                  used to partially indicate the     * 00553900
*                                  starting list entry for the        * 00554000
*                                  request.  If DIRECTION=HEADTOTAIL  * 00554100
*                                  was specified, the designated      * 00554200
*                                  starting list entry is the head of * 00554300
*                                  the sublist.  If                   * 00554400
*                                  DIRECTION=TAILTOHEAD was           * 00554500
*                                  specified, the designated starting * 00554600
*                                  list entry is the tail of the      * 00554700
*                                  sublist.                           * 00554800
*                                                                     * 00554900
*                                                                     * 00555000
*                                  [SKEYREQTYPE=EQUAL|LESSOREQUAL|GR * 00555100
*                                      EATEROREQUAL|RANGE]           * 00555200
*                                      is an optional keyword input   * 00555300
*                                      which specifies how an         * 00555400
*                                      existing keyed list entry is   * 00555500
*                                      located and/or how key         * 00555600
*                                      comparison is to be performed  * 00555700
*                                      on an existing keyed list      * 00555800
*                                      entry to determine if the      * 00555900
*                                      entry is selectable for        * 00556000
*                                      processing when                * 00556100
*                                      SKEYCOMPARE=YES is specified.  * 00556200
*                                      DEFAULT: EQUAL                 * 00556300
*                                                                     * 00556400
*                                                                     * 00556500
*                                      [SKEYREQTYPE=EQUAL]            * 00556600
*                                          a list entry must have a   * 00556700
*                                          secondary key equal to the * 00556800
*                                          value specified by         * 00556900
*                                          SECONDARYKEY.              * 00557000
*                                                                     * 00557100
*                                          If no such keyed entry     * 00557200
*                                          exists on the list then    * 00557300
*                                          the request will be        * 00557400
*                                          failed.                    * 00557500
*                                                                     * 00557600
*                                      [SKEYREQTYPE=LESSOREQUAL]      * 00557700
*                                          a list entry must have a   * 00557800
*                                          secondary key less than or * 00557900
*                                          equal to the value         * 00558000
*                                          specified by SECONDARYKEY. * 00558100
*                                                                     * 00558200
*                                          If no entries on the list  * 00558300
*                                          have a secondary key value * 00558400
*                                          less than or equal to the  * 00558500
*                                          specified value the        * 00558600
*                                          request will be failed     * 00558700
*                                                                     * 00558800
*                                          If no entries on the list  * 00558900
*                                          have a secondary key value * 00559000
*                                          equal to the value         * 00559100
*                                          specified by SECONDARYKEY, * 00559200
*                                          but entries exists with a  * 00559300
*                                          secondary key value less   * 00559400
*                                          than the specified value   * 00559500
*                                          then the entry with the    * 00559600
*                                          largest secondary key      * 00559700
*                                          value less than the        * 00559800
*                                          specified value is         * 00559900
*                                          selected.  When multiple   * 00560000
*                                          entries have the same      * 00560100
*                                          secondary key value        * 00560200
*                                          DIRECTION is used to       * 00560300
*                                          resolve whether the first  * 00560400
*                                          or last entry with the     * 00560500
*                                          secondary key value is     * 00560600
*                                          selected.                  * 00560700
*                                                                     * 00560800
*                                                                     * 00560900
*                                      [SKEYREQTYPE=GREATEROREQUAL]   * 00561000
*                                                                     * 00561100
*                                          a list entry must have a   * 00561200
*                                          secondary key greater than * 00561300
*                                          or equal to the value      * 00561400
*                                          specified by SECONDARYKEY. * 00561500
*                                                                     * 00561600
*                                          If no entries on the list  * 00561700
*                                          have a secondary key value * 00561800
*                                          greater than or equal to   * 00561900
*                                          the specified value the    * 00562000
*                                          request will be failed.    * 00562100
*                                                                     * 00562200
*                                          If no entries on the list  * 00562300
*                                          have a secondary key value * 00562400
*                                          equal to the value         * 00562500
*                                          specified by SECONDARYKEY, * 00562600
*                                          but entries exists with a  * 00562700
*                                          secondary key value        * 00562800
*                                          greater than the specified * 00562900
*                                          value then the entry with  * 00563000
*                                          the smallest secondary key * 00563100
*                                          value greater than the     * 00563200
*                                          specified value is         * 00563300
*                                          selected.  When multiple   * 00563400
*                                          entries have the same      * 00563500
*                                          secondary key value        * 00563600
*                                          DIRECTION is used to       * 00563700
*                                          resolve whether the first  * 00563800
*                                          or last entry with the     * 00563900
*                                          secondary key value is     * 00564000
*                                          selected.                  * 00564100
*                                                                     * 00564200
*                                      [SKEYREQTYPE=RANGE             * 00564300
*                                          a list entry must have a   * 00564400
*                                          secondary key within a     * 00564500
*                                          specified range of values. * 00564600
*                                          The SECONDARYKEY specified * 00564700
*                                          will be used as the        * 00564800
*                                          beginning of the range of  * 00564900
*                                          key values that will be    * 00565000
*                                          compared with the existing * 00565100
*                                          secondary key.             * 00565200
*                                          SKEYRANGEEND will be used  * 00565300
*                                          as the ending value.  A    * 00565400
*                                          list entry must have a     * 00565500
*                                          secondary key value within * 00565600
*                                          the specified secondary    * 00565700
*                                          key range, inclusive, for  * 00565800
*                                          it to be selectable.       * 00565900
*                                                                     * 00566000
*                                          If no entries on the list  * 00566100
*                                          have a secondary key value * 00566200
*                                          within the specified       * 00566300
*                                          range, the request will be * 00566400
*                                          failed.                    * 00566500
*                                                                     * 00566600
*                                          When multiple entries have * 00566700
*                                          a secondary key value      * 00566800
*                                          within the specified       * 00566900
*                                          range, DIRECTION is used   * 00567000
*                                          to resolve whether the     * 00567100
*                                          first or last entry with   * 00567200
*                                          the secondary key range is * 00567300
*                                          selected.                  * 00567400
*                                                                     * 00567500
*                                          NOTE:  When                * 00567600
*                                          SKEYREQTYPE=RANGE is       * 00567700
*                                          specifed, SKEYCOMPARE=YES  * 00567800
*                                          is required.               * 00567900
*                                                                     * 00568000
*                                                                     * 00568100
*                                          SKEYRANGEEND=xskeyrangeend * 00568200
*                                              ]                      * 00568300
*                                              is the name (RS-type), * 00568400
*                                              or address in register * 00568500
*                                              (2)-(12), of a         * 00568600
*                                              required 32 character  * 00568700
*                                              input specifies the    * 00568800
*                                              ending value for the   * 00568900
*                                              range of keys to be    * 00569000
*                                              compared to the        * 00569100
*                                              secondary key of the   * 00569200
*                                              designated list entry. * 00569300
*                                                                     * 00569400
*                                                                     * 00569500
*                                                                     * 00569600
*                                                                     * 00569700
*                                                                     * 00569800
*                                                                     * 00569900
*                                                                     * 00570000
*                                                                     * 00570100
*                                  [SKEYCOMPARE=NO|YES]             * 00570200
*                                      is an optional keyword input   * 00570300
*                                      that determines whether the    * 00570400
*                                      key value of an existing keyed * 00570500
*                                      list entry is to be compared   * 00570600
*                                      to determine if this entry     * 00570700
*                                      should be selected for         * 00570800
*                                      processing.                    * 00570900
*                                      DEFAULT: NO                    * 00571000
*                                                                     * 00571100
*                                                                     * 00571200
*                                      [SKEYCOMPARE=NO]               * 00571300
*                                          Indicates that no          * 00571400
*                                          secondary key comparison   * 00571500
*                                          will be performed to       * 00571600
*                                          determine if this entry    * 00571700
*                                          should be processed.       * 00571800
*                                                                     * 00571900
*                                          NOTE:  When                * 00572000
*                                          SKEYREQTYPE=RANGE is       * 00572100
*                                          specifed, SKEYCOMPARE=YES  * 00572200
*                                          is required.               * 00572300
*                                                                     * 00572400
*                                      [SKEYCOMPARE=YES]              * 00572500
*                                          Indicates that secondary   * 00572600
*                                          key comparison will be     * 00572700
*                                          performed based on the     * 00572800
*                                          SKEYREQTYPE specified to   * 00572900
*                                          determine if this entry is * 00573000
*                                          selectable for processing. * 00573100
*                                                                     * 00573200
*                                                                     * 00573300
*                                                                     * 00573400
*                                                                     * 00573500
*                                                                     * 00573600
*                                                                     * 00573700
*                                  [KEYCOMPARE=NO|YES               * 00573800
*                                      is an optional keyword input   * 00573900
*                                      that determines whether the    * 00574000
*                                      key value of an existing keyed * 00574100
*                                      list entry is to be compared   * 00574200
*                                      to determine if this entry     * 00574300
*                                      should be selected for         * 00574400
*                                      processing.                    * 00574500
*                                      DEFAULT: NO                    * 00574600
*                                                                     * 00574700
*                                                                     * 00574800
*                                      [KEYCOMPARE=NO]                * 00574900
*                                          Indicates that no entry    * 00575000
*                                          key comparison will be     * 00575100
*                                          performed to determine if  * 00575200
*                                          this entry should be       * 00575300
*                                          processed.                 * 00575400
*                                                                     * 00575500
*                                      [KEYCOMPARE=YES                * 00575600
*                                          Indicates that entry key   * 00575700
*                                          comparison will be         * 00575800
*                                          performed based on the     * 00575900
*                                          KEYREQTYPE specified to    * 00576000
*                                          determine if this entry is * 00576100
*                                          selectable for processing. * 00576200
*                                                                     * 00576300
*                                          KEYCOMPARE=YES is ignored  * 00576400
*                                          if the target structure    * 00576500
*                                          does not support keyed     * 00576600
*                                          entries.                   * 00576700
*                                                                     * 00576800
*                                                                     * 00576900
*                                          ENTRYKEY=xentrykey         * 00577000
*                                              is the name (RS-type), * 00577100
*                                              or address in register * 00577200
*                                              (2)-(12), of a         * 00577300
*                                              required 16 character  * 00577400
*                                              input that specifies   * 00577500
*                                              the key to be compared * 00577600
*                                              to the entry key value * 00577700
*                                              of the list entry.  If * 00577800
*                                              the condition          * 00577900
*                                              specified by           * 00578000
*                                              SKEYREQTYPE is not met * 00578100
*                                              then the IXLLSTM       * 00578200
*                                              operation is           * 00578300
*                                              terminated with no     * 00578400
*                                              resultant change to    * 00578500
*                                              the structure, and     * 00578600
*                                              appropriate return and * 00578700
*                                              reason codes are       * 00578800
*                                              provided to the        * 00578900
*                                              invoker.               * 00579000
*                                                                     * 00579100
*                                                                     * 00579200
*                                              [KEYREQTYPE=EQUAL|LES * 00579300
*                                                  SOREQUAL|GREATEROR * 00579400
*                                                  EQUAL|RANGE]]]    * 00579500
*                                                  is an optional     * 00579600
*                                                  keyword input      * 00579700
*                                                  which specifies    * 00579800
*                                                  how entry key      * 00579900
*                                                  comparison is to   * 00580000
*                                                  be performed on an * 00580100
*                                                  existing keyed     * 00580200
*                                                  list entry to      * 00580300
*                                                  determine if the   * 00580400
*                                                  entry is           * 00580500
*                                                  selectable for     * 00580600
*                                                  processing.        * 00580700
*                                                  DEFAULT: EQUAL     * 00580800
*                                                                     * 00580900
*                                                                     * 00581000
*                                                  [KEYREQTYPE=EQUAL] * 00581100
*                                                                     * 00581200
*                                                      a list entry   * 00581300
*                                                      must have an   * 00581400
*                                                      entry key      * 00581500
*                                                      equal to the   * 00581600
*                                                      value          * 00581700
*                                                      specified by   * 00581800
*                                                      ENTRYKEY.      * 00581900
*                                                                     * 00582000
*                                                  [KEYREQTYPE=LESSOR * 00582100
*                                                      EQUAL]         * 00582200
*                                                      a list entry   * 00582300
*                                                      must have an   * 00582400
*                                                      entry key less * 00582500
*                                                      than or equal  * 00582600
*                                                      to the value   * 00582700
*                                                      specified by   * 00582800
*                                                      ENTRYKEY.      * 00582900
*                                                                     * 00583000
*                                                  [KEYREQTYPE=GREATE * 00583100
*                                                      ROREQUAL]      * 00583200
*                                                      a list entry   * 00583300
*                                                      must have an   * 00583400
*                                                      entry key      * 00583500
*                                                      greater than   * 00583600
*                                                      or equal to    * 00583700
*                                                      the value      * 00583800
*                                                      specified by   * 00583900
*                                                      ENTRYKEY.      * 00584000
*                                                                     * 00584100
*                                                  [KEYREQTYPE=RANGE  * 00584200
*                                                                     * 00584300
*                                                      a list entry   * 00584400
*                                                      must have an   * 00584500
*                                                      entry key      * 00584600
*                                                      within a       * 00584700
*                                                      specified      * 00584800
*                                                      range of       * 00584900
*                                                      values. The    * 00585000
*                                                      ENTRYKEY       * 00585100
*                                                      specified will * 00585200
*                                                      be used as the * 00585300
*                                                      beginning of   * 00585400
*                                                      the range of   * 00585500
*                                                      key values     * 00585600
*                                                      that will be   * 00585700
*                                                      compared with  * 00585800
*                                                      the existing   * 00585900
*                                                      entry key.     * 00586000
*                                                      KEYRANGEEND    * 00586100
*                                                      will be used   * 00586200
*                                                      as the ending  * 00586300
*                                                      value.  A list * 00586400
*                                                      entry must     * 00586500
*                                                      have an entry  * 00586600
*                                                      key value      * 00586700
*                                                      within the     * 00586800
*                                                      specified      * 00586900
*                                                      entry key      * 00587000
*                                                      range,         * 00587100
*                                                      inclusive, for * 00587200
*                                                      it to be       * 00587300
*                                                      selectable.    * 00587400
*                                                                     * 00587500
*                                                                     * 00587600
*                                                      KEYRANGEEND=xk * 00587700
*                                                          eyrangeend * 00587800
*                                                          ]]]        * 00587900
*                                                          is the     * 00588000
*                                                          name       * 00588100
*                                                          (RS-type), * 00588200
*                                                          or address * 00588300
*                                                          in         * 00588400
*                                                          register   * 00588500
*                                                          (2)-(12),  * 00588600
*                                                          of a       * 00588700
*                                                          required   * 00588800
*                                                          16         * 00588900
*                                                          character  * 00589000
*                                                          input      * 00589100
*                                                          specifies  * 00589200
*                                                          the ending * 00589300
*                                                          value for  * 00589400
*                                                          the range  * 00589500
*                                                          of keys to * 00589600
*                                                          be         * 00589700
*                                                          compared   * 00589800
*                                                          to the     * 00589900
*                                                          entry key  * 00590000
*                                                          of the     * 00590100
*                                                          list       * 00590200
*                                                          entry.     * 00590300
*                                                                     * 00590400
*                                                                     * 00590500
*                                                                     * 00590600
*                                                                     * 00590700
*                                                                     * 00590800
*                                                                     * 00590900
*                                                                     * 00591000
*                                                                     * 00591100
*                                                                     * 00591200
*                                                                     * 00591300
*                                                                     * 00591400
*                                                                     * 00591500
*                                                                     * 00591600
*                                                                     * 00591700
*                                                                     * 00591800
*                                                                     * 00591900
*                                                                     * 00592000
*                                                                     * 00592100
*                                                                     * 00592200
*                                                                     * 00592300
*                                                                     * 00592400
*                                                                     * 00592500
*                                                                     * 00592600
*                                                                     * 00592700
*              [VERSCOMPARE=NO|YES                                  * 00592800
*                  is an optional keyword input indicates the version * 00592900
*                  comparison be done for each list entry. The        * 00593000
*                  version number specified by VERSCOMP will be used  * 00593100
*                  to compare each list entry version number.         * 00593200
*                  DEFAULT: NO                                        * 00593300
*                                                                     * 00593400
*                                                                     * 00593500
*                  [VERSCOMPARE=NO]                                   * 00593600
*                      indicates that no version number comparison    * 00593700
*                      should precede processing of any list entries. * 00593800
*                                                                     * 00593900
*                  [VERSCOMPARE=YES                                   * 00594000
*                      indicates that version number comparison       * 00594100
*                      should precede processing of any list entries. * 00594200
*                                                                     * 00594300
*                                                                     * 00594400
*                      VERSCOMP=xverscomp                             * 00594500
*                          is the name (RS-type), or address in       * 00594600
*                          register (2)-(12), of a required 8         * 00594700
*                          character input which specifies a value to * 00594800
*                          be compared to the version number of the   * 00594900
*                          designated list entry.  If the condition   * 00595000
*                          specified by VERSCOMPTYPE is not met for   * 00595100
*                          the current list entry then no processing  * 00595200
*                          is performed for the current entry and     * 00595300
*                          processing continues with the next entry   * 00595400
*                          to be considered.                          * 00595500
*                                                                     * 00595600
*                                                                     * 00595700
*                          [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]        * 00595800
*                              is an optional keyword input which     * 00595900
*                              specifies how the list entry version   * 00596000
*                              number comparison is to be performed.  * 00596100
*                                                                     * 00596200
*                              DEFAULT: EQUAL                         * 00596300
*                                                                     * 00596400
*                                                                     * 00596500
*                              VERSCOMPTYPE=EQUAL                     * 00596600
*                                  The version number for the list    * 00596700
*                                  entry must be equal to the value   * 00596800
*                                  specified for VERSCOMP.            * 00596900
*                                                                     * 00597000
*                                                                     * 00597100
*                              VERSCOMPTYPE=LESSOREQUAL               * 00597200
*                                  The version number for the list    * 00597300
*                                  entry must be less than or equal   * 00597400
*                                  to the value specified for         * 00597500
*                                  VERSCOMP.                          * 00597600
*                                  DEFAULT: Equal                     * 00597700
*                                                                     * 00597800
*                                                                     * 00597900
*                                                                     * 00598000
*                                                                     * 00598100
*                                                                     * 00598200
*                                                                     * 00598300
*                                                                     * 00598400
*                                                                     * 00598500
*                                                                     * 00598600
*                                                                     * 00598700
*                                                                     * 00598800
*          REQUEST=READ_MULT                                          * 00598900
*              Read multiple entries.  Requests that the entry data,  * 00599000
*              the associated adjunct data, or the list entry         * 00599100
*              controls for all allocated entries that meet the       * 00599200
*              criteria specified be read into the storage area       * 00599300
*              specified by BUFFER or the buffers specified by        * 00599400
*              BUFLIST.                                               * 00599500
*                                                                     * 00599600
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00599700
*              AUTHCOMP causes list authority comparison for the      * 00599800
*              designated list to precede processing of any list      * 00599900
*              entries.  If the list authority comparison fails, the  * 00600000
*              list authority, the list control information and       * 00600100
*              appropriate return and reason codes are provided in    * 00600200
*              the ANSAREA.                                           * 00600300
*                                                                     * 00600400
*              LOCKINDEX may optionally be specified in conjunction   * 00600500
*              with LOCKOPER to indicate the index of the serialized  * 00600600
*              list lock to be operated on within the lock table for  * 00600700
*              the list structure. If the lock comparison fails, the  * 00600800
*              lock table entry, and  appropriate return and reason   * 00600900
*              codes are provided in the ANSAREA.                     * 00601000
*                                                                     * 00601100
*              The absence of AUTHCOMPARE or specifying               * 00601200
*              AUTHCOMPARE=NO and the absence of LOCKINDEX indicates  * 00601300
*              no list authority or lock comparisons are to be        * 00601400
*              performed before processing any entries on the list.   * 00601500
*                                                                     * 00601600
*              Specifying LISTNUM in conjunction with LISTCOMPARE=YES * 00601700
*              may optionally be specified to restrict processing to  * 00601800
*              those entries residing on a specific list.  The        * 00601900
*              absence of LISTCOMPARE or specifying LISTCOMPARE=NO    * 00602000
*              indicates no list number comparisons are to be         * 00602100
*              performed when selecting entries to be processed.      * 00602200
*                                                                     * 00602300
*              Specifying VERSCOMPARE=YES in conjunction with         * 00602400
*              VERSCOMP may optionally be used to restrict processing * 00602500
*              to those entries with a version number matching that   * 00602600
*              specified.  The order of entry processing is           * 00602700
*              unpredictable.  The absence of VERSCOMPARE or          * 00602800
*              specifying VERSCOMPARE=NO indicates no version         * 00602900
*              comparisons are to be performed when selecting entries * 00603000
*              to be processed.                                       * 00603100
*                                                                     * 00603200
*              Specifying ENTRYKEY in conjunction with                * 00603300
*              KEYCOMPARE=YES, causes key comparison to be performed  * 00603400
*              as specified by KEYREQTYPE. The absence of KEYCOMPARE, * 00603500
*              or specifying KEYCOMPARE=NO indicates no key value     * 00603600
*              comparisons are performed when selecting entries to be * 00603700
*              processed.                                             * 00603800
*                                                                     * 00603900
*              Specifying SECONDARYKEY in conjunction with            * 00604000
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00604100
*              performed as specified by SKEYREQTYPE. The absence of  * 00604200
*              SKEYCOMPARE, or specifying SKEYCOMPARE=NO indicates no * 00604300
*              secondary key value comparisons are performed when     * 00604400
*              selecting entries to be processed.                     * 00604500
*                                                                     * 00604600
*              In order for any list entries to be processed the list * 00604700
*              authority verification and the lock operation if       * 00604800
*              requested, must succeed.                               * 00604900
*                                                                     * 00605000
*              In order for a particular list entry to be read, the   * 00605100
*              version number comparison, list number comparison and  * 00605200
*              the key comparison, when requested, must succeed       * 00605300
*              otherwise no processing is performed for the current   * 00605400
*              entry and processing continues with the next entry to  * 00605500
*              be considered.                                         * 00605600
*                                                                     * 00605700
*              When adjunct data is requested the adjunct data for    * 00605800
*              the first entry processed is returned in the storage   * 00605900
*              area specified by ADJAREA.  The adjunct data for all   * 00606000
*              other entries is returned in the BUFFER area or the    * 00606100
*              BUFLIST buffers.  When list entry controls are         * 00606200
*              requested the entry controls for the first entry       * 00606300
*              processed is returned in the answer area specified by  * 00606400
*              ANSAREA.  The entry controls for all other entries is  * 00606500
*              returned in the BUFFER area or the BUFLIST buffers.    * 00606600
*                                                                     * 00606700
*              When the request completes successfully the number of  * 00606800
*              entries for which entry data, adjunct data, or list    * 00606900
*              entry controls was read is returned in the answer area * 00607000
*              specified by ANSAREA.                                  * 00607100
*                                                                     * 00607200
*              A READ_MULT request may complete prematurely due to    * 00607300
*              exhaustion of the storage specified by BUFFER or       * 00607400
*              BUFLIST, or if coupling facility model dependent       * 00607500
*              timeout criteria is exceeded.  In this event           * 00607600
*              appropriate return and reason codes are provided, and  * 00607700
*              the number of entries for which data has been returned * 00607800
*              and a restart token or an extended restart token is    * 00607900
*              provided in ANSAREA.  The restart token or an extended * 00608000
*              restart token may be specified as input on a           * 00608100
*              subsequent READ_MULT request to resume processing with * 00608200
*              the appropriate list entry.                            * 00608300
*                                                                     * 00608400
*              Except for designation of the starting point, resumed  * 00608500
*              requests are processed identically to and must meet    * 00608600
*              the same interface requirements as non-resumed         * 00608700
*              requests.  For example, BUFFER area and BUFLIST buffer * 00608800
*              boundary and length requirements are unchanged, and a  * 00608900
*              resumed request may in turn experience premature       * 00609000
*              completion.                                            * 00609100
*                                                                     * 00609200
*              When TYPE=ADJDATA is specified ADJAREA is also         * 00609300
*              required.                                              * 00609400
*                                                                     * 00609500
*                                                                     * 00609600
*                                                                     * 00609700
*              TYPE=ENTDATA|ADJDATA|ECONTROLS                         * 00609800
*                  is a required group of keyword input(s) that       * 00609900
*                  specifies the type of information to be read.  Any * 00610000
*                  combination of the three values may be specified.  * 00610100
*                                                                     * 00610200
*                                                                     * 00610300
*                                                                     * 00610400
*                  TYPE=ENTDATA                                       * 00610500
*                      Indicates that the entry data is to be read.   * 00610600
*                                                                     * 00610700
*                                                                     * 00610800
*                  TYPE=ADJDATA                                       * 00610900
*                      Indicates that the adjunct data is to be read. * 00611000
*                      ADJDATA is only functional for structures that * 00611100
*                      support adjunct data.                          * 00611200
*                                                                     * 00611300
*                      For structures that are allocated with         * 00611400
*                      secondary keys, the first 32 bytes of the      * 00611500
*                      adjunct data will contain the secondary key of * 00611600
*                      the entry.                                     * 00611700
*                                                                     * 00611800
*                  TYPE=ECONTROLS                                     * 00611900
*                      Indicates that list entry control information  * 00612000
*                      is to be read.                                 * 00612100
*                                                                     * 00612200
*                      For structures allocated with secondary keys,  * 00612300
*                      the secondary key is not read by               * 00612400
*                      TYPE(ECONTROLS). The secondary key is read by  * 00612500
*                      TYPE(ADJDATA).                                 * 00612600
*                                                                     * 00612700
*                                                                     * 00612800
*                                                                     * 00612900
*                                                                     * 00613000
*                                                                     * 00613100
*                                                                     * 00613200
*              [ADJAREA=xadjarea|NO_ADJAREA]                        * 00613300
*                  is an optional input.  It is the name (RS-type),   * 00613400
*                  or address in register (2)-(12), of a 64-byte area * 00613500
*                  in virtual storage where entry adjunct data for    * 00613600
*                  the first entry is to be read.                     * 00613700
*                                                                     * 00613800
*                  If the structure was allocated to use secondary    * 00613900
*                  keys, the first 32 bytes of ADJDATA will contain   * 00614000
*                  the secondary key of the entry.                    * 00614100
*                  DEFAULT: NO_ADJAREA                                * 00614200
*                                                                     * 00614300
*                                                                     * 00614400
*                                                                     * 00614500
*                                                                     * 00614600
*              The following is a set of mutually exclusive keys.     * 00614700
*              This set is optional; only one key may be specified.   * 00614800
*                                                                     * 00614900
*                                                                     * 00615000
*                  The RESTOKEN and EXTRESTOKEN keywords are input    * 00615100
*                  fields that name a restart token specifying an     * 00615200
*                  appropriate coupling facility indicator for        * 00615300
*                  resuming requests that complete prematurely.       * 00615400
*                                                                     * 00615500
*                  Specifying an input restart token initialized to   * 00615600
*                  all zeros causes the request to consider all       * 00615700
*                  entries as unprocessed.  Specifying an input       * 00615800
*                  restart token other than one returned from a       * 00615900
*                  previous invocation of the request and not fully   * 00616000
*                  initialized to all zeros will produce              * 00616100
*                  unpredictable request results.                     * 00616200
*                                                                     * 00616300
*                  A restart token is returned in the answer area     * 00616400
*                  specified by ANSAREA when the request completes    * 00616500
*                  prematurely, and may be specified on a subsequent  * 00616600
*                  READ_MULT request to resume the request at an      * 00616700
*                  appropriate point.                                 * 00616800
*                                                                     * 00616900
*                  Requestors who specify IXLCONN ALLOWAUTO=YES must  * 00617000
*                  use the 16-byte extended restart token             * 00617100
*                  (EXTRESTOKEN).  Users who specify IXLCONN          * 00617200
*                  ALLOWAUTO=NO must use the standard 8-byte restart  * 00617300
*                  tokens (RESTOKEN).                                 * 00617400
*                                                                     * 00617500
*              [RESTOKEN=xrestoken|NO_RESTOKEN                      * 00617600
*                  belongs to a set of mutually exclusive keys. It is * 00617700
*                  the name (RS-type), or address in register         * 00617800
*                  (2)-(12), of an optional 8 character input field   * 00617900
*                  that contains a restart token specifying an        * 00618000
*                  appropriate coupling facility indicator for        * 00618100
*                  resuming requests that complete prematurely.       * 00618200
*                                                                     * 00618300
*                  A restart token is returned in the LAARESTOKEN     * 00618400
*                  field of the answer area specified by ANSAREA when * 00618500
*                  the request completes prematurely.                 * 00618600
*                                                                     * 00618700
*                  DEFAULT: NO_RESTOKEN                               * 00618800
*                                                                     * 00618900
*              EXTRESTOKEN=xextrestoken|NO_EXTRESTOKEN]             * 00619000
*                  belongs to a set of mutually exclusive keys. It is * 00619100
*                  the name (RS-type), or address in register         * 00619200
*                  (2)-(12), of an optional 16 character input field  * 00619300
*                  that contains an extended restart token specifying * 00619400
*                  an appropriate coupling facility indicator for     * 00619500
*                  resuming requests that complete prematurely.       * 00619600
*                                                                     * 00619700
*                  A restart token is returned in the LAAEXTRESTOKEN  * 00619800
*                  field of the answer area specified by ANSAREA when * 00619900
*                  the request completes prematurely.                 * 00620000
*                                                                     * 00620100
*                  DEFAULT: NO_EXTRESTOKEN                            * 00620200
*                                                                     * 00620300
*                                                                     * 00620400
*                                                                     * 00620500
*              End of a set of mutually exclusive optional keys.      * 00620600
*              DEFAULT: RESTOKEN                                      * 00620700
*                                                                     * 00620800
*                                                                     * 00620900
*                                                                     * 00621000
*              [LISTCOMPARE=NO|YES                                  * 00621100
*                  is an optional keyword input which determines if   * 00621200
*                  list number comparison should be performed to      * 00621300
*                  determine if list entries should be processed.     * 00621400
*                  DEFAULT: NO                                        * 00621500
*                                                                     * 00621600
*                                                                     * 00621700
*                  [LISTCOMPARE=NO]                                   * 00621800
*                      indicates no list number criteria is to be     * 00621900
*                      applied when selecting entries to be           * 00622000
*                      processed.                                     * 00622100
*                                                                     * 00622200
*                  [LISTCOMPARE=YES                                   * 00622300
*                      indicates that list number comparison should   * 00622400
*                      precede processing of list entries.            * 00622500
*                                                                     * 00622600
*                                                                     * 00622700
*                      LISTNUM=xlistnum                               * 00622800
*                          is the name (RS-type), or address in       * 00622900
*                          register (2)-(12), of a required fullword  * 00623000
*                          input that designates the number of the    * 00623100
*                          list on which the entries to be processed  * 00623200
*                          reside. LISTNUM is used to restrict        * 00623300
*                          processing to those entries residing on    * 00623400
*                          the list specified.                        * 00623500
*                                                                     * 00623600
*                                                                     * 00623700
*                                                                     * 00623800
*                                                                     * 00623900
*                      [AUTHCOMPARE=NO|YES                          * 00624000
*                          is an optional keyword input which         * 00624100
*                          determines whether the list authority      * 00624200
*                          comparison is to be used to determine if   * 00624300
*                          entries on the list should be processed.   * 00624400
*                                                                     * 00624500
*                          AUTHCOMPARE is only meaningful for list    * 00624600
*                          structures allocated on CFLEVEL=1 or       * 00624700
*                          higher CF.                                 * 00624800
*                          DEFAULT: NO                                * 00624900
*                                                                     * 00625000
*                                                                     * 00625100
*                          [AUTHCOMPARE=NO]                           * 00625200
*                              indicates no list authority comparison * 00625300
*                              is to be performed before processing   * 00625400
*                              any entries on the list.               * 00625500
*                                                                     * 00625600
*                          [AUTHCOMPARE=YES                           * 00625700
*                              indicates that list authority          * 00625800
*                              comparison should precede processing   * 00625900
*                              of any entries on the list.            * 00626000
*                                                                     * 00626100
*                                                                     * 00626200
*                              AUTHCOMP=xauthcomp                     * 00626300
*                                  is the name (RS-type), or address  * 00626400
*                                  in register (2)-(12), of a         * 00626500
*                                  required 16 character input that   * 00626600
*                                  specifies a value to be compared   * 00626700
*                                  to the list authority value for    * 00626800
*                                  the designated list.  If the       * 00626900
*                                  condition specified by             * 00627000
*                                  AUTHCOMPTYPE is not met then the   * 00627100
*                                  IXLLSTM operation is terminated,   * 00627200
*                                  and appropriate return and reason  * 00627300
*                                  codes are provided to the invoker. * 00627400
*                                                                     * 00627500
*                                                                     * 00627600
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00627700
*                                      ]]                             * 00627800
*                                      is an optional keyword input   * 00627900
*                                      which specifies how the list   * 00628000
*                                      authority comparison is to be  * 00628100
*                                      performed.                     * 00628200
*                                                                     * 00628300
*                                      DEFAULT: EQUAL                 * 00628400
*                                                                     * 00628500
*                                                                     * 00628600
*                                      AUTHCOMPTYPE=EQUAL             * 00628700
*                                          The list authority for the * 00628800
*                                          list specified by LISTNUM  * 00628900
*                                          must be equal to the value * 00629000
*                                          specified for AUTHCOMP.    * 00629100
*                                                                     * 00629200
*                                                                     * 00629300
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00629400
*                                          The list authority for the * 00629500
*                                          list specified by LISTNUM  * 00629600
*                                          must be less than or equal * 00629700
*                                          to the value specified for * 00629800
*                                          AUTHCOMP.                  * 00629900
*                                                                     * 00630000
*                                                                     * 00630100
*                                                                     * 00630200
*                                                                     * 00630300
*                                                                     * 00630400
*                                                                     * 00630500
*                                                                     * 00630600
*                                                                     * 00630700
*                                                                     * 00630800
*                                                                     * 00630900
*                                                                     * 00631000
*                                                                     * 00631100
*                                                                     * 00631200
*                                                                     * 00631300
*                                                                     * 00631400
*                                                                     * 00631500
*              [KEYCOMPARE=NO|YES                                   * 00631600
*                  is an optional keyword input that determines       * 00631700
*                  whether the key value of an existing keyed list    * 00631800
*                  entry is to be compared to determine if this entry * 00631900
*                  should be selected for processing.  KEYCOMPARE is  * 00632000
*                  only meaningful for list structures allocated on   * 00632100
*                  CFLEVEL=1 or higher CF.                            * 00632200
*                  DEFAULT: NO                                        * 00632300
*                                                                     * 00632400
*                                                                     * 00632500
*                  [KEYCOMPARE=NO]                                    * 00632600
*                      Indicates that no entry key comparison will be * 00632700
*                      performed to determine if this entry should be * 00632800
*                      processed.                                     * 00632900
*                                                                     * 00633000
*                  [KEYCOMPARE=YES                                    * 00633100
*                      Indicates that entry key comparison will be    * 00633200
*                      performed based on the KEYREQTYPE specified to * 00633300
*                      determine if this entry is selectable for      * 00633400
*                      processing.                                    * 00633500
*                                                                     * 00633600
*                      KEYCOMPARE=YES is ignored if the target        * 00633700
*                      structure does not support keyed entries.      * 00633800
*                                                                     * 00633900
*                                                                     * 00634000
*                      ENTRYKEY=xentrykey                             * 00634100
*                          is the name (RS-type), or address in       * 00634200
*                          register (2)-(12), of a required 16        * 00634300
*                          character input that specifies the key to  * 00634400
*                          be used to compare to the entry key of the * 00634500
*                          list entry.  If the condition specified by * 00634600
*                          KEYREQTYPE is not met for the current list * 00634700
*                          entry then no processing is performed for  * 00634800
*                          the current entry, and processing          * 00634900
*                          continues with the next entry to be        * 00635000
*                          considered.                                * 00635100
*                                                                     * 00635200
*                                                                     * 00635300
*                                                                     * 00635400
*                                                                     * 00635500
*                      [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATEROREQUAL| * 00635600
*                          RANGE]]                                   * 00635700
*                          is an optional keyword input which         * 00635800
*                          specifies how entry key comparison is to   * 00635900
*                          be performed on an existing keyed list     * 00636000
*                          entry to determine if the entry is         * 00636100
*                          selectable for processing.                 * 00636200
*                          DEFAULT: EQUAL                             * 00636300
*                                                                     * 00636400
*                                                                     * 00636500
*                          [KEYREQTYPE=EQUAL]                         * 00636600
*                              a list entry must have an entry key    * 00636700
*                              equal to the value specified by        * 00636800
*                              ENTRYKEY.                              * 00636900
*                                                                     * 00637000
*                          [KEYREQTYPE=LESSOREQUAL]                   * 00637100
*                              a list entry must have an entry key    * 00637200
*                              less than or equal to the value        * 00637300
*                              specified by ENTRYKEY.                 * 00637400
*                                                                     * 00637500
*                              KEYREQTYPE=LESSOREQUAL is only valid   * 00637600
*                              when the structure is allocated in a   * 00637700
*                              CFLEVEL=9 or higher CF.                * 00637800
*                                                                     * 00637900
*                          [KEYREQTYPE=GREATEROREQUAL]                * 00638000
*                              a list entry must have an entry key    * 00638100
*                              greater than or equal to the value     * 00638200
*                              specified by ENTRYKEY.                 * 00638300
*                                                                     * 00638400
*                              KEYREQTYPE=GREATEROREQUAL is only      * 00638500
*                              valid when the structure is allocated  * 00638600
*                              in a CFLEVEL=9 or higher CF.           * 00638700
*                                                                     * 00638800
*                          [KEYREQTYPE=RANGE                          * 00638900
*                              a list entry must have an entry key    * 00639000
*                              within a specified range of values.    * 00639100
*                              The ENTRYKEY specified will be used as * 00639200
*                              the beginning of the range of key      * 00639300
*                              values that will be compared with the  * 00639400
*                              existing entry key. KEYRANGEEND will   * 00639500
*                              be used as the ending value.  A list   * 00639600
*                              entry must have an entry key value     * 00639700
*                              within the specified entry key range,  * 00639800
*                              inclusive, for it to be selectable.    * 00639900
*                                                                     * 00640000
*                              KEYREQTYPE=RANGE is only valid when    * 00640100
*                              the structure is allocated in a        * 00640200
*                              CFLEVEL=9 or higher CF.                * 00640300
*                                                                     * 00640400
*                                                                     * 00640500
*                              KEYRANGEEND=xkeyrangeend]]             * 00640600
*                                  is the name (RS-type), or address  * 00640700
*                                  in register (2)-(12), of a         * 00640800
*                                  required 16 character input        * 00640900
*                                  specifies the ending value for the * 00641000
*                                  range of keys to be compared to    * 00641100
*                                  the entry key of the list entry.   * 00641200
*                                                                     * 00641300
*                                                                     * 00641400
*                                                                     * 00641500
*                                                                     * 00641600
*                                                                     * 00641700
*                                                                     * 00641800
*                                                                     * 00641900
*                                                                     * 00642000
*                                                                     * 00642100
*                                                                     * 00642200
*                                                                     * 00642300
*                                                                     * 00642400
*              [SKEYCOMPARE=NO|YES                                  * 00642500
*                  is an optional keyword input that determines       * 00642600
*                  whether the secondary key value of an existing     * 00642700
*                  keyed list entry is to be compared to determine if * 00642800
*                  this entry should be selected for processing.      * 00642900
*                  DEFAULT: NO                                        * 00643000
*                                                                     * 00643100
*                                                                     * 00643200
*                  [SKEYCOMPARE=NO]                                   * 00643300
*                      Indicates that no secondary key comparison     * 00643400
*                      will be performed to determine if this entry   * 00643500
*                      should be processed.                           * 00643600
*                                                                     * 00643700
*                  [SKEYCOMPARE=YES                                   * 00643800
*                      Indicates that secondary key comparison will   * 00643900
*                      be performed based on the SKEYREQTYPE          * 00644000
*                      specified to determine if this entry is        * 00644100
*                      selectable for processing.                     * 00644200
*                                                                     * 00644300
*                      SKEYCOMPARE=YES is ignored if the target       * 00644400
*                      structure was not allocated with secondary     * 00644500
*                      keys.                                          * 00644600
*                                                                     * 00644700
*                                                                     * 00644800
*                      SECONDARYKEY=xsecondarykey                     * 00644900
*                          is the name (RS-type), or address in       * 00645000
*                          register (2)-(12), of a required 32        * 00645100
*                          character input that specifies the         * 00645200
*                          secondary key to be used to compare to the * 00645300
*                          secondary key of the list entry.  If the   * 00645400
*                          condition specified by SKEYREQTYPE is not  * 00645500
*                          met for the current list entry then no     * 00645600
*                          processing is performed for the current    * 00645700
*                          entry, and processing continues with the   * 00645800
*                          next entry to be considered.               * 00645900
*                                                                     * 00646000
*                                                                     * 00646100
*                                                                     * 00646200
*                                                                     * 00646300
*                      [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATEROREQUAL * 00646400
*                          |RANGE]]                                  * 00646500
*                          is an optional keyword input which         * 00646600
*                          specifies how secondary key comparison is  * 00646700
*                          to be performed on an existing keyed list  * 00646800
*                          entry to determine if the entry is         * 00646900
*                          selectable for processing.                 * 00647000
*                          DEFAULT: EQUAL                             * 00647100
*                                                                     * 00647200
*                                                                     * 00647300
*                          [SKEYREQTYPE=EQUAL]                        * 00647400
*                              a list entry must have a secondary key * 00647500
*                              equal to the value specified by        * 00647600
*                              SECONDARYKEY.                          * 00647700
*                                                                     * 00647800
*                          [SKEYREQTYPE=LESSOREQUAL]                  * 00647900
*                              a list entry must have a secondary     * 00648000
*                              less than or equal to the value        * 00648100
*                              specified by SECONDARYKEY.             * 00648200
*                                                                     * 00648300
*                          [SKEYREQTYPE=GREATEROREQUAL]               * 00648400
*                              a list entry must have a secondary key * 00648500
*                              greater than or equal to the value     * 00648600
*                              specified by SECONDARYKEY.             * 00648700
*                                                                     * 00648800
*                          [SKEYREQTYPE=RANGE                         * 00648900
*                              a list entry must have a secondary key * 00649000
*                              within a specified range of values.    * 00649100
*                              The SECONDARYKEY specified will be     * 00649200
*                              used as the beginning of the range of  * 00649300
*                              secondary key values that will be      * 00649400
*                              compared with the secondary key of the * 00649500
*                              designated list entry.  SKEYRANGEEND   * 00649600
*                              will be used as the ending value.  A   * 00649700
*                              list entry must have a secondary key   * 00649800
*                              value within the specified secondary   * 00649900
*                              key range, inclusive, for it to be     * 00650000
*                              selectable.                            * 00650100
*                                                                     * 00650200
*                                                                     * 00650300
*                              SKEYRANGEEND=xskeyrangeend]]           * 00650400
*                                  is the name (RS-type), or address  * 00650500
*                                  in register (2)-(12), of a         * 00650600
*                                  required 32 character input which  * 00650700
*                                  specifies the ending value for the * 00650800
*                                  range of secondary keys to be      * 00650900
*                                  compared to the secondary key of   * 00651000
*                                  the list entry.                    * 00651100
*                                                                     * 00651200
*                                                                     * 00651300
*                                                                     * 00651400
*                                                                     * 00651500
*                                                                     * 00651600
*                                                                     * 00651700
*                                                                     * 00651800
*                                                                     * 00651900
*                                                                     * 00652000
*                                                                     * 00652100
*                                                                     * 00652200
*                                                                     * 00652300
*              [VERSCOMPARE=NO|YES                                  * 00652400
*                  is an optional keyword input that specifies if the * 00652500
*                  version number is to be compared to determine if   * 00652600
*                  entries are to be processed.                       * 00652700
*                  DEFAULT: NO                                        * 00652800
*                                                                     * 00652900
*                                                                     * 00653000
*                  [VERSCOMPARE=NO]                                   * 00653100
*                      indicates no version comparison should be      * 00653200
*                      performed to determine if each list entry      * 00653300
*                      should be processed.                           * 00653400
*                                                                     * 00653500
*                  [VERSCOMPARE=YES                                   * 00653600
*                      indicates that version number comparison       * 00653700
*                      should precede processing of each list entry.  * 00653800
*                                                                     * 00653900
*                                                                     * 00654000
*                      VERSCOMP=xverscomp                             * 00654100
*                          is the name (RS-type), or address in       * 00654200
*                          register (2)-(12), of a required 8         * 00654300
*                          character input which specifies a value to * 00654400
*                          be compared to the version number of the   * 00654500
*                          list entry.  If the condition specified by * 00654600
*                          VERSCOMPTYPE is not met for the current    * 00654700
*                          list entry then no processing is performed * 00654800
*                          for the current entry and processing       * 00654900
*                          continues with the next entry to be        * 00655000
*                          considered.                                * 00655100
*                                                                     * 00655200
*                                                                     * 00655300
*                          [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]        * 00655400
*                              is an optional keyword input which     * 00655500
*                              specifies how the list entry version   * 00655600
*                              number comparison is to be performed.  * 00655700
*                                                                     * 00655800
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00655900
*                              meaningful for list structures         * 00656000
*                              allocated on CFLEVEL=1 or higher CF.   * 00656100
*                                                                     * 00656200
*                              DEFAULT: EQUAL                         * 00656300
*                                                                     * 00656400
*                                                                     * 00656500
*                              VERSCOMPTYPE=EQUAL                     * 00656600
*                                  The version number for the list    * 00656700
*                                  entry must be equal to the value   * 00656800
*                                  specified for VERSCOMP.            * 00656900
*                                                                     * 00657000
*                                                                     * 00657100
*                              VERSCOMPTYPE=LESSOREQUAL               * 00657200
*                                  The version number for the list    * 00657300
*                                  entry must be less than or equal   * 00657400
*                                  to the value specified for         * 00657500
*                                  VERSCOMP.                          * 00657600
*                                  DEFAULT: Equal                     * 00657700
*                                                                     * 00657800
*                                                                     * 00657900
*                                                                     * 00658000
*                                                                     * 00658100
*                                                                     * 00658200
*                                                                     * 00658300
*                                                                     * 00658400
*                                                                     * 00658500
*                                                                     * 00658600
*                                                                     * 00658700
*                                                                     * 00658800
*                                                                     * 00658900
*              The following is a set of mutually exclusive keys.     * 00659000
*              This set is required; only one key must be specified.  * 00659100
*                                                                     * 00659200
*                                                                     * 00659300
*              BUFLIST=[xbuflist]                                     * 00659400
*                  belongs to a set of mutually exclusive keys. It is * 00659500
*                  an output.  It is the name (RS-type), or address   * 00659600
*                  in register (2)-(12), of a 128-byte virtual        * 00659700
*                  storage area containing a list of addresses of     * 00659800
*                  buffers.  These buffers receive output data from   * 00659900
*                  the request, depending on the request specified.   * 00660000
*                  The set of buffers is used as if it were a single  * 00660100
*                  contiguous area for purposes of output.            * 00660200
*                                                                     * 00660300
*                  The format of the list is a set of 8-byte          * 00660400
*                  elements.  The first four bytes of each element is * 00660500
*                  reserved space.  The second four bytes of each     * 00660600
*                  element contains the address of a buffer.          * 00660700
*                                                                     * 00660800
*                  There may be 1 to 16 buffers passed in the list.   * 00660900
*                  Each buffer in the list must be the same size and  * 00661000
*                  must reside in the same address space or data      * 00661100
*                  space.  Data is stored into the buffers in the     * 00661200
*                  order specified.  For READ_MULT requests each      * 00661300
*                  buffer must be 4096 bytes in length and must start * 00661400
*                  on a 4096-byte boundary.                           * 00661500
*                                                                     * 00661600
*                  Upon successful completion of a READ_MULT request  * 00661700
*                  the BUFLIST buffers contain, starting at offset    * 00661800
*                  zero in the first buffer, an array of elements     * 00661900
*                  each of which is constructed as follows (dependent * 00662000
*                  on request options):                               * 00662100
*                                                                     * 00662200
*                  When adjunct data is requested on a READ_MULT      * 00662300
*                  request the adjunct data for the first entry       * 00662400
*                  processed is returned in the storage area          * 00662500
*                  specified by ADJAREA.  The adjunct data for all    * 00662600
*                  other entries is returned in the BUFLIST buffers.  * 00662700
*                  When list entry controls are requested the entry   * 00662800
*                  controls for the first entry processed is returned * 00662900
*                  in the answer area specified by ANSAREA.  The      * 00663000
*                  entry controls for all other entries is returned   * 00663100
*                  in the BUFLIST buffers.                            * 00663200
*                                                                     * 00663300
*                                                                     * 00663400
*                  o   When TYPE=ENTDATA was specified:               * 00663500
*                                                                     * 00663600
*                      Entry data.                                    * 00663700
*                                                                     * 00663800
*                  o   When TYPE=ADJDATA was specified:               * 00663900
*                                                                     * 00664000
*                      Adunct data.                                   * 00664100
*                                                                     * 00664200
*                  o   When TYPE=ECONTROLS was specified:             * 00664300
*                                                                     * 00664400
*                      List entry controls.                           * 00664500
*                                                                     * 00664600
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00664700
*                                                                     * 00664800
*                      Entry data, followed by adjunct data.          * 00664900
*                                                                     * 00665000
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00665100
*                                                                     * 00665200
*                      List entry controls, followed by entry data.   * 00665300
*                                                                     * 00665400
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00665500
*                                                                     * 00665600
*                      List entry controls, followed by adjunct data. * 00665700
*                                                                     * 00665800
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00665900
*                      specified:                                     * 00666000
*                                                                     * 00666100
*                      List entry controls, followed by entry data,   * 00666200
*                      followed by adjunct data.                      * 00666300
*                                                                     * 00666400
*                                                                     * 00666500
*                                                                     * 00666600
*                  One array element is returned for each processed   * 00666700
*                  entry.  The number of elements returned in the     * 00666800
*                  BUFLIST buffers is indicated in the answer area    * 00666900
*                  specified by ANSAREA.  An element length may be    * 00667000
*                  determined by considering the element make-up, the * 00667100
*                  structure element size, the number of elements in  * 00667200
*                  the entry, an adjunct data size of 64 bytes, and   * 00667300
*                  the length of list entry controls.  The length and * 00667400
*                  contents of list entry controls is defined by      * 00667500
*                  mapping macro IXLYLCTL.                            * 00667600
*                                                                     * 00667700
*                  BUFLIST is mutually exclusive with BUFFER.         * 00667800
*                                                                     * 00667900
*                                                                     * 00668000
*                  [BUFADDRTYPE=VIRTUAL|REAL                        * 00668100
*                      is an optional keyword input that specifies    * 00668200
*                      whether the buffer addresses specified in the  * 00668300
*                      BUFLIST list are virtual storage addresses or  * 00668400
*                      real storage addresses.                        * 00668500
*                                                                     * 00668600
*                      DEFAULT: VIRTUAL                               * 00668700
*                                                                     * 00668800
*                                                                     * 00668900
*                      [BUFADDRTYPE=VIRTUAL                           * 00669000
*                          Indicates that the buffer addresses        * 00669100
*                          specified in the BUFLIST list are virtual  * 00669200
*                          storage addresses.                         * 00669300
*                                                                     * 00669400
*                                                                     * 00669500
*                                                                     * 00669600
*                          [PAGEABLE=YES|NO]                        * 00669700
*                              is an optional keyword input that      * 00669800
*                              specifies whether or not the buffers   * 00669900
*                              specified by BUFLIST resides in        * 00670000
*                              pageable storage.                      * 00670100
*                                                                     * 00670200
*                              DEFAULT: YES                           * 00670300
*                                                                     * 00670400
*                                                                     * 00670500
*                              [PAGEABLE=YES                          * 00670600
*                                  Indicates that the BUFLIST buffers * 00670700
*                                  reside in pageable virtual         * 00670800
*                                  storage.                           * 00670900
*                                                                     * 00671000
*                                  This includes disabled reference   * 00671100
*                                  storage, and may include storage   * 00671200
*                                  that has the potential to become   * 00671300
*                                  pageable (such as address space    * 00671400
*                                  storage for which a PGSER FIX has  * 00671500
*                                  been successfully processed).  It  * 00671600
*                                  does not include implicitly        * 00671700
*                                  non-pageable storage (such as is   * 00671800
*                                  obtained from non-pageable         * 00671900
*                                  subpools).                         * 00672000
*                                                                     * 00672100
*                                                                     * 00672200
*                                                                     * 00672300
*                                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY * 00672400
*                                      ]]                            * 00672500
*                                      is the name (RS-type), or      * 00672600
*                                      address in register (2)-(12),  * 00672700
*                                      of an optional 8 bit input     * 00672800
*                                      containing the storage key to  * 00672900
*                                      be used when referencing the   * 00673000
*                                      buffers in the list specified  * 00673100
*                                      by BUFLIST.                    * 00673200
*                                                                     * 00673300
*                                      The high order nibble contains * 00673400
*                                      the storage key, the low order * 00673500
*                                      nibble is ignored.  For        * 00673600
*                                      example, set 'kkkk' in the     * 00673700
*                                      binary bit string 'kkkkxxxx'B  * 00673800
*                                      to correspond to the desired   * 00673900
*                                      storage key.                   * 00674000
*                                                                     * 00674100
*                                      If BUFSTGKEY is not specified, * 00674200
*                                      then all references to the     * 00674300
*                                      BUFLIST buffers are performed  * 00674400
*                                      using the caller's PSW key.    * 00674500
*                                                                     * 00674600
*                                      DEFAULT: CALLERS_KEY           * 00674700
*                                                                     * 00674800
*                                                                     * 00674900
*                                                                     * 00675000
*                              [PAGEABLE=NO]                          * 00675100
*                                  Indicates that the BUFLIST buffers * 00675200
*                                  reside in non-pageable virtual     * 00675300
*                                  storage.                           * 00675400
*                                                                     * 00675500
*                                  This includes implicitly           * 00675600
*                                  non-pageable storage areas.  If    * 00675700
*                                  the virtual storage may            * 00675800
*                                  potentially become pageable, then  * 00675900
*                                  the invoker is responsible for     * 00676000
*                                  ensuring the virtual storage       * 00676100
*                                  remains non-pageable for the       * 00676200
*                                  duration of the request.           * 00676300
*                                                                     * 00676400
*                                  If MODE=ASYNCTOKEN is specified or * 00676500
*                                  MODE=SYNCTOKEN is specified and    * 00676600
*                                  the request does not complete      * 00676700
*                                  synchronously, then the storage    * 00676800
*                                  must remain non-pageable until     * 00676900
*                                  completion of the corresponding    * 00677000
*                                  IXLFCOMP request.  If              * 00677100
*                                  MODE=ASYNCEXIT is specified or     * 00677200
*                                  MODE=SYNCEXIT is specified and the * 00677300
*                                  request does not complete          * 00677400
*                                  synchronously, then the storage    * 00677500
*                                  must remain non-pageable until the * 00677600
*                                  completion exit is driven for the  * 00677700
*                                  request.  If MODE=ASYNCECB is      * 00677800
*                                  specified or MODE=SYNCECB is       * 00677900
*                                  specified and the request does not * 00678000
*                                  complete synchronously, then the   * 00678100
*                                  storage must remain non-pageable   * 00678200
*                                  until the specified ECB is posted  * 00678300
*                                  for the request.                   * 00678400
*                                                                     * 00678500
*                                                                     * 00678600
*                                                                     * 00678700
*                                                                     * 00678800
*                                                                     * 00678900
*                                                                     * 00679000
*                          [BUFALET=xbufalet|NO_BUFALET]]           * 00679100
*                              is the name (RS-type), or address in   * 00679200
*                              register (2)-(12), of an optional      * 00679300
*                              fullword input specifying the ALET     * 00679400
*                              value to be used in referencing all of * 00679500
*                              the buffers specified for BUFLIST      * 00679600
*                                                                     * 00679700
*                              DEFAULT: NO_BUFALET                    * 00679800
*                                                                     * 00679900
*                                                                     * 00680000
*                                                                     * 00680100
*                      [BUFADDRTYPE=REAL                              * 00680200
*                          Indicates that the buffer addresses        * 00680300
*                          specified in the BUFLIST list are real     * 00680400
*                          storage addresses.                         * 00680500
*                                                                     * 00680600
*                                                                     * 00680700
*                          [BUFADDRSIZE=31|64]]                     * 00680800
*                              is an optional keyword input that      * 00680900
*                              specifies whether a 31 or a 64 bit     * 00681000
*                              address is specified by a BUFLIST      * 00681100
*                              entry.                                 * 00681200
*                                                                     * 00681300
*                              DEFAULT: 31                            * 00681400
*                                                                     * 00681500
*                                                                     * 00681600
*                              [BUFADDRSIZE=31]                       * 00681700
*                                  Indicates that the BUFLIST address * 00681800
*                                  is 31 bits in size.                * 00681900
*                                                                     * 00682000
*                              [BUFADDRSIZE=64]]                      * 00682100
*                                  Indicates that the BUFLIST address * 00682200
*                                  is 64 bits in size.                * 00682300
*                                                                     * 00682400
*                                                                     * 00682500
*                                                                     * 00682600
*                                                                     * 00682700
*                                                                     * 00682800
*                                                                     * 00682900
*                                                                     * 00683000
*                                                                     * 00683100
*                                                                     * 00683200
*                                                                     * 00683300
*                  BUFNUM=xbufnum                                     * 00683400
*                      is the name (RS-type), or address in register  * 00683500
*                      (2)-(12), of a required byte input specifying  * 00683600
*                      the number of buffers defined in the BUFLIST   * 00683700
*                      list.                                          * 00683800
*                                                                     * 00683900
*                      BUFNUM values must be in the range of 1 to 16. * 00684000
*                                                                     * 00684100
*                                                                     * 00684200
*                                                                     * 00684300
*                                                                     * 00684400
*              BUFFER=[xbuffer]                                       * 00684500
*                  belongs to a set of mutually exclusive keys. It is * 00684600
*                  an output.  It is the name (RS-type), or address   * 00684700
*                  in register (2)-(12), of a virtual storage area to * 00684800
*                  receive output data from the request.  The BUFSIZE * 00684900
*                  keyword specifies the size of the buffer.          * 00685000
*                                                                     * 00685100
*                  For READ_MULT requests the length of the buffer    * 00685200
*                  must be a multiple of 4096 bytes between 4096 and  * 00685300
*                  65536 and the buffer must start on a 4096-byte     * 00685400
*                  boundary.                                          * 00685500
*                                                                     * 00685600
*                  Upon successful completion of a READ_MULT request  * 00685700
*                  the BUFFER area contains, starting at offset zero  * 00685800
*                  in the first buffer, an array of elements each of  * 00685900
*                  which is constructed as follows (dependent on      * 00686000
*                  request options):                                  * 00686100
*                                                                     * 00686200
*                  When adjunct data is requested on a READ_MULT      * 00686300
*                  request the adjunct data for the first entry       * 00686400
*                  processed is returned in the storage area          * 00686500
*                  specified by ADJAREA.  The adjunct data for all    * 00686600
*                  other entries is returned in the BUFFER area.      * 00686700
*                  When list entry controls are requested the entry   * 00686800
*                  controls for the first entry processed is returned * 00686900
*                  in the answer area specified by ANSAREA.  The      * 00687000
*                  entry controls for all other entries is returned   * 00687100
*                  in the BUFFER area.                                * 00687200
*                                                                     * 00687300
*                                                                     * 00687400
*                  o   When TYPE=ENTDATA was specified:               * 00687500
*                                                                     * 00687600
*                      Entry data.                                    * 00687700
*                                                                     * 00687800
*                  o   When TYPE=ADJDATA was specified:               * 00687900
*                                                                     * 00688000
*                      Adunct data.                                   * 00688100
*                                                                     * 00688200
*                  o   When TYPE=ECONTROLS was specified:             * 00688300
*                                                                     * 00688400
*                      List entry controls.                           * 00688500
*                                                                     * 00688600
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00688700
*                                                                     * 00688800
*                      Entry data, followed by adjunct data.          * 00688900
*                                                                     * 00689000
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00689100
*                                                                     * 00689200
*                      List entry controls, followed by entry data.   * 00689300
*                                                                     * 00689400
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00689500
*                                                                     * 00689600
*                      List entry controls, followed by adjunct data. * 00689700
*                                                                     * 00689800
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00689900
*                      specified:                                     * 00690000
*                                                                     * 00690100
*                      List entry controls, followed by entry data,   * 00690200
*                      followed by adjunct data.                      * 00690300
*                                                                     * 00690400
*                                                                     * 00690500
*                                                                     * 00690600
*                  One array element is returned for each processed   * 00690700
*                  entry.  The number of elements returned in the     * 00690800
*                  BUFFER area is indicated in the answer area        * 00690900
*                  specified by ANSAREA.  An element length may be    * 00691000
*                  determined by considering the element make-up, the * 00691100
*                  structure element size, the number of elements in  * 00691200
*                  the entry, an adjunct data size of 64 bytes, and   * 00691300
*                  the length of list entry controls.  The length and * 00691400
*                  contents of list entry controls is defined by      * 00691500
*                  mapping macro IXLYLCTL.                            * 00691600
*                                                                     * 00691700
*                                                                     * 00691800
*                  [PAGEABLE=YES|NO]                                * 00691900
*                      is an optional keyword input that specifies    * 00692000
*                      whether or not the storage area specified by   * 00692100
*                      BUFFER resides in pageable storage.            * 00692200
*                                                                     * 00692300
*                      DEFAULT: YES                                   * 00692400
*                                                                     * 00692500
*                                                                     * 00692600
*                      [PAGEABLE=YES                                  * 00692700
*                          Indicates that the BUFFER area resides in  * 00692800
*                          pageable virtual storage.                  * 00692900
*                                                                     * 00693000
*                          This includes disabled reference storage,  * 00693100
*                          and may include storage that has the       * 00693200
*                          potential to become pageable It does not   * 00693300
*                          include implicitly non-pageable storage    * 00693400
*                          (such as is obtained from non-pageable     * 00693500
*                          subpools).                                 * 00693600
*                                                                     * 00693700
*                                                                     * 00693800
*                                                                     * 00693900
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00694000
*                              is the name (RS-type), or address in   * 00694100
*                              register (2)-(12), of an optional 8    * 00694200
*                              bit input containing the storage key   * 00694300
*                              to be used when referencing the        * 00694400
*                              storage area specified by BUFFER.      * 00694500
*                                                                     * 00694600
*                              The high order nibble contains the     * 00694700
*                              storage key, the low order nibble is   * 00694800
*                              ignored.  For example, set 'kkkk' in   * 00694900
*                              the binary bit string 'kkkkxxxx'B to   * 00695000
*                              correspond to the desired storage key. * 00695100
*                                                                     * 00695200
*                              If BUFSTGKEY is not specified, then    * 00695300
*                              all references to the BUFFER buffer    * 00695400
*                              storage are performed using the        * 00695500
*                              caller's PSW key.                      * 00695600
*                                                                     * 00695700
*                              DEFAULT: CALLERS_KEY                   * 00695800
*                                                                     * 00695900
*                                                                     * 00696000
*                                                                     * 00696100
*                      [PAGEABLE=NO]                                  * 00696200
*                          Indicates that the BUFFER area resides in  * 00696300
*                          non-pageable virtual storage.              * 00696400
*                                                                     * 00696500
*                          This includes implicitly non-pageable      * 00696600
*                          storage areas.  If the virtual storage may * 00696700
*                          potentially become pageable, then the      * 00696800
*                          invoker is responsible for ensuring the    * 00696900
*                          virtual storage remains non-pageable for   * 00697000
*                          the duration of the request.               * 00697100
*                                                                     * 00697200
*                          If MODE=ASYNCTOKEN is specified or         * 00697300
*                          MODE=SYNCTOKEN is specified and the        * 00697400
*                          request does not complete synchronously,   * 00697500
*                          then the storage must remain non-pageable  * 00697600
*                          until completion of the corresponding      * 00697700
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00697800
*                          specified or MODE=SYNCEXIT is specified    * 00697900
*                          and the request does not complete          * 00698000
*                          synchronously, then the storage must       * 00698100
*                          remain non-pageable until the completion   * 00698200
*                          exit is driven for the request.  If        * 00698300
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00698400
*                          is specified and the request does not      * 00698500
*                          complete synchronously, then the storage   * 00698600
*                          must remain non-pageable until the         * 00698700
*                          specified ECB is posted for the request.   * 00698800
*                                                                     * 00698900
*                                                                     * 00699000
*                                                                     * 00699100
*                                                                     * 00699200
*                                                                     * 00699300
*                                                                     * 00699400
*                  BUFSIZE=xbufsize                                   * 00699500
*                      is the name (RS-type), or address in register  * 00699600
*                      (2)-(12), of a required fullword input         * 00699700
*                      specifying the length of the virtual storage   * 00699800
*                      area specified for BUFFER in bytes.            * 00699900
*                                                                     * 00700000
*                                                                     * 00700100
*                                                                     * 00700200
*                                                                     * 00700300
*                                                                     * 00700400
*                                                                     * 00700500
*              End of a set of mutually exclusive required keys.      * 00700600
*                                                                     * 00700700
*                                                                     * 00700800
*          REQUEST=DELETE_MULT                                        * 00700900
*              Delete multiple entries.  Requests that all entries    * 00701000
*              meeting specified criteria be removed from whatever    * 00701100
*              list they reside on and returned to the pool of free   * 00701200
*              entries for reuse.                                     * 00701300
*                                                                     * 00701400
*              Specifying AUTHCOMPARE=YES and AUTHCOMP causes list    * 00701500
*              authority comparison for the designated list to        * 00701600
*              precede processing of any list entries.  If the list   * 00701700
*              authority comparison fails, the list authority, the    * 00701800
*              list control information and appropriate return and    * 00701900
*              reason codes are provided in the ANSAREA.              * 00702000
*                                                                     * 00702100
*              LOCKINDEX may optionally be specified in conjunction   * 00702200
*              with LOCKOPER to indicate the index of the serialized  * 00702300
*              list lock to be operated on within the lock table for  * 00702400
*              the list structure. If the lock comparison fails, the  * 00702500
*              lock table entry, and appropriate return and reason    * 00702600
*              codes are provided in the ANSAREA.                     * 00702700
*                                                                     * 00702800
*              The absence of AUTHCOMPARE or specifying               * 00702900
*              AUTHCOMPARE=NO and the absence of LOCKINDEX indicates  * 00703000
*              no list authority or lock comparisons before           * 00703100
*              processing any entries on the list.                    * 00703200
*                                                                     * 00703300
*              Specifying LISTNUM in conjunction with LISTCOMPARE may * 00703400
*              optionally be specified to restrict processing to      * 00703500
*              those entries residing on a specific list.  The        * 00703600
*              absence of LISTCOMPARE or specifying LISTCOMPARE=NO    * 00703700
*              indicates no list number comparisons are to be         * 00703800
*              performed when selecting entries to be processed.      * 00703900
*                                                                     * 00704000
*              Specifying VERSCOMPARE=YES in conjunction with         * 00704100
*              VERSCOMP may optionally be used to restrict processing * 00704200
*              to those entries with a version number matching that   * 00704300
*              specified by VERSCOMPTYPE.  The order of entry         * 00704400
*              processing is unpredictable.  The absence of           * 00704500
*              VERSCOMPARE or specifying VERSCOMPARE=NO indicates no  * 00704600
*              version comparisons are to be performed when selecting * 00704700
*              entries to be processed.                               * 00704800
*                                                                     * 00704900
*              Specifying ENTRYKEY in conjunction with                * 00705000
*              KEYCOMPARE=YES, causes key comparison to be performed  * 00705100
*              as specified by KEYREQTYPE. The absence of KEYCOMPARE, * 00705200
*              or specifying KEYCOMPARE=NO indicates no key value     * 00705300
*              comparisons are performed when selecting entries to be * 00705400
*              processed.                                             * 00705500
*                                                                     * 00705600
*              Specifying SECONDARYKEY in conjunction with            * 00705700
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00705800
*              performed as specified by SKEYREQTYPE. The absence of  * 00705900
*              SKEYCOMPARE, or specifying SKEYCOMPARE=NO indicates no * 00706000
*              secondary key value comparisons are performed when     * 00706100
*              selecting entries to be processed.                     * 00706200
*                                                                     * 00706300
*              In order for a list entry to be processed, the list    * 00706400
*              number comparison, the list authority verification and * 00706500
*              the lock operation if requested, must succeed.  In     * 00706600
*              order for a particular list entry to be deleted, the   * 00706700
*              version number verification, and the key comparison,   * 00706800
*              when requested, must succeed otherwise no processing   * 00706900
*              is performed for the current entry and processing      * 00707000
*              continues with the next entry to be considered.        * 00707100
*                                                                     * 00707200
*              When the request completes successfully the number of  * 00707300
*              entries deleted as a result of this request is         * 00707400
*              returned in the answer area specified by ANSAREA.      * 00707500
*                                                                     * 00707600
*              A DELETE_MULT request may complete prematurely if      * 00707700
*              coupling facility model dependent timeout criteria is  * 00707800
*              exceeded.  In this event appropriate return and reason * 00707900
*              codes are provided, and the number of entries deleted  * 00708000
*              and a restart token or an extended restart token is    * 00708100
*              provided in ANSAREA.  This restart token or an         * 00708200
*              extended restart token may be specified as input on a  * 00708300
*              subsequent DELETE_MULT request to resume processing    * 00708400
*              with the appropriate list entry.                       * 00708500
*                                                                     * 00708600
*              Except for designation of the starting point, resumed  * 00708700
*              requests are processed identically to and must meet    * 00708800
*              the same interface requirements as non-resumed         * 00708900
*              requests.  A resumed request may in turn experience    * 00709000
*              premature completion.                                  * 00709100
*                                                                     * 00709200
*                                                                     * 00709300
*              The following is a set of mutually exclusive keys.     * 00709400
*              This set is optional; only one key may be specified.   * 00709500
*                                                                     * 00709600
*                                                                     * 00709700
*                  The RESTOKEN and EXTRESTOKEN keywords are input    * 00709800
*                  fields that name a restart token specifying an     * 00709900
*                  appropriate coupling facility indicator for        * 00710000
*                  resuming requests that complete prematurely.       * 00710100
*                                                                     * 00710200
*                  Specifying an input restart token initialized to   * 00710300
*                  all zeros causes the request to consider all       * 00710400
*                  entries as unprocessed.  Specifying an input       * 00710500
*                  restart token other than one returned from a       * 00710600
*                  previous invocation of the request and not fully   * 00710700
*                  initialized to all zeros will produce              * 00710800
*                  unpredictable request results.                     * 00710900
*                                                                     * 00711000
*                  A restart token is returned in the answer area     * 00711100
*                  specified by ANSAREA when the request completes    * 00711200
*                  prematurely, and may be specified on a subsequent  * 00711300
*                  DELETE_MULT request to resume the request at an    * 00711400
*                  appropriate point.                                 * 00711500
*                                                                     * 00711600
*                  Requestors who specify IXLCONN ALLOWAUTO=YES must  * 00711700
*                  use the 16-byte extended restart token             * 00711800
*                  (EXTRESTOKEN).  Users who specify IXLCONN          * 00711900
*                  ALLOWAUTO=NO must use the standard 8-byte restart  * 00712000
*                  tokens (RESTOKEN).                                 * 00712100
*                                                                     * 00712200
*              [RESTOKEN=xrestoken|NO_RESTOKEN                      * 00712300
*                  belongs to a set of mutually exclusive keys. It is * 00712400
*                  the name (RS-type), or address in register         * 00712500
*                  (2)-(12), of an optional 8 character input field   * 00712600
*                  that contains a restart token specifying an        * 00712700
*                  appropriate coupling facility indicator for        * 00712800
*                  resuming requests that complete prematurely.       * 00712900
*                                                                     * 00713000
*                  A restart token is returned in the LAARESTOKEN     * 00713100
*                  field of the answer area specified by ANSAREA when * 00713200
*                  the request completes prematurely.                 * 00713300
*                                                                     * 00713400
*                  DEFAULT: NO_RESTOKEN                               * 00713500
*                                                                     * 00713600
*              EXTRESTOKEN=xextrestoken|NO_EXTRESTOKEN]             * 00713700
*                  belongs to a set of mutually exclusive keys. It is * 00713800
*                  the name (RS-type), or address in register         * 00713900
*                  (2)-(12), of an optional 16 character input field  * 00714000
*                  that contains an extended restart token specifying * 00714100
*                  an appropriate coupling facility indicator for     * 00714200
*                  resuming requests that complete prematurely.       * 00714300
*                                                                     * 00714400
*                  A restart token is returned in the LAAEXTRESTOKEN  * 00714500
*                  field of the answer area specified by ANSAREA when * 00714600
*                  the request completes prematurely.                 * 00714700
*                                                                     * 00714800
*                  DEFAULT: NO_EXTRESTOKEN                            * 00714900
*                                                                     * 00715000
*                                                                     * 00715100
*                                                                     * 00715200
*              End of a set of mutually exclusive optional keys.      * 00715300
*              DEFAULT: RESTOKEN                                      * 00715400
*                                                                     * 00715500
*                                                                     * 00715600
*                                                                     * 00715700
*              [LISTCOMPARE=NO|YES                                  * 00715800
*                  is an optional keyword input which determines if   * 00715900
*                  the list number is to be compared to determine if  * 00716000
*                  entries should be processed.                       * 00716100
*                  DEFAULT: NO                                        * 00716200
*                                                                     * 00716300
*                                                                     * 00716400
*                  [LISTCOMPARE=NO]                                   * 00716500
*                      indicates no list number criteria is to be     * 00716600
*                      applied when selecting entries to be           * 00716700
*                      processed.                                     * 00716800
*                                                                     * 00716900
*                  [LISTCOMPARE=YES                                   * 00717000
*                      indicates that list number comparison should   * 00717100
*                      precede processing of any list entries.        * 00717200
*                                                                     * 00717300
*                                                                     * 00717400
*                      LISTNUM=xlistnum                               * 00717500
*                          is the name (RS-type), or address in       * 00717600
*                          register (2)-(12), of a required fullword  * 00717700
*                          input designates the number of the list on * 00717800
*                          which the entries to be processed reside.  * 00717900
*                          LISTNUM is used to restrict processing to  * 00718000
*                          those entries residing on the list         * 00718100
*                          specified.                                 * 00718200
*                                                                     * 00718300
*                                                                     * 00718400
*                                                                     * 00718500
*                                                                     * 00718600
*                      [AUTHCOMPARE=NO|YES                          * 00718700
*                          is an optional keyword input which         * 00718800
*                          determines whether the list authority      * 00718900
*                          comparison is to be used to determine if   * 00719000
*                          entries on the list should be processed.   * 00719100
*                                                                     * 00719200
*                          AUTHCOMPARE is only meaningful for list    * 00719300
*                          structures allocated on CFLEVEL=1 or       * 00719400
*                          higher CF.                                 * 00719500
*                          DEFAULT: NO                                * 00719600
*                                                                     * 00719700
*                                                                     * 00719800
*                          [AUTHCOMPARE=NO]                           * 00719900
*                              indicates no list authority comparison * 00720000
*                              is to be performed before processing   * 00720100
*                              any entries on the list.               * 00720200
*                                                                     * 00720300
*                          [AUTHCOMPARE=YES                           * 00720400
*                              indicates that list authority          * 00720500
*                              comparison should precede processing   * 00720600
*                              of any entries on the list.            * 00720700
*                                                                     * 00720800
*                                                                     * 00720900
*                              AUTHCOMP=xauthcomp                     * 00721000
*                                  is the name (RS-type), or address  * 00721100
*                                  in register (2)-(12), of a         * 00721200
*                                  required 16 character input which  * 00721300
*                                  specifies a value to be compared   * 00721400
*                                  to the list authority value for    * 00721500
*                                  the designated list.  If the       * 00721600
*                                  condition specified by             * 00721700
*                                  AUTHCOMPTYPE is not met then the   * 00721800
*                                  IXLLSTM operation is terminated    * 00721900
*                                  with no resultant change to the    * 00722000
*                                  structure, and appropriate return  * 00722100
*                                  and reason codes are provided to   * 00722200
*                                  the invoker.                       * 00722300
*                                                                     * 00722400
*                                                                     * 00722500
*                                  [AUTHCOMPTYPE=EQUAL|LESSOREQUAL] * 00722600
*                                      ]]                             * 00722700
*                                      is an optional keyword input   * 00722800
*                                      which specifies how the list   * 00722900
*                                      authority comparison is to be  * 00723000
*                                      performed.                     * 00723100
*                                                                     * 00723200
*                                      DEFAULT: EQUAL                 * 00723300
*                                                                     * 00723400
*                                                                     * 00723500
*                                      AUTHCOMPTYPE=EQUAL             * 00723600
*                                          The list authority for the * 00723700
*                                          list specified by LISTNUM  * 00723800
*                                          must be equal to the value * 00723900
*                                          specified for AUTHCOMP.    * 00724000
*                                                                     * 00724100
*                                                                     * 00724200
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00724300
*                                          The list authority for the * 00724400
*                                          list specified by LISTNUM  * 00724500
*                                          must be less than or equal * 00724600
*                                          to the value specified for * 00724700
*                                          AUTHCOMP.                  * 00724800
*                                                                     * 00724900
*                                                                     * 00725000
*                                                                     * 00725100
*                                                                     * 00725200
*                                                                     * 00725300
*                                                                     * 00725400
*                                                                     * 00725500
*                                                                     * 00725600
*                                                                     * 00725700
*                                                                     * 00725800
*                                                                     * 00725900
*                                                                     * 00726000
*                                                                     * 00726100
*                                                                     * 00726200
*                                                                     * 00726300
*                                                                     * 00726400
*              [KEYCOMPARE=NO|YES                                   * 00726500
*                  is an optional keyword input that determines       * 00726600
*                  whether the key value of an existing keyed list    * 00726700
*                  entry is to be compared to determine if this entry * 00726800
*                  should be selected for processing.  KEYCOMPARE is  * 00726900
*                  only meaningful for list structures allocated on   * 00727000
*                  CFLEVEL=1 or higher CF.                            * 00727100
*                  DEFAULT: NO                                        * 00727200
*                                                                     * 00727300
*                                                                     * 00727400
*                  [KEYCOMPARE=NO]                                    * 00727500
*                      Indicates that no entry key comparison will be * 00727600
*                      performed to determine if this entry should be * 00727700
*                      processed.                                     * 00727800
*                                                                     * 00727900
*                  [KEYCOMPARE=YES                                    * 00728000
*                      Indicates that entry key comparison will be    * 00728100
*                      performed based on the KEYREQTYPE specified to * 00728200
*                      determine if this entry is selectable for      * 00728300
*                      processing.                                    * 00728400
*                                                                     * 00728500
*                      KEYCOMPARE=YES is ignored if the target        * 00728600
*                      structure does not support keyed entries.      * 00728700
*                                                                     * 00728800
*                                                                     * 00728900
*                      ENTRYKEY=xentrykey                             * 00729000
*                          is the name (RS-type), or address in       * 00729100
*                          register (2)-(12), of a required 16        * 00729200
*                          character input that specifies the key to  * 00729300
*                          be used to compare to the entry key of the * 00729400
*                          list entry.  If the condition specified by * 00729500
*                          KEYREQTYPE is not met for the current list * 00729600
*                          entry then no processing is performed for  * 00729700
*                          the current entry, and processing          * 00729800
*                          continues with the next entry to be        * 00729900
*                          considered.                                * 00730000
*                                                                     * 00730100
*                                                                     * 00730200
*                                                                     * 00730300
*                                                                     * 00730400
*                      [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATEROREQUAL| * 00730500
*                          RANGE]]                                   * 00730600
*                          is an optional keyword input which         * 00730700
*                          specifies how entry Key comparison is to   * 00730800
*                          be performed on an existing keyed list     * 00730900
*                          entry to determine if the entry is         * 00731000
*                          selectable for processing.                 * 00731100
*                          DEFAULT: EQUAL                             * 00731200
*                                                                     * 00731300
*                                                                     * 00731400
*                          [KEYREQTYPE=EQUAL]                         * 00731500
*                              a list entry must have an entry key    * 00731600
*                              equal to the value specified by        * 00731700
*                              ENTRYKEY.                              * 00731800
*                                                                     * 00731900
*                          [KEYREQTYPE=LESSOREQUAL]                   * 00732000
*                              a list entry must have an entry key    * 00732100
*                              less than or equal to the value        * 00732200
*                              specified by ENTRYKEY.                 * 00732300
*                                                                     * 00732400
*                              KEYREQTYPE=LESSOREQUAL is only valid   * 00732500
*                              when the structure is allocated in a   * 00732600
*                              CFLEVEL=9 or higher CF.                * 00732700
*                                                                     * 00732800
*                          [KEYREQTYPE=GREATEROREQUAL]                * 00732900
*                              a list entry must have an entry key    * 00733000
*                              greater than or equal to the value     * 00733100
*                              specified by ENTRYKEY.                 * 00733200
*                                                                     * 00733300
*                              KEYREQTYPE=GREATEROREQUAL is only      * 00733400
*                              valid when the structure is allocated  * 00733500
*                              in a CFLEVEL=9 or higher CF.           * 00733600
*                                                                     * 00733700
*                          [KEYREQTYPE=RANGE                          * 00733800
*                              a list entry must have an entry key    * 00733900
*                              within a specified range of values.    * 00734000
*                              The ENTRYKEY specified will be used as * 00734100
*                              the beginning of the range of key      * 00734200
*                              values that will be compared with the  * 00734300
*                              existing entry key. KEYRANGEEND will   * 00734400
*                              be used as the ending value.  A list   * 00734500
*                              entry must have an entry key value     * 00734600
*                              within the specified entry key range,  * 00734700
*                              inclusive, for it to be selectable.    * 00734800
*                                                                     * 00734900
*                              KEYREQTYPE=RANGE is only valid when    * 00735000
*                              the structure is allocated in a        * 00735100
*                              CFLEVEL=9 or higher CF.                * 00735200
*                                                                     * 00735300
*                                                                     * 00735400
*                              KEYRANGEEND=xkeyrangeend]]             * 00735500
*                                  is the name (RS-type), or address  * 00735600
*                                  in register (2)-(12), of a         * 00735700
*                                  required 16 character input        * 00735800
*                                  specifies the ending value for the * 00735900
*                                  range of keys to be compared to    * 00736000
*                                  the entry key of the list entry.   * 00736100
*                                                                     * 00736200
*                                                                     * 00736300
*                                                                     * 00736400
*                                                                     * 00736500
*                                                                     * 00736600
*                                                                     * 00736700
*                                                                     * 00736800
*                                                                     * 00736900
*                                                                     * 00737000
*                                                                     * 00737100
*                                                                     * 00737200
*                                                                     * 00737300
*              [SKEYCOMPARE=NO|YES                                  * 00737400
*                  is an optional keyword input that determines       * 00737500
*                  whether the secondary key value of an existing     * 00737600
*                  keyed list entry is to be compared to determine if * 00737700
*                  this entry should be selected for processing.      * 00737800
*                  DEFAULT: NO                                        * 00737900
*                                                                     * 00738000
*                                                                     * 00738100
*                  [SKEYCOMPARE=NO]                                   * 00738200
*                      Indicates that no secondary key comparison     * 00738300
*                      will be performed to determine if this entry   * 00738400
*                      should be processed.                           * 00738500
*                                                                     * 00738600
*                  [SKEYCOMPARE=YES                                   * 00738700
*                      Indicates that secondary key comparison will   * 00738800
*                      be performed based on the SKEYREQTYPE          * 00738900
*                      specified to determine if this entry is        * 00739000
*                      selectable for processing.                     * 00739100
*                                                                     * 00739200
*                      SKEYCOMPARE=YES is ignored if the target       * 00739300
*                      structure was not allocated with secondary     * 00739400
*                      keys.                                          * 00739500
*                                                                     * 00739600
*                                                                     * 00739700
*                      SECONDARYKEY=xsecondarykey                     * 00739800
*                          is the name (RS-type), or address in       * 00739900
*                          register (2)-(12), of a required 32        * 00740000
*                          character input that specifies the         * 00740100
*                          secondary key to be used to compare to the * 00740200
*                          secondary key of the list entry.  If the   * 00740300
*                          condition specified by SKEYREQTYPE is not  * 00740400
*                          met for the current list entry then no     * 00740500
*                          processing is performed for the current    * 00740600
*                          entry, and processing continues with the   * 00740700
*                          next entry to be considered.               * 00740800
*                                                                     * 00740900
*                                                                     * 00741000
*                                                                     * 00741100
*                                                                     * 00741200
*                      [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATEROREQUAL * 00741300
*                          |RANGE]]                                  * 00741400
*                          is an optional keyword input which         * 00741500
*                          specifies how secondary key comparison is  * 00741600
*                          to be performed on an existing keyed list  * 00741700
*                          entry to determine if the entry is         * 00741800
*                          selectable for processing.                 * 00741900
*                          DEFAULT: EQUAL                             * 00742000
*                                                                     * 00742100
*                                                                     * 00742200
*                          [SKEYREQTYPE=EQUAL]                        * 00742300
*                              a list entry must have a secondary key * 00742400
*                              equal to the value specified by        * 00742500
*                              SECONDARYKEY.                          * 00742600
*                                                                     * 00742700
*                          [SKEYREQTYPE=LESSOREQUAL]                  * 00742800
*                              a list entry must have a secondary key * 00742900
*                              less than or equal to the value        * 00743000
*                              specified by SECONDARYKEY.             * 00743100
*                                                                     * 00743200
*                          [SKEYREQTYPE=GREATEROREQUAL]               * 00743300
*                              a list entry must have a secondary key * 00743400
*                              greater than or equal to the value     * 00743500
*                              specified by SECONDARYKEY.             * 00743600
*                                                                     * 00743700
*                          [SKEYREQTYPE=RANGE                         * 00743800
*                              a list entry must have a secondary key * 00743900
*                              within a specified range of values.    * 00744000
*                              The SECONDARYKEY specified will be     * 00744100
*                              used as the beginning of the range of  * 00744200
*                              secondary key values that will be      * 00744300
*                              compared with the existing secondary   * 00744400
*                              key of the designated list entry.      * 00744500
*                              SKEYRANGEEND will be used as the       * 00744600
*                              ending value.  A list entry must have  * 00744700
*                              a secondary key value within the       * 00744800
*                              specified secondary key range,         * 00744900
*                              inclusive, for it to be selectable.    * 00745000
*                                                                     * 00745100
*                                                                     * 00745200
*                              SKEYRANGEEND=xskeyrangeend]]           * 00745300
*                                  is the name (RS-type), or address  * 00745400
*                                  in register (2)-(12), of a         * 00745500
*                                  required 32 character input which  * 00745600
*                                  specifies the ending value for the * 00745700
*                                  range of secondary keys to be      * 00745800
*                                  compared to the secondary key of   * 00745900
*                                  the list entry.                    * 00746000
*                                                                     * 00746100
*                                                                     * 00746200
*                                                                     * 00746300
*                                                                     * 00746400
*                                                                     * 00746500
*                                                                     * 00746600
*                                                                     * 00746700
*                                                                     * 00746800
*                                                                     * 00746900
*                                                                     * 00747000
*                                                                     * 00747100
*                                                                     * 00747200
*              [VERSCOMPARE=NO|YES                                  * 00747300
*                  is an optional keyword input indicates the version * 00747400
*                  comparison be done for each list entry. The        * 00747500
*                  version number specified by VERSCOMP will be used  * 00747600
*                  to compare each list entry version number.         * 00747700
*                  DEFAULT: NO                                        * 00747800
*                                                                     * 00747900
*                                                                     * 00748000
*                  [VERSCOMPARE=NO]                                   * 00748100
*                      indicates no version criteria is to be applied * 00748200
*                      when selecting entries to be processed.        * 00748300
*                                                                     * 00748400
*                  [VERSCOMPARE=YES                                   * 00748500
*                      indicates that version number comparison       * 00748600
*                      should precede processing of any list entries. * 00748700
*                                                                     * 00748800
*                                                                     * 00748900
*                      VERSCOMP=xverscomp                             * 00749000
*                          is the name (RS-type), or address in       * 00749100
*                          register (2)-(12), of a required 8         * 00749200
*                          character input which specifies a value to * 00749300
*                          be compared to the version number of the   * 00749400
*                          designated list entry.  If the condition   * 00749500
*                          specified by VERSCOMPTYPE is not met for   * 00749600
*                          the current list entry then no processing  * 00749700
*                          is performed for the current entry and     * 00749800
*                          processing continues with the next entry   * 00749900
*                          to be considered.                          * 00750000
*                                                                     * 00750100
*                                                                     * 00750200
*                          [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]        * 00750300
*                              is an optional keyword input which     * 00750400
*                              specifies how the list entry version   * 00750500
*                              number comparison is to be performed.  * 00750600
*                                                                     * 00750700
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00750800
*                              meaningful for list structures         * 00750900
*                              allocated on CFLEVEL=1 or higher CF.   * 00751000
*                                                                     * 00751100
*                              DEFAULT: EQUAL                         * 00751200
*                                                                     * 00751300
*                                                                     * 00751400
*                              VERSCOMPTYPE=EQUAL                     * 00751500
*                                  The version number for the list    * 00751600
*                                  entry must be equal to the value   * 00751700
*                                  specified for VERSCOMP.            * 00751800
*                                                                     * 00751900
*                                                                     * 00752000
*                              VERSCOMPTYPE=LESSOREQUAL               * 00752100
*                                  The version number for the list    * 00752200
*                                  entry must be less than or equal   * 00752300
*                                  to the value specified for         * 00752400
*                                  VERSCOMP.                          * 00752500
*                                  DEFAULT: Equal                     * 00752600
*                                                                     * 00752700
*                                                                     * 00752800
*                                                                     * 00752900
*                                                                     * 00753000
*                                                                     * 00753100
*                                                                     * 00753200
*                                                                     * 00753300
*                                                                     * 00753400
*                                                                     * 00753500
*                                                                     * 00753600
*                                                                     * 00753700
*          REQUEST=MOVE_ENTRYLIST                                     * 00753800
*              Move by entry list.  Requests that all entries         * 00753900
*              specified by the list of EntryIDs, or EntryNames in    * 00754000
*              the storage area specified by BUFFER or the buffers    * 00754100
*              specified by BUFLIST be moved from the current source  * 00754200
*              location to a designated target location.              * 00754300
*                                                                     * 00754400
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00754500
*              AUTHCOMP causes list authority comparison for the      * 00754600
*              designated list to precede processing of any list      * 00754700
*              entries.  If the list authority verification fails,    * 00754800
*              the list authority, the list control information and   * 00754900
*              appropriate return and reason codes are provided in    * 00755000
*              the ANSAREA.                                           * 00755100
*                                                                     * 00755200
*              LOCKINDEX may optionally be specified in conjunction   * 00755300
*              with LOCKOPER to indicate the index of the serialized  * 00755400
*              list lock to be operated on within the lock table for  * 00755500
*              the list structure. If the lock comparison fails, lock * 00755600
*              table entry, and appropriate return and reason codes   * 00755700
*              are provided in the ANSAREA.                           * 00755800
*                                                                     * 00755900
*              In order for any list entries to be moved, the list    * 00756000
*              authority comparison and the lock operation, when      * 00756100
*              requested, must succeed.                               * 00756200
*                                                                     * 00756300
*              Specifying VERSCOMPARE=YES in conjunction with         * 00756400
*              VERSCOMP may be specified to limit moving of entries   * 00756500
*              to those with a matching version number.               * 00756600
*              VERSCOMPARE=YES indicates the version comparison be    * 00756700
*              done for each list entry. The version number specified * 00756800
*              by VERSCOMP will be used to compare each list entry    * 00756900
*              version number.  VERSCOMPARE=BYENTRY indicates the     * 00757000
*              version comparison be done for each list entry. The    * 00757100
*              version number specified in the BUFFER or BUFLIST for  * 00757200
*              each entry will be used to compare each list entry     * 00757300
*              version number.                                        * 00757400
*                                                                     * 00757500
*              LISTNUM may optionally be specified in conjunction     * 00757600
*              with LISTCOMPARE=YES causes list number comparison to  * 00757700
*              be performed before processing each list entry.        * 00757800
*                                                                     * 00757900
*              Specifying ENTRYKEY in conjunction with                * 00758000
*              KEYCOMPARE=YES, causes entry key comparison to be      * 00758100
*              performed as specified by KEYREQTYPE.                  * 00758200
*                                                                     * 00758300
*              Specifying SECONDARYKEY in conjunction with            * 00758400
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00758500
*              performed as specified by SKEYREQTYPE.                 * 00758600
*                                                                     * 00758700
*              The absence of VERSCOMPARE, KEYCOMPARE, SKEYCOMPARE,   * 00758800
*              or LISTCOMPARE or specifying VERSCOMPARE=NO,           * 00758900
*              KEYCOMPARE=NO, SKEYCOMPARE=NO, or LISTCOMPARE=NO       * 00759000
*              indicates no version number, entry key value,          * 00759100
*              secondary key value, or list comparisons are performed * 00759200
*              when selecting entries to be processed.                * 00759300
*                                                                     * 00759400
*              In order for a particular list entry to be moved, the  * 00759500
*              version number comparison, list number comparison and  * 00759600
*              key comparison, when requested must succeed. If the    * 00759700
*              list number, version number or key comparison fails,   * 00759800
*              and MISCOMPARE=HALT was specified, the request will be * 00759900
*              terminated, and the list entry controls and            * 00760000
*              appropriate return and reason codes are provided in    * 00760100
*              the ANSAREA.  When MISCOMPARE=CONTINUE is specified,   * 00760200
*              or MISCOMPARE is not specified, processing of the      * 00760300
*              current list entry is terminated, and processing       * 00760400
*              continues with the next list entry.                    * 00760500
*                                                                     * 00760600
*              The BUFFER or BUFLIST contains an input array of       * 00760700
*              elements.  Each array element contains the information * 00760800
*              needed to identify the entry to be moved and may also  * 00760900
*              designate the key to be assigned, the version number   * 00761000
*              to be compared and the version number to be assigned.  * 00761100
*              Array elements are mapped by the IXLYMELI mapping      * 00761200
*              macro.  The array elements are indexed with the first  * 00761300
*              element (index 1) starting at offset zero in the       * 00761400
*              BUFFER or BUFLIST area.                                * 00761500
*                                                                     * 00761600
*              When the request completes successfully the number of  * 00761700
*              entries moved for this request is returned in the      * 00761800
*              answer area specified by ANSAREA. Entry key values are * 00761900
*              also returned in LISTKEYAREA when MOVETOKEY=LISTKEY is * 00762000
*              specified on the request.                              * 00762100
*                                                                     * 00762200
*              If any entry specified in the input array does not     * 00762300
*              exist then processing is halted, the count of list     * 00762400
*              entries moved and the current array element index of   * 00762500
*              the non-existent list entry are returned in the answer * 00762600
*              area.  The entry key value for each array element is   * 00762700
*              also returned in LISTKEYAREA if MOVETOKEY=LISTKEY was  * 00762800
*              specified on the request.  In this event all specified * 00762900
*              entries preceding the offending entry have been        * 00763000
*              processed.  All succeeding entries have not been       * 00763100
*              processed.                                             * 00763200
*                                                                     * 00763300
*              A MOVE_ENTRYLIST request may complete prematurely if   * 00763400
*              coupling facility model dependent timeout criteria is  * 00763500
*              exceeded.  In this event appropriate return and reason * 00763600
*              codes are provided, and the number of entries moved    * 00763700
*              thus far and the index of the first unprocessed entry  * 00763800
*              identifier or name is provided in ANSAREA.  The entry  * 00763900
*              key value for each array entry is also returned in     * 00764000
*              LISTKEYAREA if MOVETOKEY=LISTKEY was specified on the  * 00764100
*              request.  The request may subsequently be resumed for  * 00764200
*              the sublist of remaining unprocessed EntryIDs or       * 00764300
*              EntryNames specifying the index returned in the answer * 00764400
*              area on keyword FIRSTELEM.                             * 00764500
*                                                                     * 00764600
*              Resumed requests are processed identically to and must * 00764700
*              meet the same interface requirements as original       * 00764800
*              requests.  A resumed request may in turn experience    * 00764900
*              premature completion.                                  * 00765000
*                                                                     * 00765100
*              MOVE_ENTRYLIST is only valid when the structure is     * 00765200
*              allocated in a CFLEVEL=9 or higher CF.                 * 00765300
*                                                                     * 00765400
*                                                                     * 00765500
*              [FIRSTELEM=xfirstelem|1]                             * 00765600
*                  is the name (RS-type), or address in register      * 00765700
*                  (2)-(12), of an optional halfword input specifying * 00765800
*                  the index of the first array element to be         * 00765900
*                  processed.                                         * 00766000
*                                                                     * 00766100
*                  The value must specify one of the array elements   * 00766200
*                  passed in the BUFFER area or the BUFLIST buffers.  * 00766300
*                  An index value of 1 references the first array     * 00766400
*                  element in the BUFFER area or in the first BUFLIST * 00766500
*                  buffer.                                            * 00766600
*                                                                     * 00766700
*                  DEFAULT: 1                                         * 00766800
*                                                                     * 00766900
*                                                                     * 00767000
*                                                                     * 00767100
*                                                                     * 00767200
*              LASTELEM=xlastelem                                     * 00767300
*                  is the name (RS-type), or address in register      * 00767400
*                  (2)-(12), of a required halfword input specifying  * 00767500
*                  the index of the last array element to be          * 00767600
*                  processed.                                         * 00767700
*                                                                     * 00767800
*                  The specified value must be greater than or equal  * 00767900
*                  to the specified FIRSTELEM value and must specify  * 00768000
*                  one of the array elements passed in the BUFFER     * 00768100
*                  area or the BUFLIST buffers.                       * 00768200
*                                                                     * 00768300
*                                                                     * 00768400
*                                                                     * 00768500
*                                                                     * 00768600
*              [MISCOMPARE=CONTINUE|HALT]                           * 00768700
*                  is an optional keyword input indicates whether     * 00768800
*                  processing should continue to the next entry or    * 00768900
*                  halt when the version number compare, list number  * 00769000
*                  compare or key compare when requested is not       * 00769100
*                  successful for the current entry.                  * 00769200
*                  DEFAULT: CONTINUE                                  * 00769300
*                                                                     * 00769400
*                                                                     * 00769500
*                  MISCOMPARE=CONTINUE                                * 00769600
*                      is an optional keyword input that indicates    * 00769700
*                      that processing should continue to the next    * 00769800
*                      entry when any of the version number, list     * 00769900
*                      number, or key comparisons, when specified,    * 00770000
*                      are not successful.                            * 00770100
*                                                                     * 00770200
*                  MISCOMPARE=HALT                                    * 00770300
*                      is an optional keyword input that indicates    * 00770400
*                      that processing should halt and not continue   * 00770500
*                      to the next entry when the version number,     * 00770600
*                      list number, or key comparisons, when          * 00770700
*                      specified are not successful. Processing for   * 00770800
*                      the command is stopped, list entry controls    * 00770900
*                      and the appropriate return and reason codes    * 00771000
*                      will be returned in the ANSAREA.               * 00771100
*                      DEFAULT: CONTINUE                              * 00771200
*                                                                     * 00771300
*                                                                     * 00771400
*                                                                     * 00771500
*                                                                     * 00771600
*                                                                     * 00771700
*                                                                     * 00771800
*              LISTTYPE=NAMELIST|IDLIST                             * 00771900
*                  is a required keyword input that specifies whether * 00772000
*                  the input in the BUFFER area or the BUFLIST        * 00772100
*                  buffers for the request consists of an array of    * 00772200
*                  elements whose first field is an EntryID or an     * 00772300
*                  EntryName.                                         * 00772400
*                                                                     * 00772500
*                                                                     * 00772600
*                  LISTTYPE=NAMELIST                                  * 00772700
*                      The input in the BUFFER area or the BUFLIST    * 00772800
*                      buffers contains an array of elements, where   * 00772900
*                      the first field in each array element is the   * 00773000
*                      entry name of the list entry.                  * 00773100
*                                                                     * 00773200
*                      LISTTYPE=NAMELIST is not allowed for           * 00773300
*                      structures that do not support named entries.  * 00773400
*                                                                     * 00773500
*                  LISTTYPE=IDLIST                                    * 00773600
*                      The input in the BUFFER area or the BUFLIST    * 00773700
*                      buffers contains an array of elements, where   * 00773800
*                      the first field in each array element is the   * 00773900
*                      EntryID of the list entry. The EntryId may be  * 00774000
*                      either system generated or user provided.      * 00774100
*                                                                     * 00774200
*                                                                     * 00774300
*                      [KEYCOMPARE=NO|YES                           * 00774400
*                          is an optional keyword input that          * 00774500
*                          determines whether the key value of an     * 00774600
*                          existing keyed list entry is to be         * 00774700
*                          compared to determine if this entry should * 00774800
*                          be selected for processing.                * 00774900
*                          DEFAULT: NO                                * 00775000
*                                                                     * 00775100
*                                                                     * 00775200
*                          [KEYCOMPARE=NO]                            * 00775300
*                              Indicates that no entry key comparison * 00775400
*                              will be performed to determine if this * 00775500
*                              entry should be processed.             * 00775600
*                                                                     * 00775700
*                          [KEYCOMPARE=YES                            * 00775800
*                              Indicates that entry key comparison    * 00775900
*                              will be performed based on the         * 00776000
*                              KEYREQTYPE specified to determine if   * 00776100
*                              this entry is selectable for           * 00776200
*                              processing.                            * 00776300
*                                                                     * 00776400
*                              KEYCOMPARE=YES is ignored if the       * 00776500
*                              target structure does not support      * 00776600
*                              keyed entries.                         * 00776700
*                                                                     * 00776800
*                                                                     * 00776900
*                              ENTRYKEY=xentrykey                     * 00777000
*                                  is the name (RS-type), or address  * 00777100
*                                  in register (2)-(12), of a         * 00777200
*                                  required 16 character input that   * 00777300
*                                  specifies the key to be used to    * 00777400
*                                  compare to the entry key.  If the  * 00777500
*                                  condition specified by KEYREQTYPE  * 00777600
*                                  is not met for the current list    * 00777700
*                                  entry then no processing is        * 00777800
*                                  performed for the current entry,   * 00777900
*                                  and processing either continues    * 00778000
*                                  with the next entry to be          * 00778100
*                                  considered, or is terminated based * 00778200
*                                  on the value specified for         * 00778300
*                                  MISCOMPARE.                        * 00778400
*                                                                     * 00778500
*                                                                     * 00778600
*                                                                     * 00778700
*                                                                     * 00778800
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00778900
*                                  OREQUAL|RANGE]]                   * 00779000
*                                  is an optional keyword input which * 00779100
*                                  specifies how entry key comparison * 00779200
*                                  is to be performed on an existing  * 00779300
*                                  keyed list entry to determine if   * 00779400
*                                  the entry is selectable for        * 00779500
*                                  processing.                        * 00779600
*                                  DEFAULT: EQUAL                     * 00779700
*                                                                     * 00779800
*                                                                     * 00779900
*                                  [KEYREQTYPE=EQUAL]                 * 00780000
*                                      a list entry must have an      * 00780100
*                                      entry key equal to the value   * 00780200
*                                      specified by ENTRYKEY.         * 00780300
*                                                                     * 00780400
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00780500
*                                      a list entry must have an      * 00780600
*                                      entry key less than or equal   * 00780700
*                                      to the value specified by      * 00780800
*                                      ENTRYKEY.                      * 00780900
*                                                                     * 00781000
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00781100
*                                      a list entry must have an      * 00781200
*                                      entry key greater than or      * 00781300
*                                      equal to the value specified   * 00781400
*                                      by ENTRYKEY.                   * 00781500
*                                                                     * 00781600
*                                  [KEYREQTYPE=RANGE                  * 00781700
*                                      a list entry must have an      * 00781800
*                                      entry key within a specified   * 00781900
*                                      range of values. The ENTRYKEY  * 00782000
*                                      specified will be used as the  * 00782100
*                                      beginning of the range of key  * 00782200
*                                      values that will be compared   * 00782300
*                                      with the existing entry key.   * 00782400
*                                      KEYRANGEEND will be used as    * 00782500
*                                      the ending value.  A list      * 00782600
*                                      entry must have an entry key   * 00782700
*                                      value within the specified     * 00782800
*                                      entry key range, inclusive,    * 00782900
*                                      for it to be selectable.       * 00783000
*                                                                     * 00783100
*                                                                     * 00783200
*                                      KEYRANGEEND=xkeyrangeend]]     * 00783300
*                                          is the name (RS-type), or  * 00783400
*                                          address in register        * 00783500
*                                          (2)-(12), of a required 16 * 00783600
*                                          character input specifies  * 00783700
*                                          the ending value for the   * 00783800
*                                          range of keys to be        * 00783900
*                                          compared to the entry key  * 00784000
*                                          of the list entry.         * 00784100
*                                                                     * 00784200
*                                                                     * 00784300
*                                                                     * 00784400
*                                                                     * 00784500
*                                                                     * 00784600
*                                                                     * 00784700
*                                                                     * 00784800
*                                                                     * 00784900
*                                                                     * 00785000
*                                                                     * 00785100
*                                                                     * 00785200
*                                                                     * 00785300
*                      [SKEYCOMPARE=NO|YES                          * 00785400
*                          is an optional keyword input that          * 00785500
*                          determines whether the secondary key value * 00785600
*                          of an existing keyed list entry is to be   * 00785700
*                          compared to determine if this entry should * 00785800
*                          be selected for processing.                * 00785900
*                          DEFAULT: NO                                * 00786000
*                                                                     * 00786100
*                                                                     * 00786200
*                          [SKEYCOMPARE=NO]                           * 00786300
*                              Indicates that no secondary key        * 00786400
*                              comparison will be performed to        * 00786500
*                              determine if this entry should be      * 00786600
*                              processed.                             * 00786700
*                                                                     * 00786800
*                          [SKEYCOMPARE=YES                           * 00786900
*                              Indicates that secondary key           * 00787000
*                              comparison will be performed based on  * 00787100
*                              the SKEYREQTYPE specified to determine * 00787200
*                              if this entry is selectable for        * 00787300
*                              processing.                            * 00787400
*                                                                     * 00787500
*                              SKEYCOMPARE=YES is ignored if the      * 00787600
*                              target structure was not allocated     * 00787700
*                              with secondary keys.                   * 00787800
*                                                                     * 00787900
*                                                                     * 00788000
*                              SECONDARYKEY=xsecondarykey             * 00788100
*                                  is the name (RS-type), or address  * 00788200
*                                  in register (2)-(12), of a         * 00788300
*                                  required 32 character input that   * 00788400
*                                  specifies the secondary key to be  * 00788500
*                                  used to compare to the secondary   * 00788600
*                                  key of the list entry.  If the     * 00788700
*                                  condition specified by SKEYREQTYPE * 00788800
*                                  is not met for the current list    * 00788900
*                                  entry then no processing is        * 00789000
*                                  performed for the current entry,   * 00789100
*                                  and processing continues with the  * 00789200
*                                  next entry to be considered.       * 00789300
*                                                                     * 00789400
*                                                                     * 00789500
*                                                                     * 00789600
*                                                                     * 00789700
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00789800
*                                  ROREQUAL|RANGE]]                  * 00789900
*                                  is an optional keyword input which * 00790000
*                                  specifies how secondary key        * 00790100
*                                  comparison is to be performed on   * 00790200
*                                  an existing keyed list entry to    * 00790300
*                                  determine if the entry is          * 00790400
*                                  selectable for processing.         * 00790500
*                                  DEFAULT: EQUAL                     * 00790600
*                                                                     * 00790700
*                                                                     * 00790800
*                                  [SKEYREQTYPE=EQUAL]                * 00790900
*                                      a list entry must have a       * 00791000
*                                      secondary key equal to the     * 00791100
*                                      value specified by             * 00791200
*                                      SECONDARYKEY.                  * 00791300
*                                                                     * 00791400
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00791500
*                                      a list entry must have a       * 00791600
*                                      secondary key less than or     * 00791700
*                                      equal to the value specified   * 00791800
*                                      by SECONDARYKEY.               * 00791900
*                                                                     * 00792000
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00792100
*                                      a list entry must have a       * 00792200
*                                      secondary key greater than or  * 00792300
*                                      equal to the value specified   * 00792400
*                                      by SECONDARYKEY.               * 00792500
*                                                                     * 00792600
*                                  [SKEYREQTYPE=RANGE                 * 00792700
*                                      a list entry must have a       * 00792800
*                                      secondary key within a         * 00792900
*                                      specified range of values. The * 00793000
*                                      SECONDARYKEY specified will be * 00793100
*                                      used as the beginning of the   * 00793200
*                                      range of secondary key values  * 00793300
*                                      that will be compared with the * 00793400
*                                      secondary key of the           * 00793500
*                                      designated list entry.         * 00793600
*                                      SKEYRANGEEND will be used as   * 00793700
*                                      the ending value.  A list      * 00793800
*                                      entry must have a secondary    * 00793900
*                                      key value within the specified * 00794000
*                                      secondary key range,           * 00794100
*                                      inclusive, for it to be        * 00794200
*                                      selectable.                    * 00794300
*                                                                     * 00794400
*                                                                     * 00794500
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00794600
*                                                                     * 00794700
*                                          is the name (RS-type), or  * 00794800
*                                          address in register        * 00794900
*                                          (2)-(12), of a required 32 * 00795000
*                                          character input which      * 00795100
*                                          specifies the ending value * 00795200
*                                          for the range of secondary * 00795300
*                                          keys to be compared to the * 00795400
*                                          secondary key of the list  * 00795500
*                                          entry.                     * 00795600
*                                                                     * 00795700
*                                                                     * 00795800
*                                                                     * 00795900
*                                                                     * 00796000
*                                                                     * 00796100
*                                                                     * 00796200
*                                                                     * 00796300
*                                                                     * 00796400
*                                                                     * 00796500
*                                                                     * 00796600
*                                                                     * 00796700
*                                                                     * 00796800
*                      [MOVETOKEY=UNCHANGED|TARGETKEY|LISTKEY]      * 00796900
*                          is an optional keyword input that          * 00797000
*                          indicates how the key is to be assigned to * 00797100
*                          the list entry when it is moved to the     * 00797200
*                          MOVETOLIST.  MOVETOKEY may only be         * 00797300
*                          specified for structures that support      * 00797400
*                          keyed entries.                             * 00797500
*                          DEFAULT: UNCHANGED                         * 00797600
*                                                                     * 00797700
*                                                                     * 00797800
*                          [MOVETOKEY=UNCHANGED]                      * 00797900
*                              The current entry key value assigned   * 00798000
*                              to the list entry will remain          * 00798100
*                              unchanged.                             * 00798200
*                                                                     * 00798300
*                          [MOVETOKEY=TARGETKEY]                      * 00798400
*                                                                     * 00798500
*                              The MOVETOKEY provided in the array    * 00798600
*                              element in the BUFFER or the BUFLIST   * 00798700
*                              buffer will be assigned to the list    * 00798800
*                              entry when it is moved to the target   * 00798900
*                              list.                                  * 00799000
*                                                                     * 00799100
*                          [MOVETOKEY=LISTKEY                         * 00799200
*                              The current list key value will be     * 00799300
*                              assigned to the list entry when it is  * 00799400
*                              moved to the target list.              * 00799500
*                                                                     * 00799600
*                                                                     * 00799700
*                              [LISTKEYINC=xlistkeyinc|NO]          * 00799800
*                                  is the name (RS-type), or address  * 00799900
*                                  in register (2)-(12), of an        * 00800000
*                                  optional fullword input which      * 00800100
*                                  specifies a value to be added to   * 00800200
*                                  the list key after the entry key   * 00800300
*                                  is set to the list key value.      * 00800400
*                                                                     * 00800500
*                                  If the result of adding the value  * 00800600
*                                  specified by LISTKEYINC to the     * 00800700
*                                  target list key value is greater   * 00800800
*                                  than the maximum list key value    * 00800900
*                                  then the request will be failed.   * 00801000
*                                                                     * 00801100
*                                  DEFAULT: NO                        * 00801200
*                                                                     * 00801300
*                                                                     * 00801400
*                                                                     * 00801500
*                                                                     * 00801600
*                              [LISTKEYAREA=xlistkeyarea|NO]]       * 00801700
*                                  is an optional input.  It is the   * 00801800
*                                  name (RS-type), or address in      * 00801900
*                                  register (2)-(12), of a virtual    * 00802000
*                                  storage area in which entry key    * 00802100
*                                  values will be placed when the     * 00802200
*                                  current list key value has been    * 00802300
*                                  assigned to list entries.  This is * 00802400
*                                  a 112 byte area that will contain  * 00802500
*                                  an array of entry keys.            * 00802600
*                                                                     * 00802700
*                                  List key information will be       * 00802800
*                                  placed in the LISTKEYAREA when the * 00802900
*                                  current list key value contains a  * 00803000
*                                  new list key has been assigned to  * 00803100
*                                  the entry key when the request     * 00803200
*                                  completes successfully, the        * 00803300
*                                  model-dependent timeout has been   * 00803400
*                                  exceeded or a list entry does not  * 00803500
*                                  exist.                             * 00803600
*                                  DEFAULT: NO                        * 00803700
*                                                                     * 00803800
*                                                                     * 00803900
*                                                                     * 00804000
*                                                                     * 00804100
*                                                                     * 00804200
*                                                                     * 00804300
*                                                                     * 00804400
*                                                                     * 00804500
*                      [MOVETOSKEY=UNCHANGED|TARGETKEY]             * 00804600
*                          is an optional keyword input that          * 00804700
*                          indicates how the key is to be assigned to * 00804800
*                          the list entry when it is moved to the     * 00804900
*                          MOVETOLIST.  MOVETOSKEY may only be        * 00805000
*                          specified for structures that support      * 00805100
*                          secondary keyed entries.                   * 00805200
*                          DEFAULT: UNCHANGED                         * 00805300
*                                                                     * 00805400
*                                                                     * 00805500
*                          [MOVETOSKEY=UNCHANGED]                     * 00805600
*                              The current entry key value assigned   * 00805700
*                              to the list entry will remain          * 00805800
*                              unchanged.                             * 00805900
*                                                                     * 00806000
*                          [MOVETOSKEY=TARGETKEY]                     * 00806100
*                                                                     * 00806200
*                              The MOVETOSKEY provided in the array   * 00806300
*                              element in the BUFFER or the BUFLIST   * 00806400
*                              buffer will be assigned to the list    * 00806500
*                              entry when it is moved to the target   * 00806600
*                              list.                                  * 00806700
*                                                                     * 00806800
*                                                                     * 00806900
*                                                                     * 00807000
*                                                                     * 00807100
*                                                                     * 00807200
*                                                                     * 00807300
*                                                                     * 00807400
*                                                                     * 00807500
*                                                                     * 00807600
*                                                                     * 00807700
*              [LISTCOMPARE=NO|YES                                  * 00807800
*                  is an optional keyword input which determines if   * 00807900
*                  the list number is to be compared to determine if  * 00808000
*                  entries should be processed.                       * 00808100
*                  DEFAULT: NO                                        * 00808200
*                                                                     * 00808300
*                                                                     * 00808400
*                  [LISTCOMPARE=NO]                                   * 00808500
*                      indicates no list number criteria is to be     * 00808600
*                      applied when selecting entries to be           * 00808700
*                      processed.                                     * 00808800
*                                                                     * 00808900
*                  [LISTCOMPARE=YES                                   * 00809000
*                      indicates that list number comparison should   * 00809100
*                      precede processing of each list entry.         * 00809200
*                                                                     * 00809300
*                                                                     * 00809400
*                      LISTNUM=xlistnum                               * 00809500
*                          is the name (RS-type), or address in       * 00809600
*                          register (2)-(12), of a required fullword  * 00809700
*                          input that designates the number of the    * 00809800
*                          list on which the entries to be processed  * 00809900
*                          reside. If the list comparison fails for   * 00810000
*                          the current list entry, processing either  * 00810100
*                          continues to the next entry, or is         * 00810200
*                          terminated based on the value specified by * 00810300
*                          MISCOMPARE.                                * 00810400
*                                                                     * 00810500
*                                                                     * 00810600
*                          [AUTHCOMPARE=NO|YES                      * 00810700
*                              is an optional keyword input which     * 00810800
*                              determines whether the list authority  * 00810900
*                              comparison is to be used to determine  * 00811000
*                              if entries on the list should be       * 00811100
*                              processed.                             * 00811200
*                              DEFAULT: NO                            * 00811300
*                                                                     * 00811400
*                                                                     * 00811500
*                              [AUTHCOMPARE=NO]                       * 00811600
*                                  indicates no list authority        * 00811700
*                                  comparison is to be performed      * 00811800
*                                  before processing any entries on   * 00811900
*                                  the list.                          * 00812000
*                                                                     * 00812100
*                              [AUTHCOMPARE=YES                       * 00812200
*                                  indicates that list authority      * 00812300
*                                  comparison should precede          * 00812400
*                                  processing of any entries on the   * 00812500
*                                  list.                              * 00812600
*                                                                     * 00812700
*                                                                     * 00812800
*                                  AUTHCOMP=xauthcomp                 * 00812900
*                                      is the name (RS-type), or      * 00813000
*                                      address in register (2)-(12),  * 00813100
*                                      of a required 16 character     * 00813200
*                                      input which specifies a value  * 00813300
*                                      to be compared to the list     * 00813400
*                                      authority value for the        * 00813500
*                                      designated list.  If the       * 00813600
*                                      condition specified by         * 00813700
*                                      AUTHCOMPTYPE is not met then   * 00813800
*                                      the IXLLSTM operation is       * 00813900
*                                      terminated, and appropriate    * 00814000
*                                      return and reason codes are    * 00814100
*                                      provided to the invoker.       * 00814200
*                                                                     * 00814300
*                                                                     * 00814400
*                                      [AUTHCOMPTYPE=EQUAL|LESSOREQU * 00814500
*                                          AL]]]                     * 00814600
*                                          is an optional keyword     * 00814700
*                                          input which specifies how  * 00814800
*                                          the list authority         * 00814900
*                                          comparison is to be        * 00815000
*                                          performed.                 * 00815100
*                                                                     * 00815200
*                                          DEFAULT: EQUAL             * 00815300
*                                                                     * 00815400
*                                                                     * 00815500
*                                          AUTHCOMPTYPE=EQUAL         * 00815600
*                                              The list authority for * 00815700
*                                              the list specified by  * 00815800
*                                              LISTNUM must be equal  * 00815900
*                                              to the value specified * 00816000
*                                              for AUTHCOMP.          * 00816100
*                                                                     * 00816200
*                                                                     * 00816300
*                                          AUTHCOMPTYPE=LESSOREQUAL   * 00816400
*                                                                     * 00816500
*                                              The list authority for * 00816600
*                                              the list specified by  * 00816700
*                                              LISTNUM must be less   * 00816800
*                                              than or equal to the   * 00816900
*                                              value specified for    * 00817000
*                                              AUTHCOMP.              * 00817100
*                                                                     * 00817200
*                                                                     * 00817300
*                                                                     * 00817400
*                                                                     * 00817500
*                                                                     * 00817600
*                                                                     * 00817700
*                                                                     * 00817800
*                                                                     * 00817900
*                                                                     * 00818000
*                                                                     * 00818100
*                                                                     * 00818200
*                                                                     * 00818300
*                                                                     * 00818400
*                                                                     * 00818500
*                                                                     * 00818600
*                                                                     * 00818700
*                                                                     * 00818800
*                                                                     * 00818900
*              [VERSCOMPARE=NO|BYENTRY|YES                          * 00819000
*                  is an optional keyword input that indicates the    * 00819100
*                  version comparison is to be done for each list     * 00819200
*                  entry.                                             * 00819300
*                  DEFAULT: NO                                        * 00819400
*                                                                     * 00819500
*                                                                     * 00819600
*                  [VERSCOMPARE=NO]                                   * 00819700
*                      Indicates that no version number criteria is   * 00819800
*                      to be applied when selecting entries to be     * 00819900
*                      processed.                                     * 00820000
*                                                                     * 00820100
*                  [VERSCOMPARE=BYENTRY]                              * 00820200
*                      Indicates that version number comparison will  * 00820300
*                      be performed before each list entry is         * 00820400
*                      processed.  The version number specified in    * 00820500
*                      the datablock for each list entry will be used * 00820600
*                      to compare each entry.                         * 00820700
*                                                                     * 00820800
*                      The version number may also be updated for     * 00820900
*                      each entry to be moved using the version       * 00821000
*                      number update specification indicated for each * 00821100
*                      entry in the datablock. The version number may * 00821200
*                      be incremented, decremented or updated to a    * 00821300
*                      new version value also specified in the        * 00821400
*                      datablock for the list entry in the            * 00821500
*                      BUFFER/BUFLIST buffers.                        * 00821600
*                                                                     * 00821700
*                  [VERSCOMPARE=YES                                   * 00821800
*                      Indicates that version number comparison will  * 00821900
*                      be performed before each list entry is         * 00822000
*                      processed.  The version number specified by    * 00822100
*                      VERSCOMP and the VERSCOMPTYPE will be used for * 00822200
*                      each entry processed.                          * 00822300
*                                                                     * 00822400
*                                                                     * 00822500
*                      VERSCOMP=xverscomp                             * 00822600
*                          is the name (RS-type), or address in       * 00822700
*                          register (2)-(12), of a required 8         * 00822800
*                          character input which specifies a value to * 00822900
*                          be compared to the version number of the   * 00823000
*                          designated list entry.  If the condition   * 00823100
*                          specified by VERSCOMPTYPE is not met for   * 00823200
*                          the current list entry then processing     * 00823300
*                          either continues with the next entry to be * 00823400
*                          considered, or is terminated based on the  * 00823500
*                          value specified by MISCOMPARE.             * 00823600
*                                                                     * 00823700
*                                                                     * 00823800
*                          [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]        * 00823900
*                              is an optional keyword input which     * 00824000
*                              specifies how the list entry version   * 00824100
*                              number comparison is to be performed.  * 00824200
*                                                                     * 00824300
*                              DEFAULT: EQUAL                         * 00824400
*                                                                     * 00824500
*                                                                     * 00824600
*                              VERSCOMPTYPE=EQUAL                     * 00824700
*                                  The version number for the list    * 00824800
*                                  entry must be equal to the value   * 00824900
*                                  specified for VERSCOMP.            * 00825000
*                                                                     * 00825100
*                                                                     * 00825200
*                              VERSCOMPTYPE=LESSOREQUAL               * 00825300
*                                  The version number for the list    * 00825400
*                                  entry must be less than or equal   * 00825500
*                                  to the value specified for         * 00825600
*                                  VERSCOMP.                          * 00825700
*                                  DEFAULT: Equal                     * 00825800
*                                                                     * 00825900
*                                                                     * 00826000
*                                                                     * 00826100
*                                                                     * 00826200
*                                                                     * 00826300
*                                                                     * 00826400
*                                                                     * 00826500
*                                                                     * 00826600
*                                                                     * 00826700
*                                                                     * 00826800
*                                                                     * 00826900
*                                                                     * 00827000
*              The following is a set of mutually exclusive keys.     * 00827100
*              This set is required; only one key must be specified.  * 00827200
*                                                                     * 00827300
*                                                                     * 00827400
*              BUFLIST=xbuflist                                       * 00827500
*                  belongs to a set of mutually exclusive keys. It is * 00827600
*                  an input.  It is the name (RS-type), or address in * 00827700
*                  register (2)-(12), of a 128-byte virtual storage   * 00827800
*                  area containing a list of addresses of buffers.    * 00827900
*                  These buffers contain input data for the           * 00828000
*                  MOVE_ENTRYLIST request.  The set of buffers is     * 00828100
*                  used as if it were a single contiguous area for    * 00828200
*                  the purpose of input.                              * 00828300
*                                                                     * 00828400
*                  The format of the list is a set of 8-byte          * 00828500
*                  elements.  The first four bytes of each element is * 00828600
*                  reserved space.  The second four bytes of each     * 00828700
*                  element contains the address of a buffer.          * 00828800
*                                                                     * 00828900
*                  There may be 1 to 16 buffers passed in the list.   * 00829000
*                  Each buffer in the list must be the same size and  * 00829100
*                  must reside in the same address space or data      * 00829200
*                  space.  Data is fetched from the buffers in the    * 00829300
*                  order specified.                                   * 00829400
*                                                                     * 00829500
*                  If QureqRfDeMeBufferSize is off, then each buffer  * 00829600
*                  must be 4096 bytes in length and must start on a   * 00829700
*                  4096-byte boundary.                                * 00829800
*                                                                     * 00829900
*                  If QureqRfDeMeBufferSize is on, then the length of * 00830000
*                  each buffer must be a power of 2 between 256 and   * 00830100
*                  4096 bytes (256, 512, 1024, 2048, 4096).  Each     * 00830200
*                  buffer must start on a 256-byte boundary and must  * 00830300
*                  not cross a 4096-byte boundary.                    * 00830400
*                                                                     * 00830500
*                  The buffers should be formatted into 32-byte,      * 00830600
*                  64-byte, or 96-byte elements, where each element   * 00830700
*                  is mapped by IXLYMELI and contains all the         * 00830800
*                  information required to move a list entry.  The    * 00830900
*                  format (and size) of an element is determined by   * 00831000
*                  the structure characteristics, and the options     * 00831100
*                  specified on the IXLLSTM REQUEST=MOVE_ENTRYLIST:   * 00831200
*                                                                     * 00831300
*                                                                     * 00831400
*                  32-BYTE   Any one of the following conditions:     * 00831500
*                                                                     * 00831600
*                                                                     * 00831700
*                            o   The structure does not support keyed * 00831800
*                                entries and VERSCOMPARE(NO) is       * 00831900
*                                specified.                           * 00832000
*                                                                     * 00832100
*                            o   The structure does not support keyed * 00832200
*                                entries and VERSCOMPARE(YES) is      * 00832300
*                                specified.                           * 00832400
*                                                                     * 00832500
*                            o   The structure does support keyed     * 00832600
*                                entries and MOVETOKEY=UNCHANGED,     * 00832700
*                                MOVETOSKEY=UNCHANGED, and            * 00832800
*                                VERSCOMPARE(NO) are specified.       * 00832900
*                                                                     * 00833000
*                            o   The structure does support keyed     * 00833100
*                                entries and MOVETOKEY=UNCHANGED,     * 00833200
*                                MOVETOSKEY=UNCHANGED, and            * 00833300
*                                VERSCOMPARE(YES) are specified.      * 00833400
*                                                                     * 00833500
*                            o   The structure does support keyed     * 00833600
*                                entries and MOVETOKEY=LISTKEY,       * 00833700
*                                MOVETOSKEY=UNCHANGED, and            * 00833800
*                                VERSCOMPARE(NO) are specified.       * 00833900
*                                                                     * 00834000
*                            o   The structure does support keyed     * 00834100
*                                entries and MOVETOKEY=LISTKEY,       * 00834200
*                                MOVETOSKEY=UNCHANGED, and            * 00834300
*                                VERSCOMPARE(YES) are specified.      * 00834400
*                                                                     * 00834500
*                                                                     * 00834600
*                                                                     * 00834700
*                  64-BYTE   VERSCOMPARE(BYENTRY) or                  * 00834800
*                            MOVETOKEY=TARGETKEY is specified.        * 00834900
*                                                                     * 00835000
*                  96-BYTE   MOVETOSKEY=TARGETKEY is specified.       * 00835100
*                                                                     * 00835200
*                                                                     * 00835300
*                                                                     * 00835400
*                                                                     * 00835500
*                  [BUFADDRTYPE=VIRTUAL|REAL                        * 00835600
*                      is an optional keyword input that specifies    * 00835700
*                      whether the buffer addresses specified in the  * 00835800
*                      BUFLIST list are virtual storage addresses or  * 00835900
*                      real storage addresses.                        * 00836000
*                                                                     * 00836100
*                      DEFAULT: VIRTUAL                               * 00836200
*                                                                     * 00836300
*                                                                     * 00836400
*                      [BUFADDRTYPE=VIRTUAL                           * 00836500
*                          Indicates that the buffer addresses        * 00836600
*                          specified in the BUFLIST list are virtual  * 00836700
*                          storage addresses.                         * 00836800
*                                                                     * 00836900
*                                                                     * 00837000
*                                                                     * 00837100
*                          [PAGEABLE=YES|NO]                        * 00837200
*                              is an optional keyword input that      * 00837300
*                              specifies whether or not the buffers   * 00837400
*                              specified by BUFLIST resides in        * 00837500
*                              pageable storage.                      * 00837600
*                                                                     * 00837700
*                              DEFAULT: YES                           * 00837800
*                                                                     * 00837900
*                                                                     * 00838000
*                              [PAGEABLE=YES                          * 00838100
*                                  Indicates that the BUFLIST buffers * 00838200
*                                  reside in pageable virtual         * 00838300
*                                  storage.                           * 00838400
*                                                                     * 00838500
*                                  This includes disabled reference   * 00838600
*                                  storage, and may include storage   * 00838700
*                                  that has the potential to become   * 00838800
*                                  pageable (such as address space    * 00838900
*                                  storage for which a PGSER FIX has  * 00839000
*                                  been successfully processed).  It  * 00839100
*                                  does not include implicitly        * 00839200
*                                  non-pageable storage (such as is   * 00839300
*                                  obtained from non-pageable         * 00839400
*                                  subpools).                         * 00839500
*                                                                     * 00839600
*                                                                     * 00839700
*                                                                     * 00839800
*                                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY * 00839900
*                                      ]]                            * 00840000
*                                      is the name (RS-type), or      * 00840100
*                                      address in register (2)-(12),  * 00840200
*                                      of an optional 8 bit input     * 00840300
*                                      containing the storage key to  * 00840400
*                                      be used when referencing the   * 00840500
*                                      buffers in the list specified  * 00840600
*                                      by BUFLIST.                    * 00840700
*                                                                     * 00840800
*                                      The high order nibble contains * 00840900
*                                      the storage key, the low order * 00841000
*                                      nibble is ignored.  For        * 00841100
*                                      example, set 'kkkk' in the     * 00841200
*                                      binary bit string 'kkkkxxxx'B  * 00841300
*                                      to correspond to the desired   * 00841400
*                                      storage key.                   * 00841500
*                                                                     * 00841600
*                                      If BUFSTGKEY is not specified, * 00841700
*                                      then all references to the     * 00841800
*                                      BUFLIST buffers are performed  * 00841900
*                                      using the caller's PSW key.    * 00842000
*                                                                     * 00842100
*                                      DEFAULT: CALLERS_KEY           * 00842200
*                                                                     * 00842300
*                                                                     * 00842400
*                                                                     * 00842500
*                              [PAGEABLE=NO]                          * 00842600
*                                  Indicates that the BUFLIST buffers * 00842700
*                                  reside in non-pageable virtual     * 00842800
*                                  storage.                           * 00842900
*                                                                     * 00843000
*                                  This includes implicitly           * 00843100
*                                  non-pageable storage areas.  If    * 00843200
*                                  the virtual storage may            * 00843300
*                                  potentially become pageable, then  * 00843400
*                                  the invoker is responsible for     * 00843500
*                                  ensuring the virtual storage       * 00843600
*                                  remains non-pageable for the       * 00843700
*                                  duration of the request.           * 00843800
*                                                                     * 00843900
*                                  If MODE=ASYNCTOKEN is specified or * 00844000
*                                  MODE=SYNCTOKEN is specified and    * 00844100
*                                  the request does not complete      * 00844200
*                                  synchronously, then the storage    * 00844300
*                                  must remain non-pageable until     * 00844400
*                                  completion of the corresponding    * 00844500
*                                  IXLFCOMP request.  If              * 00844600
*                                  MODE=ASYNCEXIT is specified or     * 00844700
*                                  MODE=SYNCEXIT is specified and the * 00844800
*                                  request does not complete          * 00844900
*                                  synchronously, then the storage    * 00845000
*                                  must remain non-pageable until the * 00845100
*                                  completion exit is driven for the  * 00845200
*                                  request.  If MODE=ASYNCECB is      * 00845300
*                                  specified or MODE=SYNCECB is       * 00845400
*                                  specified and the request does not * 00845500
*                                  complete synchronously, then the   * 00845600
*                                  storage must remain non-pageable   * 00845700
*                                  until the specified ECB is posted  * 00845800
*                                  for the request.                   * 00845900
*                                                                     * 00846000
*                                                                     * 00846100
*                                                                     * 00846200
*                                                                     * 00846300
*                                                                     * 00846400
*                                                                     * 00846500
*                          [BUFALET=xbufalet|NO_BUFALET]]           * 00846600
*                              is the name (RS-type), or address in   * 00846700
*                              register (2)-(12), of an optional      * 00846800
*                              fullword input specifying the ALET     * 00846900
*                              value to be used in referencing all of * 00847000
*                              the buffers specified for BUFLIST      * 00847100
*                                                                     * 00847200
*                              DEFAULT: NO_BUFALET                    * 00847300
*                                                                     * 00847400
*                                                                     * 00847500
*                                                                     * 00847600
*                      [BUFADDRTYPE=REAL                              * 00847700
*                          Indicates that the buffer addresses        * 00847800
*                          specified in the BUFLIST list are real     * 00847900
*                          storage addresses.                         * 00848000
*                                                                     * 00848100
*                                                                     * 00848200
*                          [BUFADDRSIZE=31|64]]                     * 00848300
*                              is an optional keyword input that      * 00848400
*                              specifies whether a 31 or a 64 bit     * 00848500
*                              address is specified by a BUFLIST      * 00848600
*                              entry.                                 * 00848700
*                                                                     * 00848800
*                              DEFAULT: 31                            * 00848900
*                                                                     * 00849000
*                                                                     * 00849100
*                              [BUFADDRSIZE=31]                       * 00849200
*                                  Indicates that the BUFLIST address * 00849300
*                                  is 31 bits in size.                * 00849400
*                                                                     * 00849500
*                              [BUFADDRSIZE=64]]                      * 00849600
*                                  Indicates that the BUFLIST address * 00849700
*                                  is 64 bits in size.                * 00849800
*                                                                     * 00849900
*                                                                     * 00850000
*                                                                     * 00850100
*                                                                     * 00850200
*                                                                     * 00850300
*                                                                     * 00850400
*                                                                     * 00850500
*                                                                     * 00850600
*                                                                     * 00850700
*                                                                     * 00850800
*                  BUFNUM=xbufnum                                     * 00850900
*                      is the name (RS-type), or address in register  * 00851000
*                      (2)-(12), of a required byte input specifying  * 00851100
*                      the number of buffers defined in the BUFLIST   * 00851200
*                      list.                                          * 00851300
*                                                                     * 00851400
*                      BUFNUM values must be in the range of 1 to 16. * 00851500
*                                                                     * 00851600
*                                                                     * 00851700
*                                                                     * 00851800
*                                                                     * 00851900
*                                                                     * 00852000
*                  [BUFINCRNUM=xbufincrnum|16]                      * 00852100
*                      is the name (RS-type), or address in register  * 00852200
*                      (2)-(12), of an optional byte input that       * 00852300
*                      specifies the number of 256-byte increments or * 00852400
*                      segments in each buffer in the BUFLIST list.   * 00852500
*                                                                     * 00852600
*                      BUFINCRNUM values must be a power of 2 in the  * 00852700
*                      range of 1 to 16 (1, 2, 4, 8, 16),             * 00852800
*                      corresponding to BUFLIST buffer sizes of 256   * 00852900
*                      to 4096 bytes.                                 * 00853000
*                      DEFAULT: 16                                    * 00853100
*                                                                     * 00853200
*                                                                     * 00853300
*                                                                     * 00853400
*              BUFFER=xbuffer                                         * 00853500
*                  belongs to a set of mutually exclusive keys. It is * 00853600
*                  an input.  It is the name (RS-type), or address in * 00853700
*                  register (2)-(12), of a virtual storage area       * 00853800
*                  containing input data for the request.  The        * 00853900
*                  BUFSIZE keyword specifies the size of the buffer.  * 00854000
*                                                                     * 00854100
*                  If QureqRfDeMeBufferSize is off, the length of the * 00854200
*                  buffer must be a multiple of 4096 bytes between    * 00854300
*                  4096 and 65536 and the buffer must start on a      * 00854400
*                  4096-byte boundary.                                * 00854500
*                                                                     * 00854600
*                  If QureqRfDeMeBufferSize is on, then if the length * 00854700
*                  of the buffer is less than or equal to 4096 bytes, * 00854800
*                  the length of the buffer must be a power of 2      * 00854900
*                  between 256 and 4096 bytes (256, 512, 1024, 2048,  * 00855000
*                  4096), the buffer must start on a 256-byte         * 00855100
*                  boundary, and the buffer must not cross a          * 00855200
*                  4096-byte boundary.  If the length of the buffer   * 00855300
*                  is greater than 4096 bytes, the length of the      * 00855400
*                  buffer must be a multiple of 4096 bytes between    * 00855500
*                  4096 and 65536 and the buffer must start on a      * 00855600
*                  4096-byte boundary.                                * 00855700
*                                                                     * 00855800
*                  The buffers should be formatted into 32-byte,      * 00855900
*                  64-byte, or 96-byte elements, where each element   * 00856000
*                  is mapped by IXLYMELI and contains all the         * 00856100
*                  information required to move a list entry.  The    * 00856200
*                  format (and size) of an element is determined by   * 00856300
*                  the structure characteristics, and the options     * 00856400
*                  specified on the IXLLSTM REQUEST=MOVE_ENTRYLIST:   * 00856500
*                                                                     * 00856600
*                                                                     * 00856700
*                  32-BYTE   Any one of the following conditions:     * 00856800
*                                                                     * 00856900
*                                                                     * 00857000
*                            o   The structure does not support keyed * 00857100
*                                entries and VERSCOMPARE(NO) is       * 00857200
*                                specified.                           * 00857300
*                                                                     * 00857400
*                            o   The structure does not support keyed * 00857500
*                                entries and VERSCOMPARE(YES) is      * 00857600
*                                specified.                           * 00857700
*                                                                     * 00857800
*                            o   The structure does support keyed     * 00857900
*                                entries and MOVETOKEY=UNCHANGED,     * 00858000
*                                MOVETOSKEY=UNCHANGED, and            * 00858100
*                                VERSCOMPARE(NO) are specified.       * 00858200
*                                                                     * 00858300
*                            o   The structure does support keyed     * 00858400
*                                entries and MOVETOKEY=UNCHANGED,     * 00858500
*                                MOVETOSKEY=UNCHANGED, and            * 00858600
*                                VERSCOMPARE(YES) are specified.      * 00858700
*                                                                     * 00858800
*                            o   The structure does support keyed     * 00858900
*                                entries and MOVETOKEY=LISTKEY,       * 00859000
*                                MOVETOSKEY=UNCHANGED, and            * 00859100
*                                VERSCOMPARE(NO) are specified.       * 00859200
*                                                                     * 00859300
*                            o   The structure does support keyed     * 00859400
*                                entries and MOVETOKEY=LISTKEY,       * 00859500
*                                MOVETOSKEY=UNCHANGED, and            * 00859600
*                                VERSCOMPARE(YES) are specified.      * 00859700
*                                                                     * 00859800
*                                                                     * 00859900
*                                                                     * 00860000
*                  64-BYTE   VERSCOMPARE(BYENTRY) or                  * 00860100
*                            MOVETOKEY=TARGETKEY is specified.        * 00860200
*                                                                     * 00860300
*                  96-BYTE   MOVETOSKEY=TARGETKEY is specified.       * 00860400
*                                                                     * 00860500
*                                                                     * 00860600
*                                                                     * 00860700
*                                                                     * 00860800
*                  [PAGEABLE=YES|NO]                                * 00860900
*                      is an optional keyword input that specifies    * 00861000
*                      whether or not the storage area specified by   * 00861100
*                      BUFFER resides in pageable storage.            * 00861200
*                                                                     * 00861300
*                      DEFAULT: YES                                   * 00861400
*                                                                     * 00861500
*                                                                     * 00861600
*                      [PAGEABLE=YES                                  * 00861700
*                          Indicates that the BUFFER area resides in  * 00861800
*                          pageable virtual storage.                  * 00861900
*                                                                     * 00862000
*                          This includes disabled reference storage,  * 00862100
*                          and may include storage that has the       * 00862200
*                          potential to become pageable It does not   * 00862300
*                          include implicitly non-pageable storage    * 00862400
*                          (such as is obtained from non-pageable     * 00862500
*                          subpools).                                 * 00862600
*                                                                     * 00862700
*                                                                     * 00862800
*                                                                     * 00862900
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00863000
*                              is the name (RS-type), or address in   * 00863100
*                              register (2)-(12), of an optional 8    * 00863200
*                              bit input containing the storage key   * 00863300
*                              to be used when referencing the        * 00863400
*                              storage area specified by BUFFER.      * 00863500
*                                                                     * 00863600
*                              The high order nibble contains the     * 00863700
*                              storage key, the low order nibble is   * 00863800
*                              ignored.  For example, set 'kkkk' in   * 00863900
*                              the binary bit string 'kkkkxxxx'B to   * 00864000
*                              correspond to the desired storage key. * 00864100
*                                                                     * 00864200
*                              If BUFSTGKEY is not specified, then    * 00864300
*                              all references to the BUFFER buffer    * 00864400
*                              storage are performed using the        * 00864500
*                              caller's PSW key.                      * 00864600
*                                                                     * 00864700
*                              DEFAULT: CALLERS_KEY                   * 00864800
*                                                                     * 00864900
*                                                                     * 00865000
*                                                                     * 00865100
*                      [PAGEABLE=NO]                                  * 00865200
*                          Indicates that the BUFFER area resides in  * 00865300
*                          non-pageable virtual storage.              * 00865400
*                                                                     * 00865500
*                          This includes implicitly non-pageable      * 00865600
*                          storage areas.  If the virtual storage may * 00865700
*                          potentially become pageable, then the      * 00865800
*                          invoker is responsible for ensuring the    * 00865900
*                          virtual storage remains non-pageable for   * 00866000
*                          the duration of the request.               * 00866100
*                                                                     * 00866200
*                          If MODE=ASYNCTOKEN is specified or         * 00866300
*                          MODE=SYNCTOKEN is specified and the        * 00866400
*                          request does not complete synchronously,   * 00866500
*                          then the storage must remain non-pageable  * 00866600
*                          until completion of the corresponding      * 00866700
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00866800
*                          specified or MODE=SYNCEXIT is specified    * 00866900
*                          and the request does not complete          * 00867000
*                          synchronously, then the storage must       * 00867100
*                          remain non-pageable until the completion   * 00867200
*                          exit is driven for the request.  If        * 00867300
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00867400
*                          is specified and the request does not      * 00867500
*                          complete synchronously, then the storage   * 00867600
*                          must remain non-pageable until the         * 00867700
*                          specified ECB is posted for the request.   * 00867800
*                                                                     * 00867900
*                                                                     * 00868000
*                                                                     * 00868100
*                                                                     * 00868200
*                                                                     * 00868300
*                                                                     * 00868400
*                  BUFSIZE=xbufsize                                   * 00868500
*                      is the name (RS-type), or address in register  * 00868600
*                      (2)-(12), of a required fullword input         * 00868700
*                      specifying the length of the virtual storage   * 00868800
*                      area specified for BUFFER in bytes.            * 00868900
*                                                                     * 00869000
*                                                                     * 00869100
*                                                                     * 00869200
*                                                                     * 00869300
*                                                                     * 00869400
*                                                                     * 00869500
*              End of a set of mutually exclusive required keys.      * 00869600
*                                                                     * 00869700
*                                                                     * 00869800
*          REQUEST=DELETE_ENTRYLIST                                   * 00869900
*              Delete by entry list.  Requests that all entries       * 00870000
*              specified by the list of entry identifiers or entry    * 00870100
*              names in the storage area specified by BUFFER or the   * 00870200
*              buffers specified by BUFLIST be removed from whichever * 00870300
*              list they reside on and returned to the pool of free   * 00870400
*              entries for reuse.                                     * 00870500
*                                                                     * 00870600
*              Specifying AUTHCOMPARE=YES and AUTHCOMP causes list    * 00870700
*              authority verification for the designated list to      * 00870800
*              precede processing of any list entries.  If the list   * 00870900
*              authority verification fails, the list authority, the  * 00871000
*              list control information and appropriate return and    * 00871100
*              reason codes are provided in the ANSAREA.              * 00871200
*                                                                     * 00871300
*              LOCKINDEX may optionally be specified in conjunction   * 00871400
*              with LOCKOPER to indicate the index of the serialized  * 00871500
*              list lock to be operated on within the lock table for  * 00871600
*              the list structure. If the lock comparison fails,      * 00871700
*              appropriate return and reason codes are provided in    * 00871800
*              the ANSAREA.  In order for any list entries to be      * 00871900
*              processed, the list authority verification and the     * 00872000
*              lock operation if requested, must succeed.             * 00872100
*                                                                     * 00872200
*              The absence of AUTHCOMPARE or specifying               * 00872300
*              AUTHCOMPARE=NO indicates no list authority comparisons * 00872400
*              are to be performed before selecting entries to be     * 00872500
*              processed.  The absence of LOCKINDEX indicates that no * 00872600
*              lock comparison is to be performed before selecting    * 00872700
*              entries to be processed.                               * 00872800
*                                                                     * 00872900
*              LISTCOMPARE=YES and LISTNUM and/or VERSCOMPARE=YES and * 00873000
*              VERSCOMP may optionally be specified to limit deletion * 00873100
*              of entries to those residing on the specified list or  * 00873200
*              with a matching version number, as specified by        * 00873300
*              VERSCOMPTYPE, respectively.                            * 00873400
*                                                                     * 00873500
*              Specifying ENTRYKEY in conjunction with                * 00873600
*              KEYCOMPARE=YES, causes entry key comparison to be      * 00873700
*              performed as specified by KEYREQTYPE.                  * 00873800
*                                                                     * 00873900
*              Specifying SECONDARYKEY in conjunction with            * 00874000
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00874100
*              performed as specified by SKEYREQTYPE.                 * 00874200
*                                                                     * 00874300
*              The absence of VERSCOMPARE, KEYCOMPARE, SKEYCOMPARE,   * 00874400
*              or LISTCOMPARE or specifying VERSCOMPARE=NO,           * 00874500
*              KEYCOMPARE=NO, SKEYCOMPARE=NO, or LISTCOMPARE=NO       * 00874600
*              indicates no version number, entry key value,          * 00874700
*              secondary key value, or list number comparisons are    * 00874800
*              performed when selecting entries to be processed.      * 00874900
*                                                                     * 00875000
*              If the list number, version number or key comparison,  * 00875100
*              when specified, fails, and MISCOMPARE=HALT is          * 00875200
*              specified, the request will be terminated, and the     * 00875300
*              list entry controls and appropriate return and reason  * 00875400
*              codes are provided in the ANSAREA.  When               * 00875500
*              MISCOMPARE=CONTINUE is specified, or MISCOMPAREis not  * 00875600
*              specified, processing for the current list entry is    * 00875700
*              terminated, and processing continues with the next     * 00875800
*              list entry.                                            * 00875900
*                                                                     * 00876000
*              In order for a particular list entry to be deleted,    * 00876100
*              the listnum, the key and version comparison, when      * 00876200
*              requested, must succeed.                               * 00876300
*                                                                     * 00876400
*              When the request completes successfully the number of  * 00876500
*              entries deleted for this request is returned in the    * 00876600
*              answer area specified by ANSAREA.                      * 00876700
*                                                                     * 00876800
*              If any entry specified in the input list does not      * 00876900
*              exist then processing is halted and the index of the   * 00877000
*              offending entry identifier or name is also returned in * 00877100
*              the answer area.  In this event all specified entries  * 00877200
*              preceding the offending entry have been processed.     * 00877300
*              All succeeding entries have not been processed.        * 00877400
*                                                                     * 00877500
*              The BUFFER or BUFLIST contains an input array of       * 00877600
*              elements, each mapped by the IXLYDELI mapping macro.   * 00877700
*                                                                     * 00877800
*              A DELETE_ENTRYLIST request may complete prematurely if * 00877900
*              coupling facility model dependent timeout criteria is  * 00878000
*              exceeded.  In this event appropriate return and reason * 00878100
*              codes are provided, and the number of entries deleted  * 00878200
*              thus far and the index of the first unprocessed array  * 00878300
*              element is provided in ANSAREA.  The request may       * 00878400
*              subsequently be re-issued for the sublist of remaining * 00878500
*              unprocessed entry identifiers or names by specifying   * 00878600
*              the index returned in the answer area on keyword       * 00878700
*              FIRSTELEM.                                             * 00878800
*                                                                     * 00878900
*              Re-issued requests are processed identically to and    * 00879000
*              must meet the same interface requirements as original  * 00879100
*              requests.  A re-issued request may in turn experience  * 00879200
*              premature completion.                                  * 00879300
*                                                                     * 00879400
*                                                                     * 00879500
*              [FIRSTELEM=xfirstelem|1]                             * 00879600
*                  is the name (RS-type), or address in register      * 00879700
*                  (2)-(12), of an optional halfword input specifying * 00879800
*                  the index of the first array element to be         * 00879900
*                  processed.                                         * 00880000
*                                                                     * 00880100
*                  The value must specify one of the array elements   * 00880200
*                  passed in the BUFFER area or the BUFLIST buffers.  * 00880300
*                  An index value of 1 references the first array     * 00880400
*                  entry in the BUFFER area or in the first BUFLIST   * 00880500
*                  buffer.                                            * 00880600
*                                                                     * 00880700
*                  DEFAULT: 1                                         * 00880800
*                                                                     * 00880900
*                                                                     * 00881000
*                                                                     * 00881100
*                                                                     * 00881200
*              LASTELEM=xlastelem                                     * 00881300
*                  is the name (RS-type), or address in register      * 00881400
*                  (2)-(12), of a required halfword input specifying  * 00881500
*                  the index of the last array element to be          * 00881600
*                  processed.                                         * 00881700
*                                                                     * 00881800
*                  The specified value must be greater than or equal  * 00881900
*                  to the specified FIRSTELEM value and must specify  * 00882000
*                  one of the array elements passed in the BUFFER     * 00882100
*                  area or the BUFLIST buffers.                       * 00882200
*                                                                     * 00882300
*                                                                     * 00882400
*                                                                     * 00882500
*                                                                     * 00882600
*              [MISCOMPARE=CONTINUE|HALT]                           * 00882700
*                  is an optional keyword input indicates whether     * 00882800
*                  processing should continue to the next entry or    * 00882900
*                  halt when the version number compare, list number  * 00883000
*                  compare or key compare when requested is not       * 00883100
*                  successful.                                        * 00883200
*                                                                     * 00883300
*                  MISCOMPARE is only valid when the structure is     * 00883400
*                  allocated in a CFLEVEL=9 or higher CF.             * 00883500
*                  DEFAULT: CONTINUE                                  * 00883600
*                                                                     * 00883700
*                                                                     * 00883800
*                  MISCOMPARE=CONTINUE                                * 00883900
*                      is an optional keyword input that indicates    * 00884000
*                      that processing should continue to the next    * 00884100
*                      entry when the version number, list number, or * 00884200
*                      key comparison requested for the current entry * 00884300
*                      is not successful.                             * 00884400
*                                                                     * 00884500
*                  MISCOMPARE=HALT                                    * 00884600
*                      is an optional keyword input that indicates    * 00884700
*                      that processing should halt and not continue   * 00884800
*                      to the next entry when the version number,     * 00884900
*                      list number, or key comparison requested is    * 00885000
*                      not successful. Processing for the request is  * 00885100
*                      terminated, the list entry controls and the    * 00885200
*                      appropriate return and reason codes will be    * 00885300
*                      returned in the ANSAREA.                       * 00885400
*                                                                     * 00885500
*                                                                     * 00885600
*                                                                     * 00885700
*                                                                     * 00885800
*                                                                     * 00885900
*                                                                     * 00886000
*              LISTTYPE=NAMELIST|IDLIST                             * 00886100
*                  is a required keyword input that specifies whether * 00886200
*                  the entries in the BUFFER area or the BUFLIST      * 00886300
*                  buffers for the request contain a list entry name  * 00886400
*                  or a list entry ID.                                * 00886500
*                                                                     * 00886600
*                                                                     * 00886700
*                  LISTTYPE=NAMELIST                                  * 00886800
*                      The input entries in the BUFFER area or the    * 00886900
*                      BUFLIST buffers contain list entry names.      * 00887000
*                                                                     * 00887100
*                      LISTTYPE=NAMELIST is not allowed for           * 00887200
*                      structures that do not support named entries.  * 00887300
*                                                                     * 00887400
*                  LISTTYPE=IDLIST                                    * 00887500
*                      The input entries in the BUFFER area or the    * 00887600
*                      BUFLIST buffers contain list entry             * 00887700
*                      identifiers.                                   * 00887800
*                                                                     * 00887900
*                                                                     * 00888000
*                      [KEYCOMPARE=NO|YES                           * 00888100
*                          is an optional keyword input that          * 00888200
*                          determines whether the key value of an     * 00888300
*                          existing keyed list entry is to be         * 00888400
*                          compared to determine if this entry should * 00888500
*                          be selected for processing.  KEYCOMPARE is * 00888600
*                          only meaningful for list structures        * 00888700
*                          allocated on CFLEVEL=1 or higher CF.       * 00888800
*                          DEFAULT: NO                                * 00888900
*                                                                     * 00889000
*                                                                     * 00889100
*                          [KEYCOMPARE=NO]                            * 00889200
*                              Indicates that no entry key comparison * 00889300
*                              will be performed to determine if this * 00889400
*                              entry should be processed.             * 00889500
*                                                                     * 00889600
*                          [KEYCOMPARE=YES                            * 00889700
*                              Indicates that entry key comparison    * 00889800
*                              will be performed based on the         * 00889900
*                              KEYREQTYPE specified to determine if   * 00890000
*                              this entry is selectable for           * 00890100
*                              processing.                            * 00890200
*                                                                     * 00890300
*                              KEYCOMPARE=YES is ignored if the       * 00890400
*                              target structure does not support      * 00890500
*                              keyed entries.                         * 00890600
*                                                                     * 00890700
*                                                                     * 00890800
*                              ENTRYKEY=xentrykey                     * 00890900
*                                  is the name (RS-type), or address  * 00891000
*                                  in register (2)-(12), of a         * 00891100
*                                  required 16 character input that   * 00891200
*                                  specifies the key to be used to    * 00891300
*                                  compare to the entry key of the    * 00891400
*                                  list entry.  If the condition      * 00891500
*                                  specified by KEYREQTYPE is not met * 00891600
*                                  for the current list entry then no * 00891700
*                                  processing is performed for the    * 00891800
*                                  current entry, and processing      * 00891900
*                                  either continues with the next     * 00892000
*                                  entry to be considered, or is      * 00892100
*                                  terminated based on the value      * 00892200
*                                  specified by MISCOMPARE.           * 00892300
*                                                                     * 00892400
*                                                                     * 00892500
*                                                                     * 00892600
*                                                                     * 00892700
*                              [KEYREQTYPE=EQUAL|LESSOREQUAL|GREATER * 00892800
*                                  OREQUAL|RANGE]]                   * 00892900
*                                  is an optional keyword input which * 00893000
*                                  specifies how entry key comparison * 00893100
*                                  is to be performed on an existing  * 00893200
*                                  keyed list entry to determine if   * 00893300
*                                  the entry is selectable for        * 00893400
*                                  processing.                        * 00893500
*                                  DEFAULT: EQUAL                     * 00893600
*                                                                     * 00893700
*                                                                     * 00893800
*                                  [KEYREQTYPE=EQUAL]                 * 00893900
*                                      a list entry must have an      * 00894000
*                                      entry key equal to the value   * 00894100
*                                      specified by ENTRYKEY.         * 00894200
*                                                                     * 00894300
*                                  [KEYREQTYPE=LESSOREQUAL]           * 00894400
*                                      a list entry must have an      * 00894500
*                                      entry key less than or equal   * 00894600
*                                      to the value specified by      * 00894700
*                                      ENTRYKEY.                      * 00894800
*                                                                     * 00894900
*                                      KEYREQTYPE=LESSOREQUAL is only * 00895000
*                                      valid when the structure is    * 00895100
*                                      allocated in a CFLEVEL=9 or    * 00895200
*                                      higher CF.                     * 00895300
*                                                                     * 00895400
*                                  [KEYREQTYPE=GREATEROREQUAL]        * 00895500
*                                      a list entry must have an      * 00895600
*                                      entry key greater than or      * 00895700
*                                      equal to the value specified   * 00895800
*                                      by ENTRYKEY.                   * 00895900
*                                                                     * 00896000
*                                      KEYREQTYPE=GREATEROREQUAL is   * 00896100
*                                      only valid when the structure  * 00896200
*                                      is allocated in a CFLEVEL=9 or * 00896300
*                                      higher CF.                     * 00896400
*                                                                     * 00896500
*                                  [KEYREQTYPE=RANGE                  * 00896600
*                                      a list entry must have an      * 00896700
*                                      entry key within a specified   * 00896800
*                                      range of values. The ENTRYKEY  * 00896900
*                                      specified will be used as the  * 00897000
*                                      beginning of the range of key  * 00897100
*                                      values that will be compared   * 00897200
*                                      with the existing entry key.   * 00897300
*                                      KEYRANGEEND will be used as    * 00897400
*                                      the ending value.  A list      * 00897500
*                                      entry must have an entry key   * 00897600
*                                      value within the specified     * 00897700
*                                      entry key range, inclusive,    * 00897800
*                                      for it to be selectable.       * 00897900
*                                                                     * 00898000
*                                      KEYREQTYPE=RANGE is only valid * 00898100
*                                      when the structure is          * 00898200
*                                      allocated in a CFLEVEL=9 or    * 00898300
*                                      higher CF.                     * 00898400
*                                                                     * 00898500
*                                                                     * 00898600
*                                      KEYRANGEEND=xkeyrangeend]]     * 00898700
*                                          is the name (RS-type), or  * 00898800
*                                          address in register        * 00898900
*                                          (2)-(12), of a required 16 * 00899000
*                                          character input specifies  * 00899100
*                                          the ending value for the   * 00899200
*                                          range of keys to be        * 00899300
*                                          compared to the entry key  * 00899400
*                                          of the list entry.         * 00899500
*                                                                     * 00899600
*                                                                     * 00899700
*                                                                     * 00899800
*                                                                     * 00899900
*                                                                     * 00900000
*                                                                     * 00900100
*                                                                     * 00900200
*                                                                     * 00900300
*                                                                     * 00900400
*                                                                     * 00900500
*                                                                     * 00900600
*                                                                     * 00900700
*                      [SKEYCOMPARE=NO|YES                          * 00900800
*                          is an optional keyword input that          * 00900900
*                          determines whether the secondary key value * 00901000
*                          of an existing keyed list entry is to be   * 00901100
*                          compared to determine if this entry should * 00901200
*                          be selected for processing.                * 00901300
*                          DEFAULT: NO                                * 00901400
*                                                                     * 00901500
*                                                                     * 00901600
*                          [SKEYCOMPARE=NO]                           * 00901700
*                              Indicates that no secondary key        * 00901800
*                              comparison will be performed to        * 00901900
*                              determine if this entry should be      * 00902000
*                              processed.                             * 00902100
*                                                                     * 00902200
*                          [SKEYCOMPARE=YES                           * 00902300
*                              Indicates that secondary key           * 00902400
*                              comparison will be performed based on  * 00902500
*                              the SKEYREQTYPE specified to determine * 00902600
*                              if this entry is selectable for        * 00902700
*                              processing.                            * 00902800
*                                                                     * 00902900
*                              SKEYCOMPARE=YES is ignored if the      * 00903000
*                              target structure was not allocated     * 00903100
*                              with secondary keys.                   * 00903200
*                                                                     * 00903300
*                                                                     * 00903400
*                              SECONDARYKEY=xsecondarykey             * 00903500
*                                  is the name (RS-type), or address  * 00903600
*                                  in register (2)-(12), of a         * 00903700
*                                  required 32 character input that   * 00903800
*                                  specifies the secondary key to be  * 00903900
*                                  used to compare to the secondary   * 00904000
*                                  key of the list entry.  If the     * 00904100
*                                  condition specified by SKEYREQTYPE * 00904200
*                                  is not met for the current list    * 00904300
*                                  entry then no processing is        * 00904400
*                                  performed for the current entry,   * 00904500
*                                  and processing continues with the  * 00904600
*                                  next entry to be considered.       * 00904700
*                                                                     * 00904800
*                                                                     * 00904900
*                                                                     * 00905000
*                                                                     * 00905100
*                              [SKEYREQTYPE=EQUAL|LESSOREQUAL|GREATE * 00905200
*                                  ROREQUAL|RANGE]]                  * 00905300
*                                  is an optional keyword input which * 00905400
*                                  specifies how secondary key        * 00905500
*                                  comparison is to be performed on   * 00905600
*                                  an existing keyed list entry to    * 00905700
*                                  determine if the entry is          * 00905800
*                                  selectable for processing.         * 00905900
*                                  DEFAULT: EQUAL                     * 00906000
*                                                                     * 00906100
*                                                                     * 00906200
*                                  [SKEYREQTYPE=EQUAL]                * 00906300
*                                      a list entry must have a       * 00906400
*                                      secondary key equal to the     * 00906500
*                                      value specified by             * 00906600
*                                      SECONDARYKEY.                  * 00906700
*                                                                     * 00906800
*                                  [SKEYREQTYPE=LESSOREQUAL]          * 00906900
*                                      a list entry must have a       * 00907000
*                                      secondary key less than or     * 00907100
*                                      equal to the value specified   * 00907200
*                                      by SECONDARYKEY.               * 00907300
*                                                                     * 00907400
*                                  [SKEYREQTYPE=GREATEROREQUAL]       * 00907500
*                                      a list entry must have a       * 00907600
*                                      secondary key greater than or  * 00907700
*                                      equal to the value specified   * 00907800
*                                      by SECONDARYKEY.               * 00907900
*                                                                     * 00908000
*                                  [SKEYREQTYPE=RANGE                 * 00908100
*                                      a list entry must have a       * 00908200
*                                      secondary key within a         * 00908300
*                                      specified range of values. The * 00908400
*                                      SECONDARYKEY specified will be * 00908500
*                                      used as the beginning of the   * 00908600
*                                      range of secondary key values  * 00908700
*                                      that will be compared with the * 00908800
*                                      existing secondary key of the  * 00908900
*                                      designated list entry.         * 00909000
*                                      SKEYRANGEEND will be used as   * 00909100
*                                      the ending value.  A list      * 00909200
*                                      entry must have a secondary    * 00909300
*                                      key value within the specified * 00909400
*                                      secondary key range,           * 00909500
*                                      inclusive, for it to be        * 00909600
*                                      selectable.                    * 00909700
*                                                                     * 00909800
*                                                                     * 00909900
*                                      SKEYRANGEEND=xskeyrangeend]]   * 00910000
*                                                                     * 00910100
*                                          is the name (RS-type), or  * 00910200
*                                          address in register        * 00910300
*                                          (2)-(12), of a required 32 * 00910400
*                                          character input which      * 00910500
*                                          specifies the ending value * 00910600
*                                          for the range of secondary * 00910700
*                                          keys to be compared to the * 00910800
*                                          secondary key of the list  * 00910900
*                                          entry.                     * 00911000
*                                                                     * 00911100
*                                                                     * 00911200
*                                                                     * 00911300
*                                                                     * 00911400
*                                                                     * 00911500
*                                                                     * 00911600
*                                                                     * 00911700
*                                                                     * 00911800
*                                                                     * 00911900
*                                                                     * 00912000
*                                                                     * 00912100
*                                                                     * 00912200
*                                                                     * 00912300
*                                                                     * 00912400
*                                                                     * 00912500
*                                                                     * 00912600
*              [LISTCOMPARE=NO|YES                                  * 00912700
*                  is an optional keyword input which determines if   * 00912800
*                  the list number is to be compared to determine if  * 00912900
*                  entries should be processed.                       * 00913000
*                  DEFAULT: NO                                        * 00913100
*                                                                     * 00913200
*                                                                     * 00913300
*                  [LISTCOMPARE=NO]                                   * 00913400
*                      indicates no list number criteria is to be     * 00913500
*                      applied when selecting entries to be           * 00913600
*                      processed.                                     * 00913700
*                                                                     * 00913800
*                  [LISTCOMPARE=YES                                   * 00913900
*                      indicates that list number comparison should   * 00914000
*                      precede processing of any list entries.        * 00914100
*                                                                     * 00914200
*                                                                     * 00914300
*                      LISTNUM=xlistnum                               * 00914400
*                          is the name (RS-type), or address in       * 00914500
*                          register (2)-(12), of a required fullword  * 00914600
*                          input designates the number of the list on * 00914700
*                          which the entries to be processed reside.  * 00914800
*                          If the condition specified by LISTNUM is   * 00914900
*                          not met for the current list entry then no * 00915000
*                          processing is performed for the current    * 00915100
*                          entry and processing either continues with * 00915200
*                          the next entry to be considered, or is     * 00915300
*                          terminated based on the value specified by * 00915400
*                          MISCOMPARE.                                * 00915500
*                                                                     * 00915600
*                                                                     * 00915700
*                          [AUTHCOMPARE=NO|YES                      * 00915800
*                              is an optional keyword input which     * 00915900
*                              determines whether the list authority  * 00916000
*                              comparison is to be used to determine  * 00916100
*                              if entries on the list should be       * 00916200
*                              processed.                             * 00916300
*                                                                     * 00916400
*                              AUTHCOMPARE is only meaningful for     * 00916500
*                              list structures allocated on CFLEVEL=1 * 00916600
*                              or higher CF.                          * 00916700
*                              DEFAULT: NO                            * 00916800
*                                                                     * 00916900
*                                                                     * 00917000
*                              [AUTHCOMPARE=NO]                       * 00917100
*                                  indicates no list authority        * 00917200
*                                  comparison is to be performed      * 00917300
*                                  before processing any entries on   * 00917400
*                                  the list.                          * 00917500
*                                                                     * 00917600
*                              [AUTHCOMPARE=YES                       * 00917700
*                                  indicates that list authority      * 00917800
*                                  comparison should precede          * 00917900
*                                  processing of any entries on the   * 00918000
*                                  list.                              * 00918100
*                                                                     * 00918200
*                                                                     * 00918300
*                                  AUTHCOMP=xauthcomp                 * 00918400
*                                      is the name (RS-type), or      * 00918500
*                                      address in register (2)-(12),  * 00918600
*                                      of a required 16 character     * 00918700
*                                      input which specifies a value  * 00918800
*                                      to be compared to the list     * 00918900
*                                      authority value for the        * 00919000
*                                      designated list.  If the       * 00919100
*                                      condition specified by         * 00919200
*                                      AUTHCOMPTYPE is not met then   * 00919300
*                                      the IXLLSTM operation is       * 00919400
*                                      terminated with no resultant   * 00919500
*                                      change to the structure, and   * 00919600
*                                      appropriate return and reason  * 00919700
*                                      codes are provided to the      * 00919800
*                                      invoker.                       * 00919900
*                                                                     * 00920000
*                                                                     * 00920100
*                                      [AUTHCOMPTYPE=EQUAL|LESSOREQU * 00920200
*                                          AL]]]                     * 00920300
*                                          is an optional keyword     * 00920400
*                                          input which specifies how  * 00920500
*                                          the list authority         * 00920600
*                                          comparison is to be        * 00920700
*                                          performed.                 * 00920800
*                                                                     * 00920900
*                                          DEFAULT: EQUAL             * 00921000
*                                                                     * 00921100
*                                                                     * 00921200
*                                          AUTHCOMPTYPE=EQUAL         * 00921300
*                                              The list authority for * 00921400
*                                              the list specified by  * 00921500
*                                              LISTNUM must be equal  * 00921600
*                                              to the value specified * 00921700
*                                              for AUTHCOMP.          * 00921800
*                                                                     * 00921900
*                                                                     * 00922000
*                                          AUTHCOMPTYPE=LESSOREQUAL   * 00922100
*                                                                     * 00922200
*                                              The list authority for * 00922300
*                                              the list specified by  * 00922400
*                                              LISTNUM must be less   * 00922500
*                                              than or equal to the   * 00922600
*                                              value specified for    * 00922700
*                                              AUTHCOMP.              * 00922800
*                                                                     * 00922900
*                                                                     * 00923000
*                                                                     * 00923100
*                                                                     * 00923200
*                                                                     * 00923300
*                                                                     * 00923400
*                                                                     * 00923500
*                                                                     * 00923600
*                                                                     * 00923700
*                                                                     * 00923800
*                                                                     * 00923900
*                                                                     * 00924000
*                                                                     * 00924100
*                                                                     * 00924200
*                                                                     * 00924300
*                                                                     * 00924400
*                                                                     * 00924500
*                                                                     * 00924600
*              [VERSCOMPARE=NO|BYENTRY|YES                          * 00924700
*                  is an optional keyword input indicates the version * 00924800
*                  comparison be done for each list entry.            * 00924900
*                  DEFAULT: NO                                        * 00925000
*                                                                     * 00925100
*                                                                     * 00925200
*                  [VERSCOMPARE=NO]                                   * 00925300
*                      Indicates that no version number comparison is * 00925400
*                      to be applied when selecting entries to be     * 00925500
*                      processed.                                     * 00925600
*                                                                     * 00925700
*                  [VERSCOMPARE=BYENTRY]                              * 00925800
*                      Indicates that version number comparison will  * 00925900
*                      be performed before each list entry is         * 00926000
*                      processed.  The version number specified in    * 00926100
*                      the datablock for each list entry will be used * 00926200
*                      to compare each entry processed.  If the       * 00926300
*                      condition specified by VERSCOMPTYPE in the     * 00926400
*                      datablock is not met for the current list      * 00926500
*                      entry then no processing is performed for the  * 00926600
*                      current entry and processing either continues  * 00926700
*                      with the next entry to be considered, or is    * 00926800
*                      terminated based on the value specified by     * 00926900
*                      MISCOMPARE.                                    * 00927000
*                                                                     * 00927100
*                      VERSCOMPARE=BYENTRY is only valid when the     * 00927200
*                      structure is allocated in a CFLEVEL=9 or       * 00927300
*                      higher CF.                                     * 00927400
*                                                                     * 00927500
*                  [VERSCOMPARE=YES                                   * 00927600
*                      Indicates that version number comparison will  * 00927700
*                      be performed before each list entry is         * 00927800
*                      processed.  The version number specified by    * 00927900
*                      VERSCOMP and the VERSCOMPTYPE will be used for * 00928000
*                      each entry processed.                          * 00928100
*                                                                     * 00928200
*                                                                     * 00928300
*                      VERSCOMP=xverscomp                             * 00928400
*                          is the name (RS-type), or address in       * 00928500
*                          register (2)-(12), of a required 8         * 00928600
*                          character input which specifies a value to * 00928700
*                          be compared to the version number of the   * 00928800
*                          designated list entry.  If the condition   * 00928900
*                          specified by VERSCOMPTYPE is not met for   * 00929000
*                          the current list entry then no processing  * 00929100
*                          is performed for the current entry and     * 00929200
*                          processing either continues with the next  * 00929300
*                          entry to be considered, or is terminated   * 00929400
*                          based on the value specified by            * 00929500
*                          MISCOMPARE.                                * 00929600
*                                                                     * 00929700
*                                                                     * 00929800
*                          [VERSCOMPTYPE=EQUAL|LESSOREQUAL]]        * 00929900
*                              is an optional keyword input which     * 00930000
*                              specifies how the list entry version   * 00930100
*                              number comparison is to be performed.  * 00930200
*                                                                     * 00930300
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00930400
*                              meaningful for list structures         * 00930500
*                              allocated on CFLEVEL=1 or higher CF.   * 00930600
*                                                                     * 00930700
*                              DEFAULT: EQUAL                         * 00930800
*                                                                     * 00930900
*                                                                     * 00931000
*                              VERSCOMPTYPE=EQUAL                     * 00931100
*                                  The version number for the list    * 00931200
*                                  entry must be equal to the value   * 00931300
*                                  specified for VERSCOMP.            * 00931400
*                                                                     * 00931500
*                                                                     * 00931600
*                              VERSCOMPTYPE=LESSOREQUAL               * 00931700
*                                  The version number for the list    * 00931800
*                                  entry must be less than or equal   * 00931900
*                                  to the value specified for         * 00932000
*                                  VERSCOMP.                          * 00932100
*                                  DEFAULT: Equal                     * 00932200
*                                                                     * 00932300
*                                                                     * 00932400
*                                                                     * 00932500
*                                                                     * 00932600
*                                                                     * 00932700
*                                                                     * 00932800
*                                                                     * 00932900
*                                                                     * 00933000
*                                                                     * 00933100
*                                                                     * 00933200
*                                                                     * 00933300
*                                                                     * 00933400
*              The following is a set of mutually exclusive keys.     * 00933500
*              This set is required; only one key must be specified.  * 00933600
*                                                                     * 00933700
*                                                                     * 00933800
*              BUFLIST=xbuflist                                       * 00933900
*                  belongs to a set of mutually exclusive keys. It is * 00934000
*                  an input.  It is the name (RS-type), or address in * 00934100
*                  register (2)-(12), of a 128-byte virtual storage   * 00934200
*                  area containing a list of addresses of buffers.    * 00934300
*                  These buffers contain input data for the request.  * 00934400
*                  The set of buffers is used as if it were a single  * 00934500
*                  contiguous area for purposes of input.             * 00934600
*                                                                     * 00934700
*                  The format of the list is a set of 8-byte          * 00934800
*                  elements.  The first four bytes of each element is * 00934900
*                  reserved space.  The second four bytes of each     * 00935000
*                  element contains the address of a buffer.          * 00935100
*                                                                     * 00935200
*                  There may be 1 to 16 buffers passed in the list.   * 00935300
*                  Each buffer in the list must be the same size and  * 00935400
*                  must reside in the same address space or data      * 00935500
*                  space.  Data is fetched from the buffers in the    * 00935600
*                  order specified.                                   * 00935700
*                                                                     * 00935800
*                  If QureqRfDeMeBufferSize is off, then each buffer  * 00935900
*                  must be 4096 bytes in length and must start on a   * 00936000
*                  4096-byte boundary.                                * 00936100
*                                                                     * 00936200
*                  If QureqRfDeMeBufferSize is on, then the length of * 00936300
*                  each buffer must be a power of 2 between 256 and   * 00936400
*                  4096 bytes (256, 512, 1024, 2048, 4096).  Each     * 00936500
*                  buffer must start on a 256-byte boundary and must  * 00936600
*                  not cross a 4096-byte boundary.                    * 00936700
*                                                                     * 00936800
*                  The buffers should be formatted into 12-byte,      * 00936900
*                  16-byte, or 64-byte elements, where each element   * 00937000
*                  is mapped by IXLYDELI and contains all the         * 00937100
*                  information required to delete a list entry.  The  * 00937200
*                  format (and size) of an element is determined by   * 00937300
*                  the options specified on the IXLLSTM               * 00937400
*                  REQUEST=DELETE_ENTRYLIST:                          * 00937500
*                                                                     * 00937600
*                                                                     * 00937700
*                  16-BYTE   Any one of the following conditions:     * 00937800
*                                                                     * 00937900
*                                                                     * 00938000
*                            o   VERSCOMPARE(NO) and                  * 00938100
*                                LISTTYPE(NAMELIST) are specified.    * 00938200
*                                                                     * 00938300
*                            o   VERSCOMPARE(YES) and                 * 00938400
*                                LISTTYPE(NAMELIST) are specified.    * 00938500
*                                                                     * 00938600
*                                                                     * 00938700
*                                                                     * 00938800
*                  12-BYTE   Any one of the following conditions:     * 00938900
*                                                                     * 00939000
*                                                                     * 00939100
*                            o   VERSCOMPARE(NO) and LISTTYPE(IDLIST) * 00939200
*                                are specified.                       * 00939300
*                                                                     * 00939400
*                            o   VERSCOMPARE(YES) and                 * 00939500
*                                LISTTYPE(IDLIST) are specified.      * 00939600
*                                                                     * 00939700
*                                                                     * 00939800
*                                                                     * 00939900
*                  64-BYTE   VERSCOMPARE(BYENTRY) is specified.       * 00940000
*                                                                     * 00940100
*                                                                     * 00940200
*                                                                     * 00940300
*                                                                     * 00940400
*                  [BUFADDRTYPE=VIRTUAL|REAL                        * 00940500
*                      is an optional keyword input that specifies    * 00940600
*                      whether the buffer addresses specified in the  * 00940700
*                      BUFLIST list are virtual storage addresses or  * 00940800
*                      real storage addresses.                        * 00940900
*                                                                     * 00941000
*                      DEFAULT: VIRTUAL                               * 00941100
*                                                                     * 00941200
*                                                                     * 00941300
*                      [BUFADDRTYPE=VIRTUAL                           * 00941400
*                          Indicates that the buffer addresses        * 00941500
*                          specified in the BUFLIST list are virtual  * 00941600
*                          storage addresses.                         * 00941700
*                                                                     * 00941800
*                                                                     * 00941900
*                                                                     * 00942000
*                          [PAGEABLE=YES|NO]                        * 00942100
*                              is an optional keyword input that      * 00942200
*                              specifies whether or not the buffers   * 00942300
*                              specified by BUFLIST resides in        * 00942400
*                              pageable storage.                      * 00942500
*                                                                     * 00942600
*                              DEFAULT: YES                           * 00942700
*                                                                     * 00942800
*                                                                     * 00942900
*                              [PAGEABLE=YES                          * 00943000
*                                  Indicates that the BUFLIST buffers * 00943100
*                                  reside in pageable virtual         * 00943200
*                                  storage.                           * 00943300
*                                                                     * 00943400
*                                  This includes disabled reference   * 00943500
*                                  storage, and may include storage   * 00943600
*                                  that has the potential to become   * 00943700
*                                  pageable (such as address space    * 00943800
*                                  storage for which a PGSER FIX has  * 00943900
*                                  been successfully processed).  It  * 00944000
*                                  does not include implicitly        * 00944100
*                                  non-pageable storage (such as is   * 00944200
*                                  obtained from non-pageable         * 00944300
*                                  subpools).                         * 00944400
*                                                                     * 00944500
*                                                                     * 00944600
*                                                                     * 00944700
*                                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY * 00944800
*                                      ]]                            * 00944900
*                                      is the name (RS-type), or      * 00945000
*                                      address in register (2)-(12),  * 00945100
*                                      of an optional 8 bit input     * 00945200
*                                      containing the storage key to  * 00945300
*                                      be used when referencing the   * 00945400
*                                      buffers in the list specified  * 00945500
*                                      by BUFLIST.                    * 00945600
*                                                                     * 00945700
*                                      The high order nibble contains * 00945800
*                                      the storage key, the low order * 00945900
*                                      nibble is ignored.  For        * 00946000
*                                      example, set 'kkkk' in the     * 00946100
*                                      binary bit string 'kkkkxxxx'B  * 00946200
*                                      to correspond to the desired   * 00946300
*                                      storage key.                   * 00946400
*                                                                     * 00946500
*                                      If BUFSTGKEY is not specified, * 00946600
*                                      then all references to the     * 00946700
*                                      BUFLIST buffers are performed  * 00946800
*                                      using the caller's PSW key.    * 00946900
*                                                                     * 00947000
*                                      DEFAULT: CALLERS_KEY           * 00947100
*                                                                     * 00947200
*                                                                     * 00947300
*                                                                     * 00947400
*                              [PAGEABLE=NO]                          * 00947500
*                                  Indicates that the BUFLIST buffers * 00947600
*                                  reside in non-pageable virtual     * 00947700
*                                  storage.                           * 00947800
*                                                                     * 00947900
*                                  This includes implicitly           * 00948000
*                                  non-pageable storage areas.  If    * 00948100
*                                  the virtual storage may            * 00948200
*                                  potentially become pageable, then  * 00948300
*                                  the invoker is responsible for     * 00948400
*                                  ensuring the virtual storage       * 00948500
*                                  remains non-pageable for the       * 00948600
*                                  duration of the request.           * 00948700
*                                                                     * 00948800
*                                  If MODE=ASYNCTOKEN is specified or * 00948900
*                                  MODE=SYNCTOKEN is specified and    * 00949000
*                                  the request does not complete      * 00949100
*                                  synchronously, then the storage    * 00949200
*                                  must remain non-pageable until     * 00949300
*                                  completion of the corresponding    * 00949400
*                                  IXLFCOMP request.  If              * 00949500
*                                  MODE=ASYNCEXIT is specified or     * 00949600
*                                  MODE=SYNCEXIT is specified and the * 00949700
*                                  request does not complete          * 00949800
*                                  synchronously, then the storage    * 00949900
*                                  must remain non-pageable until the * 00950000
*                                  completion exit is driven for the  * 00950100
*                                  request.  If MODE=ASYNCECB is      * 00950200
*                                  specified or MODE=SYNCECB is       * 00950300
*                                  specified and the request does not * 00950400
*                                  complete synchronously, then the   * 00950500
*                                  storage must remain non-pageable   * 00950600
*                                  until the specified ECB is posted  * 00950700
*                                  for the request.                   * 00950800
*                                                                     * 00950900
*                                                                     * 00951000
*                                                                     * 00951100
*                                                                     * 00951200
*                                                                     * 00951300
*                                                                     * 00951400
*                          [BUFALET=xbufalet|NO_BUFALET]]           * 00951500
*                              is the name (RS-type), or address in   * 00951600
*                              register (2)-(12), of an optional      * 00951700
*                              fullword input specifying the ALET     * 00951800
*                              value to be used in referencing all of * 00951900
*                              the buffers specified for BUFLIST      * 00952000
*                                                                     * 00952100
*                              DEFAULT: NO_BUFALET                    * 00952200
*                                                                     * 00952300
*                                                                     * 00952400
*                                                                     * 00952500
*                      [BUFADDRTYPE=REAL                              * 00952600
*                          Indicates that the buffer addresses        * 00952700
*                          specified in the BUFLIST list are real     * 00952800
*                          storage addresses.                         * 00952900
*                                                                     * 00953000
*                                                                     * 00953100
*                          [BUFADDRSIZE=31|64]]                     * 00953200
*                              is an optional keyword input that      * 00953300
*                              specifies whether a 31 or a 64 bit     * 00953400
*                              address is specified by a BUFLIST      * 00953500
*                              entry.                                 * 00953600
*                                                                     * 00953700
*                              DEFAULT: 31                            * 00953800
*                                                                     * 00953900
*                                                                     * 00954000
*                              [BUFADDRSIZE=31]                       * 00954100
*                                  Indicates that the BUFLIST address * 00954200
*                                  is 31 bits in size.                * 00954300
*                                                                     * 00954400
*                              [BUFADDRSIZE=64]]                      * 00954500
*                                  Indicates that the BUFLIST address * 00954600
*                                  is 64 bits in size.                * 00954700
*                                                                     * 00954800
*                                                                     * 00954900
*                                                                     * 00955000
*                                                                     * 00955100
*                                                                     * 00955200
*                                                                     * 00955300
*                                                                     * 00955400
*                                                                     * 00955500
*                                                                     * 00955600
*                                                                     * 00955700
*                  BUFNUM=xbufnum                                     * 00955800
*                      is the name (RS-type), or address in register  * 00955900
*                      (2)-(12), of a required byte input specifying  * 00956000
*                      the number of buffers defined in the BUFLIST   * 00956100
*                      list.                                          * 00956200
*                                                                     * 00956300
*                      BUFNUM values must be in the range of 1 to 16. * 00956400
*                                                                     * 00956500
*                                                                     * 00956600
*                                                                     * 00956700
*                                                                     * 00956800
*                                                                     * 00956900
*                  [BUFINCRNUM=xbufincrnum|16]                      * 00957000
*                      is the name (RS-type), or address in register  * 00957100
*                      (2)-(12), of an optional byte input that       * 00957200
*                      specifies the number of 256-byte increments or * 00957300
*                      segments in each buffer in the BUFLIST list.   * 00957400
*                                                                     * 00957500
*                      BUFINCRNUM values must be a power of 2 in the  * 00957600
*                      range of 1 to 16 (1, 2, 4, 8, 16),             * 00957700
*                      corresponding to BUFLIST buffer sizes of 256   * 00957800
*                      to 4096 bytes.                                 * 00957900
*                      DEFAULT: 16                                    * 00958000
*                                                                     * 00958100
*                                                                     * 00958200
*                                                                     * 00958300
*              BUFFER=xbuffer                                         * 00958400
*                  belongs to a set of mutually exclusive keys. It is * 00958500
*                  an input.  It is the name (RS-type), or address in * 00958600
*                  register (2)-(12), of a virtual storage area       * 00958700
*                  containing input data for the request.  The        * 00958800
*                  BUFSIZE keyword specifies the size of the buffer.  * 00958900
*                                                                     * 00959000
*                  If QureqRfDeMeBufferSize is off, the length of the * 00959100
*                  buffer must be a multiple of 4096 bytes between    * 00959200
*                  4096 and 65536 and the buffer must start on a      * 00959300
*                  4096-byte boundary.                                * 00959400
*                                                                     * 00959500
*                  If QureqRfDeMeBufferSize is on, then if the length * 00959600
*                  of the buffer is less than or equal to 4096 bytes, * 00959700
*                  the length of the buffer must be a power of 2      * 00959800
*                  between 256 and 4096 bytes (256, 512, 1024, 2048,  * 00959900
*                  4096), the buffer must start on a 256-byte         * 00960000
*                  boundary, and the buffer must not cross a          * 00960100
*                  4096-byte boundary.  If the length of the buffer   * 00960200
*                  is greater than 4096 bytes, the length of the      * 00960300
*                  buffer must be a multiple of 4096 bytes between    * 00960400
*                  4096 and 65536 and the buffer must start on a      * 00960500
*                  4096-byte boundary.                                * 00960600
*                                                                     * 00960700
*                  The BUFFER area is used as input and contains a    * 00960800
*                  list of list entry identifiers or names to be      * 00960900
*                  deleted.  The buffers should be formatted into     * 00961000
*                  12-byte, 16-byte, or 64-byte elements, where each  * 00961100
*                  element is mapped by IXLYDELI and contains all the * 00961200
*                  information required to delete a list entry.  The  * 00961300
*                  format (and size) of an element is determined by   * 00961400
*                  the options specified on the IXLLSTM               * 00961500
*                  REQUEST=DELETE_ENTRYLIST:                          * 00961600
*                                                                     * 00961700
*                                                                     * 00961800
*                  16-BYTE   Any one of the following conditions:     * 00961900
*                                                                     * 00962000
*                                                                     * 00962100
*                            o   VERSCOMPARE(NO) and                  * 00962200
*                                LISTTYPE(NAMELIST) are specified.    * 00962300
*                                                                     * 00962400
*                            o   VERSCOMPARE(YES) and                 * 00962500
*                                LISTTYPE(NAMELIST) are specified.    * 00962600
*                                                                     * 00962700
*                                                                     * 00962800
*                                                                     * 00962900
*                  12-BYTE   Any one of the following conditions:     * 00963000
*                                                                     * 00963100
*                                                                     * 00963200
*                            o   VERSCOMPARE(NO) and LISTTYPE(IDLIST) * 00963300
*                                are specified.                       * 00963400
*                                                                     * 00963500
*                            o   VERSCOMPARE(YES) and                 * 00963600
*                                LISTTYPE(IDLIST) are specified.      * 00963700
*                                                                     * 00963800
*                                                                     * 00963900
*                                                                     * 00964000
*                  64-BYTE   VERSCOMPARE(BYENTRY) is specified.       * 00964100
*                                                                     * 00964200
*                                                                     * 00964300
*                                                                     * 00964400
*                                                                     * 00964500
*                  [PAGEABLE=YES|NO]                                * 00964600
*                      is an optional keyword input that specifies    * 00964700
*                      whether or not the storage area specified by   * 00964800
*                      BUFFER resides in pageable storage.            * 00964900
*                                                                     * 00965000
*                      DEFAULT: YES                                   * 00965100
*                                                                     * 00965200
*                                                                     * 00965300
*                      [PAGEABLE=YES                                  * 00965400
*                          Indicates that the BUFFER area resides in  * 00965500
*                          pageable virtual storage.                  * 00965600
*                                                                     * 00965700
*                          This includes disabled reference storage,  * 00965800
*                          and may include storage that has the       * 00965900
*                          potential to become pageable It does not   * 00966000
*                          include implicitly non-pageable storage    * 00966100
*                          (such as is obtained from non-pageable     * 00966200
*                          subpools).                                 * 00966300
*                                                                     * 00966400
*                                                                     * 00966500
*                                                                     * 00966600
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00966700
*                              is the name (RS-type), or address in   * 00966800
*                              register (2)-(12), of an optional 8    * 00966900
*                              bit input containing the storage key   * 00967000
*                              to be used when referencing the        * 00967100
*                              storage area specified by BUFFER.      * 00967200
*                                                                     * 00967300
*                              The high order nibble contains the     * 00967400
*                              storage key, the low order nibble is   * 00967500
*                              ignored.  For example, set 'kkkk' in   * 00967600
*                              the binary bit string 'kkkkxxxx'B to   * 00967700
*                              correspond to the desired storage key. * 00967800
*                                                                     * 00967900
*                              If BUFSTGKEY is not specified, then    * 00968000
*                              all references to the BUFFER buffer    * 00968100
*                              storage are performed using the        * 00968200
*                              caller's PSW key.                      * 00968300
*                                                                     * 00968400
*                              DEFAULT: CALLERS_KEY                   * 00968500
*                                                                     * 00968600
*                                                                     * 00968700
*                                                                     * 00968800
*                      [PAGEABLE=NO]                                  * 00968900
*                          Indicates that the BUFFER area resides in  * 00969000
*                          non-pageable virtual storage.              * 00969100
*                                                                     * 00969200
*                          This includes implicitly non-pageable      * 00969300
*                          storage areas.  If the virtual storage may * 00969400
*                          potentially become pageable, then the      * 00969500
*                          invoker is responsible for ensuring the    * 00969600
*                          virtual storage remains non-pageable for   * 00969700
*                          the duration of the request.               * 00969800
*                                                                     * 00969900
*                          If MODE=ASYNCTOKEN is specified or         * 00970000
*                          MODE=SYNCTOKEN is specified and the        * 00970100
*                          request does not complete synchronously,   * 00970200
*                          then the storage must remain non-pageable  * 00970300
*                          until completion of the corresponding      * 00970400
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00970500
*                          specified or MODE=SYNCEXIT is specified    * 00970600
*                          and the request does not complete          * 00970700
*                          synchronously, then the storage must       * 00970800
*                          remain non-pageable until the completion   * 00970900
*                          exit is driven for the request.  If        * 00971000
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00971100
*                          is specified and the request does not      * 00971200
*                          complete synchronously, then the storage   * 00971300
*                          must remain non-pageable until the         * 00971400
*                          specified ECB is posted for the request.   * 00971500
*                                                                     * 00971600
*                                                                     * 00971700
*                                                                     * 00971800
*                                                                     * 00971900
*                                                                     * 00972000
*                                                                     * 00972100
*                  BUFSIZE=xbufsize                                   * 00972200
*                      is the name (RS-type), or address in register  * 00972300
*                      (2)-(12), of a required fullword input         * 00972400
*                      specifying the length of the virtual storage   * 00972500
*                      area specified for BUFFER in bytes.            * 00972600
*                                                                     * 00972700
*                                                                     * 00972800
*                                                                     * 00972900
*                                                                     * 00973000
*                                                                     * 00973100
*                                                                     * 00973200
*              End of a set of mutually exclusive required keys.      * 00973300
*                                                                     * 00973400
*                                                                     * 00973500
*                                                                     * 00973600
*                                                                     * 00973700
*                                                                     * 00973800
*                                                                     * 00973900
*                                                                     * 00974000
*      [LOCKINDEX=xlockindex|NO_LOCKINDEX                           * 00974100
*          is the name (RS-type), or address in register (2)-(12), of * 00974200
*          an optional fullword input that contains the index of the  * 00974300
*          lock to be operated on within the lock table for the list  * 00974400
*          structure.                                                 * 00974500
*                                                                     * 00974600
*          When specified, the designated lock will be operated on as * 00974700
*          specified by the LOCKOPER keyword.  The specified value    * 00974800
*          must fall within the range 0 to the number of lock table   * 00974900
*          entries minus one, inclusive.                              * 00975000
*                                                                     * 00975100
*          It is mutually exclusive with MODE=ASYNCNORESPONSE.        * 00975200
*                                                                     * 00975300
*          DEFAULT: NO_LOCKINDEX                                      * 00975400
*                                                                     * 00975500
*                                                                     * 00975600
*          LOCKOPER=NOTHELD|HELDBY                                  * 00975700
*              is a required keyword input that specifies the type of * 00975800
*              operation to be performed on the specified lock.       * 00975900
*                                                                     * 00976000
*                                                                     * 00976100
*                                                                     * 00976200
*              LOCKOPER=NOTHELD                                       * 00976300
*                  Requests that the state of the lock be such that   * 00976400
*                  the lock is not held for the duration of the       * 00976500
*                  requested list entry operation.  The lock state    * 00976600
*                  remains unchanged as a result of this option.      * 00976700
*                                                                     * 00976800
*                  When NOTHELD is specified the locking operation is * 00976900
*                  always considered to be a conditional operation.   * 00977000
*                  That is, if the specified lock is held then the    * 00977100
*                  entire IXLLSTM operation will be terminated with   * 00977200
*                  no resultant change to the structure, and          * 00977300
*                  appropriate return and reason codes are provided   * 00977400
*                  in the ANSAREA.                                    * 00977500
*                                                                     * 00977600
*              LOCKOPER=HELDBY                                        * 00977700
*                  When LOCKCOMP is not specified, requests that the  * 00977800
*                  list operation only be performed if the lock is    * 00977900
*                  currently held by the connection specified by      * 00978000
*                  CONTOKEN.                                          * 00978100
*                                                                     * 00978200
*                  When LOCKCOMP is specified, requests that the list * 00978300
*                  operation only be performed if the lock is         * 00978400
*                  currently held by the connection specified by      * 00978500
*                  LOCKCOMP.                                          * 00978600
*                                                                     * 00978700
*                                                                     * 00978800
*                  [LOCKCOMP=xlockcomp|NO_LOCKCOMP]]                * 00978900
*                      is the name (RS-type), or address in register  * 00979000
*                      (2)-(12), of an optional byte input field      * 00979100
*                      containing a connection identifier to be       * 00979200
*                      verified as the current lock owner as a        * 00979300
*                      prerequisite to successful completion of this  * 00979400
*                      request.                                       * 00979500
*                                                                     * 00979600
*                      When LOCKCOMP is specified the locking         * 00979700
*                      operation is always considered to be a         * 00979800
*                      conditional operation.  That is, if the        * 00979900
*                      request experiences lock contention the        * 00980000
*                      request will be terminated with no resultant   * 00980100
*                      change to the structure, and appropriate       * 00980200
*                      return and reason codes are provided in the    * 00980300
*                      ANSAREA.  The connection identifier is         * 00980400
*                      available from the IXLCONN answer area.        * 00980500
*                      DEFAULT: NO_LOCKCOMP                           * 00980600
*                                                                     * 00980700
*                                                                     * 00980800
*                                                                     * 00980900
*                                                                     * 00981000
*                                                                     * 00981100
*                                                                     * 00981200
*                                                                     * 00981300
*                                                                     * 00981400
*                                                                     * 00981500
*                                                                     * 00981600
*      [MODE=SYNCSUSPEND|SYNCECB|SYNCEXIT|SYNCTOKEN|ASYNCECB|ASYNCEX * 00981700
*          IT|ASYNCTOKEN|ASYNCNORESPONSE]                            * 00981800
*          is an optional keyword input that specifies whether the    * 00981900
*          request is to be performed synchronously or                * 00982000
*          asynchronously.                                            * 00982100
*                                                                     * 00982200
*          DEFAULT: SYNCSUSPEND                                       * 00982300
*                                                                     * 00982400
*                                                                     * 00982500
*          [MODE=SYNCSUSPEND                                          * 00982600
*              Indicates that the request will be performed           * 00982700
*              synchronously.  Control is not returned to the caller  * 00982800
*              until request processing is complete and the final     * 00982900
*              disposition determined.                                * 00983000
*                                                                     * 00983100
*              If necessary the caller will be suspended until the    * 00983200
*              request completes.  The caller must be executing in an * 00983300
*              enabled state to use this option.                      * 00983400
*                                                                     * 00983500
*                                                                     * 00983600
*              ANSAREA=xansarea                                       * 00983700
*                  is a required input.  It is the name (RS-type), or * 00983800
*                  address in register (2)-(12), of a virtual storage * 00983900
*                  area in which command response information will be * 00984000
*                  placed.  The format of the answer area is          * 00984100
*                  described by the IXLYLAA mapping macro.            * 00984200
*                                                                     * 00984300
*                  Not all fields in the answer area are applicable   * 00984400
*                  to all request types.  Request type descriptions   * 00984500
*                  indicate what answer area fields are applicable    * 00984600
*                  for successful request completion cases.  Return   * 00984700
*                  and reason code descriptions indicate what answer  * 00984800
*                  area fields are applicable for non-successfully    * 00984900
*                  completing requests.                               * 00985000
*                                                                     * 00985100
*                                                                     * 00985200
*                  ANSLEN=xanslen]                                    * 00985300
*                      is the name (RS-type), or address in register  * 00985400
*                      (2)-(12), of a required halfword input that    * 00985500
*                      contains the length in bytes of the virtual    * 00985600
*                      storage area provided for ANSAREA.             * 00985700
*                                                                     * 00985800
*                      The length of the answer area is described by  * 00985900
*                      the IXLYLAA mapping macro.                     * 00986000
*                                                                     * 00986100
*                                                                     * 00986200
*                                                                     * 00986300
*                                                                     * 00986400
*                                                                     * 00986500
*          [MODE=SYNCECB                                              * 00986600
*              Indicates that the request will be attempted           * 00986700
*              synchronously.  If the request can not be completed    * 00986800
*              synchronously control is returned to the caller prior  * 00986900
*              to completion of the request, and the ECB specified by * 00987000
*              REQECB is posted when the request has completed.       * 00987100
*                                                                     * 00987200
*              When MODE=SYNCECB is specified and the request does    * 00987300
*              not complete synchronously latent XES binds to the     * 00987400
*              storage locations specified by BUFFER, BUFLIST,        * 00987500
*              LISTKEYAREA, ADJAREA, and ANSAREA persist until the    * 00987600
*              REQECB ECB is posted.                                  * 00987700
*                                                                     * 00987800
*                                                                     * 00987900
*              ANSAREA=xansarea                                       * 00988000
*                  is a required input.  It is the name (RS-type), or * 00988100
*                  address in register (2)-(12), of a virtual storage * 00988200
*                  area in which command response information will be * 00988300
*                  placed.  The format of the answer area is          * 00988400
*                  described by the IXLYLAA mapping macro.            * 00988500
*                                                                     * 00988600
*                  Not all fields in the answer area are applicable   * 00988700
*                  to all request types.  Request type descriptions   * 00988800
*                  indicate what answer area fields are applicable    * 00988900
*                  for successful request completion cases.  Return   * 00989000
*                  and reason code descriptions indicate what answer  * 00989100
*                  area fields are applicable for non-successfully    * 00989200
*                  completing requests.                               * 00989300
*                                                                     * 00989400
*                                                                     * 00989500
*                  ANSLEN=xanslen                                     * 00989600
*                      is the name (RS-type), or address in register  * 00989700
*                      (2)-(12), of a required halfword input that    * 00989800
*                      contains the length in bytes of the virtual    * 00989900
*                      storage area provided for ANSAREA.             * 00990000
*                                                                     * 00990100
*                      The length of the answer area is described by  * 00990200
*                      the IXLYLAA mapping macro.                     * 00990300
*                                                                     * 00990400
*                                                                     * 00990500
*                                                                     * 00990600
*                                                                     * 00990700
*                                                                     * 00990800
*                                                                     * 00990900
*              REQECB=xreqecb]                                        * 00991000
*                  is the name (RS-type), or address in register      * 00991100
*                  (2)-(12), of a required 4 byte input that contains * 00991200
*                  the address of an ECB to be posted when the        * 00991300
*                  request has completed.                             * 00991400
*                                                                     * 00991500
*                  The ECB should be initialized by the requestor     * 00991600
*                  prior to use of this service.  The ECB must reside * 00991700
*                  either in common storage or in the home address    * 00991800
*                  space that existed at the time the connection      * 00991900
*                  service, IXLCONN, was issued for the structure.    * 00992000
*                  Any task which waits on the ECB must have the same * 00992100
*                  home address space as existed when IXLCONN was     * 00992200
*                  issued.                                            * 00992300
*                                                                     * 00992400
*                                                                     * 00992500
*                                                                     * 00992600
*          [MODE=SYNCEXIT                                             * 00992700
*              Indicates that the request will be attempted           * 00992800
*              synchronously.  If the request can not be completed    * 00992900
*              synchronously control is returned to the caller prior  * 00993000
*              to completion of the request.  When the request        * 00993100
*              completes the connection's Complete Exit will be       * 00993200
*              called.                                                * 00993300
*                                                                     * 00993400
*              When the request does not complete synchronously       * 00993500
*              latent XES binds to the storage locations specified by * 00993600
*              BUFFER, BUFLIST, ADJAREA, LISTKEYAREA, and ANSAREA     * 00993700
*              persist until the connection's Complete Exit is        * 00993800
*              called.                                                * 00993900
*                                                                     * 00994000
*                                                                     * 00994100
*              ANSAREA=xansarea                                       * 00994200
*                  is a required input.  It is the name (RS-type), or * 00994300
*                  address in register (2)-(12), of a virtual storage * 00994400
*                  area in which command response information will be * 00994500
*                  placed.  The format of the answer area is          * 00994600
*                  described by the IXLYLAA mapping macro.            * 00994700
*                                                                     * 00994800
*                  Not all fields in the answer area are applicable   * 00994900
*                  to all request types.  Request type descriptions   * 00995000
*                  indicate what answer area fields are applicable    * 00995100
*                  for successful request completion cases.  Return   * 00995200
*                  and reason code descriptions indicate what answer  * 00995300
*                  area fields are applicable for non-successfully    * 00995400
*                  completing requests.                               * 00995500
*                                                                     * 00995600
*                                                                     * 00995700
*                  ANSLEN=xanslen                                     * 00995800
*                      is the name (RS-type), or address in register  * 00995900
*                      (2)-(12), of a required halfword input that    * 00996000
*                      contains the length in bytes of the virtual    * 00996100
*                      storage area provided for ANSAREA.             * 00996200
*                                                                     * 00996300
*                      The length of the answer area is described by  * 00996400
*                      the IXLYLAA mapping macro.                     * 00996500
*                                                                     * 00996600
*                                                                     * 00996700
*                                                                     * 00996800
*                                                                     * 00996900
*                                                                     * 00997000
*                                                                     * 00997100
*              [REQDATA=xreqdata|NO_REQDATA]]                       * 00997200
*                  is the name (RS-type), or address in register      * 00997300
*                  (2)-(12), of an optional 8 character input         * 00997400
*                  variable that contains connected user-defined data * 00997500
*                  for the request to be passed to the Complete Exit  * 00997600
*                  when driven.  The contents of REQDATA only has     * 00997700
*                  meaning to the application.                        * 00997800
*                                                                     * 00997900
*                  DEFAULT: NO_REQDATA                                * 00998000
*                                                                     * 00998100
*                                                                     * 00998200
*                                                                     * 00998300
*          [MODE=SYNCTOKEN                                            * 00998400
*              Indicates that the request will be attempted           * 00998500
*              synchronously.  If the request can not be completed    * 00998600
*              synchronously control is returned to the caller prior  * 00998700
*              to completion of the request and a token that uniquely * 00998800
*              identifies the request is returned.                    * 00998900
*                                                                     * 00999000
*              When the request does not complete synchronously       * 00999100
*              latent XES binds to the storage locations specified by * 00999200
*              BUFFER, BUFLIST, ADJAREA, LISTKEYAREA, and ANSAREA     * 00999300
*              persist until a subsequent corresponding IXLFCOMP      * 00999400
*              request indicates completion of the original request.  * 00999500
*                                                                     * 00999600
*                                                                     * 00999700
*              ANSAREA=xansarea                                       * 00999800
*                  is a required input.  It is the name (RS-type), or * 00999900
*                  address in register (2)-(12), of a virtual storage * 01000000
*                  area in which command response information will be * 01000100
*                  placed.  The format of the answer area is          * 01000200
*                  described by the IXLYLAA mapping macro.  Not all   * 01000300
*                  fields in the answer area are applicable to all    * 01000400
*                  request types.  Request type descriptions indicate * 01000500
*                  what answer area fields are applicable for         * 01000600
*                  successful request completion cases.  Return and   * 01000700
*                  reason code descriptions indicate what answer area * 01000800
*                  fields are applicable for non-successfully         * 01000900
*                  completing requests.                               * 01001000
*                                                                     * 01001100
*                                                                     * 01001200
*                  ANSLEN=xanslen                                     * 01001300
*                      is the name (RS-type), or address in register  * 01001400
*                      (2)-(12), of a required halfword input that    * 01001500
*                      contains the length in bytes of the virtual    * 01001600
*                      storage area provided for ANSAREA.             * 01001700
*                                                                     * 01001800
*                      The length of the answer area is described by  * 01001900
*                      the IXLYLAA mapping macro.                     * 01002000
*                                                                     * 01002100
*                                                                     * 01002200
*                                                                     * 01002300
*                                                                     * 01002400
*                                                                     * 01002500
*                                                                     * 01002600
*              REQTOKEN=xreqtoken]                                    * 01002700
*                  is a required output.  It is the name (RS-type),   * 01002800
*                  or address in register (2)-(12), of a 16 character * 01002900
*                  field into which is stored a token that uniquely   * 01003000
*                  identifies this request.                           * 01003100
*                                                                     * 01003200
*                  This token must be specified on a subsequent       * 01003300
*                  invocation of IXLFCOMP to force completion of the  * 01003400
*                  request and determine its final disposition.       * 01003500
*                                                                     * 01003600
*                                                                     * 01003700
*                                                                     * 01003800
*          [MODE=ASYNCECB                                             * 01003900
*              Indicates that the request is to be initiated and      * 01004000
*              control is to be returned to the caller prior to       * 01004100
*              completion of the request.  When the request completes * 01004200
*              the ECB specified by REQECB will be posted.            * 01004300
*                                                                     * 01004400
*              The latent XES binds to the storage locations          * 01004500
*              specified by BUFFER, BUFLIST, LISTKEYAREA, ADJAREA,    * 01004600
*              and ANSAREA persist until the REQECB ECB is posted.    * 01004700
*                                                                     * 01004800
*                                                                     * 01004900
*              ANSAREA=xansarea                                       * 01005000
*                  is a required input.  It is the name (RS-type), or * 01005100
*                  address in register (2)-(12), of a virtual storage * 01005200
*                  area, called the answer area, in which command     * 01005300
*                  response information will be placed.  The format   * 01005400
*                  of the answer area is described by the IXLYLAA     * 01005500
*                  mapping macro.  Not all fields in the answer area  * 01005600
*                  are applicable to all request types.  Request type * 01005700
*                  descriptions indicate what answer area fields are  * 01005800
*                  applicable for successful request completion       * 01005900
*                  cases.  Return and reason code descriptions        * 01006000
*                  indicate what answer area fields are applicable    * 01006100
*                  for non-successfully completing requests.          * 01006200
*                                                                     * 01006300
*                                                                     * 01006400
*                  ANSLEN=xanslen                                     * 01006500
*                      is the name (RS-type), or address in register  * 01006600
*                      (2)-(12), of a required halfword input that    * 01006700
*                      contains the length in bytes of the virtual    * 01006800
*                      storage area provided for ANSAREA.             * 01006900
*                                                                     * 01007000
*                      The length of the answer area is described by  * 01007100
*                      the IXLYLAA mapping macro.                     * 01007200
*                                                                     * 01007300
*                                                                     * 01007400
*                                                                     * 01007500
*                                                                     * 01007600
*                                                                     * 01007700
*                                                                     * 01007800
*              REQECB=xreqecb]                                        * 01007900
*                  is the name (RS-type), or address in register      * 01008000
*                  (2)-(12), of a required 4 byte input that contains * 01008100
*                  the address of an ECB to be posted when the        * 01008200
*                  request has completed.                             * 01008300
*                                                                     * 01008400
*                  The ECB should be initialized by the requestor     * 01008500
*                  prior to use with this service.  The ECB must      * 01008600
*                  reside either in common storage or in the home     * 01008700
*                  address space that existed at the time the         * 01008800
*                  connection service, IXLCONN, was issued for the    * 01008900
*                  structure.  Any task which waits on the ECB must   * 01009000
*                  have the same home address space as existed when   * 01009100
*                  IXLCONN was issued.                                * 01009200
*                                                                     * 01009300
*                                                                     * 01009400
*                                                                     * 01009500
*          [MODE=ASYNCEXIT                                            * 01009600
*              Indicates that the request is to be initiated and      * 01009700
*              control is to be returned to the caller prior to       * 01009800
*              completion of the request.  When the request completes * 01009900
*              the connection's Complete Exit will be called.         * 01010000
*                                                                     * 01010100
*              The latent XES binds to the storage locations          * 01010200
*              specified by BUFFER, BUFLIST, LISTKEYAREA, ADJAREA,    * 01010300
*              and ANSAREA persist until the connection's Complete    * 01010400
*              Exit is called.                                        * 01010500
*                                                                     * 01010600
*                                                                     * 01010700
*              ANSAREA=xansarea                                       * 01010800
*                  is a required input.  It is the name (RS-type), or * 01010900
*                  address in register (2)-(12), of a virtual storage * 01011000
*                  area, called the answer area, in which command     * 01011100
*                  response information will be placed.  The format   * 01011200
*                  of the answer area is described by the IXLYLAA     * 01011300
*                  mapping macro.  Not all fields in the answer area  * 01011400
*                  are applicable to all request types.  Request type * 01011500
*                  descriptions indicate what answer area fields are  * 01011600
*                  applicable for successful request completion       * 01011700
*                  cases.  Return and reason code descriptions        * 01011800
*                  indicate what answer area fields are applicable    * 01011900
*                  for non-successfully completing requests.          * 01012000
*                                                                     * 01012100
*                                                                     * 01012200
*                  ANSLEN=xanslen                                     * 01012300
*                      is the name (RS-type), or address in register  * 01012400
*                      (2)-(12), of a required halfword input that    * 01012500
*                      contains the length in bytes of the virtual    * 01012600
*                      storage area provided for ANSAREA.             * 01012700
*                                                                     * 01012800
*                      The length of the answer area is described by  * 01012900
*                      the IXLYLAA mapping macro.                     * 01013000
*                                                                     * 01013100
*                                                                     * 01013200
*                                                                     * 01013300
*                                                                     * 01013400
*                                                                     * 01013500
*                                                                     * 01013600
*              [REQDATA=xreqdata|NO_REQDATA]]                       * 01013700
*                  is the name (RS-type), or address in register      * 01013800
*                  (2)-(12), of an optional 8 character input         * 01013900
*                  variable that contains connected user-defined data * 01014000
*                  for the request to be passed to the Complete Exit  * 01014100
*                  when driven.  The contents of REQDATA only has     * 01014200
*                  meaning to the application.                        * 01014300
*                                                                     * 01014400
*                  DEFAULT: NO_REQDATA                                * 01014500
*                                                                     * 01014600
*                                                                     * 01014700
*                                                                     * 01014800
*          [MODE=ASYNCTOKEN                                           * 01014900
*              Indicates that the request is to be initiated, a token * 01015000
*              generated that uniquely identifies the request on this * 01015100
*              system, and control returned to the caller prior to    * 01015200
*              completion of the requested operation.                 * 01015300
*                                                                     * 01015400
*              The latent XES binds to the storage locations          * 01015500
*              specified by BUFFER, BUFLIST, LISTKEYAREA, ADJAREA,    * 01015600
*              and ANSAREA persist until a subsequent corresponding   * 01015700
*              IXLFCOMP request indicates completion of the original  * 01015800
*              request.                                               * 01015900
*                                                                     * 01016000
*                                                                     * 01016100
*              ANSAREA=xansarea                                       * 01016200
*                  is a required input.  It is the name (RS-type), or * 01016300
*                  address in register (2)-(12), of a virtual storage * 01016400
*                  area in which command response information will be * 01016500
*                  placed.  The format of the answer area is          * 01016600
*                  described by the IXLYLAA mapping macro.  Not all   * 01016700
*                  fields in the answer area are applicable to all    * 01016800
*                  request types.  Request type descriptions indicate * 01016900
*                  what answer area fields are applicable for         * 01017000
*                  successful request completion cases.  Return and   * 01017100
*                  reason code descriptions indicate what answer area * 01017200
*                  fields are applicable for non-successfully         * 01017300
*                  completing requests.                               * 01017400
*                                                                     * 01017500
*                                                                     * 01017600
*                  ANSLEN=xanslen                                     * 01017700
*                      is the name (RS-type), or address in register  * 01017800
*                      (2)-(12), of a required halfword input that    * 01017900
*                      contains the length in bytes of the virtual    * 01018000
*                      storage area provided for ANSAREA.             * 01018100
*                                                                     * 01018200
*                      The length of the answer area is described by  * 01018300
*                      the IXLYLAA mapping macro.                     * 01018400
*                                                                     * 01018500
*                                                                     * 01018600
*                                                                     * 01018700
*                                                                     * 01018800
*                                                                     * 01018900
*                                                                     * 01019000
*              REQTOKEN=xreqtoken]                                    * 01019100
*                  is a required output.  It is the name (RS-type),   * 01019200
*                  or address in register (2)-(12), of a 16 character * 01019300
*                  field into which is stored a token that uniquely   * 01019400
*                  identifies this request.                           * 01019500
*                                                                     * 01019600
*                  This token must be specified on a subsequent       * 01019700
*                  invocation of IXLFCOMP to force completion of the  * 01019800
*                  request and determine its final disposition.       * 01019900
*                                                                     * 01020000
*                                                                     * 01020100
*                                                                     * 01020200
*          [MODE=ASYNCNORESPONSE]                                     * 01020300
*              Indicates that the request is to be initiated and      * 01020400
*              control returned to the caller prior to completion of  * 01020500
*              the requested operation.  No asynchronous request      * 01020600
*              token is returned, hence no external mechanism exists  * 01020700
*              to force completion of the request.                    * 01020800
*                                                                     * 01020900
*              MODE=ASYNCNORESPONSE is mutually exclusive with        * 01021000
*              LOCKINDEX, BUFFER, and BUFLIST.  Any request which     * 01021100
*              does not perform a locking operation and does not use  * 01021200
*              a BUFFER area or BUFLIST buffers may specifiy          * 01021300
*              MODE=ASYNCNORESPONSE.                                  * 01021400
*                                                                     * 01021500
*                                                                     * 01021600
*                                                                     * 01021700
*                                                                     * 01021800
*                                                                     * 01021900
*                                                                     * 01022000
*      [RETCODE=xretcode]                                             * 01022100
*          is the name (RS-type) of an optional fullword output       * 01022200
*          variable, or register (2)-(12), into which the return code * 01022300
*          is to be copied from GPR 15.                               * 01022400
*                                                                     * 01022500
*                                                                     * 01022600
*                                                                     * 01022700
*                                                                     * 01022800
*      [RSNCODE=xrsncode]                                             * 01022900
*          is the name (RS-type) of an optional fullword output       * 01023000
*          variable, or register (2)-(12), into which the reason code * 01023100
*          is to be copied from GPR 0.                                * 01023200
*                                                                     * 01023300
*                                                                     * 01023400
*                                                                     * 01023500
*                                                                     * 01023600
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 01023700
*          is an optional byte input decimal value in the "0-4" range * 01023800
*          that specifies the macro version.  PLISTVER is the only    * 01023900
*          key allowed on the list form of MF and determines which    * 01024000
*          parameter list is generated.  The macro keys associated    * 01024100
*          with each supported version of the macro are listed in     * 01024200
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 01024300
*          instead of a number, and the parameter list will be of the * 01024400
*          largest size currently supported. This size may grow from  * 01024500
*          release to release (thus possibly affecting the amount of  * 01024600
*          storage needed by your program).  If your program can      * 01024700
*          tolerate this, IBM recommends that you always specify MAX  * 01024800
*          when creating the list form parameter list as that will    * 01024900
*          ensure that the list form parameter list is always long    * 01025000
*          enough to hold whatever parameters might be specified on   * 01025100
*          the execute form.                                          * 01025200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 01025300
*          default is the lowest version which allows all of the      * 01025400
*          parameters specified on the invocation to be processed.    * 01025500
*                                                                     * 01025600
*                                                                     * 01025700
*                                                                     * 01025800
*                                                                     * 01025900
*      [MF=S|L|E]                                                   * 01026000
*          is an optional keyword input which specifies the macro     * 01026100
*          form.                                                      * 01026200
*          DEFAULT: S                                                 * 01026300
*                                                                     * 01026400
*                                                                     * 01026500
*          [MF=S]                                                     * 01026600
*              specifies the standard form of the macro.  The "S"     * 01026700
*              form generates code to put the parameters into an      * 01026800
*              in-line parameter list and invoke the desired service. * 01026900
*              Full checking for required macro keys is done along    * 01027000
*              with supplying defaults for omitted optional           * 01027100
*              parameters.                                            * 01027200
*                                                                     * 01027300
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 01027400
*              specifies the list form of the macro.  The "L" form    * 01027500
*              defines an area to be used for the parameter list.     * 01027600
*              Only the PLISTVER key may be specified on the          * 01027700
*              invocation.  All other macro parameters are flagged as * 01027800
*              errors.  If PLISTVER is not specified, the original    * 01027900
*              parameter list definition is used.                     * 01028000
*                                                                     * 01028100
*            ,xmfctrl                                                 * 01028200
*              is a required input.  It is the name of a storage area * 01028300
*              for the parameter list.                                * 01028400
*                                                                     * 01028500
*            ,xmfattr|0D                                            * 01028600
*              is an optional 60 character input string that varies   * 01028700
*              from 1 to 60 characters. Use it to force boundary      * 01028800
*              alignment of the parameter list. Use only 0F or 0D.    * 01028900
*              DEFAULT: 0D which forces the parameter list to a       * 01029000
*              doubleword boundary.                                   * 01029100
*                                                                     * 01029200
*          [MF=(E,xmfctrl,COMPLETE)]                                * 01029300
*              specifies the execute form of the macro.  The "E" form * 01029400
*              generates code to put the parameters into the          * 01029500
*              parameter list specified by xmfctrl and provides full  * 01029600
*              syntax checking with default setting.                  * 01029700
*                                                                     * 01029800
*            ,xmfctrl                                                 * 01029900
*              is a required input.  It is the name (RS-type), or     * 01030000
*              address in register (1)-(12), of a storage area for    * 01030100
*              the parameter list.                                    * 01030200
*                                                                     * 01030300
*            ,COMPLETE                                              * 01030400
*              is an optional keyword input which specifies the       * 01030500
*              degree of macro parameter syntax checking.             * 01030600
*              DEFAULT: COMPLETE                                      * 01030700
*                                                                     * 01030800
*                                                                     * 01030900
*              COMPLETE                                               * 01031000
*                  Checking for required macro keys is done and       * 01031100
*                  defaults are supplied for omitted optional         * 01031200
*                  parameters.                                        * 01031300
*                                                                     * 01031400
*                                                                     * 01031500
*                                                                     * 01031600
*                                                                     * 01031700
*                                                                     * 01031800
*                                                                     * 01031900
*                                                                     * 01032000
*01* RETURN CODES:                                                    * 01032100
*                                                                     * 01032200
*                                                                     * 01032300
*       0         IxlRetCodeOk:  Successful completion.               * 01032400
*                                                                     * 01032500
*                 If a MODE value of ASYNCECB, ASYNCEXIT, ASYNCTOKEN, * 01032600
*                 or ASYNCNORESPONSE was specified then the request   * 01032700
*                 has been successfully initiated.                    * 01032800
*                                                                     * 01032900
*                                                                     * 01033000
*       4         IxlRetCodeWarning:  Warning.  The request           * 01033100
*                 completed, but with exceptional circumstances.      * 01033200
*                                                                     * 01033300
*                 HEX REASON  MEANING                                 * 01033400
*                 CODE                                                * 01033500
*                                                                     * 01033600
*                                                                     * 01033700
*                 xxxx0402    IxlRsnCodeAsynch:  The request could    * 01033800
*                             not be completed synchronously.  It     * 01033900
*                             will be completed asynchronously.       * 01034000
*                                                                     * 01034100
*                             If MODE=SYNCECB was specified the ECB   * 01034200
*                             specifed for REQECB will be posted when * 01034300
*                             the request has finished.               * 01034400
*                                                                     * 01034500
*                             If MODE=SYNCEXIT was specified the      * 01034600
*                             connection's completion exit will be    * 01034700
*                             given control when the request has      * 01034800
*                             finished.                               * 01034900
*                                                                     * 01035000
*                             If MODE=SYNCTOKEN was specified the     * 01035100
*                             answer area contains an asynchronous    * 01035200
*                             request token which may be used on the  * 01035300
*                             IXLFCOMP macro to determine when the    * 01035400
*                             request has finished.                   * 01035500
*                                                                     * 01035600
*                 xxxx0409    IxlRsnCodeTimeout:  A READ_LIST,        * 01035700
*                             DELETE_LIST, READ_MULT, DELETE_MULT,    * 01035800
*                             DELETE_ENTRYLIST or MOVE_ENTRYLIST      * 01035900
*                             request has completed prematurely due   * 01036000
*                             to a model-dependent timeout condition. * 01036100
*                                                                     * 01036200
*                             For READ_LIST and READ_MULT, the number * 01036300
*                             of output elements returned in the      * 01036400
*                             BUFFER area or BUFLIST buffers has been * 01036500
*                             returned in the answer area.  For       * 01036600
*                             DELETE_MULT, DELETE_LIST and            * 01036700
*                             DELETE_ENTRYLIST, the number of deleted * 01036800
*                             structure entries has been returned in  * 01036900
*                             the answer area.  For both READ_MULT    * 01037000
*                             and DELETE_MULT, a restart token or an  * 01037100
*                             extended restart token has been         * 01037200
*                             returned in the answer area.  For       * 01037300
*                             READ_LIST and DELETE_LIST, the list     * 01037400
*                             entry controls for the first            * 01037500
*                             unprocessed entry in the list sequence  * 01037600
*                             has been returned in the answer area.   * 01037700
*                             For DELETE_ENTRYLIST and                * 01037800
*                             MOVE_ENTRYLIST, the index of the first  * 01037900
*                             unprocessed entry identifier or name    * 01038000
*                             has been returned in the answer area.   * 01038100
*                                                                     * 01038200
*                 xxxx040D    IxlRsnCodeBadReadAdjData:  A READ_LIST, * 01038300
*                             or READ_MULT specified that adjunct     * 01038400
*                             data was to be read, but the storage    * 01038500
*                             area provided for ADJDATA is not        * 01038600
*                             addressable.  All other requested data  * 01038700
*                             was retrieved.  If supported and        * 01038800
*                             requested, the entry data was           * 01038900
*                             retrieved.                              * 01039000
*                                                                     * 01039100
*                 xxxx040F    IxlRsnCodeBufferFull:  A READ_LIST or   * 01039200
*                             READ_MULT request has completed         * 01039300
*                             prematurely due to a buffer full        * 01039400
*                             condition.                              * 01039500
*                                                                     * 01039600
*                             For both READ_LIST and READ_MULT, the   * 01039700
*                             number of output elements returned in   * 01039800
*                             the BUFFER area or BUFLIST buffers has  * 01039900
*                             been returned in the answer area.  For  * 01040000
*                             READ_MULT a restart token or an         * 01040100
*                             extended restart token has been         * 01040200
*                             returned in the answer area.  For       * 01040300
*                             READ_LIST, the list entry controls for  * 01040400
*                             the first unprocessed entry in the list * 01040500
*                             sequence has been returned in the       * 01040600
*                             answer area.                            * 01040700
*                                                                     * 01040800
*                 xxxx0410    IxlRsnCodeLockCond:  For a              * 01040900
*                             LOCKOPER=HELDBY request, or a request   * 01041000
*                             that specified LOCKCOMP, the request    * 01041100
*                             could not be completed successfully     * 01041200
*                             because the specified lock is not       * 01041300
*                             currently held as required.  The        * 01041400
*                             connection ID of the lock owner is      * 01041500
*                             returned in the answer area.            * 01041600
*                                                                     * 01041700
*                 xxxx0412    IxlRsnCodeLockHeldBySys:  For a         * 01041800
*                             LOCKOPER=HELDBY request, the request    * 01041900
*                             could not be completed successfully     * 01042000
*                             because the specified lock is not       * 01042100
*                             currently held as required.             * 01042200
*                                                                     * 01042300
*                                                                     * 01042400
*                                                                     * 01042500
*                                                                     * 01042600
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 01042700
*                 completed due to a user error.                      * 01042800
*                                                                     * 01042900
*                 HEX REASON  MEANING                                 * 01043000
*                 CODE                                                * 01043100
*                                                                     * 01043200
*                                                                     * 01043300
*                 xxxx0801    IxlRsnCodeBadParmlist:  Either unable   * 01043400
*                             to read or unable to write to the       * 01043500
*                             IXLLSTM parameter list.                 * 01043600
*                                                                     * 01043700
*                 xxxx0804    IxlRsnCodeBadVersionNum:  The version   * 01043800
*                             number in the parameter list is not     * 01043900
*                             valid.  This usually indicates that the * 01044000
*                             level of the macro is incompatible with * 01044100
*                             the level of the XES service code.      * 01044200
*                                                                     * 01044300
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 01044400
*                             contoken specified.  The contoken is    * 01044500
*                             invalid for one of the following        * 01044600
*                             reasons:  disconnect has occurred, EOT  * 01044700
*                             of the connector's task, input contoken * 01044800
*                             is not the contoken returned from       * 01044900
*                             IXLCONN, the request was issued outside * 01045000
*                             the connector's address space, or the   * 01045100
*                             contoken has been invalidated for       * 01045200
*                             rebuild.                                * 01045300
*                                                                     * 01045400
*                 xxxx0822    IxlRsnCodeBadReadType:  An IXLLSTM      * 01045500
*                             READ_LIST or READ_MULT request          * 01045600
*                             specified that either entry or adjunct  * 01045700
*                             data was to be returned, but the list   * 01045800
*                             structure does not contain the          * 01045900
*                             requested component.  No data is        * 01046000
*                             returned.                               * 01046100
*                                                                     * 01046200
*                 xxxx0824    IxlRsnCodeWrongStrType:  The connection * 01046300
*                             specified by CONTOKEN is not to a list  * 01046400
*                             structure.                              * 01046500
*                                                                     * 01046600
*                 xxxx0825    IxlRsnCodeNoEntry:  The designated list * 01046700
*                             entry or event monitor controls object  * 01046800
*                             does not exist, hence request           * 01046900
*                             processing was suppressed.              * 01047000
*                                                                     * 01047100
*                 xxxx082B    IxlRsnCodeBadIDIndex:  An invalid value * 01047200
*                             was specified for either FIRSTELEM or   * 01047300
*                             LASTELEM.  When FIRSTELEM or LASTELEM   * 01047400
*                             is invalid, the index of the first      * 01047500
*                             entry identifier or name which was not  * 01047600
*                             processed is returned in the answer     * 01047700
*                             area.                                   * 01047800
*                                                                     * 01047900
*                 xxxx0833    IxlRsnCodeBadPgblAttr:  The storage     * 01048000
*                             area specified by BUFFER, or one of the * 01048100
*                             buffers in the BUFLIST list is          * 01048200
*                             specified as being pageable, but is     * 01048300
*                             not.                                    * 01048400
*                                                                     * 01048500
*                 xxxx0834    IxlRsnCodeBadNonPgblAttr:  The storage  * 01048600
*                             area specified by BUFFER, or one of the * 01048700
*                             buffers in the BUFLIST list is          * 01048800
*                             specified as being non-pageable, but is * 01048900
*                             either pageable or not addressable.     * 01049000
*                                                                     * 01049100
*                 xxxx0835    IxlRsnCodeBadDataAddr:  The storage     * 01049200
*                             area specified by BUFFER or one of the  * 01049300
*                             buffers in the BUFLIST list is not      * 01049400
*                             addressable.                            * 01049500
*                                                                     * 01049600
*                 xxxx0836    IxlRsnCodeBadRealAddr:  Real storage    * 01049700
*                             addresses were provided in a BUFLIST    * 01049800
*                             list.  One of the buffers is not        * 01049900
*                             addressable in central storage.         * 01050000
*                                                                     * 01050100
*                 xxxx0838    IxlRsnCodeBadAnsArea:  The storage area * 01050200
*                             specified by ANSAREA and ANSLEN is not  * 01050300
*                             addressable.                            * 01050400
*                                                                     * 01050500
*                 xxxx0839    IxlRsnCodeBadReqTokenArea:  The storage * 01050600
*                             area specified by REQTOKEN is not       * 01050700
*                             addressable.                            * 01050800
*                                                                     * 01050900
*                 xxxx083D    IxlRsnCodeBadAnsLen:  The length of the * 01051000
*                             answer area, as specified by ANSLEN, is * 01051100
*                             not sufficient for providing answer     * 01051200
*                             area information.                       * 01051300
*                                                                     * 01051400
*                 xxxx083E    IxlRsnCodeMaxListKey:  The request      * 01051500
*                             failed while trying to assign the list  * 01051600
*                             key to an entry which was being moved.  * 01051700
*                             Either the list key or the list key     * 01051800
*                             plus the list key increment value is    * 01051900
*                             greater than the maximum list key.      * 01052000
*                                                                     * 01052100
*                 xxxx083F    IxlRsnCodeBadEntryVersion:  The entry   * 01052200
*                             designated by the specified list entry  * 01052300
*                             controls has a version number which     * 01052400
*                             does not meet the criteria specified by * 01052500
*                             VERSCOMP and VERSCOMPTYPE.  The list    * 01052600
*                             entry controls for the entry are        * 01052700
*                             returned in the answer area.            * 01052800
*                                                                     * 01052900
*                 xxxx0840    IxlRsnCodeBadEntryList:  The entry      * 01053000
*                             designated by the specified list entry  * 01053100
*                             controls does not reside on the list    * 01053200
*                             specified by LISTNUM.  The list entry   * 01053300
*                             controls for the entry are returned in  * 01053400
*                             the answer area.                        * 01053500
*                                                                     * 01053600
*                 xxxx0841    IxlRsnCodeBadEntryName:  The name       * 01053700
*                             specified by ENTRYNAME is not a unique  * 01053800
*                             name within the structure, and hence    * 01053900
*                             entry creation was suppressed.          * 01054000
*                                                                     * 01054100
*                 xxxx0842    IxlRsnCodePersistentLock:  A request    * 01054200
*                             specifying a NOTHELD lock operation     * 01054300
*                             failed because the lock was held by a   * 01054400
*                             connection in the failed persistent     * 01054500
*                             state.  The connection ID of the lock   * 01054600
*                             owner is returned in the answer area.   * 01054700
*                                                                     * 01054800
*                 xxxx0843    IxlRsnCodeBadEntryID:  An entry         * 01054900
*                             corresponding to an identifier or name  * 01055000
*                             in either IDLIST or NAMELIST,           * 01055100
*                             respectively, does not exist.  The      * 01055200
*                             index of the offending entry identifier * 01055300
*                             or name was returned in the answer      * 01055400
*                             area.                                   * 01055500
*                                                                     * 01055600
*                 xxxx0845    IxlRsnCodeNoNames:  A list entry was    * 01055700
*                             designated by entry name, but the       * 01055800
*                             structure does not support entry names. * 01055900
*                                                                     * 01056000
*                 xxxx0846    IxlRsnCodeBadLockIndex:  The specified  * 01056100
*                             LOCKINDEX exceeds the size of the lock  * 01056200
*                             table for the structure.                * 01056300
*                                                                     * 01056400
*                 xxxx0847    IxlRsnCodeBadListNumber:  The specified * 01056500
*                             LISTNUM exceeds the number of lists for * 01056600
*                             the structure.                          * 01056700
*                                                                     * 01056800
*                 xxxx0849    IxlRsnCodeBadResToken:  The specified   * 01056900
*                             restart token is not valid.  Possible   * 01057000
*                             causes are:                             * 01057100
*                                                                     * 01057200
*                                                                     * 01057300
*                             o   The specified token does not        * 01057400
*                                 correspond to a previous            * 01057500
*                                 prematurely-completed request.      * 01057600
*                                                                     * 01057700
*                             o   The user specified RESTOKEN when    * 01057800
*                                 EXTRESTOKEN was required.           * 01057900
*                                                                     * 01058000
*                             o   The user specified EXTRESTOKEN when * 01058100
*                                 RESTOKEN was required.              * 01058200
*                                                                     * 01058300
*                                                                     * 01058400
*                                                                     * 01058500
*                 xxxx084A    IxlRsnCodeNoKeys:  The structure does   * 01058600
*                             not support the use of entry keys,  and * 01058700
*                             the request either was a request type   * 01058800
*                             that requires the structure to support  * 01058900
*                             entry keys,  or designated a sublist,   * 01059000
*                             list entry, or list position by list    * 01059100
*                             number and entry key.                   * 01059200
*                                                                     * 01059300
*                 xxxx084B    IxlRsnCodeNoLocks:  A locking operation * 01059400
*                             was requested, but the structure does   * 01059500
*                             not contain a lock table.               * 01059600
*                                                                     * 01059700
*                 xxxx084E    IxlRsnCodeBadMoveToList:  An IXLLSTM    * 01059800
*                             request specified a list number for     * 01059900
*                             MOVETOLIST that exceeds the number of   * 01060000
*                             lists defined for the structure.        * 01060100
*                                                                     * 01060200
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 01060300
*                             specifying MODE=SYNCSUSPEND failed      * 01060400
*                             because the caller is disabled and      * 01060500
*                             cannot be suspended.                    * 01060600
*                                                                     * 01060700
*                 xxxx0854    IxlRsnCodeBadLockComp:  The value       * 01060800
*                             specified for LOCKCOMP is not a valid   * 01060900
*                             connection identifier.                  * 01061000
*                                                                     * 01061100
*                 xxxx0859    IxlRsnCodeBadListAuth:  The authority   * 01061200
*                             value for the specified list does not   * 01061300
*                             meet the criteria specified by AUTHCOMP * 01061400
*                             and AUTHCOMPTYPE.  The current list     * 01061500
*                             authority and description are returned  * 01061600
*                             in the answer area.                     * 01061700
*                                                                     * 01061800
*                 xxxx0864    IxlRsnCodeBadBufSize:  The specified    * 01061900
*                             buffer area is not large enough to      * 01062000
*                             contain the data being read.  For       * 01062100
*                             READ_LIST or a READ_MULT request the    * 01062200
*                             answer area contains the list entry     * 01062300
*                             controls for the first list entry       * 01062400
*                             selected for processing.                * 01062500
*                                                                     * 01062600
*                 xxxx0865    IxlRsnCodeBadBufSpec:  The buffer       * 01062700
*                             specification is in error.  Refer to    * 01062800
*                             the BUFFER or BUFLIST specification     * 01062900
*                             requirements.                           * 01063000
*                                                                     * 01063100
*                 xxxx0866    IxlRsnCodeBadBufKey:  The buffer        * 01063200
*                             storage key is incorrect.  For requests * 01063300
*                             which write CF data the data cannot be  * 01063400
*                             fetched.  For requests which read CF    * 01063500
*                             data the data cannot be stored.         * 01063600
*                                                                     * 01063700
*                 xxxx0867    IxlRsnCodeBadBufList:  The storage area * 01063800
*                             specified by BUFLIST is not             * 01063900
*                             addressable.                            * 01064000
*                                                                     * 01064100
*                 xxxx086A    IxlRsnCodeBadElemNum:  The value        * 01064200
*                             specified for ELEMNUM is not valid.     * 01064300
*                                                                     * 01064400
*                 xxxx0887    IxlRsnCodeBadExtResToken:  The          * 01064500
*                             specified extended restart token is not * 01064600
*                             valid.  The specified token refers to   * 01064700
*                             an older instance of the target         * 01064800
*                             structure.                              * 01064900
*                                                                     * 01065000
*                 xxxx0894    IxlRsnCodeBadKeyCompare The value       * 01065100
*                             specified for ENTRYKEY used with the    * 01065200
*                             KEYCOMPARE=YES with KEYREQTYPE did not  * 01065300
*                             match.  The value specified for         * 01065400
*                             SECONDARYKEY used with the              * 01065500
*                             SKEYCOMPARE=YES with SKEYREQTYPE did    * 01065600
*                             not match.                              * 01065700
*                                                                     * 01065800
*                 xxxx0895    IxlRsnCodeBadListKeyArea The storage    * 01065900
*                             area specified for LISTKEYAREA is not   * 01066000
*                             addressable.                            * 01066100
*                                                                     * 01066200
*                 xxxx0897    IxlRsnCodeBadKeyType The specified      * 01066300
*                             KEYTYPE value is not valid for the      * 01066400
*                             specified structure.                    * 01066500
*                                                                     * 01066600
*                 xxxx0898    IxlRsnCodeBadKeyScanType The specified  * 01066700
*                             KEYSCANTYPE value is not valid for the  * 01066800
*                             specified structure.                    * 01066900
*                                                                     * 01067000
*                 xxxx0899    IxlRsnCodeBadSKeyCompare The specified  * 01067100
*                             SKEYCOMPARE value is not valid for the  * 01067200
*                             specified structure.                    * 01067300
*                                                                     * 01067400
*                 xxxx089A    IxlRsnCodeBadSKeyReqType The specified  * 01067500
*                             SKEYREQTYPE value is not valid for the  * 01067600
*                             specified structure.                    * 01067700
*                                                                     * 01067800
*                 xxxx089B    IxlRsnCodeBadKeyCompareTyp The          * 01067900
*                             specified KEYCOMPARE value is not valid * 01068000
*                             for the specified structure.            * 01068100
*                                                                     * 01068200
*                 xxxx089C    IxlRsnBadCodeMoveToKey The specified    * 01068300
*                             MOVETOKEY value is not valid for the    * 01068400
*                             specified structure.                    * 01068500
*                                                                     * 01068600
*                 xxxx089D    IxlRsnBadCodeMoveToSKey The specified   * 01068700
*                             MOVETOSKEY value is not valid for the   * 01068800
*                             specified structure.                    * 01068900
*                                                                     * 01069000
*                                                                     * 01069100
*                                                                     * 01069200
*                                                                     * 01069300
*       C         IxlRetCodeEnvError:  Environmental problem.         * 01069400
*                                                                     * 01069500
*                 HEX REASON  MEANING                                 * 01069600
*                 CODE                                                * 01069700
*                                                                     * 01069800
*                                                                     * 01069900
*                 xxxx0C06    IxlRsnCodeNoConn:  No connectivity to   * 01070000
*                             the list structure.  This may occur due * 01070100
*                             to operator commands such as VARY PATH  * 01070200
*                             OFFLINE or CONFIG CHP OFFLINE or        * 01070300
*                             hardware errors such as facility or     * 01070400
*                             path failures.  The contoken will be    * 01070500
*                             invalidated.  The user should           * 01070600
*                             disconnect or rebuild.                  * 01070700
*                                                                     * 01070800
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 01070900
*                             completion of the request, the request  * 01071000
*                             was purged.  Reasons: the connector     * 01071100
*                             failed, the connector disconnected, the * 01071200
*                             requestor failed, the request was       * 01071300
*                             purged by IXLPURGE, or requests were    * 01071400
*                             purged when the connector provided an   * 01071500
*                             IXLEERSP response for the Rebuild Stop  * 01071600
*                             or Rebuild Cleanup event.               * 01071700
*                                                                     * 01071800
*                 xxxx0C14    IxlRsnCodeStatusUnknown:  The IXLLSTM   * 01071900
*                             request has completed, but the final    * 01072000
*                             disposition of the request can not be   * 01072100
*                             determined.                             * 01072200
*                                                                     * 01072300
*                 xxxx0C18    IxlRsnCodeListFull:  The list           * 01072400
*                             designated as the target of a           * 01072500
*                             MOVE_ENTRYLIST request, cannot          * 01072600
*                             accomodate more entries.                * 01072700
*                                                                     * 01072800
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 01072900
*                             completion of the request, the list     * 01073000
*                             structure failed.                       * 01073100
*                                                                     * 01073200
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 01073300
*                             type is not permitted for the level of  * 01073400
*                             coupling facility in which the target   * 01073500
*                             structure is allocated.                 * 01073600
*                                                                     * 01073700
*                 xxxx0CA0    IxlRsnCodeQuiescedSuspendFail:  The     * 01073800
*                             request is failed because the structure * 01073900
*                             is quiesced for a system-managed        * 01074000
*                             process and SUSPEND=FAIL is specified.  * 01074100
*                                                                     * 01074200
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 01074300
*                             are not available.  This can be because * 01074400
*                             the hardware necessary to provide XES   * 01074500
*                             functions is not present.               * 01074600
*                                                                     * 01074700
*                                                                     * 01074800
*                                                                     * 01074900
*                                                                     * 01075000
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 01075100
*                 state of the involved structure and the disposition * 01075200
*                 of the request are unpredictable.                   * 01075300
*                                                                     * 01075400
*                                                                     * 01075500
*                                                                     * 01075600
*01* REASON CODES:                                                    * 01075700
*                                                                     * 01075800
*       Reason codes, as appropriate, are defined under their         * 01075900
*       corresponding return code.  Reason code and return code       * 01076000
*       constants are defined within the IXLYCON macro.               * 01076100
*                                                                     * 01076200
*01* MODULE TYPE:  ASSEM MACRO                                        * 01076300
*                                                                     * 01076400
*02*   PROCESSOR:  ASSEM                                              * 01076500
*                                                                     * 01076600
*01* COMPONENT:  SCIXL                                                * 01076700
*                                                                     * 01076800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 01076900
*                                                                     * 01077000
*01* ABEND CODES:  None.                                              * 01077100
*                                                                     * 01077200
*01* MACRO USAGE NOTES:                                               * 01077300
*                                                                     * 01077400
*                                                                     * 01077500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 01077600
*        global macro variable.  Any value other than 'NO' will       * 01077700
*        result in the macro expansion being printed.  The default is * 01077800
*        'YES'.  The following examples illustrate how the ZPRINT     * 01077900
*        variable should be set.                                      * 01078000
*                                                                     * 01078100
*                    GBLC &ZPRINT                                     * 01078200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 01078300
*                                                                     * 01078400
*                                                                     * 01078500
*    2.  The  IXLLSTM macro supports multiple versions. The macro key * 01078600
*        list  below  contains the version level in which the key was * 01078700
*        first  introduced.  Positionals  are  identified by the word * 01078800
*        'Positional'  followed by the numeric value of its position. * 01078900
*        Nested  positionals  are  preceded  by their outer key.  The * 01079000
*        lowest value represents the original version and the highest * 01079100
*        value  represents  the  most  recent  version of the IXLLSTM * 01079200
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 01079300
*        least  as high as the highest version number of all the keys * 01079400
*        being used.                                                  * 01079500
*                                                                     * 01079600
*        VERSION   KEY                                                * 01079700
*                                                                     * 01079800
*              0      ADJAREA                                         * 01079900
*                     ANSAREA                                         * 01080000
*                     ANSLEN                                          * 01080100
*                     AUTHCOMP                                        * 01080200
*                     AUTHCOMPARE                                     * 01080300
*                     AUTHCOMPTYPE                                    * 01080400
*                     BUFADDRSIZE                                     * 01080500
*                     BUFADDRTYPE                                     * 01080600
*                     BUFALET                                         * 01080700
*                     BUFFER                                          * 01080800
*                     BUFINCRNUM                                      * 01080900
*                     BUFLIST                                         * 01081000
*                     BUFNUM                                          * 01081100
*                     BUFSIZE                                         * 01081200
*                     BUFSTGKEY                                       * 01081300
*                     CONTOKEN                                        * 01081400
*                     DIRECTION                                       * 01081500
*                     ENTRYID                                         * 01081600
*                     ENTRYKEY                                        * 01081700
*                     ENTRYNAME                                       * 01081800
*                     FIRSTELEM                                       * 01081900
*                     KEYRANGEEND                                     * 01082000
*                     KEYREQTYPE                                      * 01082100
*                     KEYSCANTYPE                                     * 01082200
*                     KEYTYPE                                         * 01082300
*                     LASTELEM                                        * 01082400
*                     LISTCOMPARE                                     * 01082500
*                     LISTNUM                                         * 01082600
*                     LISTTYPE                                        * 01082700
*                     LOCATOR                                         * 01082800
*                     LOCKCOMP                                        * 01082900
*                     LOCKINDEX                                       * 01083000
*                     LOCKOPER                                        * 01083100
*                     MODE                                            * 01083200
*                     MOVETOKEY                                       * 01083300
*                     PAGEABLE                                        * 01083400
*                     REQDATA                                         * 01083500
*                     REQECB                                          * 01083600
*                     REQID                                           * 01083700
*                     REQTOKEN                                        * 01083800
*                     REQUEST                                         * 01083900
*                     RESTOKEN                                        * 01084000
*                     TYPE                                            * 01084100
*                     VERSCOMP                                        * 01084200
*                     VERSCOMPARE                                     * 01084300
*                     VERSCOMPTYPE                                    * 01084400
*              1      KEYCOMPARE                                      * 01084500
*                     LISTKEYINC                                      * 01084600
*              3      EXTRESTOKEN                                     * 01084700
*              4      LISTKEYAREA                                     * 01084800
*                     MISCOMPARE                                      * 01084900
*                     MOVETOSKEY                                      * 01085000
*                     SECONDARYKEY                                    * 01085100
*                     SKEYCOMPARE                                     * 01085200
*                     SKEYRANGEEND                                    * 01085300
*                     SKEYREQTYPE                                     * 01085400
*                                                                     * 01085500
*    3.  The  following table summarizes the allowed usage of some of * 01085600
*        the  specifications  that can be made dependent on the plist * 01085700
*        version.                                                     * 01085800
*                                                                     * 01085900
*        Key            Version  Notes                                * 01086000
*        ------------------------------------------------------       * 01086100
*        AUTHCOMPARE    0        NO may be specified                  * 01086200
*                       1        NO or YES may be specified           * 01086300
*        REQUEST        0        READ_LIST, READ_MULT, DELETE_MULT,   * 01086400
*                                or DELETE_ENTRYLIST may be           * 01086500
*                                specified.                           * 01086600
*                       1        Same as version 0                    * 01086700
*                       2        Same as version 1                    * 01086800
*                       3        Same as version 2                    * 01086900
*                       4        READ_LIST, READ_MULT, DELETE_MULT,   * 01087000
*                                DELETE_ENTRYLIST, DELETE_LIST,       * 01087100
*                                or MOVE_ENTRYLIST may be             * 01087200
*                                specified.                           * 01087300
*        VERSCOMPARE    0        NO or YES may be specified.          * 01087400
*                       1        Same as version 0                    * 01087500
*                       2        Same as version 1                    * 01087600
*                       3        Same as version 2                    * 01087700
*                       4        NO, YES, or BYENTRY may be           * 01087800
*                                specified.                           * 01087900
*        VERSCOMPTYPE   0        EQUAL may be specified.              * 01088000
*                       1        EQUAL or LESSOREQUAL may be          * 01088100
*                                specified.                           * 01088200
*        KEYSCANTYPE    0        ENTRY may be specified               * 01088300
*                       1        Same as version 0                    * 01088400
*                       2        Same as version 1                    * 01088500
*                       3        Same as version 2                    * 01088600
*                       4        ENTRY or SECONDARY may be specified. * 01088700
*        KEYREQTYPE     0        EQUAL may be specified.              * 01088800
*                                GREATEROREQUAL and LESSOREQUAL       * 01088900
*                                may be specified for only            * 01089000
*                                REQUEST(READ_LIST)                   * 01089100
*                       1        Same as version 0                    * 01089200
*                       2        Same as version 1                    * 01089300
*                       3        Same as version 2                    * 01089400
*                       4        EQUAL, LESSOREQUAL, GREATEROREQUAL,  * 01089500
*                                or RANGE may be specified.           * 01089600
*                                                                     * 01089700
*                                                                     * 01089800
*                                                                     * 01089900
*01* CHANGE ACTIVITY:                                                 * 01090000
*                                                                     * 01090100
*   Flag LineItem  FMID    Date   ID    Comment                       * 01090200
*                                                                     * 01090300
*    $L0=SYSLKSMQ JBB6609 980930 PDS7:  MQSeries support / split      * 01090400
*                                         IXLLIST                     * 01090500
*    $P1=PWY0001  JBB6609 980807 PD00DV:  Plist version needs to be   * 01090600
*                                         set consistently with       * 01090700
*                                         IXLLIST                     * 01090800
*    $L1=SYSLKSMQ JBB6609 980920 PD00MP:  Add the rest of ExtResToken * 01090900
*                                         support.                    * 01091000
*    $L2=64BIT    HBB7703 981208 B7VBGD:  64 bit real support         * 01091100
*    $P2=PWY0287  JBB6609 990415 PD00DV:  Add reason code 0842        * 01091200
*                                         description.                * 01091300
*    $P3=PWY0410  JBB6609 990616 PD00DV:  Comment out prolog and      * 01091400
*                                         docprof tags at top of      * 01091500
*                                         macro                       * 01091600
*    $01=OW39892  HBB6608 010413 PD00BC:  AutoR extension for CICS    * 01091700
*    $02=OW41614  JBB6609 000911 PD00FR:  Buffer size requirements    * 01091800
*                                         for MOVE_ENTRYLIST and      * 01091900
*                                         DELETE_ENTRYLIST            * 01092000
****** END OF SPECIFICATIONS *****************************************/ 01092100
*/* TLINE 1 *********************************************************** 01092200
         MACRO                                                          01092300
&XLABEL  IXLLSTM &CONTOKEN=,&REQID=,&REQUEST=,&TYPE=,&ADJAREA=,        *01092400
               &DIRECTION=,&LOCATOR=,&LISTNUM=,&KEYSCANTYPE=,          *01092500
               &AUTHCOMPARE=,&AUTHCOMP=,&AUTHCOMPTYPE=,&KEYCOMPARE=,   *01092600
               &ENTRYKEY=,&KEYREQTYPE=,&KEYRANGEEND=,&SKEYCOMPARE=,    *01092700
               &SECONDARYKEY=,&SKEYREQTYPE=,&SKEYRANGEEND=,&ENTRYID=,  *01092800
               &LISTCOMPARE=,&ENTRYNAME=,&KEYTYPE=,&VERSCOMPARE=,      *01092900
               &VERSCOMP=,&VERSCOMPTYPE=,&BUFLIST=,&BUFADDRTYPE=,      *01093000
               &PAGEABLE=,&BUFSTGKEY=,&BUFALET=,&BUFADDRSIZE=,&BUFNUM=,*01093100
               &BUFFER=,&BUFSIZE=,&RESTOKEN=,&EXTRESTOKEN=,&FIRSTELEM=,*01093200
               &LASTELEM=,&MISCOMPARE=,&LISTTYPE=,&MOVETOKEY=,         *01093300
               &LISTKEYINC=,&LISTKEYAREA=,&MOVETOSKEY=,&BUFINCRNUM=,   *01093400
               &LOCKINDEX=,&LOCKOPER=,&LOCKCOMP=,&MODE=,&ANSAREA=,     *01093500
               &ANSLEN=,&REQECB=,&REQDATA=,&REQTOKEN=,&RETCODE=,       *01093600
               &RSNCODE=,&PLISTVER=,&MF=                                01093700
.*                                                                      01093800
*                      MACDATE -04/25/01-<4>                            01093900
.*                                                                      01094000
.*******************************************************************    01094100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        01094200
.*******************************************************************    01094300
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           01094400
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             01094500
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     01094600
.*                                                                      01094700
                      GBLC  &ZIXLLSTM   YES=MACRO USED AT LEAST ONCE    01094800
.*******************************************************************    01094900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          01095000
.*******************************************************************    01095100
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         01095200
                      LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS    01095300
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      01095400
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     01095500
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     01095600
                      LCLA  &ZAWRK      USED AS A WORK AREA             01095700
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          01095800
                      LCLA  &ZN         NUMERIC WORK VARIABLE           01095900
                      LCLC  &ZC         CHARACTER WORK VARIABLE         01096000
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     01096100
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         01096200
                      LCLC  &ZMAC_G     "G" or null                     01096300
&ZMAC_G               SETC  ''                                          01096400
                      LCLC  &ZMAC_LR                                    01096500
&ZMAC_LR              SETC  'LR'                                        01096600
                      LCLC  &ZMAC_L                                     01096700
&ZMAC_L               SETC  'L'                                         01096800
                      LCLC  &ZMAC_ST                                    01096900
&ZMAC_ST              SETC  'ST'                                        01097000
                      LCLA  &ZMACRET    MACRO RETURN CODE               01097100
&ZMACRET              SETA  0           ASSUME NO ERRORS                01097200
.*                                                                      01097300
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      01097400
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      01097500
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           01097600
                      LCLC  &ZENDBASEPL         End of base PL          01097700
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           01097800
.*******************************************************************    01097900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             01098000
.*******************************************************************    01098100
                      LCLA  &ZI         INDEX FOR ARRAY                 01098200
                      LCLA  &ZJ         INDEX FOR PARMS                 01098300
                      LCLA  &ZK         INDEX FOR PARSE                 01098400
                      LCLA  &ZLO        LOW RANGE VALUE                 01098500
                      LCLA  &ZHI        HIGH RANGE VALUE                01098600
                      LCLC  &ZW         WORK AREA FOR PARM              01098700
.********************************************************************   01098800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 01098900
.********************************************************************   01099000
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL         01099100
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  01099200
                      GBLA  &SYSALVL    SYSSTATE ARCHLVL                01099300
.*                                                                      01099400
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  01099500
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   01099600
                      SPLEVEL  TEST                                     01099700
.ZSYS2                ANOP  ,                                           01099800
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       01099900
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       01100000
                      SYSSTATE TEST                                     01100100
                      AGO   .ZSYS4                                      01100200
.ZSYS3                ANOP  ,                                           01100300
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         01100400
.ZSYS4                ANOP  ,                                           01100500
.*******************************************************************    01100600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   01100700
.*******************************************************************    01100800
                      LCLC  &XCONTOKEN  ++ NAME                         01100900
                      LCLC  &XREQID     ++ NAME                         01101000
                      LCLC  &XREQUEST   ++ VALUE                        01101100
                      LCLC  &XTYPE(257)         ++ VALUE                01101200
                      LCLC  &XADJAREA   ++ NAME                         01101300
                      LCLC  &XDIRECTION         ++ VALUE                01101400
                      LCLC  &XLOCATOR   ++ VALUE                        01101500
                      LCLC  &XLISTNUM   ++ NAME                         01101600
                      LCLC  &XKEYSCANTYPE       ++ VALUE                01101700
                      LCLC  &XAUTHCOMPARE       ++ VALUE                01101800
                      LCLC  &XAUTHCOMP  ++ NAME                         01101900
                      LCLC  &XAUTHCOMPTYPE      ++ VALUE                01102000
                      LCLC  &XKEYCOMPARE        ++ VALUE                01102100
                      LCLC  &XENTRYKEY  ++ NAME                         01102200
                      LCLC  &XKEYREQTYPE        ++ VALUE                01102300
                      LCLC  &XKEYRANGEEND       ++ NAME                 01102400
                      LCLC  &XSKEYCOMPARE       ++ VALUE                01102500
                      LCLC  &XSECONDARYKEY      ++ NAME                 01102600
                      LCLC  &XSKEYREQTYPE       ++ VALUE                01102700
                      LCLC  &XSKEYRANGEEND      ++ NAME                 01102800
                      LCLC  &XENTRYID   ++ NAME                         01102900
                      LCLC  &XLISTCOMPARE       ++ VALUE                01103000
                      LCLC  &XENTRYNAME         ++ NAME                 01103100
                      LCLC  &XKEYTYPE   ++ VALUE                        01103200
                      LCLC  &XVERSCOMPARE       ++ VALUE                01103300
                      LCLC  &XVERSCOMP  ++ NAME                         01103400
                      LCLC  &XVERSCOMPTYPE      ++ VALUE                01103500
                      LCLC  &XDATAREA   ++ NAME                         01103600
                      LCLC  &XBUFLIST   ++ NAME                         01103700
                      LCLC  &XBUFADDRTYPE       ++ VALUE                01103800
                      LCLC  &XPAGEABLE  ++ VALUE                        01103900
                      LCLC  &XBUFSTGKEY         ++ NAME                 01104000
                      LCLC  &XBUFALET   ++ NAME                         01104100
                      LCLC  &XBUFADDRSIZE       ++ VALUE                01104200
                      LCLC  &XBUFNUM    ++ NAME                         01104300
                      LCLC  &XBUFFER    ++ NAME                         01104400
                      LCLC  &XBUFSIZE   ++ NAME                         01104500
                      LCLC  &XRESTARTTOKEN      ++ NAME                 01104600
                      LCLC  &XRESTOKEN  ++ NAME                         01104700
                      LCLC  &XEXTRESTOKEN       ++ NAME                 01104800
                      LCLC  &XDATAREA3  ++ NAME                         01104900
                      LCLC  &XFIRSTELEM         ++ NAME                 01105000
                      LCLC  &XLASTELEM  ++ NAME                         01105100
                      LCLC  &XMISCOMPARE        ++ VALUE                01105200
                      LCLC  &XLISTTYPE  ++ VALUE                        01105300
                      LCLC  &XMOVETOKEY         ++ VALUE                01105400
                      LCLC  &XLISTKEYINC        ++ NAME                 01105500
                      LCLC  &XLISTKEYAREA       ++ NAME                 01105600
                      LCLC  &XMOVETOSKEY        ++ VALUE                01105700
                      LCLC  &XBUFINCRNUM        ++ NAME                 01105800
                      LCLC  &XLOCKINDEX         ++ NAME                 01105900
                      LCLC  &XLOCKOPER  ++ VALUE                        01106000
                      LCLC  &XLOCKCOMP  ++ NAME                         01106100
                      LCLC  &XMODE      ++ VALUE                        01106200
                      LCLC  &XANSAREA   ++ NAME                         01106300
                      LCLC  &XANSLEN    ++ NAME                         01106400
                      LCLC  &XREQECB    ++ NAME                         01106500
                      LCLC  &XREQDATA   ++ NAME                         01106600
                      LCLC  &XREQTOKEN  ++ NAME                         01106700
                      LCLC  &XRETCODE   ++ NAME                         01106800
                      LCLC  &XRSNCODE   ++ NAME                         01106900
                      LCLA  &XPLISTVER  ++ VALUE                        01107000
                      LCLC  &XMF        ++ VALUE                        01107100
                      LCLC  &XMFCTRL    ++ NAME                         01107200
                      LCLC  &XMFATTR    ++ VALUE                        01107300
                      LCLC  &XMFSCK     ++ VALUE                        01107400
.*******************************************************************    01107500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           01107600
.*******************************************************************    01107700
                      LCLC  &ZXCONTOKEN         ++ INPUT NAME           01107800
                      LCLC  &ZXREQID    ++ INPUT NAME                   01107900
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  01108000
                      LCLC  &ZXTYPE     ++ INPUT VALUE                  01108100
                      LCLC  &ZXADJAREA  ++ INPUT NAME                   01108200
                      LCLC  &ZXDIRECTION        ++ INPUT VALUE          01108300
                      LCLC  &ZXLOCATOR  ++ INPUT VALUE                  01108400
                      LCLC  &ZXLISTNUM  ++ INPUT NAME                   01108500
                      LCLC  &ZXKEYSCANTYPE      ++ INPUT VALUE          01108600
                      LCLC  &ZXAUTHCOMPARE      ++ INPUT VALUE          01108700
                      LCLC  &ZXAUTHCOMP         ++ INPUT NAME           01108800
                      LCLC  &ZXAUTHCOMPTYPE     ++ INPUT VALUE          01108900
                      LCLC  &ZXKEYCOMPARE       ++ INPUT VALUE          01109000
                      LCLC  &ZXENTRYKEY         ++ INPUT NAME           01109100
                      LCLC  &ZXKEYREQTYPE       ++ INPUT VALUE          01109200
                      LCLC  &ZXKEYRANGEEND      ++ INPUT NAME           01109300
                      LCLC  &ZXSKEYCOMPARE      ++ INPUT VALUE          01109400
                      LCLC  &ZXSECONDARYKEY     ++ INPUT NAME           01109500
                      LCLC  &ZXSKEYREQTYPE      ++ INPUT VALUE          01109600
                      LCLC  &ZXSKEYRANGEEND     ++ INPUT NAME           01109700
                      LCLC  &ZXENTRYID  ++ INPUT NAME                   01109800
                      LCLC  &ZXLISTCOMPARE      ++ INPUT VALUE          01109900
                      LCLC  &ZXENTRYNAME        ++ INPUT NAME           01110000
                      LCLC  &ZXKEYTYPE  ++ INPUT VALUE                  01110100
                      LCLC  &ZXVERSCOMPARE      ++ INPUT VALUE          01110200
                      LCLC  &ZXVERSCOMP         ++ INPUT NAME           01110300
                      LCLC  &ZXVERSCOMPTYPE     ++ INPUT VALUE          01110400
                      LCLC  &ZXDATAREA  ++ OUTPUT NAME                  01110500
                      LCLC  &ZXBUFLIST  ++ OUTPUT NAME                  01110600
                      LCLC  &ZXBUFADDRTYPE      ++ INPUT VALUE          01110700
                      LCLC  &ZXPAGEABLE         ++ INPUT VALUE          01110800
                      LCLC  &ZXBUFSTGKEY        ++ INPUT NAME           01110900
                      LCLC  &ZXBUFALET  ++ INPUT NAME                   01111000
                      LCLC  &ZXBUFADDRSIZE      ++ INPUT VALUE          01111100
                      LCLC  &ZXBUFNUM   ++ INPUT NAME                   01111200
                      LCLC  &ZXBUFFER   ++ OUTPUT NAME                  01111300
                      LCLC  &ZXBUFSIZE  ++ INPUT NAME                   01111400
                      LCLC  &ZXRESTARTTOKEN     ++ INPUT NAME           01111500
                      LCLC  &ZXRESTOKEN         ++ INPUT NAME           01111600
                      LCLC  &ZXEXTRESTOKEN      ++ INPUT NAME           01111700
                      LCLC  &ZXDATAREA3         ++ OUTPUT NAME          01111800
                      LCLC  &ZXFIRSTELEM        ++ INPUT NAME           01111900
                      LCLC  &ZXLASTELEM         ++ INPUT NAME           01112000
                      LCLC  &ZXMISCOMPARE       ++ INPUT VALUE          01112100
                      LCLC  &ZXLISTTYPE         ++ INPUT VALUE          01112200
                      LCLC  &ZXMOVETOKEY        ++ INPUT VALUE          01112300
                      LCLC  &ZXLISTKEYINC       ++ INPUT NAME           01112400
                      LCLC  &ZXLISTKEYAREA      ++ INPUT NAME           01112500
                      LCLC  &ZXMOVETOSKEY       ++ INPUT VALUE          01112600
                      LCLC  &ZXBUFINCRNUM       ++ INPUT NAME           01112700
                      LCLC  &ZXLOCKINDEX        ++ INPUT NAME           01112800
                      LCLC  &ZXLOCKOPER         ++ INPUT VALUE          01112900
                      LCLC  &ZXLOCKCOMP         ++ INPUT NAME           01113000
                      LCLC  &ZXMODE     ++ INPUT VALUE                  01113100
                      LCLC  &ZXANSAREA  ++ INPUT NAME                   01113200
                      LCLC  &ZXANSLEN   ++ INPUT NAME                   01113300
                      LCLC  &ZXREQECB   ++ INPUT NAME                   01113400
                      LCLC  &ZXREQDATA  ++ INPUT NAME                   01113500
                      LCLC  &ZXREQTOKEN         ++ OUTPUT NAME          01113600
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  01113700
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  01113800
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          01113900
                      LCLC  &ZXMF       ++ INPUT VALUE                  01114000
                      LCLC  &ZXMFCTRL   ++ INPUT NAME                   01114100
                      LCLC  &ZXMFATTR   ++ INPUT VALUE                  01114200
                      LCLC  &ZXMFSCK    ++ INPUT VALUE                  01114300
.********************************************************************   01114400
.***AC.PLV01  PROCESS PLISTVER                                      *   01114500
.********************************************************************   01114600
&XPLISTVER      SETA  0                                                 01114700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       01114800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   01114900
&XPLISTVER      SETA  4                                                 01115000
.ZPLV0          ANOP  ,                                                 01115100
.*                                                                      01115200
                AIF   ('&KEYCOMPARE' EQ '').ZPLV1E                      01115300
                AIF   (&XPLISTVER GE 1).ZPLV1E                          01115400
&XPLISTVER      SETA  1                                                 01115500
.ZPLV1E         ANOP  ,                                                 01115600
.*                                                                      01115700
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV2E                     01115800
                AIF   (&XPLISTVER GE 4).ZPLV2E                          01115900
&XPLISTVER      SETA  4                                                 01116000
.ZPLV2E         ANOP  ,                                                 01116100
.*                                                                      01116200
                AIF   ('&SECONDARYKEY' EQ '').ZPLV3E                    01116300
                AIF   (&XPLISTVER GE 4).ZPLV3E                          01116400
&XPLISTVER      SETA  4                                                 01116500
.ZPLV3E         ANOP  ,                                                 01116600
.*                                                                      01116700
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV4E                     01116800
                AIF   (&XPLISTVER GE 4).ZPLV4E                          01116900
&XPLISTVER      SETA  4                                                 01117000
.ZPLV4E         ANOP  ,                                                 01117100
.*                                                                      01117200
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV5E                    01117300
                AIF   (&XPLISTVER GE 4).ZPLV5E                          01117400
&XPLISTVER      SETA  4                                                 01117500
.ZPLV5E         ANOP  ,                                                 01117600
.*                                                                      01117700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV6E                      01117800
                AIF   (&XPLISTVER GE 1).ZPLV6E                          01117900
&XPLISTVER      SETA  1                                                 01118000
.ZPLV6E         ANOP  ,                                                 01118100
.*                                                                      01118200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV7E                     01118300
                AIF   (&XPLISTVER GE 4).ZPLV7E                          01118400
&XPLISTVER      SETA  4                                                 01118500
.ZPLV7E         ANOP  ,                                                 01118600
.*                                                                      01118700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV8E                    01118800
                AIF   (&XPLISTVER GE 4).ZPLV8E                          01118900
&XPLISTVER      SETA  4                                                 01119000
.ZPLV8E         ANOP  ,                                                 01119100
.*                                                                      01119200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV9E                     01119300
                AIF   (&XPLISTVER GE 4).ZPLV9E                          01119400
&XPLISTVER      SETA  4                                                 01119500
.ZPLV9E         ANOP  ,                                                 01119600
.*                                                                      01119700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV10E                   01119800
                AIF   (&XPLISTVER GE 4).ZPLV10E                         01119900
&XPLISTVER      SETA  4                                                 01120000
.ZPLV10E        ANOP  ,                                                 01120100
.*                                                                      01120200
                AIF   ('&KEYCOMPARE' EQ '').ZPLV11E                     01120300
                AIF   (&XPLISTVER GE 1).ZPLV11E                         01120400
&XPLISTVER      SETA  1                                                 01120500
.ZPLV11E        ANOP  ,                                                 01120600
.*                                                                      01120700
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV12E                    01120800
                AIF   (&XPLISTVER GE 4).ZPLV12E                         01120900
&XPLISTVER      SETA  4                                                 01121000
.ZPLV12E        ANOP  ,                                                 01121100
.*                                                                      01121200
                AIF   ('&SECONDARYKEY' EQ '').ZPLV13E                   01121300
                AIF   (&XPLISTVER GE 4).ZPLV13E                         01121400
&XPLISTVER      SETA  4                                                 01121500
.ZPLV13E        ANOP  ,                                                 01121600
.*                                                                      01121700
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV14E                    01121800
                AIF   (&XPLISTVER GE 4).ZPLV14E                         01121900
&XPLISTVER      SETA  4                                                 01122000
.ZPLV14E        ANOP  ,                                                 01122100
.*                                                                      01122200
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV15E                   01122300
                AIF   (&XPLISTVER GE 4).ZPLV15E                         01122400
&XPLISTVER      SETA  4                                                 01122500
.ZPLV15E        ANOP  ,                                                 01122600
.*                                                                      01122700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV16E                     01122800
                AIF   (&XPLISTVER GE 1).ZPLV16E                         01122900
&XPLISTVER      SETA  1                                                 01123000
.ZPLV16E        ANOP  ,                                                 01123100
.*                                                                      01123200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV17E                    01123300
                AIF   (&XPLISTVER GE 4).ZPLV17E                         01123400
&XPLISTVER      SETA  4                                                 01123500
.ZPLV17E        ANOP  ,                                                 01123600
.*                                                                      01123700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV18E                   01123800
                AIF   (&XPLISTVER GE 4).ZPLV18E                         01123900
&XPLISTVER      SETA  4                                                 01124000
.ZPLV18E        ANOP  ,                                                 01124100
.*                                                                      01124200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV19E                    01124300
                AIF   (&XPLISTVER GE 4).ZPLV19E                         01124400
&XPLISTVER      SETA  4                                                 01124500
.ZPLV19E        ANOP  ,                                                 01124600
.*                                                                      01124700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV20E                   01124800
                AIF   (&XPLISTVER GE 4).ZPLV20E                         01124900
&XPLISTVER      SETA  4                                                 01125000
.ZPLV20E        ANOP  ,                                                 01125100
.*                                                                      01125200
                AIF   ('&SECONDARYKEY' EQ '').ZPLV21E                   01125300
                AIF   (&XPLISTVER GE 4).ZPLV21E                         01125400
&XPLISTVER      SETA  4                                                 01125500
.ZPLV21E        ANOP  ,                                                 01125600
.*                                                                      01125700
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV22E                    01125800
                AIF   (&XPLISTVER GE 4).ZPLV22E                         01125900
&XPLISTVER      SETA  4                                                 01126000
.ZPLV22E        ANOP  ,                                                 01126100
.*                                                                      01126200
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV23E                   01126300
                AIF   (&XPLISTVER GE 4).ZPLV23E                         01126400
&XPLISTVER      SETA  4                                                 01126500
.ZPLV23E        ANOP  ,                                                 01126600
.*                                                                      01126700
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV24E                    01126800
                AIF   (&XPLISTVER GE 4).ZPLV24E                         01126900
&XPLISTVER      SETA  4                                                 01127000
.ZPLV24E        ANOP  ,                                                 01127100
.*                                                                      01127200
                AIF   ('&KEYCOMPARE' EQ '').ZPLV25E                     01127300
                AIF   (&XPLISTVER GE 1).ZPLV25E                         01127400
&XPLISTVER      SETA  1                                                 01127500
.ZPLV25E        ANOP  ,                                                 01127600
.*                                                                      01127700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV26E                     01127800
                AIF   (&XPLISTVER GE 1).ZPLV26E                         01127900
&XPLISTVER      SETA  1                                                 01128000
.ZPLV26E        ANOP  ,                                                 01128100
.*                                                                      01128200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV27E                    01128300
                AIF   (&XPLISTVER GE 4).ZPLV27E                         01128400
&XPLISTVER      SETA  4                                                 01128500
.ZPLV27E        ANOP  ,                                                 01128600
.*                                                                      01128700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV28E                   01128800
                AIF   (&XPLISTVER GE 4).ZPLV28E                         01128900
&XPLISTVER      SETA  4                                                 01129000
.ZPLV28E        ANOP  ,                                                 01129100
.*                                                                      01129200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV29E                    01129300
                AIF   (&XPLISTVER GE 4).ZPLV29E                         01129400
&XPLISTVER      SETA  4                                                 01129500
.ZPLV29E        ANOP  ,                                                 01129600
.*                                                                      01129700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV30E                   01129800
                AIF   (&XPLISTVER GE 4).ZPLV30E                         01129900
&XPLISTVER      SETA  4                                                 01130000
.ZPLV30E        ANOP  ,                                                 01130100
.*                                                                      01130200
                AIF   ('&KEYCOMPARE' EQ '').ZPLV31E                     01130300
                AIF   (&XPLISTVER GE 1).ZPLV31E                         01130400
&XPLISTVER      SETA  1                                                 01130500
.ZPLV31E        ANOP  ,                                                 01130600
.*                                                                      01130700
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV32E                    01130800
                AIF   (&XPLISTVER GE 4).ZPLV32E                         01130900
&XPLISTVER      SETA  4                                                 01131000
.ZPLV32E        ANOP  ,                                                 01131100
.*                                                                      01131200
                AIF   ('&SECONDARYKEY' EQ '').ZPLV33E                   01131300
                AIF   (&XPLISTVER GE 4).ZPLV33E                         01131400
&XPLISTVER      SETA  4                                                 01131500
.ZPLV33E        ANOP  ,                                                 01131600
.*                                                                      01131700
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV34E                    01131800
                AIF   (&XPLISTVER GE 4).ZPLV34E                         01131900
&XPLISTVER      SETA  4                                                 01132000
.ZPLV34E        ANOP  ,                                                 01132100
.*                                                                      01132200
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV35E                   01132300
                AIF   (&XPLISTVER GE 4).ZPLV35E                         01132400
&XPLISTVER      SETA  4                                                 01132500
.ZPLV35E        ANOP  ,                                                 01132600
.*                                                                      01132700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV36E                     01132800
                AIF   (&XPLISTVER GE 1).ZPLV36E                         01132900
&XPLISTVER      SETA  1                                                 01133000
.ZPLV36E        ANOP  ,                                                 01133100
.*                                                                      01133200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV37E                    01133300
                AIF   (&XPLISTVER GE 4).ZPLV37E                         01133400
&XPLISTVER      SETA  4                                                 01133500
.ZPLV37E        ANOP  ,                                                 01133600
.*                                                                      01133700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV38E                   01133800
                AIF   (&XPLISTVER GE 4).ZPLV38E                         01133900
&XPLISTVER      SETA  4                                                 01134000
.ZPLV38E        ANOP  ,                                                 01134100
.*                                                                      01134200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV39E                    01134300
                AIF   (&XPLISTVER GE 4).ZPLV39E                         01134400
&XPLISTVER      SETA  4                                                 01134500
.ZPLV39E        ANOP  ,                                                 01134600
.*                                                                      01134700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV40E                   01134800
                AIF   (&XPLISTVER GE 4).ZPLV40E                         01134900
&XPLISTVER      SETA  4                                                 01135000
.ZPLV40E        ANOP  ,                                                 01135100
.*                                                                      01135200
                AIF   ('&KEYCOMPARE' EQ '').ZPLV41E                     01135300
                AIF   (&XPLISTVER GE 1).ZPLV41E                         01135400
&XPLISTVER      SETA  1                                                 01135500
.ZPLV41E        ANOP  ,                                                 01135600
.*                                                                      01135700
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV42E                    01135800
                AIF   (&XPLISTVER GE 4).ZPLV42E                         01135900
&XPLISTVER      SETA  4                                                 01136000
.ZPLV42E        ANOP  ,                                                 01136100
.*                                                                      01136200
                AIF   ('&SECONDARYKEY' EQ '').ZPLV43E                   01136300
                AIF   (&XPLISTVER GE 4).ZPLV43E                         01136400
&XPLISTVER      SETA  4                                                 01136500
.ZPLV43E        ANOP  ,                                                 01136600
.*                                                                      01136700
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV44E                    01136800
                AIF   (&XPLISTVER GE 4).ZPLV44E                         01136900
&XPLISTVER      SETA  4                                                 01137000
.ZPLV44E        ANOP  ,                                                 01137100
.*                                                                      01137200
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV45E                   01137300
                AIF   (&XPLISTVER GE 4).ZPLV45E                         01137400
&XPLISTVER      SETA  4                                                 01137500
.ZPLV45E        ANOP  ,                                                 01137600
.*                                                                      01137700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV46E                   01137800
                AIF   (&XPLISTVER GE 4).ZPLV46E                         01137900
&XPLISTVER      SETA  4                                                 01138000
.ZPLV46E        ANOP  ,                                                 01138100
.*                                                                      01138200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV47E                    01138300
                AIF   (&XPLISTVER GE 4).ZPLV47E                         01138400
&XPLISTVER      SETA  4                                                 01138500
.ZPLV47E        ANOP  ,                                                 01138600
.*                                                                      01138700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV48E                   01138800
                AIF   (&XPLISTVER GE 4).ZPLV48E                         01138900
&XPLISTVER      SETA  4                                                 01139000
.ZPLV48E        ANOP  ,                                                 01139100
.*                                                                      01139200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV49E                    01139300
                AIF   (&XPLISTVER GE 4).ZPLV49E                         01139400
&XPLISTVER      SETA  4                                                 01139500
.ZPLV49E        ANOP  ,                                                 01139600
.*                                                                      01139700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV50E                     01139800
                AIF   (&XPLISTVER GE 1).ZPLV50E                         01139900
&XPLISTVER      SETA  1                                                 01140000
.ZPLV50E        ANOP  ,                                                 01140100
.*                                                                      01140200
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV51E                    01140300
                AIF   (&XPLISTVER GE 3).ZPLV51E                         01140400
&XPLISTVER      SETA  3                                                 01140500
.ZPLV51E        ANOP  ,                                                 01140600
.*                                                                      01140700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV52E                     01140800
                AIF   (&XPLISTVER GE 1).ZPLV52E                         01140900
&XPLISTVER      SETA  1                                                 01141000
.ZPLV52E        ANOP  ,                                                 01141100
.*                                                                      01141200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV53E                    01141300
                AIF   (&XPLISTVER GE 4).ZPLV53E                         01141400
&XPLISTVER      SETA  4                                                 01141500
.ZPLV53E        ANOP  ,                                                 01141600
.*                                                                      01141700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV54E                   01141800
                AIF   (&XPLISTVER GE 4).ZPLV54E                         01141900
&XPLISTVER      SETA  4                                                 01142000
.ZPLV54E        ANOP  ,                                                 01142100
.*                                                                      01142200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV55E                    01142300
                AIF   (&XPLISTVER GE 4).ZPLV55E                         01142400
&XPLISTVER      SETA  4                                                 01142500
.ZPLV55E        ANOP  ,                                                 01142600
.*                                                                      01142700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV56E                   01142800
                AIF   (&XPLISTVER GE 4).ZPLV56E                         01142900
&XPLISTVER      SETA  4                                                 01143000
.ZPLV56E        ANOP  ,                                                 01143100
.*                                                                      01143200
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV57E                    01143300
                AIF   (&XPLISTVER GE 3).ZPLV57E                         01143400
&XPLISTVER      SETA  3                                                 01143500
.ZPLV57E        ANOP  ,                                                 01143600
.*                                                                      01143700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV58E                     01143800
                AIF   (&XPLISTVER GE 1).ZPLV58E                         01143900
&XPLISTVER      SETA  1                                                 01144000
.ZPLV58E        ANOP  ,                                                 01144100
.*                                                                      01144200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV59E                    01144300
                AIF   (&XPLISTVER GE 4).ZPLV59E                         01144400
&XPLISTVER      SETA  4                                                 01144500
.ZPLV59E        ANOP  ,                                                 01144600
.*                                                                      01144700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV60E                   01144800
                AIF   (&XPLISTVER GE 4).ZPLV60E                         01144900
&XPLISTVER      SETA  4                                                 01145000
.ZPLV60E        ANOP  ,                                                 01145100
.*                                                                      01145200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV61E                    01145300
                AIF   (&XPLISTVER GE 4).ZPLV61E                         01145400
&XPLISTVER      SETA  4                                                 01145500
.ZPLV61E        ANOP  ,                                                 01145600
.*                                                                      01145700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV62E                   01145800
                AIF   (&XPLISTVER GE 4).ZPLV62E                         01145900
&XPLISTVER      SETA  4                                                 01146000
.ZPLV62E        ANOP  ,                                                 01146100
.*                                                                      01146200
                AIF   ('&MISCOMPARE' EQ '').ZPLV63E                     01146300
                AIF   (&XPLISTVER GE 4).ZPLV63E                         01146400
&XPLISTVER      SETA  4                                                 01146500
.ZPLV63E        ANOP  ,                                                 01146600
.*                                                                      01146700
                AIF   ('&KEYCOMPARE' EQ '').ZPLV64E                     01146800
                AIF   (&XPLISTVER GE 1).ZPLV64E                         01146900
&XPLISTVER      SETA  1                                                 01147000
.ZPLV64E        ANOP  ,                                                 01147100
.*                                                                      01147200
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV65E                    01147300
                AIF   (&XPLISTVER GE 4).ZPLV65E                         01147400
&XPLISTVER      SETA  4                                                 01147500
.ZPLV65E        ANOP  ,                                                 01147600
.*                                                                      01147700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV66E                   01147800
                AIF   (&XPLISTVER GE 4).ZPLV66E                         01147900
&XPLISTVER      SETA  4                                                 01148000
.ZPLV66E        ANOP  ,                                                 01148100
.*                                                                      01148200
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV67E                    01148300
                AIF   (&XPLISTVER GE 4).ZPLV67E                         01148400
&XPLISTVER      SETA  4                                                 01148500
.ZPLV67E        ANOP  ,                                                 01148600
.*                                                                      01148700
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV68E                   01148800
                AIF   (&XPLISTVER GE 4).ZPLV68E                         01148900
&XPLISTVER      SETA  4                                                 01149000
.ZPLV68E        ANOP  ,                                                 01149100
.*                                                                      01149200
                AIF   ('&LISTKEYINC' EQ '').ZPLV69E                     01149300
                AIF   (&XPLISTVER GE 1).ZPLV69E                         01149400
&XPLISTVER      SETA  1                                                 01149500
.ZPLV69E        ANOP  ,                                                 01149600
.*                                                                      01149700
                AIF   ('&LISTKEYAREA' EQ '').ZPLV70E                    01149800
                AIF   (&XPLISTVER GE 4).ZPLV70E                         01149900
&XPLISTVER      SETA  4                                                 01150000
.ZPLV70E        ANOP  ,                                                 01150100
.*                                                                      01150200
                AIF   ('&MOVETOSKEY' EQ '').ZPLV71E                     01150300
                AIF   (&XPLISTVER GE 4).ZPLV71E                         01150400
&XPLISTVER      SETA  4                                                 01150500
.ZPLV71E        ANOP  ,                                                 01150600
.*                                                                      01150700
                AIF   ('&MISCOMPARE' EQ '').ZPLV72E                     01150800
                AIF   (&XPLISTVER GE 4).ZPLV72E                         01150900
&XPLISTVER      SETA  4                                                 01151000
.ZPLV72E        ANOP  ,                                                 01151100
.*                                                                      01151200
                AIF   ('&KEYCOMPARE' EQ '').ZPLV73E                     01151300
                AIF   (&XPLISTVER GE 1).ZPLV73E                         01151400
&XPLISTVER      SETA  1                                                 01151500
.ZPLV73E        ANOP  ,                                                 01151600
.*                                                                      01151700
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV74E                    01151800
                AIF   (&XPLISTVER GE 4).ZPLV74E                         01151900
&XPLISTVER      SETA  4                                                 01152000
.ZPLV74E        ANOP  ,                                                 01152100
.*                                                                      01152200
                AIF   ('&SECONDARYKEY' EQ '').ZPLV75E                   01152300
                AIF   (&XPLISTVER GE 4).ZPLV75E                         01152400
&XPLISTVER      SETA  4                                                 01152500
.ZPLV75E        ANOP  ,                                                 01152600
.*                                                                      01152700
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV76E                    01152800
                AIF   (&XPLISTVER GE 4).ZPLV76E                         01152900
&XPLISTVER      SETA  4                                                 01153000
.ZPLV76E        ANOP  ,                                                 01153100
.*                                                                      01153200
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV77E                   01153300
                AIF   (&XPLISTVER GE 4).ZPLV77E                         01153400
&XPLISTVER      SETA  4                                                 01153500
.ZPLV77E        ANOP  ,                                                 01153600
.*                                                                      01153700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      01153800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      01153900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  01154000
.*-------------------------------------------------------------------   01154100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 01154200
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                01154300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01154400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 01154500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01154600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01154700
                AGO   .ZPVCK2                                           01154800
.ZPVCK3         ANOP  ,                                                 01154900
.*-------------------------------------------------------------------   01155000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  01155100
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                01155200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01155300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         01155400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 01155500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01155600
                AGO   .ZPVCKE                                           01155700
.ZPVCK2         ANOP  ,                                                 01155800
.*-------------------------------------------------------------------   01155900
&ZCVAL          SETC  '&PLISTVER(1)'                                    01156000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             01156100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             01156200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        01156300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      01156400
                AIF   (&ZN LE 4).ZPVCK4A   NOT HIGH                     01156500
.ZPVCK6         ANOP  ,                                                 01156600
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                01156700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01156800
&ZMS            SETC  '&ZMS THE RANGE IS "0-4"'                         01156900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         01157000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01157100
&XPLISTVER      SETA  4                                                 01157200
                AGO   .ZPVCKE                                           01157300
.*-------------------------------------------------------------------   01157400
.ZPVCK4A        ANOP  ,                                                 01157500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        01157600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                01157700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               01157800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          01157900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 01158000
                MNOTE 8,' &ZMS IS REQUIRED.'                            01158100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01158200
                AGO   .ZPVCK5                                           01158300
.ZPVCK4         ANOP  ,                                                 01158400
&XPLISTVER      SETA  &PLISTVER(1)                                      01158500
.ZPVCK5         ANOP  ,                                                 01158600
.ZPVCKE         ANOP  ,                                                 01158700
.********************************************************************   01158800
.***AG.MF01 PROCESS MF MACRO FORMS                                      01158900
.********************************************************************   01159000
                      ACTR  10000                                       01159100
.*------------------------------------------------------------------    01159200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01159300
&XMF                  SETC  ''          INITIALIZE XVARIABLE            01159400
.*-------------------------------------------------------------------   01159500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01159600
.ZG1282               ANOP  ,                                           01159700
&ZTLC                 SETC 'S'                                          01159800
                      AIF   ('&MF(1)' NE '&ZTLC').ZG1283                01159900
&XMF                  SETC  'S'         SET KEYWORD                     01160000
                      AIF   (N'&MF LE 1).ZG1282A  CK NUM                01160100
&ZMS                  SETC  '"MF='      *KPOSA* MNOTE                   01160200
&ZMS                  SETC  '&ZMS.&MF"'                                 01160300
&ZMS                  SETC  '&ZMS "MF"'                                 01160400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01160500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01160600
.ZG1282A              ANOP  ,                                           01160700
.*-------------------------------------------------------------------   01160800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01160900
.ZG1283               ANOP  ,                                           01161000
&ZTLC                 SETC 'L'                                          01161100
                      AIF   ('&MF(1)' NE '&ZTLC').ZG1290                01161200
&XMF                  SETC  'L'         SET KEYWORD                     01161300
                      AIF   (N'&MF LE 3).ZG1283A  CK NUM                01161400
&ZMS                  SETC  '"MF='      *KPOSA* MNOTE                   01161500
&ZMS                  SETC  '&ZMS.&MF"'                                 01161600
&ZMS                  SETC  '&ZMS "MF"'                                 01161700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        01161800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01161900
.ZG1283A              ANOP  ,                                           01162000
.*-------------------------------------------------------------------   01162100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     01162200
                      AIF   (N'&SYSLIST NE 0).ZG1283B  POSITIONALS?     01162300
                      AIF   ('&CONTOKEN' NE '').ZG1283B  KEYS?          01162400
                      AIF   ('&REQID' NE '').ZG1283B  KEYS?             01162500
                      AIF   ('&REQUEST' NE '').ZG1283B  KEYS?           01162600
                      AIF   ('&TYPE' NE '').ZG1283B  KEYS?              01162700
                      AIF   ('&ADJAREA' NE '').ZG1283B  KEYS?           01162800
                      AIF   ('&DIRECTION' NE '').ZG1283B  KEYS?         01162900
                      AIF   ('&LOCATOR' NE '').ZG1283B  KEYS?           01163000
                      AIF   ('&LISTNUM' NE '').ZG1283B  KEYS?           01163100
                      AIF   ('&KEYSCANTYPE' NE '').ZG1283B  KEYS?       01163200
                      AIF   ('&AUTHCOMPARE' NE '').ZG1283B  KEYS?       01163300
                      AIF   ('&AUTHCOMP' NE '').ZG1283B  KEYS?          01163400
                      AIF   ('&AUTHCOMPTYPE' NE '').ZG1283B  KEYS?      01163500
                      AIF   ('&KEYCOMPARE' NE '').ZG1283B  KEYS?        01163600
                      AIF   ('&ENTRYKEY' NE '').ZG1283B  KEYS?          01163700
                      AIF   ('&KEYREQTYPE' NE '').ZG1283B  KEYS?        01163800
                      AIF   ('&KEYRANGEEND' NE '').ZG1283B  KEYS?       01163900
                      AIF   ('&SKEYCOMPARE' NE '').ZG1283B  KEYS?       01164000
                      AIF   ('&SECONDARYKEY' NE '').ZG1283B  KEYS?      01164100
                      AIF   ('&SKEYREQTYPE' NE '').ZG1283B  KEYS?       01164200
                      AIF   ('&SKEYRANGEEND' NE '').ZG1283B  KEYS?      01164300
                      AIF   ('&ENTRYID' NE '').ZG1283B  KEYS?           01164400
                      AIF   ('&LISTCOMPARE' NE '').ZG1283B  KEYS?       01164500
                      AIF   ('&ENTRYNAME' NE '').ZG1283B  KEYS?         01164600
                      AIF   ('&KEYTYPE' NE '').ZG1283B  KEYS?           01164700
                      AIF   ('&VERSCOMPARE' NE '').ZG1283B  KEYS?       01164800
                      AIF   ('&VERSCOMP' NE '').ZG1283B  KEYS?          01164900
                      AIF   ('&VERSCOMPTYPE' NE '').ZG1283B  KEYS?      01165000
                      AIF   ('&BUFLIST' NE '').ZG1283B  KEYS?           01165100
                      AIF   ('&BUFADDRTYPE' NE '').ZG1283B  KEYS?       01165200
                      AIF   ('&PAGEABLE' NE '').ZG1283B  KEYS?          01165300
                      AIF   ('&BUFSTGKEY' NE '').ZG1283B  KEYS?         01165400
                      AIF   ('&BUFALET' NE '').ZG1283B  KEYS?           01165500
                      AIF   ('&BUFADDRSIZE' NE '').ZG1283B  KEYS?       01165600
                      AIF   ('&BUFNUM' NE '').ZG1283B  KEYS?            01165700
                      AIF   ('&BUFFER' NE '').ZG1283B  KEYS?            01165800
                      AIF   ('&BUFSIZE' NE '').ZG1283B  KEYS?           01165900
                      AIF   ('&RESTOKEN' NE '').ZG1283B  KEYS?          01166000
                      AIF   ('&EXTRESTOKEN' NE '').ZG1283B  KEYS?       01166100
                      AIF   ('&FIRSTELEM' NE '').ZG1283B  KEYS?         01166200
                      AIF   ('&LASTELEM' NE '').ZG1283B  KEYS?          01166300
                      AIF   ('&MISCOMPARE' NE '').ZG1283B  KEYS?        01166400
                      AIF   ('&LISTTYPE' NE '').ZG1283B  KEYS?          01166500
                      AIF   ('&MOVETOKEY' NE '').ZG1283B  KEYS?         01166600
                      AIF   ('&LISTKEYINC' NE '').ZG1283B  KEYS?        01166700
                      AIF   ('&LISTKEYAREA' NE '').ZG1283B  KEYS?       01166800
                      AIF   ('&MOVETOSKEY' NE '').ZG1283B  KEYS?        01166900
                      AIF   ('&BUFINCRNUM' NE '').ZG1283B  KEYS?        01167000
                      AIF   ('&LOCKINDEX' NE '').ZG1283B  KEYS?         01167100
                      AIF   ('&LOCKOPER' NE '').ZG1283B  KEYS?          01167200
                      AIF   ('&LOCKCOMP' NE '').ZG1283B  KEYS?          01167300
                      AIF   ('&MODE' NE '').ZG1283B  KEYS?              01167400
                      AIF   ('&ANSAREA' NE '').ZG1283B  KEYS?           01167500
                      AIF   ('&ANSLEN' NE '').ZG1283B  KEYS?            01167600
                      AIF   ('&REQECB' NE '').ZG1283B  KEYS?            01167700
                      AIF   ('&REQDATA' NE '').ZG1283B  KEYS?           01167800
                      AIF   ('&REQTOKEN' NE '').ZG1283B  KEYS?          01167900
                      AIF   ('&RETCODE' NE '').ZG1283B  KEYS?           01168000
                      AIF   ('&RSNCODE' NE '').ZG1283B  KEYS?           01168100
                      AGO    .ZG1283C   INVOCATION OKAY                 01168200
.ZG1283B              ANOP  ,                                           01168300
&ZMS                  SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE        01168400
&ZMS                  SETC  '&ZMS CAN ONLY HAVE'                        01168500
&ZMS                  SETC  '&ZMS THE "PLISTVER" KEY'                   01168600
                      MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'      01168700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01168800
.ZG1283C              ANOP  ,                                           01168900
.*-------------------------------------------------------------------   01169000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01169100
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   01169200
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   01169300
                      AIF   (N'&MF(2) GT 1).ZG1285B  MULTI PARMS        01169400
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   01169500
.ZG1285B              AIF   (K'&MF(2) GT 0).ZG1285C                     01169600
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 01169700
&ZMS                  SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*            01169800
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         01169900
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                01170000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01170100
.ZG1285C              ANOP  ,                                           01170200
.*-------------------------------------------------------------------   01170300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               01170400
                      AIF   (K'&ZXMFCTRL LE 0).ZG1285P  NOT I/O         01170500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG1285P            01170600
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 01170700
&ZMS                  SETC  '"MF='      *KGPRA* MNOTE                   01170800
&ZMS                  SETC  '&ZMS.&MF"'                                 01170900
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   01171000
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'           01171100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01171200
.ZG1285P              ANOP  ,                                           01171300
.*-------------------------------------------------------------------   01171400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      01171500
&ZXMFATTR             SETC  'INPUT'     SET IN/OUTPUT                   01171600
&XMFATTR              SETC  '0D'                                        01171700
                      AIF   (K'&MF(3) LE 0).ZG1288B  PARM               01171800
&XMFATTR              SETC  '&MF(3,1)'  SET XVARIABLE                   01171900
                      AIF   (N'&MF(3) GT 1).ZG1288B  MULTI PARMS        01172000
&XMFATTR              SETC  '&MF(3)'    SET XVARIABLE                   01172100
.ZG1288B              ANOP  ,                                           01172200
.*-------------------------------------------------------------------   01172300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  01172400
                      AIF   (K'&ZXMFATTR LE 0).ZG1288P  NOT I/O         01172500
                      AIF   ('&XMFATTR'(1,1) NE '(').ZG1288P            01172600
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 01172700
&ZMS                  SETC  '"MF='      *KGPRA* MNOTE                   01172800
&ZMS                  SETC  '&ZMS.&MF"'                                 01172900
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   01173000
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'           01173100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01173200
.ZG1288P              ANOP  ,                                           01173300
.*-------------------------------------------------------------------   01173400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 01173500
                      AIF   (K'&ZXMFATTR LE 0).ZG1288S  NOT I/O         01173600
                      AIF   (K'&XMFATTR LE 60).ZG1288S  LNG OK          01173700
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 01173800
&ZMS                  SETC  '"MF='      *KLNGA* MNOTE                   01173900
&ZMS                  SETC  '&ZMS.&MF"'                                 01174000
&ZMS                  SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'       01174100
                      MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'          01174200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01174300
.ZG1288S              ANOP  ,                                           01174400
.*-------------------------------------------------------------------   01174500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01174600
.ZG1290               ANOP  ,                                           01174700
&ZTLC                 SETC 'E'                                          01174800
                      AIF   ('&MF(1)' NE '&ZTLC').ZG1298                01174900
&XMF                  SETC  'E'         SET KEYWORD                     01175000
                      AIF   (N'&MF LE 3).ZG1290A  CK NUM                01175100
&ZMS                  SETC  '"MF='      *KPOSA* MNOTE                   01175200
&ZMS                  SETC  '&ZMS.&MF"'                                 01175300
&ZMS                  SETC  '&ZMS "MF"'                                 01175400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        01175500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01175600
.ZG1290A              ANOP  ,                                           01175700
.*-------------------------------------------------------------------   01175800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01175900
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   01176000
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   01176100
                      AIF   (N'&MF(2) GT 1).ZG1292B  MULTI PARMS        01176200
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   01176300
.ZG1292B              AIF   (K'&MF(2) GT 0).ZG1292C                     01176400
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 01176500
&ZMS                  SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*            01176600
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         01176700
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                01176800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01176900
.ZG1292C              ANOP  ,                                           01177000
.*-------------------------------------------------------------------   01177100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              01177200
                      AIF   (K'&ZXMFCTRL LE 0).ZG1292R  NOT I/O         01177300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG1292R            01177400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                  01177500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1292P              01177600
                      AIF   (K'&ZCGPR GT 2).ZG1292Q                     01177700
                      AIF   ('&ZCGPR' EQ '0').ZG1292Q                   01177800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01177900
                      AIF   (T'&ZCGPR NE 'N').ZG1292Q  INVALID REG NAME 01178000
.ZG1292P              ANOP  ,                                           01178100
                      AIF   (T'&ZCGPR NE 'N').ZG1292R  NON NUMERIC      01178200
                      AIF   ('&ZCGPR' LT '1').ZG1292Q                   01178300
                      AIF   ('&ZCGPR' LE '12').ZG1292R                  01178400
.ZG1292Q              ANOP  ,                                           01178500
&ZMS                  SETC  '"MF='      *KGPRA* MNOTE                   01178600
&ZMS                  SETC  '&ZMS.&MF"'                                 01178700
&ZMS                  SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'   01178800
                      MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'            01178900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01179000
.ZG1292R              ANOP  ,                                           01179100
.*-------------------------------------------------------------------   01179200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01179300
&XMFSCK               SETC  ''          INITIALIZE XVARIABLE            01179400
.ZG1296A   AIF   ('&MF(3)' NE 'COMPLETE').ZG1297A                       01179500
&XMFSCK               SETC  'COMPLETE'  SET KEYWORD                     01179600
.*-------------------------------------------------------------------   01179700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01179800
.ZG1297A              AIF   (K'&XMFSCK GT 0).ZG1297C  KEYWORD           01179900
                      AIF   (K'&MF(3) LE 0).ZG1297B                     01180000
&ZMS                  SETC  '"MF='      *KUKWA* MNOTE                   01180100
&ZMS                  SETC  '&ZMS.&MF"'                                 01180200
&ZMS                  SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '   01180300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01180400
&ZMS                  SETC  '&ZMS "COMPLETE".'                          01180500
                      MNOTE 8,' &ZMS '                                  01180600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01180700
.ZG1297B              ANOP  ,                                           01180800
&XMFSCK               SETC  'COMPLETE'  SET DEFAULT KEYWORD             01180900
.ZG1297C              ANOP  ,                                           01181000
&ZXMFSCK              SETC  'INPUT'     SET IN/OUTPUT                   01181100
.*------------------------------------------------------------------    01181200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01181300
.ZG1298               ANOP  ,                                           01181400
&ZXMF                 SETC  'INPUT'     SET IN/OUTPUT                   01181500
                      AIF   (K'&XMF GT 0).ZG1298E  VALID ARG            01181600
                      AIF   (T'&MF EQ 'O').ZG1298D  OMITTED             01181700
&ZASYSLNDX            SETA  0                                           01181800
.ZG1298A              ANOP  ,           POSITIONAL MACRO KEY            01181900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01182000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1298C          01182100
&ZTLC                 SETC 'MF'                                         01182200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1298A 01182300
.ZG1298B              ANOP  ,                                           01182400
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 01182500
&ZMS                  SETC  'THE "MF" KEY'      *KOPTA* MNOTE           01182600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01182700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01182800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01182900
                      AGO   .ZG1298E                                    01183000
.ZG1298C              ANOP  ,                                           01183100
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 01183200
&ZMS                  SETC  '"MF='      *KUKWA* MNOTE                   01183300
&ZMS                  SETC  '&ZMS.&MF"'                                 01183400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01183500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01183600
&ZMS                  SETC  '&ZMS "S",'                                 01183700
&ZMS                  SETC  '&ZMS "L",'                                 01183800
&ZMS                  SETC  '&ZMS OR "E".'                              01183900
                      MNOTE 8,' &ZMS '                                  01184000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01184100
                      AGO   .ZG1298E                                    01184200
.ZG1298D              ANOP  ,                                           01184300
&XMF                  SETC  'S'         SET DEFAULT KEYWORD             01184400
&XMFSCK               SETC  'COMPLETE'  COMPLETE CHECKING               01184500
.ZG1298E              ANOP  ,                                           01184600
.********************************************************************   01184700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 01184800
.********************************************************************   01184900
                      ACTR  10000                                       01185000
.*-------------------------------------------------------------------   01185100
.***AG.MF03 MF=(SLE)                                                    01185200
                      AIF   ('&XMF' EQ 'L').ZGMFX                       01185300
.*----------------------------------------------------------------***   01185400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01185500
                      AIF   (N'&CONTOKEN LE 1).ZG2A  CK NUM             01185600
&ZMS                  SETC  '"CONTOKEN='        *KPOSA* MNOTE           01185700
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           01185800
&ZMS                  SETC  '&ZMS "CONTOKEN"'                           01185900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01186000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01186100
.ZG2A                 ANOP  ,                                           01186200
.*-------------------------------------------------------------------   01186300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01186400
&ZXCONTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   01186500
&XCONTOKEN            SETC  '&CONTOKEN(1)'      SET XVARIABLE           01186600
                      AIF   (N'&CONTOKEN GT 1).ZG2B  MULTI PARMS        01186700
&XCONTOKEN            SETC  '&CONTOKEN'         SET XVARIABLE           01186800
.ZG2B                 AIF   (K'&CONTOKEN(1) GT 0).ZG2C                  01186900
&ZXCONTOKEN           SETC  ''          RESET IN/OUTPUT                 01187000
&ZMS                  SETC  ' '         *KRQDA*                         01187100
&ZMS                  SETC  '&ZMS "CONTOKEN" KEY AND ITS'               01187200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01187300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01187400
.ZG2C                 ANOP  ,                                           01187500
.*-------------------------------------------------------------------   01187600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01187700
                      AIF   (K'&ZXCONTOKEN LE 0).ZG2R  NOT I/O          01187800
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R             01187900
&ZCGPR                SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)              01188000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 01188100
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        01188200
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      01188300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01188400
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    01188500
.ZG2P                 ANOP  ,                                           01188600
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         01188700
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      01188800
                      AIF   ('&ZCGPR' LE '12').ZG2R                     01188900
.ZG2Q                 ANOP  ,                                           01189000
&ZMS                  SETC  '"CONTOKEN='        *KGPRA* MNOTE           01189100
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           01189200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01189300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01189400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01189500
.ZG2R                 ANOP  ,                                           01189600
.*----------------------------------------------------------------***   01189700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01189800
                      AIF   (N'&REQID LE 1).ZG5A  CK NUM                01189900
&ZMS                  SETC  '"REQID='   *KPOSA* MNOTE                   01190000
&ZMS                  SETC  '&ZMS.&REQID"'                              01190100
&ZMS                  SETC  '&ZMS "REQID"'                              01190200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01190300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01190400
.ZG5A                 ANOP  ,                                           01190500
.*-------------------------------------------------------------------   01190600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01190700
&ZXREQID              SETC  'INPUT'     SET IN/OUTPUT                   01190800
&XREQID               SETC  'NO_REQID'                                  01190900
                      AIF   (K'&REQID(1) LE 0).ZG5B  PARM               01191000
&XREQID               SETC  '&REQID(1)'         SET XVARIABLE           01191100
                      AIF   (N'&REQID GT 1).ZG5B  MULTI PARMS           01191200
&XREQID               SETC  '&REQID'    SET XVARIABLE                   01191300
.ZG5B                 ANOP  ,                                           01191400
.*-------------------------------------------------------------------   01191500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01191600
                      AIF   (K'&ZXREQID LE 0).ZG5R  NOT I/O             01191700
         AIF   ('&XREQID' EQ 'NO_REQID').ZG5R                           01191800
                      AIF   ('&XREQID'(1,1) NE '(').ZG5R                01191900
&ZCGPR                SETC  '&XREQID'(2,K'&XREQID-2)                    01192000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                 01192100
                      AIF   (K'&ZCGPR GT 2).ZG5Q                        01192200
                      AIF   ('&ZCGPR' EQ '0').ZG5Q                      01192300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01192400
                      AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME    01192500
.ZG5P                 ANOP  ,                                           01192600
                      AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC         01192700
                      AIF   ('&ZCGPR' LT '2').ZG5Q                      01192800
                      AIF   ('&ZCGPR' LE '12').ZG5R                     01192900
.ZG5Q                 ANOP  ,                                           01193000
&ZMS                  SETC  '"REQID='   *KGPRA* MNOTE                   01193100
&ZMS                  SETC  '&ZMS.&REQID"'                              01193200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01193300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01193400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01193500
.ZG5R                 ANOP  ,                                           01193600
.*------------------------------------------------------------------    01193700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01193800
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            01193900
.*-------------------------------------------------------------------   01194000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01194100
.ZG9                  ANOP  ,                                           01194200
                      AIF   (K'&REQUEST(1) LE 0).ZG9A                   01194300
&ZTLC                 SETC 'READ_LIST'                                  01194400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG385            01194500
&XREQUEST             SETC  'READ_LIST'         SET KEYWORD             01194600
                      AIF   (N'&REQUEST LE 1).ZG9A  CK NUM              01194700
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           01194800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01194900
&ZMS                  SETC  '&ZMS "REQUEST"'                            01195000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01195100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01195200
.ZG9A                 ANOP  ,                                           01195300
.*------------------------------------------------------------------    01195400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01195500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01195600
.ZG9A0                AIF   (K'&RESTOKEN LE 0).ZG9A1  OK                01195700
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      01195800
.ZG9A1                AIF   (K'&EXTRESTOKEN LE 0).ZG9A2  OK             01195900
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     01196000
.ZG9A2                AIF   (K'&FIRSTELEM LE 0).ZG9A3  OK               01196100
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      01196200
.ZG9A3                AIF   (K'&LASTELEM LE 0).ZG9A4  OK                01196300
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      01196400
.ZG9A4                AIF   (K'&MISCOMPARE LE 0).ZG9A5  OK              01196500
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      01196600
.ZG9A5                AIF   (K'&LISTTYPE LE 0).ZG9A6  OK                01196700
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      01196800
.ZG9A6                AIF   (K'&MOVETOKEY LE 0).ZG9A7  OK               01196900
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      01197000
.ZG9A7                AIF   (K'&LISTKEYINC LE 0).ZG9A8  OK              01197100
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      01197200
.ZG9A8                AIF   (K'&LISTKEYAREA LE 0).ZG9A9  OK             01197300
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     01197400
.ZG9A9                AIF   (K'&MOVETOSKEY LE 0).ZG9A10  OK             01197500
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      01197600
.ZG9A10               AIF   (K'&BUFINCRNUM LE 0).ZG9A11  OK             01197700
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      01197800
.ZG9A11               AIF   (K'&ZCVAL LE 0).ZG9A12  OK                  01197900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01198000
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   01198100
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01198200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01198300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01198400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01198500
.ZG9A12               ANOP  ,                                           01198600
.*-------------------------------------------------------------------   01198700
.***AG.KKWRD07 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          01198800
&ZI                   SETA  0           XVARIABLE ARRAY INDEX           01198900
&ZJ                   SETA  0           SUBLIST INDEX                   01199000
.ZG11A                ANOP  ,                                           01199100
&ZJ                   SETA  &ZJ+1       NEXT SUBLIST                    01199200
                      AIF   (&ZJ GT N'&TYPE).ZG11C  DONE                01199300
                      AIF   (K'&TYPE(&ZJ) LE 0).ZG11A  NULL             01199400
&ZI                   SETA  &ZI+1       NEXT ARRAY ENTRY                01199500
&XTYPE(&ZI)   SETC  ''                  NULL ENTRY                      01199600
&XTYPE(&ZI+1) SETC  ''                  NULL AT ARRAY END               01199700
.ZG12B  AIF   ('&TYPE(&ZJ)' NE 'ENTDATA').ZG13B                         01199800
&XTYPE(&ZI)   SETC  'ENTDATA'           SET KEYWORD                     01199900
.ZG13B  AIF   ('&TYPE(&ZJ)' NE 'ADJDATA').ZG14B                         01200000
&XTYPE(&ZI)   SETC  'ADJDATA'           SET KEYWORD                     01200100
.ZG14B  AIF   ('&TYPE(&ZJ)' NE 'ECONTROLS').ZG15B                       01200200
&XTYPE(&ZI)   SETC  'ECONTROLS'         SET KEYWORD                     01200300
.ZG15B                AIF   ('&XTYPE(&ZI)' NE '').ZG11A                 01200400
&ZI                   SETA  &ZI-1       BACKUP ARRAY                    01200500
&ZMS                  SETC  '"TYPE='    *KVKWA* MNOTE                   01200600
&ZMS                  SETC  '&ZMS.&TYPE"'                               01200700
&ZMS                  SETC  '&ZMS ARGUMENT &ZJ'                         01200800
&ZMS                  SETC  '&ZMS IS AN UNKNOWN KEYWORD. '              01200900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01201000
&ZMS                  SETC  '&ZMS "ENTDATA",'                           01201100
&ZMS                  SETC  '&ZMS "ADJDATA",'                           01201200
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      01201300
                      MNOTE 8,' &ZMS '                                  01201400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01201500
                      AGO   .ZG11A                                      01201600
.*-------------------------------------------------------------------   01201700
.***AG.KKWRD09 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          01201800
.ZG11C                AIF   (&ZI GT 0).ZG11D    VALID                   01201900
&ZXTYPE               SETC  ''          RESET IN/OUTPUT                 01202000
&XTYPE(1)  SETC  'ENTDATA'              SET DEFAULT KEYWORD             01202100
&XTYPE(2)  SETC  ''   NULL AT ARRAY END                                 01202200
&ZMS                  SETC  'THE'                                       01202300
&ZMS                  SETC  '&ZMS "TYPE" KEY AND ITS'                   01202400
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01202500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01202600
&ZMS                  SETC  '&ZMS "ENTDATA",'                           01202700
&ZMS                  SETC  '&ZMS "ADJDATA",'                           01202800
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      01202900
                      MNOTE 8,' &ZMS '                                  01203000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01203100
.ZG11D                ANOP  ,                                           01203200
.*----------------------------------------------------------------***   01203300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01203400
                      AIF   (N'&ADJAREA LE 1).ZG17A  CK NUM             01203500
&ZMS                  SETC  '"ADJAREA='         *KPOSA* MNOTE           01203600
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            01203700
&ZMS                  SETC  '&ZMS "ADJAREA"'                            01203800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01203900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01204000
.ZG17A                ANOP  ,                                           01204100
.*-------------------------------------------------------------------   01204200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01204300
&ZXADJAREA            SETC  'INPUT'     SET IN/OUTPUT                   01204400
&XADJAREA             SETC  'NO_ADJAREA'                                01204500
                      AIF   (K'&ADJAREA(1) LE 0).ZG17B  PARM            01204600
&XADJAREA             SETC  '&ADJAREA(1)'       SET XVARIABLE           01204700
                      AIF   (N'&ADJAREA GT 1).ZG17B  MULTI PARMS        01204800
&XADJAREA             SETC  '&ADJAREA'  SET XVARIABLE                   01204900
.ZG17B                ANOP  ,                                           01205000
.*-------------------------------------------------------------------   01205100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01205200
                      AIF   (K'&ZXADJAREA LE 0).ZG17R  NOT I/O          01205300
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA').ZG17R                      01205400
                      AIF   ('&XADJAREA'(1,1) NE '(').ZG17R             01205500
&ZCGPR                SETC  '&XADJAREA'(2,K'&XADJAREA-2)                01205600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                01205700
                      AIF   (K'&ZCGPR GT 2).ZG17Q                       01205800
                      AIF   ('&ZCGPR' EQ '0').ZG17Q                     01205900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01206000
                      AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME   01206100
.ZG17P                ANOP  ,                                           01206200
                      AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC        01206300
                      AIF   ('&ZCGPR' LT '2').ZG17Q                     01206400
                      AIF   ('&ZCGPR' LE '12').ZG17R                    01206500
.ZG17Q                ANOP  ,                                           01206600
&ZMS                  SETC  '"ADJAREA='         *KGPRA* MNOTE           01206700
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            01206800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01206900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01207000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01207100
.ZG17R                ANOP  ,                                           01207200
.*----------------------------------------------------------------***   01207300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01207400
                      AIF   (N'&DIRECTION LE 1).ZG20A  CK NUM           01207500
&ZMS                  SETC  '"DIRECTION='       *KPOSA* MNOTE           01207600
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01207700
&ZMS                  SETC  '&ZMS "DIRECTION"'                          01207800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01207900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01208000
.ZG20A                ANOP  ,                                           01208100
.*-------------------------------------------------------------------   01208200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01208300
&XDIRECTION           SETC  ''          INITIALIZE XVARIABLE            01208400
.ZG21A   AIF   ('&DIRECTION(1)' NE 'HEADTOTAIL').ZG22A                  01208500
&XDIRECTION           SETC  'HEADTOTAIL'        SET KEYWORD             01208600
.*-------------------------------------------------------------------   01208700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01208800
.ZG22A   AIF   ('&DIRECTION(1)' NE 'TAILTOHEAD').ZG23A                  01208900
&XDIRECTION           SETC  'TAILTOHEAD'        SET KEYWORD             01209000
.*-------------------------------------------------------------------   01209100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01209200
.ZG23A                AIF   (K'&XDIRECTION GT 0).ZG23C  KEYWORD         01209300
                      AIF   (K'&DIRECTION(1) LE 0).ZG23B                01209400
&ZMS                  SETC  '"DIRECTION='       *KUKWA* MNOTE           01209500
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01209600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01209700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01209800
&ZMS                  SETC  '&ZMS "HEADTOTAIL"'                         01209900
&ZMS                  SETC  '&ZMS OR "TAILTOHEAD".'                     01210000
                      MNOTE 8,' &ZMS '                                  01210100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01210200
.ZG23B                ANOP  ,                                           01210300
&XDIRECTION           SETC  'HEADTOTAIL'        SET DEFAULT KEYWORD     01210400
.ZG23C                ANOP  ,                                           01210500
&ZXDIRECTION          SETC  'INPUT'     SET IN/OUTPUT                   01210600
.*------------------------------------------------------------------    01210700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01210800
&XLOCATOR             SETC  ''          INITIALIZE XVARIABLE            01210900
.*-------------------------------------------------------------------   01211000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01211100
.ZG26                 ANOP  ,                                           01211200
                      AIF   (K'&LOCATOR(1) LE 0).ZG26A                  01211300
&ZTLC                 SETC 'CURSOR'                                     01211400
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG84             01211500
&XLOCATOR             SETC  'CURSOR'    SET KEYWORD                     01211600
                      AIF   (N'&LOCATOR LE 1).ZG26A  CK NUM             01211700
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01211800
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01211900
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01212000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01212100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01212200
.ZG26A                ANOP  ,                                           01212300
.*------------------------------------------------------------------    01212400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01212500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01212600
.ZG26A0               AIF   (K'&ENTRYID LE 0).ZG26A1  OK                01212700
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01212800
.ZG26A1               AIF   (K'&LISTCOMPARE LE 0).ZG26A2  OK            01212900
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01213000
.ZG26A2               AIF   (K'&ENTRYNAME LE 0).ZG26A3  OK              01213100
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01213200
.ZG26A3               AIF   (K'&KEYTYPE LE 0).ZG26A4  OK                01213300
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01213400
.ZG26A4               AIF   (K'&ZCVAL LE 0).ZG26A5  OK                  01213500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01213600
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01213700
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01213800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01213900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01214000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01214100
.ZG26A5               ANOP  ,                                           01214200
.*----------------------------------------------------------------***   01214300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01214400
                      AIF   (N'&LISTNUM LE 1).ZG28A  CK NUM             01214500
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01214600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01214700
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01214800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01214900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01215000
.ZG28A                ANOP  ,                                           01215100
.*-------------------------------------------------------------------   01215200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01215300
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01215400
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01215500
                      AIF   (N'&LISTNUM GT 1).ZG28B  MULTI PARMS        01215600
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01215700
.ZG28B                AIF   (K'&LISTNUM(1) GT 0).ZG28C                  01215800
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01215900
&ZMS                  SETC  ' '         *KRQDA*                         01216000
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01216100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01216200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01216300
.ZG28C                ANOP  ,                                           01216400
.*-------------------------------------------------------------------   01216500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01216600
                      AIF   (K'&ZXLISTNUM LE 0).ZG28R  NOT I/O          01216700
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG28R             01216800
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01216900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                01217000
                      AIF   (K'&ZCGPR GT 2).ZG28Q                       01217100
                      AIF   ('&ZCGPR' EQ '0').ZG28Q                     01217200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01217300
                      AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME   01217400
.ZG28P                ANOP  ,                                           01217500
                      AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC        01217600
                      AIF   ('&ZCGPR' LT '2').ZG28Q                     01217700
                      AIF   ('&ZCGPR' LE '12').ZG28R                    01217800
.ZG28Q                ANOP  ,                                           01217900
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01218000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01218100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01218200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01218300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01218400
.ZG28R                ANOP  ,                                           01218500
.*----------------------------------------------------------------***   01218600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01218700
                      AIF   (N'&KEYSCANTYPE LE 1).ZG31A  CK NUM         01218800
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           01218900
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01219000
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01219100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01219200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01219300
.ZG31A                ANOP  ,                                           01219400
.*-------------------------------------------------------------------   01219500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01219600
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01219700
.ZG32A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG33A                     01219800
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01219900
.*-------------------------------------------------------------------   01220000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01220100
.ZG33A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG34A                 01220200
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01220300
.*-------------------------------------------------------------------   01220400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01220500
.ZG34A                AIF   (K'&XKEYSCANTYPE GT 0).ZG34C  KEYWORD       01220600
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG34B              01220700
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           01220800
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01220900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01221000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01221100
&ZMS                  SETC  '&ZMS "ENTRY"'                              01221200
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01221300
                      MNOTE 8,' &ZMS '                                  01221400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01221500
.ZG34B                ANOP  ,                                           01221600
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01221700
.ZG34C                ANOP  ,                                           01221800
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01221900
.*------------------------------------------------------------------    01222000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01222100
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01222200
.*-------------------------------------------------------------------   01222300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01222400
.ZG37                 ANOP  ,                                           01222500
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG37A              01222600
&ZTLC                 SETC 'NO'                                         01222700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG38         01222800
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01222900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG37A  CK NUM         01223000
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01223100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01223200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01223300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01223400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01223500
.ZG37A                ANOP  ,                                           01223600
.*------------------------------------------------------------------    01223700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01223800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01223900
.ZG37A0               AIF   (K'&AUTHCOMP LE 0).ZG37A1  OK               01224000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01224100
.ZG37A1               AIF   (K'&AUTHCOMPTYPE LE 0).ZG37A2  OK           01224200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01224300
.ZG37A2               AIF   (K'&ZCVAL LE 0).ZG37A3  OK                  01224400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01224500
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01224600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01224700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01224800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01224900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01225000
.ZG37A3               ANOP  ,                                           01225100
.*-------------------------------------------------------------------   01225200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01225300
.ZG38                 ANOP  ,                                           01225400
&ZTLC                 SETC 'YES'                                        01225500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG47         01225600
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01225700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG38A  CK NUM         01225800
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01225900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01226000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01226100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01226200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01226300
.ZG38A                ANOP  ,                                           01226400
.*----------------------------------------------------------------***   01226500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01226600
                      AIF   (N'&AUTHCOMP LE 1).ZG40A  CK NUM            01226700
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01226800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01226900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01227000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01227100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01227200
.ZG40A                ANOP  ,                                           01227300
.*-------------------------------------------------------------------   01227400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01227500
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01227600
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01227700
                      AIF   (N'&AUTHCOMP GT 1).ZG40B  MULTI PARMS       01227800
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01227900
.ZG40B                AIF   (K'&AUTHCOMP(1) GT 0).ZG40C                 01228000
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01228100
&ZMS                  SETC  ' '         *KRQDA*                         01228200
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01228300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01228400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01228500
.ZG40C                ANOP  ,                                           01228600
.*-------------------------------------------------------------------   01228700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01228800
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG40R  NOT I/O         01228900
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG40R            01229000
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01229100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                01229200
                      AIF   (K'&ZCGPR GT 2).ZG40Q                       01229300
                      AIF   ('&ZCGPR' EQ '0').ZG40Q                     01229400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01229500
                      AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME   01229600
.ZG40P                ANOP  ,                                           01229700
                      AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC        01229800
                      AIF   ('&ZCGPR' LT '2').ZG40Q                     01229900
                      AIF   ('&ZCGPR' LE '12').ZG40R                    01230000
.ZG40Q                ANOP  ,                                           01230100
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01230200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01230300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01230400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01230500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01230600
.ZG40R                ANOP  ,                                           01230700
.*----------------------------------------------------------------***   01230800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01230900
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG42A  CK NUM        01231000
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01231100
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01231200
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01231300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01231400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01231500
.ZG42A                ANOP  ,                                           01231600
.*-------------------------------------------------------------------   01231700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01231800
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01231900
.ZG43A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG44A                    01232000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01232100
.*-------------------------------------------------------------------   01232200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01232300
.ZG44A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG45A              01232400
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01232500
.*-------------------------------------------------------------------   01232600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01232700
.ZG45A                AIF   (K'&XAUTHCOMPTYPE GT 0).ZG45C  KEYWORD      01232800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG45B             01232900
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01233000
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01233100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01233200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01233300
&ZMS                  SETC  '&ZMS "EQUAL"'                              01233400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01233500
                      MNOTE 8,' &ZMS '                                  01233600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01233700
.ZG45B                ANOP  ,                                           01233800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01233900
.ZG45C                ANOP  ,                                           01234000
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01234100
.*-------------------------------------------------------------------   01234200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01234300
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG45D  KEY            01234400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG45D  PARM       01234500
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01234600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01234700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01234800
&ZMS                  SETC  '&ZMS '                                     01234900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01235000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01235100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01235200
.ZG45D                ANOP  ,                                           01235300
.*------------------------------------------------------------------    01235400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01235500
.ZG47                 ANOP  ,                                           01235600
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01235700
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG47E  VALID ARG     01235800
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG47D  OMITTED      01235900
&ZASYSLNDX            SETA  0                                           01236000
.ZG47A                ANOP  ,           POSITIONAL MACRO KEY            01236100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01236200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG47C            01236300
&ZTLC                 SETC 'AUTHCOMPARE'                                01236400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG47A   01236500
.ZG47B                ANOP  ,                                           01236600
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01236700
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01236800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01236900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01237000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01237100
                      AGO   .ZG47E                                      01237200
.ZG47C                ANOP  ,                                           01237300
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01237400
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01237500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01237600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01237700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01237800
&ZMS                  SETC  '&ZMS "NO"'                                 01237900
&ZMS                  SETC  '&ZMS OR "YES".'                            01238000
                      MNOTE 8,' &ZMS '                                  01238100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01238200
                      AGO   .ZG47E                                      01238300
.ZG47D                ANOP  ,                                           01238400
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01238500
.ZG47E                ANOP  ,                                           01238600
.*------------------------------------------------------------------    01238700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01238800
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01238900
.*-------------------------------------------------------------------   01239000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01239100
.ZG50                 ANOP  ,                                           01239200
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG50A               01239300
&ZTLC                 SETC 'NO'                                         01239400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG51          01239500
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01239600
                      AIF   (N'&KEYCOMPARE LE 1).ZG50A  CK NUM          01239700
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01239800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01239900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01240000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01240100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01240200
.ZG50A                ANOP  ,                                           01240300
.*------------------------------------------------------------------    01240400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01240500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01240600
.ZG50A0               AIF   (K'&ENTRYKEY LE 0).ZG50A1  OK               01240700
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01240800
.ZG50A1               AIF   (K'&KEYREQTYPE LE 0).ZG50A2  OK             01240900
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01241000
.ZG50A2               AIF   (K'&KEYRANGEEND LE 0).ZG50A3  OK            01241100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01241200
.ZG50A3               AIF   (K'&ZCVAL LE 0).ZG50A4  OK                  01241300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01241400
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           01241500
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01241600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01241700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01241800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01241900
.ZG50A4               ANOP  ,                                           01242000
.*-------------------------------------------------------------------   01242100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01242200
.ZG51                 ANOP  ,                                           01242300
&ZTLC                 SETC 'YES'                                        01242400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG65          01242500
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01242600
                      AIF   (N'&KEYCOMPARE LE 1).ZG51A  CK NUM          01242700
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01242800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01242900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01243000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01243100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01243200
.ZG51A                ANOP  ,                                           01243300
.*----------------------------------------------------------------***   01243400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01243500
                      AIF   (N'&ENTRYKEY LE 1).ZG53A  CK NUM            01243600
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           01243700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01243800
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01243900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01244000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01244100
.ZG53A                ANOP  ,                                           01244200
.*-------------------------------------------------------------------   01244300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01244400
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01244500
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01244600
                      AIF   (N'&ENTRYKEY GT 1).ZG53B  MULTI PARMS       01244700
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01244800
.ZG53B                AIF   (K'&ENTRYKEY(1) GT 0).ZG53C                 01244900
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01245000
&ZMS                  SETC  ' '         *KRQDA*                         01245100
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01245200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01245300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01245400
.ZG53C                ANOP  ,                                           01245500
.*-------------------------------------------------------------------   01245600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01245700
                      AIF   (K'&ZXENTRYKEY LE 0).ZG53R  NOT I/O         01245800
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG53R            01245900
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01246000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                01246100
                      AIF   (K'&ZCGPR GT 2).ZG53Q                       01246200
                      AIF   ('&ZCGPR' EQ '0').ZG53Q                     01246300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01246400
                      AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME   01246500
.ZG53P                ANOP  ,                                           01246600
                      AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC        01246700
                      AIF   ('&ZCGPR' LT '2').ZG53Q                     01246800
                      AIF   ('&ZCGPR' LE '12').ZG53R                    01246900
.ZG53Q                ANOP  ,                                           01247000
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           01247100
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01247200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01247300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01247400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01247500
.ZG53R                ANOP  ,                                           01247600
.*------------------------------------------------------------------    01247700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01247800
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01247900
.*-------------------------------------------------------------------   01248000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01248100
.ZG57                 ANOP  ,                                           01248200
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG57A               01248300
&ZTLC                 SETC 'EQUAL'                                      01248400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG58          01248500
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01248600
                      AIF   (N'&KEYREQTYPE LE 1).ZG57A  CK NUM          01248700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01248800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01248900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01249000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01249100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01249200
.ZG57A                ANOP  ,                                           01249300
.*------------------------------------------------------------------    01249400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01249500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01249600
.ZG57A0               AIF   (K'&KEYRANGEEND LE 0).ZG57A1  OK            01249700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01249800
.ZG57A1               AIF   (K'&ZCVAL LE 0).ZG57A2  OK                  01249900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01250000
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01250100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01250200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01250300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01250400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01250500
.ZG57A2               ANOP  ,                                           01250600
.*-------------------------------------------------------------------   01250700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01250800
.ZG58                 ANOP  ,                                           01250900
&ZTLC                 SETC 'LESSOREQUAL'                                01251000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG59          01251100
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01251200
                      AIF   (N'&KEYREQTYPE LE 1).ZG58A  CK NUM          01251300
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01251400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01251500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01251600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01251700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01251800
.ZG58A                ANOP  ,                                           01251900
.*------------------------------------------------------------------    01252000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01252100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01252200
.ZG58A0               AIF   (K'&KEYRANGEEND LE 0).ZG58A1  OK            01252300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01252400
.ZG58A1               AIF   (K'&ZCVAL LE 0).ZG58A2  OK                  01252500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01252600
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01252700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01252800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01252900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01253000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01253100
.ZG58A2               ANOP  ,                                           01253200
.*-------------------------------------------------------------------   01253300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01253400
.ZG59                 ANOP  ,                                           01253500
&ZTLC                 SETC 'GREATEROREQUAL'                             01253600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG60          01253700
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01253800
                      AIF   (N'&KEYREQTYPE LE 1).ZG59A  CK NUM          01253900
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01254000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01254100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01254200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01254300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01254400
.ZG59A                ANOP  ,                                           01254500
.*------------------------------------------------------------------    01254600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01254700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01254800
.ZG59A0               AIF   (K'&KEYRANGEEND LE 0).ZG59A1  OK            01254900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01255000
.ZG59A1               AIF   (K'&ZCVAL LE 0).ZG59A2  OK                  01255100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01255200
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01255300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01255400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01255500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01255600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01255700
.ZG59A2               ANOP  ,                                           01255800
.*-------------------------------------------------------------------   01255900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01256000
.ZG60                 ANOP  ,                                           01256100
&ZTLC                 SETC 'RANGE'                                      01256200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG64          01256300
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01256400
                      AIF   (N'&KEYREQTYPE LE 1).ZG60A  CK NUM          01256500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01256600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01256700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01256800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01256900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01257000
.ZG60A                ANOP  ,                                           01257100
.*----------------------------------------------------------------***   01257200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01257300
                      AIF   (N'&KEYRANGEEND LE 1).ZG62A  CK NUM         01257400
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           01257500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01257600
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01257700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01257800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01257900
.ZG62A                ANOP  ,                                           01258000
.*-------------------------------------------------------------------   01258100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01258200
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01258300
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01258400
                      AIF   (N'&KEYRANGEEND GT 1).ZG62B  MULTI PARMS    01258500
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01258600
.ZG62B                AIF   (K'&KEYRANGEEND(1) GT 0).ZG62C              01258700
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01258800
&ZMS                  SETC  ' '         *KRQDA*                         01258900
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01259000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01259100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01259200
.ZG62C                ANOP  ,                                           01259300
.*-------------------------------------------------------------------   01259400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01259500
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG62R  NOT I/O      01259600
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG62R         01259700
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01259800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                01259900
                      AIF   (K'&ZCGPR GT 2).ZG62Q                       01260000
                      AIF   ('&ZCGPR' EQ '0').ZG62Q                     01260100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01260200
                      AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME   01260300
.ZG62P                ANOP  ,                                           01260400
                      AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC        01260500
                      AIF   ('&ZCGPR' LT '2').ZG62Q                     01260600
                      AIF   ('&ZCGPR' LE '12').ZG62R                    01260700
.ZG62Q                ANOP  ,                                           01260800
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           01260900
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01261000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01261100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01261200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01261300
.ZG62R                ANOP  ,                                           01261400
.*------------------------------------------------------------------    01261500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01261600
.ZG64                 ANOP  ,                                           01261700
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01261800
                      AIF   (K'&XKEYREQTYPE GT 0).ZG64E  VALID ARG      01261900
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG64D  OMITTED       01262000
&ZASYSLNDX            SETA  0                                           01262100
.ZG64A                ANOP  ,           POSITIONAL MACRO KEY            01262200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01262300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG64C            01262400
&ZTLC                 SETC 'KEYREQTYPE'                                 01262500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG64A   01262600
.ZG64B                ANOP  ,                                           01262700
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01262800
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       01262900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01263000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01263100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01263200
                      AGO   .ZG64E                                      01263300
.ZG64C                ANOP  ,                                           01263400
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01263500
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           01263600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01263700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01263800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01263900
&ZMS                  SETC  '&ZMS "EQUAL",'                             01264000
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01264100
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01264200
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01264300
                      MNOTE 8,' &ZMS '                                  01264400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01264500
                      AGO   .ZG64E                                      01264600
.ZG64D                ANOP  ,                                           01264700
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01264800
.ZG64E                ANOP  ,                                           01264900
.*------------------------------------------------------------------    01265000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01265100
.ZG65                 ANOP  ,                                           01265200
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01265300
                      AIF   (K'&XKEYCOMPARE GT 0).ZG65E  VALID ARG      01265400
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG65D  OMITTED       01265500
&ZASYSLNDX            SETA  0                                           01265600
.ZG65A                ANOP  ,           POSITIONAL MACRO KEY            01265700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01265800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG65C            01265900
&ZTLC                 SETC 'KEYCOMPARE'                                 01266000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG65A   01266100
.ZG65B                ANOP  ,                                           01266200
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01266300
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       01266400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01266500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01266600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01266700
                      AGO   .ZG65E                                      01266800
.ZG65C                ANOP  ,                                           01266900
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01267000
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           01267100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01267200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01267300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01267400
&ZMS                  SETC  '&ZMS "NO"'                                 01267500
&ZMS                  SETC  '&ZMS OR "YES".'                            01267600
                      MNOTE 8,' &ZMS '                                  01267700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01267800
                      AGO   .ZG65E                                      01267900
.ZG65D                ANOP  ,                                           01268000
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01268100
.ZG65E                ANOP  ,                                           01268200
.*------------------------------------------------------------------    01268300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01268400
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01268500
.*-------------------------------------------------------------------   01268600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01268700
.ZG68                 ANOP  ,                                           01268800
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG68A              01268900
&ZTLC                 SETC 'NO'                                         01269000
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG69         01269100
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01269200
                      AIF   (N'&SKEYCOMPARE LE 1).ZG68A  CK NUM         01269300
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01269400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01269500
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01269600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01269700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01269800
.ZG68A                ANOP  ,                                           01269900
.*------------------------------------------------------------------    01270000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01270100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01270200
.ZG68A0               AIF   (K'&SECONDARYKEY LE 0).ZG68A1  OK           01270300
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01270400
.ZG68A1               AIF   (K'&SKEYREQTYPE LE 0).ZG68A2  OK            01270500
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01270600
.ZG68A2               AIF   (K'&SKEYRANGEEND LE 0).ZG68A3  OK           01270700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01270800
.ZG68A3               AIF   (K'&ZCVAL LE 0).ZG68A4  OK                  01270900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01271000
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           01271100
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01271200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01271300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01271400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01271500
.ZG68A4               ANOP  ,                                           01271600
.*-------------------------------------------------------------------   01271700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01271800
.ZG69                 ANOP  ,                                           01271900
&ZTLC                 SETC 'YES'                                        01272000
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG83         01272100
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01272200
                      AIF   (N'&SKEYCOMPARE LE 1).ZG69A  CK NUM         01272300
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01272400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01272500
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01272600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01272700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01272800
.ZG69A                ANOP  ,                                           01272900
.*----------------------------------------------------------------***   01273000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01273100
                      AIF   (N'&SECONDARYKEY LE 1).ZG71A  CK NUM        01273200
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           01273300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01273400
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01273500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01273600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01273700
.ZG71A                ANOP  ,                                           01273800
.*-------------------------------------------------------------------   01273900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01274000
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01274100
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01274200
                      AIF   (N'&SECONDARYKEY GT 1).ZG71B  MULTI PARMS   01274300
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01274400
.ZG71B                AIF   (K'&SECONDARYKEY(1) GT 0).ZG71C             01274500
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01274600
&ZMS                  SETC  ' '         *KRQDA*                         01274700
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01274800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01274900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01275000
.ZG71C                ANOP  ,                                           01275100
.*-------------------------------------------------------------------   01275200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01275300
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG71R  NOT I/O     01275400
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG71R        01275500
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01275600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                01275700
                      AIF   (K'&ZCGPR GT 2).ZG71Q                       01275800
                      AIF   ('&ZCGPR' EQ '0').ZG71Q                     01275900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01276000
                      AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME   01276100
.ZG71P                ANOP  ,                                           01276200
                      AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC        01276300
                      AIF   ('&ZCGPR' LT '2').ZG71Q                     01276400
                      AIF   ('&ZCGPR' LE '12').ZG71R                    01276500
.ZG71Q                ANOP  ,                                           01276600
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           01276700
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01276800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01276900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01277000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01277100
.ZG71R                ANOP  ,                                           01277200
.*------------------------------------------------------------------    01277300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01277400
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01277500
.*-------------------------------------------------------------------   01277600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01277700
.ZG75                 ANOP  ,                                           01277800
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG75A              01277900
&ZTLC                 SETC 'EQUAL'                                      01278000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG76         01278100
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01278200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG75A  CK NUM         01278300
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01278400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01278500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01278600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01278700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01278800
.ZG75A                ANOP  ,                                           01278900
.*------------------------------------------------------------------    01279000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01279100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01279200
.ZG75A0               AIF   (K'&SKEYRANGEEND LE 0).ZG75A1  OK           01279300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01279400
.ZG75A1               AIF   (K'&ZCVAL LE 0).ZG75A2  OK                  01279500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01279600
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01279700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01279800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01279900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01280000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01280100
.ZG75A2               ANOP  ,                                           01280200
.*-------------------------------------------------------------------   01280300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01280400
.ZG76                 ANOP  ,                                           01280500
&ZTLC                 SETC 'LESSOREQUAL'                                01280600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG77         01280700
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01280800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG76A  CK NUM         01280900
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01281000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01281100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01281200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01281300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01281400
.ZG76A                ANOP  ,                                           01281500
.*------------------------------------------------------------------    01281600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01281700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01281800
.ZG76A0               AIF   (K'&SKEYRANGEEND LE 0).ZG76A1  OK           01281900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01282000
.ZG76A1               AIF   (K'&ZCVAL LE 0).ZG76A2  OK                  01282100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01282200
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01282300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01282400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01282500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01282600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01282700
.ZG76A2               ANOP  ,                                           01282800
.*-------------------------------------------------------------------   01282900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01283000
.ZG77                 ANOP  ,                                           01283100
&ZTLC                 SETC 'GREATEROREQUAL'                             01283200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG78         01283300
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01283400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG77A  CK NUM         01283500
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01283600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01283700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01283800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01283900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01284000
.ZG77A                ANOP  ,                                           01284100
.*------------------------------------------------------------------    01284200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01284300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01284400
.ZG77A0               AIF   (K'&SKEYRANGEEND LE 0).ZG77A1  OK           01284500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01284600
.ZG77A1               AIF   (K'&ZCVAL LE 0).ZG77A2  OK                  01284700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01284800
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01284900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01285000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01285100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01285200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01285300
.ZG77A2               ANOP  ,                                           01285400
.*-------------------------------------------------------------------   01285500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01285600
.ZG78                 ANOP  ,                                           01285700
&ZTLC                 SETC 'RANGE'                                      01285800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG82         01285900
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01286000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG78A  CK NUM         01286100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01286200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01286300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01286400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01286500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01286600
.ZG78A                ANOP  ,                                           01286700
.*----------------------------------------------------------------***   01286800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01286900
                      AIF   (N'&SKEYRANGEEND LE 1).ZG80A  CK NUM        01287000
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           01287100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01287200
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01287300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01287400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01287500
.ZG80A                ANOP  ,                                           01287600
.*-------------------------------------------------------------------   01287700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01287800
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01287900
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01288000
                      AIF   (N'&SKEYRANGEEND GT 1).ZG80B  MULTI PARMS   01288100
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01288200
.ZG80B                AIF   (K'&SKEYRANGEEND(1) GT 0).ZG80C             01288300
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01288400
&ZMS                  SETC  ' '         *KRQDA*                         01288500
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01288600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01288700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01288800
.ZG80C                ANOP  ,                                           01288900
.*-------------------------------------------------------------------   01289000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01289100
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG80R  NOT I/O     01289200
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG80R        01289300
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01289400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                01289500
                      AIF   (K'&ZCGPR GT 2).ZG80Q                       01289600
                      AIF   ('&ZCGPR' EQ '0').ZG80Q                     01289700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01289800
                      AIF   (T'&ZCGPR NE 'N').ZG80Q  INVALID REG NAME   01289900
.ZG80P                ANOP  ,                                           01290000
                      AIF   (T'&ZCGPR NE 'N').ZG80R  NON NUMERIC        01290100
                      AIF   ('&ZCGPR' LT '2').ZG80Q                     01290200
                      AIF   ('&ZCGPR' LE '12').ZG80R                    01290300
.ZG80Q                ANOP  ,                                           01290400
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           01290500
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01290600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01290700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01290800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01290900
.ZG80R                ANOP  ,                                           01291000
.*------------------------------------------------------------------    01291100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01291200
.ZG82                 ANOP  ,                                           01291300
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01291400
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG82E  VALID ARG     01291500
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG82D  OMITTED      01291600
&ZASYSLNDX            SETA  0                                           01291700
.ZG82A                ANOP  ,           POSITIONAL MACRO KEY            01291800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01291900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG82C            01292000
&ZTLC                 SETC 'SKEYREQTYPE'                                01292100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG82A   01292200
.ZG82B                ANOP  ,                                           01292300
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01292400
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      01292500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01292600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01292700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01292800
                      AGO   .ZG82E                                      01292900
.ZG82C                ANOP  ,                                           01293000
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01293100
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           01293200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01293300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01293400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01293500
&ZMS                  SETC  '&ZMS "EQUAL",'                             01293600
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01293700
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01293800
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01293900
                      MNOTE 8,' &ZMS '                                  01294000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01294100
                      AGO   .ZG82E                                      01294200
.ZG82D                ANOP  ,                                           01294300
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01294400
.ZG82E                ANOP  ,                                           01294500
.*------------------------------------------------------------------    01294600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01294700
.ZG83                 ANOP  ,                                           01294800
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01294900
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG83E  VALID ARG     01295000
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG83D  OMITTED      01295100
&ZASYSLNDX            SETA  0                                           01295200
.ZG83A                ANOP  ,           POSITIONAL MACRO KEY            01295300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01295400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG83C            01295500
&ZTLC                 SETC 'SKEYCOMPARE'                                01295600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG83A   01295700
.ZG83B                ANOP  ,                                           01295800
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01295900
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      01296000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01296100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01296200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01296300
                      AGO   .ZG83E                                      01296400
.ZG83C                ANOP  ,                                           01296500
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01296600
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           01296700
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01296800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01296900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01297000
&ZMS                  SETC  '&ZMS "NO"'                                 01297100
&ZMS                  SETC  '&ZMS OR "YES".'                            01297200
                      MNOTE 8,' &ZMS '                                  01297300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01297400
                      AGO   .ZG83E                                      01297500
.ZG83D                ANOP  ,                                           01297600
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01297700
.ZG83E                ANOP  ,                                           01297800
.*-------------------------------------------------------------------   01297900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01298000
.ZG84                 ANOP  ,                                           01298100
&ZTLC                 SETC 'ENTRYID'                                    01298200
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG150            01298300
&XLOCATOR             SETC  'ENTRYID'   SET KEYWORD                     01298400
                      AIF   (N'&LOCATOR LE 1).ZG84A  CK NUM             01298500
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01298600
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01298700
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01298800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01298900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01299000
.ZG84A                ANOP  ,                                           01299100
.*------------------------------------------------------------------    01299200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01299300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01299400
.ZG84A0               AIF   (K'&ENTRYNAME LE 0).ZG84A1  OK              01299500
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01299600
.ZG84A1               AIF   (K'&KEYTYPE LE 0).ZG84A2  OK                01299700
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01299800
.ZG84A2               AIF   (K'&ZCVAL LE 0).ZG84A3  OK                  01299900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01300000
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01300100
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01300200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01300300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01300400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01300500
.ZG84A3               ANOP  ,                                           01300600
.*----------------------------------------------------------------***   01300700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01300800
                      AIF   (N'&ENTRYID LE 1).ZG86A  CK NUM             01300900
&ZMS                  SETC  '"ENTRYID='         *KPOSA* MNOTE           01301000
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01301100
&ZMS                  SETC  '&ZMS "ENTRYID"'                            01301200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01301300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01301400
.ZG86A                ANOP  ,                                           01301500
.*-------------------------------------------------------------------   01301600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01301700
&ZXENTRYID            SETC  'INPUT'     SET IN/OUTPUT                   01301800
&XENTRYID             SETC  '&ENTRYID(1)'       SET XVARIABLE           01301900
                      AIF   (N'&ENTRYID GT 1).ZG86B  MULTI PARMS        01302000
&XENTRYID             SETC  '&ENTRYID'  SET XVARIABLE                   01302100
.ZG86B                AIF   (K'&ENTRYID(1) GT 0).ZG86C                  01302200
&ZXENTRYID            SETC  ''          RESET IN/OUTPUT                 01302300
&ZMS                  SETC  ' '         *KRQDA*                         01302400
&ZMS                  SETC  '&ZMS "ENTRYID" KEY AND ITS'                01302500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01302600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01302700
.ZG86C                ANOP  ,                                           01302800
.*-------------------------------------------------------------------   01302900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01303000
                      AIF   (K'&ZXENTRYID LE 0).ZG86R  NOT I/O          01303100
                      AIF   ('&XENTRYID'(1,1) NE '(').ZG86R             01303200
&ZCGPR                SETC  '&XENTRYID'(2,K'&XENTRYID-2)                01303300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                01303400
                      AIF   (K'&ZCGPR GT 2).ZG86Q                       01303500
                      AIF   ('&ZCGPR' EQ '0').ZG86Q                     01303600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01303700
                      AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME   01303800
.ZG86P                ANOP  ,                                           01303900
                      AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC        01304000
                      AIF   ('&ZCGPR' LT '2').ZG86Q                     01304100
                      AIF   ('&ZCGPR' LE '12').ZG86R                    01304200
.ZG86Q                ANOP  ,                                           01304300
&ZMS                  SETC  '"ENTRYID='         *KGPRA* MNOTE           01304400
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01304500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01304600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01304700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01304800
.ZG86R                ANOP  ,                                           01304900
.*----------------------------------------------------------------***   01305000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01305100
                      AIF   (N'&KEYSCANTYPE LE 1).ZG89A  CK NUM         01305200
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           01305300
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01305400
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01305500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01305600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01305700
.ZG89A                ANOP  ,                                           01305800
.*-------------------------------------------------------------------   01305900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01306000
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01306100
.ZG90A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG91A                     01306200
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01306300
.*-------------------------------------------------------------------   01306400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01306500
.ZG91A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG92A                 01306600
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01306700
.*-------------------------------------------------------------------   01306800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01306900
.ZG92A                AIF   (K'&XKEYSCANTYPE GT 0).ZG92C  KEYWORD       01307000
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG92B              01307100
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           01307200
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01307300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01307400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01307500
&ZMS                  SETC  '&ZMS "ENTRY"'                              01307600
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01307700
                      MNOTE 8,' &ZMS '                                  01307800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01307900
.ZG92B                ANOP  ,                                           01308000
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01308100
.ZG92C                ANOP  ,                                           01308200
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01308300
.*------------------------------------------------------------------    01308400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01308500
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01308600
.*-------------------------------------------------------------------   01308700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01308800
.ZG95                 ANOP  ,                                           01308900
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG95A              01309000
&ZTLC                 SETC 'NO'                                         01309100
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG96         01309200
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     01309300
                      AIF   (N'&LISTCOMPARE LE 1).ZG95A  CK NUM         01309400
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01309500
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01309600
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01309700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01309800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01309900
.ZG95A                ANOP  ,                                           01310000
.*------------------------------------------------------------------    01310100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01310200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01310300
.ZG95A0               AIF   (K'&LISTNUM LE 0).ZG95A1  OK                01310400
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01310500
.ZG95A1               AIF   (K'&AUTHCOMPARE LE 0).ZG95A2  OK            01310600
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     01310700
.ZG95A2               AIF   (K'&AUTHCOMP LE 0).ZG95A3  OK               01310800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01310900
.ZG95A3               AIF   (K'&AUTHCOMPTYPE LE 0).ZG95A4  OK           01311000
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01311100
.ZG95A4               AIF   (K'&ZCVAL LE 0).ZG95A5  OK                  01311200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01311300
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           01311400
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       01311500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01311600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01311700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01311800
.ZG95A5               ANOP  ,                                           01311900
.*-------------------------------------------------------------------   01312000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01312100
.ZG96                 ANOP  ,                                           01312200
&ZTLC                 SETC 'YES'                                        01312300
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG113        01312400
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     01312500
                      AIF   (N'&LISTCOMPARE LE 1).ZG96A  CK NUM         01312600
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01312700
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01312800
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01312900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01313000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01313100
.ZG96A                ANOP  ,                                           01313200
.*----------------------------------------------------------------***   01313300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01313400
                      AIF   (N'&LISTNUM LE 1).ZG98A  CK NUM             01313500
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01313600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01313700
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01313800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01313900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01314000
.ZG98A                ANOP  ,                                           01314100
.*-------------------------------------------------------------------   01314200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01314300
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01314400
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01314500
                      AIF   (N'&LISTNUM GT 1).ZG98B  MULTI PARMS        01314600
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01314700
.ZG98B                AIF   (K'&LISTNUM(1) GT 0).ZG98C                  01314800
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01314900
&ZMS                  SETC  ' '         *KRQDA*                         01315000
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01315100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01315200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01315300
.ZG98C                ANOP  ,                                           01315400
.*-------------------------------------------------------------------   01315500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01315600
                      AIF   (K'&ZXLISTNUM LE 0).ZG98R  NOT I/O          01315700
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG98R             01315800
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01315900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                01316000
                      AIF   (K'&ZCGPR GT 2).ZG98Q                       01316100
                      AIF   ('&ZCGPR' EQ '0').ZG98Q                     01316200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01316300
                      AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME   01316400
.ZG98P                ANOP  ,                                           01316500
                      AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC        01316600
                      AIF   ('&ZCGPR' LT '2').ZG98Q                     01316700
                      AIF   ('&ZCGPR' LE '12').ZG98R                    01316800
.ZG98Q                ANOP  ,                                           01316900
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01317000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01317100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01317200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01317300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01317400
.ZG98R                ANOP  ,                                           01317500
.*------------------------------------------------------------------    01317600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01317700
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01317800
.*-------------------------------------------------------------------   01317900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01318000
.ZG102                ANOP  ,                                           01318100
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG102A             01318200
&ZTLC                 SETC 'NO'                                         01318300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG103        01318400
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01318500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG102A  CK NUM        01318600
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01318700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01318800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01318900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01319000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01319100
.ZG102A               ANOP  ,                                           01319200
.*------------------------------------------------------------------    01319300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01319400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01319500
.ZG102A0              AIF   (K'&AUTHCOMP LE 0).ZG102A1  OK              01319600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01319700
.ZG102A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG102A2  OK          01319800
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01319900
.ZG102A2              AIF   (K'&ZCVAL LE 0).ZG102A3  OK                 01320000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01320100
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01320200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01320300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01320400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01320500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01320600
.ZG102A3              ANOP  ,                                           01320700
.*-------------------------------------------------------------------   01320800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01320900
.ZG103                ANOP  ,                                           01321000
&ZTLC                 SETC 'YES'                                        01321100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG112        01321200
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01321300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG103A  CK NUM        01321400
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01321500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01321600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01321700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01321800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01321900
.ZG103A               ANOP  ,                                           01322000
.*----------------------------------------------------------------***   01322100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01322200
                      AIF   (N'&AUTHCOMP LE 1).ZG105A  CK NUM           01322300
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01322400
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01322500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01322600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01322700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01322800
.ZG105A               ANOP  ,                                           01322900
.*-------------------------------------------------------------------   01323000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01323100
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01323200
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01323300
                      AIF   (N'&AUTHCOMP GT 1).ZG105B  MULTI PARMS      01323400
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01323500
.ZG105B               AIF   (K'&AUTHCOMP(1) GT 0).ZG105C                01323600
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01323700
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          01323800
&ZMS                  SETC  '&ZMS , "AUTHCOMP" KEY AND ITS'             01323900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01324000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01324100
.ZG105C               ANOP  ,                                           01324200
.*-------------------------------------------------------------------   01324300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01324400
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG105R  NOT I/O        01324500
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG105R           01324600
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01324700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG105P               01324800
                      AIF   (K'&ZCGPR GT 2).ZG105Q                      01324900
                      AIF   ('&ZCGPR' EQ '0').ZG105Q                    01325000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01325100
                      AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME  01325200
.ZG105P               ANOP  ,                                           01325300
                      AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC       01325400
                      AIF   ('&ZCGPR' LT '2').ZG105Q                    01325500
                      AIF   ('&ZCGPR' LE '12').ZG105R                   01325600
.ZG105Q               ANOP  ,                                           01325700
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01325800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01325900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01326000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01326100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01326200
.ZG105R               ANOP  ,                                           01326300
.*----------------------------------------------------------------***   01326400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01326500
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG107A  CK NUM       01326600
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01326700
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01326800
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01326900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01327000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01327100
.ZG107A               ANOP  ,                                           01327200
.*-------------------------------------------------------------------   01327300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01327400
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01327500
.ZG108A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG109A                  01327600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01327700
.*-------------------------------------------------------------------   01327800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01327900
.ZG109A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG110A            01328000
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01328100
.*-------------------------------------------------------------------   01328200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01328300
.ZG110A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG110C  KEYWORD     01328400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG110B            01328500
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01328600
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01328700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01328800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01328900
&ZMS                  SETC  '&ZMS "EQUAL"'                              01329000
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01329100
                      MNOTE 8,' &ZMS '                                  01329200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01329300
.ZG110B               ANOP  ,                                           01329400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01329500
.ZG110C               ANOP  ,                                           01329600
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01329700
.*-------------------------------------------------------------------   01329800
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01329900
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG110D  KEY           01330000
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG110D  PARM      01330100
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01330200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01330300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01330400
&ZMS                  SETC  '&ZMS '                                     01330500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01330600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01330700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01330800
.ZG110D               ANOP  ,                                           01330900
.*------------------------------------------------------------------    01331000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01331100
.ZG112                ANOP  ,                                           01331200
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01331300
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG112E  VALID ARG    01331400
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG112D  OMITTED     01331500
&ZASYSLNDX            SETA  0                                           01331600
.ZG112A               ANOP  ,           POSITIONAL MACRO KEY            01331700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01331800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG112C           01331900
&ZTLC                 SETC 'AUTHCOMPARE'                                01332000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG112A  01332100
.ZG112B               ANOP  ,                                           01332200
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01332300
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01332400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01332500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01332600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01332700
                      AGO   .ZG112E                                     01332800
.ZG112C               ANOP  ,                                           01332900
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01333000
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01333100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01333200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01333300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01333400
&ZMS                  SETC  '&ZMS "NO"'                                 01333500
&ZMS                  SETC  '&ZMS OR "YES".'                            01333600
                      MNOTE 8,' &ZMS '                                  01333700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01333800
                      AGO   .ZG112E                                     01333900
.ZG112D               ANOP  ,                                           01334000
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01334100
.ZG112E               ANOP  ,                                           01334200
.*------------------------------------------------------------------    01334300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01334400
.ZG113                ANOP  ,                                           01334500
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01334600
                      AIF   (K'&XLISTCOMPARE GT 0).ZG113E  VALID ARG    01334700
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG113D  OMITTED     01334800
&ZASYSLNDX            SETA  0                                           01334900
.ZG113A               ANOP  ,           POSITIONAL MACRO KEY            01335000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01335100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG113C           01335200
&ZTLC                 SETC 'LISTCOMPARE'                                01335300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG113A  01335400
.ZG113B               ANOP  ,                                           01335500
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01335600
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      01335700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01335800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01335900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01336000
                      AGO   .ZG113E                                     01336100
.ZG113C               ANOP  ,                                           01336200
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01336300
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           01336400
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01336500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01336600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01336700
&ZMS                  SETC  '&ZMS "NO"'                                 01336800
&ZMS                  SETC  '&ZMS OR "YES".'                            01336900
                      MNOTE 8,' &ZMS '                                  01337000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01337100
                      AGO   .ZG113E                                     01337200
.ZG113D               ANOP  ,                                           01337300
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01337400
.ZG113E               ANOP  ,                                           01337500
.*------------------------------------------------------------------    01337600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01337700
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01337800
.*-------------------------------------------------------------------   01337900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01338000
.ZG116                ANOP  ,                                           01338100
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG116A              01338200
&ZTLC                 SETC 'NO'                                         01338300
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG117         01338400
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01338500
                      AIF   (N'&KEYCOMPARE LE 1).ZG116A  CK NUM         01338600
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01338700
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01338800
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01338900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01339000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01339100
.ZG116A               ANOP  ,                                           01339200
.*------------------------------------------------------------------    01339300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01339400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01339500
.ZG116A0              AIF   (K'&ENTRYKEY LE 0).ZG116A1  OK              01339600
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01339700
.ZG116A1              AIF   (K'&KEYREQTYPE LE 0).ZG116A2  OK            01339800
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01339900
.ZG116A2              AIF   (K'&KEYRANGEEND LE 0).ZG116A3  OK           01340000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01340100
.ZG116A3              AIF   (K'&ZCVAL LE 0).ZG116A4  OK                 01340200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01340300
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           01340400
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01340500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01340600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01340700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01340800
.ZG116A4              ANOP  ,                                           01340900
.*-------------------------------------------------------------------   01341000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01341100
.ZG117                ANOP  ,                                           01341200
&ZTLC                 SETC 'YES'                                        01341300
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG131         01341400
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01341500
                      AIF   (N'&KEYCOMPARE LE 1).ZG117A  CK NUM         01341600
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01341700
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01341800
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01341900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01342000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01342100
.ZG117A               ANOP  ,                                           01342200
.*----------------------------------------------------------------***   01342300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01342400
                      AIF   (N'&ENTRYKEY LE 1).ZG119A  CK NUM           01342500
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           01342600
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01342700
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01342800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01342900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01343000
.ZG119A               ANOP  ,                                           01343100
.*-------------------------------------------------------------------   01343200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01343300
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01343400
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01343500
                      AIF   (N'&ENTRYKEY GT 1).ZG119B  MULTI PARMS      01343600
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01343700
.ZG119B               AIF   (K'&ENTRYKEY(1) GT 0).ZG119C                01343800
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01343900
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          01344000
&ZMS                  SETC  '&ZMS , "ENTRYKEY" KEY AND ITS'             01344100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01344200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01344300
.ZG119C               ANOP  ,                                           01344400
.*-------------------------------------------------------------------   01344500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01344600
                      AIF   (K'&ZXENTRYKEY LE 0).ZG119R  NOT I/O        01344700
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG119R           01344800
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01344900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG119P               01345000
                      AIF   (K'&ZCGPR GT 2).ZG119Q                      01345100
                      AIF   ('&ZCGPR' EQ '0').ZG119Q                    01345200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01345300
                      AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME  01345400
.ZG119P               ANOP  ,                                           01345500
                      AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC       01345600
                      AIF   ('&ZCGPR' LT '2').ZG119Q                    01345700
                      AIF   ('&ZCGPR' LE '12').ZG119R                   01345800
.ZG119Q               ANOP  ,                                           01345900
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           01346000
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01346100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01346200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01346300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01346400
.ZG119R               ANOP  ,                                           01346500
.*------------------------------------------------------------------    01346600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01346700
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01346800
.*-------------------------------------------------------------------   01346900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01347000
.ZG123                ANOP  ,                                           01347100
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG123A              01347200
&ZTLC                 SETC 'EQUAL'                                      01347300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG124         01347400
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01347500
                      AIF   (N'&KEYREQTYPE LE 1).ZG123A  CK NUM         01347600
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01347700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01347800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01347900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01348000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01348100
.ZG123A               ANOP  ,                                           01348200
.*------------------------------------------------------------------    01348300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01348400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01348500
.ZG123A0              AIF   (K'&KEYRANGEEND LE 0).ZG123A1  OK           01348600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01348700
.ZG123A1              AIF   (K'&ZCVAL LE 0).ZG123A2  OK                 01348800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01348900
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01349000
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01349100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01349200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01349300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01349400
.ZG123A2              ANOP  ,                                           01349500
.*-------------------------------------------------------------------   01349600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01349700
.ZG124                ANOP  ,                                           01349800
&ZTLC                 SETC 'LESSOREQUAL'                                01349900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG125         01350000
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01350100
                      AIF   (N'&KEYREQTYPE LE 1).ZG124A  CK NUM         01350200
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01350300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01350400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01350500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01350600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01350700
.ZG124A               ANOP  ,                                           01350800
.*------------------------------------------------------------------    01350900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01351000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01351100
.ZG124A0              AIF   (K'&KEYRANGEEND LE 0).ZG124A1  OK           01351200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01351300
.ZG124A1              AIF   (K'&ZCVAL LE 0).ZG124A2  OK                 01351400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01351500
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01351600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01351700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01351800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01351900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01352000
.ZG124A2              ANOP  ,                                           01352100
.*-------------------------------------------------------------------   01352200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01352300
.ZG125                ANOP  ,                                           01352400
&ZTLC                 SETC 'GREATEROREQUAL'                             01352500
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG126         01352600
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01352700
                      AIF   (N'&KEYREQTYPE LE 1).ZG125A  CK NUM         01352800
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01352900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01353000
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01353100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01353200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01353300
.ZG125A               ANOP  ,                                           01353400
.*------------------------------------------------------------------    01353500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01353600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01353700
.ZG125A0              AIF   (K'&KEYRANGEEND LE 0).ZG125A1  OK           01353800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01353900
.ZG125A1              AIF   (K'&ZCVAL LE 0).ZG125A2  OK                 01354000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01354100
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01354200
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01354300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01354400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01354500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01354600
.ZG125A2              ANOP  ,                                           01354700
.*-------------------------------------------------------------------   01354800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01354900
.ZG126                ANOP  ,                                           01355000
&ZTLC                 SETC 'RANGE'                                      01355100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG130         01355200
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01355300
                      AIF   (N'&KEYREQTYPE LE 1).ZG126A  CK NUM         01355400
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01355500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01355600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01355700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01355800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01355900
.ZG126A               ANOP  ,                                           01356000
.*----------------------------------------------------------------***   01356100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01356200
                      AIF   (N'&KEYRANGEEND LE 1).ZG128A  CK NUM        01356300
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           01356400
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01356500
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01356600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01356700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01356800
.ZG128A               ANOP  ,                                           01356900
.*-------------------------------------------------------------------   01357000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01357100
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01357200
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01357300
                      AIF   (N'&KEYRANGEEND GT 1).ZG128B  MULTI PARMS   01357400
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01357500
.ZG128B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG128C             01357600
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01357700
&ZMS                  SETC  'WHEN "RANGE" IS SPECIFIED'  *KRQDA*        01357800
&ZMS                  SETC  '&ZMS , "KEYRANGEEND" KEY AND ITS'          01357900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01358000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01358100
.ZG128C               ANOP  ,                                           01358200
.*-------------------------------------------------------------------   01358300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01358400
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG128R  NOT I/O     01358500
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG128R        01358600
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01358700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG128P               01358800
                      AIF   (K'&ZCGPR GT 2).ZG128Q                      01358900
                      AIF   ('&ZCGPR' EQ '0').ZG128Q                    01359000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01359100
                      AIF   (T'&ZCGPR NE 'N').ZG128Q  INVALID REG NAME  01359200
.ZG128P               ANOP  ,                                           01359300
                      AIF   (T'&ZCGPR NE 'N').ZG128R  NON NUMERIC       01359400
                      AIF   ('&ZCGPR' LT '2').ZG128Q                    01359500
                      AIF   ('&ZCGPR' LE '12').ZG128R                   01359600
.ZG128Q               ANOP  ,                                           01359700
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           01359800
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01359900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01360000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01360100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01360200
.ZG128R               ANOP  ,                                           01360300
.*------------------------------------------------------------------    01360400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01360500
.ZG130                ANOP  ,                                           01360600
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01360700
                      AIF   (K'&XKEYREQTYPE GT 0).ZG130E  VALID ARG     01360800
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG130D  OMITTED      01360900
&ZASYSLNDX            SETA  0                                           01361000
.ZG130A               ANOP  ,           POSITIONAL MACRO KEY            01361100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01361200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG130C           01361300
&ZTLC                 SETC 'KEYREQTYPE'                                 01361400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG130A  01361500
.ZG130B               ANOP  ,                                           01361600
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01361700
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       01361800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01361900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01362000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01362100
                      AGO   .ZG130E                                     01362200
.ZG130C               ANOP  ,                                           01362300
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01362400
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           01362500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01362600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01362700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01362800
&ZMS                  SETC  '&ZMS "EQUAL",'                             01362900
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01363000
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01363100
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01363200
                      MNOTE 8,' &ZMS '                                  01363300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01363400
                      AGO   .ZG130E                                     01363500
.ZG130D               ANOP  ,                                           01363600
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01363700
.ZG130E               ANOP  ,                                           01363800
.*------------------------------------------------------------------    01363900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01364000
.ZG131                ANOP  ,                                           01364100
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01364200
                      AIF   (K'&XKEYCOMPARE GT 0).ZG131E  VALID ARG     01364300
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG131D  OMITTED      01364400
&ZASYSLNDX            SETA  0                                           01364500
.ZG131A               ANOP  ,           POSITIONAL MACRO KEY            01364600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01364700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG131C           01364800
&ZTLC                 SETC 'KEYCOMPARE'                                 01364900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG131A  01365000
.ZG131B               ANOP  ,                                           01365100
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01365200
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       01365300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01365400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01365500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01365600
                      AGO   .ZG131E                                     01365700
.ZG131C               ANOP  ,                                           01365800
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01365900
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           01366000
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01366100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01366200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01366300
&ZMS                  SETC  '&ZMS "NO"'                                 01366400
&ZMS                  SETC  '&ZMS OR "YES".'                            01366500
                      MNOTE 8,' &ZMS '                                  01366600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01366700
                      AGO   .ZG131E                                     01366800
.ZG131D               ANOP  ,                                           01366900
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01367000
.ZG131E               ANOP  ,                                           01367100
.*------------------------------------------------------------------    01367200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01367300
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01367400
.*-------------------------------------------------------------------   01367500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01367600
.ZG134                ANOP  ,                                           01367700
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG134A             01367800
&ZTLC                 SETC 'NO'                                         01367900
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG135        01368000
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01368100
                      AIF   (N'&SKEYCOMPARE LE 1).ZG134A  CK NUM        01368200
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01368300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01368400
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01368500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01368600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01368700
.ZG134A               ANOP  ,                                           01368800
.*------------------------------------------------------------------    01368900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01369000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01369100
.ZG134A0              AIF   (K'&SECONDARYKEY LE 0).ZG134A1  OK          01369200
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01369300
.ZG134A1              AIF   (K'&SKEYREQTYPE LE 0).ZG134A2  OK           01369400
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01369500
.ZG134A2              AIF   (K'&SKEYRANGEEND LE 0).ZG134A3  OK          01369600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01369700
.ZG134A3              AIF   (K'&ZCVAL LE 0).ZG134A4  OK                 01369800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01369900
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           01370000
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01370100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01370200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01370300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01370400
.ZG134A4              ANOP  ,                                           01370500
.*-------------------------------------------------------------------   01370600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01370700
.ZG135                ANOP  ,                                           01370800
&ZTLC                 SETC 'YES'                                        01370900
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG149        01371000
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01371100
                      AIF   (N'&SKEYCOMPARE LE 1).ZG135A  CK NUM        01371200
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01371300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01371400
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01371500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01371600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01371700
.ZG135A               ANOP  ,                                           01371800
.*----------------------------------------------------------------***   01371900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01372000
                      AIF   (N'&SECONDARYKEY LE 1).ZG137A  CK NUM       01372100
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           01372200
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01372300
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01372400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01372500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01372600
.ZG137A               ANOP  ,                                           01372700
.*-------------------------------------------------------------------   01372800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01372900
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01373000
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01373100
                      AIF   (N'&SECONDARYKEY GT 1).ZG137B  MULTI PARMS  01373200
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01373300
.ZG137B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG137C            01373400
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01373500
&ZMS                  SETC  ' '         *KRQDA*                         01373600
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01373700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01373800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01373900
.ZG137C               ANOP  ,                                           01374000
.*-------------------------------------------------------------------   01374100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01374200
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG137R  NOT I/O    01374300
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG137R       01374400
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01374500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG137P               01374600
                      AIF   (K'&ZCGPR GT 2).ZG137Q                      01374700
                      AIF   ('&ZCGPR' EQ '0').ZG137Q                    01374800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01374900
                      AIF   (T'&ZCGPR NE 'N').ZG137Q  INVALID REG NAME  01375000
.ZG137P               ANOP  ,                                           01375100
                      AIF   (T'&ZCGPR NE 'N').ZG137R  NON NUMERIC       01375200
                      AIF   ('&ZCGPR' LT '2').ZG137Q                    01375300
                      AIF   ('&ZCGPR' LE '12').ZG137R                   01375400
.ZG137Q               ANOP  ,                                           01375500
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           01375600
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01375700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01375800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01375900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01376000
.ZG137R               ANOP  ,                                           01376100
.*------------------------------------------------------------------    01376200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01376300
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01376400
.*-------------------------------------------------------------------   01376500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01376600
.ZG141                ANOP  ,                                           01376700
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG141A             01376800
&ZTLC                 SETC 'EQUAL'                                      01376900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG142        01377000
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01377100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG141A  CK NUM        01377200
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01377300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01377400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01377500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01377600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01377700
.ZG141A               ANOP  ,                                           01377800
.*------------------------------------------------------------------    01377900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01378000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01378100
.ZG141A0              AIF   (K'&SKEYRANGEEND LE 0).ZG141A1  OK          01378200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01378300
.ZG141A1              AIF   (K'&ZCVAL LE 0).ZG141A2  OK                 01378400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01378500
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01378600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01378700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01378800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01378900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01379000
.ZG141A2              ANOP  ,                                           01379100
.*-------------------------------------------------------------------   01379200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01379300
.ZG142                ANOP  ,                                           01379400
&ZTLC                 SETC 'LESSOREQUAL'                                01379500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG143        01379600
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01379700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG142A  CK NUM        01379800
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01379900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01380000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01380100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01380200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01380300
.ZG142A               ANOP  ,                                           01380400
.*------------------------------------------------------------------    01380500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01380600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01380700
.ZG142A0              AIF   (K'&SKEYRANGEEND LE 0).ZG142A1  OK          01380800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01380900
.ZG142A1              AIF   (K'&ZCVAL LE 0).ZG142A2  OK                 01381000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01381100
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01381200
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01381300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01381400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01381500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01381600
.ZG142A2              ANOP  ,                                           01381700
.*-------------------------------------------------------------------   01381800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01381900
.ZG143                ANOP  ,                                           01382000
&ZTLC                 SETC 'GREATEROREQUAL'                             01382100
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG144        01382200
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01382300
                      AIF   (N'&SKEYREQTYPE LE 1).ZG143A  CK NUM        01382400
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01382500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01382600
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01382700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01382800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01382900
.ZG143A               ANOP  ,                                           01383000
.*------------------------------------------------------------------    01383100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01383200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01383300
.ZG143A0              AIF   (K'&SKEYRANGEEND LE 0).ZG143A1  OK          01383400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01383500
.ZG143A1              AIF   (K'&ZCVAL LE 0).ZG143A2  OK                 01383600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01383700
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01383800
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01383900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01384000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01384100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01384200
.ZG143A2              ANOP  ,                                           01384300
.*-------------------------------------------------------------------   01384400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01384500
.ZG144                ANOP  ,                                           01384600
&ZTLC                 SETC 'RANGE'                                      01384700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG148        01384800
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01384900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG144A  CK NUM        01385000
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01385100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01385200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01385300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01385400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01385500
.ZG144A               ANOP  ,                                           01385600
.*----------------------------------------------------------------***   01385700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01385800
                      AIF   (N'&SKEYRANGEEND LE 1).ZG146A  CK NUM       01385900
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           01386000
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01386100
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01386200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01386300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01386400
.ZG146A               ANOP  ,                                           01386500
.*-------------------------------------------------------------------   01386600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01386700
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01386800
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01386900
                      AIF   (N'&SKEYRANGEEND GT 1).ZG146B  MULTI PARMS  01387000
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01387100
.ZG146B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG146C            01387200
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01387300
&ZMS                  SETC  ' '         *KRQDA*                         01387400
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01387500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01387600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01387700
.ZG146C               ANOP  ,                                           01387800
.*-------------------------------------------------------------------   01387900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01388000
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG146R  NOT I/O    01388100
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG146R       01388200
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01388300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG146P               01388400
                      AIF   (K'&ZCGPR GT 2).ZG146Q                      01388500
                      AIF   ('&ZCGPR' EQ '0').ZG146Q                    01388600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01388700
                      AIF   (T'&ZCGPR NE 'N').ZG146Q  INVALID REG NAME  01388800
.ZG146P               ANOP  ,                                           01388900
                      AIF   (T'&ZCGPR NE 'N').ZG146R  NON NUMERIC       01389000
                      AIF   ('&ZCGPR' LT '2').ZG146Q                    01389100
                      AIF   ('&ZCGPR' LE '12').ZG146R                   01389200
.ZG146Q               ANOP  ,                                           01389300
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           01389400
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01389500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01389600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01389700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01389800
.ZG146R               ANOP  ,                                           01389900
.*------------------------------------------------------------------    01390000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01390100
.ZG148                ANOP  ,                                           01390200
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01390300
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG148E  VALID ARG    01390400
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG148D  OMITTED     01390500
&ZASYSLNDX            SETA  0                                           01390600
.ZG148A               ANOP  ,           POSITIONAL MACRO KEY            01390700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01390800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG148C           01390900
&ZTLC                 SETC 'SKEYREQTYPE'                                01391000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG148A  01391100
.ZG148B               ANOP  ,                                           01391200
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01391300
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      01391400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01391500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01391600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01391700
                      AGO   .ZG148E                                     01391800
.ZG148C               ANOP  ,                                           01391900
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01392000
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           01392100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01392200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01392300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01392400
&ZMS                  SETC  '&ZMS "EQUAL",'                             01392500
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01392600
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01392700
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01392800
                      MNOTE 8,' &ZMS '                                  01392900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01393000
                      AGO   .ZG148E                                     01393100
.ZG148D               ANOP  ,                                           01393200
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01393300
.ZG148E               ANOP  ,                                           01393400
.*------------------------------------------------------------------    01393500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01393600
.ZG149                ANOP  ,                                           01393700
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01393800
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG149E  VALID ARG    01393900
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG149D  OMITTED     01394000
&ZASYSLNDX            SETA  0                                           01394100
.ZG149A               ANOP  ,           POSITIONAL MACRO KEY            01394200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01394300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG149C           01394400
&ZTLC                 SETC 'SKEYCOMPARE'                                01394500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG149A  01394600
.ZG149B               ANOP  ,                                           01394700
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01394800
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      01394900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01395000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01395100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01395200
                      AGO   .ZG149E                                     01395300
.ZG149C               ANOP  ,                                           01395400
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01395500
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           01395600
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01395700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01395800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01395900
&ZMS                  SETC  '&ZMS "NO"'                                 01396000
&ZMS                  SETC  '&ZMS OR "YES".'                            01396100
                      MNOTE 8,' &ZMS '                                  01396200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01396300
                      AGO   .ZG149E                                     01396400
.ZG149D               ANOP  ,                                           01396500
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01396600
.ZG149E               ANOP  ,                                           01396700
.*-------------------------------------------------------------------   01396800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01396900
.ZG150                ANOP  ,                                           01397000
&ZTLC                 SETC 'ENTRYNAME'                                  01397100
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG175            01397200
&XLOCATOR             SETC  'ENTRYNAME'         SET KEYWORD             01397300
                      AIF   (N'&LOCATOR LE 1).ZG150A  CK NUM            01397400
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01397500
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01397600
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01397700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01397800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01397900
.ZG150A               ANOP  ,                                           01398000
.*------------------------------------------------------------------    01398100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01398200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01398300
.ZG150A0              AIF   (K'&KEYSCANTYPE LE 0).ZG150A1  OK           01398400
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     01398500
.ZG150A1              AIF   (K'&KEYCOMPARE LE 0).ZG150A2  OK            01398600
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      01398700
.ZG150A2              AIF   (K'&ENTRYKEY LE 0).ZG150A3  OK              01398800
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01398900
.ZG150A3              AIF   (K'&KEYREQTYPE LE 0).ZG150A4  OK            01399000
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01399100
.ZG150A4              AIF   (K'&KEYRANGEEND LE 0).ZG150A5  OK           01399200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01399300
.ZG150A5              AIF   (K'&SKEYCOMPARE LE 0).ZG150A6  OK           01399400
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     01399500
.ZG150A6              AIF   (K'&SECONDARYKEY LE 0).ZG150A7  OK          01399600
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01399700
.ZG150A7              AIF   (K'&SKEYREQTYPE LE 0).ZG150A8  OK           01399800
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01399900
.ZG150A8              AIF   (K'&SKEYRANGEEND LE 0).ZG150A9  OK          01400000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01400100
.ZG150A9              AIF   (K'&ENTRYID LE 0).ZG150A10  OK              01400200
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01400300
.ZG150A10             AIF   (K'&KEYTYPE LE 0).ZG150A11  OK              01400400
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01400500
.ZG150A11             AIF   (K'&ZCVAL LE 0).ZG150A12  OK                01400600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01400700
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01400800
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01400900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01401000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01401100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01401200
.ZG150A12             ANOP  ,                                           01401300
.*----------------------------------------------------------------***   01401400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01401500
                      AIF   (N'&ENTRYNAME LE 1).ZG152A  CK NUM          01401600
&ZMS                  SETC  '"ENTRYNAME='       *KPOSA* MNOTE           01401700
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          01401800
&ZMS                  SETC  '&ZMS "ENTRYNAME"'                          01401900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01402000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01402100
.ZG152A               ANOP  ,                                           01402200
.*-------------------------------------------------------------------   01402300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01402400
&ZXENTRYNAME          SETC  'INPUT'     SET IN/OUTPUT                   01402500
&XENTRYNAME           SETC  '&ENTRYNAME(1)'     SET XVARIABLE           01402600
                      AIF   (N'&ENTRYNAME GT 1).ZG152B  MULTI PARMS     01402700
&XENTRYNAME           SETC  '&ENTRYNAME'        SET XVARIABLE           01402800
.ZG152B               AIF   (K'&ENTRYNAME(1) GT 0).ZG152C               01402900
&ZXENTRYNAME          SETC  ''          RESET IN/OUTPUT                 01403000
&ZMS                  SETC  ' '         *KRQDA*                         01403100
&ZMS                  SETC  '&ZMS "ENTRYNAME" KEY AND ITS'              01403200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01403300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01403400
.ZG152C               ANOP  ,                                           01403500
.*-------------------------------------------------------------------   01403600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01403700
                      AIF   (K'&ZXENTRYNAME LE 0).ZG152R  NOT I/O       01403800
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZG152R          01403900
&ZCGPR                SETC  '&XENTRYNAME'(2,K'&XENTRYNAME-2)            01404000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG152P               01404100
                      AIF   (K'&ZCGPR GT 2).ZG152Q                      01404200
                      AIF   ('&ZCGPR' EQ '0').ZG152Q                    01404300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01404400
                      AIF   (T'&ZCGPR NE 'N').ZG152Q  INVALID REG NAME  01404500
.ZG152P               ANOP  ,                                           01404600
                      AIF   (T'&ZCGPR NE 'N').ZG152R  NON NUMERIC       01404700
                      AIF   ('&ZCGPR' LT '2').ZG152Q                    01404800
                      AIF   ('&ZCGPR' LE '12').ZG152R                   01404900
.ZG152Q               ANOP  ,                                           01405000
&ZMS                  SETC  '"ENTRYNAME='       *KGPRA* MNOTE           01405100
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          01405200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01405300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01405400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01405500
.ZG152R               ANOP  ,                                           01405600
.*------------------------------------------------------------------    01405700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01405800
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01405900
.*-------------------------------------------------------------------   01406000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01406100
.ZG156                ANOP  ,                                           01406200
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG156A             01406300
&ZTLC                 SETC 'NO'                                         01406400
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG157        01406500
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     01406600
                      AIF   (N'&LISTCOMPARE LE 1).ZG156A  CK NUM        01406700
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01406800
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01406900
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01407000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01407100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01407200
.ZG156A               ANOP  ,                                           01407300
.*------------------------------------------------------------------    01407400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01407500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01407600
.ZG156A0              AIF   (K'&LISTNUM LE 0).ZG156A1  OK               01407700
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01407800
.ZG156A1              AIF   (K'&AUTHCOMPARE LE 0).ZG156A2  OK           01407900
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     01408000
.ZG156A2              AIF   (K'&AUTHCOMP LE 0).ZG156A3  OK              01408100
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01408200
.ZG156A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG156A4  OK          01408300
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01408400
.ZG156A4              AIF   (K'&ZCVAL LE 0).ZG156A5  OK                 01408500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01408600
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           01408700
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       01408800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01408900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01409000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01409100
.ZG156A5              ANOP  ,                                           01409200
.*-------------------------------------------------------------------   01409300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01409400
.ZG157                ANOP  ,                                           01409500
&ZTLC                 SETC 'YES'                                        01409600
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG174        01409700
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     01409800
                      AIF   (N'&LISTCOMPARE LE 1).ZG157A  CK NUM        01409900
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01410000
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01410100
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01410200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01410300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01410400
.ZG157A               ANOP  ,                                           01410500
.*----------------------------------------------------------------***   01410600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01410700
                      AIF   (N'&LISTNUM LE 1).ZG159A  CK NUM            01410800
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01410900
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01411000
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01411100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01411200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01411300
.ZG159A               ANOP  ,                                           01411400
.*-------------------------------------------------------------------   01411500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01411600
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01411700
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01411800
                      AIF   (N'&LISTNUM GT 1).ZG159B  MULTI PARMS       01411900
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01412000
.ZG159B               AIF   (K'&LISTNUM(1) GT 0).ZG159C                 01412100
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01412200
&ZMS                  SETC  ' '         *KRQDA*                         01412300
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01412400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01412500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01412600
.ZG159C               ANOP  ,                                           01412700
.*-------------------------------------------------------------------   01412800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01412900
                      AIF   (K'&ZXLISTNUM LE 0).ZG159R  NOT I/O         01413000
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG159R            01413100
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01413200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG159P               01413300
                      AIF   (K'&ZCGPR GT 2).ZG159Q                      01413400
                      AIF   ('&ZCGPR' EQ '0').ZG159Q                    01413500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01413600
                      AIF   (T'&ZCGPR NE 'N').ZG159Q  INVALID REG NAME  01413700
.ZG159P               ANOP  ,                                           01413800
                      AIF   (T'&ZCGPR NE 'N').ZG159R  NON NUMERIC       01413900
                      AIF   ('&ZCGPR' LT '2').ZG159Q                    01414000
                      AIF   ('&ZCGPR' LE '12').ZG159R                   01414100
.ZG159Q               ANOP  ,                                           01414200
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01414300
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01414400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01414500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01414600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01414700
.ZG159R               ANOP  ,                                           01414800
.*------------------------------------------------------------------    01414900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01415000
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01415100
.*-------------------------------------------------------------------   01415200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01415300
.ZG163                ANOP  ,                                           01415400
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG163A             01415500
&ZTLC                 SETC 'NO'                                         01415600
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG164        01415700
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01415800
                      AIF   (N'&AUTHCOMPARE LE 1).ZG163A  CK NUM        01415900
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01416000
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01416100
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01416200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01416300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01416400
.ZG163A               ANOP  ,                                           01416500
.*------------------------------------------------------------------    01416600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01416700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01416800
.ZG163A0              AIF   (K'&AUTHCOMP LE 0).ZG163A1  OK              01416900
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01417000
.ZG163A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG163A2  OK          01417100
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01417200
.ZG163A2              AIF   (K'&ZCVAL LE 0).ZG163A3  OK                 01417300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01417400
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01417500
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01417600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01417700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01417800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01417900
.ZG163A3              ANOP  ,                                           01418000
.*-------------------------------------------------------------------   01418100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01418200
.ZG164                ANOP  ,                                           01418300
&ZTLC                 SETC 'YES'                                        01418400
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG173        01418500
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01418600
                      AIF   (N'&AUTHCOMPARE LE 1).ZG164A  CK NUM        01418700
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01418800
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01418900
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01419000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01419100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01419200
.ZG164A               ANOP  ,                                           01419300
.*----------------------------------------------------------------***   01419400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01419500
                      AIF   (N'&AUTHCOMP LE 1).ZG166A  CK NUM           01419600
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01419700
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01419800
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01419900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01420000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01420100
.ZG166A               ANOP  ,                                           01420200
.*-------------------------------------------------------------------   01420300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01420400
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01420500
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01420600
                      AIF   (N'&AUTHCOMP GT 1).ZG166B  MULTI PARMS      01420700
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01420800
.ZG166B               AIF   (K'&AUTHCOMP(1) GT 0).ZG166C                01420900
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01421000
&ZMS                  SETC  ' '         *KRQDA*                         01421100
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01421200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01421300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01421400
.ZG166C               ANOP  ,                                           01421500
.*-------------------------------------------------------------------   01421600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01421700
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG166R  NOT I/O        01421800
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG166R           01421900
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01422000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG166P               01422100
                      AIF   (K'&ZCGPR GT 2).ZG166Q                      01422200
                      AIF   ('&ZCGPR' EQ '0').ZG166Q                    01422300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01422400
                      AIF   (T'&ZCGPR NE 'N').ZG166Q  INVALID REG NAME  01422500
.ZG166P               ANOP  ,                                           01422600
                      AIF   (T'&ZCGPR NE 'N').ZG166R  NON NUMERIC       01422700
                      AIF   ('&ZCGPR' LT '2').ZG166Q                    01422800
                      AIF   ('&ZCGPR' LE '12').ZG166R                   01422900
.ZG166Q               ANOP  ,                                           01423000
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01423100
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01423200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01423300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01423400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01423500
.ZG166R               ANOP  ,                                           01423600
.*----------------------------------------------------------------***   01423700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01423800
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG168A  CK NUM       01423900
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01424000
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01424100
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01424200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01424300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01424400
.ZG168A               ANOP  ,                                           01424500
.*-------------------------------------------------------------------   01424600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01424700
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01424800
.ZG169A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG170A                  01424900
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01425000
.*-------------------------------------------------------------------   01425100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01425200
.ZG170A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG171A            01425300
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01425400
.*-------------------------------------------------------------------   01425500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01425600
.ZG171A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG171C  KEYWORD     01425700
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG171B            01425800
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01425900
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01426000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01426100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01426200
&ZMS                  SETC  '&ZMS "EQUAL"'                              01426300
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01426400
                      MNOTE 8,' &ZMS '                                  01426500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01426600
.ZG171B               ANOP  ,                                           01426700
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01426800
.ZG171C               ANOP  ,                                           01426900
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01427000
.*-------------------------------------------------------------------   01427100
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01427200
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG171D  KEY           01427300
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG171D  PARM      01427400
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01427500
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01427600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01427700
&ZMS                  SETC  '&ZMS '                                     01427800
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01427900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01428000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01428100
.ZG171D               ANOP  ,                                           01428200
.*------------------------------------------------------------------    01428300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01428400
.ZG173                ANOP  ,                                           01428500
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01428600
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG173E  VALID ARG    01428700
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG173D  OMITTED     01428800
&ZASYSLNDX            SETA  0                                           01428900
.ZG173A               ANOP  ,           POSITIONAL MACRO KEY            01429000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01429100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG173C           01429200
&ZTLC                 SETC 'AUTHCOMPARE'                                01429300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG173A  01429400
.ZG173B               ANOP  ,                                           01429500
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01429600
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01429700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01429800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01429900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01430000
                      AGO   .ZG173E                                     01430100
.ZG173C               ANOP  ,                                           01430200
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01430300
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01430400
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01430500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01430600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01430700
&ZMS                  SETC  '&ZMS "NO"'                                 01430800
&ZMS                  SETC  '&ZMS OR "YES".'                            01430900
                      MNOTE 8,' &ZMS '                                  01431000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01431100
                      AGO   .ZG173E                                     01431200
.ZG173D               ANOP  ,                                           01431300
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01431400
.ZG173E               ANOP  ,                                           01431500
.*------------------------------------------------------------------    01431600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01431700
.ZG174                ANOP  ,                                           01431800
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01431900
                      AIF   (K'&XLISTCOMPARE GT 0).ZG174E  VALID ARG    01432000
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG174D  OMITTED     01432100
&ZASYSLNDX            SETA  0                                           01432200
.ZG174A               ANOP  ,           POSITIONAL MACRO KEY            01432300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01432400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG174C           01432500
&ZTLC                 SETC 'LISTCOMPARE'                                01432600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG174A  01432700
.ZG174B               ANOP  ,                                           01432800
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01432900
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      01433000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01433100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01433200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01433300
                      AGO   .ZG174E                                     01433400
.ZG174C               ANOP  ,                                           01433500
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01433600
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           01433700
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01433800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01433900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01434000
&ZMS                  SETC  '&ZMS "NO"'                                 01434100
&ZMS                  SETC  '&ZMS OR "YES".'                            01434200
                      MNOTE 8,' &ZMS '                                  01434300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01434400
                      AGO   .ZG174E                                     01434500
.ZG174D               ANOP  ,                                           01434600
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01434700
.ZG174E               ANOP  ,                                           01434800
.*-------------------------------------------------------------------   01434900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01435000
.ZG175                ANOP  ,                                           01435100
&ZTLC                 SETC 'UNKEYPOS'                                   01435200
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG233            01435300
&XLOCATOR             SETC  'UNKEYPOS'  SET KEYWORD                     01435400
                      AIF   (N'&LOCATOR LE 1).ZG175A  CK NUM            01435500
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01435600
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01435700
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01435800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01435900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01436000
.ZG175A               ANOP  ,                                           01436100
.*------------------------------------------------------------------    01436200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01436300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01436400
.ZG175A0              AIF   (K'&ENTRYID LE 0).ZG175A1  OK               01436500
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01436600
.ZG175A1              AIF   (K'&LISTCOMPARE LE 0).ZG175A2  OK           01436700
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01436800
.ZG175A2              AIF   (K'&ENTRYNAME LE 0).ZG175A3  OK             01436900
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01437000
.ZG175A3              AIF   (K'&KEYTYPE LE 0).ZG175A4  OK               01437100
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01437200
.ZG175A4              AIF   (K'&ZCVAL LE 0).ZG175A5  OK                 01437300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01437400
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01437500
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01437600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01437700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01437800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01437900
.ZG175A5              ANOP  ,                                           01438000
.*----------------------------------------------------------------***   01438100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01438200
                      AIF   (N'&LISTNUM LE 1).ZG177A  CK NUM            01438300
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01438400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01438500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01438600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01438700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01438800
.ZG177A               ANOP  ,                                           01438900
.*-------------------------------------------------------------------   01439000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01439100
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01439200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01439300
                      AIF   (N'&LISTNUM GT 1).ZG177B  MULTI PARMS       01439400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01439500
.ZG177B               AIF   (K'&LISTNUM(1) GT 0).ZG177C                 01439600
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01439700
&ZMS                  SETC  ' '         *KRQDA*                         01439800
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01439900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01440000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01440100
.ZG177C               ANOP  ,                                           01440200
.*-------------------------------------------------------------------   01440300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01440400
                      AIF   (K'&ZXLISTNUM LE 0).ZG177R  NOT I/O         01440500
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG177R            01440600
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01440700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG177P               01440800
                      AIF   (K'&ZCGPR GT 2).ZG177Q                      01440900
                      AIF   ('&ZCGPR' EQ '0').ZG177Q                    01441000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01441100
                      AIF   (T'&ZCGPR NE 'N').ZG177Q  INVALID REG NAME  01441200
.ZG177P               ANOP  ,                                           01441300
                      AIF   (T'&ZCGPR NE 'N').ZG177R  NON NUMERIC       01441400
                      AIF   ('&ZCGPR' LT '2').ZG177Q                    01441500
                      AIF   ('&ZCGPR' LE '12').ZG177R                   01441600
.ZG177Q               ANOP  ,                                           01441700
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01441800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01441900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01442000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01442100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01442200
.ZG177R               ANOP  ,                                           01442300
.*----------------------------------------------------------------***   01442400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01442500
                      AIF   (N'&KEYSCANTYPE LE 1).ZG180A  CK NUM        01442600
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           01442700
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01442800
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01442900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01443000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01443100
.ZG180A               ANOP  ,                                           01443200
.*-------------------------------------------------------------------   01443300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01443400
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01443500
.ZG181A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG182A                   01443600
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01443700
.*-------------------------------------------------------------------   01443800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01443900
.ZG182A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG183A               01444000
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01444100
.*-------------------------------------------------------------------   01444200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01444300
.ZG183A               AIF   (K'&XKEYSCANTYPE GT 0).ZG183C  KEYWORD      01444400
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG183B             01444500
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           01444600
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01444700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01444800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01444900
&ZMS                  SETC  '&ZMS "ENTRY"'                              01445000
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01445100
                      MNOTE 8,' &ZMS '                                  01445200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01445300
.ZG183B               ANOP  ,                                           01445400
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01445500
.ZG183C               ANOP  ,                                           01445600
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01445700
.*------------------------------------------------------------------    01445800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01445900
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01446000
.*-------------------------------------------------------------------   01446100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01446200
.ZG186                ANOP  ,                                           01446300
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG186A             01446400
&ZTLC                 SETC 'NO'                                         01446500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG187        01446600
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01446700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG186A  CK NUM        01446800
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01446900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01447000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01447100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01447200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01447300
.ZG186A               ANOP  ,                                           01447400
.*------------------------------------------------------------------    01447500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01447600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01447700
.ZG186A0              AIF   (K'&AUTHCOMP LE 0).ZG186A1  OK              01447800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01447900
.ZG186A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG186A2  OK          01448000
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01448100
.ZG186A2              AIF   (K'&ZCVAL LE 0).ZG186A3  OK                 01448200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01448300
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01448400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01448500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01448600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01448700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01448800
.ZG186A3              ANOP  ,                                           01448900
.*-------------------------------------------------------------------   01449000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01449100
.ZG187                ANOP  ,                                           01449200
&ZTLC                 SETC 'YES'                                        01449300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG196        01449400
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01449500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG187A  CK NUM        01449600
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01449700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01449800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01449900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01450000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01450100
.ZG187A               ANOP  ,                                           01450200
.*----------------------------------------------------------------***   01450300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01450400
                      AIF   (N'&AUTHCOMP LE 1).ZG189A  CK NUM           01450500
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01450600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01450700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01450800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01450900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01451000
.ZG189A               ANOP  ,                                           01451100
.*-------------------------------------------------------------------   01451200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01451300
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01451400
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01451500
                      AIF   (N'&AUTHCOMP GT 1).ZG189B  MULTI PARMS      01451600
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01451700
.ZG189B               AIF   (K'&AUTHCOMP(1) GT 0).ZG189C                01451800
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01451900
&ZMS                  SETC  ' '         *KRQDA*                         01452000
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01452100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01452200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01452300
.ZG189C               ANOP  ,                                           01452400
.*-------------------------------------------------------------------   01452500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01452600
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG189R  NOT I/O        01452700
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG189R           01452800
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01452900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG189P               01453000
                      AIF   (K'&ZCGPR GT 2).ZG189Q                      01453100
                      AIF   ('&ZCGPR' EQ '0').ZG189Q                    01453200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01453300
                      AIF   (T'&ZCGPR NE 'N').ZG189Q  INVALID REG NAME  01453400
.ZG189P               ANOP  ,                                           01453500
                      AIF   (T'&ZCGPR NE 'N').ZG189R  NON NUMERIC       01453600
                      AIF   ('&ZCGPR' LT '2').ZG189Q                    01453700
                      AIF   ('&ZCGPR' LE '12').ZG189R                   01453800
.ZG189Q               ANOP  ,                                           01453900
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01454000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01454100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01454200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01454300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01454400
.ZG189R               ANOP  ,                                           01454500
.*----------------------------------------------------------------***   01454600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01454700
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG191A  CK NUM       01454800
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01454900
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01455000
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01455100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01455200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01455300
.ZG191A               ANOP  ,                                           01455400
.*-------------------------------------------------------------------   01455500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01455600
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01455700
.ZG192A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG193A                  01455800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01455900
.*-------------------------------------------------------------------   01456000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01456100
.ZG193A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG194A            01456200
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01456300
.*-------------------------------------------------------------------   01456400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01456500
.ZG194A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG194C  KEYWORD     01456600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG194B            01456700
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01456800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01456900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01457000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01457100
&ZMS                  SETC  '&ZMS "EQUAL"'                              01457200
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01457300
                      MNOTE 8,' &ZMS '                                  01457400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01457500
.ZG194B               ANOP  ,                                           01457600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01457700
.ZG194C               ANOP  ,                                           01457800
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01457900
.*-------------------------------------------------------------------   01458000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01458100
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG194D  KEY           01458200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG194D  PARM      01458300
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01458400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01458500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01458600
&ZMS                  SETC  '&ZMS '                                     01458700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01458800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01458900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01459000
.ZG194D               ANOP  ,                                           01459100
.*------------------------------------------------------------------    01459200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01459300
.ZG196                ANOP  ,                                           01459400
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01459500
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG196E  VALID ARG    01459600
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG196D  OMITTED     01459700
&ZASYSLNDX            SETA  0                                           01459800
.ZG196A               ANOP  ,           POSITIONAL MACRO KEY            01459900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01460000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG196C           01460100
&ZTLC                 SETC 'AUTHCOMPARE'                                01460200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG196A  01460300
.ZG196B               ANOP  ,                                           01460400
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01460500
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01460600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01460700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01460800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01460900
                      AGO   .ZG196E                                     01461000
.ZG196C               ANOP  ,                                           01461100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01461200
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01461300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01461400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01461500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01461600
&ZMS                  SETC  '&ZMS "NO"'                                 01461700
&ZMS                  SETC  '&ZMS OR "YES".'                            01461800
                      MNOTE 8,' &ZMS '                                  01461900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01462000
                      AGO   .ZG196E                                     01462100
.ZG196D               ANOP  ,                                           01462200
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01462300
.ZG196E               ANOP  ,                                           01462400
.*------------------------------------------------------------------    01462500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01462600
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01462700
.*-------------------------------------------------------------------   01462800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01462900
.ZG199                ANOP  ,                                           01463000
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG199A              01463100
&ZTLC                 SETC 'NO'                                         01463200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG200         01463300
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01463400
                      AIF   (N'&KEYCOMPARE LE 1).ZG199A  CK NUM         01463500
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01463600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01463700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01463800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01463900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01464000
.ZG199A               ANOP  ,                                           01464100
.*------------------------------------------------------------------    01464200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01464300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01464400
.ZG199A0              AIF   (K'&ENTRYKEY LE 0).ZG199A1  OK              01464500
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01464600
.ZG199A1              AIF   (K'&KEYREQTYPE LE 0).ZG199A2  OK            01464700
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01464800
.ZG199A2              AIF   (K'&KEYRANGEEND LE 0).ZG199A3  OK           01464900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01465000
.ZG199A3              AIF   (K'&ZCVAL LE 0).ZG199A4  OK                 01465100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01465200
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           01465300
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01465400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01465500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01465600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01465700
.ZG199A4              ANOP  ,                                           01465800
.*-------------------------------------------------------------------   01465900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01466000
.ZG200                ANOP  ,                                           01466100
&ZTLC                 SETC 'YES'                                        01466200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG214         01466300
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01466400
                      AIF   (N'&KEYCOMPARE LE 1).ZG200A  CK NUM         01466500
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01466600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01466700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01466800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01466900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01467000
.ZG200A               ANOP  ,                                           01467100
.*----------------------------------------------------------------***   01467200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01467300
                      AIF   (N'&ENTRYKEY LE 1).ZG202A  CK NUM           01467400
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           01467500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01467600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01467700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01467800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01467900
.ZG202A               ANOP  ,                                           01468000
.*-------------------------------------------------------------------   01468100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01468200
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01468300
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01468400
                      AIF   (N'&ENTRYKEY GT 1).ZG202B  MULTI PARMS      01468500
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01468600
.ZG202B               AIF   (K'&ENTRYKEY(1) GT 0).ZG202C                01468700
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01468800
&ZMS                  SETC  ' '         *KRQDA*                         01468900
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01469000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01469100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01469200
.ZG202C               ANOP  ,                                           01469300
.*-------------------------------------------------------------------   01469400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01469500
                      AIF   (K'&ZXENTRYKEY LE 0).ZG202R  NOT I/O        01469600
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG202R           01469700
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01469800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG202P               01469900
                      AIF   (K'&ZCGPR GT 2).ZG202Q                      01470000
                      AIF   ('&ZCGPR' EQ '0').ZG202Q                    01470100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01470200
                      AIF   (T'&ZCGPR NE 'N').ZG202Q  INVALID REG NAME  01470300
.ZG202P               ANOP  ,                                           01470400
                      AIF   (T'&ZCGPR NE 'N').ZG202R  NON NUMERIC       01470500
                      AIF   ('&ZCGPR' LT '2').ZG202Q                    01470600
                      AIF   ('&ZCGPR' LE '12').ZG202R                   01470700
.ZG202Q               ANOP  ,                                           01470800
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           01470900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01471000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01471100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01471200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01471300
.ZG202R               ANOP  ,                                           01471400
.*------------------------------------------------------------------    01471500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01471600
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01471700
.*-------------------------------------------------------------------   01471800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01471900
.ZG206                ANOP  ,                                           01472000
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG206A              01472100
&ZTLC                 SETC 'EQUAL'                                      01472200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG207         01472300
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01472400
                      AIF   (N'&KEYREQTYPE LE 1).ZG206A  CK NUM         01472500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01472600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01472700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01472800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01472900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01473000
.ZG206A               ANOP  ,                                           01473100
.*------------------------------------------------------------------    01473200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01473300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01473400
.ZG206A0              AIF   (K'&KEYRANGEEND LE 0).ZG206A1  OK           01473500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01473600
.ZG206A1              AIF   (K'&ZCVAL LE 0).ZG206A2  OK                 01473700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01473800
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01473900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01474000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01474100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01474200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01474300
.ZG206A2              ANOP  ,                                           01474400
.*-------------------------------------------------------------------   01474500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01474600
.ZG207                ANOP  ,                                           01474700
&ZTLC                 SETC 'LESSOREQUAL'                                01474800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG208         01474900
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01475000
                      AIF   (N'&KEYREQTYPE LE 1).ZG207A  CK NUM         01475100
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01475200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01475300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01475400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01475500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01475600
.ZG207A               ANOP  ,                                           01475700
.*------------------------------------------------------------------    01475800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01475900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01476000
.ZG207A0              AIF   (K'&KEYRANGEEND LE 0).ZG207A1  OK           01476100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01476200
.ZG207A1              AIF   (K'&ZCVAL LE 0).ZG207A2  OK                 01476300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01476400
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01476500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01476600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01476700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01476800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01476900
.ZG207A2              ANOP  ,                                           01477000
.*-------------------------------------------------------------------   01477100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01477200
.ZG208                ANOP  ,                                           01477300
&ZTLC                 SETC 'GREATEROREQUAL'                             01477400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG209         01477500
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01477600
                      AIF   (N'&KEYREQTYPE LE 1).ZG208A  CK NUM         01477700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01477800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01477900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01478000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01478100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01478200
.ZG208A               ANOP  ,                                           01478300
.*------------------------------------------------------------------    01478400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01478500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01478600
.ZG208A0              AIF   (K'&KEYRANGEEND LE 0).ZG208A1  OK           01478700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01478800
.ZG208A1              AIF   (K'&ZCVAL LE 0).ZG208A2  OK                 01478900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01479000
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01479100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01479200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01479300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01479400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01479500
.ZG208A2              ANOP  ,                                           01479600
.*-------------------------------------------------------------------   01479700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01479800
.ZG209                ANOP  ,                                           01479900
&ZTLC                 SETC 'RANGE'                                      01480000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG213         01480100
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01480200
                      AIF   (N'&KEYREQTYPE LE 1).ZG209A  CK NUM         01480300
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01480400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01480500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01480600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01480700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01480800
.ZG209A               ANOP  ,                                           01480900
.*----------------------------------------------------------------***   01481000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01481100
                      AIF   (N'&KEYRANGEEND LE 1).ZG211A  CK NUM        01481200
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           01481300
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01481400
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01481500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01481600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01481700
.ZG211A               ANOP  ,                                           01481800
.*-------------------------------------------------------------------   01481900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01482000
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01482100
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01482200
                      AIF   (N'&KEYRANGEEND GT 1).ZG211B  MULTI PARMS   01482300
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01482400
.ZG211B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG211C             01482500
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01482600
&ZMS                  SETC  ' '         *KRQDA*                         01482700
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01482800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01482900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01483000
.ZG211C               ANOP  ,                                           01483100
.*-------------------------------------------------------------------   01483200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01483300
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG211R  NOT I/O     01483400
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG211R        01483500
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01483600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG211P               01483700
                      AIF   (K'&ZCGPR GT 2).ZG211Q                      01483800
                      AIF   ('&ZCGPR' EQ '0').ZG211Q                    01483900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01484000
                      AIF   (T'&ZCGPR NE 'N').ZG211Q  INVALID REG NAME  01484100
.ZG211P               ANOP  ,                                           01484200
                      AIF   (T'&ZCGPR NE 'N').ZG211R  NON NUMERIC       01484300
                      AIF   ('&ZCGPR' LT '2').ZG211Q                    01484400
                      AIF   ('&ZCGPR' LE '12').ZG211R                   01484500
.ZG211Q               ANOP  ,                                           01484600
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           01484700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01484800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01484900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01485000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01485100
.ZG211R               ANOP  ,                                           01485200
.*------------------------------------------------------------------    01485300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01485400
.ZG213                ANOP  ,                                           01485500
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01485600
                      AIF   (K'&XKEYREQTYPE GT 0).ZG213E  VALID ARG     01485700
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG213D  OMITTED      01485800
&ZASYSLNDX            SETA  0                                           01485900
.ZG213A               ANOP  ,           POSITIONAL MACRO KEY            01486000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01486100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG213C           01486200
&ZTLC                 SETC 'KEYREQTYPE'                                 01486300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG213A  01486400
.ZG213B               ANOP  ,                                           01486500
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01486600
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       01486700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01486800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01486900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01487000
                      AGO   .ZG213E                                     01487100
.ZG213C               ANOP  ,                                           01487200
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01487300
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           01487400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01487500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01487600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01487700
&ZMS                  SETC  '&ZMS "EQUAL",'                             01487800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01487900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01488000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01488100
                      MNOTE 8,' &ZMS '                                  01488200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01488300
                      AGO   .ZG213E                                     01488400
.ZG213D               ANOP  ,                                           01488500
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01488600
.ZG213E               ANOP  ,                                           01488700
.*------------------------------------------------------------------    01488800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01488900
.ZG214                ANOP  ,                                           01489000
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01489100
                      AIF   (K'&XKEYCOMPARE GT 0).ZG214E  VALID ARG     01489200
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG214D  OMITTED      01489300
&ZASYSLNDX            SETA  0                                           01489400
.ZG214A               ANOP  ,           POSITIONAL MACRO KEY            01489500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01489600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG214C           01489700
&ZTLC                 SETC 'KEYCOMPARE'                                 01489800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG214A  01489900
.ZG214B               ANOP  ,                                           01490000
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01490100
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       01490200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01490300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01490400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01490500
                      AGO   .ZG214E                                     01490600
.ZG214C               ANOP  ,                                           01490700
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01490800
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           01490900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01491000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01491100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01491200
&ZMS                  SETC  '&ZMS "NO"'                                 01491300
&ZMS                  SETC  '&ZMS OR "YES".'                            01491400
                      MNOTE 8,' &ZMS '                                  01491500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01491600
                      AGO   .ZG214E                                     01491700
.ZG214D               ANOP  ,                                           01491800
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01491900
.ZG214E               ANOP  ,                                           01492000
.*------------------------------------------------------------------    01492100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01492200
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01492300
.*-------------------------------------------------------------------   01492400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01492500
.ZG217                ANOP  ,                                           01492600
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG217A             01492700
&ZTLC                 SETC 'NO'                                         01492800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG218        01492900
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01493000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG217A  CK NUM        01493100
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01493200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01493300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01493400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01493500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01493600
.ZG217A               ANOP  ,                                           01493700
.*------------------------------------------------------------------    01493800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01493900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01494000
.ZG217A0              AIF   (K'&SECONDARYKEY LE 0).ZG217A1  OK          01494100
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01494200
.ZG217A1              AIF   (K'&SKEYREQTYPE LE 0).ZG217A2  OK           01494300
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01494400
.ZG217A2              AIF   (K'&SKEYRANGEEND LE 0).ZG217A3  OK          01494500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01494600
.ZG217A3              AIF   (K'&ZCVAL LE 0).ZG217A4  OK                 01494700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01494800
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           01494900
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01495000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01495100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01495200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01495300
.ZG217A4              ANOP  ,                                           01495400
.*-------------------------------------------------------------------   01495500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01495600
.ZG218                ANOP  ,                                           01495700
&ZTLC                 SETC 'YES'                                        01495800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG232        01495900
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01496000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG218A  CK NUM        01496100
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01496200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01496300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01496400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01496500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01496600
.ZG218A               ANOP  ,                                           01496700
.*----------------------------------------------------------------***   01496800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01496900
                      AIF   (N'&SECONDARYKEY LE 1).ZG220A  CK NUM       01497000
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           01497100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01497200
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01497300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01497400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01497500
.ZG220A               ANOP  ,                                           01497600
.*-------------------------------------------------------------------   01497700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01497800
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01497900
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01498000
                      AIF   (N'&SECONDARYKEY GT 1).ZG220B  MULTI PARMS  01498100
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01498200
.ZG220B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG220C            01498300
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01498400
&ZMS                  SETC  ' '         *KRQDA*                         01498500
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01498600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01498700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01498800
.ZG220C               ANOP  ,                                           01498900
.*-------------------------------------------------------------------   01499000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01499100
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG220R  NOT I/O    01499200
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG220R       01499300
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01499400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG220P               01499500
                      AIF   (K'&ZCGPR GT 2).ZG220Q                      01499600
                      AIF   ('&ZCGPR' EQ '0').ZG220Q                    01499700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01499800
                      AIF   (T'&ZCGPR NE 'N').ZG220Q  INVALID REG NAME  01499900
.ZG220P               ANOP  ,                                           01500000
                      AIF   (T'&ZCGPR NE 'N').ZG220R  NON NUMERIC       01500100
                      AIF   ('&ZCGPR' LT '2').ZG220Q                    01500200
                      AIF   ('&ZCGPR' LE '12').ZG220R                   01500300
.ZG220Q               ANOP  ,                                           01500400
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           01500500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01500600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01500700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01500800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01500900
.ZG220R               ANOP  ,                                           01501000
.*------------------------------------------------------------------    01501100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01501200
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01501300
.*-------------------------------------------------------------------   01501400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01501500
.ZG224                ANOP  ,                                           01501600
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG224A             01501700
&ZTLC                 SETC 'EQUAL'                                      01501800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG225        01501900
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01502000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG224A  CK NUM        01502100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01502200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01502300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01502400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01502500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01502600
.ZG224A               ANOP  ,                                           01502700
.*------------------------------------------------------------------    01502800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01502900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01503000
.ZG224A0              AIF   (K'&SKEYRANGEEND LE 0).ZG224A1  OK          01503100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01503200
.ZG224A1              AIF   (K'&ZCVAL LE 0).ZG224A2  OK                 01503300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01503400
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01503500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01503600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01503700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01503800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01503900
.ZG224A2              ANOP  ,                                           01504000
.*-------------------------------------------------------------------   01504100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01504200
.ZG225                ANOP  ,                                           01504300
&ZTLC                 SETC 'LESSOREQUAL'                                01504400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG226        01504500
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01504600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG225A  CK NUM        01504700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01504800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01504900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01505000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01505100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01505200
.ZG225A               ANOP  ,                                           01505300
.*------------------------------------------------------------------    01505400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01505500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01505600
.ZG225A0              AIF   (K'&SKEYRANGEEND LE 0).ZG225A1  OK          01505700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01505800
.ZG225A1              AIF   (K'&ZCVAL LE 0).ZG225A2  OK                 01505900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01506000
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01506100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01506200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01506300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01506400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01506500
.ZG225A2              ANOP  ,                                           01506600
.*-------------------------------------------------------------------   01506700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01506800
.ZG226                ANOP  ,                                           01506900
&ZTLC                 SETC 'GREATEROREQUAL'                             01507000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG227        01507100
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01507200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG226A  CK NUM        01507300
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01507400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01507500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01507600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01507700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01507800
.ZG226A               ANOP  ,                                           01507900
.*------------------------------------------------------------------    01508000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01508100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01508200
.ZG226A0              AIF   (K'&SKEYRANGEEND LE 0).ZG226A1  OK          01508300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01508400
.ZG226A1              AIF   (K'&ZCVAL LE 0).ZG226A2  OK                 01508500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01508600
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01508700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01508800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01508900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01509000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01509100
.ZG226A2              ANOP  ,                                           01509200
.*-------------------------------------------------------------------   01509300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01509400
.ZG227                ANOP  ,                                           01509500
&ZTLC                 SETC 'RANGE'                                      01509600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG231        01509700
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01509800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG227A  CK NUM        01509900
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01510000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01510100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01510200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01510300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01510400
.ZG227A               ANOP  ,                                           01510500
.*----------------------------------------------------------------***   01510600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01510700
                      AIF   (N'&SKEYRANGEEND LE 1).ZG229A  CK NUM       01510800
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           01510900
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01511000
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01511100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01511200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01511300
.ZG229A               ANOP  ,                                           01511400
.*-------------------------------------------------------------------   01511500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01511600
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01511700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01511800
                      AIF   (N'&SKEYRANGEEND GT 1).ZG229B  MULTI PARMS  01511900
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01512000
.ZG229B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG229C            01512100
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01512200
&ZMS                  SETC  ' '         *KRQDA*                         01512300
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01512400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01512500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01512600
.ZG229C               ANOP  ,                                           01512700
.*-------------------------------------------------------------------   01512800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01512900
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG229R  NOT I/O    01513000
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG229R       01513100
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01513200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG229P               01513300
                      AIF   (K'&ZCGPR GT 2).ZG229Q                      01513400
                      AIF   ('&ZCGPR' EQ '0').ZG229Q                    01513500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01513600
                      AIF   (T'&ZCGPR NE 'N').ZG229Q  INVALID REG NAME  01513700
.ZG229P               ANOP  ,                                           01513800
                      AIF   (T'&ZCGPR NE 'N').ZG229R  NON NUMERIC       01513900
                      AIF   ('&ZCGPR' LT '2').ZG229Q                    01514000
                      AIF   ('&ZCGPR' LE '12').ZG229R                   01514100
.ZG229Q               ANOP  ,                                           01514200
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           01514300
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01514400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01514500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01514600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01514700
.ZG229R               ANOP  ,                                           01514800
.*------------------------------------------------------------------    01514900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01515000
.ZG231                ANOP  ,                                           01515100
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01515200
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG231E  VALID ARG    01515300
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG231D  OMITTED     01515400
&ZASYSLNDX            SETA  0                                           01515500
.ZG231A               ANOP  ,           POSITIONAL MACRO KEY            01515600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01515700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG231C           01515800
&ZTLC                 SETC 'SKEYREQTYPE'                                01515900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG231A  01516000
.ZG231B               ANOP  ,                                           01516100
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01516200
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      01516300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01516400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01516500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01516600
                      AGO   .ZG231E                                     01516700
.ZG231C               ANOP  ,                                           01516800
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01516900
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           01517000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01517100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01517200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01517300
&ZMS                  SETC  '&ZMS "EQUAL",'                             01517400
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01517500
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01517600
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01517700
                      MNOTE 8,' &ZMS '                                  01517800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01517900
                      AGO   .ZG231E                                     01518000
.ZG231D               ANOP  ,                                           01518100
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01518200
.ZG231E               ANOP  ,                                           01518300
.*------------------------------------------------------------------    01518400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01518500
.ZG232                ANOP  ,                                           01518600
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01518700
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG232E  VALID ARG    01518800
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG232D  OMITTED     01518900
&ZASYSLNDX            SETA  0                                           01519000
.ZG232A               ANOP  ,           POSITIONAL MACRO KEY            01519100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01519200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG232C           01519300
&ZTLC                 SETC 'SKEYCOMPARE'                                01519400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG232A  01519500
.ZG232B               ANOP  ,                                           01519600
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01519700
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      01519800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01519900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01520000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01520100
                      AGO   .ZG232E                                     01520200
.ZG232C               ANOP  ,                                           01520300
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01520400
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           01520500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01520600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01520700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01520800
&ZMS                  SETC  '&ZMS "NO"'                                 01520900
&ZMS                  SETC  '&ZMS OR "YES".'                            01521000
                      MNOTE 8,' &ZMS '                                  01521100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01521200
                      AGO   .ZG232E                                     01521300
.ZG232D               ANOP  ,                                           01521400
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01521500
.ZG232E               ANOP  ,                                           01521600
.*-------------------------------------------------------------------   01521700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01521800
.ZG233                ANOP  ,                                           01521900
&ZTLC                 SETC 'KEYPOS'                                     01522000
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG332            01522100
&XLOCATOR             SETC  'KEYPOS'    SET KEYWORD                     01522200
                      AIF   (N'&LOCATOR LE 1).ZG233A  CK NUM            01522300
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01522400
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01522500
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01522600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01522700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01522800
.ZG233A               ANOP  ,                                           01522900
.*------------------------------------------------------------------    01523000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01523100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01523200
.ZG233A0              AIF   (K'&ENTRYID LE 0).ZG233A1  OK               01523300
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01523400
.ZG233A1              AIF   (K'&LISTCOMPARE LE 0).ZG233A2  OK           01523500
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01523600
.ZG233A2              AIF   (K'&ENTRYNAME LE 0).ZG233A3  OK             01523700
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01523800
.ZG233A3              AIF   (K'&ZCVAL LE 0).ZG233A4  OK                 01523900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01524000
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01524100
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01524200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01524300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01524400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01524500
.ZG233A4              ANOP  ,                                           01524600
.*----------------------------------------------------------------***   01524700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01524800
                      AIF   (N'&LISTNUM LE 1).ZG235A  CK NUM            01524900
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01525000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01525100
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01525200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01525300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01525400
.ZG235A               ANOP  ,                                           01525500
.*-------------------------------------------------------------------   01525600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01525700
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01525800
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01525900
                      AIF   (N'&LISTNUM GT 1).ZG235B  MULTI PARMS       01526000
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01526100
.ZG235B               AIF   (K'&LISTNUM(1) GT 0).ZG235C                 01526200
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01526300
&ZMS                  SETC  ' '         *KRQDA*                         01526400
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01526500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01526600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01526700
.ZG235C               ANOP  ,                                           01526800
.*-------------------------------------------------------------------   01526900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01527000
                      AIF   (K'&ZXLISTNUM LE 0).ZG235R  NOT I/O         01527100
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG235R            01527200
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01527300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG235P               01527400
                      AIF   (K'&ZCGPR GT 2).ZG235Q                      01527500
                      AIF   ('&ZCGPR' EQ '0').ZG235Q                    01527600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01527700
                      AIF   (T'&ZCGPR NE 'N').ZG235Q  INVALID REG NAME  01527800
.ZG235P               ANOP  ,                                           01527900
                      AIF   (T'&ZCGPR NE 'N').ZG235R  NON NUMERIC       01528000
                      AIF   ('&ZCGPR' LT '2').ZG235Q                    01528100
                      AIF   ('&ZCGPR' LE '12').ZG235R                   01528200
.ZG235Q               ANOP  ,                                           01528300
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01528400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01528500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01528600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01528700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01528800
.ZG235R               ANOP  ,                                           01528900
.*----------------------------------------------------------------***   01529000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01529100
                      AIF   (N'&KEYSCANTYPE LE 1).ZG238A  CK NUM        01529200
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           01529300
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01529400
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01529500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01529600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01529700
.ZG238A               ANOP  ,                                           01529800
.*-------------------------------------------------------------------   01529900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01530000
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01530100
.ZG239A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG240A                   01530200
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01530300
.*-------------------------------------------------------------------   01530400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01530500
.ZG240A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG241A               01530600
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01530700
.*-------------------------------------------------------------------   01530800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01530900
.ZG241A               AIF   (K'&XKEYSCANTYPE GT 0).ZG241C  KEYWORD      01531000
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG241B             01531100
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           01531200
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01531300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01531400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01531500
&ZMS                  SETC  '&ZMS "ENTRY"'                              01531600
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01531700
                      MNOTE 8,' &ZMS '                                  01531800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01531900
.ZG241B               ANOP  ,                                           01532000
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01532100
.ZG241C               ANOP  ,                                           01532200
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01532300
.*------------------------------------------------------------------    01532400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01532500
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01532600
.*-------------------------------------------------------------------   01532700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01532800
.ZG244                ANOP  ,                                           01532900
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG244A             01533000
&ZTLC                 SETC 'NO'                                         01533100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG245        01533200
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01533300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG244A  CK NUM        01533400
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01533500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01533600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01533700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01533800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01533900
.ZG244A               ANOP  ,                                           01534000
.*------------------------------------------------------------------    01534100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01534200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01534300
.ZG244A0              AIF   (K'&AUTHCOMP LE 0).ZG244A1  OK              01534400
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01534500
.ZG244A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG244A2  OK          01534600
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01534700
.ZG244A2              AIF   (K'&ZCVAL LE 0).ZG244A3  OK                 01534800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01534900
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01535000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01535100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01535200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01535300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01535400
.ZG244A3              ANOP  ,                                           01535500
.*-------------------------------------------------------------------   01535600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01535700
.ZG245                ANOP  ,                                           01535800
&ZTLC                 SETC 'YES'                                        01535900
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG254        01536000
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01536100
                      AIF   (N'&AUTHCOMPARE LE 1).ZG245A  CK NUM        01536200
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01536300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01536400
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01536500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01536600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01536700
.ZG245A               ANOP  ,                                           01536800
.*----------------------------------------------------------------***   01536900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01537000
                      AIF   (N'&AUTHCOMP LE 1).ZG247A  CK NUM           01537100
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01537200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01537300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01537400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01537500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01537600
.ZG247A               ANOP  ,                                           01537700
.*-------------------------------------------------------------------   01537800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01537900
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01538000
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01538100
                      AIF   (N'&AUTHCOMP GT 1).ZG247B  MULTI PARMS      01538200
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01538300
.ZG247B               AIF   (K'&AUTHCOMP(1) GT 0).ZG247C                01538400
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01538500
&ZMS                  SETC  ' '         *KRQDA*                         01538600
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01538700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01538800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01538900
.ZG247C               ANOP  ,                                           01539000
.*-------------------------------------------------------------------   01539100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01539200
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG247R  NOT I/O        01539300
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG247R           01539400
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01539500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG247P               01539600
                      AIF   (K'&ZCGPR GT 2).ZG247Q                      01539700
                      AIF   ('&ZCGPR' EQ '0').ZG247Q                    01539800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01539900
                      AIF   (T'&ZCGPR NE 'N').ZG247Q  INVALID REG NAME  01540000
.ZG247P               ANOP  ,                                           01540100
                      AIF   (T'&ZCGPR NE 'N').ZG247R  NON NUMERIC       01540200
                      AIF   ('&ZCGPR' LT '2').ZG247Q                    01540300
                      AIF   ('&ZCGPR' LE '12').ZG247R                   01540400
.ZG247Q               ANOP  ,                                           01540500
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01540600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01540700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01540800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01540900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01541000
.ZG247R               ANOP  ,                                           01541100
.*----------------------------------------------------------------***   01541200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01541300
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG249A  CK NUM       01541400
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01541500
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01541600
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01541700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01541800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01541900
.ZG249A               ANOP  ,                                           01542000
.*-------------------------------------------------------------------   01542100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01542200
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01542300
.ZG250A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG251A                  01542400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01542500
.*-------------------------------------------------------------------   01542600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01542700
.ZG251A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG252A            01542800
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01542900
.*-------------------------------------------------------------------   01543000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01543100
.ZG252A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG252C  KEYWORD     01543200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG252B            01543300
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01543400
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01543500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01543600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01543700
&ZMS                  SETC  '&ZMS "EQUAL"'                              01543800
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01543900
                      MNOTE 8,' &ZMS '                                  01544000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01544100
.ZG252B               ANOP  ,                                           01544200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01544300
.ZG252C               ANOP  ,                                           01544400
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01544500
.*-------------------------------------------------------------------   01544600
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01544700
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG252D  KEY           01544800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG252D  PARM      01544900
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01545000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01545100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01545200
&ZMS                  SETC  '&ZMS '                                     01545300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01545400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01545500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01545600
.ZG252D               ANOP  ,                                           01545700
.*------------------------------------------------------------------    01545800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01545900
.ZG254                ANOP  ,                                           01546000
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01546100
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG254E  VALID ARG    01546200
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG254D  OMITTED     01546300
&ZASYSLNDX            SETA  0                                           01546400
.ZG254A               ANOP  ,           POSITIONAL MACRO KEY            01546500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01546600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG254C           01546700
&ZTLC                 SETC 'AUTHCOMPARE'                                01546800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG254A  01546900
.ZG254B               ANOP  ,                                           01547000
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01547100
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01547200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01547300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01547400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01547500
                      AGO   .ZG254E                                     01547600
.ZG254C               ANOP  ,                                           01547700
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01547800
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01547900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01548000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01548100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01548200
&ZMS                  SETC  '&ZMS "NO"'                                 01548300
&ZMS                  SETC  '&ZMS OR "YES".'                            01548400
                      MNOTE 8,' &ZMS '                                  01548500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01548600
                      AGO   .ZG254E                                     01548700
.ZG254D               ANOP  ,                                           01548800
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01548900
.ZG254E               ANOP  ,                                           01549000
.*------------------------------------------------------------------    01549100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01549200
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            01549300
.*-------------------------------------------------------------------   01549400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01549500
.ZG257                ANOP  ,                                           01549600
                      AIF   (K'&KEYTYPE(1) LE 0).ZG257A                 01549700
&ZTLC                 SETC 'ENTRY'                                      01549800
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG294            01549900
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     01550000
                      AIF   (N'&KEYTYPE LE 1).ZG257A  CK NUM            01550100
&ZMS                  SETC  '"KEYTYPE='         *KPOSA* MNOTE           01550200
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            01550300
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            01550400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01550500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01550600
.ZG257A               ANOP  ,                                           01550700
.*----------------------------------------------------------------***   01550800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01550900
                      AIF   (N'&ENTRYKEY LE 1).ZG259A  CK NUM           01551000
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           01551100
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01551200
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01551300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01551400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01551500
.ZG259A               ANOP  ,                                           01551600
.*-------------------------------------------------------------------   01551700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01551800
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01551900
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01552000
                      AIF   (N'&ENTRYKEY GT 1).ZG259B  MULTI PARMS      01552100
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01552200
.ZG259B               AIF   (K'&ENTRYKEY(1) GT 0).ZG259C                01552300
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01552400
&ZMS                  SETC  ' '         *KRQDA*                         01552500
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01552600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01552700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01552800
.ZG259C               ANOP  ,                                           01552900
.*-------------------------------------------------------------------   01553000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01553100
                      AIF   (K'&ZXENTRYKEY LE 0).ZG259R  NOT I/O        01553200
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG259R           01553300
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01553400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG259P               01553500
                      AIF   (K'&ZCGPR GT 2).ZG259Q                      01553600
                      AIF   ('&ZCGPR' EQ '0').ZG259Q                    01553700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01553800
                      AIF   (T'&ZCGPR NE 'N').ZG259Q  INVALID REG NAME  01553900
.ZG259P               ANOP  ,                                           01554000
                      AIF   (T'&ZCGPR NE 'N').ZG259R  NON NUMERIC       01554100
                      AIF   ('&ZCGPR' LT '2').ZG259Q                    01554200
                      AIF   ('&ZCGPR' LE '12').ZG259R                   01554300
.ZG259Q               ANOP  ,                                           01554400
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           01554500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01554600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01554700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01554800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01554900
.ZG259R               ANOP  ,                                           01555000
.*------------------------------------------------------------------    01555100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01555200
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01555300
.*-------------------------------------------------------------------   01555400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01555500
.ZG262                ANOP  ,                                           01555600
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG262A              01555700
&ZTLC                 SETC 'EQUAL'                                      01555800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG263         01555900
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01556000
                      AIF   (N'&KEYREQTYPE LE 1).ZG262A  CK NUM         01556100
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01556200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01556300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01556400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01556500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01556600
.ZG262A               ANOP  ,                                           01556700
.*------------------------------------------------------------------    01556800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01556900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01557000
.ZG262A0              AIF   (K'&KEYRANGEEND LE 0).ZG262A1  OK           01557100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01557200
.ZG262A1              AIF   (K'&ZCVAL LE 0).ZG262A2  OK                 01557300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01557400
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01557500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01557600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01557700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01557800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01557900
.ZG262A2              ANOP  ,                                           01558000
.*-------------------------------------------------------------------   01558100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01558200
.ZG263                ANOP  ,                                           01558300
&ZTLC                 SETC 'LESSOREQUAL'                                01558400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG264         01558500
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01558600
                      AIF   (N'&KEYREQTYPE LE 1).ZG263A  CK NUM         01558700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01558800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01558900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01559000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01559100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01559200
.ZG263A               ANOP  ,                                           01559300
.*------------------------------------------------------------------    01559400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01559500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01559600
.ZG263A0              AIF   (K'&KEYRANGEEND LE 0).ZG263A1  OK           01559700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01559800
.ZG263A1              AIF   (K'&ZCVAL LE 0).ZG263A2  OK                 01559900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01560000
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01560100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01560200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01560300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01560400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01560500
.ZG263A2              ANOP  ,                                           01560600
.*-------------------------------------------------------------------   01560700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01560800
.ZG264                ANOP  ,                                           01560900
&ZTLC                 SETC 'GREATEROREQUAL'                             01561000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG265         01561100
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01561200
                      AIF   (N'&KEYREQTYPE LE 1).ZG264A  CK NUM         01561300
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01561400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01561500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01561600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01561700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01561800
.ZG264A               ANOP  ,                                           01561900
.*------------------------------------------------------------------    01562000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01562100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01562200
.ZG264A0              AIF   (K'&KEYRANGEEND LE 0).ZG264A1  OK           01562300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01562400
.ZG264A1              AIF   (K'&ZCVAL LE 0).ZG264A2  OK                 01562500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01562600
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01562700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01562800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01562900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01563000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01563100
.ZG264A2              ANOP  ,                                           01563200
.*-------------------------------------------------------------------   01563300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01563400
.ZG265                ANOP  ,                                           01563500
&ZTLC                 SETC 'RANGE'                                      01563600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG269         01563700
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01563800
                      AIF   (N'&KEYREQTYPE LE 1).ZG265A  CK NUM         01563900
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01564000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01564100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01564200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01564300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01564400
.ZG265A               ANOP  ,                                           01564500
.*----------------------------------------------------------------***   01564600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01564700
                      AIF   (N'&KEYRANGEEND LE 1).ZG267A  CK NUM        01564800
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           01564900
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01565000
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01565100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01565200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01565300
.ZG267A               ANOP  ,                                           01565400
.*-------------------------------------------------------------------   01565500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01565600
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01565700
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01565800
                      AIF   (N'&KEYRANGEEND GT 1).ZG267B  MULTI PARMS   01565900
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01566000
.ZG267B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG267C             01566100
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01566200
&ZMS                  SETC  ' '         *KRQDA*                         01566300
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01566400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01566500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01566600
.ZG267C               ANOP  ,                                           01566700
.*-------------------------------------------------------------------   01566800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01566900
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG267R  NOT I/O     01567000
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG267R        01567100
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01567200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG267P               01567300
                      AIF   (K'&ZCGPR GT 2).ZG267Q                      01567400
                      AIF   ('&ZCGPR' EQ '0').ZG267Q                    01567500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01567600
                      AIF   (T'&ZCGPR NE 'N').ZG267Q  INVALID REG NAME  01567700
.ZG267P               ANOP  ,                                           01567800
                      AIF   (T'&ZCGPR NE 'N').ZG267R  NON NUMERIC       01567900
                      AIF   ('&ZCGPR' LT '2').ZG267Q                    01568000
                      AIF   ('&ZCGPR' LE '12').ZG267R                   01568100
.ZG267Q               ANOP  ,                                           01568200
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           01568300
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01568400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01568500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01568600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01568700
.ZG267R               ANOP  ,                                           01568800
.*------------------------------------------------------------------    01568900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01569000
.ZG269                ANOP  ,                                           01569100
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01569200
                      AIF   (K'&XKEYREQTYPE GT 0).ZG269E  VALID ARG     01569300
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG269D  OMITTED      01569400
&ZASYSLNDX            SETA  0                                           01569500
.ZG269A               ANOP  ,           POSITIONAL MACRO KEY            01569600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01569700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG269C           01569800
&ZTLC                 SETC 'KEYREQTYPE'                                 01569900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG269A  01570000
.ZG269B               ANOP  ,                                           01570100
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01570200
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       01570300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01570400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01570500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01570600
                      AGO   .ZG269E                                     01570700
.ZG269C               ANOP  ,                                           01570800
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01570900
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           01571000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01571100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01571200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01571300
&ZMS                  SETC  '&ZMS "EQUAL",'                             01571400
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01571500
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01571600
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01571700
                      MNOTE 8,' &ZMS '                                  01571800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01571900
                      AGO   .ZG269E                                     01572000
.ZG269D               ANOP  ,                                           01572100
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01572200
.ZG269E               ANOP  ,                                           01572300
.*------------------------------------------------------------------    01572400
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01572500
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG269F  KEY           01572600
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG269F  PARM        01572700
&ZMS                  SETC  '"KEYREQTYPE'       *KDEPA* MNOTE           01572800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01572900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01573000
&ZMS                  SETC  '&ZMS '                                     01573100
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01573200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01573300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01573400
.ZG269F               ANOP  ,                                           01573500
.*------------------------------------------------------------------    01573600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01573700
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01573800
.*-------------------------------------------------------------------   01573900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01574000
.ZG272                ANOP  ,                                           01574100
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG272A              01574200
&ZTLC                 SETC 'NO'                                         01574300
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG273         01574400
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01574500
                      AIF   (N'&KEYCOMPARE LE 1).ZG272A  CK NUM         01574600
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01574700
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01574800
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01574900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01575000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01575100
.ZG272A               ANOP  ,                                           01575200
.*-------------------------------------------------------------------   01575300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01575400
.ZG273                ANOP  ,                                           01575500
&ZTLC                 SETC 'YES'                                        01575600
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG274         01575700
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01575800
                      AIF   (N'&KEYCOMPARE LE 1).ZG273A  CK NUM         01575900
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01576000
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01576100
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01576200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01576300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01576400
.ZG273A               ANOP  ,                                           01576500
.*------------------------------------------------------------------    01576600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01576700
.ZG274                ANOP  ,                                           01576800
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01576900
                      AIF   (K'&XKEYCOMPARE GT 0).ZG274E  VALID ARG     01577000
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG274D  OMITTED      01577100
&ZASYSLNDX            SETA  0                                           01577200
.ZG274A               ANOP  ,           POSITIONAL MACRO KEY            01577300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01577400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG274C           01577500
&ZTLC                 SETC 'KEYCOMPARE'                                 01577600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG274A  01577700
.ZG274B               ANOP  ,                                           01577800
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01577900
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       01578000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01578100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01578200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01578300
                      AGO   .ZG274E                                     01578400
.ZG274C               ANOP  ,                                           01578500
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01578600
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           01578700
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01578800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01578900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01579000
&ZMS                  SETC  '&ZMS "NO"'                                 01579100
&ZMS                  SETC  '&ZMS OR "YES".'                            01579200
                      MNOTE 8,' &ZMS '                                  01579300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01579400
                      AGO   .ZG274E                                     01579500
.ZG274D               ANOP  ,                                           01579600
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01579700
.ZG274E               ANOP  ,                                           01579800
.*------------------------------------------------------------------    01579900
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01580000
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG274F  KEY           01580100
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG274F  PARM        01580200
&ZMS                  SETC  '"KEYCOMPARE'       *KDEPA* MNOTE           01580300
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01580400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01580500
&ZMS                  SETC  '&ZMS '                                     01580600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01580700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01580800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01580900
.ZG274F               ANOP  ,                                           01581000
.*------------------------------------------------------------------    01581100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01581200
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01581300
.*-------------------------------------------------------------------   01581400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01581500
.ZG277                ANOP  ,                                           01581600
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG277A             01581700
&ZTLC                 SETC 'NO'                                         01581800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG278        01581900
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01582000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG277A  CK NUM        01582100
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01582200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01582300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01582400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01582500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01582600
.ZG277A               ANOP  ,                                           01582700
.*------------------------------------------------------------------    01582800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01582900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01583000
.ZG277A0              AIF   (K'&SECONDARYKEY LE 0).ZG277A1  OK          01583100
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01583200
.ZG277A1              AIF   (K'&SKEYREQTYPE LE 0).ZG277A2  OK           01583300
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01583400
.ZG277A2              AIF   (K'&SKEYRANGEEND LE 0).ZG277A3  OK          01583500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01583600
.ZG277A3              AIF   (K'&ZCVAL LE 0).ZG277A4  OK                 01583700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01583800
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           01583900
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01584000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01584100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01584200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01584300
.ZG277A4              ANOP  ,                                           01584400
.*-------------------------------------------------------------------   01584500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01584600
.ZG278                ANOP  ,                                           01584700
&ZTLC                 SETC 'YES'                                        01584800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG292        01584900
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01585000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG278A  CK NUM        01585100
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01585200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01585300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01585400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01585500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01585600
.ZG278A               ANOP  ,                                           01585700
.*----------------------------------------------------------------***   01585800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01585900
                      AIF   (N'&SECONDARYKEY LE 1).ZG280A  CK NUM       01586000
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           01586100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01586200
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01586300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01586400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01586500
.ZG280A               ANOP  ,                                           01586600
.*-------------------------------------------------------------------   01586700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01586800
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01586900
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01587000
                      AIF   (N'&SECONDARYKEY GT 1).ZG280B  MULTI PARMS  01587100
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01587200
.ZG280B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG280C            01587300
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01587400
&ZMS                  SETC  ' '         *KRQDA*                         01587500
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01587600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01587700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01587800
.ZG280C               ANOP  ,                                           01587900
.*-------------------------------------------------------------------   01588000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01588100
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG280R  NOT I/O    01588200
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG280R       01588300
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01588400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG280P               01588500
                      AIF   (K'&ZCGPR GT 2).ZG280Q                      01588600
                      AIF   ('&ZCGPR' EQ '0').ZG280Q                    01588700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01588800
                      AIF   (T'&ZCGPR NE 'N').ZG280Q  INVALID REG NAME  01588900
.ZG280P               ANOP  ,                                           01589000
                      AIF   (T'&ZCGPR NE 'N').ZG280R  NON NUMERIC       01589100
                      AIF   ('&ZCGPR' LT '2').ZG280Q                    01589200
                      AIF   ('&ZCGPR' LE '12').ZG280R                   01589300
.ZG280Q               ANOP  ,                                           01589400
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           01589500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01589600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01589700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01589800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01589900
.ZG280R               ANOP  ,                                           01590000
.*------------------------------------------------------------------    01590100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01590200
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01590300
.*-------------------------------------------------------------------   01590400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01590500
.ZG283                ANOP  ,                                           01590600
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG283A             01590700
&ZTLC                 SETC 'EQUAL'                                      01590800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG284        01590900
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01591000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG283A  CK NUM        01591100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01591200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01591300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01591400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01591500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01591600
.ZG283A               ANOP  ,                                           01591700
.*------------------------------------------------------------------    01591800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01591900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01592000
.ZG283A0              AIF   (K'&SKEYRANGEEND LE 0).ZG283A1  OK          01592100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01592200
.ZG283A1              AIF   (K'&ZCVAL LE 0).ZG283A2  OK                 01592300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01592400
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01592500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01592600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01592700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01592800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01592900
.ZG283A2              ANOP  ,                                           01593000
.*-------------------------------------------------------------------   01593100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01593200
.ZG284                ANOP  ,                                           01593300
&ZTLC                 SETC 'LESSOREQUAL'                                01593400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG285        01593500
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01593600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG284A  CK NUM        01593700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01593800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01593900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01594000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01594100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01594200
.ZG284A               ANOP  ,                                           01594300
.*------------------------------------------------------------------    01594400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01594500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01594600
.ZG284A0              AIF   (K'&SKEYRANGEEND LE 0).ZG284A1  OK          01594700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01594800
.ZG284A1              AIF   (K'&ZCVAL LE 0).ZG284A2  OK                 01594900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01595000
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01595100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01595200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01595300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01595400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01595500
.ZG284A2              ANOP  ,                                           01595600
.*-------------------------------------------------------------------   01595700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01595800
.ZG285                ANOP  ,                                           01595900
&ZTLC                 SETC 'GREATEROREQUAL'                             01596000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG286        01596100
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01596200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG285A  CK NUM        01596300
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01596400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01596500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01596600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01596700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01596800
.ZG285A               ANOP  ,                                           01596900
.*------------------------------------------------------------------    01597000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01597100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01597200
.ZG285A0              AIF   (K'&SKEYRANGEEND LE 0).ZG285A1  OK          01597300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01597400
.ZG285A1              AIF   (K'&ZCVAL LE 0).ZG285A2  OK                 01597500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01597600
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01597700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01597800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01597900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01598000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01598100
.ZG285A2              ANOP  ,                                           01598200
.*-------------------------------------------------------------------   01598300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01598400
.ZG286                ANOP  ,                                           01598500
&ZTLC                 SETC 'RANGE'                                      01598600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG290        01598700
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01598800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG286A  CK NUM        01598900
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01599000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01599100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01599200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01599300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01599400
.ZG286A               ANOP  ,                                           01599500
.*----------------------------------------------------------------***   01599600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01599700
                      AIF   (N'&SKEYRANGEEND LE 1).ZG288A  CK NUM       01599800
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           01599900
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01600000
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01600100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01600200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01600300
.ZG288A               ANOP  ,                                           01600400
.*-------------------------------------------------------------------   01600500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01600600
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01600700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01600800
                      AIF   (N'&SKEYRANGEEND GT 1).ZG288B  MULTI PARMS  01600900
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01601000
.ZG288B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG288C            01601100
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01601200
&ZMS                  SETC  ' '         *KRQDA*                         01601300
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01601400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01601500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01601600
.ZG288C               ANOP  ,                                           01601700
.*-------------------------------------------------------------------   01601800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01601900
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG288R  NOT I/O    01602000
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG288R       01602100
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01602200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG288P               01602300
                      AIF   (K'&ZCGPR GT 2).ZG288Q                      01602400
                      AIF   ('&ZCGPR' EQ '0').ZG288Q                    01602500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01602600
                      AIF   (T'&ZCGPR NE 'N').ZG288Q  INVALID REG NAME  01602700
.ZG288P               ANOP  ,                                           01602800
                      AIF   (T'&ZCGPR NE 'N').ZG288R  NON NUMERIC       01602900
                      AIF   ('&ZCGPR' LT '2').ZG288Q                    01603000
                      AIF   ('&ZCGPR' LE '12').ZG288R                   01603100
.ZG288Q               ANOP  ,                                           01603200
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           01603300
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01603400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01603500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01603600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01603700
.ZG288R               ANOP  ,                                           01603800
.*------------------------------------------------------------------    01603900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01604000
.ZG290                ANOP  ,                                           01604100
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01604200
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG290E  VALID ARG    01604300
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG290D  OMITTED     01604400
&ZASYSLNDX            SETA  0                                           01604500
.ZG290A               ANOP  ,           POSITIONAL MACRO KEY            01604600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01604700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG290C           01604800
&ZTLC                 SETC 'SKEYREQTYPE'                                01604900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG290A  01605000
.ZG290B               ANOP  ,                                           01605100
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01605200
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      01605300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01605400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01605500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01605600
                      AGO   .ZG290E                                     01605700
.ZG290C               ANOP  ,                                           01605800
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01605900
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           01606000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01606100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01606200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01606300
&ZMS                  SETC  '&ZMS "EQUAL",'                             01606400
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01606500
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01606600
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01606700
                      MNOTE 8,' &ZMS '                                  01606800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01606900
                      AGO   .ZG290E                                     01607000
.ZG290D               ANOP  ,                                           01607100
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01607200
.ZG290E               ANOP  ,                                           01607300
.*------------------------------------------------------------------    01607400
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01607500
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG290F  KEY       01607600
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG290F  PARM       01607700
&ZMS                  SETC  '"SKEYREQTYPE'      *KDEPA* MNOTE           01607800
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01607900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01608000
&ZMS                  SETC  '&ZMS '                                     01608100
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01608200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01608300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01608400
.ZG290F               ANOP  ,                                           01608500
.*------------------------------------------------------------------    01608600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01608700
.ZG292                ANOP  ,                                           01608800
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01608900
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG292E  VALID ARG    01609000
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG292D  OMITTED     01609100
&ZASYSLNDX            SETA  0                                           01609200
.ZG292A               ANOP  ,           POSITIONAL MACRO KEY            01609300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01609400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG292C           01609500
&ZTLC                 SETC 'SKEYCOMPARE'                                01609600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG292A  01609700
.ZG292B               ANOP  ,                                           01609800
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01609900
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      01610000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01610100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01610200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01610300
                      AGO   .ZG292E                                     01610400
.ZG292C               ANOP  ,                                           01610500
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01610600
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           01610700
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01610800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01610900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01611000
&ZMS                  SETC  '&ZMS "NO"'                                 01611100
&ZMS                  SETC  '&ZMS OR "YES".'                            01611200
                      MNOTE 8,' &ZMS '                                  01611300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01611400
                      AGO   .ZG292E                                     01611500
.ZG292D               ANOP  ,                                           01611600
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01611700
.ZG292E               ANOP  ,                                           01611800
.*------------------------------------------------------------------    01611900
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01612000
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG292F  KEY           01612100
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG292F  PARM       01612200
&ZMS                  SETC  '"SKEYCOMPARE'      *KDEPA* MNOTE           01612300
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01612400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01612500
&ZMS                  SETC  '&ZMS '                                     01612600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01612700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01612800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01612900
.ZG292F               ANOP  ,                                           01613000
.*-------------------------------------------------------------------   01613100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01613200
.ZG294                ANOP  ,                                           01613300
&ZTLC                 SETC 'SECONDARY'                                  01613400
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG331            01613500
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             01613600
                      AIF   (N'&KEYTYPE LE 1).ZG294A  CK NUM            01613700
&ZMS                  SETC  '"KEYTYPE='         *KPOSA* MNOTE           01613800
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            01613900
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            01614000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01614100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01614200
.ZG294A               ANOP  ,                                           01614300
.*----------------------------------------------------------------***   01614400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01614500
                      AIF   (N'&SECONDARYKEY LE 1).ZG296A  CK NUM       01614600
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           01614700
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01614800
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01614900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01615000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01615100
.ZG296A               ANOP  ,                                           01615200
.*-------------------------------------------------------------------   01615300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01615400
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01615500
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01615600
                      AIF   (N'&SECONDARYKEY GT 1).ZG296B  MULTI PARMS  01615700
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01615800
.ZG296B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG296C            01615900
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01616000
&ZMS                  SETC  ' '         *KRQDA*                         01616100
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01616200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01616300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01616400
.ZG296C               ANOP  ,                                           01616500
.*-------------------------------------------------------------------   01616600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01616700
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG296R  NOT I/O    01616800
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG296R       01616900
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01617000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG296P               01617100
                      AIF   (K'&ZCGPR GT 2).ZG296Q                      01617200
                      AIF   ('&ZCGPR' EQ '0').ZG296Q                    01617300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01617400
                      AIF   (T'&ZCGPR NE 'N').ZG296Q  INVALID REG NAME  01617500
.ZG296P               ANOP  ,                                           01617600
                      AIF   (T'&ZCGPR NE 'N').ZG296R  NON NUMERIC       01617700
                      AIF   ('&ZCGPR' LT '2').ZG296Q                    01617800
                      AIF   ('&ZCGPR' LE '12').ZG296R                   01617900
.ZG296Q               ANOP  ,                                           01618000
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           01618100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01618200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01618300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01618400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01618500
.ZG296R               ANOP  ,                                           01618600
.*------------------------------------------------------------------    01618700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01618800
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01618900
.*-------------------------------------------------------------------   01619000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01619100
.ZG299                ANOP  ,                                           01619200
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG299A             01619300
&ZTLC                 SETC 'EQUAL'                                      01619400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG300        01619500
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01619600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG299A  CK NUM        01619700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01619800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01619900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01620000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01620100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01620200
.ZG299A               ANOP  ,                                           01620300
.*------------------------------------------------------------------    01620400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01620500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01620600
.ZG299A0              AIF   (K'&SKEYRANGEEND LE 0).ZG299A1  OK          01620700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01620800
.ZG299A1              AIF   (K'&ZCVAL LE 0).ZG299A2  OK                 01620900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01621000
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01621100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01621200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01621300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01621400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01621500
.ZG299A2              ANOP  ,                                           01621600
.*-------------------------------------------------------------------   01621700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01621800
.ZG300                ANOP  ,                                           01621900
&ZTLC                 SETC 'LESSOREQUAL'                                01622000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG301        01622100
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01622200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG300A  CK NUM        01622300
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01622400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01622500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01622600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01622700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01622800
.ZG300A               ANOP  ,                                           01622900
.*------------------------------------------------------------------    01623000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01623100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01623200
.ZG300A0              AIF   (K'&SKEYRANGEEND LE 0).ZG300A1  OK          01623300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01623400
.ZG300A1              AIF   (K'&ZCVAL LE 0).ZG300A2  OK                 01623500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01623600
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01623700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01623800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01623900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01624000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01624100
.ZG300A2              ANOP  ,                                           01624200
.*-------------------------------------------------------------------   01624300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01624400
.ZG301                ANOP  ,                                           01624500
&ZTLC                 SETC 'GREATEROREQUAL'                             01624600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG302        01624700
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01624800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG301A  CK NUM        01624900
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01625000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01625100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01625200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01625300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01625400
.ZG301A               ANOP  ,                                           01625500
.*------------------------------------------------------------------    01625600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01625700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01625800
.ZG301A0              AIF   (K'&SKEYRANGEEND LE 0).ZG301A1  OK          01625900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01626000
.ZG301A1              AIF   (K'&ZCVAL LE 0).ZG301A2  OK                 01626100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01626200
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01626300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01626400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01626500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01626600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01626700
.ZG301A2              ANOP  ,                                           01626800
.*-------------------------------------------------------------------   01626900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01627000
.ZG302                ANOP  ,                                           01627100
&ZTLC                 SETC 'RANGE'                                      01627200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG306        01627300
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01627400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG302A  CK NUM        01627500
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01627600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01627700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01627800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01627900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01628000
.ZG302A               ANOP  ,                                           01628100
.*----------------------------------------------------------------***   01628200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01628300
                      AIF   (N'&SKEYRANGEEND LE 1).ZG304A  CK NUM       01628400
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           01628500
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01628600
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01628700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01628800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01628900
.ZG304A               ANOP  ,                                           01629000
.*-------------------------------------------------------------------   01629100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01629200
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01629300
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01629400
                      AIF   (N'&SKEYRANGEEND GT 1).ZG304B  MULTI PARMS  01629500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01629600
.ZG304B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG304C            01629700
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01629800
&ZMS                  SETC  ' '         *KRQDA*                         01629900
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01630000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01630100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01630200
.ZG304C               ANOP  ,                                           01630300
.*-------------------------------------------------------------------   01630400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01630500
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG304R  NOT I/O    01630600
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG304R       01630700
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01630800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG304P               01630900
                      AIF   (K'&ZCGPR GT 2).ZG304Q                      01631000
                      AIF   ('&ZCGPR' EQ '0').ZG304Q                    01631100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01631200
                      AIF   (T'&ZCGPR NE 'N').ZG304Q  INVALID REG NAME  01631300
.ZG304P               ANOP  ,                                           01631400
                      AIF   (T'&ZCGPR NE 'N').ZG304R  NON NUMERIC       01631500
                      AIF   ('&ZCGPR' LT '2').ZG304Q                    01631600
                      AIF   ('&ZCGPR' LE '12').ZG304R                   01631700
.ZG304Q               ANOP  ,                                           01631800
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           01631900
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01632000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01632100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01632200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01632300
.ZG304R               ANOP  ,                                           01632400
.*------------------------------------------------------------------    01632500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01632600
.ZG306                ANOP  ,                                           01632700
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01632800
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG306E  VALID ARG    01632900
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG306D  OMITTED     01633000
&ZASYSLNDX            SETA  0                                           01633100
.ZG306A               ANOP  ,           POSITIONAL MACRO KEY            01633200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01633300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG306C           01633400
&ZTLC                 SETC 'SKEYREQTYPE'                                01633500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG306A  01633600
.ZG306B               ANOP  ,                                           01633700
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01633800
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      01633900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01634000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01634100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01634200
                      AGO   .ZG306E                                     01634300
.ZG306C               ANOP  ,                                           01634400
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01634500
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           01634600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01634700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01634800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01634900
&ZMS                  SETC  '&ZMS "EQUAL",'                             01635000
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01635100
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01635200
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01635300
                      MNOTE 8,' &ZMS '                                  01635400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01635500
                      AGO   .ZG306E                                     01635600
.ZG306D               ANOP  ,                                           01635700
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01635800
.ZG306E               ANOP  ,                                           01635900
.*------------------------------------------------------------------    01636000
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01636100
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG306F  KEY       01636200
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG306F  PARM       01636300
&ZMS                  SETC  '"SKEYREQTYPE'      *KDEPA* MNOTE           01636400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01636500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01636600
&ZMS                  SETC  '&ZMS '                                     01636700
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01636800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01636900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01637000
.ZG306F               ANOP  ,                                           01637100
.*------------------------------------------------------------------    01637200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01637300
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01637400
.*-------------------------------------------------------------------   01637500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01637600
.ZG309                ANOP  ,                                           01637700
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG309A             01637800
&ZTLC                 SETC 'NO'                                         01637900
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG310        01638000
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01638100
                      AIF   (N'&SKEYCOMPARE LE 1).ZG309A  CK NUM        01638200
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01638300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01638400
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01638500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01638600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01638700
.ZG309A               ANOP  ,                                           01638800
.*-------------------------------------------------------------------   01638900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01639000
.ZG310                ANOP  ,                                           01639100
&ZTLC                 SETC 'YES'                                        01639200
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG311        01639300
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01639400
                      AIF   (N'&SKEYCOMPARE LE 1).ZG310A  CK NUM        01639500
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01639600
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01639700
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01639800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01639900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01640000
.ZG310A               ANOP  ,                                           01640100
.*------------------------------------------------------------------    01640200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01640300
.ZG311                ANOP  ,                                           01640400
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01640500
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG311E  VALID ARG    01640600
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG311D  OMITTED     01640700
&ZASYSLNDX            SETA  0                                           01640800
.ZG311A               ANOP  ,           POSITIONAL MACRO KEY            01640900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01641000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG311C           01641100
&ZTLC                 SETC 'SKEYCOMPARE'                                01641200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG311A  01641300
.ZG311B               ANOP  ,                                           01641400
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01641500
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      01641600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01641700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01641800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01641900
                      AGO   .ZG311E                                     01642000
.ZG311C               ANOP  ,                                           01642100
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01642200
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           01642300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01642400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01642500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01642600
&ZMS                  SETC  '&ZMS "NO"'                                 01642700
&ZMS                  SETC  '&ZMS OR "YES".'                            01642800
                      MNOTE 8,' &ZMS '                                  01642900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01643000
                      AGO   .ZG311E                                     01643100
.ZG311D               ANOP  ,                                           01643200
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01643300
.ZG311E               ANOP  ,                                           01643400
.*------------------------------------------------------------------    01643500
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01643600
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG311F  KEY       01643700
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG311F  PARM       01643800
&ZMS                  SETC  '"SKEYCOMPARE'      *KDEPA* MNOTE           01643900
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01644000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01644100
&ZMS                  SETC  '&ZMS '                                     01644200
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01644300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01644400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01644500
.ZG311F               ANOP  ,                                           01644600
.*------------------------------------------------------------------    01644700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01644800
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01644900
.*-------------------------------------------------------------------   01645000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01645100
.ZG314                ANOP  ,                                           01645200
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG314A              01645300
&ZTLC                 SETC 'NO'                                         01645400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG315         01645500
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01645600
                      AIF   (N'&KEYCOMPARE LE 1).ZG314A  CK NUM         01645700
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01645800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01645900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01646000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01646100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01646200
.ZG314A               ANOP  ,                                           01646300
.*------------------------------------------------------------------    01646400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01646500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01646600
.ZG314A0              AIF   (K'&ENTRYKEY LE 0).ZG314A1  OK              01646700
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01646800
.ZG314A1              AIF   (K'&KEYREQTYPE LE 0).ZG314A2  OK            01646900
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01647000
.ZG314A2              AIF   (K'&KEYRANGEEND LE 0).ZG314A3  OK           01647100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01647200
.ZG314A3              AIF   (K'&ZCVAL LE 0).ZG314A4  OK                 01647300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01647400
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           01647500
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01647600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01647700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01647800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01647900
.ZG314A4              ANOP  ,                                           01648000
.*-------------------------------------------------------------------   01648100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01648200
.ZG315                ANOP  ,                                           01648300
&ZTLC                 SETC 'YES'                                        01648400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG329         01648500
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01648600
                      AIF   (N'&KEYCOMPARE LE 1).ZG315A  CK NUM         01648700
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01648800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01648900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01649000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01649100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01649200
.ZG315A               ANOP  ,                                           01649300
.*----------------------------------------------------------------***   01649400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01649500
                      AIF   (N'&ENTRYKEY LE 1).ZG317A  CK NUM           01649600
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           01649700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01649800
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01649900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01650000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01650100
.ZG317A               ANOP  ,                                           01650200
.*-------------------------------------------------------------------   01650300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01650400
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01650500
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01650600
                      AIF   (N'&ENTRYKEY GT 1).ZG317B  MULTI PARMS      01650700
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01650800
.ZG317B               AIF   (K'&ENTRYKEY(1) GT 0).ZG317C                01650900
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01651000
&ZMS                  SETC  ' '         *KRQDA*                         01651100
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01651200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01651300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01651400
.ZG317C               ANOP  ,                                           01651500
.*-------------------------------------------------------------------   01651600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01651700
                      AIF   (K'&ZXENTRYKEY LE 0).ZG317R  NOT I/O        01651800
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG317R           01651900
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01652000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG317P               01652100
                      AIF   (K'&ZCGPR GT 2).ZG317Q                      01652200
                      AIF   ('&ZCGPR' EQ '0').ZG317Q                    01652300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01652400
                      AIF   (T'&ZCGPR NE 'N').ZG317Q  INVALID REG NAME  01652500
.ZG317P               ANOP  ,                                           01652600
                      AIF   (T'&ZCGPR NE 'N').ZG317R  NON NUMERIC       01652700
                      AIF   ('&ZCGPR' LT '2').ZG317Q                    01652800
                      AIF   ('&ZCGPR' LE '12').ZG317R                   01652900
.ZG317Q               ANOP  ,                                           01653000
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           01653100
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01653200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01653300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01653400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01653500
.ZG317R               ANOP  ,                                           01653600
.*------------------------------------------------------------------    01653700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01653800
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01653900
.*-------------------------------------------------------------------   01654000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01654100
.ZG320                ANOP  ,                                           01654200
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG320A              01654300
&ZTLC                 SETC 'EQUAL'                                      01654400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG321         01654500
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01654600
                      AIF   (N'&KEYREQTYPE LE 1).ZG320A  CK NUM         01654700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01654800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01654900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01655000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01655100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01655200
.ZG320A               ANOP  ,                                           01655300
.*------------------------------------------------------------------    01655400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01655500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01655600
.ZG320A0              AIF   (K'&KEYRANGEEND LE 0).ZG320A1  OK           01655700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01655800
.ZG320A1              AIF   (K'&ZCVAL LE 0).ZG320A2  OK                 01655900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01656000
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01656100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01656200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01656300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01656400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01656500
.ZG320A2              ANOP  ,                                           01656600
.*-------------------------------------------------------------------   01656700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01656800
.ZG321                ANOP  ,                                           01656900
&ZTLC                 SETC 'LESSOREQUAL'                                01657000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG322         01657100
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01657200
                      AIF   (N'&KEYREQTYPE LE 1).ZG321A  CK NUM         01657300
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01657400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01657500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01657600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01657700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01657800
.ZG321A               ANOP  ,                                           01657900
.*------------------------------------------------------------------    01658000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01658100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01658200
.ZG321A0              AIF   (K'&KEYRANGEEND LE 0).ZG321A1  OK           01658300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01658400
.ZG321A1              AIF   (K'&ZCVAL LE 0).ZG321A2  OK                 01658500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01658600
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01658700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01658800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01658900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01659000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01659100
.ZG321A2              ANOP  ,                                           01659200
.*-------------------------------------------------------------------   01659300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01659400
.ZG322                ANOP  ,                                           01659500
&ZTLC                 SETC 'GREATEROREQUAL'                             01659600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG323         01659700
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01659800
                      AIF   (N'&KEYREQTYPE LE 1).ZG322A  CK NUM         01659900
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01660000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01660100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01660200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01660300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01660400
.ZG322A               ANOP  ,                                           01660500
.*------------------------------------------------------------------    01660600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01660700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01660800
.ZG322A0              AIF   (K'&KEYRANGEEND LE 0).ZG322A1  OK           01660900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01661000
.ZG322A1              AIF   (K'&ZCVAL LE 0).ZG322A2  OK                 01661100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01661200
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01661300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01661400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01661500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01661600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01661700
.ZG322A2              ANOP  ,                                           01661800
.*-------------------------------------------------------------------   01661900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01662000
.ZG323                ANOP  ,                                           01662100
&ZTLC                 SETC 'RANGE'                                      01662200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG327         01662300
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01662400
                      AIF   (N'&KEYREQTYPE LE 1).ZG323A  CK NUM         01662500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01662600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01662700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01662800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01662900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01663000
.ZG323A               ANOP  ,                                           01663100
.*----------------------------------------------------------------***   01663200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01663300
                      AIF   (N'&KEYRANGEEND LE 1).ZG325A  CK NUM        01663400
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           01663500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01663600
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01663700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01663800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01663900
.ZG325A               ANOP  ,                                           01664000
.*-------------------------------------------------------------------   01664100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01664200
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01664300
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01664400
                      AIF   (N'&KEYRANGEEND GT 1).ZG325B  MULTI PARMS   01664500
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01664600
.ZG325B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG325C             01664700
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01664800
&ZMS                  SETC  ' '         *KRQDA*                         01664900
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01665000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01665100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01665200
.ZG325C               ANOP  ,                                           01665300
.*-------------------------------------------------------------------   01665400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01665500
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG325R  NOT I/O     01665600
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG325R        01665700
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01665800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG325P               01665900
                      AIF   (K'&ZCGPR GT 2).ZG325Q                      01666000
                      AIF   ('&ZCGPR' EQ '0').ZG325Q                    01666100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01666200
                      AIF   (T'&ZCGPR NE 'N').ZG325Q  INVALID REG NAME  01666300
.ZG325P               ANOP  ,                                           01666400
                      AIF   (T'&ZCGPR NE 'N').ZG325R  NON NUMERIC       01666500
                      AIF   ('&ZCGPR' LT '2').ZG325Q                    01666600
                      AIF   ('&ZCGPR' LE '12').ZG325R                   01666700
.ZG325Q               ANOP  ,                                           01666800
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           01666900
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01667000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01667100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01667200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01667300
.ZG325R               ANOP  ,                                           01667400
.*------------------------------------------------------------------    01667500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01667600
.ZG327                ANOP  ,                                           01667700
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01667800
                      AIF   (K'&XKEYREQTYPE GT 0).ZG327E  VALID ARG     01667900
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG327D  OMITTED      01668000
&ZASYSLNDX            SETA  0                                           01668100
.ZG327A               ANOP  ,           POSITIONAL MACRO KEY            01668200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01668300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG327C           01668400
&ZTLC                 SETC 'KEYREQTYPE'                                 01668500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG327A  01668600
.ZG327B               ANOP  ,                                           01668700
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01668800
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       01668900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01669000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01669100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01669200
                      AGO   .ZG327E                                     01669300
.ZG327C               ANOP  ,                                           01669400
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01669500
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           01669600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01669700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01669800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01669900
&ZMS                  SETC  '&ZMS "EQUAL",'                             01670000
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01670100
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01670200
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01670300
                      MNOTE 8,' &ZMS '                                  01670400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01670500
                      AGO   .ZG327E                                     01670600
.ZG327D               ANOP  ,                                           01670700
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01670800
.ZG327E               ANOP  ,                                           01670900
.*------------------------------------------------------------------    01671000
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01671100
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG327F  KEY           01671200
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG327F  PARM        01671300
&ZMS                  SETC  '"KEYREQTYPE'       *KDEPA* MNOTE           01671400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01671500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01671600
&ZMS                  SETC  '&ZMS '                                     01671700
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01671800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01671900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01672000
.ZG327F               ANOP  ,                                           01672100
.*------------------------------------------------------------------    01672200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01672300
.ZG329                ANOP  ,                                           01672400
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01672500
                      AIF   (K'&XKEYCOMPARE GT 0).ZG329E  VALID ARG     01672600
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG329D  OMITTED      01672700
&ZASYSLNDX            SETA  0                                           01672800
.ZG329A               ANOP  ,           POSITIONAL MACRO KEY            01672900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01673000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG329C           01673100
&ZTLC                 SETC 'KEYCOMPARE'                                 01673200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG329A  01673300
.ZG329B               ANOP  ,                                           01673400
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01673500
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       01673600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01673700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01673800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01673900
                      AGO   .ZG329E                                     01674000
.ZG329C               ANOP  ,                                           01674100
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01674200
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           01674300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01674400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01674500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01674600
&ZMS                  SETC  '&ZMS "NO"'                                 01674700
&ZMS                  SETC  '&ZMS OR "YES".'                            01674800
                      MNOTE 8,' &ZMS '                                  01674900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01675000
                      AGO   .ZG329E                                     01675100
.ZG329D               ANOP  ,                                           01675200
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01675300
.ZG329E               ANOP  ,                                           01675400
.*------------------------------------------------------------------    01675500
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01675600
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG329F  KEY       01675700
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG329F  PARM        01675800
&ZMS                  SETC  '"KEYCOMPARE'       *KDEPA* MNOTE           01675900
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01676000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01676100
&ZMS                  SETC  '&ZMS '                                     01676200
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01676300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01676400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01676500
.ZG329F               ANOP  ,                                           01676600
.*------------------------------------------------------------------    01676700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01676800
.ZG331                ANOP  ,                                           01676900
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   01677000
                      AIF   (K'&XKEYTYPE GT 0).ZG331E  VALID ARG        01677100
                      AIF   (T'&KEYTYPE EQ 'O').ZG331D  OMITTED         01677200
&ZASYSLNDX            SETA  0                                           01677300
.ZG331A               ANOP  ,           POSITIONAL MACRO KEY            01677400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01677500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG331C           01677600
&ZTLC                 SETC 'KEYTYPE'                                    01677700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG331A  01677800
.ZG331B               ANOP  ,                                           01677900
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 01678000
&ZMS                  SETC  'THE "KEYTYPE" KEY'  *KOPTA* MNOTE          01678100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01678200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01678300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01678400
                      AGO   .ZG331E                                     01678500
.ZG331C               ANOP  ,                                           01678600
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 01678700
&ZMS                  SETC  '"KEYTYPE='         *KUKWA* MNOTE           01678800
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            01678900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01679000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01679100
&ZMS                  SETC  '&ZMS "ENTRY"'                              01679200
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01679300
                      MNOTE 8,' &ZMS '                                  01679400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01679500
                      AGO   .ZG331E                                     01679600
.ZG331D               ANOP  ,                                           01679700
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             01679800
.ZG331E               ANOP  ,                                           01679900
.*------------------------------------------------------------------    01680000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01680100
.ZG332                ANOP  ,                                           01680200
&ZXLOCATOR            SETC  'INPUT'     SET IN/OUTPUT                   01680300
                      AIF   (K'&XLOCATOR GT 0).ZG332E  VALID ARG        01680400
                      AIF   (T'&LOCATOR EQ 'O').ZG332D  OMITTED         01680500
&ZASYSLNDX            SETA  0                                           01680600
.ZG332A               ANOP  ,           POSITIONAL MACRO KEY            01680700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01680800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG332C           01680900
&ZTLC                 SETC 'LOCATOR'                                    01681000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG332A  01681100
.ZG332B               ANOP  ,                                           01681200
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 01681300
&ZMS                  SETC  'THE "LOCATOR" KEY'  *KOPTA* MNOTE          01681400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01681500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01681600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01681700
                      AGO   .ZG332E                                     01681800
.ZG332C               ANOP  ,                                           01681900
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 01682000
&ZMS                  SETC  '"LOCATOR='         *KUKWA* MNOTE           01682100
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01682200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01682300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01682400
&ZMS                  SETC  '&ZMS "CURSOR",'                            01682500
&ZMS                  SETC  '&ZMS "ENTRYID",'                           01682600
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         01682700
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          01682800
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         01682900
                      MNOTE 8,' &ZMS '                                  01683000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01683100
                      AGO   .ZG332E                                     01683200
.ZG332D               ANOP  ,                                           01683300
&XLOCATOR             SETC  'CURSOR'    SET DEFAULT KEYWORD             01683400
.ZG332E               ANOP  ,                                           01683500
.*------------------------------------------------------------------    01683600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01683700
                      AIF   (K'&LOCATOR(1) GT 0).ZG332F  PARM           01683800
&XLOCATOR             SETC  ''          ENSURE NULL KEYWORD             01683900
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 01684000
&ZMS                  SETC  'THE'                                       01684100
&ZMS                  SETC  '&ZMS "LOCATOR" KEY AND ITS'                01684200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01684300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01684400
&ZMS                  SETC  '&ZMS "CURSOR",'                            01684500
&ZMS                  SETC  '&ZMS "ENTRYID",'                           01684600
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         01684700
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          01684800
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         01684900
                      MNOTE 8,' &ZMS '                                  01685000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01685100
.ZG332F               ANOP  ,                                           01685200
.*------------------------------------------------------------------    01685300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01685400
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01685500
.*-------------------------------------------------------------------   01685600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01685700
.ZG335                ANOP  ,                                           01685800
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG335A             01685900
&ZTLC                 SETC 'NO'                                         01686000
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG336        01686100
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     01686200
                      AIF   (N'&VERSCOMPARE LE 1).ZG335A  CK NUM        01686300
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           01686400
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        01686500
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        01686600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01686700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01686800
.ZG335A               ANOP  ,                                           01686900
.*------------------------------------------------------------------    01687000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01687100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01687200
.ZG335A0              AIF   (K'&VERSCOMP LE 0).ZG335A1  OK              01687300
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01687400
.ZG335A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG335A2  OK          01687500
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01687600
.ZG335A2              AIF   (K'&ZCVAL LE 0).ZG335A3  OK                 01687700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01687800
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           01687900
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       01688000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01688100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01688200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01688300
.ZG335A3              ANOP  ,                                           01688400
.*-------------------------------------------------------------------   01688500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01688600
.ZG336                ANOP  ,                                           01688700
&ZTLC                 SETC 'YES'                                        01688800
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG345        01688900
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     01689000
                      AIF   (N'&VERSCOMPARE LE 1).ZG336A  CK NUM        01689100
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           01689200
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        01689300
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        01689400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01689500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01689600
.ZG336A               ANOP  ,                                           01689700
.*----------------------------------------------------------------***   01689800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01689900
                      AIF   (N'&VERSCOMP LE 1).ZG338A  CK NUM           01690000
&ZMS                  SETC  '"VERSCOMP='        *KPOSA* MNOTE           01690100
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01690200
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01690300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01690400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01690500
.ZG338A               ANOP  ,                                           01690600
.*-------------------------------------------------------------------   01690700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01690800
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01690900
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           01691000
                      AIF   (N'&VERSCOMP GT 1).ZG338B  MULTI PARMS      01691100
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           01691200
.ZG338B               AIF   (K'&VERSCOMP(1) GT 0).ZG338C                01691300
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 01691400
&ZMS                  SETC  ' '         *KRQDA*                         01691500
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               01691600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01691700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01691800
.ZG338C               ANOP  ,                                           01691900
.*-------------------------------------------------------------------   01692000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01692100
                      AIF   (K'&ZXVERSCOMP LE 0).ZG338R  NOT I/O        01692200
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG338R           01692300
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              01692400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG338P               01692500
                      AIF   (K'&ZCGPR GT 2).ZG338Q                      01692600
                      AIF   ('&ZCGPR' EQ '0').ZG338Q                    01692700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01692800
                      AIF   (T'&ZCGPR NE 'N').ZG338Q  INVALID REG NAME  01692900
.ZG338P               ANOP  ,                                           01693000
                      AIF   (T'&ZCGPR NE 'N').ZG338R  NON NUMERIC       01693100
                      AIF   ('&ZCGPR' LT '2').ZG338Q                    01693200
                      AIF   ('&ZCGPR' LE '12').ZG338R                   01693300
.ZG338Q               ANOP  ,                                           01693400
&ZMS                  SETC  '"VERSCOMP='        *KGPRA* MNOTE           01693500
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01693600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01693700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01693800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01693900
.ZG338R               ANOP  ,                                           01694000
.*----------------------------------------------------------------***   01694100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01694200
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG340A  CK NUM       01694300
&ZMS                  SETC  '"VERSCOMPTYPE='    *KPOSA* MNOTE           01694400
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01694500
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       01694600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01694700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01694800
.ZG340A               ANOP  ,                                           01694900
.*-------------------------------------------------------------------   01695000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01695100
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01695200
.ZG341A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG342A                  01695300
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01695400
.*-------------------------------------------------------------------   01695500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01695600
.ZG342A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG343A            01695700
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01695800
.*-------------------------------------------------------------------   01695900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01696000
.ZG343A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG343C  KEYWORD     01696100
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG343B            01696200
&ZMS                  SETC  '"VERSCOMPTYPE='    *KUKWA* MNOTE           01696300
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01696400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01696500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01696600
&ZMS                  SETC  '&ZMS "EQUAL"'                              01696700
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01696800
                      MNOTE 8,' &ZMS '                                  01696900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01697000
.ZG343B               ANOP  ,                                           01697100
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01697200
.ZG343C               ANOP  ,                                           01697300
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01697400
.*-------------------------------------------------------------------   01697500
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01697600
                      AIF   (K'&VERSCOMP(1) GT 0).ZG343D  KEY           01697700
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG343D  PARM      01697800
&ZMS                  SETC  '"VERSCOMPTYPE'     *KDEPA* MNOTE           01697900
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      01698000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01698100
&ZMS                  SETC  '&ZMS '                                     01698200
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01698300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01698400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01698500
.ZG343D               ANOP  ,                                           01698600
.*------------------------------------------------------------------    01698700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01698800
.ZG345                ANOP  ,                                           01698900
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01699000
                      AIF   (K'&XVERSCOMPARE GT 0).ZG345E  VALID ARG    01699100
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG345D  OMITTED     01699200
&ZASYSLNDX            SETA  0                                           01699300
.ZG345A               ANOP  ,           POSITIONAL MACRO KEY            01699400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01699500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG345C           01699600
&ZTLC                 SETC 'VERSCOMPARE'                                01699700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG345A  01699800
.ZG345B               ANOP  ,                                           01699900
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 01700000
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'  *KOPTA* MNOTE      01700100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01700200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01700300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01700400
                      AGO   .ZG345E                                     01700500
.ZG345C               ANOP  ,                                           01700600
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 01700700
&ZMS                  SETC  '"VERSCOMPARE='     *KUKWA* MNOTE           01700800
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        01700900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01701000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01701100
&ZMS                  SETC  '&ZMS "NO"'                                 01701200
&ZMS                  SETC  '&ZMS OR "YES".'                            01701300
                      MNOTE 8,' &ZMS '                                  01701400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01701500
                      AGO   .ZG345E                                     01701600
.ZG345D               ANOP  ,                                           01701700
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01701800
.ZG345E               ANOP  ,                                           01701900
.*----------------------------------------------------------------***   01702000
.***AG.KMEKY01 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     01702100
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            01702200
                      AIF   (K'&BUFLIST LE 0).ZG347C                    01702300
&ZXDATAREA            SETC  'OUTPUT'    SET IN/OUTPUT                   01702400
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   01702500
&ZXBUFLIST            SETC  'OUTPUT'    SET IN/OUTPUT                   01702600
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      01702700
                      AIF   (N'&BUFLIST GT 1).ZG347A                    01702800
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              01702900
.ZG347A               AIF   (N'&BUFLIST LE 1).ZG347B  CK NUM            01703000
&ZMS                  SETC  '"BUFLIST='         *KPOSA* MNOTE           01703100
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01703200
&ZMS                  SETC  '&ZMS "BUFLIST"'                            01703300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01703400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01703500
.ZG347B               AIF   (K'&XBUFLIST GT 0).ZG347C  ONE PARM         01703600
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01703700
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 01703800
&ZMS                  SETC  ' '         *KRQDA*                         01703900
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                01704000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01704100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01704200
.ZG347C               ANOP  ,                                           01704300
.*----------------------------------------------------------------***   01704400
.***AG.KMEKY02 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     01704500
                      AIF   (K'&BUFFER LE 0).ZG372D  NO ME KEY          01704600
                      AIF   (N'&BUFFER LE 1).ZG372A  CK NUM             01704700
&ZMS                  SETC  '"BUFFER='  *KPOSA* MNOTE                   01704800
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01704900
&ZMS                  SETC  '&ZMS "BUFFER"'                             01705000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01705100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01705200
.ZG372A               AIF   (K'&XDATAREA LE 0).ZG372B                   01705300
&ZMS                  SETC  '"BUFFER'   *KMEKA* MNOTE                   01705400
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01705500
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       01705600
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          01705700
                      MNOTE 8,' &ZMS KEY.'                              01705800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01705900
                      AGO   .ZG372D                                     01706000
.*                                                                      01706100
.ZG372B               ANOP  ,                                           01706200
&ZXDATAREA            SETC  'OUTPUT'    SET IN/OUTPUT                   01706300
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   01706400
&ZXBUFFER             SETC  'OUTPUT'    SET IN/OUTPUT                   01706500
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      01706600
                      AIF   (N'&BUFFER GT 1).ZG372C                     01706700
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              01706800
.ZG372C               AIF   (K'&XBUFFER GT 0).ZG372D  ONE PARM          01706900
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01707000
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 01707100
&ZMS                  SETC  ' '         *KRQDA*                         01707200
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 01707300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01707400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01707500
.ZG372D               ANOP  ,                                           01707600
.*------------------------------------------------------------------    01707700
.***AG.KME4Y09 NAME, RQD OUTPUT, ME KEYS -CHECK IF KEY ENTERED          01707800
                      AIF   (K'&XDATAREA GT 0).ZG384B                   01707900
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01708000
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 01708100
&XDATAREA             SETC  ''          ENSURE NULL                     01708200
&XBUFLIST             SETC  ''          ENSURE NULL                     01708300
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       01708400
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         01708500
&ZMS                  SETC  '&ZMS REQUIRED:'                            01708600
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            01708700
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           01708800
                      MNOTE 8,' &ZMS '                                  01708900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01709000
.ZG384B               ANOP  ,                                           01709100
.*-------------------------------------------------------------------   01709200
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          01709300
.ZG347                AIF   ('&XDATAREA' NE 'BUFLIST').ZG372            01709400
.*-------------------------------------------------------------------   01709500
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               01709600
&ZCVAL                SETC ''           ERROR KEY FIELD                 01709700
.ZG347I0              AIF   (K'&BUFSIZE LE 0).ZG347I1                   01709800
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          01709900
.ZG347I1              AIF   (K'&ZCVAL LE 0).ZG347J  KEY                 01710000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01710100
&ZMS                  SETC  '"BUFLIST'  *KMEIA* MNOTE                   01710200
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           01710300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01710400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01710500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01710600
.ZG347J               ANOP  ,                                           01710700
.*-------------------------------------------------------------------   01710800
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                01710900
                      AIF   (K'&ZXBUFLIST LE 0).ZG347R  NOT I/O         01711000
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG347R            01711100
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                01711200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG347P               01711300
                      AIF   (K'&ZCGPR GT 2).ZG347Q                      01711400
                      AIF   ('&ZCGPR' EQ '0').ZG347Q                    01711500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01711600
                      AIF   (T'&ZCGPR NE 'N').ZG347Q  INVALID REG NAME  01711700
.ZG347P               ANOP  ,                                           01711800
                      AIF   (T'&ZCGPR NE 'N').ZG347R  NON NUMERIC       01711900
                      AIF   ('&ZCGPR' LT '2').ZG347Q                    01712000
                      AIF   ('&ZCGPR' LE '12').ZG347R                   01712100
.ZG347Q               ANOP  ,                                           01712200
&ZMS                  SETC  '"BUFLIST='         *KGPRA* MNOTE           01712300
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01712400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01712500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01712600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01712700
.ZG347R               ANOP  ,                                           01712800
.*------------------------------------------------------------------    01712900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01713000
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            01713100
.*-------------------------------------------------------------------   01713200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01713300
.ZG350                ANOP  ,                                           01713400
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG350A             01713500
&ZTLC                 SETC 'VIRTUAL'                                    01713600
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG362        01713700
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     01713800
                      AIF   (N'&BUFADDRTYPE LE 1).ZG350A  CK NUM        01713900
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           01714000
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01714100
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01714200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01714300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01714400
.ZG350A               ANOP  ,                                           01714500
.*------------------------------------------------------------------    01714600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01714700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01714800
.ZG350A0              AIF   (K'&BUFADDRSIZE LE 0).ZG350A1  OK           01714900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     01715000
.ZG350A1              AIF   (K'&ZCVAL LE 0).ZG350A2  OK                 01715100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01715200
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           01715300
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       01715400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01715500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01715600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01715700
.ZG350A2              ANOP  ,                                           01715800
.*------------------------------------------------------------------    01715900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01716000
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01716100
.*-------------------------------------------------------------------   01716200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01716300
.ZG353                ANOP  ,                                           01716400
                      AIF   (K'&PAGEABLE(1) LE 0).ZG353A                01716500
&ZTLC                 SETC 'YES'                                        01716600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG357           01716700
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01716800
                      AIF   (N'&PAGEABLE LE 1).ZG353A  CK NUM           01716900
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           01717000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01717100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01717200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01717300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01717400
.ZG353A               ANOP  ,                                           01717500
.*----------------------------------------------------------------***   01717600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01717700
                      AIF   (N'&BUFSTGKEY LE 1).ZG355A  CK NUM          01717800
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           01717900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01718000
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01718100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01718200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01718300
.ZG355A               ANOP  ,                                           01718400
.*-------------------------------------------------------------------   01718500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01718600
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01718700
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01718800
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG355B  PARM         01718900
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01719000
                      AIF   (N'&BUFSTGKEY GT 1).ZG355B  MULTI PARMS     01719100
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01719200
.ZG355B               ANOP  ,                                           01719300
.*-------------------------------------------------------------------   01719400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01719500
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG355R  NOT I/O       01719600
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG355R                  01719700
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG355R          01719800
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01719900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG355P               01720000
                      AIF   (K'&ZCGPR GT 2).ZG355Q                      01720100
                      AIF   ('&ZCGPR' EQ '0').ZG355Q                    01720200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01720300
                      AIF   (T'&ZCGPR NE 'N').ZG355Q  INVALID REG NAME  01720400
.ZG355P               ANOP  ,                                           01720500
                      AIF   (T'&ZCGPR NE 'N').ZG355R  NON NUMERIC       01720600
                      AIF   ('&ZCGPR' LT '2').ZG355Q                    01720700
                      AIF   ('&ZCGPR' LE '12').ZG355R                   01720800
.ZG355Q               ANOP  ,                                           01720900
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           01721000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01721100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01721200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01721300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01721400
.ZG355R               ANOP  ,                                           01721500
.*-------------------------------------------------------------------   01721600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01721700
.ZG357                ANOP  ,                                           01721800
&ZTLC                 SETC 'NO'                                         01721900
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG358           01722000
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01722100
                      AIF   (N'&PAGEABLE LE 1).ZG357A  CK NUM           01722200
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           01722300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01722400
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01722500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01722600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01722700
.ZG357A               ANOP  ,                                           01722800
.*------------------------------------------------------------------    01722900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01723000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01723100
.ZG357A0              AIF   (K'&BUFSTGKEY LE 0).ZG357A1  OK             01723200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01723300
.ZG357A1              AIF   (K'&ZCVAL LE 0).ZG357A2  OK                 01723400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01723500
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           01723600
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01723700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01723800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01723900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01724000
.ZG357A2              ANOP  ,                                           01724100
.*------------------------------------------------------------------    01724200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01724300
.ZG358                ANOP  ,                                           01724400
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01724500
                      AIF   (K'&XPAGEABLE GT 0).ZG358E  VALID ARG       01724600
                      AIF   (T'&PAGEABLE EQ 'O').ZG358D  OMITTED        01724700
&ZASYSLNDX            SETA  0                                           01724800
.ZG358A               ANOP  ,           POSITIONAL MACRO KEY            01724900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01725000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG358C           01725100
&ZTLC                 SETC 'PAGEABLE'                                   01725200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG358A  01725300
.ZG358B               ANOP  ,                                           01725400
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01725500
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         01725600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01725700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01725800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01725900
                      AGO   .ZG358E                                     01726000
.ZG358C               ANOP  ,                                           01726100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01726200
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           01726300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01726400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01726500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01726600
&ZMS                  SETC  '&ZMS "YES"'                                01726700
&ZMS                  SETC  '&ZMS OR "NO".'                             01726800
                      MNOTE 8,' &ZMS '                                  01726900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01727000
                      AGO   .ZG358E                                     01727100
.ZG358D               ANOP  ,                                           01727200
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01727300
.ZG358E               ANOP  ,                                           01727400
.*----------------------------------------------------------------***   01727500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01727600
                      AIF   (N'&BUFALET LE 1).ZG360A  CK NUM            01727700
&ZMS                  SETC  '"BUFALET='         *KPOSA* MNOTE           01727800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01727900
&ZMS                  SETC  '&ZMS "BUFALET"'                            01728000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01728100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01728200
.ZG360A               ANOP  ,                                           01728300
.*-------------------------------------------------------------------   01728400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01728500
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   01728600
&XBUFALET             SETC  'NO_BUFALET'                                01728700
                      AIF   (K'&BUFALET(1) LE 0).ZG360B  PARM           01728800
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           01728900
                      AIF   (N'&BUFALET GT 1).ZG360B  MULTI PARMS       01729000
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   01729100
.ZG360B               ANOP  ,                                           01729200
.*-------------------------------------------------------------------   01729300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01729400
                      AIF   (K'&ZXBUFALET LE 0).ZG360R  NOT I/O         01729500
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG360R                     01729600
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG360R            01729700
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                01729800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG360P               01729900
                      AIF   (K'&ZCGPR GT 2).ZG360Q                      01730000
                      AIF   ('&ZCGPR' EQ '0').ZG360Q                    01730100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01730200
                      AIF   (T'&ZCGPR NE 'N').ZG360Q  INVALID REG NAME  01730300
.ZG360P               ANOP  ,                                           01730400
                      AIF   (T'&ZCGPR NE 'N').ZG360R  NON NUMERIC       01730500
                      AIF   ('&ZCGPR' LT '2').ZG360Q                    01730600
                      AIF   ('&ZCGPR' LE '12').ZG360R                   01730700
.ZG360Q               ANOP  ,                                           01730800
&ZMS                  SETC  '"BUFALET='         *KGPRA* MNOTE           01730900
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01731000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01731100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01731200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01731300
.ZG360R               ANOP  ,                                           01731400
.*-------------------------------------------------------------------   01731500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01731600
.ZG362                ANOP  ,                                           01731700
&ZTLC                 SETC 'REAL'                                       01731800
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG368        01731900
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     01732000
                      AIF   (N'&BUFADDRTYPE LE 1).ZG362A  CK NUM        01732100
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           01732200
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01732300
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01732400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01732500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01732600
.ZG362A               ANOP  ,                                           01732700
.*------------------------------------------------------------------    01732800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01732900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01733000
.ZG362A0              AIF   (K'&PAGEABLE LE 0).ZG362A1  OK              01733100
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      01733200
.ZG362A1              AIF   (K'&BUFSTGKEY LE 0).ZG362A2  OK             01733300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01733400
.ZG362A2              AIF   (K'&BUFALET LE 0).ZG362A3  OK               01733500
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      01733600
.ZG362A3              AIF   (K'&ZCVAL LE 0).ZG362A4  OK                 01733700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01733800
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           01733900
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       01734000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01734100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01734200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01734300
.ZG362A4              ANOP  ,                                           01734400
.*------------------------------------------------------------------    01734500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01734600
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01734700
.*-------------------------------------------------------------------   01734800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01734900
.ZG365                ANOP  ,                                           01735000
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG365A             01735100
&ZTLC                 SETC '31'                                         01735200
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG366        01735300
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01735400
                      AIF   (N'&BUFADDRSIZE LE 1).ZG365A  CK NUM        01735500
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           01735600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01735700
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01735800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01735900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01736000
.ZG365A               ANOP  ,                                           01736100
.*-------------------------------------------------------------------   01736200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01736300
.ZG366                ANOP  ,                                           01736400
&ZTLC                 SETC '64'                                         01736500
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG367        01736600
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01736700
                      AIF   (N'&BUFADDRSIZE LE 1).ZG366A  CK NUM        01736800
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           01736900
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01737000
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01737100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01737200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01737300
.ZG366A               ANOP  ,                                           01737400
.*------------------------------------------------------------------    01737500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01737600
.ZG367                ANOP  ,                                           01737700
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01737800
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG367E  VALID ARG    01737900
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG367D  OMITTED     01738000
&ZASYSLNDX            SETA  0                                           01738100
.ZG367A               ANOP  ,           POSITIONAL MACRO KEY            01738200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01738300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG367C           01738400
&ZTLC                 SETC 'BUFADDRSIZE'                                01738500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG367A  01738600
.ZG367B               ANOP  ,                                           01738700
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01738800
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE      01738900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01739000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01739100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01739200
                      AGO   .ZG367E                                     01739300
.ZG367C               ANOP  ,                                           01739400
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01739500
&ZMS                  SETC  '"BUFADDRSIZE='     *KUKWA* MNOTE           01739600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01739700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01739800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01739900
&ZMS                  SETC  '&ZMS "31"'                                 01740000
&ZMS                  SETC  '&ZMS OR "64".'                             01740100
                      MNOTE 8,' &ZMS '                                  01740200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01740300
                      AGO   .ZG367E                                     01740400
.ZG367D               ANOP  ,                                           01740500
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01740600
.ZG367E               ANOP  ,                                           01740700
.*------------------------------------------------------------------    01740800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01740900
.ZG368                ANOP  ,                                           01741000
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01741100
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG368E  VALID ARG    01741200
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG368D  OMITTED     01741300
&ZASYSLNDX            SETA  0                                           01741400
.ZG368A               ANOP  ,           POSITIONAL MACRO KEY            01741500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01741600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG368C           01741700
&ZTLC                 SETC 'BUFADDRTYPE'                                01741800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG368A  01741900
.ZG368B               ANOP  ,                                           01742000
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01742100
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE      01742200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01742300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01742400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01742500
                      AGO   .ZG368E                                     01742600
.ZG368C               ANOP  ,                                           01742700
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01742800
&ZMS                  SETC  '"BUFADDRTYPE='     *KUKWA* MNOTE           01742900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01743000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01743100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01743200
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            01743300
&ZMS                  SETC  '&ZMS OR "REAL".'                           01743400
                      MNOTE 8,' &ZMS '                                  01743500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01743600
                      AGO   .ZG368E                                     01743700
.ZG368D               ANOP  ,                                           01743800
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             01743900
.ZG368E               ANOP  ,                                           01744000
.*----------------------------------------------------------------***   01744100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01744200
                      AIF   (N'&BUFNUM LE 1).ZG370A  CK NUM             01744300
&ZMS                  SETC  '"BUFNUM='  *KPOSA* MNOTE                   01744400
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01744500
&ZMS                  SETC  '&ZMS "BUFNUM"'                             01744600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01744700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01744800
.ZG370A               ANOP  ,                                           01744900
.*-------------------------------------------------------------------   01745000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01745100
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   01745200
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           01745300
                      AIF   (N'&BUFNUM GT 1).ZG370B  MULTI PARMS        01745400
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   01745500
.ZG370B               AIF   (K'&BUFNUM(1) GT 0).ZG370C                  01745600
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 01745700
&ZMS                  SETC  ' '         *KRQDA*                         01745800
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 01745900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01746000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01746100
.ZG370C               ANOP  ,                                           01746200
.*-------------------------------------------------------------------   01746300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01746400
                      AIF   (K'&ZXBUFNUM LE 0).ZG370R  NOT I/O          01746500
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG370R             01746600
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  01746700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG370P               01746800
                      AIF   (K'&ZCGPR GT 2).ZG370Q                      01746900
                      AIF   ('&ZCGPR' EQ '0').ZG370Q                    01747000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01747100
                      AIF   (T'&ZCGPR NE 'N').ZG370Q  INVALID REG NAME  01747200
.ZG370P               ANOP  ,                                           01747300
                      AIF   (T'&ZCGPR NE 'N').ZG370R  NON NUMERIC       01747400
                      AIF   ('&ZCGPR' LT '2').ZG370Q                    01747500
                      AIF   ('&ZCGPR' LE '12').ZG370R                   01747600
.ZG370Q               ANOP  ,                                           01747700
&ZMS                  SETC  '"BUFNUM='  *KGPRA* MNOTE                   01747800
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01747900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01748000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01748100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01748200
.ZG370R               ANOP  ,                                           01748300
.*-------------------------------------------------------------------   01748400
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          01748500
.ZG372                AIF   ('&XDATAREA' NE 'BUFFER').ZG384             01748600
.*-------------------------------------------------------------------   01748700
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               01748800
&ZCVAL                SETC ''           ERROR KEY FIELD                 01748900
.ZG372I0              AIF   (K'&BUFADDRTYPE LE 0).ZG372I1               01749000
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         01749100
.ZG372I1              AIF   (K'&BUFALET LE 0).ZG372I2                   01749200
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          01749300
.ZG372I2              AIF   (K'&BUFADDRSIZE LE 0).ZG372I3               01749400
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         01749500
.ZG372I3              AIF   (K'&BUFNUM LE 0).ZG372I4                    01749600
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          01749700
.ZG372I4              AIF   (K'&ZCVAL LE 0).ZG372J  KEY                 01749800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01749900
&ZMS                  SETC  '"BUFFER'   *KMEIA* MNOTE                   01750000
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01750100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01750200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01750300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01750400
.ZG372J               ANOP  ,                                           01750500
.*-------------------------------------------------------------------   01750600
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                01750700
                      AIF   (K'&ZXBUFFER LE 0).ZG372R  NOT I/O          01750800
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG372R             01750900
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  01751000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG372P               01751100
                      AIF   (K'&ZCGPR GT 2).ZG372Q                      01751200
                      AIF   ('&ZCGPR' EQ '0').ZG372Q                    01751300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01751400
                      AIF   (T'&ZCGPR NE 'N').ZG372Q  INVALID REG NAME  01751500
.ZG372P               ANOP  ,                                           01751600
                      AIF   (T'&ZCGPR NE 'N').ZG372R  NON NUMERIC       01751700
                      AIF   ('&ZCGPR' LT '2').ZG372Q                    01751800
                      AIF   ('&ZCGPR' LE '12').ZG372R                   01751900
.ZG372Q               ANOP  ,                                           01752000
&ZMS                  SETC  '"BUFFER='  *KGPRA* MNOTE                   01752100
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01752200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01752300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01752400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01752500
.ZG372R               ANOP  ,                                           01752600
.*------------------------------------------------------------------    01752700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01752800
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01752900
.*-------------------------------------------------------------------   01753000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01753100
.ZG375                ANOP  ,                                           01753200
                      AIF   (K'&PAGEABLE(1) LE 0).ZG375A                01753300
&ZTLC                 SETC 'YES'                                        01753400
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG379           01753500
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01753600
                      AIF   (N'&PAGEABLE LE 1).ZG375A  CK NUM           01753700
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           01753800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01753900
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01754000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01754100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01754200
.ZG375A               ANOP  ,                                           01754300
.*----------------------------------------------------------------***   01754400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01754500
                      AIF   (N'&BUFSTGKEY LE 1).ZG377A  CK NUM          01754600
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           01754700
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01754800
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01754900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01755000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01755100
.ZG377A               ANOP  ,                                           01755200
.*-------------------------------------------------------------------   01755300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01755400
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01755500
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01755600
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG377B  PARM         01755700
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01755800
                      AIF   (N'&BUFSTGKEY GT 1).ZG377B  MULTI PARMS     01755900
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01756000
.ZG377B               ANOP  ,                                           01756100
.*-------------------------------------------------------------------   01756200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01756300
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG377R  NOT I/O       01756400
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG377R                  01756500
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG377R          01756600
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01756700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG377P               01756800
                      AIF   (K'&ZCGPR GT 2).ZG377Q                      01756900
                      AIF   ('&ZCGPR' EQ '0').ZG377Q                    01757000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01757100
                      AIF   (T'&ZCGPR NE 'N').ZG377Q  INVALID REG NAME  01757200
.ZG377P               ANOP  ,                                           01757300
                      AIF   (T'&ZCGPR NE 'N').ZG377R  NON NUMERIC       01757400
                      AIF   ('&ZCGPR' LT '2').ZG377Q                    01757500
                      AIF   ('&ZCGPR' LE '12').ZG377R                   01757600
.ZG377Q               ANOP  ,                                           01757700
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           01757800
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01757900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01758000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01758100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01758200
.ZG377R               ANOP  ,                                           01758300
.*-------------------------------------------------------------------   01758400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01758500
.ZG379                ANOP  ,                                           01758600
&ZTLC                 SETC 'NO'                                         01758700
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG380           01758800
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01758900
                      AIF   (N'&PAGEABLE LE 1).ZG379A  CK NUM           01759000
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           01759100
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01759200
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01759300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01759400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01759500
.ZG379A               ANOP  ,                                           01759600
.*------------------------------------------------------------------    01759700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01759800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01759900
.ZG379A0              AIF   (K'&BUFSTGKEY LE 0).ZG379A1  OK             01760000
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01760100
.ZG379A1              AIF   (K'&ZCVAL LE 0).ZG379A2  OK                 01760200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01760300
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           01760400
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01760500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01760600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01760700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01760800
.ZG379A2              ANOP  ,                                           01760900
.*------------------------------------------------------------------    01761000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01761100
.ZG380                ANOP  ,                                           01761200
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01761300
                      AIF   (K'&XPAGEABLE GT 0).ZG380E  VALID ARG       01761400
                      AIF   (T'&PAGEABLE EQ 'O').ZG380D  OMITTED        01761500
&ZASYSLNDX            SETA  0                                           01761600
.ZG380A               ANOP  ,           POSITIONAL MACRO KEY            01761700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01761800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG380C           01761900
&ZTLC                 SETC 'PAGEABLE'                                   01762000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG380A  01762100
.ZG380B               ANOP  ,                                           01762200
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01762300
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         01762400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01762500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01762600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01762700
                      AGO   .ZG380E                                     01762800
.ZG380C               ANOP  ,                                           01762900
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01763000
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           01763100
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01763200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01763300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01763400
&ZMS                  SETC  '&ZMS "YES"'                                01763500
&ZMS                  SETC  '&ZMS OR "NO".'                             01763600
                      MNOTE 8,' &ZMS '                                  01763700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01763800
                      AGO   .ZG380E                                     01763900
.ZG380D               ANOP  ,                                           01764000
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01764100
.ZG380E               ANOP  ,                                           01764200
.*----------------------------------------------------------------***   01764300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01764400
                      AIF   (N'&BUFSIZE LE 1).ZG382A  CK NUM            01764500
&ZMS                  SETC  '"BUFSIZE='         *KPOSA* MNOTE           01764600
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01764700
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            01764800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01764900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01765000
.ZG382A               ANOP  ,                                           01765100
.*-------------------------------------------------------------------   01765200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01765300
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   01765400
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           01765500
                      AIF   (N'&BUFSIZE GT 1).ZG382B  MULTI PARMS       01765600
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   01765700
.ZG382B               AIF   (K'&BUFSIZE(1) GT 0).ZG382C                 01765800
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 01765900
&ZMS                  SETC  ' '         *KRQDA*                         01766000
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                01766100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01766200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01766300
.ZG382C               ANOP  ,                                           01766400
.*-------------------------------------------------------------------   01766500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01766600
                      AIF   (K'&ZXBUFSIZE LE 0).ZG382R  NOT I/O         01766700
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG382R            01766800
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                01766900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG382P               01767000
                      AIF   (K'&ZCGPR GT 2).ZG382Q                      01767100
                      AIF   ('&ZCGPR' EQ '0').ZG382Q                    01767200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01767300
                      AIF   (T'&ZCGPR NE 'N').ZG382Q  INVALID REG NAME  01767400
.ZG382P               ANOP  ,                                           01767500
                      AIF   (T'&ZCGPR NE 'N').ZG382R  NON NUMERIC       01767600
                      AIF   ('&ZCGPR' LT '2').ZG382Q                    01767700
                      AIF   ('&ZCGPR' LE '12').ZG382R                   01767800
.ZG382Q               ANOP  ,                                           01767900
&ZMS                  SETC  '"BUFSIZE='         *KGPRA* MNOTE           01768000
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01768100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01768200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01768300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01768400
.ZG382R               ANOP  ,                                           01768500
.*-------------------------------------------------------------------   01768600
.***AG.KMEKY15 NAME, RQD OUTPUT, ME KEYS -END                           01768700
.ZG384                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     01768800
.*-------------------------------------------------------------------   01768900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01769000
.ZG385                ANOP  ,                                           01769100
&ZTLC                 SETC 'DELETE_LIST'                                01769200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG713            01769300
&XREQUEST             SETC  'DELETE_LIST'       SET KEYWORD             01769400
                      AIF   (N'&REQUEST LE 1).ZG385A  CK NUM            01769500
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           01769600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01769700
&ZMS                  SETC  '&ZMS "REQUEST"'                            01769800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01769900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01770000
.ZG385A               ANOP  ,                                           01770100
.*------------------------------------------------------------------    01770200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01770300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01770400
.ZG385A0              AIF   (K'&TYPE LE 0).ZG385A1  OK                  01770500
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      01770600
.ZG385A1              AIF   (K'&ADJAREA LE 0).ZG385A2  OK               01770700
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      01770800
.ZG385A2              AIF   (K'&BUFLIST LE 0).ZG385A3  OK               01770900
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      01771000
.ZG385A3              AIF   (K'&BUFADDRTYPE LE 0).ZG385A4  OK           01771100
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     01771200
.ZG385A4              AIF   (K'&PAGEABLE LE 0).ZG385A5  OK              01771300
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      01771400
.ZG385A5              AIF   (K'&BUFSTGKEY LE 0).ZG385A6  OK             01771500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01771600
.ZG385A6              AIF   (K'&BUFALET LE 0).ZG385A7  OK               01771700
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      01771800
.ZG385A7              AIF   (K'&BUFADDRSIZE LE 0).ZG385A8  OK           01771900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     01772000
.ZG385A8              AIF   (K'&BUFNUM LE 0).ZG385A9  OK                01772100
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      01772200
.ZG385A9              AIF   (K'&BUFFER LE 0).ZG385A10  OK               01772300
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      01772400
.ZG385A10             AIF   (K'&BUFSIZE LE 0).ZG385A11  OK              01772500
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      01772600
.ZG385A11             AIF   (K'&RESTOKEN LE 0).ZG385A12  OK             01772700
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      01772800
.ZG385A12             AIF   (K'&EXTRESTOKEN LE 0).ZG385A13  OK          01772900
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     01773000
.ZG385A13             AIF   (K'&FIRSTELEM LE 0).ZG385A14  OK            01773100
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      01773200
.ZG385A14             AIF   (K'&LASTELEM LE 0).ZG385A15  OK             01773300
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      01773400
.ZG385A15             AIF   (K'&MISCOMPARE LE 0).ZG385A16  OK           01773500
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      01773600
.ZG385A16             AIF   (K'&LISTTYPE LE 0).ZG385A17  OK             01773700
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      01773800
.ZG385A17             AIF   (K'&MOVETOKEY LE 0).ZG385A18  OK            01773900
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      01774000
.ZG385A18             AIF   (K'&LISTKEYINC LE 0).ZG385A19  OK           01774100
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      01774200
.ZG385A19             AIF   (K'&LISTKEYAREA LE 0).ZG385A20  OK          01774300
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     01774400
.ZG385A20             AIF   (K'&MOVETOSKEY LE 0).ZG385A21  OK           01774500
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      01774600
.ZG385A21             AIF   (K'&BUFINCRNUM LE 0).ZG385A22  OK           01774700
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      01774800
.ZG385A22             AIF   (K'&ZCVAL LE 0).ZG385A23  OK                01774900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01775000
                      AIF  (K'&ZCVAL LE 160).ZG385A23A                  01775100
&ZCVAL                SETC '&ZCVAL'(1,160)                              01775200
&ZCVAL                SETC '&ZCVAL....'                                 01775300
.ZG385A23A            ANOP                                              01775400
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   01775500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01775600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01775700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01775800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01775900
.ZG385A23             ANOP  ,                                           01776000
.*----------------------------------------------------------------***   01776100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01776200
                      AIF   (N'&DIRECTION LE 1).ZG387A  CK NUM          01776300
&ZMS                  SETC  '"DIRECTION='       *KPOSA* MNOTE           01776400
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01776500
&ZMS                  SETC  '&ZMS "DIRECTION"'                          01776600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01776700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01776800
.ZG387A               ANOP  ,                                           01776900
.*-------------------------------------------------------------------   01777000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01777100
&XDIRECTION           SETC  ''          INITIALIZE XVARIABLE            01777200
.ZG388A   AIF   ('&DIRECTION(1)' NE 'HEADTOTAIL').ZG389A                01777300
&XDIRECTION           SETC  'HEADTOTAIL'        SET KEYWORD             01777400
.*-------------------------------------------------------------------   01777500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01777600
.ZG389A   AIF   ('&DIRECTION(1)' NE 'TAILTOHEAD').ZG390A                01777700
&XDIRECTION           SETC  'TAILTOHEAD'        SET KEYWORD             01777800
.*-------------------------------------------------------------------   01777900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01778000
.ZG390A               AIF   (K'&XDIRECTION GT 0).ZG390C  KEYWORD        01778100
                      AIF   (K'&DIRECTION(1) LE 0).ZG390B               01778200
&ZMS                  SETC  '"DIRECTION='       *KUKWA* MNOTE           01778300
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01778400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01778500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01778600
&ZMS                  SETC  '&ZMS "HEADTOTAIL"'                         01778700
&ZMS                  SETC  '&ZMS OR "TAILTOHEAD".'                     01778800
                      MNOTE 8,' &ZMS '                                  01778900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01779000
.ZG390B               ANOP  ,                                           01779100
&XDIRECTION           SETC  'HEADTOTAIL'        SET DEFAULT KEYWORD     01779200
.ZG390C               ANOP  ,                                           01779300
&ZXDIRECTION          SETC  'INPUT'     SET IN/OUTPUT                   01779400
.*------------------------------------------------------------------    01779500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01779600
&XLOCATOR             SETC  ''          INITIALIZE XVARIABLE            01779700
.*-------------------------------------------------------------------   01779800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01779900
.ZG393                ANOP  ,                                           01780000
                      AIF   (K'&LOCATOR(1) LE 0).ZG393A                 01780100
&ZTLC                 SETC 'CURSOR'                                     01780200
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG451            01780300
&XLOCATOR             SETC  'CURSOR'    SET KEYWORD                     01780400
                      AIF   (N'&LOCATOR LE 1).ZG393A  CK NUM            01780500
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01780600
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01780700
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01780800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01780900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01781000
.ZG393A               ANOP  ,                                           01781100
.*------------------------------------------------------------------    01781200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01781300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01781400
.ZG393A0              AIF   (K'&ENTRYID LE 0).ZG393A1  OK               01781500
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01781600
.ZG393A1              AIF   (K'&LISTCOMPARE LE 0).ZG393A2  OK           01781700
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01781800
.ZG393A2              AIF   (K'&ENTRYNAME LE 0).ZG393A3  OK             01781900
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01782000
.ZG393A3              AIF   (K'&KEYTYPE LE 0).ZG393A4  OK               01782100
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01782200
.ZG393A4              AIF   (K'&ZCVAL LE 0).ZG393A5  OK                 01782300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01782400
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01782500
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01782600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01782700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01782800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01782900
.ZG393A5              ANOP  ,                                           01783000
.*----------------------------------------------------------------***   01783100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01783200
                      AIF   (N'&LISTNUM LE 1).ZG395A  CK NUM            01783300
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01783400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01783500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01783600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01783700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01783800
.ZG395A               ANOP  ,                                           01783900
.*-------------------------------------------------------------------   01784000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01784100
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01784200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01784300
                      AIF   (N'&LISTNUM GT 1).ZG395B  MULTI PARMS       01784400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01784500
.ZG395B               AIF   (K'&LISTNUM(1) GT 0).ZG395C                 01784600
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01784700
&ZMS                  SETC  ' '         *KRQDA*                         01784800
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01784900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01785000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01785100
.ZG395C               ANOP  ,                                           01785200
.*-------------------------------------------------------------------   01785300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01785400
                      AIF   (K'&ZXLISTNUM LE 0).ZG395R  NOT I/O         01785500
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG395R            01785600
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01785700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG395P               01785800
                      AIF   (K'&ZCGPR GT 2).ZG395Q                      01785900
                      AIF   ('&ZCGPR' EQ '0').ZG395Q                    01786000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01786100
                      AIF   (T'&ZCGPR NE 'N').ZG395Q  INVALID REG NAME  01786200
.ZG395P               ANOP  ,                                           01786300
                      AIF   (T'&ZCGPR NE 'N').ZG395R  NON NUMERIC       01786400
                      AIF   ('&ZCGPR' LT '2').ZG395Q                    01786500
                      AIF   ('&ZCGPR' LE '12').ZG395R                   01786600
.ZG395Q               ANOP  ,                                           01786700
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01786800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01786900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01787000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01787100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01787200
.ZG395R               ANOP  ,                                           01787300
.*----------------------------------------------------------------***   01787400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01787500
                      AIF   (N'&KEYSCANTYPE LE 1).ZG398A  CK NUM        01787600
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           01787700
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01787800
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01787900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01788000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01788100
.ZG398A               ANOP  ,                                           01788200
.*-------------------------------------------------------------------   01788300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01788400
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01788500
.ZG399A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG400A                   01788600
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01788700
.*-------------------------------------------------------------------   01788800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01788900
.ZG400A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG401A               01789000
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01789100
.*-------------------------------------------------------------------   01789200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01789300
.ZG401A               AIF   (K'&XKEYSCANTYPE GT 0).ZG401C  KEYWORD      01789400
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG401B             01789500
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           01789600
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01789700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01789800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01789900
&ZMS                  SETC  '&ZMS "ENTRY"'                              01790000
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01790100
                      MNOTE 8,' &ZMS '                                  01790200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01790300
.ZG401B               ANOP  ,                                           01790400
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01790500
.ZG401C               ANOP  ,                                           01790600
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01790700
.*------------------------------------------------------------------    01790800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01790900
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01791000
.*-------------------------------------------------------------------   01791100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01791200
.ZG404                ANOP  ,                                           01791300
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG404A             01791400
&ZTLC                 SETC 'NO'                                         01791500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG405        01791600
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01791700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG404A  CK NUM        01791800
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01791900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01792000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01792100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01792200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01792300
.ZG404A               ANOP  ,                                           01792400
.*------------------------------------------------------------------    01792500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01792600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01792700
.ZG404A0              AIF   (K'&AUTHCOMP LE 0).ZG404A1  OK              01792800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01792900
.ZG404A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG404A2  OK          01793000
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01793100
.ZG404A2              AIF   (K'&ZCVAL LE 0).ZG404A3  OK                 01793200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01793300
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01793400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01793500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01793600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01793700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01793800
.ZG404A3              ANOP  ,                                           01793900
.*-------------------------------------------------------------------   01794000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01794100
.ZG405                ANOP  ,                                           01794200
&ZTLC                 SETC 'YES'                                        01794300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG414        01794400
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01794500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG405A  CK NUM        01794600
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01794700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01794800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01794900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01795000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01795100
.ZG405A               ANOP  ,                                           01795200
.*----------------------------------------------------------------***   01795300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01795400
                      AIF   (N'&AUTHCOMP LE 1).ZG407A  CK NUM           01795500
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01795600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01795700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01795800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01795900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01796000
.ZG407A               ANOP  ,                                           01796100
.*-------------------------------------------------------------------   01796200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01796300
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01796400
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01796500
                      AIF   (N'&AUTHCOMP GT 1).ZG407B  MULTI PARMS      01796600
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01796700
.ZG407B               AIF   (K'&AUTHCOMP(1) GT 0).ZG407C                01796800
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01796900
&ZMS                  SETC  ' '         *KRQDA*                         01797000
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01797100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01797200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01797300
.ZG407C               ANOP  ,                                           01797400
.*-------------------------------------------------------------------   01797500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01797600
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG407R  NOT I/O        01797700
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG407R           01797800
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01797900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG407P               01798000
                      AIF   (K'&ZCGPR GT 2).ZG407Q                      01798100
                      AIF   ('&ZCGPR' EQ '0').ZG407Q                    01798200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01798300
                      AIF   (T'&ZCGPR NE 'N').ZG407Q  INVALID REG NAME  01798400
.ZG407P               ANOP  ,                                           01798500
                      AIF   (T'&ZCGPR NE 'N').ZG407R  NON NUMERIC       01798600
                      AIF   ('&ZCGPR' LT '2').ZG407Q                    01798700
                      AIF   ('&ZCGPR' LE '12').ZG407R                   01798800
.ZG407Q               ANOP  ,                                           01798900
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01799000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01799100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01799200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01799300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01799400
.ZG407R               ANOP  ,                                           01799500
.*----------------------------------------------------------------***   01799600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01799700
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG409A  CK NUM       01799800
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01799900
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01800000
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01800100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01800200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01800300
.ZG409A               ANOP  ,                                           01800400
.*-------------------------------------------------------------------   01800500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01800600
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01800700
.ZG410A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG411A                  01800800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01800900
.*-------------------------------------------------------------------   01801000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01801100
.ZG411A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG412A            01801200
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01801300
.*-------------------------------------------------------------------   01801400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01801500
.ZG412A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG412C  KEYWORD     01801600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG412B            01801700
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01801800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01801900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01802000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01802100
&ZMS                  SETC  '&ZMS "EQUAL"'                              01802200
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01802300
                      MNOTE 8,' &ZMS '                                  01802400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01802500
.ZG412B               ANOP  ,                                           01802600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01802700
.ZG412C               ANOP  ,                                           01802800
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01802900
.*-------------------------------------------------------------------   01803000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01803100
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG412D  KEY           01803200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG412D  PARM      01803300
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01803400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01803500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01803600
&ZMS                  SETC  '&ZMS '                                     01803700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01803800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01803900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01804000
.ZG412D               ANOP  ,                                           01804100
.*------------------------------------------------------------------    01804200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01804300
.ZG414                ANOP  ,                                           01804400
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01804500
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG414E  VALID ARG    01804600
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG414D  OMITTED     01804700
&ZASYSLNDX            SETA  0                                           01804800
.ZG414A               ANOP  ,           POSITIONAL MACRO KEY            01804900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01805000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG414C           01805100
&ZTLC                 SETC 'AUTHCOMPARE'                                01805200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG414A  01805300
.ZG414B               ANOP  ,                                           01805400
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01805500
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01805600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01805700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01805800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01805900
                      AGO   .ZG414E                                     01806000
.ZG414C               ANOP  ,                                           01806100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01806200
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01806300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01806400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01806500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01806600
&ZMS                  SETC  '&ZMS "NO"'                                 01806700
&ZMS                  SETC  '&ZMS OR "YES".'                            01806800
                      MNOTE 8,' &ZMS '                                  01806900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01807000
                      AGO   .ZG414E                                     01807100
.ZG414D               ANOP  ,                                           01807200
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01807300
.ZG414E               ANOP  ,                                           01807400
.*------------------------------------------------------------------    01807500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01807600
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01807700
.*-------------------------------------------------------------------   01807800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01807900
.ZG417                ANOP  ,                                           01808000
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG417A              01808100
&ZTLC                 SETC 'NO'                                         01808200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG418         01808300
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01808400
                      AIF   (N'&KEYCOMPARE LE 1).ZG417A  CK NUM         01808500
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01808600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01808700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01808800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01808900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01809000
.ZG417A               ANOP  ,                                           01809100
.*------------------------------------------------------------------    01809200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01809300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01809400
.ZG417A0              AIF   (K'&ENTRYKEY LE 0).ZG417A1  OK              01809500
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01809600
.ZG417A1              AIF   (K'&KEYREQTYPE LE 0).ZG417A2  OK            01809700
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01809800
.ZG417A2              AIF   (K'&KEYRANGEEND LE 0).ZG417A3  OK           01809900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01810000
.ZG417A3              AIF   (K'&ZCVAL LE 0).ZG417A4  OK                 01810100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01810200
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           01810300
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01810400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01810500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01810600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01810700
.ZG417A4              ANOP  ,                                           01810800
.*-------------------------------------------------------------------   01810900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01811000
.ZG418                ANOP  ,                                           01811100
&ZTLC                 SETC 'YES'                                        01811200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG432         01811300
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01811400
                      AIF   (N'&KEYCOMPARE LE 1).ZG418A  CK NUM         01811500
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01811600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01811700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01811800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01811900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01812000
.ZG418A               ANOP  ,                                           01812100
.*----------------------------------------------------------------***   01812200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01812300
                      AIF   (N'&ENTRYKEY LE 1).ZG420A  CK NUM           01812400
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           01812500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01812600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01812700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01812800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01812900
.ZG420A               ANOP  ,                                           01813000
.*-------------------------------------------------------------------   01813100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01813200
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01813300
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01813400
                      AIF   (N'&ENTRYKEY GT 1).ZG420B  MULTI PARMS      01813500
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01813600
.ZG420B               AIF   (K'&ENTRYKEY(1) GT 0).ZG420C                01813700
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01813800
&ZMS                  SETC  ' '         *KRQDA*                         01813900
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01814000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01814100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01814200
.ZG420C               ANOP  ,                                           01814300
.*-------------------------------------------------------------------   01814400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01814500
                      AIF   (K'&ZXENTRYKEY LE 0).ZG420R  NOT I/O        01814600
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG420R           01814700
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01814800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG420P               01814900
                      AIF   (K'&ZCGPR GT 2).ZG420Q                      01815000
                      AIF   ('&ZCGPR' EQ '0').ZG420Q                    01815100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01815200
                      AIF   (T'&ZCGPR NE 'N').ZG420Q  INVALID REG NAME  01815300
.ZG420P               ANOP  ,                                           01815400
                      AIF   (T'&ZCGPR NE 'N').ZG420R  NON NUMERIC       01815500
                      AIF   ('&ZCGPR' LT '2').ZG420Q                    01815600
                      AIF   ('&ZCGPR' LE '12').ZG420R                   01815700
.ZG420Q               ANOP  ,                                           01815800
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           01815900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01816000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01816100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01816200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01816300
.ZG420R               ANOP  ,                                           01816400
.*------------------------------------------------------------------    01816500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01816600
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01816700
.*-------------------------------------------------------------------   01816800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01816900
.ZG424                ANOP  ,                                           01817000
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG424A              01817100
&ZTLC                 SETC 'EQUAL'                                      01817200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG425         01817300
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01817400
                      AIF   (N'&KEYREQTYPE LE 1).ZG424A  CK NUM         01817500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01817600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01817700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01817800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01817900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01818000
.ZG424A               ANOP  ,                                           01818100
.*------------------------------------------------------------------    01818200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01818300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01818400
.ZG424A0              AIF   (K'&KEYRANGEEND LE 0).ZG424A1  OK           01818500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01818600
.ZG424A1              AIF   (K'&ZCVAL LE 0).ZG424A2  OK                 01818700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01818800
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01818900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01819000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01819100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01819200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01819300
.ZG424A2              ANOP  ,                                           01819400
.*-------------------------------------------------------------------   01819500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01819600
.ZG425                ANOP  ,                                           01819700
&ZTLC                 SETC 'LESSOREQUAL'                                01819800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG426         01819900
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01820000
                      AIF   (N'&KEYREQTYPE LE 1).ZG425A  CK NUM         01820100
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01820200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01820300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01820400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01820500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01820600
.ZG425A               ANOP  ,                                           01820700
.*------------------------------------------------------------------    01820800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01820900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01821000
.ZG425A0              AIF   (K'&KEYRANGEEND LE 0).ZG425A1  OK           01821100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01821200
.ZG425A1              AIF   (K'&ZCVAL LE 0).ZG425A2  OK                 01821300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01821400
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01821500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01821600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01821700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01821800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01821900
.ZG425A2              ANOP  ,                                           01822000
.*-------------------------------------------------------------------   01822100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01822200
.ZG426                ANOP  ,                                           01822300
&ZTLC                 SETC 'GREATEROREQUAL'                             01822400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG427         01822500
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01822600
                      AIF   (N'&KEYREQTYPE LE 1).ZG426A  CK NUM         01822700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01822800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01822900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01823000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01823100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01823200
.ZG426A               ANOP  ,                                           01823300
.*------------------------------------------------------------------    01823400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01823500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01823600
.ZG426A0              AIF   (K'&KEYRANGEEND LE 0).ZG426A1  OK           01823700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01823800
.ZG426A1              AIF   (K'&ZCVAL LE 0).ZG426A2  OK                 01823900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01824000
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01824100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01824200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01824300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01824400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01824500
.ZG426A2              ANOP  ,                                           01824600
.*-------------------------------------------------------------------   01824700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01824800
.ZG427                ANOP  ,                                           01824900
&ZTLC                 SETC 'RANGE'                                      01825000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG431         01825100
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01825200
                      AIF   (N'&KEYREQTYPE LE 1).ZG427A  CK NUM         01825300
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01825400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01825500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01825600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01825700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01825800
.ZG427A               ANOP  ,                                           01825900
.*----------------------------------------------------------------***   01826000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01826100
                      AIF   (N'&KEYRANGEEND LE 1).ZG429A  CK NUM        01826200
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           01826300
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01826400
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01826500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01826600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01826700
.ZG429A               ANOP  ,                                           01826800
.*-------------------------------------------------------------------   01826900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01827000
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01827100
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01827200
                      AIF   (N'&KEYRANGEEND GT 1).ZG429B  MULTI PARMS   01827300
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01827400
.ZG429B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG429C             01827500
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01827600
&ZMS                  SETC  ' '         *KRQDA*                         01827700
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01827800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01827900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01828000
.ZG429C               ANOP  ,                                           01828100
.*-------------------------------------------------------------------   01828200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01828300
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG429R  NOT I/O     01828400
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG429R        01828500
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01828600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG429P               01828700
                      AIF   (K'&ZCGPR GT 2).ZG429Q                      01828800
                      AIF   ('&ZCGPR' EQ '0').ZG429Q                    01828900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01829000
                      AIF   (T'&ZCGPR NE 'N').ZG429Q  INVALID REG NAME  01829100
.ZG429P               ANOP  ,                                           01829200
                      AIF   (T'&ZCGPR NE 'N').ZG429R  NON NUMERIC       01829300
                      AIF   ('&ZCGPR' LT '2').ZG429Q                    01829400
                      AIF   ('&ZCGPR' LE '12').ZG429R                   01829500
.ZG429Q               ANOP  ,                                           01829600
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           01829700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01829800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01829900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01830000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01830100
.ZG429R               ANOP  ,                                           01830200
.*------------------------------------------------------------------    01830300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01830400
.ZG431                ANOP  ,                                           01830500
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01830600
                      AIF   (K'&XKEYREQTYPE GT 0).ZG431E  VALID ARG     01830700
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG431D  OMITTED      01830800
&ZASYSLNDX            SETA  0                                           01830900
.ZG431A               ANOP  ,           POSITIONAL MACRO KEY            01831000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01831100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG431C           01831200
&ZTLC                 SETC 'KEYREQTYPE'                                 01831300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG431A  01831400
.ZG431B               ANOP  ,                                           01831500
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01831600
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       01831700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01831800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01831900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01832000
                      AGO   .ZG431E                                     01832100
.ZG431C               ANOP  ,                                           01832200
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01832300
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           01832400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01832500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01832600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01832700
&ZMS                  SETC  '&ZMS "EQUAL",'                             01832800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01832900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01833000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01833100
                      MNOTE 8,' &ZMS '                                  01833200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01833300
                      AGO   .ZG431E                                     01833400
.ZG431D               ANOP  ,                                           01833500
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01833600
.ZG431E               ANOP  ,                                           01833700
.*------------------------------------------------------------------    01833800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01833900
.ZG432                ANOP  ,                                           01834000
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01834100
                      AIF   (K'&XKEYCOMPARE GT 0).ZG432E  VALID ARG     01834200
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG432D  OMITTED      01834300
&ZASYSLNDX            SETA  0                                           01834400
.ZG432A               ANOP  ,           POSITIONAL MACRO KEY            01834500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01834600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG432C           01834700
&ZTLC                 SETC 'KEYCOMPARE'                                 01834800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG432A  01834900
.ZG432B               ANOP  ,                                           01835000
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01835100
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       01835200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01835300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01835400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01835500
                      AGO   .ZG432E                                     01835600
.ZG432C               ANOP  ,                                           01835700
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01835800
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           01835900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01836000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01836100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01836200
&ZMS                  SETC  '&ZMS "NO"'                                 01836300
&ZMS                  SETC  '&ZMS OR "YES".'                            01836400
                      MNOTE 8,' &ZMS '                                  01836500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01836600
                      AGO   .ZG432E                                     01836700
.ZG432D               ANOP  ,                                           01836800
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01836900
.ZG432E               ANOP  ,                                           01837000
.*------------------------------------------------------------------    01837100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01837200
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01837300
.*-------------------------------------------------------------------   01837400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01837500
.ZG435                ANOP  ,                                           01837600
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG435A             01837700
&ZTLC                 SETC 'NO'                                         01837800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG436        01837900
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01838000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG435A  CK NUM        01838100
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01838200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01838300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01838400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01838500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01838600
.ZG435A               ANOP  ,                                           01838700
.*------------------------------------------------------------------    01838800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01838900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01839000
.ZG435A0              AIF   (K'&SECONDARYKEY LE 0).ZG435A1  OK          01839100
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01839200
.ZG435A1              AIF   (K'&SKEYREQTYPE LE 0).ZG435A2  OK           01839300
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01839400
.ZG435A2              AIF   (K'&SKEYRANGEEND LE 0).ZG435A3  OK          01839500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01839600
.ZG435A3              AIF   (K'&ZCVAL LE 0).ZG435A4  OK                 01839700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01839800
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           01839900
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01840000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01840100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01840200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01840300
.ZG435A4              ANOP  ,                                           01840400
.*-------------------------------------------------------------------   01840500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01840600
.ZG436                ANOP  ,                                           01840700
&ZTLC                 SETC 'YES'                                        01840800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG450        01840900
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01841000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG436A  CK NUM        01841100
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01841200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01841300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01841400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01841500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01841600
.ZG436A               ANOP  ,                                           01841700
.*----------------------------------------------------------------***   01841800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01841900
                      AIF   (N'&SECONDARYKEY LE 1).ZG438A  CK NUM       01842000
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           01842100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01842200
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01842300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01842400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01842500
.ZG438A               ANOP  ,                                           01842600
.*-------------------------------------------------------------------   01842700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01842800
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01842900
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01843000
                      AIF   (N'&SECONDARYKEY GT 1).ZG438B  MULTI PARMS  01843100
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01843200
.ZG438B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG438C            01843300
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01843400
&ZMS                  SETC  ' '         *KRQDA*                         01843500
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01843600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01843700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01843800
.ZG438C               ANOP  ,                                           01843900
.*-------------------------------------------------------------------   01844000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01844100
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG438R  NOT I/O    01844200
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG438R       01844300
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01844400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG438P               01844500
                      AIF   (K'&ZCGPR GT 2).ZG438Q                      01844600
                      AIF   ('&ZCGPR' EQ '0').ZG438Q                    01844700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01844800
                      AIF   (T'&ZCGPR NE 'N').ZG438Q  INVALID REG NAME  01844900
.ZG438P               ANOP  ,                                           01845000
                      AIF   (T'&ZCGPR NE 'N').ZG438R  NON NUMERIC       01845100
                      AIF   ('&ZCGPR' LT '2').ZG438Q                    01845200
                      AIF   ('&ZCGPR' LE '12').ZG438R                   01845300
.ZG438Q               ANOP  ,                                           01845400
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           01845500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01845600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01845700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01845800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01845900
.ZG438R               ANOP  ,                                           01846000
.*------------------------------------------------------------------    01846100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01846200
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01846300
.*-------------------------------------------------------------------   01846400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01846500
.ZG442                ANOP  ,                                           01846600
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG442A             01846700
&ZTLC                 SETC 'EQUAL'                                      01846800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG443        01846900
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01847000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG442A  CK NUM        01847100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01847200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01847300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01847400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01847500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01847600
.ZG442A               ANOP  ,                                           01847700
.*------------------------------------------------------------------    01847800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01847900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01848000
.ZG442A0              AIF   (K'&SKEYRANGEEND LE 0).ZG442A1  OK          01848100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01848200
.ZG442A1              AIF   (K'&ZCVAL LE 0).ZG442A2  OK                 01848300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01848400
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01848500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01848600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01848700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01848800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01848900
.ZG442A2              ANOP  ,                                           01849000
.*-------------------------------------------------------------------   01849100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01849200
.ZG443                ANOP  ,                                           01849300
&ZTLC                 SETC 'LESSOREQUAL'                                01849400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG444        01849500
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01849600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG443A  CK NUM        01849700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01849800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01849900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01850000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01850100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01850200
.ZG443A               ANOP  ,                                           01850300
.*------------------------------------------------------------------    01850400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01850500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01850600
.ZG443A0              AIF   (K'&SKEYRANGEEND LE 0).ZG443A1  OK          01850700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01850800
.ZG443A1              AIF   (K'&ZCVAL LE 0).ZG443A2  OK                 01850900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01851000
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01851100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01851200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01851300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01851400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01851500
.ZG443A2              ANOP  ,                                           01851600
.*-------------------------------------------------------------------   01851700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01851800
.ZG444                ANOP  ,                                           01851900
&ZTLC                 SETC 'GREATEROREQUAL'                             01852000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG445        01852100
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01852200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG444A  CK NUM        01852300
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01852400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01852500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01852600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01852700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01852800
.ZG444A               ANOP  ,                                           01852900
.*------------------------------------------------------------------    01853000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01853100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01853200
.ZG444A0              AIF   (K'&SKEYRANGEEND LE 0).ZG444A1  OK          01853300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01853400
.ZG444A1              AIF   (K'&ZCVAL LE 0).ZG444A2  OK                 01853500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01853600
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01853700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01853800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01853900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01854000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01854100
.ZG444A2              ANOP  ,                                           01854200
.*-------------------------------------------------------------------   01854300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01854400
.ZG445                ANOP  ,                                           01854500
&ZTLC                 SETC 'RANGE'                                      01854600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG449        01854700
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01854800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG445A  CK NUM        01854900
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01855000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01855100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01855200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01855300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01855400
.ZG445A               ANOP  ,                                           01855500
.*----------------------------------------------------------------***   01855600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01855700
                      AIF   (N'&SKEYRANGEEND LE 1).ZG447A  CK NUM       01855800
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           01855900
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01856000
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01856100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01856200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01856300
.ZG447A               ANOP  ,                                           01856400
.*-------------------------------------------------------------------   01856500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01856600
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01856700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01856800
                      AIF   (N'&SKEYRANGEEND GT 1).ZG447B  MULTI PARMS  01856900
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01857000
.ZG447B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG447C            01857100
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01857200
&ZMS                  SETC  ' '         *KRQDA*                         01857300
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01857400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01857500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01857600
.ZG447C               ANOP  ,                                           01857700
.*-------------------------------------------------------------------   01857800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01857900
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG447R  NOT I/O    01858000
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG447R       01858100
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01858200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG447P               01858300
                      AIF   (K'&ZCGPR GT 2).ZG447Q                      01858400
                      AIF   ('&ZCGPR' EQ '0').ZG447Q                    01858500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01858600
                      AIF   (T'&ZCGPR NE 'N').ZG447Q  INVALID REG NAME  01858700
.ZG447P               ANOP  ,                                           01858800
                      AIF   (T'&ZCGPR NE 'N').ZG447R  NON NUMERIC       01858900
                      AIF   ('&ZCGPR' LT '2').ZG447Q                    01859000
                      AIF   ('&ZCGPR' LE '12').ZG447R                   01859100
.ZG447Q               ANOP  ,                                           01859200
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           01859300
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01859400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01859500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01859600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01859700
.ZG447R               ANOP  ,                                           01859800
.*------------------------------------------------------------------    01859900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01860000
.ZG449                ANOP  ,                                           01860100
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01860200
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG449E  VALID ARG    01860300
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG449D  OMITTED     01860400
&ZASYSLNDX            SETA  0                                           01860500
.ZG449A               ANOP  ,           POSITIONAL MACRO KEY            01860600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01860700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG449C           01860800
&ZTLC                 SETC 'SKEYREQTYPE'                                01860900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG449A  01861000
.ZG449B               ANOP  ,                                           01861100
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01861200
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      01861300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01861400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01861500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01861600
                      AGO   .ZG449E                                     01861700
.ZG449C               ANOP  ,                                           01861800
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01861900
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           01862000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01862100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01862200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01862300
&ZMS                  SETC  '&ZMS "EQUAL",'                             01862400
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01862500
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01862600
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01862700
                      MNOTE 8,' &ZMS '                                  01862800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01862900
                      AGO   .ZG449E                                     01863000
.ZG449D               ANOP  ,                                           01863100
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01863200
.ZG449E               ANOP  ,                                           01863300
.*------------------------------------------------------------------    01863400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01863500
.ZG450                ANOP  ,                                           01863600
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01863700
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG450E  VALID ARG    01863800
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG450D  OMITTED     01863900
&ZASYSLNDX            SETA  0                                           01864000
.ZG450A               ANOP  ,           POSITIONAL MACRO KEY            01864100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01864200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG450C           01864300
&ZTLC                 SETC 'SKEYCOMPARE'                                01864400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG450A  01864500
.ZG450B               ANOP  ,                                           01864600
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01864700
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      01864800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01864900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01865000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01865100
                      AGO   .ZG450E                                     01865200
.ZG450C               ANOP  ,                                           01865300
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01865400
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           01865500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01865600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01865700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01865800
&ZMS                  SETC  '&ZMS "NO"'                                 01865900
&ZMS                  SETC  '&ZMS OR "YES".'                            01866000
                      MNOTE 8,' &ZMS '                                  01866100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01866200
                      AGO   .ZG450E                                     01866300
.ZG450D               ANOP  ,                                           01866400
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01866500
.ZG450E               ANOP  ,                                           01866600
.*-------------------------------------------------------------------   01866700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01866800
.ZG451                ANOP  ,                                           01866900
&ZTLC                 SETC 'ENTRYID'                                    01867000
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG517            01867100
&XLOCATOR             SETC  'ENTRYID'   SET KEYWORD                     01867200
                      AIF   (N'&LOCATOR LE 1).ZG451A  CK NUM            01867300
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01867400
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01867500
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01867600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01867700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01867800
.ZG451A               ANOP  ,                                           01867900
.*------------------------------------------------------------------    01868000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01868100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01868200
.ZG451A0              AIF   (K'&ENTRYNAME LE 0).ZG451A1  OK             01868300
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01868400
.ZG451A1              AIF   (K'&KEYTYPE LE 0).ZG451A2  OK               01868500
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01868600
.ZG451A2              AIF   (K'&ZCVAL LE 0).ZG451A3  OK                 01868700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01868800
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01868900
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01869000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01869100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01869200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01869300
.ZG451A3              ANOP  ,                                           01869400
.*----------------------------------------------------------------***   01869500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01869600
                      AIF   (N'&ENTRYID LE 1).ZG453A  CK NUM            01869700
&ZMS                  SETC  '"ENTRYID='         *KPOSA* MNOTE           01869800
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01869900
&ZMS                  SETC  '&ZMS "ENTRYID"'                            01870000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01870100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01870200
.ZG453A               ANOP  ,                                           01870300
.*-------------------------------------------------------------------   01870400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01870500
&ZXENTRYID            SETC  'INPUT'     SET IN/OUTPUT                   01870600
&XENTRYID             SETC  '&ENTRYID(1)'       SET XVARIABLE           01870700
                      AIF   (N'&ENTRYID GT 1).ZG453B  MULTI PARMS       01870800
&XENTRYID             SETC  '&ENTRYID'  SET XVARIABLE                   01870900
.ZG453B               AIF   (K'&ENTRYID(1) GT 0).ZG453C                 01871000
&ZXENTRYID            SETC  ''          RESET IN/OUTPUT                 01871100
&ZMS                  SETC  ' '         *KRQDA*                         01871200
&ZMS                  SETC  '&ZMS "ENTRYID" KEY AND ITS'                01871300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01871400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01871500
.ZG453C               ANOP  ,                                           01871600
.*-------------------------------------------------------------------   01871700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01871800
                      AIF   (K'&ZXENTRYID LE 0).ZG453R  NOT I/O         01871900
                      AIF   ('&XENTRYID'(1,1) NE '(').ZG453R            01872000
&ZCGPR                SETC  '&XENTRYID'(2,K'&XENTRYID-2)                01872100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG453P               01872200
                      AIF   (K'&ZCGPR GT 2).ZG453Q                      01872300
                      AIF   ('&ZCGPR' EQ '0').ZG453Q                    01872400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01872500
                      AIF   (T'&ZCGPR NE 'N').ZG453Q  INVALID REG NAME  01872600
.ZG453P               ANOP  ,                                           01872700
                      AIF   (T'&ZCGPR NE 'N').ZG453R  NON NUMERIC       01872800
                      AIF   ('&ZCGPR' LT '2').ZG453Q                    01872900
                      AIF   ('&ZCGPR' LE '12').ZG453R                   01873000
.ZG453Q               ANOP  ,                                           01873100
&ZMS                  SETC  '"ENTRYID='         *KGPRA* MNOTE           01873200
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01873300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01873400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01873500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01873600
.ZG453R               ANOP  ,                                           01873700
.*----------------------------------------------------------------***   01873800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01873900
                      AIF   (N'&KEYSCANTYPE LE 1).ZG456A  CK NUM        01874000
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           01874100
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01874200
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01874300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01874400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01874500
.ZG456A               ANOP  ,                                           01874600
.*-------------------------------------------------------------------   01874700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01874800
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01874900
.ZG457A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG458A                   01875000
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01875100
.*-------------------------------------------------------------------   01875200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01875300
.ZG458A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG459A               01875400
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01875500
.*-------------------------------------------------------------------   01875600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01875700
.ZG459A               AIF   (K'&XKEYSCANTYPE GT 0).ZG459C  KEYWORD      01875800
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG459B             01875900
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           01876000
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01876100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01876200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01876300
&ZMS                  SETC  '&ZMS "ENTRY"'                              01876400
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01876500
                      MNOTE 8,' &ZMS '                                  01876600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01876700
.ZG459B               ANOP  ,                                           01876800
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01876900
.ZG459C               ANOP  ,                                           01877000
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01877100
.*------------------------------------------------------------------    01877200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01877300
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01877400
.*-------------------------------------------------------------------   01877500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01877600
.ZG462                ANOP  ,                                           01877700
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG462A             01877800
&ZTLC                 SETC 'NO'                                         01877900
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG463        01878000
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     01878100
                      AIF   (N'&LISTCOMPARE LE 1).ZG462A  CK NUM        01878200
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01878300
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01878400
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01878500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01878600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01878700
.ZG462A               ANOP  ,                                           01878800
.*------------------------------------------------------------------    01878900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01879000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01879100
.ZG462A0              AIF   (K'&LISTNUM LE 0).ZG462A1  OK               01879200
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01879300
.ZG462A1              AIF   (K'&AUTHCOMPARE LE 0).ZG462A2  OK           01879400
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     01879500
.ZG462A2              AIF   (K'&AUTHCOMP LE 0).ZG462A3  OK              01879600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01879700
.ZG462A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG462A4  OK          01879800
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01879900
.ZG462A4              AIF   (K'&ZCVAL LE 0).ZG462A5  OK                 01880000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01880100
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           01880200
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       01880300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01880400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01880500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01880600
.ZG462A5              ANOP  ,                                           01880700
.*-------------------------------------------------------------------   01880800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01880900
.ZG463                ANOP  ,                                           01881000
&ZTLC                 SETC 'YES'                                        01881100
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG480        01881200
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     01881300
                      AIF   (N'&LISTCOMPARE LE 1).ZG463A  CK NUM        01881400
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01881500
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01881600
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01881700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01881800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01881900
.ZG463A               ANOP  ,                                           01882000
.*----------------------------------------------------------------***   01882100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01882200
                      AIF   (N'&LISTNUM LE 1).ZG465A  CK NUM            01882300
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01882400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01882500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01882600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01882700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01882800
.ZG465A               ANOP  ,                                           01882900
.*-------------------------------------------------------------------   01883000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01883100
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01883200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01883300
                      AIF   (N'&LISTNUM GT 1).ZG465B  MULTI PARMS       01883400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01883500
.ZG465B               AIF   (K'&LISTNUM(1) GT 0).ZG465C                 01883600
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01883700
&ZMS                  SETC  ' '         *KRQDA*                         01883800
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01883900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01884000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01884100
.ZG465C               ANOP  ,                                           01884200
.*-------------------------------------------------------------------   01884300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01884400
                      AIF   (K'&ZXLISTNUM LE 0).ZG465R  NOT I/O         01884500
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG465R            01884600
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01884700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG465P               01884800
                      AIF   (K'&ZCGPR GT 2).ZG465Q                      01884900
                      AIF   ('&ZCGPR' EQ '0').ZG465Q                    01885000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01885100
                      AIF   (T'&ZCGPR NE 'N').ZG465Q  INVALID REG NAME  01885200
.ZG465P               ANOP  ,                                           01885300
                      AIF   (T'&ZCGPR NE 'N').ZG465R  NON NUMERIC       01885400
                      AIF   ('&ZCGPR' LT '2').ZG465Q                    01885500
                      AIF   ('&ZCGPR' LE '12').ZG465R                   01885600
.ZG465Q               ANOP  ,                                           01885700
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01885800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01885900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01886000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01886100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01886200
.ZG465R               ANOP  ,                                           01886300
.*------------------------------------------------------------------    01886400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01886500
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01886600
.*-------------------------------------------------------------------   01886700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01886800
.ZG469                ANOP  ,                                           01886900
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG469A             01887000
&ZTLC                 SETC 'NO'                                         01887100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG470        01887200
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01887300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG469A  CK NUM        01887400
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01887500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01887600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01887700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01887800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01887900
.ZG469A               ANOP  ,                                           01888000
.*------------------------------------------------------------------    01888100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01888200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01888300
.ZG469A0              AIF   (K'&AUTHCOMP LE 0).ZG469A1  OK              01888400
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01888500
.ZG469A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG469A2  OK          01888600
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01888700
.ZG469A2              AIF   (K'&ZCVAL LE 0).ZG469A3  OK                 01888800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01888900
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01889000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01889100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01889200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01889300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01889400
.ZG469A3              ANOP  ,                                           01889500
.*-------------------------------------------------------------------   01889600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01889700
.ZG470                ANOP  ,                                           01889800
&ZTLC                 SETC 'YES'                                        01889900
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG479        01890000
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01890100
                      AIF   (N'&AUTHCOMPARE LE 1).ZG470A  CK NUM        01890200
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01890300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01890400
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01890500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01890600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01890700
.ZG470A               ANOP  ,                                           01890800
.*----------------------------------------------------------------***   01890900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01891000
                      AIF   (N'&AUTHCOMP LE 1).ZG472A  CK NUM           01891100
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01891200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01891300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01891400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01891500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01891600
.ZG472A               ANOP  ,                                           01891700
.*-------------------------------------------------------------------   01891800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01891900
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01892000
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01892100
                      AIF   (N'&AUTHCOMP GT 1).ZG472B  MULTI PARMS      01892200
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01892300
.ZG472B               AIF   (K'&AUTHCOMP(1) GT 0).ZG472C                01892400
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01892500
&ZMS                  SETC  ' '         *KRQDA*                         01892600
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01892700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01892800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01892900
.ZG472C               ANOP  ,                                           01893000
.*-------------------------------------------------------------------   01893100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01893200
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG472R  NOT I/O        01893300
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG472R           01893400
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01893500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG472P               01893600
                      AIF   (K'&ZCGPR GT 2).ZG472Q                      01893700
                      AIF   ('&ZCGPR' EQ '0').ZG472Q                    01893800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01893900
                      AIF   (T'&ZCGPR NE 'N').ZG472Q  INVALID REG NAME  01894000
.ZG472P               ANOP  ,                                           01894100
                      AIF   (T'&ZCGPR NE 'N').ZG472R  NON NUMERIC       01894200
                      AIF   ('&ZCGPR' LT '2').ZG472Q                    01894300
                      AIF   ('&ZCGPR' LE '12').ZG472R                   01894400
.ZG472Q               ANOP  ,                                           01894500
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01894600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01894700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01894800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01894900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01895000
.ZG472R               ANOP  ,                                           01895100
.*----------------------------------------------------------------***   01895200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01895300
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG474A  CK NUM       01895400
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01895500
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01895600
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01895700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01895800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01895900
.ZG474A               ANOP  ,                                           01896000
.*-------------------------------------------------------------------   01896100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01896200
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01896300
.ZG475A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG476A                  01896400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01896500
.*-------------------------------------------------------------------   01896600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01896700
.ZG476A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG477A            01896800
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01896900
.*-------------------------------------------------------------------   01897000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01897100
.ZG477A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG477C  KEYWORD     01897200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG477B            01897300
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01897400
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01897500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01897600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01897700
&ZMS                  SETC  '&ZMS "EQUAL"'                              01897800
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01897900
                      MNOTE 8,' &ZMS '                                  01898000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01898100
.ZG477B               ANOP  ,                                           01898200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01898300
.ZG477C               ANOP  ,                                           01898400
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01898500
.*-------------------------------------------------------------------   01898600
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01898700
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG477D  KEY           01898800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG477D  PARM      01898900
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01899000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01899100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01899200
&ZMS                  SETC  '&ZMS '                                     01899300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01899400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01899500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01899600
.ZG477D               ANOP  ,                                           01899700
.*------------------------------------------------------------------    01899800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01899900
.ZG479                ANOP  ,                                           01900000
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01900100
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG479E  VALID ARG    01900200
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG479D  OMITTED     01900300
&ZASYSLNDX            SETA  0                                           01900400
.ZG479A               ANOP  ,           POSITIONAL MACRO KEY            01900500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01900600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG479C           01900700
&ZTLC                 SETC 'AUTHCOMPARE'                                01900800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG479A  01900900
.ZG479B               ANOP  ,                                           01901000
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01901100
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01901200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01901300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01901400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01901500
                      AGO   .ZG479E                                     01901600
.ZG479C               ANOP  ,                                           01901700
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01901800
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01901900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01902000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01902100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01902200
&ZMS                  SETC  '&ZMS "NO"'                                 01902300
&ZMS                  SETC  '&ZMS OR "YES".'                            01902400
                      MNOTE 8,' &ZMS '                                  01902500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01902600
                      AGO   .ZG479E                                     01902700
.ZG479D               ANOP  ,                                           01902800
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01902900
.ZG479E               ANOP  ,                                           01903000
.*------------------------------------------------------------------    01903100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01903200
.ZG480                ANOP  ,                                           01903300
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01903400
                      AIF   (K'&XLISTCOMPARE GT 0).ZG480E  VALID ARG    01903500
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG480D  OMITTED     01903600
&ZASYSLNDX            SETA  0                                           01903700
.ZG480A               ANOP  ,           POSITIONAL MACRO KEY            01903800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01903900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG480C           01904000
&ZTLC                 SETC 'LISTCOMPARE'                                01904100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG480A  01904200
.ZG480B               ANOP  ,                                           01904300
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01904400
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      01904500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01904600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01904700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01904800
                      AGO   .ZG480E                                     01904900
.ZG480C               ANOP  ,                                           01905000
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01905100
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           01905200
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01905300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01905400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01905500
&ZMS                  SETC  '&ZMS "NO"'                                 01905600
&ZMS                  SETC  '&ZMS OR "YES".'                            01905700
                      MNOTE 8,' &ZMS '                                  01905800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01905900
                      AGO   .ZG480E                                     01906000
.ZG480D               ANOP  ,                                           01906100
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01906200
.ZG480E               ANOP  ,                                           01906300
.*------------------------------------------------------------------    01906400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01906500
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01906600
.*-------------------------------------------------------------------   01906700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01906800
.ZG483                ANOP  ,                                           01906900
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG483A              01907000
&ZTLC                 SETC 'NO'                                         01907100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG484         01907200
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01907300
                      AIF   (N'&KEYCOMPARE LE 1).ZG483A  CK NUM         01907400
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01907500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01907600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01907700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01907800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01907900
.ZG483A               ANOP  ,                                           01908000
.*------------------------------------------------------------------    01908100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01908200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01908300
.ZG483A0              AIF   (K'&ENTRYKEY LE 0).ZG483A1  OK              01908400
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01908500
.ZG483A1              AIF   (K'&KEYREQTYPE LE 0).ZG483A2  OK            01908600
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01908700
.ZG483A2              AIF   (K'&KEYRANGEEND LE 0).ZG483A3  OK           01908800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01908900
.ZG483A3              AIF   (K'&ZCVAL LE 0).ZG483A4  OK                 01909000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01909100
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           01909200
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01909300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01909400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01909500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01909600
.ZG483A4              ANOP  ,                                           01909700
.*-------------------------------------------------------------------   01909800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01909900
.ZG484                ANOP  ,                                           01910000
&ZTLC                 SETC 'YES'                                        01910100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG498         01910200
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01910300
                      AIF   (N'&KEYCOMPARE LE 1).ZG484A  CK NUM         01910400
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           01910500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01910600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01910700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01910800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01910900
.ZG484A               ANOP  ,                                           01911000
.*----------------------------------------------------------------***   01911100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01911200
                      AIF   (N'&ENTRYKEY LE 1).ZG486A  CK NUM           01911300
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           01911400
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01911500
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01911600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01911700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01911800
.ZG486A               ANOP  ,                                           01911900
.*-------------------------------------------------------------------   01912000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01912100
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01912200
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01912300
                      AIF   (N'&ENTRYKEY GT 1).ZG486B  MULTI PARMS      01912400
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01912500
.ZG486B               AIF   (K'&ENTRYKEY(1) GT 0).ZG486C                01912600
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01912700
&ZMS                  SETC  ' '         *KRQDA*                         01912800
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01912900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01913000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01913100
.ZG486C               ANOP  ,                                           01913200
.*-------------------------------------------------------------------   01913300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01913400
                      AIF   (K'&ZXENTRYKEY LE 0).ZG486R  NOT I/O        01913500
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG486R           01913600
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01913700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG486P               01913800
                      AIF   (K'&ZCGPR GT 2).ZG486Q                      01913900
                      AIF   ('&ZCGPR' EQ '0').ZG486Q                    01914000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01914100
                      AIF   (T'&ZCGPR NE 'N').ZG486Q  INVALID REG NAME  01914200
.ZG486P               ANOP  ,                                           01914300
                      AIF   (T'&ZCGPR NE 'N').ZG486R  NON NUMERIC       01914400
                      AIF   ('&ZCGPR' LT '2').ZG486Q                    01914500
                      AIF   ('&ZCGPR' LE '12').ZG486R                   01914600
.ZG486Q               ANOP  ,                                           01914700
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           01914800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01914900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01915000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01915100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01915200
.ZG486R               ANOP  ,                                           01915300
.*------------------------------------------------------------------    01915400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01915500
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01915600
.*-------------------------------------------------------------------   01915700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01915800
.ZG490                ANOP  ,                                           01915900
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG490A              01916000
&ZTLC                 SETC 'EQUAL'                                      01916100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG491         01916200
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01916300
                      AIF   (N'&KEYREQTYPE LE 1).ZG490A  CK NUM         01916400
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01916500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01916600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01916700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01916800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01916900
.ZG490A               ANOP  ,                                           01917000
.*------------------------------------------------------------------    01917100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01917200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01917300
.ZG490A0              AIF   (K'&KEYRANGEEND LE 0).ZG490A1  OK           01917400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01917500
.ZG490A1              AIF   (K'&ZCVAL LE 0).ZG490A2  OK                 01917600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01917700
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01917800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01917900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01918000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01918100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01918200
.ZG490A2              ANOP  ,                                           01918300
.*-------------------------------------------------------------------   01918400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01918500
.ZG491                ANOP  ,                                           01918600
&ZTLC                 SETC 'LESSOREQUAL'                                01918700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG492         01918800
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01918900
                      AIF   (N'&KEYREQTYPE LE 1).ZG491A  CK NUM         01919000
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01919100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01919200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01919300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01919400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01919500
.ZG491A               ANOP  ,                                           01919600
.*------------------------------------------------------------------    01919700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01919800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01919900
.ZG491A0              AIF   (K'&KEYRANGEEND LE 0).ZG491A1  OK           01920000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01920100
.ZG491A1              AIF   (K'&ZCVAL LE 0).ZG491A2  OK                 01920200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01920300
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01920400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01920500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01920600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01920700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01920800
.ZG491A2              ANOP  ,                                           01920900
.*-------------------------------------------------------------------   01921000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01921100
.ZG492                ANOP  ,                                           01921200
&ZTLC                 SETC 'GREATEROREQUAL'                             01921300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG493         01921400
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01921500
                      AIF   (N'&KEYREQTYPE LE 1).ZG492A  CK NUM         01921600
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01921700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01921800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01921900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01922000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01922100
.ZG492A               ANOP  ,                                           01922200
.*------------------------------------------------------------------    01922300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01922400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01922500
.ZG492A0              AIF   (K'&KEYRANGEEND LE 0).ZG492A1  OK           01922600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01922700
.ZG492A1              AIF   (K'&ZCVAL LE 0).ZG492A2  OK                 01922800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01922900
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           01923000
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01923100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01923200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01923300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01923400
.ZG492A2              ANOP  ,                                           01923500
.*-------------------------------------------------------------------   01923600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01923700
.ZG493                ANOP  ,                                           01923800
&ZTLC                 SETC 'RANGE'                                      01923900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG497         01924000
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01924100
                      AIF   (N'&KEYREQTYPE LE 1).ZG493A  CK NUM         01924200
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           01924300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01924400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01924500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01924600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01924700
.ZG493A               ANOP  ,                                           01924800
.*----------------------------------------------------------------***   01924900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01925000
                      AIF   (N'&KEYRANGEEND LE 1).ZG495A  CK NUM        01925100
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           01925200
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01925300
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01925400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01925500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01925600
.ZG495A               ANOP  ,                                           01925700
.*-------------------------------------------------------------------   01925800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01925900
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01926000
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01926100
                      AIF   (N'&KEYRANGEEND GT 1).ZG495B  MULTI PARMS   01926200
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01926300
.ZG495B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG495C             01926400
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01926500
&ZMS                  SETC  ' '         *KRQDA*                         01926600
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01926700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01926800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01926900
.ZG495C               ANOP  ,                                           01927000
.*-------------------------------------------------------------------   01927100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01927200
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG495R  NOT I/O     01927300
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG495R        01927400
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01927500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG495P               01927600
                      AIF   (K'&ZCGPR GT 2).ZG495Q                      01927700
                      AIF   ('&ZCGPR' EQ '0').ZG495Q                    01927800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01927900
                      AIF   (T'&ZCGPR NE 'N').ZG495Q  INVALID REG NAME  01928000
.ZG495P               ANOP  ,                                           01928100
                      AIF   (T'&ZCGPR NE 'N').ZG495R  NON NUMERIC       01928200
                      AIF   ('&ZCGPR' LT '2').ZG495Q                    01928300
                      AIF   ('&ZCGPR' LE '12').ZG495R                   01928400
.ZG495Q               ANOP  ,                                           01928500
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           01928600
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01928700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01928800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01928900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01929000
.ZG495R               ANOP  ,                                           01929100
.*------------------------------------------------------------------    01929200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01929300
.ZG497                ANOP  ,                                           01929400
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01929500
                      AIF   (K'&XKEYREQTYPE GT 0).ZG497E  VALID ARG     01929600
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG497D  OMITTED      01929700
&ZASYSLNDX            SETA  0                                           01929800
.ZG497A               ANOP  ,           POSITIONAL MACRO KEY            01929900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01930000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG497C           01930100
&ZTLC                 SETC 'KEYREQTYPE'                                 01930200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG497A  01930300
.ZG497B               ANOP  ,                                           01930400
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01930500
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       01930600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01930700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01930800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01930900
                      AGO   .ZG497E                                     01931000
.ZG497C               ANOP  ,                                           01931100
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01931200
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           01931300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01931400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01931500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01931600
&ZMS                  SETC  '&ZMS "EQUAL",'                             01931700
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01931800
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01931900
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01932000
                      MNOTE 8,' &ZMS '                                  01932100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01932200
                      AGO   .ZG497E                                     01932300
.ZG497D               ANOP  ,                                           01932400
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01932500
.ZG497E               ANOP  ,                                           01932600
.*------------------------------------------------------------------    01932700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01932800
.ZG498                ANOP  ,                                           01932900
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01933000
                      AIF   (K'&XKEYCOMPARE GT 0).ZG498E  VALID ARG     01933100
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG498D  OMITTED      01933200
&ZASYSLNDX            SETA  0                                           01933300
.ZG498A               ANOP  ,           POSITIONAL MACRO KEY            01933400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01933500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG498C           01933600
&ZTLC                 SETC 'KEYCOMPARE'                                 01933700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG498A  01933800
.ZG498B               ANOP  ,                                           01933900
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01934000
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       01934100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01934200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01934300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01934400
                      AGO   .ZG498E                                     01934500
.ZG498C               ANOP  ,                                           01934600
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01934700
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           01934800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01934900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01935000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01935100
&ZMS                  SETC  '&ZMS "NO"'                                 01935200
&ZMS                  SETC  '&ZMS OR "YES".'                            01935300
                      MNOTE 8,' &ZMS '                                  01935400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01935500
                      AGO   .ZG498E                                     01935600
.ZG498D               ANOP  ,                                           01935700
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01935800
.ZG498E               ANOP  ,                                           01935900
.*------------------------------------------------------------------    01936000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01936100
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01936200
.*-------------------------------------------------------------------   01936300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01936400
.ZG501                ANOP  ,                                           01936500
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG501A             01936600
&ZTLC                 SETC 'NO'                                         01936700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG502        01936800
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01936900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG501A  CK NUM        01937000
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01937100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01937200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01937300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01937400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01937500
.ZG501A               ANOP  ,                                           01937600
.*------------------------------------------------------------------    01937700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01937800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01937900
.ZG501A0              AIF   (K'&SECONDARYKEY LE 0).ZG501A1  OK          01938000
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01938100
.ZG501A1              AIF   (K'&SKEYREQTYPE LE 0).ZG501A2  OK           01938200
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01938300
.ZG501A2              AIF   (K'&SKEYRANGEEND LE 0).ZG501A3  OK          01938400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01938500
.ZG501A3              AIF   (K'&ZCVAL LE 0).ZG501A4  OK                 01938600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01938700
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           01938800
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01938900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01939000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01939100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01939200
.ZG501A4              ANOP  ,                                           01939300
.*-------------------------------------------------------------------   01939400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01939500
.ZG502                ANOP  ,                                           01939600
&ZTLC                 SETC 'YES'                                        01939700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG516        01939800
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01939900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG502A  CK NUM        01940000
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           01940100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01940200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01940300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01940400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01940500
.ZG502A               ANOP  ,                                           01940600
.*----------------------------------------------------------------***   01940700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01940800
                      AIF   (N'&SECONDARYKEY LE 1).ZG504A  CK NUM       01940900
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           01941000
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01941100
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01941200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01941300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01941400
.ZG504A               ANOP  ,                                           01941500
.*-------------------------------------------------------------------   01941600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01941700
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01941800
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01941900
                      AIF   (N'&SECONDARYKEY GT 1).ZG504B  MULTI PARMS  01942000
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01942100
.ZG504B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG504C            01942200
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01942300
&ZMS                  SETC  ' '         *KRQDA*                         01942400
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01942500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01942600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01942700
.ZG504C               ANOP  ,                                           01942800
.*-------------------------------------------------------------------   01942900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01943000
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG504R  NOT I/O    01943100
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG504R       01943200
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01943300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG504P               01943400
                      AIF   (K'&ZCGPR GT 2).ZG504Q                      01943500
                      AIF   ('&ZCGPR' EQ '0').ZG504Q                    01943600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01943700
                      AIF   (T'&ZCGPR NE 'N').ZG504Q  INVALID REG NAME  01943800
.ZG504P               ANOP  ,                                           01943900
                      AIF   (T'&ZCGPR NE 'N').ZG504R  NON NUMERIC       01944000
                      AIF   ('&ZCGPR' LT '2').ZG504Q                    01944100
                      AIF   ('&ZCGPR' LE '12').ZG504R                   01944200
.ZG504Q               ANOP  ,                                           01944300
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           01944400
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01944500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01944600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01944700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01944800
.ZG504R               ANOP  ,                                           01944900
.*------------------------------------------------------------------    01945000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01945100
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01945200
.*-------------------------------------------------------------------   01945300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01945400
.ZG508                ANOP  ,                                           01945500
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG508A             01945600
&ZTLC                 SETC 'EQUAL'                                      01945700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG509        01945800
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01945900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG508A  CK NUM        01946000
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01946100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01946200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01946300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01946400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01946500
.ZG508A               ANOP  ,                                           01946600
.*------------------------------------------------------------------    01946700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01946800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01946900
.ZG508A0              AIF   (K'&SKEYRANGEEND LE 0).ZG508A1  OK          01947000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01947100
.ZG508A1              AIF   (K'&ZCVAL LE 0).ZG508A2  OK                 01947200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01947300
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01947400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01947500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01947600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01947700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01947800
.ZG508A2              ANOP  ,                                           01947900
.*-------------------------------------------------------------------   01948000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01948100
.ZG509                ANOP  ,                                           01948200
&ZTLC                 SETC 'LESSOREQUAL'                                01948300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG510        01948400
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01948500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG509A  CK NUM        01948600
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01948700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01948800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01948900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01949000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01949100
.ZG509A               ANOP  ,                                           01949200
.*------------------------------------------------------------------    01949300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01949400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01949500
.ZG509A0              AIF   (K'&SKEYRANGEEND LE 0).ZG509A1  OK          01949600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01949700
.ZG509A1              AIF   (K'&ZCVAL LE 0).ZG509A2  OK                 01949800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01949900
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01950000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01950100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01950200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01950300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01950400
.ZG509A2              ANOP  ,                                           01950500
.*-------------------------------------------------------------------   01950600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01950700
.ZG510                ANOP  ,                                           01950800
&ZTLC                 SETC 'GREATEROREQUAL'                             01950900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG511        01951000
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01951100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG510A  CK NUM        01951200
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01951300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01951400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01951500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01951600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01951700
.ZG510A               ANOP  ,                                           01951800
.*------------------------------------------------------------------    01951900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01952000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01952100
.ZG510A0              AIF   (K'&SKEYRANGEEND LE 0).ZG510A1  OK          01952200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01952300
.ZG510A1              AIF   (K'&ZCVAL LE 0).ZG510A2  OK                 01952400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01952500
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           01952600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01952700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01952800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01952900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01953000
.ZG510A2              ANOP  ,                                           01953100
.*-------------------------------------------------------------------   01953200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01953300
.ZG511                ANOP  ,                                           01953400
&ZTLC                 SETC 'RANGE'                                      01953500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG515        01953600
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01953700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG511A  CK NUM        01953800
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           01953900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01954000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01954100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01954200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01954300
.ZG511A               ANOP  ,                                           01954400
.*----------------------------------------------------------------***   01954500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01954600
                      AIF   (N'&SKEYRANGEEND LE 1).ZG513A  CK NUM       01954700
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           01954800
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01954900
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01955000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01955100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01955200
.ZG513A               ANOP  ,                                           01955300
.*-------------------------------------------------------------------   01955400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01955500
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01955600
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01955700
                      AIF   (N'&SKEYRANGEEND GT 1).ZG513B  MULTI PARMS  01955800
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01955900
.ZG513B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG513C            01956000
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01956100
&ZMS                  SETC  ' '         *KRQDA*                         01956200
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01956300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01956400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01956500
.ZG513C               ANOP  ,                                           01956600
.*-------------------------------------------------------------------   01956700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01956800
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG513R  NOT I/O    01956900
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG513R       01957000
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01957100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG513P               01957200
                      AIF   (K'&ZCGPR GT 2).ZG513Q                      01957300
                      AIF   ('&ZCGPR' EQ '0').ZG513Q                    01957400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01957500
                      AIF   (T'&ZCGPR NE 'N').ZG513Q  INVALID REG NAME  01957600
.ZG513P               ANOP  ,                                           01957700
                      AIF   (T'&ZCGPR NE 'N').ZG513R  NON NUMERIC       01957800
                      AIF   ('&ZCGPR' LT '2').ZG513Q                    01957900
                      AIF   ('&ZCGPR' LE '12').ZG513R                   01958000
.ZG513Q               ANOP  ,                                           01958100
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           01958200
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01958300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01958400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01958500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01958600
.ZG513R               ANOP  ,                                           01958700
.*------------------------------------------------------------------    01958800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01958900
.ZG515                ANOP  ,                                           01959000
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01959100
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG515E  VALID ARG    01959200
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG515D  OMITTED     01959300
&ZASYSLNDX            SETA  0                                           01959400
.ZG515A               ANOP  ,           POSITIONAL MACRO KEY            01959500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01959600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG515C           01959700
&ZTLC                 SETC 'SKEYREQTYPE'                                01959800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG515A  01959900
.ZG515B               ANOP  ,                                           01960000
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01960100
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      01960200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01960300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01960400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01960500
                      AGO   .ZG515E                                     01960600
.ZG515C               ANOP  ,                                           01960700
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01960800
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           01960900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01961000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01961100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01961200
&ZMS                  SETC  '&ZMS "EQUAL",'                             01961300
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01961400
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01961500
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01961600
                      MNOTE 8,' &ZMS '                                  01961700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01961800
                      AGO   .ZG515E                                     01961900
.ZG515D               ANOP  ,                                           01962000
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01962100
.ZG515E               ANOP  ,                                           01962200
.*------------------------------------------------------------------    01962300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01962400
.ZG516                ANOP  ,                                           01962500
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01962600
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG516E  VALID ARG    01962700
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG516D  OMITTED     01962800
&ZASYSLNDX            SETA  0                                           01962900
.ZG516A               ANOP  ,           POSITIONAL MACRO KEY            01963000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01963100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG516C           01963200
&ZTLC                 SETC 'SKEYCOMPARE'                                01963300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG516A  01963400
.ZG516B               ANOP  ,                                           01963500
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01963600
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      01963700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01963800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01963900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01964000
                      AGO   .ZG516E                                     01964100
.ZG516C               ANOP  ,                                           01964200
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01964300
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           01964400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01964500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01964600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01964700
&ZMS                  SETC  '&ZMS "NO"'                                 01964800
&ZMS                  SETC  '&ZMS OR "YES".'                            01964900
                      MNOTE 8,' &ZMS '                                  01965000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01965100
                      AGO   .ZG516E                                     01965200
.ZG516D               ANOP  ,                                           01965300
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01965400
.ZG516E               ANOP  ,                                           01965500
.*-------------------------------------------------------------------   01965600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01965700
.ZG517                ANOP  ,                                           01965800
&ZTLC                 SETC 'ENTRYNAME'                                  01965900
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG542            01966000
&XLOCATOR             SETC  'ENTRYNAME'         SET KEYWORD             01966100
                      AIF   (N'&LOCATOR LE 1).ZG517A  CK NUM            01966200
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           01966300
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01966400
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01966500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01966600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01966700
.ZG517A               ANOP  ,                                           01966800
.*------------------------------------------------------------------    01966900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01967000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01967100
.ZG517A0              AIF   (K'&KEYSCANTYPE LE 0).ZG517A1  OK           01967200
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     01967300
.ZG517A1              AIF   (K'&KEYCOMPARE LE 0).ZG517A2  OK            01967400
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      01967500
.ZG517A2              AIF   (K'&ENTRYKEY LE 0).ZG517A3  OK              01967600
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01967700
.ZG517A3              AIF   (K'&KEYREQTYPE LE 0).ZG517A4  OK            01967800
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01967900
.ZG517A4              AIF   (K'&KEYRANGEEND LE 0).ZG517A5  OK           01968000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01968100
.ZG517A5              AIF   (K'&SKEYCOMPARE LE 0).ZG517A6  OK           01968200
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     01968300
.ZG517A6              AIF   (K'&SECONDARYKEY LE 0).ZG517A7  OK          01968400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01968500
.ZG517A7              AIF   (K'&SKEYREQTYPE LE 0).ZG517A8  OK           01968600
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01968700
.ZG517A8              AIF   (K'&SKEYRANGEEND LE 0).ZG517A9  OK          01968800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01968900
.ZG517A9              AIF   (K'&ENTRYID LE 0).ZG517A10  OK              01969000
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01969100
.ZG517A10             AIF   (K'&KEYTYPE LE 0).ZG517A11  OK              01969200
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01969300
.ZG517A11             AIF   (K'&ZCVAL LE 0).ZG517A12  OK                01969400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01969500
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   01969600
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01969700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01969800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01969900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01970000
.ZG517A12             ANOP  ,                                           01970100
.*----------------------------------------------------------------***   01970200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01970300
                      AIF   (N'&ENTRYNAME LE 1).ZG519A  CK NUM          01970400
&ZMS                  SETC  '"ENTRYNAME='       *KPOSA* MNOTE           01970500
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          01970600
&ZMS                  SETC  '&ZMS "ENTRYNAME"'                          01970700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01970800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01970900
.ZG519A               ANOP  ,                                           01971000
.*-------------------------------------------------------------------   01971100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01971200
&ZXENTRYNAME          SETC  'INPUT'     SET IN/OUTPUT                   01971300
&XENTRYNAME           SETC  '&ENTRYNAME(1)'     SET XVARIABLE           01971400
                      AIF   (N'&ENTRYNAME GT 1).ZG519B  MULTI PARMS     01971500
&XENTRYNAME           SETC  '&ENTRYNAME'        SET XVARIABLE           01971600
.ZG519B               AIF   (K'&ENTRYNAME(1) GT 0).ZG519C               01971700
&ZXENTRYNAME          SETC  ''          RESET IN/OUTPUT                 01971800
&ZMS                  SETC  ' '         *KRQDA*                         01971900
&ZMS                  SETC  '&ZMS "ENTRYNAME" KEY AND ITS'              01972000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01972100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01972200
.ZG519C               ANOP  ,                                           01972300
.*-------------------------------------------------------------------   01972400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01972500
                      AIF   (K'&ZXENTRYNAME LE 0).ZG519R  NOT I/O       01972600
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZG519R          01972700
&ZCGPR                SETC  '&XENTRYNAME'(2,K'&XENTRYNAME-2)            01972800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG519P               01972900
                      AIF   (K'&ZCGPR GT 2).ZG519Q                      01973000
                      AIF   ('&ZCGPR' EQ '0').ZG519Q                    01973100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01973200
                      AIF   (T'&ZCGPR NE 'N').ZG519Q  INVALID REG NAME  01973300
.ZG519P               ANOP  ,                                           01973400
                      AIF   (T'&ZCGPR NE 'N').ZG519R  NON NUMERIC       01973500
                      AIF   ('&ZCGPR' LT '2').ZG519Q                    01973600
                      AIF   ('&ZCGPR' LE '12').ZG519R                   01973700
.ZG519Q               ANOP  ,                                           01973800
&ZMS                  SETC  '"ENTRYNAME='       *KGPRA* MNOTE           01973900
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          01974000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01974100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01974200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01974300
.ZG519R               ANOP  ,                                           01974400
.*------------------------------------------------------------------    01974500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01974600
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01974700
.*-------------------------------------------------------------------   01974800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01974900
.ZG523                ANOP  ,                                           01975000
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG523A             01975100
&ZTLC                 SETC 'NO'                                         01975200
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG524        01975300
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     01975400
                      AIF   (N'&LISTCOMPARE LE 1).ZG523A  CK NUM        01975500
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01975600
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01975700
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01975800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01975900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01976000
.ZG523A               ANOP  ,                                           01976100
.*------------------------------------------------------------------    01976200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01976300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01976400
.ZG523A0              AIF   (K'&LISTNUM LE 0).ZG523A1  OK               01976500
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01976600
.ZG523A1              AIF   (K'&AUTHCOMPARE LE 0).ZG523A2  OK           01976700
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     01976800
.ZG523A2              AIF   (K'&AUTHCOMP LE 0).ZG523A3  OK              01976900
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01977000
.ZG523A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG523A4  OK          01977100
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01977200
.ZG523A4              AIF   (K'&ZCVAL LE 0).ZG523A5  OK                 01977300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01977400
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           01977500
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       01977600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01977700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01977800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01977900
.ZG523A5              ANOP  ,                                           01978000
.*-------------------------------------------------------------------   01978100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01978200
.ZG524                ANOP  ,                                           01978300
&ZTLC                 SETC 'YES'                                        01978400
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG541        01978500
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     01978600
                      AIF   (N'&LISTCOMPARE LE 1).ZG524A  CK NUM        01978700
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           01978800
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01978900
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01979000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01979100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01979200
.ZG524A               ANOP  ,                                           01979300
.*----------------------------------------------------------------***   01979400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01979500
                      AIF   (N'&LISTNUM LE 1).ZG526A  CK NUM            01979600
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           01979700
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01979800
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01979900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01980000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01980100
.ZG526A               ANOP  ,                                           01980200
.*-------------------------------------------------------------------   01980300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01980400
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01980500
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01980600
                      AIF   (N'&LISTNUM GT 1).ZG526B  MULTI PARMS       01980700
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01980800
.ZG526B               AIF   (K'&LISTNUM(1) GT 0).ZG526C                 01980900
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01981000
&ZMS                  SETC  ' '         *KRQDA*                         01981100
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01981200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01981300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01981400
.ZG526C               ANOP  ,                                           01981500
.*-------------------------------------------------------------------   01981600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01981700
                      AIF   (K'&ZXLISTNUM LE 0).ZG526R  NOT I/O         01981800
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG526R            01981900
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01982000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG526P               01982100
                      AIF   (K'&ZCGPR GT 2).ZG526Q                      01982200
                      AIF   ('&ZCGPR' EQ '0').ZG526Q                    01982300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01982400
                      AIF   (T'&ZCGPR NE 'N').ZG526Q  INVALID REG NAME  01982500
.ZG526P               ANOP  ,                                           01982600
                      AIF   (T'&ZCGPR NE 'N').ZG526R  NON NUMERIC       01982700
                      AIF   ('&ZCGPR' LT '2').ZG526Q                    01982800
                      AIF   ('&ZCGPR' LE '12').ZG526R                   01982900
.ZG526Q               ANOP  ,                                           01983000
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           01983100
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01983200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01983300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01983400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01983500
.ZG526R               ANOP  ,                                           01983600
.*------------------------------------------------------------------    01983700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01983800
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01983900
.*-------------------------------------------------------------------   01984000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01984100
.ZG530                ANOP  ,                                           01984200
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG530A             01984300
&ZTLC                 SETC 'NO'                                         01984400
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG531        01984500
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01984600
                      AIF   (N'&AUTHCOMPARE LE 1).ZG530A  CK NUM        01984700
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01984800
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01984900
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01985000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01985100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01985200
.ZG530A               ANOP  ,                                           01985300
.*------------------------------------------------------------------    01985400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01985500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01985600
.ZG530A0              AIF   (K'&AUTHCOMP LE 0).ZG530A1  OK              01985700
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01985800
.ZG530A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG530A2  OK          01985900
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01986000
.ZG530A2              AIF   (K'&ZCVAL LE 0).ZG530A3  OK                 01986100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01986200
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           01986300
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01986400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01986500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01986600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01986700
.ZG530A3              ANOP  ,                                           01986800
.*-------------------------------------------------------------------   01986900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01987000
.ZG531                ANOP  ,                                           01987100
&ZTLC                 SETC 'YES'                                        01987200
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG540        01987300
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01987400
                      AIF   (N'&AUTHCOMPARE LE 1).ZG531A  CK NUM        01987500
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           01987600
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01987700
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01987800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01987900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01988000
.ZG531A               ANOP  ,                                           01988100
.*----------------------------------------------------------------***   01988200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01988300
                      AIF   (N'&AUTHCOMP LE 1).ZG533A  CK NUM           01988400
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           01988500
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01988600
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01988700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01988800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01988900
.ZG533A               ANOP  ,                                           01989000
.*-------------------------------------------------------------------   01989100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01989200
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01989300
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01989400
                      AIF   (N'&AUTHCOMP GT 1).ZG533B  MULTI PARMS      01989500
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01989600
.ZG533B               AIF   (K'&AUTHCOMP(1) GT 0).ZG533C                01989700
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01989800
&ZMS                  SETC  ' '         *KRQDA*                         01989900
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01990000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01990100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01990200
.ZG533C               ANOP  ,                                           01990300
.*-------------------------------------------------------------------   01990400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01990500
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG533R  NOT I/O        01990600
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG533R           01990700
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01990800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG533P               01990900
                      AIF   (K'&ZCGPR GT 2).ZG533Q                      01991000
                      AIF   ('&ZCGPR' EQ '0').ZG533Q                    01991100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01991200
                      AIF   (T'&ZCGPR NE 'N').ZG533Q  INVALID REG NAME  01991300
.ZG533P               ANOP  ,                                           01991400
                      AIF   (T'&ZCGPR NE 'N').ZG533R  NON NUMERIC       01991500
                      AIF   ('&ZCGPR' LT '2').ZG533Q                    01991600
                      AIF   ('&ZCGPR' LE '12').ZG533R                   01991700
.ZG533Q               ANOP  ,                                           01991800
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           01991900
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01992000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01992100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01992200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01992300
.ZG533R               ANOP  ,                                           01992400
.*----------------------------------------------------------------***   01992500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01992600
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG535A  CK NUM       01992700
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           01992800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01992900
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01993000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01993100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01993200
.ZG535A               ANOP  ,                                           01993300
.*-------------------------------------------------------------------   01993400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01993500
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01993600
.ZG536A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG537A                  01993700
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01993800
.*-------------------------------------------------------------------   01993900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01994000
.ZG537A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG538A            01994100
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01994200
.*-------------------------------------------------------------------   01994300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01994400
.ZG538A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG538C  KEYWORD     01994500
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG538B            01994600
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           01994700
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01994800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01994900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01995000
&ZMS                  SETC  '&ZMS "EQUAL"'                              01995100
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01995200
                      MNOTE 8,' &ZMS '                                  01995300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01995400
.ZG538B               ANOP  ,                                           01995500
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01995600
.ZG538C               ANOP  ,                                           01995700
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01995800
.*-------------------------------------------------------------------   01995900
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01996000
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG538D  KEY           01996100
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG538D  PARM      01996200
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           01996300
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01996400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01996500
&ZMS                  SETC  '&ZMS '                                     01996600
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01996700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01996800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01996900
.ZG538D               ANOP  ,                                           01997000
.*------------------------------------------------------------------    01997100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01997200
.ZG540                ANOP  ,                                           01997300
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01997400
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG540E  VALID ARG    01997500
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG540D  OMITTED     01997600
&ZASYSLNDX            SETA  0                                           01997700
.ZG540A               ANOP  ,           POSITIONAL MACRO KEY            01997800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01997900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG540C           01998000
&ZTLC                 SETC 'AUTHCOMPARE'                                01998100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG540A  01998200
.ZG540B               ANOP  ,                                           01998300
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01998400
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      01998500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01998600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01998700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01998800
                      AGO   .ZG540E                                     01998900
.ZG540C               ANOP  ,                                           01999000
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01999100
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           01999200
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01999300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01999400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01999500
&ZMS                  SETC  '&ZMS "NO"'                                 01999600
&ZMS                  SETC  '&ZMS OR "YES".'                            01999700
                      MNOTE 8,' &ZMS '                                  01999800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01999900
                      AGO   .ZG540E                                     02000000
.ZG540D               ANOP  ,                                           02000100
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02000200
.ZG540E               ANOP  ,                                           02000300
.*------------------------------------------------------------------    02000400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02000500
.ZG541                ANOP  ,                                           02000600
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02000700
                      AIF   (K'&XLISTCOMPARE GT 0).ZG541E  VALID ARG    02000800
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG541D  OMITTED     02000900
&ZASYSLNDX            SETA  0                                           02001000
.ZG541A               ANOP  ,           POSITIONAL MACRO KEY            02001100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02001200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG541C           02001300
&ZTLC                 SETC 'LISTCOMPARE'                                02001400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG541A  02001500
.ZG541B               ANOP  ,                                           02001600
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02001700
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      02001800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02001900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02002000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02002100
                      AGO   .ZG541E                                     02002200
.ZG541C               ANOP  ,                                           02002300
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02002400
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           02002500
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02002600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02002700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02002800
&ZMS                  SETC  '&ZMS "NO"'                                 02002900
&ZMS                  SETC  '&ZMS OR "YES".'                            02003000
                      MNOTE 8,' &ZMS '                                  02003100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02003200
                      AGO   .ZG541E                                     02003300
.ZG541D               ANOP  ,                                           02003400
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02003500
.ZG541E               ANOP  ,                                           02003600
.*-------------------------------------------------------------------   02003700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02003800
.ZG542                ANOP  ,                                           02003900
&ZTLC                 SETC 'UNKEYPOS'                                   02004000
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG600            02004100
&XLOCATOR             SETC  'UNKEYPOS'  SET KEYWORD                     02004200
                      AIF   (N'&LOCATOR LE 1).ZG542A  CK NUM            02004300
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           02004400
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            02004500
&ZMS                  SETC  '&ZMS "LOCATOR"'                            02004600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02004700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02004800
.ZG542A               ANOP  ,                                           02004900
.*------------------------------------------------------------------    02005000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02005100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02005200
.ZG542A0              AIF   (K'&ENTRYID LE 0).ZG542A1  OK               02005300
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02005400
.ZG542A1              AIF   (K'&LISTCOMPARE LE 0).ZG542A2  OK           02005500
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     02005600
.ZG542A2              AIF   (K'&ENTRYNAME LE 0).ZG542A3  OK             02005700
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02005800
.ZG542A3              AIF   (K'&KEYTYPE LE 0).ZG542A4  OK               02005900
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02006000
.ZG542A4              AIF   (K'&ZCVAL LE 0).ZG542A5  OK                 02006100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02006200
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   02006300
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           02006400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02006500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02006600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02006700
.ZG542A5              ANOP  ,                                           02006800
.*----------------------------------------------------------------***   02006900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02007000
                      AIF   (N'&LISTNUM LE 1).ZG544A  CK NUM            02007100
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           02007200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02007300
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02007400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02007500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02007600
.ZG544A               ANOP  ,                                           02007700
.*-------------------------------------------------------------------   02007800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02007900
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02008000
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02008100
                      AIF   (N'&LISTNUM GT 1).ZG544B  MULTI PARMS       02008200
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02008300
.ZG544B               AIF   (K'&LISTNUM(1) GT 0).ZG544C                 02008400
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02008500
&ZMS                  SETC  ' '         *KRQDA*                         02008600
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02008700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02008800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02008900
.ZG544C               ANOP  ,                                           02009000
.*-------------------------------------------------------------------   02009100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02009200
                      AIF   (K'&ZXLISTNUM LE 0).ZG544R  NOT I/O         02009300
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG544R            02009400
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02009500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG544P               02009600
                      AIF   (K'&ZCGPR GT 2).ZG544Q                      02009700
                      AIF   ('&ZCGPR' EQ '0').ZG544Q                    02009800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02009900
                      AIF   (T'&ZCGPR NE 'N').ZG544Q  INVALID REG NAME  02010000
.ZG544P               ANOP  ,                                           02010100
                      AIF   (T'&ZCGPR NE 'N').ZG544R  NON NUMERIC       02010200
                      AIF   ('&ZCGPR' LT '2').ZG544Q                    02010300
                      AIF   ('&ZCGPR' LE '12').ZG544R                   02010400
.ZG544Q               ANOP  ,                                           02010500
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           02010600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02010700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02010800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02010900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02011000
.ZG544R               ANOP  ,                                           02011100
.*----------------------------------------------------------------***   02011200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02011300
                      AIF   (N'&KEYSCANTYPE LE 1).ZG547A  CK NUM        02011400
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           02011500
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02011600
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        02011700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02011800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02011900
.ZG547A               ANOP  ,                                           02012000
.*-------------------------------------------------------------------   02012100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02012200
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            02012300
.ZG548A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG549A                   02012400
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     02012500
.*-------------------------------------------------------------------   02012600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02012700
.ZG549A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG550A               02012800
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             02012900
.*-------------------------------------------------------------------   02013000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02013100
.ZG550A               AIF   (K'&XKEYSCANTYPE GT 0).ZG550C  KEYWORD      02013200
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG550B             02013300
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           02013400
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02013500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02013600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02013700
&ZMS                  SETC  '&ZMS "ENTRY"'                              02013800
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      02013900
                      MNOTE 8,' &ZMS '                                  02014000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02014100
.ZG550B               ANOP  ,                                           02014200
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             02014300
.ZG550C               ANOP  ,                                           02014400
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02014500
.*------------------------------------------------------------------    02014600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02014700
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02014800
.*-------------------------------------------------------------------   02014900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02015000
.ZG553                ANOP  ,                                           02015100
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG553A             02015200
&ZTLC                 SETC 'NO'                                         02015300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG554        02015400
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02015500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG553A  CK NUM        02015600
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02015700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02015800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02015900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02016000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02016100
.ZG553A               ANOP  ,                                           02016200
.*------------------------------------------------------------------    02016300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02016400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02016500
.ZG553A0              AIF   (K'&AUTHCOMP LE 0).ZG553A1  OK              02016600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02016700
.ZG553A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG553A2  OK          02016800
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02016900
.ZG553A2              AIF   (K'&ZCVAL LE 0).ZG553A3  OK                 02017000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02017100
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           02017200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02017300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02017400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02017500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02017600
.ZG553A3              ANOP  ,                                           02017700
.*-------------------------------------------------------------------   02017800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02017900
.ZG554                ANOP  ,                                           02018000
&ZTLC                 SETC 'YES'                                        02018100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG563        02018200
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02018300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG554A  CK NUM        02018400
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02018500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02018600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02018700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02018800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02018900
.ZG554A               ANOP  ,                                           02019000
.*----------------------------------------------------------------***   02019100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02019200
                      AIF   (N'&AUTHCOMP LE 1).ZG556A  CK NUM           02019300
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           02019400
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02019500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02019600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02019700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02019800
.ZG556A               ANOP  ,                                           02019900
.*-------------------------------------------------------------------   02020000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02020100
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02020200
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02020300
                      AIF   (N'&AUTHCOMP GT 1).ZG556B  MULTI PARMS      02020400
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02020500
.ZG556B               AIF   (K'&AUTHCOMP(1) GT 0).ZG556C                02020600
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02020700
&ZMS                  SETC  ' '         *KRQDA*                         02020800
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02020900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02021000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02021100
.ZG556C               ANOP  ,                                           02021200
.*-------------------------------------------------------------------   02021300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02021400
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG556R  NOT I/O        02021500
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG556R           02021600
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02021700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG556P               02021800
                      AIF   (K'&ZCGPR GT 2).ZG556Q                      02021900
                      AIF   ('&ZCGPR' EQ '0').ZG556Q                    02022000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02022100
                      AIF   (T'&ZCGPR NE 'N').ZG556Q  INVALID REG NAME  02022200
.ZG556P               ANOP  ,                                           02022300
                      AIF   (T'&ZCGPR NE 'N').ZG556R  NON NUMERIC       02022400
                      AIF   ('&ZCGPR' LT '2').ZG556Q                    02022500
                      AIF   ('&ZCGPR' LE '12').ZG556R                   02022600
.ZG556Q               ANOP  ,                                           02022700
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           02022800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02022900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02023000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02023100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02023200
.ZG556R               ANOP  ,                                           02023300
.*----------------------------------------------------------------***   02023400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02023500
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG558A  CK NUM       02023600
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           02023700
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02023800
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02023900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02024000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02024100
.ZG558A               ANOP  ,                                           02024200
.*-------------------------------------------------------------------   02024300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02024400
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02024500
.ZG559A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG560A                  02024600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02024700
.*-------------------------------------------------------------------   02024800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02024900
.ZG560A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG561A            02025000
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02025100
.*-------------------------------------------------------------------   02025200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02025300
.ZG561A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG561C  KEYWORD     02025400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG561B            02025500
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           02025600
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02025700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02025800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02025900
&ZMS                  SETC  '&ZMS "EQUAL"'                              02026000
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02026100
                      MNOTE 8,' &ZMS '                                  02026200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02026300
.ZG561B               ANOP  ,                                           02026400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02026500
.ZG561C               ANOP  ,                                           02026600
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02026700
.*-------------------------------------------------------------------   02026800
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02026900
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG561D  KEY           02027000
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG561D  PARM      02027100
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           02027200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02027300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02027400
&ZMS                  SETC  '&ZMS '                                     02027500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02027600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02027700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02027800
.ZG561D               ANOP  ,                                           02027900
.*------------------------------------------------------------------    02028000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02028100
.ZG563                ANOP  ,                                           02028200
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02028300
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG563E  VALID ARG    02028400
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG563D  OMITTED     02028500
&ZASYSLNDX            SETA  0                                           02028600
.ZG563A               ANOP  ,           POSITIONAL MACRO KEY            02028700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02028800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG563C           02028900
&ZTLC                 SETC 'AUTHCOMPARE'                                02029000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG563A  02029100
.ZG563B               ANOP  ,                                           02029200
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02029300
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      02029400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02029500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02029600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02029700
                      AGO   .ZG563E                                     02029800
.ZG563C               ANOP  ,                                           02029900
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02030000
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           02030100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02030200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02030300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02030400
&ZMS                  SETC  '&ZMS "NO"'                                 02030500
&ZMS                  SETC  '&ZMS OR "YES".'                            02030600
                      MNOTE 8,' &ZMS '                                  02030700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02030800
                      AGO   .ZG563E                                     02030900
.ZG563D               ANOP  ,                                           02031000
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02031100
.ZG563E               ANOP  ,                                           02031200
.*------------------------------------------------------------------    02031300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02031400
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02031500
.*-------------------------------------------------------------------   02031600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02031700
.ZG566                ANOP  ,                                           02031800
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG566A              02031900
&ZTLC                 SETC 'NO'                                         02032000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG567         02032100
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02032200
                      AIF   (N'&KEYCOMPARE LE 1).ZG566A  CK NUM         02032300
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02032400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02032500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02032600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02032700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02032800
.ZG566A               ANOP  ,                                           02032900
.*------------------------------------------------------------------    02033000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02033100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02033200
.ZG566A0              AIF   (K'&ENTRYKEY LE 0).ZG566A1  OK              02033300
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02033400
.ZG566A1              AIF   (K'&KEYREQTYPE LE 0).ZG566A2  OK            02033500
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02033600
.ZG566A2              AIF   (K'&KEYRANGEEND LE 0).ZG566A3  OK           02033700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02033800
.ZG566A3              AIF   (K'&ZCVAL LE 0).ZG566A4  OK                 02033900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02034000
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           02034100
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02034200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02034300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02034400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02034500
.ZG566A4              ANOP  ,                                           02034600
.*-------------------------------------------------------------------   02034700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02034800
.ZG567                ANOP  ,                                           02034900
&ZTLC                 SETC 'YES'                                        02035000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG581         02035100
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02035200
                      AIF   (N'&KEYCOMPARE LE 1).ZG567A  CK NUM         02035300
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02035400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02035500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02035600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02035700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02035800
.ZG567A               ANOP  ,                                           02035900
.*----------------------------------------------------------------***   02036000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02036100
                      AIF   (N'&ENTRYKEY LE 1).ZG569A  CK NUM           02036200
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           02036300
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02036400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02036500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02036600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02036700
.ZG569A               ANOP  ,                                           02036800
.*-------------------------------------------------------------------   02036900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02037000
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02037100
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02037200
                      AIF   (N'&ENTRYKEY GT 1).ZG569B  MULTI PARMS      02037300
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02037400
.ZG569B               AIF   (K'&ENTRYKEY(1) GT 0).ZG569C                02037500
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02037600
&ZMS                  SETC  ' '         *KRQDA*                         02037700
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02037800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02037900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02038000
.ZG569C               ANOP  ,                                           02038100
.*-------------------------------------------------------------------   02038200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02038300
                      AIF   (K'&ZXENTRYKEY LE 0).ZG569R  NOT I/O        02038400
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG569R           02038500
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02038600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG569P               02038700
                      AIF   (K'&ZCGPR GT 2).ZG569Q                      02038800
                      AIF   ('&ZCGPR' EQ '0').ZG569Q                    02038900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02039000
                      AIF   (T'&ZCGPR NE 'N').ZG569Q  INVALID REG NAME  02039100
.ZG569P               ANOP  ,                                           02039200
                      AIF   (T'&ZCGPR NE 'N').ZG569R  NON NUMERIC       02039300
                      AIF   ('&ZCGPR' LT '2').ZG569Q                    02039400
                      AIF   ('&ZCGPR' LE '12').ZG569R                   02039500
.ZG569Q               ANOP  ,                                           02039600
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           02039700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02039800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02039900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02040000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02040100
.ZG569R               ANOP  ,                                           02040200
.*------------------------------------------------------------------    02040300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02040400
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02040500
.*-------------------------------------------------------------------   02040600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02040700
.ZG573                ANOP  ,                                           02040800
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG573A              02040900
&ZTLC                 SETC 'EQUAL'                                      02041000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG574         02041100
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02041200
                      AIF   (N'&KEYREQTYPE LE 1).ZG573A  CK NUM         02041300
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02041400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02041500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02041600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02041700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02041800
.ZG573A               ANOP  ,                                           02041900
.*------------------------------------------------------------------    02042000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02042100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02042200
.ZG573A0              AIF   (K'&KEYRANGEEND LE 0).ZG573A1  OK           02042300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02042400
.ZG573A1              AIF   (K'&ZCVAL LE 0).ZG573A2  OK                 02042500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02042600
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02042700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02042800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02042900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02043000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02043100
.ZG573A2              ANOP  ,                                           02043200
.*-------------------------------------------------------------------   02043300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02043400
.ZG574                ANOP  ,                                           02043500
&ZTLC                 SETC 'LESSOREQUAL'                                02043600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG575         02043700
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02043800
                      AIF   (N'&KEYREQTYPE LE 1).ZG574A  CK NUM         02043900
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02044000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02044100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02044200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02044300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02044400
.ZG574A               ANOP  ,                                           02044500
.*------------------------------------------------------------------    02044600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02044700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02044800
.ZG574A0              AIF   (K'&KEYRANGEEND LE 0).ZG574A1  OK           02044900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02045000
.ZG574A1              AIF   (K'&ZCVAL LE 0).ZG574A2  OK                 02045100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02045200
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02045300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02045400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02045500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02045600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02045700
.ZG574A2              ANOP  ,                                           02045800
.*-------------------------------------------------------------------   02045900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02046000
.ZG575                ANOP  ,                                           02046100
&ZTLC                 SETC 'GREATEROREQUAL'                             02046200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG576         02046300
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02046400
                      AIF   (N'&KEYREQTYPE LE 1).ZG575A  CK NUM         02046500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02046600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02046700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02046800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02046900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02047000
.ZG575A               ANOP  ,                                           02047100
.*------------------------------------------------------------------    02047200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02047300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02047400
.ZG575A0              AIF   (K'&KEYRANGEEND LE 0).ZG575A1  OK           02047500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02047600
.ZG575A1              AIF   (K'&ZCVAL LE 0).ZG575A2  OK                 02047700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02047800
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02047900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02048000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02048100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02048200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02048300
.ZG575A2              ANOP  ,                                           02048400
.*-------------------------------------------------------------------   02048500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02048600
.ZG576                ANOP  ,                                           02048700
&ZTLC                 SETC 'RANGE'                                      02048800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG580         02048900
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02049000
                      AIF   (N'&KEYREQTYPE LE 1).ZG576A  CK NUM         02049100
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02049200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02049300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02049400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02049500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02049600
.ZG576A               ANOP  ,                                           02049700
.*----------------------------------------------------------------***   02049800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02049900
                      AIF   (N'&KEYRANGEEND LE 1).ZG578A  CK NUM        02050000
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           02050100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02050200
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02050300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02050400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02050500
.ZG578A               ANOP  ,                                           02050600
.*-------------------------------------------------------------------   02050700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02050800
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02050900
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02051000
                      AIF   (N'&KEYRANGEEND GT 1).ZG578B  MULTI PARMS   02051100
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02051200
.ZG578B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG578C             02051300
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02051400
&ZMS                  SETC  ' '         *KRQDA*                         02051500
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02051600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02051700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02051800
.ZG578C               ANOP  ,                                           02051900
.*-------------------------------------------------------------------   02052000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02052100
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG578R  NOT I/O     02052200
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG578R        02052300
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02052400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG578P               02052500
                      AIF   (K'&ZCGPR GT 2).ZG578Q                      02052600
                      AIF   ('&ZCGPR' EQ '0').ZG578Q                    02052700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02052800
                      AIF   (T'&ZCGPR NE 'N').ZG578Q  INVALID REG NAME  02052900
.ZG578P               ANOP  ,                                           02053000
                      AIF   (T'&ZCGPR NE 'N').ZG578R  NON NUMERIC       02053100
                      AIF   ('&ZCGPR' LT '2').ZG578Q                    02053200
                      AIF   ('&ZCGPR' LE '12').ZG578R                   02053300
.ZG578Q               ANOP  ,                                           02053400
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           02053500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02053600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02053700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02053800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02053900
.ZG578R               ANOP  ,                                           02054000
.*------------------------------------------------------------------    02054100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02054200
.ZG580                ANOP  ,                                           02054300
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02054400
                      AIF   (K'&XKEYREQTYPE GT 0).ZG580E  VALID ARG     02054500
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG580D  OMITTED      02054600
&ZASYSLNDX            SETA  0                                           02054700
.ZG580A               ANOP  ,           POSITIONAL MACRO KEY            02054800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02054900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG580C           02055000
&ZTLC                 SETC 'KEYREQTYPE'                                 02055100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG580A  02055200
.ZG580B               ANOP  ,                                           02055300
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02055400
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       02055500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02055600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02055700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02055800
                      AGO   .ZG580E                                     02055900
.ZG580C               ANOP  ,                                           02056000
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02056100
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           02056200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02056300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02056400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02056500
&ZMS                  SETC  '&ZMS "EQUAL",'                             02056600
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02056700
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02056800
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02056900
                      MNOTE 8,' &ZMS '                                  02057000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02057100
                      AGO   .ZG580E                                     02057200
.ZG580D               ANOP  ,                                           02057300
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02057400
.ZG580E               ANOP  ,                                           02057500
.*------------------------------------------------------------------    02057600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02057700
.ZG581                ANOP  ,                                           02057800
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02057900
                      AIF   (K'&XKEYCOMPARE GT 0).ZG581E  VALID ARG     02058000
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG581D  OMITTED      02058100
&ZASYSLNDX            SETA  0                                           02058200
.ZG581A               ANOP  ,           POSITIONAL MACRO KEY            02058300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02058400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG581C           02058500
&ZTLC                 SETC 'KEYCOMPARE'                                 02058600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG581A  02058700
.ZG581B               ANOP  ,                                           02058800
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02058900
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       02059000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02059100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02059200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02059300
                      AGO   .ZG581E                                     02059400
.ZG581C               ANOP  ,                                           02059500
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02059600
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           02059700
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02059800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02059900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02060000
&ZMS                  SETC  '&ZMS "NO"'                                 02060100
&ZMS                  SETC  '&ZMS OR "YES".'                            02060200
                      MNOTE 8,' &ZMS '                                  02060300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02060400
                      AGO   .ZG581E                                     02060500
.ZG581D               ANOP  ,                                           02060600
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02060700
.ZG581E               ANOP  ,                                           02060800
.*------------------------------------------------------------------    02060900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02061000
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02061100
.*-------------------------------------------------------------------   02061200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02061300
.ZG584                ANOP  ,                                           02061400
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG584A             02061500
&ZTLC                 SETC 'NO'                                         02061600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG585        02061700
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02061800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG584A  CK NUM        02061900
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02062000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02062100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02062200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02062300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02062400
.ZG584A               ANOP  ,                                           02062500
.*------------------------------------------------------------------    02062600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02062700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02062800
.ZG584A0              AIF   (K'&SECONDARYKEY LE 0).ZG584A1  OK          02062900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02063000
.ZG584A1              AIF   (K'&SKEYREQTYPE LE 0).ZG584A2  OK           02063100
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02063200
.ZG584A2              AIF   (K'&SKEYRANGEEND LE 0).ZG584A3  OK          02063300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02063400
.ZG584A3              AIF   (K'&ZCVAL LE 0).ZG584A4  OK                 02063500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02063600
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           02063700
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02063800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02063900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02064000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02064100
.ZG584A4              ANOP  ,                                           02064200
.*-------------------------------------------------------------------   02064300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02064400
.ZG585                ANOP  ,                                           02064500
&ZTLC                 SETC 'YES'                                        02064600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG599        02064700
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02064800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG585A  CK NUM        02064900
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02065000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02065100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02065200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02065300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02065400
.ZG585A               ANOP  ,                                           02065500
.*----------------------------------------------------------------***   02065600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02065700
                      AIF   (N'&SECONDARYKEY LE 1).ZG587A  CK NUM       02065800
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           02065900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02066000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02066100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02066200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02066300
.ZG587A               ANOP  ,                                           02066400
.*-------------------------------------------------------------------   02066500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02066600
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02066700
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02066800
                      AIF   (N'&SECONDARYKEY GT 1).ZG587B  MULTI PARMS  02066900
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02067000
.ZG587B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG587C            02067100
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02067200
&ZMS                  SETC  ' '         *KRQDA*                         02067300
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02067400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02067500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02067600
.ZG587C               ANOP  ,                                           02067700
.*-------------------------------------------------------------------   02067800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02067900
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG587R  NOT I/O    02068000
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG587R       02068100
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02068200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG587P               02068300
                      AIF   (K'&ZCGPR GT 2).ZG587Q                      02068400
                      AIF   ('&ZCGPR' EQ '0').ZG587Q                    02068500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02068600
                      AIF   (T'&ZCGPR NE 'N').ZG587Q  INVALID REG NAME  02068700
.ZG587P               ANOP  ,                                           02068800
                      AIF   (T'&ZCGPR NE 'N').ZG587R  NON NUMERIC       02068900
                      AIF   ('&ZCGPR' LT '2').ZG587Q                    02069000
                      AIF   ('&ZCGPR' LE '12').ZG587R                   02069100
.ZG587Q               ANOP  ,                                           02069200
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           02069300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02069400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02069500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02069600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02069700
.ZG587R               ANOP  ,                                           02069800
.*------------------------------------------------------------------    02069900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02070000
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02070100
.*-------------------------------------------------------------------   02070200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02070300
.ZG591                ANOP  ,                                           02070400
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG591A             02070500
&ZTLC                 SETC 'EQUAL'                                      02070600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG592        02070700
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02070800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG591A  CK NUM        02070900
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02071000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02071100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02071200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02071300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02071400
.ZG591A               ANOP  ,                                           02071500
.*------------------------------------------------------------------    02071600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02071700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02071800
.ZG591A0              AIF   (K'&SKEYRANGEEND LE 0).ZG591A1  OK          02071900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02072000
.ZG591A1              AIF   (K'&ZCVAL LE 0).ZG591A2  OK                 02072100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02072200
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02072300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02072400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02072500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02072600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02072700
.ZG591A2              ANOP  ,                                           02072800
.*-------------------------------------------------------------------   02072900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02073000
.ZG592                ANOP  ,                                           02073100
&ZTLC                 SETC 'LESSOREQUAL'                                02073200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG593        02073300
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02073400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG592A  CK NUM        02073500
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02073600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02073700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02073800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02073900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02074000
.ZG592A               ANOP  ,                                           02074100
.*------------------------------------------------------------------    02074200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02074300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02074400
.ZG592A0              AIF   (K'&SKEYRANGEEND LE 0).ZG592A1  OK          02074500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02074600
.ZG592A1              AIF   (K'&ZCVAL LE 0).ZG592A2  OK                 02074700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02074800
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02074900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02075000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02075100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02075200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02075300
.ZG592A2              ANOP  ,                                           02075400
.*-------------------------------------------------------------------   02075500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02075600
.ZG593                ANOP  ,                                           02075700
&ZTLC                 SETC 'GREATEROREQUAL'                             02075800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG594        02075900
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02076000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG593A  CK NUM        02076100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02076200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02076300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02076400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02076500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02076600
.ZG593A               ANOP  ,                                           02076700
.*------------------------------------------------------------------    02076800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02076900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02077000
.ZG593A0              AIF   (K'&SKEYRANGEEND LE 0).ZG593A1  OK          02077100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02077200
.ZG593A1              AIF   (K'&ZCVAL LE 0).ZG593A2  OK                 02077300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02077400
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02077500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02077600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02077700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02077800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02077900
.ZG593A2              ANOP  ,                                           02078000
.*-------------------------------------------------------------------   02078100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02078200
.ZG594                ANOP  ,                                           02078300
&ZTLC                 SETC 'RANGE'                                      02078400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG598        02078500
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02078600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG594A  CK NUM        02078700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02078800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02078900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02079000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02079100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02079200
.ZG594A               ANOP  ,                                           02079300
.*----------------------------------------------------------------***   02079400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02079500
                      AIF   (N'&SKEYRANGEEND LE 1).ZG596A  CK NUM       02079600
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           02079700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02079800
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02079900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02080000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02080100
.ZG596A               ANOP  ,                                           02080200
.*-------------------------------------------------------------------   02080300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02080400
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02080500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02080600
                      AIF   (N'&SKEYRANGEEND GT 1).ZG596B  MULTI PARMS  02080700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02080800
.ZG596B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG596C            02080900
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02081000
&ZMS                  SETC  ' '         *KRQDA*                         02081100
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02081200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02081300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02081400
.ZG596C               ANOP  ,                                           02081500
.*-------------------------------------------------------------------   02081600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02081700
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG596R  NOT I/O    02081800
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG596R       02081900
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02082000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG596P               02082100
                      AIF   (K'&ZCGPR GT 2).ZG596Q                      02082200
                      AIF   ('&ZCGPR' EQ '0').ZG596Q                    02082300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02082400
                      AIF   (T'&ZCGPR NE 'N').ZG596Q  INVALID REG NAME  02082500
.ZG596P               ANOP  ,                                           02082600
                      AIF   (T'&ZCGPR NE 'N').ZG596R  NON NUMERIC       02082700
                      AIF   ('&ZCGPR' LT '2').ZG596Q                    02082800
                      AIF   ('&ZCGPR' LE '12').ZG596R                   02082900
.ZG596Q               ANOP  ,                                           02083000
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           02083100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02083200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02083300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02083400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02083500
.ZG596R               ANOP  ,                                           02083600
.*------------------------------------------------------------------    02083700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02083800
.ZG598                ANOP  ,                                           02083900
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02084000
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG598E  VALID ARG    02084100
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG598D  OMITTED     02084200
&ZASYSLNDX            SETA  0                                           02084300
.ZG598A               ANOP  ,           POSITIONAL MACRO KEY            02084400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02084500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG598C           02084600
&ZTLC                 SETC 'SKEYREQTYPE'                                02084700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG598A  02084800
.ZG598B               ANOP  ,                                           02084900
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02085000
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      02085100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02085200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02085300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02085400
                      AGO   .ZG598E                                     02085500
.ZG598C               ANOP  ,                                           02085600
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02085700
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           02085800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02085900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02086000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02086100
&ZMS                  SETC  '&ZMS "EQUAL",'                             02086200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02086300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02086400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02086500
                      MNOTE 8,' &ZMS '                                  02086600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02086700
                      AGO   .ZG598E                                     02086800
.ZG598D               ANOP  ,                                           02086900
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02087000
.ZG598E               ANOP  ,                                           02087100
.*------------------------------------------------------------------    02087200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02087300
.ZG599                ANOP  ,                                           02087400
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02087500
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG599E  VALID ARG    02087600
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG599D  OMITTED     02087700
&ZASYSLNDX            SETA  0                                           02087800
.ZG599A               ANOP  ,           POSITIONAL MACRO KEY            02087900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02088000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG599C           02088100
&ZTLC                 SETC 'SKEYCOMPARE'                                02088200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG599A  02088300
.ZG599B               ANOP  ,                                           02088400
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02088500
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      02088600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02088700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02088800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02088900
                      AGO   .ZG599E                                     02089000
.ZG599C               ANOP  ,                                           02089100
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02089200
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           02089300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02089400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02089500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02089600
&ZMS                  SETC  '&ZMS "NO"'                                 02089700
&ZMS                  SETC  '&ZMS OR "YES".'                            02089800
                      MNOTE 8,' &ZMS '                                  02089900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02090000
                      AGO   .ZG599E                                     02090100
.ZG599D               ANOP  ,                                           02090200
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02090300
.ZG599E               ANOP  ,                                           02090400
.*-------------------------------------------------------------------   02090500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02090600
.ZG600                ANOP  ,                                           02090700
&ZTLC                 SETC 'KEYPOS'                                     02090800
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG699            02090900
&XLOCATOR             SETC  'KEYPOS'    SET KEYWORD                     02091000
                      AIF   (N'&LOCATOR LE 1).ZG600A  CK NUM            02091100
&ZMS                  SETC  '"LOCATOR='         *KPOSA* MNOTE           02091200
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            02091300
&ZMS                  SETC  '&ZMS "LOCATOR"'                            02091400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02091500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02091600
.ZG600A               ANOP  ,                                           02091700
.*------------------------------------------------------------------    02091800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02091900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02092000
.ZG600A0              AIF   (K'&ENTRYID LE 0).ZG600A1  OK               02092100
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02092200
.ZG600A1              AIF   (K'&LISTCOMPARE LE 0).ZG600A2  OK           02092300
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     02092400
.ZG600A2              AIF   (K'&ENTRYNAME LE 0).ZG600A3  OK             02092500
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02092600
.ZG600A3              AIF   (K'&ZCVAL LE 0).ZG600A4  OK                 02092700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02092800
&ZMS                  SETC  '"LOCATOR'  *KMEIA* MNOTE                   02092900
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           02093000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02093100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02093200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02093300
.ZG600A4              ANOP  ,                                           02093400
.*----------------------------------------------------------------***   02093500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02093600
                      AIF   (N'&LISTNUM LE 1).ZG602A  CK NUM            02093700
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           02093800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02093900
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02094000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02094100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02094200
.ZG602A               ANOP  ,                                           02094300
.*-------------------------------------------------------------------   02094400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02094500
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02094600
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02094700
                      AIF   (N'&LISTNUM GT 1).ZG602B  MULTI PARMS       02094800
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02094900
.ZG602B               AIF   (K'&LISTNUM(1) GT 0).ZG602C                 02095000
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02095100
&ZMS                  SETC  ' '         *KRQDA*                         02095200
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02095300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02095400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02095500
.ZG602C               ANOP  ,                                           02095600
.*-------------------------------------------------------------------   02095700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02095800
                      AIF   (K'&ZXLISTNUM LE 0).ZG602R  NOT I/O         02095900
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG602R            02096000
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02096100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG602P               02096200
                      AIF   (K'&ZCGPR GT 2).ZG602Q                      02096300
                      AIF   ('&ZCGPR' EQ '0').ZG602Q                    02096400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02096500
                      AIF   (T'&ZCGPR NE 'N').ZG602Q  INVALID REG NAME  02096600
.ZG602P               ANOP  ,                                           02096700
                      AIF   (T'&ZCGPR NE 'N').ZG602R  NON NUMERIC       02096800
                      AIF   ('&ZCGPR' LT '2').ZG602Q                    02096900
                      AIF   ('&ZCGPR' LE '12').ZG602R                   02097000
.ZG602Q               ANOP  ,                                           02097100
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           02097200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02097300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02097400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02097500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02097600
.ZG602R               ANOP  ,                                           02097700
.*----------------------------------------------------------------***   02097800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02097900
                      AIF   (N'&KEYSCANTYPE LE 1).ZG605A  CK NUM        02098000
&ZMS                  SETC  '"KEYSCANTYPE='     *KPOSA* MNOTE           02098100
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02098200
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        02098300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02098400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02098500
.ZG605A               ANOP  ,                                           02098600
.*-------------------------------------------------------------------   02098700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02098800
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            02098900
.ZG606A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG607A                   02099000
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     02099100
.*-------------------------------------------------------------------   02099200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02099300
.ZG607A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG608A               02099400
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             02099500
.*-------------------------------------------------------------------   02099600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02099700
.ZG608A               AIF   (K'&XKEYSCANTYPE GT 0).ZG608C  KEYWORD      02099800
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG608B             02099900
&ZMS                  SETC  '"KEYSCANTYPE='     *KUKWA* MNOTE           02100000
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02100100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02100200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02100300
&ZMS                  SETC  '&ZMS "ENTRY"'                              02100400
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      02100500
                      MNOTE 8,' &ZMS '                                  02100600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02100700
.ZG608B               ANOP  ,                                           02100800
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             02100900
.ZG608C               ANOP  ,                                           02101000
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02101100
.*------------------------------------------------------------------    02101200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02101300
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02101400
.*-------------------------------------------------------------------   02101500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02101600
.ZG611                ANOP  ,                                           02101700
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG611A             02101800
&ZTLC                 SETC 'NO'                                         02101900
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG612        02102000
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02102100
                      AIF   (N'&AUTHCOMPARE LE 1).ZG611A  CK NUM        02102200
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02102300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02102400
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02102500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02102600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02102700
.ZG611A               ANOP  ,                                           02102800
.*------------------------------------------------------------------    02102900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02103000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02103100
.ZG611A0              AIF   (K'&AUTHCOMP LE 0).ZG611A1  OK              02103200
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02103300
.ZG611A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG611A2  OK          02103400
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02103500
.ZG611A2              AIF   (K'&ZCVAL LE 0).ZG611A3  OK                 02103600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02103700
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           02103800
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02103900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02104000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02104100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02104200
.ZG611A3              ANOP  ,                                           02104300
.*-------------------------------------------------------------------   02104400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02104500
.ZG612                ANOP  ,                                           02104600
&ZTLC                 SETC 'YES'                                        02104700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG621        02104800
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02104900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG612A  CK NUM        02105000
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02105100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02105200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02105300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02105400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02105500
.ZG612A               ANOP  ,                                           02105600
.*----------------------------------------------------------------***   02105700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02105800
                      AIF   (N'&AUTHCOMP LE 1).ZG614A  CK NUM           02105900
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           02106000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02106100
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02106200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02106300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02106400
.ZG614A               ANOP  ,                                           02106500
.*-------------------------------------------------------------------   02106600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02106700
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02106800
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02106900
                      AIF   (N'&AUTHCOMP GT 1).ZG614B  MULTI PARMS      02107000
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02107100
.ZG614B               AIF   (K'&AUTHCOMP(1) GT 0).ZG614C                02107200
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02107300
&ZMS                  SETC  ' '         *KRQDA*                         02107400
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02107500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02107600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02107700
.ZG614C               ANOP  ,                                           02107800
.*-------------------------------------------------------------------   02107900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02108000
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG614R  NOT I/O        02108100
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG614R           02108200
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02108300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG614P               02108400
                      AIF   (K'&ZCGPR GT 2).ZG614Q                      02108500
                      AIF   ('&ZCGPR' EQ '0').ZG614Q                    02108600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02108700
                      AIF   (T'&ZCGPR NE 'N').ZG614Q  INVALID REG NAME  02108800
.ZG614P               ANOP  ,                                           02108900
                      AIF   (T'&ZCGPR NE 'N').ZG614R  NON NUMERIC       02109000
                      AIF   ('&ZCGPR' LT '2').ZG614Q                    02109100
                      AIF   ('&ZCGPR' LE '12').ZG614R                   02109200
.ZG614Q               ANOP  ,                                           02109300
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           02109400
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02109500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02109600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02109700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02109800
.ZG614R               ANOP  ,                                           02109900
.*----------------------------------------------------------------***   02110000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02110100
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG616A  CK NUM       02110200
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           02110300
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02110400
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02110500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02110600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02110700
.ZG616A               ANOP  ,                                           02110800
.*-------------------------------------------------------------------   02110900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02111000
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02111100
.ZG617A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG618A                  02111200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02111300
.*-------------------------------------------------------------------   02111400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02111500
.ZG618A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG619A            02111600
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02111700
.*-------------------------------------------------------------------   02111800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02111900
.ZG619A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG619C  KEYWORD     02112000
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG619B            02112100
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           02112200
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02112300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02112400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02112500
&ZMS                  SETC  '&ZMS "EQUAL"'                              02112600
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02112700
                      MNOTE 8,' &ZMS '                                  02112800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02112900
.ZG619B               ANOP  ,                                           02113000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02113100
.ZG619C               ANOP  ,                                           02113200
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02113300
.*-------------------------------------------------------------------   02113400
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02113500
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG619D  KEY           02113600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG619D  PARM      02113700
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           02113800
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02113900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02114000
&ZMS                  SETC  '&ZMS '                                     02114100
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02114200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02114300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02114400
.ZG619D               ANOP  ,                                           02114500
.*------------------------------------------------------------------    02114600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02114700
.ZG621                ANOP  ,                                           02114800
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02114900
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG621E  VALID ARG    02115000
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG621D  OMITTED     02115100
&ZASYSLNDX            SETA  0                                           02115200
.ZG621A               ANOP  ,           POSITIONAL MACRO KEY            02115300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02115400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG621C           02115500
&ZTLC                 SETC 'AUTHCOMPARE'                                02115600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG621A  02115700
.ZG621B               ANOP  ,                                           02115800
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02115900
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      02116000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02116100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02116200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02116300
                      AGO   .ZG621E                                     02116400
.ZG621C               ANOP  ,                                           02116500
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02116600
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           02116700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02116800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02116900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02117000
&ZMS                  SETC  '&ZMS "NO"'                                 02117100
&ZMS                  SETC  '&ZMS OR "YES".'                            02117200
                      MNOTE 8,' &ZMS '                                  02117300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02117400
                      AGO   .ZG621E                                     02117500
.ZG621D               ANOP  ,                                           02117600
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02117700
.ZG621E               ANOP  ,                                           02117800
.*------------------------------------------------------------------    02117900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02118000
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            02118100
.*-------------------------------------------------------------------   02118200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02118300
.ZG624                ANOP  ,                                           02118400
                      AIF   (K'&KEYTYPE(1) LE 0).ZG624A                 02118500
&ZTLC                 SETC 'ENTRY'                                      02118600
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG661            02118700
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     02118800
                      AIF   (N'&KEYTYPE LE 1).ZG624A  CK NUM            02118900
&ZMS                  SETC  '"KEYTYPE='         *KPOSA* MNOTE           02119000
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            02119100
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            02119200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02119300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02119400
.ZG624A               ANOP  ,                                           02119500
.*----------------------------------------------------------------***   02119600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02119700
                      AIF   (N'&ENTRYKEY LE 1).ZG626A  CK NUM           02119800
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           02119900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02120000
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02120100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02120200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02120300
.ZG626A               ANOP  ,                                           02120400
.*-------------------------------------------------------------------   02120500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02120600
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02120700
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02120800
                      AIF   (N'&ENTRYKEY GT 1).ZG626B  MULTI PARMS      02120900
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02121000
.ZG626B               AIF   (K'&ENTRYKEY(1) GT 0).ZG626C                02121100
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02121200
&ZMS                  SETC  ' '         *KRQDA*                         02121300
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02121400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02121500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02121600
.ZG626C               ANOP  ,                                           02121700
.*-------------------------------------------------------------------   02121800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02121900
                      AIF   (K'&ZXENTRYKEY LE 0).ZG626R  NOT I/O        02122000
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG626R           02122100
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02122200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG626P               02122300
                      AIF   (K'&ZCGPR GT 2).ZG626Q                      02122400
                      AIF   ('&ZCGPR' EQ '0').ZG626Q                    02122500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02122600
                      AIF   (T'&ZCGPR NE 'N').ZG626Q  INVALID REG NAME  02122700
.ZG626P               ANOP  ,                                           02122800
                      AIF   (T'&ZCGPR NE 'N').ZG626R  NON NUMERIC       02122900
                      AIF   ('&ZCGPR' LT '2').ZG626Q                    02123000
                      AIF   ('&ZCGPR' LE '12').ZG626R                   02123100
.ZG626Q               ANOP  ,                                           02123200
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           02123300
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02123400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02123500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02123600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02123700
.ZG626R               ANOP  ,                                           02123800
.*------------------------------------------------------------------    02123900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02124000
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02124100
.*-------------------------------------------------------------------   02124200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02124300
.ZG629                ANOP  ,                                           02124400
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG629A              02124500
&ZTLC                 SETC 'EQUAL'                                      02124600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG630         02124700
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02124800
                      AIF   (N'&KEYREQTYPE LE 1).ZG629A  CK NUM         02124900
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02125000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02125100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02125200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02125300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02125400
.ZG629A               ANOP  ,                                           02125500
.*------------------------------------------------------------------    02125600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02125700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02125800
.ZG629A0              AIF   (K'&KEYRANGEEND LE 0).ZG629A1  OK           02125900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02126000
.ZG629A1              AIF   (K'&ZCVAL LE 0).ZG629A2  OK                 02126100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02126200
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02126300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02126400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02126500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02126600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02126700
.ZG629A2              ANOP  ,                                           02126800
.*-------------------------------------------------------------------   02126900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02127000
.ZG630                ANOP  ,                                           02127100
&ZTLC                 SETC 'LESSOREQUAL'                                02127200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG631         02127300
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02127400
                      AIF   (N'&KEYREQTYPE LE 1).ZG630A  CK NUM         02127500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02127600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02127700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02127800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02127900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02128000
.ZG630A               ANOP  ,                                           02128100
.*------------------------------------------------------------------    02128200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02128300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02128400
.ZG630A0              AIF   (K'&KEYRANGEEND LE 0).ZG630A1  OK           02128500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02128600
.ZG630A1              AIF   (K'&ZCVAL LE 0).ZG630A2  OK                 02128700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02128800
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02128900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02129000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02129100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02129200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02129300
.ZG630A2              ANOP  ,                                           02129400
.*-------------------------------------------------------------------   02129500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02129600
.ZG631                ANOP  ,                                           02129700
&ZTLC                 SETC 'GREATEROREQUAL'                             02129800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG632         02129900
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02130000
                      AIF   (N'&KEYREQTYPE LE 1).ZG631A  CK NUM         02130100
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02130200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02130300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02130400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02130500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02130600
.ZG631A               ANOP  ,                                           02130700
.*------------------------------------------------------------------    02130800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02130900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02131000
.ZG631A0              AIF   (K'&KEYRANGEEND LE 0).ZG631A1  OK           02131100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02131200
.ZG631A1              AIF   (K'&ZCVAL LE 0).ZG631A2  OK                 02131300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02131400
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02131500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02131600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02131700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02131800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02131900
.ZG631A2              ANOP  ,                                           02132000
.*-------------------------------------------------------------------   02132100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02132200
.ZG632                ANOP  ,                                           02132300
&ZTLC                 SETC 'RANGE'                                      02132400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG636         02132500
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02132600
                      AIF   (N'&KEYREQTYPE LE 1).ZG632A  CK NUM         02132700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02132800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02132900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02133000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02133100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02133200
.ZG632A               ANOP  ,                                           02133300
.*----------------------------------------------------------------***   02133400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02133500
                      AIF   (N'&KEYRANGEEND LE 1).ZG634A  CK NUM        02133600
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           02133700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02133800
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02133900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02134000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02134100
.ZG634A               ANOP  ,                                           02134200
.*-------------------------------------------------------------------   02134300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02134400
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02134500
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02134600
                      AIF   (N'&KEYRANGEEND GT 1).ZG634B  MULTI PARMS   02134700
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02134800
.ZG634B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG634C             02134900
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02135000
&ZMS                  SETC  ' '         *KRQDA*                         02135100
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02135200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02135300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02135400
.ZG634C               ANOP  ,                                           02135500
.*-------------------------------------------------------------------   02135600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02135700
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG634R  NOT I/O     02135800
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG634R        02135900
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02136000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG634P               02136100
                      AIF   (K'&ZCGPR GT 2).ZG634Q                      02136200
                      AIF   ('&ZCGPR' EQ '0').ZG634Q                    02136300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02136400
                      AIF   (T'&ZCGPR NE 'N').ZG634Q  INVALID REG NAME  02136500
.ZG634P               ANOP  ,                                           02136600
                      AIF   (T'&ZCGPR NE 'N').ZG634R  NON NUMERIC       02136700
                      AIF   ('&ZCGPR' LT '2').ZG634Q                    02136800
                      AIF   ('&ZCGPR' LE '12').ZG634R                   02136900
.ZG634Q               ANOP  ,                                           02137000
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           02137100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02137200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02137300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02137400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02137500
.ZG634R               ANOP  ,                                           02137600
.*------------------------------------------------------------------    02137700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02137800
.ZG636                ANOP  ,                                           02137900
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02138000
                      AIF   (K'&XKEYREQTYPE GT 0).ZG636E  VALID ARG     02138100
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG636D  OMITTED      02138200
&ZASYSLNDX            SETA  0                                           02138300
.ZG636A               ANOP  ,           POSITIONAL MACRO KEY            02138400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02138500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG636C           02138600
&ZTLC                 SETC 'KEYREQTYPE'                                 02138700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG636A  02138800
.ZG636B               ANOP  ,                                           02138900
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02139000
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       02139100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02139200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02139300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02139400
                      AGO   .ZG636E                                     02139500
.ZG636C               ANOP  ,                                           02139600
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02139700
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           02139800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02139900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02140000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02140100
&ZMS                  SETC  '&ZMS "EQUAL",'                             02140200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02140300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02140400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02140500
                      MNOTE 8,' &ZMS '                                  02140600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02140700
                      AGO   .ZG636E                                     02140800
.ZG636D               ANOP  ,                                           02140900
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02141000
.ZG636E               ANOP  ,                                           02141100
.*------------------------------------------------------------------    02141200
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02141300
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG636F  KEY           02141400
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG636F  PARM        02141500
&ZMS                  SETC  '"KEYREQTYPE'       *KDEPA* MNOTE           02141600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02141700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02141800
&ZMS                  SETC  '&ZMS '                                     02141900
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02142000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02142100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02142200
.ZG636F               ANOP  ,                                           02142300
.*------------------------------------------------------------------    02142400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02142500
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02142600
.*-------------------------------------------------------------------   02142700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02142800
.ZG639                ANOP  ,                                           02142900
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG639A              02143000
&ZTLC                 SETC 'NO'                                         02143100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG640         02143200
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02143300
                      AIF   (N'&KEYCOMPARE LE 1).ZG639A  CK NUM         02143400
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02143500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02143600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02143700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02143800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02143900
.ZG639A               ANOP  ,                                           02144000
.*-------------------------------------------------------------------   02144100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02144200
.ZG640                ANOP  ,                                           02144300
&ZTLC                 SETC 'YES'                                        02144400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG641         02144500
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02144600
                      AIF   (N'&KEYCOMPARE LE 1).ZG640A  CK NUM         02144700
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02144800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02144900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02145000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02145100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02145200
.ZG640A               ANOP  ,                                           02145300
.*------------------------------------------------------------------    02145400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02145500
.ZG641                ANOP  ,                                           02145600
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02145700
                      AIF   (K'&XKEYCOMPARE GT 0).ZG641E  VALID ARG     02145800
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG641D  OMITTED      02145900
&ZASYSLNDX            SETA  0                                           02146000
.ZG641A               ANOP  ,           POSITIONAL MACRO KEY            02146100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02146200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG641C           02146300
&ZTLC                 SETC 'KEYCOMPARE'                                 02146400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG641A  02146500
.ZG641B               ANOP  ,                                           02146600
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02146700
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       02146800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02146900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02147000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02147100
                      AGO   .ZG641E                                     02147200
.ZG641C               ANOP  ,                                           02147300
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02147400
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           02147500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02147600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02147700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02147800
&ZMS                  SETC  '&ZMS "NO"'                                 02147900
&ZMS                  SETC  '&ZMS OR "YES".'                            02148000
                      MNOTE 8,' &ZMS '                                  02148100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02148200
                      AGO   .ZG641E                                     02148300
.ZG641D               ANOP  ,                                           02148400
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02148500
.ZG641E               ANOP  ,                                           02148600
.*------------------------------------------------------------------    02148700
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02148800
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG641F  KEY           02148900
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG641F  PARM        02149000
&ZMS                  SETC  '"KEYCOMPARE'       *KDEPA* MNOTE           02149100
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02149200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02149300
&ZMS                  SETC  '&ZMS '                                     02149400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02149500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02149600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02149700
.ZG641F               ANOP  ,                                           02149800
.*------------------------------------------------------------------    02149900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02150000
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02150100
.*-------------------------------------------------------------------   02150200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02150300
.ZG644                ANOP  ,                                           02150400
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG644A             02150500
&ZTLC                 SETC 'NO'                                         02150600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG645        02150700
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02150800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG644A  CK NUM        02150900
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02151000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02151100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02151200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02151300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02151400
.ZG644A               ANOP  ,                                           02151500
.*------------------------------------------------------------------    02151600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02151700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02151800
.ZG644A0              AIF   (K'&SECONDARYKEY LE 0).ZG644A1  OK          02151900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02152000
.ZG644A1              AIF   (K'&SKEYREQTYPE LE 0).ZG644A2  OK           02152100
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02152200
.ZG644A2              AIF   (K'&SKEYRANGEEND LE 0).ZG644A3  OK          02152300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02152400
.ZG644A3              AIF   (K'&ZCVAL LE 0).ZG644A4  OK                 02152500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02152600
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           02152700
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02152800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02152900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02153000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02153100
.ZG644A4              ANOP  ,                                           02153200
.*-------------------------------------------------------------------   02153300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02153400
.ZG645                ANOP  ,                                           02153500
&ZTLC                 SETC 'YES'                                        02153600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG659        02153700
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02153800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG645A  CK NUM        02153900
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02154000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02154100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02154200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02154300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02154400
.ZG645A               ANOP  ,                                           02154500
.*----------------------------------------------------------------***   02154600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02154700
                      AIF   (N'&SECONDARYKEY LE 1).ZG647A  CK NUM       02154800
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           02154900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02155000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02155100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02155200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02155300
.ZG647A               ANOP  ,                                           02155400
.*-------------------------------------------------------------------   02155500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02155600
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02155700
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02155800
                      AIF   (N'&SECONDARYKEY GT 1).ZG647B  MULTI PARMS  02155900
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02156000
.ZG647B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG647C            02156100
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02156200
&ZMS                  SETC  ' '         *KRQDA*                         02156300
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02156400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02156500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02156600
.ZG647C               ANOP  ,                                           02156700
.*-------------------------------------------------------------------   02156800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02156900
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG647R  NOT I/O    02157000
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG647R       02157100
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02157200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG647P               02157300
                      AIF   (K'&ZCGPR GT 2).ZG647Q                      02157400
                      AIF   ('&ZCGPR' EQ '0').ZG647Q                    02157500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02157600
                      AIF   (T'&ZCGPR NE 'N').ZG647Q  INVALID REG NAME  02157700
.ZG647P               ANOP  ,                                           02157800
                      AIF   (T'&ZCGPR NE 'N').ZG647R  NON NUMERIC       02157900
                      AIF   ('&ZCGPR' LT '2').ZG647Q                    02158000
                      AIF   ('&ZCGPR' LE '12').ZG647R                   02158100
.ZG647Q               ANOP  ,                                           02158200
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           02158300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02158400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02158500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02158600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02158700
.ZG647R               ANOP  ,                                           02158800
.*------------------------------------------------------------------    02158900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02159000
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02159100
.*-------------------------------------------------------------------   02159200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02159300
.ZG650                ANOP  ,                                           02159400
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG650A             02159500
&ZTLC                 SETC 'EQUAL'                                      02159600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG651        02159700
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02159800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG650A  CK NUM        02159900
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02160000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02160100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02160200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02160300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02160400
.ZG650A               ANOP  ,                                           02160500
.*------------------------------------------------------------------    02160600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02160700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02160800
.ZG650A0              AIF   (K'&SKEYRANGEEND LE 0).ZG650A1  OK          02160900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02161000
.ZG650A1              AIF   (K'&ZCVAL LE 0).ZG650A2  OK                 02161100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02161200
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02161300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02161400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02161500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02161600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02161700
.ZG650A2              ANOP  ,                                           02161800
.*-------------------------------------------------------------------   02161900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02162000
.ZG651                ANOP  ,                                           02162100
&ZTLC                 SETC 'LESSOREQUAL'                                02162200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG652        02162300
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02162400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG651A  CK NUM        02162500
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02162600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02162700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02162800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02162900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02163000
.ZG651A               ANOP  ,                                           02163100
.*------------------------------------------------------------------    02163200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02163300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02163400
.ZG651A0              AIF   (K'&SKEYRANGEEND LE 0).ZG651A1  OK          02163500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02163600
.ZG651A1              AIF   (K'&ZCVAL LE 0).ZG651A2  OK                 02163700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02163800
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02163900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02164000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02164100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02164200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02164300
.ZG651A2              ANOP  ,                                           02164400
.*-------------------------------------------------------------------   02164500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02164600
.ZG652                ANOP  ,                                           02164700
&ZTLC                 SETC 'GREATEROREQUAL'                             02164800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG653        02164900
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02165000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG652A  CK NUM        02165100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02165200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02165300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02165400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02165500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02165600
.ZG652A               ANOP  ,                                           02165700
.*------------------------------------------------------------------    02165800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02165900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02166000
.ZG652A0              AIF   (K'&SKEYRANGEEND LE 0).ZG652A1  OK          02166100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02166200
.ZG652A1              AIF   (K'&ZCVAL LE 0).ZG652A2  OK                 02166300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02166400
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02166500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02166600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02166700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02166800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02166900
.ZG652A2              ANOP  ,                                           02167000
.*-------------------------------------------------------------------   02167100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02167200
.ZG653                ANOP  ,                                           02167300
&ZTLC                 SETC 'RANGE'                                      02167400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG657        02167500
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02167600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG653A  CK NUM        02167700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02167800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02167900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02168000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02168100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02168200
.ZG653A               ANOP  ,                                           02168300
.*----------------------------------------------------------------***   02168400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02168500
                      AIF   (N'&SKEYRANGEEND LE 1).ZG655A  CK NUM       02168600
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           02168700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02168800
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02168900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02169000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02169100
.ZG655A               ANOP  ,                                           02169200
.*-------------------------------------------------------------------   02169300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02169400
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02169500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02169600
                      AIF   (N'&SKEYRANGEEND GT 1).ZG655B  MULTI PARMS  02169700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02169800
.ZG655B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG655C            02169900
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02170000
&ZMS                  SETC  ' '         *KRQDA*                         02170100
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02170200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02170300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02170400
.ZG655C               ANOP  ,                                           02170500
.*-------------------------------------------------------------------   02170600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02170700
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG655R  NOT I/O    02170800
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG655R       02170900
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02171000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG655P               02171100
                      AIF   (K'&ZCGPR GT 2).ZG655Q                      02171200
                      AIF   ('&ZCGPR' EQ '0').ZG655Q                    02171300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02171400
                      AIF   (T'&ZCGPR NE 'N').ZG655Q  INVALID REG NAME  02171500
.ZG655P               ANOP  ,                                           02171600
                      AIF   (T'&ZCGPR NE 'N').ZG655R  NON NUMERIC       02171700
                      AIF   ('&ZCGPR' LT '2').ZG655Q                    02171800
                      AIF   ('&ZCGPR' LE '12').ZG655R                   02171900
.ZG655Q               ANOP  ,                                           02172000
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           02172100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02172200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02172300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02172400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02172500
.ZG655R               ANOP  ,                                           02172600
.*------------------------------------------------------------------    02172700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02172800
.ZG657                ANOP  ,                                           02172900
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02173000
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG657E  VALID ARG    02173100
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG657D  OMITTED     02173200
&ZASYSLNDX            SETA  0                                           02173300
.ZG657A               ANOP  ,           POSITIONAL MACRO KEY            02173400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02173500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG657C           02173600
&ZTLC                 SETC 'SKEYREQTYPE'                                02173700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG657A  02173800
.ZG657B               ANOP  ,                                           02173900
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02174000
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      02174100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02174200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02174300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02174400
                      AGO   .ZG657E                                     02174500
.ZG657C               ANOP  ,                                           02174600
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02174700
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           02174800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02174900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02175000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02175100
&ZMS                  SETC  '&ZMS "EQUAL",'                             02175200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02175300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02175400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02175500
                      MNOTE 8,' &ZMS '                                  02175600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02175700
                      AGO   .ZG657E                                     02175800
.ZG657D               ANOP  ,                                           02175900
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02176000
.ZG657E               ANOP  ,                                           02176100
.*------------------------------------------------------------------    02176200
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02176300
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG657F  KEY       02176400
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG657F  PARM       02176500
&ZMS                  SETC  '"SKEYREQTYPE'      *KDEPA* MNOTE           02176600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02176700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02176800
&ZMS                  SETC  '&ZMS '                                     02176900
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02177000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02177100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02177200
.ZG657F               ANOP  ,                                           02177300
.*------------------------------------------------------------------    02177400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02177500
.ZG659                ANOP  ,                                           02177600
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02177700
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG659E  VALID ARG    02177800
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG659D  OMITTED     02177900
&ZASYSLNDX            SETA  0                                           02178000
.ZG659A               ANOP  ,           POSITIONAL MACRO KEY            02178100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02178200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG659C           02178300
&ZTLC                 SETC 'SKEYCOMPARE'                                02178400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG659A  02178500
.ZG659B               ANOP  ,                                           02178600
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02178700
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      02178800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02178900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02179000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02179100
                      AGO   .ZG659E                                     02179200
.ZG659C               ANOP  ,                                           02179300
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02179400
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           02179500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02179600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02179700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02179800
&ZMS                  SETC  '&ZMS "NO"'                                 02179900
&ZMS                  SETC  '&ZMS OR "YES".'                            02180000
                      MNOTE 8,' &ZMS '                                  02180100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02180200
                      AGO   .ZG659E                                     02180300
.ZG659D               ANOP  ,                                           02180400
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02180500
.ZG659E               ANOP  ,                                           02180600
.*------------------------------------------------------------------    02180700
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02180800
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG659F  KEY           02180900
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG659F  PARM       02181000
&ZMS                  SETC  '"SKEYCOMPARE'      *KDEPA* MNOTE           02181100
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02181200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02181300
&ZMS                  SETC  '&ZMS '                                     02181400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02181500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02181600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02181700
.ZG659F               ANOP  ,                                           02181800
.*-------------------------------------------------------------------   02181900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02182000
.ZG661                ANOP  ,                                           02182100
&ZTLC                 SETC 'SECONDARY'                                  02182200
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG698            02182300
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             02182400
                      AIF   (N'&KEYTYPE LE 1).ZG661A  CK NUM            02182500
&ZMS                  SETC  '"KEYTYPE='         *KPOSA* MNOTE           02182600
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            02182700
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            02182800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02182900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02183000
.ZG661A               ANOP  ,                                           02183100
.*----------------------------------------------------------------***   02183200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02183300
                      AIF   (N'&SECONDARYKEY LE 1).ZG663A  CK NUM       02183400
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           02183500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02183600
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02183700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02183800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02183900
.ZG663A               ANOP  ,                                           02184000
.*-------------------------------------------------------------------   02184100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02184200
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02184300
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02184400
                      AIF   (N'&SECONDARYKEY GT 1).ZG663B  MULTI PARMS  02184500
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02184600
.ZG663B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG663C            02184700
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02184800
&ZMS                  SETC  ' '         *KRQDA*                         02184900
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02185000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02185100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02185200
.ZG663C               ANOP  ,                                           02185300
.*-------------------------------------------------------------------   02185400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02185500
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG663R  NOT I/O    02185600
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG663R       02185700
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02185800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG663P               02185900
                      AIF   (K'&ZCGPR GT 2).ZG663Q                      02186000
                      AIF   ('&ZCGPR' EQ '0').ZG663Q                    02186100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02186200
                      AIF   (T'&ZCGPR NE 'N').ZG663Q  INVALID REG NAME  02186300
.ZG663P               ANOP  ,                                           02186400
                      AIF   (T'&ZCGPR NE 'N').ZG663R  NON NUMERIC       02186500
                      AIF   ('&ZCGPR' LT '2').ZG663Q                    02186600
                      AIF   ('&ZCGPR' LE '12').ZG663R                   02186700
.ZG663Q               ANOP  ,                                           02186800
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           02186900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02187000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02187100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02187200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02187300
.ZG663R               ANOP  ,                                           02187400
.*------------------------------------------------------------------    02187500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02187600
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02187700
.*-------------------------------------------------------------------   02187800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02187900
.ZG666                ANOP  ,                                           02188000
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG666A             02188100
&ZTLC                 SETC 'EQUAL'                                      02188200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG667        02188300
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02188400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG666A  CK NUM        02188500
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02188600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02188700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02188800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02188900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02189000
.ZG666A               ANOP  ,                                           02189100
.*------------------------------------------------------------------    02189200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02189300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02189400
.ZG666A0              AIF   (K'&SKEYRANGEEND LE 0).ZG666A1  OK          02189500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02189600
.ZG666A1              AIF   (K'&ZCVAL LE 0).ZG666A2  OK                 02189700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02189800
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02189900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02190000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02190100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02190200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02190300
.ZG666A2              ANOP  ,                                           02190400
.*-------------------------------------------------------------------   02190500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02190600
.ZG667                ANOP  ,                                           02190700
&ZTLC                 SETC 'LESSOREQUAL'                                02190800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG668        02190900
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02191000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG667A  CK NUM        02191100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02191200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02191300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02191400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02191500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02191600
.ZG667A               ANOP  ,                                           02191700
.*------------------------------------------------------------------    02191800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02191900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02192000
.ZG667A0              AIF   (K'&SKEYRANGEEND LE 0).ZG667A1  OK          02192100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02192200
.ZG667A1              AIF   (K'&ZCVAL LE 0).ZG667A2  OK                 02192300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02192400
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02192500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02192600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02192700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02192800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02192900
.ZG667A2              ANOP  ,                                           02193000
.*-------------------------------------------------------------------   02193100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02193200
.ZG668                ANOP  ,                                           02193300
&ZTLC                 SETC 'GREATEROREQUAL'                             02193400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG669        02193500
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02193600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG668A  CK NUM        02193700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02193800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02193900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02194000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02194100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02194200
.ZG668A               ANOP  ,                                           02194300
.*------------------------------------------------------------------    02194400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02194500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02194600
.ZG668A0              AIF   (K'&SKEYRANGEEND LE 0).ZG668A1  OK          02194700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02194800
.ZG668A1              AIF   (K'&ZCVAL LE 0).ZG668A2  OK                 02194900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02195000
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02195100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02195200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02195300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02195400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02195500
.ZG668A2              ANOP  ,                                           02195600
.*-------------------------------------------------------------------   02195700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02195800
.ZG669                ANOP  ,                                           02195900
&ZTLC                 SETC 'RANGE'                                      02196000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG673        02196100
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02196200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG669A  CK NUM        02196300
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02196400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02196500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02196600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02196700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02196800
.ZG669A               ANOP  ,                                           02196900
.*----------------------------------------------------------------***   02197000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02197100
                      AIF   (N'&SKEYRANGEEND LE 1).ZG671A  CK NUM       02197200
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           02197300
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02197400
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02197500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02197600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02197700
.ZG671A               ANOP  ,                                           02197800
.*-------------------------------------------------------------------   02197900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02198000
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02198100
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02198200
                      AIF   (N'&SKEYRANGEEND GT 1).ZG671B  MULTI PARMS  02198300
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02198400
.ZG671B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG671C            02198500
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02198600
&ZMS                  SETC  ' '         *KRQDA*                         02198700
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02198800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02198900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02199000
.ZG671C               ANOP  ,                                           02199100
.*-------------------------------------------------------------------   02199200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02199300
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG671R  NOT I/O    02199400
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG671R       02199500
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02199600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG671P               02199700
                      AIF   (K'&ZCGPR GT 2).ZG671Q                      02199800
                      AIF   ('&ZCGPR' EQ '0').ZG671Q                    02199900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02200000
                      AIF   (T'&ZCGPR NE 'N').ZG671Q  INVALID REG NAME  02200100
.ZG671P               ANOP  ,                                           02200200
                      AIF   (T'&ZCGPR NE 'N').ZG671R  NON NUMERIC       02200300
                      AIF   ('&ZCGPR' LT '2').ZG671Q                    02200400
                      AIF   ('&ZCGPR' LE '12').ZG671R                   02200500
.ZG671Q               ANOP  ,                                           02200600
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           02200700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02200800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02200900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02201000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02201100
.ZG671R               ANOP  ,                                           02201200
.*------------------------------------------------------------------    02201300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02201400
.ZG673                ANOP  ,                                           02201500
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02201600
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG673E  VALID ARG    02201700
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG673D  OMITTED     02201800
&ZASYSLNDX            SETA  0                                           02201900
.ZG673A               ANOP  ,           POSITIONAL MACRO KEY            02202000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02202100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG673C           02202200
&ZTLC                 SETC 'SKEYREQTYPE'                                02202300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG673A  02202400
.ZG673B               ANOP  ,                                           02202500
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02202600
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      02202700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02202800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02202900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02203000
                      AGO   .ZG673E                                     02203100
.ZG673C               ANOP  ,                                           02203200
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02203300
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           02203400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02203500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02203600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02203700
&ZMS                  SETC  '&ZMS "EQUAL",'                             02203800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02203900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02204000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02204100
                      MNOTE 8,' &ZMS '                                  02204200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02204300
                      AGO   .ZG673E                                     02204400
.ZG673D               ANOP  ,                                           02204500
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02204600
.ZG673E               ANOP  ,                                           02204700
.*------------------------------------------------------------------    02204800
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02204900
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG673F  KEY       02205000
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG673F  PARM       02205100
&ZMS                  SETC  '"SKEYREQTYPE'      *KDEPA* MNOTE           02205200
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02205300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02205400
&ZMS                  SETC  '&ZMS '                                     02205500
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02205600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02205700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02205800
.ZG673F               ANOP  ,                                           02205900
.*------------------------------------------------------------------    02206000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02206100
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02206200
.*-------------------------------------------------------------------   02206300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02206400
.ZG676                ANOP  ,                                           02206500
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG676A             02206600
&ZTLC                 SETC 'NO'                                         02206700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG677        02206800
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02206900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG676A  CK NUM        02207000
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02207100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02207200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02207300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02207400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02207500
.ZG676A               ANOP  ,                                           02207600
.*-------------------------------------------------------------------   02207700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02207800
.ZG677                ANOP  ,                                           02207900
&ZTLC                 SETC 'YES'                                        02208000
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG678        02208100
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02208200
                      AIF   (N'&SKEYCOMPARE LE 1).ZG677A  CK NUM        02208300
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02208400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02208500
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02208600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02208700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02208800
.ZG677A               ANOP  ,                                           02208900
.*------------------------------------------------------------------    02209000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02209100
.ZG678                ANOP  ,                                           02209200
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02209300
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG678E  VALID ARG    02209400
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG678D  OMITTED     02209500
&ZASYSLNDX            SETA  0                                           02209600
.ZG678A               ANOP  ,           POSITIONAL MACRO KEY            02209700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02209800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG678C           02209900
&ZTLC                 SETC 'SKEYCOMPARE'                                02210000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG678A  02210100
.ZG678B               ANOP  ,                                           02210200
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02210300
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      02210400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02210500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02210600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02210700
                      AGO   .ZG678E                                     02210800
.ZG678C               ANOP  ,                                           02210900
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02211000
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           02211100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02211200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02211300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02211400
&ZMS                  SETC  '&ZMS "NO"'                                 02211500
&ZMS                  SETC  '&ZMS OR "YES".'                            02211600
                      MNOTE 8,' &ZMS '                                  02211700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02211800
                      AGO   .ZG678E                                     02211900
.ZG678D               ANOP  ,                                           02212000
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02212100
.ZG678E               ANOP  ,                                           02212200
.*------------------------------------------------------------------    02212300
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02212400
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG678F  KEY       02212500
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG678F  PARM       02212600
&ZMS                  SETC  '"SKEYCOMPARE'      *KDEPA* MNOTE           02212700
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02212800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02212900
&ZMS                  SETC  '&ZMS '                                     02213000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02213100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02213200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02213300
.ZG678F               ANOP  ,                                           02213400
.*------------------------------------------------------------------    02213500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02213600
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02213700
.*-------------------------------------------------------------------   02213800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02213900
.ZG681                ANOP  ,                                           02214000
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG681A              02214100
&ZTLC                 SETC 'NO'                                         02214200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG682         02214300
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02214400
                      AIF   (N'&KEYCOMPARE LE 1).ZG681A  CK NUM         02214500
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02214600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02214700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02214800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02214900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02215000
.ZG681A               ANOP  ,                                           02215100
.*------------------------------------------------------------------    02215200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02215300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02215400
.ZG681A0              AIF   (K'&ENTRYKEY LE 0).ZG681A1  OK              02215500
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02215600
.ZG681A1              AIF   (K'&KEYREQTYPE LE 0).ZG681A2  OK            02215700
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02215800
.ZG681A2              AIF   (K'&KEYRANGEEND LE 0).ZG681A3  OK           02215900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02216000
.ZG681A3              AIF   (K'&ZCVAL LE 0).ZG681A4  OK                 02216100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02216200
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           02216300
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02216400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02216500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02216600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02216700
.ZG681A4              ANOP  ,                                           02216800
.*-------------------------------------------------------------------   02216900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02217000
.ZG682                ANOP  ,                                           02217100
&ZTLC                 SETC 'YES'                                        02217200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG696         02217300
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02217400
                      AIF   (N'&KEYCOMPARE LE 1).ZG682A  CK NUM         02217500
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02217600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02217700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02217800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02217900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02218000
.ZG682A               ANOP  ,                                           02218100
.*----------------------------------------------------------------***   02218200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02218300
                      AIF   (N'&ENTRYKEY LE 1).ZG684A  CK NUM           02218400
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           02218500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02218600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02218700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02218800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02218900
.ZG684A               ANOP  ,                                           02219000
.*-------------------------------------------------------------------   02219100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02219200
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02219300
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02219400
                      AIF   (N'&ENTRYKEY GT 1).ZG684B  MULTI PARMS      02219500
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02219600
.ZG684B               AIF   (K'&ENTRYKEY(1) GT 0).ZG684C                02219700
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02219800
&ZMS                  SETC  ' '         *KRQDA*                         02219900
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02220000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02220100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02220200
.ZG684C               ANOP  ,                                           02220300
.*-------------------------------------------------------------------   02220400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02220500
                      AIF   (K'&ZXENTRYKEY LE 0).ZG684R  NOT I/O        02220600
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG684R           02220700
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02220800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG684P               02220900
                      AIF   (K'&ZCGPR GT 2).ZG684Q                      02221000
                      AIF   ('&ZCGPR' EQ '0').ZG684Q                    02221100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02221200
                      AIF   (T'&ZCGPR NE 'N').ZG684Q  INVALID REG NAME  02221300
.ZG684P               ANOP  ,                                           02221400
                      AIF   (T'&ZCGPR NE 'N').ZG684R  NON NUMERIC       02221500
                      AIF   ('&ZCGPR' LT '2').ZG684Q                    02221600
                      AIF   ('&ZCGPR' LE '12').ZG684R                   02221700
.ZG684Q               ANOP  ,                                           02221800
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           02221900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02222000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02222100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02222200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02222300
.ZG684R               ANOP  ,                                           02222400
.*------------------------------------------------------------------    02222500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02222600
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02222700
.*-------------------------------------------------------------------   02222800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02222900
.ZG687                ANOP  ,                                           02223000
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG687A              02223100
&ZTLC                 SETC 'EQUAL'                                      02223200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG688         02223300
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02223400
                      AIF   (N'&KEYREQTYPE LE 1).ZG687A  CK NUM         02223500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02223600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02223700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02223800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02223900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02224000
.ZG687A               ANOP  ,                                           02224100
.*------------------------------------------------------------------    02224200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02224300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02224400
.ZG687A0              AIF   (K'&KEYRANGEEND LE 0).ZG687A1  OK           02224500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02224600
.ZG687A1              AIF   (K'&ZCVAL LE 0).ZG687A2  OK                 02224700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02224800
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02224900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02225000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02225100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02225200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02225300
.ZG687A2              ANOP  ,                                           02225400
.*-------------------------------------------------------------------   02225500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02225600
.ZG688                ANOP  ,                                           02225700
&ZTLC                 SETC 'LESSOREQUAL'                                02225800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG689         02225900
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02226000
                      AIF   (N'&KEYREQTYPE LE 1).ZG688A  CK NUM         02226100
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02226200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02226300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02226400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02226500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02226600
.ZG688A               ANOP  ,                                           02226700
.*------------------------------------------------------------------    02226800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02226900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02227000
.ZG688A0              AIF   (K'&KEYRANGEEND LE 0).ZG688A1  OK           02227100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02227200
.ZG688A1              AIF   (K'&ZCVAL LE 0).ZG688A2  OK                 02227300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02227400
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02227500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02227600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02227700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02227800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02227900
.ZG688A2              ANOP  ,                                           02228000
.*-------------------------------------------------------------------   02228100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02228200
.ZG689                ANOP  ,                                           02228300
&ZTLC                 SETC 'GREATEROREQUAL'                             02228400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG690         02228500
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02228600
                      AIF   (N'&KEYREQTYPE LE 1).ZG689A  CK NUM         02228700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02228800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02228900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02229000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02229100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02229200
.ZG689A               ANOP  ,                                           02229300
.*------------------------------------------------------------------    02229400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02229500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02229600
.ZG689A0              AIF   (K'&KEYRANGEEND LE 0).ZG689A1  OK           02229700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02229800
.ZG689A1              AIF   (K'&ZCVAL LE 0).ZG689A2  OK                 02229900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02230000
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02230100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02230200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02230300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02230400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02230500
.ZG689A2              ANOP  ,                                           02230600
.*-------------------------------------------------------------------   02230700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02230800
.ZG690                ANOP  ,                                           02230900
&ZTLC                 SETC 'RANGE'                                      02231000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG694         02231100
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02231200
                      AIF   (N'&KEYREQTYPE LE 1).ZG690A  CK NUM         02231300
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02231400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02231500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02231600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02231700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02231800
.ZG690A               ANOP  ,                                           02231900
.*----------------------------------------------------------------***   02232000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02232100
                      AIF   (N'&KEYRANGEEND LE 1).ZG692A  CK NUM        02232200
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           02232300
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02232400
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02232500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02232600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02232700
.ZG692A               ANOP  ,                                           02232800
.*-------------------------------------------------------------------   02232900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02233000
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02233100
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02233200
                      AIF   (N'&KEYRANGEEND GT 1).ZG692B  MULTI PARMS   02233300
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02233400
.ZG692B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG692C             02233500
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02233600
&ZMS                  SETC  ' '         *KRQDA*                         02233700
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02233800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02233900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02234000
.ZG692C               ANOP  ,                                           02234100
.*-------------------------------------------------------------------   02234200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02234300
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG692R  NOT I/O     02234400
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG692R        02234500
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02234600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG692P               02234700
                      AIF   (K'&ZCGPR GT 2).ZG692Q                      02234800
                      AIF   ('&ZCGPR' EQ '0').ZG692Q                    02234900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02235000
                      AIF   (T'&ZCGPR NE 'N').ZG692Q  INVALID REG NAME  02235100
.ZG692P               ANOP  ,                                           02235200
                      AIF   (T'&ZCGPR NE 'N').ZG692R  NON NUMERIC       02235300
                      AIF   ('&ZCGPR' LT '2').ZG692Q                    02235400
                      AIF   ('&ZCGPR' LE '12').ZG692R                   02235500
.ZG692Q               ANOP  ,                                           02235600
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           02235700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02235800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02235900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02236000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02236100
.ZG692R               ANOP  ,                                           02236200
.*------------------------------------------------------------------    02236300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02236400
.ZG694                ANOP  ,                                           02236500
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02236600
                      AIF   (K'&XKEYREQTYPE GT 0).ZG694E  VALID ARG     02236700
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG694D  OMITTED      02236800
&ZASYSLNDX            SETA  0                                           02236900
.ZG694A               ANOP  ,           POSITIONAL MACRO KEY            02237000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02237100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG694C           02237200
&ZTLC                 SETC 'KEYREQTYPE'                                 02237300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG694A  02237400
.ZG694B               ANOP  ,                                           02237500
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02237600
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       02237700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02237800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02237900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02238000
                      AGO   .ZG694E                                     02238100
.ZG694C               ANOP  ,                                           02238200
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02238300
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           02238400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02238500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02238600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02238700
&ZMS                  SETC  '&ZMS "EQUAL",'                             02238800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02238900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02239000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02239100
                      MNOTE 8,' &ZMS '                                  02239200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02239300
                      AGO   .ZG694E                                     02239400
.ZG694D               ANOP  ,                                           02239500
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02239600
.ZG694E               ANOP  ,                                           02239700
.*------------------------------------------------------------------    02239800
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02239900
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG694F  KEY           02240000
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG694F  PARM        02240100
&ZMS                  SETC  '"KEYREQTYPE'       *KDEPA* MNOTE           02240200
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02240300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02240400
&ZMS                  SETC  '&ZMS '                                     02240500
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02240600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02240700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02240800
.ZG694F               ANOP  ,                                           02240900
.*------------------------------------------------------------------    02241000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02241100
.ZG696                ANOP  ,                                           02241200
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02241300
                      AIF   (K'&XKEYCOMPARE GT 0).ZG696E  VALID ARG     02241400
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG696D  OMITTED      02241500
&ZASYSLNDX            SETA  0                                           02241600
.ZG696A               ANOP  ,           POSITIONAL MACRO KEY            02241700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02241800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG696C           02241900
&ZTLC                 SETC 'KEYCOMPARE'                                 02242000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG696A  02242100
.ZG696B               ANOP  ,                                           02242200
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02242300
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       02242400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02242500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02242600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02242700
                      AGO   .ZG696E                                     02242800
.ZG696C               ANOP  ,                                           02242900
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02243000
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           02243100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02243200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02243300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02243400
&ZMS                  SETC  '&ZMS "NO"'                                 02243500
&ZMS                  SETC  '&ZMS OR "YES".'                            02243600
                      MNOTE 8,' &ZMS '                                  02243700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02243800
                      AGO   .ZG696E                                     02243900
.ZG696D               ANOP  ,                                           02244000
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02244100
.ZG696E               ANOP  ,                                           02244200
.*------------------------------------------------------------------    02244300
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02244400
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG696F  KEY       02244500
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG696F  PARM        02244600
&ZMS                  SETC  '"KEYCOMPARE'       *KDEPA* MNOTE           02244700
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02244800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02244900
&ZMS                  SETC  '&ZMS '                                     02245000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02245100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02245200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02245300
.ZG696F               ANOP  ,                                           02245400
.*------------------------------------------------------------------    02245500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02245600
.ZG698                ANOP  ,                                           02245700
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   02245800
                      AIF   (K'&XKEYTYPE GT 0).ZG698E  VALID ARG        02245900
                      AIF   (T'&KEYTYPE EQ 'O').ZG698D  OMITTED         02246000
&ZASYSLNDX            SETA  0                                           02246100
.ZG698A               ANOP  ,           POSITIONAL MACRO KEY            02246200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02246300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG698C           02246400
&ZTLC                 SETC 'KEYTYPE'                                    02246500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG698A  02246600
.ZG698B               ANOP  ,                                           02246700
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 02246800
&ZMS                  SETC  'THE "KEYTYPE" KEY'  *KOPTA* MNOTE          02246900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02247000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02247100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02247200
                      AGO   .ZG698E                                     02247300
.ZG698C               ANOP  ,                                           02247400
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 02247500
&ZMS                  SETC  '"KEYTYPE='         *KUKWA* MNOTE           02247600
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            02247700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02247800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02247900
&ZMS                  SETC  '&ZMS "ENTRY"'                              02248000
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      02248100
                      MNOTE 8,' &ZMS '                                  02248200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02248300
                      AGO   .ZG698E                                     02248400
.ZG698D               ANOP  ,                                           02248500
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             02248600
.ZG698E               ANOP  ,                                           02248700
.*------------------------------------------------------------------    02248800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02248900
.ZG699                ANOP  ,                                           02249000
&ZXLOCATOR            SETC  'INPUT'     SET IN/OUTPUT                   02249100
                      AIF   (K'&XLOCATOR GT 0).ZG699E  VALID ARG        02249200
                      AIF   (T'&LOCATOR EQ 'O').ZG699D  OMITTED         02249300
&ZASYSLNDX            SETA  0                                           02249400
.ZG699A               ANOP  ,           POSITIONAL MACRO KEY            02249500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02249600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG699C           02249700
&ZTLC                 SETC 'LOCATOR'                                    02249800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG699A  02249900
.ZG699B               ANOP  ,                                           02250000
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 02250100
&ZMS                  SETC  'THE "LOCATOR" KEY'  *KOPTA* MNOTE          02250200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02250300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02250400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02250500
                      AGO   .ZG699E                                     02250600
.ZG699C               ANOP  ,                                           02250700
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 02250800
&ZMS                  SETC  '"LOCATOR='         *KUKWA* MNOTE           02250900
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            02251000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02251100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02251200
&ZMS                  SETC  '&ZMS "CURSOR",'                            02251300
&ZMS                  SETC  '&ZMS "ENTRYID",'                           02251400
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         02251500
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          02251600
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         02251700
                      MNOTE 8,' &ZMS '                                  02251800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02251900
                      AGO   .ZG699E                                     02252000
.ZG699D               ANOP  ,                                           02252100
&XLOCATOR             SETC  'CURSOR'    SET DEFAULT KEYWORD             02252200
.ZG699E               ANOP  ,                                           02252300
.*------------------------------------------------------------------    02252400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02252500
                      AIF   (K'&LOCATOR(1) GT 0).ZG699F  PARM           02252600
&XLOCATOR             SETC  ''          ENSURE NULL KEYWORD             02252700
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 02252800
&ZMS                  SETC  'THE'                                       02252900
&ZMS                  SETC  '&ZMS "LOCATOR" KEY AND ITS'                02253000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02253100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02253200
&ZMS                  SETC  '&ZMS "CURSOR",'                            02253300
&ZMS                  SETC  '&ZMS "ENTRYID",'                           02253400
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         02253500
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          02253600
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         02253700
                      MNOTE 8,' &ZMS '                                  02253800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02253900
.ZG699F               ANOP  ,                                           02254000
.*------------------------------------------------------------------    02254100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02254200
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02254300
.*-------------------------------------------------------------------   02254400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02254500
.ZG702                ANOP  ,                                           02254600
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG702A             02254700
&ZTLC                 SETC 'NO'                                         02254800
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG703        02254900
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02255000
                      AIF   (N'&VERSCOMPARE LE 1).ZG702A  CK NUM        02255100
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02255200
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02255300
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02255400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02255500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02255600
.ZG702A               ANOP  ,                                           02255700
.*------------------------------------------------------------------    02255800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02255900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02256000
.ZG702A0              AIF   (K'&VERSCOMP LE 0).ZG702A1  OK              02256100
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02256200
.ZG702A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG702A2  OK          02256300
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02256400
.ZG702A2              AIF   (K'&ZCVAL LE 0).ZG702A3  OK                 02256500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02256600
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           02256700
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02256800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02256900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02257000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02257100
.ZG702A3              ANOP  ,                                           02257200
.*-------------------------------------------------------------------   02257300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02257400
.ZG703                ANOP  ,                                           02257500
&ZTLC                 SETC 'YES'                                        02257600
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG712        02257700
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02257800
                      AIF   (N'&VERSCOMPARE LE 1).ZG703A  CK NUM        02257900
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02258000
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02258100
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02258200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02258300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02258400
.ZG703A               ANOP  ,                                           02258500
.*----------------------------------------------------------------***   02258600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02258700
                      AIF   (N'&VERSCOMP LE 1).ZG705A  CK NUM           02258800
&ZMS                  SETC  '"VERSCOMP='        *KPOSA* MNOTE           02258900
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02259000
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02259100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02259200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02259300
.ZG705A               ANOP  ,                                           02259400
.*-------------------------------------------------------------------   02259500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02259600
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02259700
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02259800
                      AIF   (N'&VERSCOMP GT 1).ZG705B  MULTI PARMS      02259900
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02260000
.ZG705B               AIF   (K'&VERSCOMP(1) GT 0).ZG705C                02260100
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02260200
&ZMS                  SETC  ' '         *KRQDA*                         02260300
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               02260400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02260500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02260600
.ZG705C               ANOP  ,                                           02260700
.*-------------------------------------------------------------------   02260800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02260900
                      AIF   (K'&ZXVERSCOMP LE 0).ZG705R  NOT I/O        02261000
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG705R           02261100
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02261200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG705P               02261300
                      AIF   (K'&ZCGPR GT 2).ZG705Q                      02261400
                      AIF   ('&ZCGPR' EQ '0').ZG705Q                    02261500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02261600
                      AIF   (T'&ZCGPR NE 'N').ZG705Q  INVALID REG NAME  02261700
.ZG705P               ANOP  ,                                           02261800
                      AIF   (T'&ZCGPR NE 'N').ZG705R  NON NUMERIC       02261900
                      AIF   ('&ZCGPR' LT '2').ZG705Q                    02262000
                      AIF   ('&ZCGPR' LE '12').ZG705R                   02262100
.ZG705Q               ANOP  ,                                           02262200
&ZMS                  SETC  '"VERSCOMP='        *KGPRA* MNOTE           02262300
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02262400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02262500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02262600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02262700
.ZG705R               ANOP  ,                                           02262800
.*----------------------------------------------------------------***   02262900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02263000
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG707A  CK NUM       02263100
&ZMS                  SETC  '"VERSCOMPTYPE='    *KPOSA* MNOTE           02263200
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02263300
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02263400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02263500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02263600
.ZG707A               ANOP  ,                                           02263700
.*-------------------------------------------------------------------   02263800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02263900
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02264000
.ZG708A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG709A                  02264100
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02264200
.*-------------------------------------------------------------------   02264300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02264400
.ZG709A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG710A            02264500
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02264600
.*-------------------------------------------------------------------   02264700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02264800
.ZG710A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG710C  KEYWORD     02264900
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG710B            02265000
&ZMS                  SETC  '"VERSCOMPTYPE='    *KUKWA* MNOTE           02265100
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02265200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02265300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02265400
&ZMS                  SETC  '&ZMS "EQUAL"'                              02265500
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02265600
                      MNOTE 8,' &ZMS '                                  02265700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02265800
.ZG710B               ANOP  ,                                           02265900
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02266000
.ZG710C               ANOP  ,                                           02266100
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02266200
.*-------------------------------------------------------------------   02266300
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02266400
                      AIF   (K'&VERSCOMP(1) GT 0).ZG710D  KEY           02266500
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG710D  PARM      02266600
&ZMS                  SETC  '"VERSCOMPTYPE'     *KDEPA* MNOTE           02266700
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02266800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02266900
&ZMS                  SETC  '&ZMS '                                     02267000
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02267100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02267200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02267300
.ZG710D               ANOP  ,                                           02267400
.*------------------------------------------------------------------    02267500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02267600
.ZG712                ANOP  ,                                           02267700
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02267800
                      AIF   (K'&XVERSCOMPARE GT 0).ZG712E  VALID ARG    02267900
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG712D  OMITTED     02268000
&ZASYSLNDX            SETA  0                                           02268100
.ZG712A               ANOP  ,           POSITIONAL MACRO KEY            02268200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02268300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG712C           02268400
&ZTLC                 SETC 'VERSCOMPARE'                                02268500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG712A  02268600
.ZG712B               ANOP  ,                                           02268700
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02268800
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'  *KOPTA* MNOTE      02268900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02269000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02269100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02269200
                      AGO   .ZG712E                                     02269300
.ZG712C               ANOP  ,                                           02269400
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02269500
&ZMS                  SETC  '"VERSCOMPARE='     *KUKWA* MNOTE           02269600
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02269700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02269800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02269900
&ZMS                  SETC  '&ZMS "NO"'                                 02270000
&ZMS                  SETC  '&ZMS OR "YES".'                            02270100
                      MNOTE 8,' &ZMS '                                  02270200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02270300
                      AGO   .ZG712E                                     02270400
.ZG712D               ANOP  ,                                           02270500
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02270600
.ZG712E               ANOP  ,                                           02270700
.*-------------------------------------------------------------------   02270800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02270900
.ZG713                ANOP  ,                                           02271000
&ZTLC                 SETC 'READ_MULT'                                  02271100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG836            02271200
&XREQUEST             SETC  'READ_MULT'         SET KEYWORD             02271300
                      AIF   (N'&REQUEST LE 1).ZG713A  CK NUM            02271400
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           02271500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02271600
&ZMS                  SETC  '&ZMS "REQUEST"'                            02271700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02271800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02271900
.ZG713A               ANOP  ,                                           02272000
.*------------------------------------------------------------------    02272100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02272200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02272300
.ZG713A0              AIF   (K'&DIRECTION LE 0).ZG713A1  OK             02272400
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02272500
.ZG713A1              AIF   (K'&LOCATOR LE 0).ZG713A2  OK               02272600
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02272700
.ZG713A2              AIF   (K'&KEYSCANTYPE LE 0).ZG713A3  OK           02272800
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02272900
.ZG713A3              AIF   (K'&ENTRYID LE 0).ZG713A4  OK               02273000
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02273100
.ZG713A4              AIF   (K'&ENTRYNAME LE 0).ZG713A5  OK             02273200
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02273300
.ZG713A5              AIF   (K'&KEYTYPE LE 0).ZG713A6  OK               02273400
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02273500
.ZG713A6              AIF   (K'&FIRSTELEM LE 0).ZG713A7  OK             02273600
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      02273700
.ZG713A7              AIF   (K'&LASTELEM LE 0).ZG713A8  OK              02273800
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      02273900
.ZG713A8              AIF   (K'&MISCOMPARE LE 0).ZG713A9  OK            02274000
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      02274100
.ZG713A9              AIF   (K'&LISTTYPE LE 0).ZG713A10  OK             02274200
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      02274300
.ZG713A10             AIF   (K'&MOVETOKEY LE 0).ZG713A11  OK            02274400
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02274500
.ZG713A11             AIF   (K'&LISTKEYINC LE 0).ZG713A12  OK           02274600
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02274700
.ZG713A12             AIF   (K'&LISTKEYAREA LE 0).ZG713A13  OK          02274800
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02274900
.ZG713A13             AIF   (K'&MOVETOSKEY LE 0).ZG713A14  OK           02275000
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02275100
.ZG713A14             AIF   (K'&BUFINCRNUM LE 0).ZG713A15  OK           02275200
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      02275300
.ZG713A15             AIF   (K'&ZCVAL LE 0).ZG713A16  OK                02275400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02275500
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   02275600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02275700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02275800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02275900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02276000
.ZG713A16             ANOP  ,                                           02276100
.*-------------------------------------------------------------------   02276200
.***AG.KKWRD07 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          02276300
&ZI                   SETA  0           XVARIABLE ARRAY INDEX           02276400
&ZJ                   SETA  0           SUBLIST INDEX                   02276500
.ZG715A               ANOP  ,                                           02276600
&ZJ                   SETA  &ZJ+1       NEXT SUBLIST                    02276700
                      AIF   (&ZJ GT N'&TYPE).ZG715C  DONE               02276800
                      AIF   (K'&TYPE(&ZJ) LE 0).ZG715A  NULL            02276900
&ZI                   SETA  &ZI+1       NEXT ARRAY ENTRY                02277000
&XTYPE(&ZI)   SETC  ''                  NULL ENTRY                      02277100
&XTYPE(&ZI+1) SETC  ''                  NULL AT ARRAY END               02277200
.ZG716B  AIF   ('&TYPE(&ZJ)' NE 'ENTDATA').ZG717B                       02277300
&XTYPE(&ZI)   SETC  'ENTDATA'           SET KEYWORD                     02277400
.ZG717B  AIF   ('&TYPE(&ZJ)' NE 'ADJDATA').ZG718B                       02277500
&XTYPE(&ZI)   SETC  'ADJDATA'           SET KEYWORD                     02277600
.ZG718B  AIF   ('&TYPE(&ZJ)' NE 'ECONTROLS').ZG719B                     02277700
&XTYPE(&ZI)   SETC  'ECONTROLS'         SET KEYWORD                     02277800
.ZG719B               AIF   ('&XTYPE(&ZI)' NE '').ZG715A                02277900
&ZI                   SETA  &ZI-1       BACKUP ARRAY                    02278000
&ZMS                  SETC  '"TYPE='    *KVKWA* MNOTE                   02278100
&ZMS                  SETC  '&ZMS.&TYPE"'                               02278200
&ZMS                  SETC  '&ZMS ARGUMENT &ZJ'                         02278300
&ZMS                  SETC  '&ZMS IS AN UNKNOWN KEYWORD. '              02278400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02278500
&ZMS                  SETC  '&ZMS "ENTDATA",'                           02278600
&ZMS                  SETC  '&ZMS "ADJDATA",'                           02278700
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      02278800
                      MNOTE 8,' &ZMS '                                  02278900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02279000
                      AGO   .ZG715A                                     02279100
.*-------------------------------------------------------------------   02279200
.***AG.KKWRD09 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          02279300
.ZG715C               AIF   (&ZI GT 0).ZG715D   VALID                   02279400
&ZXTYPE               SETC  ''          RESET IN/OUTPUT                 02279500
&XTYPE(1)  SETC  'ENTDATA'              SET DEFAULT KEYWORD             02279600
&XTYPE(2)  SETC  ''   NULL AT ARRAY END                                 02279700
&ZMS                  SETC  'THE'                                       02279800
&ZMS                  SETC  '&ZMS "TYPE" KEY AND ITS'                   02279900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02280000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02280100
&ZMS                  SETC  '&ZMS "ENTDATA",'                           02280200
&ZMS                  SETC  '&ZMS "ADJDATA",'                           02280300
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      02280400
                      MNOTE 8,' &ZMS '                                  02280500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02280600
.ZG715D               ANOP  ,                                           02280700
.*----------------------------------------------------------------***   02280800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02280900
                      AIF   (N'&ADJAREA LE 1).ZG721A  CK NUM            02281000
&ZMS                  SETC  '"ADJAREA='         *KPOSA* MNOTE           02281100
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            02281200
&ZMS                  SETC  '&ZMS "ADJAREA"'                            02281300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02281400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02281500
.ZG721A               ANOP  ,                                           02281600
.*-------------------------------------------------------------------   02281700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02281800
&ZXADJAREA            SETC  'INPUT'     SET IN/OUTPUT                   02281900
&XADJAREA             SETC  'NO_ADJAREA'                                02282000
                      AIF   (K'&ADJAREA(1) LE 0).ZG721B  PARM           02282100
&XADJAREA             SETC  '&ADJAREA(1)'       SET XVARIABLE           02282200
                      AIF   (N'&ADJAREA GT 1).ZG721B  MULTI PARMS       02282300
&XADJAREA             SETC  '&ADJAREA'  SET XVARIABLE                   02282400
.ZG721B               ANOP  ,                                           02282500
.*-------------------------------------------------------------------   02282600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02282700
                      AIF   (K'&ZXADJAREA LE 0).ZG721R  NOT I/O         02282800
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA').ZG721R                     02282900
                      AIF   ('&XADJAREA'(1,1) NE '(').ZG721R            02283000
&ZCGPR                SETC  '&XADJAREA'(2,K'&XADJAREA-2)                02283100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG721P               02283200
                      AIF   (K'&ZCGPR GT 2).ZG721Q                      02283300
                      AIF   ('&ZCGPR' EQ '0').ZG721Q                    02283400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02283500
                      AIF   (T'&ZCGPR NE 'N').ZG721Q  INVALID REG NAME  02283600
.ZG721P               ANOP  ,                                           02283700
                      AIF   (T'&ZCGPR NE 'N').ZG721R  NON NUMERIC       02283800
                      AIF   ('&ZCGPR' LT '2').ZG721Q                    02283900
                      AIF   ('&ZCGPR' LE '12').ZG721R                   02284000
.ZG721Q               ANOP  ,                                           02284100
&ZMS                  SETC  '"ADJAREA='         *KGPRA* MNOTE           02284200
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            02284300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02284400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02284500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02284600
.ZG721R               ANOP  ,                                           02284700
.*----------------------------------------------------------------***   02284800
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02284900
&XRESTARTTOKEN        SETC  ''          INITIALIZE XVARIABLE            02285000
                      AIF   (K'&RESTOKEN LE 0).ZG724C                   02285100
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02285200
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET XVARIABLE                   02285300
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02285400
&XRESTOKEN            SETC  '&RESTOKEN(1)'      SET XVARIABLE PARM      02285500
                      AIF   (N'&RESTOKEN GT 1).ZG724A                   02285600
&XRESTOKEN            SETC  '&RESTOKEN'         SET XVARIABLE PARM      02285700
.ZG724A               AIF   (N'&RESTOKEN LE 1).ZG724B  CK NUM           02285800
&ZMS                  SETC  '"RESTOKEN='        *KPOSA* MNOTE           02285900
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02286000
&ZMS                  SETC  '&ZMS "RESTOKEN"'                           02286100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02286200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02286300
.ZG724B               AIF   (K'&XRESTOKEN GT 0).ZG724C  ONE PARM        02286400
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02286500
&ZXRESTOKEN           SETC  ''          RESET IN/OUTPUT                 02286600
&ZMS                  SETC  ' '         *KRQDA*                         02286700
&ZMS                  SETC  '&ZMS "RESTOKEN" KEY AND ITS'               02286800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02286900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02287000
.ZG724C               ANOP  ,                                           02287100
.*----------------------------------------------------------------***   02287200
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02287300
                      AIF   (K'&EXTRESTOKEN LE 0).ZG725D  NO ME KEY     02287400
                      AIF   (N'&EXTRESTOKEN LE 1).ZG725A  CK NUM        02287500
&ZMS                  SETC  '"EXTRESTOKEN='     *KPOSA* MNOTE           02287600
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02287700
&ZMS                  SETC  '&ZMS "EXTRESTOKEN"'                        02287800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02287900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02288000
.ZG725A               AIF   (K'&XRESTARTTOKEN LE 0).ZG725B              02288100
&ZMS                  SETC  '"EXTRESTOKEN'      *KMEKA* MNOTE           02288200
&ZMS                  SETC  '&ZMS.=&EXTRESTOKEN"'                       02288300
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02288400
&ZMS                  SETC  '&ZMS "&XRESTARTTOKEN"'                     02288500
                      MNOTE 8,' &ZMS KEY.'                              02288600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02288700
                      AGO   .ZG725D                                     02288800
.*                                                                      02288900
.ZG725B               ANOP  ,                                           02289000
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02289100
&XRESTARTTOKEN        SETC  'EXTRESTOKEN'       SET XVARIABLE           02289200
&ZXEXTRESTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   02289300
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN(1)'   SET XVARIABLE PARM      02289400
                      AIF   (N'&EXTRESTOKEN GT 1).ZG725C                02289500
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN'      SET XVARIABLE PARM      02289600
.ZG725C               AIF   (K'&XEXTRESTOKEN GT 0).ZG725D  ONE PARM     02289700
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02289800
&ZXEXTRESTOKEN        SETC  ''          RESET IN/OUTPUT                 02289900
&ZMS                  SETC  ' '         *KRQDA*                         02290000
&ZMS                  SETC  '&ZMS "EXTRESTOKEN" KEY AND ITS'            02290100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02290200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02290300
.ZG725D               ANOP  ,                                           02290400
.*------------------------------------------------------------------    02290500
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           02290600
                      AIF   (K'&XRESTARTTOKEN GT 0).ZG726B              02290700
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02290800
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET DEFAULT                     02290900
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02291000
&XRESTOKEN            SETC  'NO_RESTOKEN'       SET DEFAULT PARM        02291100
.ZG726B               ANOP  ,                                           02291200
.*-------------------------------------------------------------------   02291300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02291400
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG726R  NOT I/O     02291500
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG726R                02291600
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG726R        02291700
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02291800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG726P               02291900
                      AIF   (K'&ZCGPR GT 2).ZG726Q                      02292000
                      AIF   ('&ZCGPR' EQ '0').ZG726Q                    02292100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02292200
                      AIF   (T'&ZCGPR NE 'N').ZG726Q  INVALID REG NAME  02292300
.ZG726P               ANOP  ,                                           02292400
                      AIF   (T'&ZCGPR NE 'N').ZG726R  NON NUMERIC       02292500
                      AIF   ('&ZCGPR' LT '2').ZG726Q                    02292600
                      AIF   ('&ZCGPR' LE '12').ZG726R                   02292700
.ZG726Q               ANOP  ,                                           02292800
&ZMS                  SETC  '"EXTRESTOKEN='     *KGPRA* MNOTE           02292900
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02293000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02293100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02293200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02293300
.ZG726R               ANOP  ,                                           02293400
.*-------------------------------------------------------------------   02293500
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02293600
.ZG724                AIF   ('&XRESTARTTOKEN' NE 'RESTOKEN').ZG725      02293700
.*-------------------------------------------------------------------   02293800
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02293900
                      AIF   (K'&ZXRESTOKEN LE 0).ZG724R  NOT I/O        02294000
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG724R                   02294100
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZG724R           02294200
&ZCGPR                SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)              02294300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG724P               02294400
                      AIF   (K'&ZCGPR GT 2).ZG724Q                      02294500
                      AIF   ('&ZCGPR' EQ '0').ZG724Q                    02294600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02294700
                      AIF   (T'&ZCGPR NE 'N').ZG724Q  INVALID REG NAME  02294800
.ZG724P               ANOP  ,                                           02294900
                      AIF   (T'&ZCGPR NE 'N').ZG724R  NON NUMERIC       02295000
                      AIF   ('&ZCGPR' LT '2').ZG724Q                    02295100
                      AIF   ('&ZCGPR' LE '12').ZG724R                   02295200
.ZG724Q               ANOP  ,                                           02295300
&ZMS                  SETC  '"RESTOKEN='        *KGPRA* MNOTE           02295400
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02295500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02295600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02295700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02295800
.ZG724R               ANOP  ,                                           02295900
.*-------------------------------------------------------------------   02296000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02296100
.ZG725                AIF   ('&XRESTARTTOKEN' NE 'EXTRESTOKEN').ZG726   02296200
.*-------------------------------------------------------------------   02296300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02296400
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG725R  NOT I/O     02296500
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG725R             02296600
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG725R        02296700
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02296800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG725P               02296900
                      AIF   (K'&ZCGPR GT 2).ZG725Q                      02297000
                      AIF   ('&ZCGPR' EQ '0').ZG725Q                    02297100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02297200
                      AIF   (T'&ZCGPR NE 'N').ZG725Q  INVALID REG NAME  02297300
.ZG725P               ANOP  ,                                           02297400
                      AIF   (T'&ZCGPR NE 'N').ZG725R  NON NUMERIC       02297500
                      AIF   ('&ZCGPR' LT '2').ZG725Q                    02297600
                      AIF   ('&ZCGPR' LE '12').ZG725R                   02297700
.ZG725Q               ANOP  ,                                           02297800
&ZMS                  SETC  '"EXTRESTOKEN='     *KGPRA* MNOTE           02297900
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02298000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02298100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02298200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02298300
.ZG725R               ANOP  ,                                           02298400
.*-------------------------------------------------------------------   02298500
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            02298600
.ZG726                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     02298700
.*------------------------------------------------------------------    02298800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02298900
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02299000
.*-------------------------------------------------------------------   02299100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02299200
.ZG729                ANOP  ,                                           02299300
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG729A             02299400
&ZTLC                 SETC 'NO'                                         02299500
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG730        02299600
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02299700
                      AIF   (N'&LISTCOMPARE LE 1).ZG729A  CK NUM        02299800
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02299900
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02300000
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02300100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02300200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02300300
.ZG729A               ANOP  ,                                           02300400
.*------------------------------------------------------------------    02300500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02300600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02300700
.ZG729A0              AIF   (K'&LISTNUM LE 0).ZG729A1  OK               02300800
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02300900
.ZG729A1              AIF   (K'&AUTHCOMPARE LE 0).ZG729A2  OK           02301000
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02301100
.ZG729A2              AIF   (K'&AUTHCOMP LE 0).ZG729A3  OK              02301200
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02301300
.ZG729A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG729A4  OK          02301400
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02301500
.ZG729A4              AIF   (K'&ZCVAL LE 0).ZG729A5  OK                 02301600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02301700
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           02301800
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02301900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02302000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02302100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02302200
.ZG729A5              ANOP  ,                                           02302300
.*-------------------------------------------------------------------   02302400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02302500
.ZG730                ANOP  ,                                           02302600
&ZTLC                 SETC 'YES'                                        02302700
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG747        02302800
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02302900
                      AIF   (N'&LISTCOMPARE LE 1).ZG730A  CK NUM        02303000
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02303100
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02303200
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02303300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02303400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02303500
.ZG730A               ANOP  ,                                           02303600
.*----------------------------------------------------------------***   02303700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02303800
                      AIF   (N'&LISTNUM LE 1).ZG732A  CK NUM            02303900
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           02304000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02304100
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02304200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02304300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02304400
.ZG732A               ANOP  ,                                           02304500
.*-------------------------------------------------------------------   02304600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02304700
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02304800
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02304900
                      AIF   (N'&LISTNUM GT 1).ZG732B  MULTI PARMS       02305000
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02305100
.ZG732B               AIF   (K'&LISTNUM(1) GT 0).ZG732C                 02305200
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02305300
&ZMS                  SETC  ' '         *KRQDA*                         02305400
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02305500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02305600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02305700
.ZG732C               ANOP  ,                                           02305800
.*-------------------------------------------------------------------   02305900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02306000
                      AIF   (K'&ZXLISTNUM LE 0).ZG732R  NOT I/O         02306100
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG732R            02306200
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02306300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG732P               02306400
                      AIF   (K'&ZCGPR GT 2).ZG732Q                      02306500
                      AIF   ('&ZCGPR' EQ '0').ZG732Q                    02306600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02306700
                      AIF   (T'&ZCGPR NE 'N').ZG732Q  INVALID REG NAME  02306800
.ZG732P               ANOP  ,                                           02306900
                      AIF   (T'&ZCGPR NE 'N').ZG732R  NON NUMERIC       02307000
                      AIF   ('&ZCGPR' LT '2').ZG732Q                    02307100
                      AIF   ('&ZCGPR' LE '12').ZG732R                   02307200
.ZG732Q               ANOP  ,                                           02307300
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           02307400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02307500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02307600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02307700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02307800
.ZG732R               ANOP  ,                                           02307900
.*------------------------------------------------------------------    02308000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02308100
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02308200
.*-------------------------------------------------------------------   02308300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02308400
.ZG736                ANOP  ,                                           02308500
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG736A             02308600
&ZTLC                 SETC 'NO'                                         02308700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG737        02308800
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02308900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG736A  CK NUM        02309000
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02309100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02309200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02309300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02309400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02309500
.ZG736A               ANOP  ,                                           02309600
.*------------------------------------------------------------------    02309700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02309800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02309900
.ZG736A0              AIF   (K'&AUTHCOMP LE 0).ZG736A1  OK              02310000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02310100
.ZG736A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG736A2  OK          02310200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02310300
.ZG736A2              AIF   (K'&ZCVAL LE 0).ZG736A3  OK                 02310400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02310500
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           02310600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02310700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02310800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02310900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02311000
.ZG736A3              ANOP  ,                                           02311100
.*-------------------------------------------------------------------   02311200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02311300
.ZG737                ANOP  ,                                           02311400
&ZTLC                 SETC 'YES'                                        02311500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG746        02311600
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02311700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG737A  CK NUM        02311800
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02311900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02312000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02312100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02312200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02312300
.ZG737A               ANOP  ,                                           02312400
.*----------------------------------------------------------------***   02312500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02312600
                      AIF   (N'&AUTHCOMP LE 1).ZG739A  CK NUM           02312700
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           02312800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02312900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02313000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02313100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02313200
.ZG739A               ANOP  ,                                           02313300
.*-------------------------------------------------------------------   02313400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02313500
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02313600
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02313700
                      AIF   (N'&AUTHCOMP GT 1).ZG739B  MULTI PARMS      02313800
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02313900
.ZG739B               AIF   (K'&AUTHCOMP(1) GT 0).ZG739C                02314000
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02314100
&ZMS                  SETC  ' '         *KRQDA*                         02314200
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02314300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02314400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02314500
.ZG739C               ANOP  ,                                           02314600
.*-------------------------------------------------------------------   02314700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02314800
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG739R  NOT I/O        02314900
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG739R           02315000
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02315100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG739P               02315200
                      AIF   (K'&ZCGPR GT 2).ZG739Q                      02315300
                      AIF   ('&ZCGPR' EQ '0').ZG739Q                    02315400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02315500
                      AIF   (T'&ZCGPR NE 'N').ZG739Q  INVALID REG NAME  02315600
.ZG739P               ANOP  ,                                           02315700
                      AIF   (T'&ZCGPR NE 'N').ZG739R  NON NUMERIC       02315800
                      AIF   ('&ZCGPR' LT '2').ZG739Q                    02315900
                      AIF   ('&ZCGPR' LE '12').ZG739R                   02316000
.ZG739Q               ANOP  ,                                           02316100
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           02316200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02316300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02316400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02316500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02316600
.ZG739R               ANOP  ,                                           02316700
.*----------------------------------------------------------------***   02316800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02316900
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG741A  CK NUM       02317000
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           02317100
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02317200
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02317300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02317400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02317500
.ZG741A               ANOP  ,                                           02317600
.*-------------------------------------------------------------------   02317700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02317800
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02317900
.ZG742A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG743A                  02318000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02318100
.*-------------------------------------------------------------------   02318200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02318300
.ZG743A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG744A            02318400
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02318500
.*-------------------------------------------------------------------   02318600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02318700
.ZG744A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG744C  KEYWORD     02318800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG744B            02318900
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           02319000
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02319100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02319200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02319300
&ZMS                  SETC  '&ZMS "EQUAL"'                              02319400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02319500
                      MNOTE 8,' &ZMS '                                  02319600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02319700
.ZG744B               ANOP  ,                                           02319800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02319900
.ZG744C               ANOP  ,                                           02320000
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02320100
.*-------------------------------------------------------------------   02320200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02320300
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG744D  KEY           02320400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG744D  PARM      02320500
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           02320600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02320700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02320800
&ZMS                  SETC  '&ZMS '                                     02320900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02321000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02321100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02321200
.ZG744D               ANOP  ,                                           02321300
.*------------------------------------------------------------------    02321400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02321500
.ZG746                ANOP  ,                                           02321600
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02321700
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG746E  VALID ARG    02321800
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG746D  OMITTED     02321900
&ZASYSLNDX            SETA  0                                           02322000
.ZG746A               ANOP  ,           POSITIONAL MACRO KEY            02322100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02322200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG746C           02322300
&ZTLC                 SETC 'AUTHCOMPARE'                                02322400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG746A  02322500
.ZG746B               ANOP  ,                                           02322600
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02322700
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      02322800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02322900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02323000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02323100
                      AGO   .ZG746E                                     02323200
.ZG746C               ANOP  ,                                           02323300
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02323400
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           02323500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02323600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02323700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02323800
&ZMS                  SETC  '&ZMS "NO"'                                 02323900
&ZMS                  SETC  '&ZMS OR "YES".'                            02324000
                      MNOTE 8,' &ZMS '                                  02324100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02324200
                      AGO   .ZG746E                                     02324300
.ZG746D               ANOP  ,                                           02324400
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02324500
.ZG746E               ANOP  ,                                           02324600
.*------------------------------------------------------------------    02324700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02324800
.ZG747                ANOP  ,                                           02324900
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02325000
                      AIF   (K'&XLISTCOMPARE GT 0).ZG747E  VALID ARG    02325100
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG747D  OMITTED     02325200
&ZASYSLNDX            SETA  0                                           02325300
.ZG747A               ANOP  ,           POSITIONAL MACRO KEY            02325400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02325500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG747C           02325600
&ZTLC                 SETC 'LISTCOMPARE'                                02325700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG747A  02325800
.ZG747B               ANOP  ,                                           02325900
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02326000
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      02326100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02326200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02326300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02326400
                      AGO   .ZG747E                                     02326500
.ZG747C               ANOP  ,                                           02326600
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02326700
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           02326800
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02326900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02327000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02327100
&ZMS                  SETC  '&ZMS "NO"'                                 02327200
&ZMS                  SETC  '&ZMS OR "YES".'                            02327300
                      MNOTE 8,' &ZMS '                                  02327400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02327500
                      AGO   .ZG747E                                     02327600
.ZG747D               ANOP  ,                                           02327700
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02327800
.ZG747E               ANOP  ,                                           02327900
.*------------------------------------------------------------------    02328000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02328100
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02328200
.*-------------------------------------------------------------------   02328300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02328400
.ZG750                ANOP  ,                                           02328500
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG750A              02328600
&ZTLC                 SETC 'NO'                                         02328700
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG751         02328800
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02328900
                      AIF   (N'&KEYCOMPARE LE 1).ZG750A  CK NUM         02329000
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02329100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02329200
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02329300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02329400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02329500
.ZG750A               ANOP  ,                                           02329600
.*------------------------------------------------------------------    02329700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02329800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02329900
.ZG750A0              AIF   (K'&ENTRYKEY LE 0).ZG750A1  OK              02330000
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02330100
.ZG750A1              AIF   (K'&KEYREQTYPE LE 0).ZG750A2  OK            02330200
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02330300
.ZG750A2              AIF   (K'&KEYRANGEEND LE 0).ZG750A3  OK           02330400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02330500
.ZG750A3              AIF   (K'&ZCVAL LE 0).ZG750A4  OK                 02330600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02330700
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           02330800
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02330900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02331000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02331100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02331200
.ZG750A4              ANOP  ,                                           02331300
.*-------------------------------------------------------------------   02331400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02331500
.ZG751                ANOP  ,                                           02331600
&ZTLC                 SETC 'YES'                                        02331700
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG765         02331800
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02331900
                      AIF   (N'&KEYCOMPARE LE 1).ZG751A  CK NUM         02332000
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02332100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02332200
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02332300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02332400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02332500
.ZG751A               ANOP  ,                                           02332600
.*----------------------------------------------------------------***   02332700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02332800
                      AIF   (N'&ENTRYKEY LE 1).ZG753A  CK NUM           02332900
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           02333000
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02333100
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02333200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02333300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02333400
.ZG753A               ANOP  ,                                           02333500
.*-------------------------------------------------------------------   02333600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02333700
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02333800
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02333900
                      AIF   (N'&ENTRYKEY GT 1).ZG753B  MULTI PARMS      02334000
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02334100
.ZG753B               AIF   (K'&ENTRYKEY(1) GT 0).ZG753C                02334200
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02334300
&ZMS                  SETC  ' '         *KRQDA*                         02334400
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02334500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02334600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02334700
.ZG753C               ANOP  ,                                           02334800
.*-------------------------------------------------------------------   02334900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02335000
                      AIF   (K'&ZXENTRYKEY LE 0).ZG753R  NOT I/O        02335100
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG753R           02335200
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02335300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG753P               02335400
                      AIF   (K'&ZCGPR GT 2).ZG753Q                      02335500
                      AIF   ('&ZCGPR' EQ '0').ZG753Q                    02335600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02335700
                      AIF   (T'&ZCGPR NE 'N').ZG753Q  INVALID REG NAME  02335800
.ZG753P               ANOP  ,                                           02335900
                      AIF   (T'&ZCGPR NE 'N').ZG753R  NON NUMERIC       02336000
                      AIF   ('&ZCGPR' LT '2').ZG753Q                    02336100
                      AIF   ('&ZCGPR' LE '12').ZG753R                   02336200
.ZG753Q               ANOP  ,                                           02336300
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           02336400
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02336500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02336600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02336700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02336800
.ZG753R               ANOP  ,                                           02336900
.*------------------------------------------------------------------    02337000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02337100
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02337200
.*-------------------------------------------------------------------   02337300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02337400
.ZG757                ANOP  ,                                           02337500
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG757A              02337600
&ZTLC                 SETC 'EQUAL'                                      02337700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG758         02337800
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02337900
                      AIF   (N'&KEYREQTYPE LE 1).ZG757A  CK NUM         02338000
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02338100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02338200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02338300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02338400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02338500
.ZG757A               ANOP  ,                                           02338600
.*------------------------------------------------------------------    02338700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02338800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02338900
.ZG757A0              AIF   (K'&KEYRANGEEND LE 0).ZG757A1  OK           02339000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02339100
.ZG757A1              AIF   (K'&ZCVAL LE 0).ZG757A2  OK                 02339200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02339300
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02339400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02339500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02339600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02339700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02339800
.ZG757A2              ANOP  ,                                           02339900
.*-------------------------------------------------------------------   02340000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02340100
.ZG758                ANOP  ,                                           02340200
&ZTLC                 SETC 'LESSOREQUAL'                                02340300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG759         02340400
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02340500
                      AIF   (N'&KEYREQTYPE LE 1).ZG758A  CK NUM         02340600
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02340700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02340800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02340900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02341000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02341100
.ZG758A               ANOP  ,                                           02341200
.*------------------------------------------------------------------    02341300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02341400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02341500
.ZG758A0              AIF   (K'&KEYRANGEEND LE 0).ZG758A1  OK           02341600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02341700
.ZG758A1              AIF   (K'&ZCVAL LE 0).ZG758A2  OK                 02341800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02341900
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02342000
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02342100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02342200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02342300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02342400
.ZG758A2              ANOP  ,                                           02342500
.*-------------------------------------------------------------------   02342600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02342700
.ZG759                ANOP  ,                                           02342800
&ZTLC                 SETC 'GREATEROREQUAL'                             02342900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG760         02343000
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02343100
                      AIF   (N'&KEYREQTYPE LE 1).ZG759A  CK NUM         02343200
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02343300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02343400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02343500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02343600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02343700
.ZG759A               ANOP  ,                                           02343800
.*------------------------------------------------------------------    02343900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02344000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02344100
.ZG759A0              AIF   (K'&KEYRANGEEND LE 0).ZG759A1  OK           02344200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02344300
.ZG759A1              AIF   (K'&ZCVAL LE 0).ZG759A2  OK                 02344400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02344500
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02344600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02344700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02344800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02344900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02345000
.ZG759A2              ANOP  ,                                           02345100
.*-------------------------------------------------------------------   02345200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02345300
.ZG760                ANOP  ,                                           02345400
&ZTLC                 SETC 'RANGE'                                      02345500
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG764         02345600
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02345700
                      AIF   (N'&KEYREQTYPE LE 1).ZG760A  CK NUM         02345800
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02345900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02346000
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02346100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02346200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02346300
.ZG760A               ANOP  ,                                           02346400
.*----------------------------------------------------------------***   02346500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02346600
                      AIF   (N'&KEYRANGEEND LE 1).ZG762A  CK NUM        02346700
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           02346800
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02346900
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02347000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02347100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02347200
.ZG762A               ANOP  ,                                           02347300
.*-------------------------------------------------------------------   02347400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02347500
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02347600
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02347700
                      AIF   (N'&KEYRANGEEND GT 1).ZG762B  MULTI PARMS   02347800
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02347900
.ZG762B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG762C             02348000
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02348100
&ZMS                  SETC  ' '         *KRQDA*                         02348200
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02348300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02348400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02348500
.ZG762C               ANOP  ,                                           02348600
.*-------------------------------------------------------------------   02348700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02348800
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG762R  NOT I/O     02348900
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG762R        02349000
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02349100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG762P               02349200
                      AIF   (K'&ZCGPR GT 2).ZG762Q                      02349300
                      AIF   ('&ZCGPR' EQ '0').ZG762Q                    02349400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02349500
                      AIF   (T'&ZCGPR NE 'N').ZG762Q  INVALID REG NAME  02349600
.ZG762P               ANOP  ,                                           02349700
                      AIF   (T'&ZCGPR NE 'N').ZG762R  NON NUMERIC       02349800
                      AIF   ('&ZCGPR' LT '2').ZG762Q                    02349900
                      AIF   ('&ZCGPR' LE '12').ZG762R                   02350000
.ZG762Q               ANOP  ,                                           02350100
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           02350200
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02350300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02350400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02350500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02350600
.ZG762R               ANOP  ,                                           02350700
.*------------------------------------------------------------------    02350800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02350900
.ZG764                ANOP  ,                                           02351000
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02351100
                      AIF   (K'&XKEYREQTYPE GT 0).ZG764E  VALID ARG     02351200
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG764D  OMITTED      02351300
&ZASYSLNDX            SETA  0                                           02351400
.ZG764A               ANOP  ,           POSITIONAL MACRO KEY            02351500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02351600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG764C           02351700
&ZTLC                 SETC 'KEYREQTYPE'                                 02351800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG764A  02351900
.ZG764B               ANOP  ,                                           02352000
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02352100
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       02352200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02352300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02352400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02352500
                      AGO   .ZG764E                                     02352600
.ZG764C               ANOP  ,                                           02352700
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02352800
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           02352900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02353000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02353100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02353200
&ZMS                  SETC  '&ZMS "EQUAL",'                             02353300
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02353400
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02353500
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02353600
                      MNOTE 8,' &ZMS '                                  02353700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02353800
                      AGO   .ZG764E                                     02353900
.ZG764D               ANOP  ,                                           02354000
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02354100
.ZG764E               ANOP  ,                                           02354200
.*------------------------------------------------------------------    02354300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02354400
.ZG765                ANOP  ,                                           02354500
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02354600
                      AIF   (K'&XKEYCOMPARE GT 0).ZG765E  VALID ARG     02354700
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG765D  OMITTED      02354800
&ZASYSLNDX            SETA  0                                           02354900
.ZG765A               ANOP  ,           POSITIONAL MACRO KEY            02355000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02355100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG765C           02355200
&ZTLC                 SETC 'KEYCOMPARE'                                 02355300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG765A  02355400
.ZG765B               ANOP  ,                                           02355500
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02355600
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       02355700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02355800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02355900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02356000
                      AGO   .ZG765E                                     02356100
.ZG765C               ANOP  ,                                           02356200
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02356300
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           02356400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02356500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02356600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02356700
&ZMS                  SETC  '&ZMS "NO"'                                 02356800
&ZMS                  SETC  '&ZMS OR "YES".'                            02356900
                      MNOTE 8,' &ZMS '                                  02357000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02357100
                      AGO   .ZG765E                                     02357200
.ZG765D               ANOP  ,                                           02357300
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02357400
.ZG765E               ANOP  ,                                           02357500
.*------------------------------------------------------------------    02357600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02357700
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02357800
.*-------------------------------------------------------------------   02357900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02358000
.ZG768                ANOP  ,                                           02358100
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG768A             02358200
&ZTLC                 SETC 'NO'                                         02358300
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG769        02358400
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02358500
                      AIF   (N'&SKEYCOMPARE LE 1).ZG768A  CK NUM        02358600
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02358700
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02358800
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02358900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02359000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02359100
.ZG768A               ANOP  ,                                           02359200
.*------------------------------------------------------------------    02359300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02359400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02359500
.ZG768A0              AIF   (K'&SECONDARYKEY LE 0).ZG768A1  OK          02359600
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02359700
.ZG768A1              AIF   (K'&SKEYREQTYPE LE 0).ZG768A2  OK           02359800
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02359900
.ZG768A2              AIF   (K'&SKEYRANGEEND LE 0).ZG768A3  OK          02360000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02360100
.ZG768A3              AIF   (K'&ZCVAL LE 0).ZG768A4  OK                 02360200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02360300
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           02360400
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02360500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02360600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02360700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02360800
.ZG768A4              ANOP  ,                                           02360900
.*-------------------------------------------------------------------   02361000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02361100
.ZG769                ANOP  ,                                           02361200
&ZTLC                 SETC 'YES'                                        02361300
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG783        02361400
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02361500
                      AIF   (N'&SKEYCOMPARE LE 1).ZG769A  CK NUM        02361600
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02361700
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02361800
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02361900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02362000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02362100
.ZG769A               ANOP  ,                                           02362200
.*----------------------------------------------------------------***   02362300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02362400
                      AIF   (N'&SECONDARYKEY LE 1).ZG771A  CK NUM       02362500
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           02362600
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02362700
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02362800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02362900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02363000
.ZG771A               ANOP  ,                                           02363100
.*-------------------------------------------------------------------   02363200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02363300
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02363400
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02363500
                      AIF   (N'&SECONDARYKEY GT 1).ZG771B  MULTI PARMS  02363600
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02363700
.ZG771B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG771C            02363800
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02363900
&ZMS                  SETC  ' '         *KRQDA*                         02364000
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02364100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02364200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02364300
.ZG771C               ANOP  ,                                           02364400
.*-------------------------------------------------------------------   02364500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02364600
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG771R  NOT I/O    02364700
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG771R       02364800
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02364900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG771P               02365000
                      AIF   (K'&ZCGPR GT 2).ZG771Q                      02365100
                      AIF   ('&ZCGPR' EQ '0').ZG771Q                    02365200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02365300
                      AIF   (T'&ZCGPR NE 'N').ZG771Q  INVALID REG NAME  02365400
.ZG771P               ANOP  ,                                           02365500
                      AIF   (T'&ZCGPR NE 'N').ZG771R  NON NUMERIC       02365600
                      AIF   ('&ZCGPR' LT '2').ZG771Q                    02365700
                      AIF   ('&ZCGPR' LE '12').ZG771R                   02365800
.ZG771Q               ANOP  ,                                           02365900
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           02366000
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02366100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02366200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02366300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02366400
.ZG771R               ANOP  ,                                           02366500
.*------------------------------------------------------------------    02366600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02366700
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02366800
.*-------------------------------------------------------------------   02366900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02367000
.ZG775                ANOP  ,                                           02367100
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG775A             02367200
&ZTLC                 SETC 'EQUAL'                                      02367300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG776        02367400
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02367500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG775A  CK NUM        02367600
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02367700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02367800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02367900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02368000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02368100
.ZG775A               ANOP  ,                                           02368200
.*------------------------------------------------------------------    02368300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02368400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02368500
.ZG775A0              AIF   (K'&SKEYRANGEEND LE 0).ZG775A1  OK          02368600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02368700
.ZG775A1              AIF   (K'&ZCVAL LE 0).ZG775A2  OK                 02368800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02368900
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02369000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02369100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02369200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02369300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02369400
.ZG775A2              ANOP  ,                                           02369500
.*-------------------------------------------------------------------   02369600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02369700
.ZG776                ANOP  ,                                           02369800
&ZTLC                 SETC 'LESSOREQUAL'                                02369900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG777        02370000
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02370100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG776A  CK NUM        02370200
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02370300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02370400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02370500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02370600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02370700
.ZG776A               ANOP  ,                                           02370800
.*------------------------------------------------------------------    02370900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02371000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02371100
.ZG776A0              AIF   (K'&SKEYRANGEEND LE 0).ZG776A1  OK          02371200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02371300
.ZG776A1              AIF   (K'&ZCVAL LE 0).ZG776A2  OK                 02371400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02371500
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02371600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02371700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02371800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02371900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02372000
.ZG776A2              ANOP  ,                                           02372100
.*-------------------------------------------------------------------   02372200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02372300
.ZG777                ANOP  ,                                           02372400
&ZTLC                 SETC 'GREATEROREQUAL'                             02372500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG778        02372600
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02372700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG777A  CK NUM        02372800
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02372900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02373000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02373100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02373200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02373300
.ZG777A               ANOP  ,                                           02373400
.*------------------------------------------------------------------    02373500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02373600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02373700
.ZG777A0              AIF   (K'&SKEYRANGEEND LE 0).ZG777A1  OK          02373800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02373900
.ZG777A1              AIF   (K'&ZCVAL LE 0).ZG777A2  OK                 02374000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02374100
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02374200
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02374300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02374400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02374500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02374600
.ZG777A2              ANOP  ,                                           02374700
.*-------------------------------------------------------------------   02374800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02374900
.ZG778                ANOP  ,                                           02375000
&ZTLC                 SETC 'RANGE'                                      02375100
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG782        02375200
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02375300
                      AIF   (N'&SKEYREQTYPE LE 1).ZG778A  CK NUM        02375400
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02375500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02375600
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02375700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02375800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02375900
.ZG778A               ANOP  ,                                           02376000
.*----------------------------------------------------------------***   02376100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02376200
                      AIF   (N'&SKEYRANGEEND LE 1).ZG780A  CK NUM       02376300
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           02376400
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02376500
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02376600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02376700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02376800
.ZG780A               ANOP  ,                                           02376900
.*-------------------------------------------------------------------   02377000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02377100
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02377200
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02377300
                      AIF   (N'&SKEYRANGEEND GT 1).ZG780B  MULTI PARMS  02377400
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02377500
.ZG780B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG780C            02377600
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02377700
&ZMS                  SETC  ' '         *KRQDA*                         02377800
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02377900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02378000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02378100
.ZG780C               ANOP  ,                                           02378200
.*-------------------------------------------------------------------   02378300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02378400
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG780R  NOT I/O    02378500
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG780R       02378600
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02378700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG780P               02378800
                      AIF   (K'&ZCGPR GT 2).ZG780Q                      02378900
                      AIF   ('&ZCGPR' EQ '0').ZG780Q                    02379000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02379100
                      AIF   (T'&ZCGPR NE 'N').ZG780Q  INVALID REG NAME  02379200
.ZG780P               ANOP  ,                                           02379300
                      AIF   (T'&ZCGPR NE 'N').ZG780R  NON NUMERIC       02379400
                      AIF   ('&ZCGPR' LT '2').ZG780Q                    02379500
                      AIF   ('&ZCGPR' LE '12').ZG780R                   02379600
.ZG780Q               ANOP  ,                                           02379700
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           02379800
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02379900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02380000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02380100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02380200
.ZG780R               ANOP  ,                                           02380300
.*------------------------------------------------------------------    02380400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02380500
.ZG782                ANOP  ,                                           02380600
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02380700
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG782E  VALID ARG    02380800
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG782D  OMITTED     02380900
&ZASYSLNDX            SETA  0                                           02381000
.ZG782A               ANOP  ,           POSITIONAL MACRO KEY            02381100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02381200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG782C           02381300
&ZTLC                 SETC 'SKEYREQTYPE'                                02381400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG782A  02381500
.ZG782B               ANOP  ,                                           02381600
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02381700
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      02381800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02381900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02382000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02382100
                      AGO   .ZG782E                                     02382200
.ZG782C               ANOP  ,                                           02382300
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02382400
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           02382500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02382600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02382700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02382800
&ZMS                  SETC  '&ZMS "EQUAL",'                             02382900
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02383000
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02383100
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02383200
                      MNOTE 8,' &ZMS '                                  02383300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02383400
                      AGO   .ZG782E                                     02383500
.ZG782D               ANOP  ,                                           02383600
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02383700
.ZG782E               ANOP  ,                                           02383800
.*------------------------------------------------------------------    02383900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02384000
.ZG783                ANOP  ,                                           02384100
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02384200
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG783E  VALID ARG    02384300
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG783D  OMITTED     02384400
&ZASYSLNDX            SETA  0                                           02384500
.ZG783A               ANOP  ,           POSITIONAL MACRO KEY            02384600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02384700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG783C           02384800
&ZTLC                 SETC 'SKEYCOMPARE'                                02384900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG783A  02385000
.ZG783B               ANOP  ,                                           02385100
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02385200
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      02385300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02385400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02385500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02385600
                      AGO   .ZG783E                                     02385700
.ZG783C               ANOP  ,                                           02385800
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02385900
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           02386000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02386100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02386200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02386300
&ZMS                  SETC  '&ZMS "NO"'                                 02386400
&ZMS                  SETC  '&ZMS OR "YES".'                            02386500
                      MNOTE 8,' &ZMS '                                  02386600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02386700
                      AGO   .ZG783E                                     02386800
.ZG783D               ANOP  ,                                           02386900
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02387000
.ZG783E               ANOP  ,                                           02387100
.*------------------------------------------------------------------    02387200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02387300
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02387400
.*-------------------------------------------------------------------   02387500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02387600
.ZG786                ANOP  ,                                           02387700
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG786A             02387800
&ZTLC                 SETC 'NO'                                         02387900
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG787        02388000
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02388100
                      AIF   (N'&VERSCOMPARE LE 1).ZG786A  CK NUM        02388200
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02388300
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02388400
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02388500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02388600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02388700
.ZG786A               ANOP  ,                                           02388800
.*------------------------------------------------------------------    02388900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02389000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02389100
.ZG786A0              AIF   (K'&VERSCOMP LE 0).ZG786A1  OK              02389200
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02389300
.ZG786A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG786A2  OK          02389400
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02389500
.ZG786A2              AIF   (K'&ZCVAL LE 0).ZG786A3  OK                 02389600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02389700
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           02389800
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02389900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02390000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02390100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02390200
.ZG786A3              ANOP  ,                                           02390300
.*-------------------------------------------------------------------   02390400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02390500
.ZG787                ANOP  ,                                           02390600
&ZTLC                 SETC 'YES'                                        02390700
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG796        02390800
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02390900
                      AIF   (N'&VERSCOMPARE LE 1).ZG787A  CK NUM        02391000
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02391100
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02391200
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02391300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02391400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02391500
.ZG787A               ANOP  ,                                           02391600
.*----------------------------------------------------------------***   02391700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02391800
                      AIF   (N'&VERSCOMP LE 1).ZG789A  CK NUM           02391900
&ZMS                  SETC  '"VERSCOMP='        *KPOSA* MNOTE           02392000
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02392100
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02392200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02392300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02392400
.ZG789A               ANOP  ,                                           02392500
.*-------------------------------------------------------------------   02392600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02392700
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02392800
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02392900
                      AIF   (N'&VERSCOMP GT 1).ZG789B  MULTI PARMS      02393000
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02393100
.ZG789B               AIF   (K'&VERSCOMP(1) GT 0).ZG789C                02393200
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02393300
&ZMS                  SETC  ' '         *KRQDA*                         02393400
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               02393500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02393600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02393700
.ZG789C               ANOP  ,                                           02393800
.*-------------------------------------------------------------------   02393900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02394000
                      AIF   (K'&ZXVERSCOMP LE 0).ZG789R  NOT I/O        02394100
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG789R           02394200
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02394300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG789P               02394400
                      AIF   (K'&ZCGPR GT 2).ZG789Q                      02394500
                      AIF   ('&ZCGPR' EQ '0').ZG789Q                    02394600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02394700
                      AIF   (T'&ZCGPR NE 'N').ZG789Q  INVALID REG NAME  02394800
.ZG789P               ANOP  ,                                           02394900
                      AIF   (T'&ZCGPR NE 'N').ZG789R  NON NUMERIC       02395000
                      AIF   ('&ZCGPR' LT '2').ZG789Q                    02395100
                      AIF   ('&ZCGPR' LE '12').ZG789R                   02395200
.ZG789Q               ANOP  ,                                           02395300
&ZMS                  SETC  '"VERSCOMP='        *KGPRA* MNOTE           02395400
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02395500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02395600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02395700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02395800
.ZG789R               ANOP  ,                                           02395900
.*----------------------------------------------------------------***   02396000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02396100
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG791A  CK NUM       02396200
&ZMS                  SETC  '"VERSCOMPTYPE='    *KPOSA* MNOTE           02396300
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02396400
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02396500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02396600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02396700
.ZG791A               ANOP  ,                                           02396800
.*-------------------------------------------------------------------   02396900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02397000
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02397100
.ZG792A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG793A                  02397200
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02397300
.*-------------------------------------------------------------------   02397400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02397500
.ZG793A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG794A            02397600
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02397700
.*-------------------------------------------------------------------   02397800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02397900
.ZG794A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG794C  KEYWORD     02398000
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG794B            02398100
&ZMS                  SETC  '"VERSCOMPTYPE='    *KUKWA* MNOTE           02398200
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02398300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02398400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02398500
&ZMS                  SETC  '&ZMS "EQUAL"'                              02398600
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02398700
                      MNOTE 8,' &ZMS '                                  02398800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02398900
.ZG794B               ANOP  ,                                           02399000
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02399100
.ZG794C               ANOP  ,                                           02399200
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02399300
.*-------------------------------------------------------------------   02399400
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02399500
                      AIF   (K'&VERSCOMP(1) GT 0).ZG794D  KEY           02399600
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG794D  PARM      02399700
&ZMS                  SETC  '"VERSCOMPTYPE'     *KDEPA* MNOTE           02399800
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02399900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02400000
&ZMS                  SETC  '&ZMS '                                     02400100
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02400200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02400300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02400400
.ZG794D               ANOP  ,                                           02400500
.*------------------------------------------------------------------    02400600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02400700
.ZG796                ANOP  ,                                           02400800
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02400900
                      AIF   (K'&XVERSCOMPARE GT 0).ZG796E  VALID ARG    02401000
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG796D  OMITTED     02401100
&ZASYSLNDX            SETA  0                                           02401200
.ZG796A               ANOP  ,           POSITIONAL MACRO KEY            02401300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02401400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG796C           02401500
&ZTLC                 SETC 'VERSCOMPARE'                                02401600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG796A  02401700
.ZG796B               ANOP  ,                                           02401800
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02401900
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'  *KOPTA* MNOTE      02402000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02402100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02402200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02402300
                      AGO   .ZG796E                                     02402400
.ZG796C               ANOP  ,                                           02402500
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02402600
&ZMS                  SETC  '"VERSCOMPARE='     *KUKWA* MNOTE           02402700
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02402800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02402900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02403000
&ZMS                  SETC  '&ZMS "NO"'                                 02403100
&ZMS                  SETC  '&ZMS OR "YES".'                            02403200
                      MNOTE 8,' &ZMS '                                  02403300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02403400
                      AGO   .ZG796E                                     02403500
.ZG796D               ANOP  ,                                           02403600
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02403700
.ZG796E               ANOP  ,                                           02403800
.*----------------------------------------------------------------***   02403900
.***AG.KMEKY01 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     02404000
&XDATAREA3            SETC  ''          INITIALIZE XVARIABLE            02404100
                      AIF   (K'&BUFLIST LE 0).ZG798C                    02404200
&ZXDATAREA3           SETC  'OUTPUT'    SET IN/OUTPUT                   02404300
&XDATAREA3            SETC  'BUFLIST'   SET XVARIABLE                   02404400
&ZXBUFLIST            SETC  'OUTPUT'    SET IN/OUTPUT                   02404500
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      02404600
                      AIF   (N'&BUFLIST GT 1).ZG798A                    02404700
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              02404800
.ZG798A               AIF   (N'&BUFLIST LE 1).ZG798B  CK NUM            02404900
&ZMS                  SETC  '"BUFLIST='         *KPOSA* MNOTE           02405000
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02405100
&ZMS                  SETC  '&ZMS "BUFLIST"'                            02405200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02405300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02405400
.ZG798B               AIF   (K'&XBUFLIST GT 0).ZG798C  ONE PARM         02405500
&ZXDATAREA3           SETC  ''          RESET IN/OUTPUT                 02405600
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02405700
&ZMS                  SETC  ' '         *KRQDA*                         02405800
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                02405900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02406000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02406100
.ZG798C               ANOP  ,                                           02406200
.*----------------------------------------------------------------***   02406300
.***AG.KMEKY02 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     02406400
                      AIF   (K'&BUFFER LE 0).ZG823D  NO ME KEY          02406500
                      AIF   (N'&BUFFER LE 1).ZG823A  CK NUM             02406600
&ZMS                  SETC  '"BUFFER='  *KPOSA* MNOTE                   02406700
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02406800
&ZMS                  SETC  '&ZMS "BUFFER"'                             02406900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02407000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02407100
.ZG823A               AIF   (K'&XDATAREA3 LE 0).ZG823B                  02407200
&ZMS                  SETC  '"BUFFER'   *KMEKA* MNOTE                   02407300
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02407400
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02407500
&ZMS                  SETC  '&ZMS "&XDATAREA3"'                         02407600
                      MNOTE 8,' &ZMS KEY.'                              02407700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02407800
                      AGO   .ZG823D                                     02407900
.*                                                                      02408000
.ZG823B               ANOP  ,                                           02408100
&ZXDATAREA3           SETC  'OUTPUT'    SET IN/OUTPUT                   02408200
&XDATAREA3            SETC  'BUFFER'    SET XVARIABLE                   02408300
&ZXBUFFER             SETC  'OUTPUT'    SET IN/OUTPUT                   02408400
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      02408500
                      AIF   (N'&BUFFER GT 1).ZG823C                     02408600
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              02408700
.ZG823C               AIF   (K'&XBUFFER GT 0).ZG823D  ONE PARM          02408800
&ZXDATAREA3           SETC  ''          RESET IN/OUTPUT                 02408900
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 02409000
&ZMS                  SETC  ' '         *KRQDA*                         02409100
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 02409200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02409300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02409400
.ZG823D               ANOP  ,                                           02409500
.*------------------------------------------------------------------    02409600
.***AG.KME4Y09 NAME, RQD OUTPUT, ME KEYS -CHECK IF KEY ENTERED          02409700
                      AIF   (K'&XDATAREA3 GT 0).ZG835B                  02409800
&ZXDATAREA3           SETC  ''          RESET IN/OUTPUT                 02409900
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02410000
&XDATAREA3            SETC  ''          ENSURE NULL                     02410100
&XBUFLIST             SETC  ''          ENSURE NULL                     02410200
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       02410300
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         02410400
&ZMS                  SETC  '&ZMS REQUIRED:'                            02410500
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            02410600
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           02410700
                      MNOTE 8,' &ZMS '                                  02410800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02410900
.ZG835B               ANOP  ,                                           02411000
.*-------------------------------------------------------------------   02411100
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          02411200
.ZG798                AIF   ('&XDATAREA3' NE 'BUFLIST').ZG823           02411300
.*-------------------------------------------------------------------   02411400
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               02411500
&ZCVAL                SETC ''           ERROR KEY FIELD                 02411600
.ZG798I0              AIF   (K'&BUFSIZE LE 0).ZG798I1                   02411700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          02411800
.ZG798I1              AIF   (K'&ZCVAL LE 0).ZG798J  KEY                 02411900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02412000
&ZMS                  SETC  '"BUFLIST'  *KMEIA* MNOTE                   02412100
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           02412200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02412300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02412400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02412500
.ZG798J               ANOP  ,                                           02412600
.*-------------------------------------------------------------------   02412700
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                02412800
                      AIF   (K'&ZXBUFLIST LE 0).ZG798R  NOT I/O         02412900
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG798R            02413000
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                02413100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG798P               02413200
                      AIF   (K'&ZCGPR GT 2).ZG798Q                      02413300
                      AIF   ('&ZCGPR' EQ '0').ZG798Q                    02413400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02413500
                      AIF   (T'&ZCGPR NE 'N').ZG798Q  INVALID REG NAME  02413600
.ZG798P               ANOP  ,                                           02413700
                      AIF   (T'&ZCGPR NE 'N').ZG798R  NON NUMERIC       02413800
                      AIF   ('&ZCGPR' LT '2').ZG798Q                    02413900
                      AIF   ('&ZCGPR' LE '12').ZG798R                   02414000
.ZG798Q               ANOP  ,                                           02414100
&ZMS                  SETC  '"BUFLIST='         *KGPRA* MNOTE           02414200
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02414300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02414400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02414500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02414600
.ZG798R               ANOP  ,                                           02414700
.*------------------------------------------------------------------    02414800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02414900
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            02415000
.*-------------------------------------------------------------------   02415100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02415200
.ZG801                ANOP  ,                                           02415300
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG801A             02415400
&ZTLC                 SETC 'VIRTUAL'                                    02415500
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG813        02415600
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     02415700
                      AIF   (N'&BUFADDRTYPE LE 1).ZG801A  CK NUM        02415800
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           02415900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02416000
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02416100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02416200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02416300
.ZG801A               ANOP  ,                                           02416400
.*------------------------------------------------------------------    02416500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02416600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02416700
.ZG801A0              AIF   (K'&BUFADDRSIZE LE 0).ZG801A1  OK           02416800
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     02416900
.ZG801A1              AIF   (K'&ZCVAL LE 0).ZG801A2  OK                 02417000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02417100
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           02417200
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02417300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02417400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02417500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02417600
.ZG801A2              ANOP  ,                                           02417700
.*------------------------------------------------------------------    02417800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02417900
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02418000
.*-------------------------------------------------------------------   02418100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02418200
.ZG804                ANOP  ,                                           02418300
                      AIF   (K'&PAGEABLE(1) LE 0).ZG804A                02418400
&ZTLC                 SETC 'YES'                                        02418500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG808           02418600
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02418700
                      AIF   (N'&PAGEABLE LE 1).ZG804A  CK NUM           02418800
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02418900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02419000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02419100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02419200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02419300
.ZG804A               ANOP  ,                                           02419400
.*----------------------------------------------------------------***   02419500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02419600
                      AIF   (N'&BUFSTGKEY LE 1).ZG806A  CK NUM          02419700
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           02419800
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02419900
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02420000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02420100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02420200
.ZG806A               ANOP  ,                                           02420300
.*-------------------------------------------------------------------   02420400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02420500
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02420600
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02420700
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG806B  PARM         02420800
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02420900
                      AIF   (N'&BUFSTGKEY GT 1).ZG806B  MULTI PARMS     02421000
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02421100
.ZG806B               ANOP  ,                                           02421200
.*-------------------------------------------------------------------   02421300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02421400
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG806R  NOT I/O       02421500
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG806R                  02421600
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG806R          02421700
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02421800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG806P               02421900
                      AIF   (K'&ZCGPR GT 2).ZG806Q                      02422000
                      AIF   ('&ZCGPR' EQ '0').ZG806Q                    02422100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02422200
                      AIF   (T'&ZCGPR NE 'N').ZG806Q  INVALID REG NAME  02422300
.ZG806P               ANOP  ,                                           02422400
                      AIF   (T'&ZCGPR NE 'N').ZG806R  NON NUMERIC       02422500
                      AIF   ('&ZCGPR' LT '2').ZG806Q                    02422600
                      AIF   ('&ZCGPR' LE '12').ZG806R                   02422700
.ZG806Q               ANOP  ,                                           02422800
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           02422900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02423000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02423100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02423200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02423300
.ZG806R               ANOP  ,                                           02423400
.*-------------------------------------------------------------------   02423500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02423600
.ZG808                ANOP  ,                                           02423700
&ZTLC                 SETC 'NO'                                         02423800
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG809           02423900
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02424000
                      AIF   (N'&PAGEABLE LE 1).ZG808A  CK NUM           02424100
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02424200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02424300
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02424400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02424500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02424600
.ZG808A               ANOP  ,                                           02424700
.*------------------------------------------------------------------    02424800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02424900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02425000
.ZG808A0              AIF   (K'&BUFSTGKEY LE 0).ZG808A1  OK             02425100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02425200
.ZG808A1              AIF   (K'&ZCVAL LE 0).ZG808A2  OK                 02425300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02425400
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           02425500
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02425600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02425700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02425800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02425900
.ZG808A2              ANOP  ,                                           02426000
.*------------------------------------------------------------------    02426100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02426200
.ZG809                ANOP  ,                                           02426300
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02426400
                      AIF   (K'&XPAGEABLE GT 0).ZG809E  VALID ARG       02426500
                      AIF   (T'&PAGEABLE EQ 'O').ZG809D  OMITTED        02426600
&ZASYSLNDX            SETA  0                                           02426700
.ZG809A               ANOP  ,           POSITIONAL MACRO KEY            02426800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02426900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG809C           02427000
&ZTLC                 SETC 'PAGEABLE'                                   02427100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG809A  02427200
.ZG809B               ANOP  ,                                           02427300
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02427400
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         02427500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02427600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02427700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02427800
                      AGO   .ZG809E                                     02427900
.ZG809C               ANOP  ,                                           02428000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02428100
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           02428200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02428300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02428400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02428500
&ZMS                  SETC  '&ZMS "YES"'                                02428600
&ZMS                  SETC  '&ZMS OR "NO".'                             02428700
                      MNOTE 8,' &ZMS '                                  02428800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02428900
                      AGO   .ZG809E                                     02429000
.ZG809D               ANOP  ,                                           02429100
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02429200
.ZG809E               ANOP  ,                                           02429300
.*----------------------------------------------------------------***   02429400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02429500
                      AIF   (N'&BUFALET LE 1).ZG811A  CK NUM            02429600
&ZMS                  SETC  '"BUFALET='         *KPOSA* MNOTE           02429700
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02429800
&ZMS                  SETC  '&ZMS "BUFALET"'                            02429900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02430000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02430100
.ZG811A               ANOP  ,                                           02430200
.*-------------------------------------------------------------------   02430300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02430400
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   02430500
&XBUFALET             SETC  'NO_BUFALET'                                02430600
                      AIF   (K'&BUFALET(1) LE 0).ZG811B  PARM           02430700
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           02430800
                      AIF   (N'&BUFALET GT 1).ZG811B  MULTI PARMS       02430900
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   02431000
.ZG811B               ANOP  ,                                           02431100
.*-------------------------------------------------------------------   02431200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02431300
                      AIF   (K'&ZXBUFALET LE 0).ZG811R  NOT I/O         02431400
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG811R                     02431500
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG811R            02431600
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                02431700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG811P               02431800
                      AIF   (K'&ZCGPR GT 2).ZG811Q                      02431900
                      AIF   ('&ZCGPR' EQ '0').ZG811Q                    02432000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02432100
                      AIF   (T'&ZCGPR NE 'N').ZG811Q  INVALID REG NAME  02432200
.ZG811P               ANOP  ,                                           02432300
                      AIF   (T'&ZCGPR NE 'N').ZG811R  NON NUMERIC       02432400
                      AIF   ('&ZCGPR' LT '2').ZG811Q                    02432500
                      AIF   ('&ZCGPR' LE '12').ZG811R                   02432600
.ZG811Q               ANOP  ,                                           02432700
&ZMS                  SETC  '"BUFALET='         *KGPRA* MNOTE           02432800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02432900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02433000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02433100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02433200
.ZG811R               ANOP  ,                                           02433300
.*-------------------------------------------------------------------   02433400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02433500
.ZG813                ANOP  ,                                           02433600
&ZTLC                 SETC 'REAL'                                       02433700
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG819        02433800
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     02433900
                      AIF   (N'&BUFADDRTYPE LE 1).ZG813A  CK NUM        02434000
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           02434100
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02434200
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02434300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02434400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02434500
.ZG813A               ANOP  ,                                           02434600
.*------------------------------------------------------------------    02434700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02434800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02434900
.ZG813A0              AIF   (K'&PAGEABLE LE 0).ZG813A1  OK              02435000
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      02435100
.ZG813A1              AIF   (K'&BUFSTGKEY LE 0).ZG813A2  OK             02435200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02435300
.ZG813A2              AIF   (K'&BUFALET LE 0).ZG813A3  OK               02435400
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      02435500
.ZG813A3              AIF   (K'&ZCVAL LE 0).ZG813A4  OK                 02435600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02435700
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           02435800
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02435900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02436000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02436100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02436200
.ZG813A4              ANOP  ,                                           02436300
.*------------------------------------------------------------------    02436400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02436500
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            02436600
.*-------------------------------------------------------------------   02436700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02436800
.ZG816                ANOP  ,                                           02436900
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG816A             02437000
&ZTLC                 SETC '31'                                         02437100
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG817        02437200
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     02437300
                      AIF   (N'&BUFADDRSIZE LE 1).ZG816A  CK NUM        02437400
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           02437500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02437600
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02437700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02437800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02437900
.ZG816A               ANOP  ,                                           02438000
.*-------------------------------------------------------------------   02438100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02438200
.ZG817                ANOP  ,                                           02438300
&ZTLC                 SETC '64'                                         02438400
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG818        02438500
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     02438600
                      AIF   (N'&BUFADDRSIZE LE 1).ZG817A  CK NUM        02438700
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           02438800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02438900
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02439000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02439100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02439200
.ZG817A               ANOP  ,                                           02439300
.*------------------------------------------------------------------    02439400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02439500
.ZG818                ANOP  ,                                           02439600
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   02439700
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG818E  VALID ARG    02439800
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG818D  OMITTED     02439900
&ZASYSLNDX            SETA  0                                           02440000
.ZG818A               ANOP  ,           POSITIONAL MACRO KEY            02440100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02440200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG818C           02440300
&ZTLC                 SETC 'BUFADDRSIZE'                                02440400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG818A  02440500
.ZG818B               ANOP  ,                                           02440600
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02440700
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE      02440800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02440900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02441000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02441100
                      AGO   .ZG818E                                     02441200
.ZG818C               ANOP  ,                                           02441300
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02441400
&ZMS                  SETC  '"BUFADDRSIZE='     *KUKWA* MNOTE           02441500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02441600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02441700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02441800
&ZMS                  SETC  '&ZMS "31"'                                 02441900
&ZMS                  SETC  '&ZMS OR "64".'                             02442000
                      MNOTE 8,' &ZMS '                                  02442100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02442200
                      AGO   .ZG818E                                     02442300
.ZG818D               ANOP  ,                                           02442400
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             02442500
.ZG818E               ANOP  ,                                           02442600
.*------------------------------------------------------------------    02442700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02442800
.ZG819                ANOP  ,                                           02442900
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02443000
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG819E  VALID ARG    02443100
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG819D  OMITTED     02443200
&ZASYSLNDX            SETA  0                                           02443300
.ZG819A               ANOP  ,           POSITIONAL MACRO KEY            02443400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02443500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG819C           02443600
&ZTLC                 SETC 'BUFADDRTYPE'                                02443700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG819A  02443800
.ZG819B               ANOP  ,                                           02443900
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02444000
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE      02444100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02444200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02444300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02444400
                      AGO   .ZG819E                                     02444500
.ZG819C               ANOP  ,                                           02444600
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02444700
&ZMS                  SETC  '"BUFADDRTYPE='     *KUKWA* MNOTE           02444800
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02444900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02445000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02445100
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            02445200
&ZMS                  SETC  '&ZMS OR "REAL".'                           02445300
                      MNOTE 8,' &ZMS '                                  02445400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02445500
                      AGO   .ZG819E                                     02445600
.ZG819D               ANOP  ,                                           02445700
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             02445800
.ZG819E               ANOP  ,                                           02445900
.*----------------------------------------------------------------***   02446000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02446100
                      AIF   (N'&BUFNUM LE 1).ZG821A  CK NUM             02446200
&ZMS                  SETC  '"BUFNUM='  *KPOSA* MNOTE                   02446300
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02446400
&ZMS                  SETC  '&ZMS "BUFNUM"'                             02446500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02446600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02446700
.ZG821A               ANOP  ,                                           02446800
.*-------------------------------------------------------------------   02446900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02447000
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   02447100
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           02447200
                      AIF   (N'&BUFNUM GT 1).ZG821B  MULTI PARMS        02447300
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   02447400
.ZG821B               AIF   (K'&BUFNUM(1) GT 0).ZG821C                  02447500
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 02447600
&ZMS                  SETC  ' '         *KRQDA*                         02447700
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 02447800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02447900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02448000
.ZG821C               ANOP  ,                                           02448100
.*-------------------------------------------------------------------   02448200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02448300
                      AIF   (K'&ZXBUFNUM LE 0).ZG821R  NOT I/O          02448400
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG821R             02448500
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  02448600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG821P               02448700
                      AIF   (K'&ZCGPR GT 2).ZG821Q                      02448800
                      AIF   ('&ZCGPR' EQ '0').ZG821Q                    02448900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02449000
                      AIF   (T'&ZCGPR NE 'N').ZG821Q  INVALID REG NAME  02449100
.ZG821P               ANOP  ,                                           02449200
                      AIF   (T'&ZCGPR NE 'N').ZG821R  NON NUMERIC       02449300
                      AIF   ('&ZCGPR' LT '2').ZG821Q                    02449400
                      AIF   ('&ZCGPR' LE '12').ZG821R                   02449500
.ZG821Q               ANOP  ,                                           02449600
&ZMS                  SETC  '"BUFNUM='  *KGPRA* MNOTE                   02449700
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02449800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02449900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02450000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02450100
.ZG821R               ANOP  ,                                           02450200
.*-------------------------------------------------------------------   02450300
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          02450400
.ZG823                AIF   ('&XDATAREA3' NE 'BUFFER').ZG835            02450500
.*-------------------------------------------------------------------   02450600
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               02450700
&ZCVAL                SETC ''           ERROR KEY FIELD                 02450800
.ZG823I0              AIF   (K'&BUFADDRTYPE LE 0).ZG823I1               02450900
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         02451000
.ZG823I1              AIF   (K'&BUFALET LE 0).ZG823I2                   02451100
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          02451200
.ZG823I2              AIF   (K'&BUFADDRSIZE LE 0).ZG823I3               02451300
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         02451400
.ZG823I3              AIF   (K'&BUFNUM LE 0).ZG823I4                    02451500
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          02451600
.ZG823I4              AIF   (K'&ZCVAL LE 0).ZG823J  KEY                 02451700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02451800
&ZMS                  SETC  '"BUFFER'   *KMEIA* MNOTE                   02451900
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02452000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02452100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02452200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02452300
.ZG823J               ANOP  ,                                           02452400
.*-------------------------------------------------------------------   02452500
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                02452600
                      AIF   (K'&ZXBUFFER LE 0).ZG823R  NOT I/O          02452700
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG823R             02452800
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  02452900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG823P               02453000
                      AIF   (K'&ZCGPR GT 2).ZG823Q                      02453100
                      AIF   ('&ZCGPR' EQ '0').ZG823Q                    02453200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02453300
                      AIF   (T'&ZCGPR NE 'N').ZG823Q  INVALID REG NAME  02453400
.ZG823P               ANOP  ,                                           02453500
                      AIF   (T'&ZCGPR NE 'N').ZG823R  NON NUMERIC       02453600
                      AIF   ('&ZCGPR' LT '2').ZG823Q                    02453700
                      AIF   ('&ZCGPR' LE '12').ZG823R                   02453800
.ZG823Q               ANOP  ,                                           02453900
&ZMS                  SETC  '"BUFFER='  *KGPRA* MNOTE                   02454000
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02454100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02454200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02454300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02454400
.ZG823R               ANOP  ,                                           02454500
.*------------------------------------------------------------------    02454600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02454700
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02454800
.*-------------------------------------------------------------------   02454900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02455000
.ZG826                ANOP  ,                                           02455100
                      AIF   (K'&PAGEABLE(1) LE 0).ZG826A                02455200
&ZTLC                 SETC 'YES'                                        02455300
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG830           02455400
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02455500
                      AIF   (N'&PAGEABLE LE 1).ZG826A  CK NUM           02455600
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02455700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02455800
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02455900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02456000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02456100
.ZG826A               ANOP  ,                                           02456200
.*----------------------------------------------------------------***   02456300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02456400
                      AIF   (N'&BUFSTGKEY LE 1).ZG828A  CK NUM          02456500
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           02456600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02456700
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02456800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02456900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02457000
.ZG828A               ANOP  ,                                           02457100
.*-------------------------------------------------------------------   02457200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02457300
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02457400
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02457500
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG828B  PARM         02457600
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02457700
                      AIF   (N'&BUFSTGKEY GT 1).ZG828B  MULTI PARMS     02457800
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02457900
.ZG828B               ANOP  ,                                           02458000
.*-------------------------------------------------------------------   02458100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02458200
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG828R  NOT I/O       02458300
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG828R                  02458400
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG828R          02458500
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02458600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG828P               02458700
                      AIF   (K'&ZCGPR GT 2).ZG828Q                      02458800
                      AIF   ('&ZCGPR' EQ '0').ZG828Q                    02458900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02459000
                      AIF   (T'&ZCGPR NE 'N').ZG828Q  INVALID REG NAME  02459100
.ZG828P               ANOP  ,                                           02459200
                      AIF   (T'&ZCGPR NE 'N').ZG828R  NON NUMERIC       02459300
                      AIF   ('&ZCGPR' LT '2').ZG828Q                    02459400
                      AIF   ('&ZCGPR' LE '12').ZG828R                   02459500
.ZG828Q               ANOP  ,                                           02459600
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           02459700
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02459800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02459900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02460000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02460100
.ZG828R               ANOP  ,                                           02460200
.*-------------------------------------------------------------------   02460300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02460400
.ZG830                ANOP  ,                                           02460500
&ZTLC                 SETC 'NO'                                         02460600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG831           02460700
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02460800
                      AIF   (N'&PAGEABLE LE 1).ZG830A  CK NUM           02460900
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02461000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02461100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02461200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02461300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02461400
.ZG830A               ANOP  ,                                           02461500
.*------------------------------------------------------------------    02461600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02461700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02461800
.ZG830A0              AIF   (K'&BUFSTGKEY LE 0).ZG830A1  OK             02461900
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02462000
.ZG830A1              AIF   (K'&ZCVAL LE 0).ZG830A2  OK                 02462100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02462200
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           02462300
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02462400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02462500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02462600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02462700
.ZG830A2              ANOP  ,                                           02462800
.*------------------------------------------------------------------    02462900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02463000
.ZG831                ANOP  ,                                           02463100
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02463200
                      AIF   (K'&XPAGEABLE GT 0).ZG831E  VALID ARG       02463300
                      AIF   (T'&PAGEABLE EQ 'O').ZG831D  OMITTED        02463400
&ZASYSLNDX            SETA  0                                           02463500
.ZG831A               ANOP  ,           POSITIONAL MACRO KEY            02463600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02463700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG831C           02463800
&ZTLC                 SETC 'PAGEABLE'                                   02463900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG831A  02464000
.ZG831B               ANOP  ,                                           02464100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02464200
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         02464300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02464400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02464500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02464600
                      AGO   .ZG831E                                     02464700
.ZG831C               ANOP  ,                                           02464800
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02464900
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           02465000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02465100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02465200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02465300
&ZMS                  SETC  '&ZMS "YES"'                                02465400
&ZMS                  SETC  '&ZMS OR "NO".'                             02465500
                      MNOTE 8,' &ZMS '                                  02465600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02465700
                      AGO   .ZG831E                                     02465800
.ZG831D               ANOP  ,                                           02465900
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02466000
.ZG831E               ANOP  ,                                           02466100
.*----------------------------------------------------------------***   02466200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02466300
                      AIF   (N'&BUFSIZE LE 1).ZG833A  CK NUM            02466400
&ZMS                  SETC  '"BUFSIZE='         *KPOSA* MNOTE           02466500
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02466600
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            02466700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02466800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02466900
.ZG833A               ANOP  ,                                           02467000
.*-------------------------------------------------------------------   02467100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02467200
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   02467300
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           02467400
                      AIF   (N'&BUFSIZE GT 1).ZG833B  MULTI PARMS       02467500
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   02467600
.ZG833B               AIF   (K'&BUFSIZE(1) GT 0).ZG833C                 02467700
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 02467800
&ZMS                  SETC  ' '         *KRQDA*                         02467900
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                02468000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02468100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02468200
.ZG833C               ANOP  ,                                           02468300
.*-------------------------------------------------------------------   02468400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02468500
                      AIF   (K'&ZXBUFSIZE LE 0).ZG833R  NOT I/O         02468600
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG833R            02468700
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                02468800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG833P               02468900
                      AIF   (K'&ZCGPR GT 2).ZG833Q                      02469000
                      AIF   ('&ZCGPR' EQ '0').ZG833Q                    02469100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02469200
                      AIF   (T'&ZCGPR NE 'N').ZG833Q  INVALID REG NAME  02469300
.ZG833P               ANOP  ,                                           02469400
                      AIF   (T'&ZCGPR NE 'N').ZG833R  NON NUMERIC       02469500
                      AIF   ('&ZCGPR' LT '2').ZG833Q                    02469600
                      AIF   ('&ZCGPR' LE '12').ZG833R                   02469700
.ZG833Q               ANOP  ,                                           02469800
&ZMS                  SETC  '"BUFSIZE='         *KGPRA* MNOTE           02469900
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02470000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02470100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02470200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02470300
.ZG833R               ANOP  ,                                           02470400
.*-------------------------------------------------------------------   02470500
.***AG.KMEKY15 NAME, RQD OUTPUT, ME KEYS -END                           02470600
.ZG835                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     02470700
.*-------------------------------------------------------------------   02470800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02470900
.ZG836                ANOP  ,                                           02471000
&ZTLC                 SETC 'DELETE_MULT'                                02471100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG911            02471200
&XREQUEST             SETC  'DELETE_MULT'       SET KEYWORD             02471300
                      AIF   (N'&REQUEST LE 1).ZG836A  CK NUM            02471400
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           02471500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02471600
&ZMS                  SETC  '&ZMS "REQUEST"'                            02471700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02471800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02471900
.ZG836A               ANOP  ,                                           02472000
.*------------------------------------------------------------------    02472100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02472200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02472300
.ZG836A0              AIF   (K'&TYPE LE 0).ZG836A1  OK                  02472400
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      02472500
.ZG836A1              AIF   (K'&ADJAREA LE 0).ZG836A2  OK               02472600
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      02472700
.ZG836A2              AIF   (K'&DIRECTION LE 0).ZG836A3  OK             02472800
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02472900
.ZG836A3              AIF   (K'&LOCATOR LE 0).ZG836A4  OK               02473000
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02473100
.ZG836A4              AIF   (K'&KEYSCANTYPE LE 0).ZG836A5  OK           02473200
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02473300
.ZG836A5              AIF   (K'&ENTRYID LE 0).ZG836A6  OK               02473400
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02473500
.ZG836A6              AIF   (K'&ENTRYNAME LE 0).ZG836A7  OK             02473600
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02473700
.ZG836A7              AIF   (K'&KEYTYPE LE 0).ZG836A8  OK               02473800
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02473900
.ZG836A8              AIF   (K'&BUFLIST LE 0).ZG836A9  OK               02474000
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      02474100
.ZG836A9              AIF   (K'&BUFADDRTYPE LE 0).ZG836A10  OK          02474200
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     02474300
.ZG836A10             AIF   (K'&PAGEABLE LE 0).ZG836A11  OK             02474400
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      02474500
.ZG836A11             AIF   (K'&BUFSTGKEY LE 0).ZG836A12  OK            02474600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02474700
.ZG836A12             AIF   (K'&BUFALET LE 0).ZG836A13  OK              02474800
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      02474900
.ZG836A13             AIF   (K'&BUFADDRSIZE LE 0).ZG836A14  OK          02475000
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     02475100
.ZG836A14             AIF   (K'&BUFNUM LE 0).ZG836A15  OK               02475200
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      02475300
.ZG836A15             AIF   (K'&BUFFER LE 0).ZG836A16  OK               02475400
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      02475500
.ZG836A16             AIF   (K'&BUFSIZE LE 0).ZG836A17  OK              02475600
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      02475700
.ZG836A17             AIF   (K'&FIRSTELEM LE 0).ZG836A18  OK            02475800
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      02475900
.ZG836A18             AIF   (K'&LASTELEM LE 0).ZG836A19  OK             02476000
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      02476100
.ZG836A19             AIF   (K'&MISCOMPARE LE 0).ZG836A20  OK           02476200
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      02476300
.ZG836A20             AIF   (K'&LISTTYPE LE 0).ZG836A21  OK             02476400
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      02476500
.ZG836A21             AIF   (K'&MOVETOKEY LE 0).ZG836A22  OK            02476600
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02476700
.ZG836A22             AIF   (K'&LISTKEYINC LE 0).ZG836A23  OK           02476800
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02476900
.ZG836A23             AIF   (K'&LISTKEYAREA LE 0).ZG836A24  OK          02477000
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02477100
.ZG836A24             AIF   (K'&MOVETOSKEY LE 0).ZG836A25  OK           02477200
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02477300
.ZG836A25             AIF   (K'&BUFINCRNUM LE 0).ZG836A26  OK           02477400
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      02477500
.ZG836A26             AIF   (K'&ZCVAL LE 0).ZG836A27  OK                02477600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02477700
                      AIF  (K'&ZCVAL LE 160).ZG836A27A                  02477800
&ZCVAL                SETC '&ZCVAL'(1,160)                              02477900
&ZCVAL                SETC '&ZCVAL....'                                 02478000
.ZG836A27A            ANOP                                              02478100
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   02478200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02478300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02478400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02478500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02478600
.ZG836A27             ANOP  ,                                           02478700
.*----------------------------------------------------------------***   02478800
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02478900
&XRESTARTTOKEN        SETC  ''          INITIALIZE XVARIABLE            02479000
                      AIF   (K'&RESTOKEN LE 0).ZG838C                   02479100
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02479200
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET XVARIABLE                   02479300
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02479400
&XRESTOKEN            SETC  '&RESTOKEN(1)'      SET XVARIABLE PARM      02479500
                      AIF   (N'&RESTOKEN GT 1).ZG838A                   02479600
&XRESTOKEN            SETC  '&RESTOKEN'         SET XVARIABLE PARM      02479700
.ZG838A               AIF   (N'&RESTOKEN LE 1).ZG838B  CK NUM           02479800
&ZMS                  SETC  '"RESTOKEN='        *KPOSA* MNOTE           02479900
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02480000
&ZMS                  SETC  '&ZMS "RESTOKEN"'                           02480100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02480200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02480300
.ZG838B               AIF   (K'&XRESTOKEN GT 0).ZG838C  ONE PARM        02480400
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02480500
&ZXRESTOKEN           SETC  ''          RESET IN/OUTPUT                 02480600
&ZMS                  SETC  ' '         *KRQDA*                         02480700
&ZMS                  SETC  '&ZMS "RESTOKEN" KEY AND ITS'               02480800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02480900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02481000
.ZG838C               ANOP  ,                                           02481100
.*----------------------------------------------------------------***   02481200
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02481300
                      AIF   (K'&EXTRESTOKEN LE 0).ZG839D  NO ME KEY     02481400
                      AIF   (N'&EXTRESTOKEN LE 1).ZG839A  CK NUM        02481500
&ZMS                  SETC  '"EXTRESTOKEN='     *KPOSA* MNOTE           02481600
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02481700
&ZMS                  SETC  '&ZMS "EXTRESTOKEN"'                        02481800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02481900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02482000
.ZG839A               AIF   (K'&XRESTARTTOKEN LE 0).ZG839B              02482100
&ZMS                  SETC  '"EXTRESTOKEN'      *KMEKA* MNOTE           02482200
&ZMS                  SETC  '&ZMS.=&EXTRESTOKEN"'                       02482300
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02482400
&ZMS                  SETC  '&ZMS "&XRESTARTTOKEN"'                     02482500
                      MNOTE 8,' &ZMS KEY.'                              02482600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02482700
                      AGO   .ZG839D                                     02482800
.*                                                                      02482900
.ZG839B               ANOP  ,                                           02483000
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02483100
&XRESTARTTOKEN        SETC  'EXTRESTOKEN'       SET XVARIABLE           02483200
&ZXEXTRESTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   02483300
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN(1)'   SET XVARIABLE PARM      02483400
                      AIF   (N'&EXTRESTOKEN GT 1).ZG839C                02483500
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN'      SET XVARIABLE PARM      02483600
.ZG839C               AIF   (K'&XEXTRESTOKEN GT 0).ZG839D  ONE PARM     02483700
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02483800
&ZXEXTRESTOKEN        SETC  ''          RESET IN/OUTPUT                 02483900
&ZMS                  SETC  ' '         *KRQDA*                         02484000
&ZMS                  SETC  '&ZMS "EXTRESTOKEN" KEY AND ITS'            02484100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02484200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02484300
.ZG839D               ANOP  ,                                           02484400
.*------------------------------------------------------------------    02484500
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           02484600
                      AIF   (K'&XRESTARTTOKEN GT 0).ZG840B              02484700
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02484800
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET DEFAULT                     02484900
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02485000
&XRESTOKEN            SETC  'NO_RESTOKEN'       SET DEFAULT PARM        02485100
.ZG840B               ANOP  ,                                           02485200
.*-------------------------------------------------------------------   02485300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02485400
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG840R  NOT I/O     02485500
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG840R                02485600
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG840R        02485700
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02485800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG840P               02485900
                      AIF   (K'&ZCGPR GT 2).ZG840Q                      02486000
                      AIF   ('&ZCGPR' EQ '0').ZG840Q                    02486100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02486200
                      AIF   (T'&ZCGPR NE 'N').ZG840Q  INVALID REG NAME  02486300
.ZG840P               ANOP  ,                                           02486400
                      AIF   (T'&ZCGPR NE 'N').ZG840R  NON NUMERIC       02486500
                      AIF   ('&ZCGPR' LT '2').ZG840Q                    02486600
                      AIF   ('&ZCGPR' LE '12').ZG840R                   02486700
.ZG840Q               ANOP  ,                                           02486800
&ZMS                  SETC  '"EXTRESTOKEN='     *KGPRA* MNOTE           02486900
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02487000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02487100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02487200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02487300
.ZG840R               ANOP  ,                                           02487400
.*-------------------------------------------------------------------   02487500
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02487600
.ZG838                AIF   ('&XRESTARTTOKEN' NE 'RESTOKEN').ZG839      02487700
.*-------------------------------------------------------------------   02487800
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02487900
                      AIF   (K'&ZXRESTOKEN LE 0).ZG838R  NOT I/O        02488000
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG838R                   02488100
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZG838R           02488200
&ZCGPR                SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)              02488300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG838P               02488400
                      AIF   (K'&ZCGPR GT 2).ZG838Q                      02488500
                      AIF   ('&ZCGPR' EQ '0').ZG838Q                    02488600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02488700
                      AIF   (T'&ZCGPR NE 'N').ZG838Q  INVALID REG NAME  02488800
.ZG838P               ANOP  ,                                           02488900
                      AIF   (T'&ZCGPR NE 'N').ZG838R  NON NUMERIC       02489000
                      AIF   ('&ZCGPR' LT '2').ZG838Q                    02489100
                      AIF   ('&ZCGPR' LE '12').ZG838R                   02489200
.ZG838Q               ANOP  ,                                           02489300
&ZMS                  SETC  '"RESTOKEN='        *KGPRA* MNOTE           02489400
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02489500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02489600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02489700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02489800
.ZG838R               ANOP  ,                                           02489900
.*-------------------------------------------------------------------   02490000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02490100
.ZG839                AIF   ('&XRESTARTTOKEN' NE 'EXTRESTOKEN').ZG840   02490200
.*-------------------------------------------------------------------   02490300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02490400
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG839R  NOT I/O     02490500
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG839R             02490600
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG839R        02490700
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02490800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG839P               02490900
                      AIF   (K'&ZCGPR GT 2).ZG839Q                      02491000
                      AIF   ('&ZCGPR' EQ '0').ZG839Q                    02491100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02491200
                      AIF   (T'&ZCGPR NE 'N').ZG839Q  INVALID REG NAME  02491300
.ZG839P               ANOP  ,                                           02491400
                      AIF   (T'&ZCGPR NE 'N').ZG839R  NON NUMERIC       02491500
                      AIF   ('&ZCGPR' LT '2').ZG839Q                    02491600
                      AIF   ('&ZCGPR' LE '12').ZG839R                   02491700
.ZG839Q               ANOP  ,                                           02491800
&ZMS                  SETC  '"EXTRESTOKEN='     *KGPRA* MNOTE           02491900
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02492000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02492100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02492200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02492300
.ZG839R               ANOP  ,                                           02492400
.*-------------------------------------------------------------------   02492500
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            02492600
.ZG840                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     02492700
.*------------------------------------------------------------------    02492800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02492900
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02493000
.*-------------------------------------------------------------------   02493100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02493200
.ZG843                ANOP  ,                                           02493300
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG843A             02493400
&ZTLC                 SETC 'NO'                                         02493500
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG844        02493600
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02493700
                      AIF   (N'&LISTCOMPARE LE 1).ZG843A  CK NUM        02493800
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02493900
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02494000
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02494100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02494200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02494300
.ZG843A               ANOP  ,                                           02494400
.*------------------------------------------------------------------    02494500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02494600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02494700
.ZG843A0              AIF   (K'&LISTNUM LE 0).ZG843A1  OK               02494800
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02494900
.ZG843A1              AIF   (K'&AUTHCOMPARE LE 0).ZG843A2  OK           02495000
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02495100
.ZG843A2              AIF   (K'&AUTHCOMP LE 0).ZG843A3  OK              02495200
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02495300
.ZG843A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG843A4  OK          02495400
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02495500
.ZG843A4              AIF   (K'&ZCVAL LE 0).ZG843A5  OK                 02495600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02495700
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           02495800
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02495900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02496000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02496100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02496200
.ZG843A5              ANOP  ,                                           02496300
.*-------------------------------------------------------------------   02496400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02496500
.ZG844                ANOP  ,                                           02496600
&ZTLC                 SETC 'YES'                                        02496700
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG861        02496800
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02496900
                      AIF   (N'&LISTCOMPARE LE 1).ZG844A  CK NUM        02497000
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02497100
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02497200
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02497300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02497400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02497500
.ZG844A               ANOP  ,                                           02497600
.*----------------------------------------------------------------***   02497700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02497800
                      AIF   (N'&LISTNUM LE 1).ZG846A  CK NUM            02497900
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           02498000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02498100
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02498200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02498300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02498400
.ZG846A               ANOP  ,                                           02498500
.*-------------------------------------------------------------------   02498600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02498700
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02498800
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02498900
                      AIF   (N'&LISTNUM GT 1).ZG846B  MULTI PARMS       02499000
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02499100
.ZG846B               AIF   (K'&LISTNUM(1) GT 0).ZG846C                 02499200
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02499300
&ZMS                  SETC  ' '         *KRQDA*                         02499400
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02499500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02499600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02499700
.ZG846C               ANOP  ,                                           02499800
.*-------------------------------------------------------------------   02499900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02500000
                      AIF   (K'&ZXLISTNUM LE 0).ZG846R  NOT I/O         02500100
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG846R            02500200
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02500300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG846P               02500400
                      AIF   (K'&ZCGPR GT 2).ZG846Q                      02500500
                      AIF   ('&ZCGPR' EQ '0').ZG846Q                    02500600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02500700
                      AIF   (T'&ZCGPR NE 'N').ZG846Q  INVALID REG NAME  02500800
.ZG846P               ANOP  ,                                           02500900
                      AIF   (T'&ZCGPR NE 'N').ZG846R  NON NUMERIC       02501000
                      AIF   ('&ZCGPR' LT '2').ZG846Q                    02501100
                      AIF   ('&ZCGPR' LE '12').ZG846R                   02501200
.ZG846Q               ANOP  ,                                           02501300
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           02501400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02501500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02501600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02501700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02501800
.ZG846R               ANOP  ,                                           02501900
.*------------------------------------------------------------------    02502000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02502100
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02502200
.*-------------------------------------------------------------------   02502300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02502400
.ZG850                ANOP  ,                                           02502500
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG850A             02502600
&ZTLC                 SETC 'NO'                                         02502700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG851        02502800
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02502900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG850A  CK NUM        02503000
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02503100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02503200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02503300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02503400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02503500
.ZG850A               ANOP  ,                                           02503600
.*------------------------------------------------------------------    02503700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02503800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02503900
.ZG850A0              AIF   (K'&AUTHCOMP LE 0).ZG850A1  OK              02504000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02504100
.ZG850A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG850A2  OK          02504200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02504300
.ZG850A2              AIF   (K'&ZCVAL LE 0).ZG850A3  OK                 02504400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02504500
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           02504600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02504700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02504800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02504900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02505000
.ZG850A3              ANOP  ,                                           02505100
.*-------------------------------------------------------------------   02505200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02505300
.ZG851                ANOP  ,                                           02505400
&ZTLC                 SETC 'YES'                                        02505500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG860        02505600
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02505700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG851A  CK NUM        02505800
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02505900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02506000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02506100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02506200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02506300
.ZG851A               ANOP  ,                                           02506400
.*----------------------------------------------------------------***   02506500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02506600
                      AIF   (N'&AUTHCOMP LE 1).ZG853A  CK NUM           02506700
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           02506800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02506900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02507000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02507100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02507200
.ZG853A               ANOP  ,                                           02507300
.*-------------------------------------------------------------------   02507400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02507500
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02507600
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02507700
                      AIF   (N'&AUTHCOMP GT 1).ZG853B  MULTI PARMS      02507800
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02507900
.ZG853B               AIF   (K'&AUTHCOMP(1) GT 0).ZG853C                02508000
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02508100
&ZMS                  SETC  ' '         *KRQDA*                         02508200
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02508300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02508400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02508500
.ZG853C               ANOP  ,                                           02508600
.*-------------------------------------------------------------------   02508700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02508800
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG853R  NOT I/O        02508900
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG853R           02509000
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02509100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG853P               02509200
                      AIF   (K'&ZCGPR GT 2).ZG853Q                      02509300
                      AIF   ('&ZCGPR' EQ '0').ZG853Q                    02509400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02509500
                      AIF   (T'&ZCGPR NE 'N').ZG853Q  INVALID REG NAME  02509600
.ZG853P               ANOP  ,                                           02509700
                      AIF   (T'&ZCGPR NE 'N').ZG853R  NON NUMERIC       02509800
                      AIF   ('&ZCGPR' LT '2').ZG853Q                    02509900
                      AIF   ('&ZCGPR' LE '12').ZG853R                   02510000
.ZG853Q               ANOP  ,                                           02510100
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           02510200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02510300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02510400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02510500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02510600
.ZG853R               ANOP  ,                                           02510700
.*----------------------------------------------------------------***   02510800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02510900
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG855A  CK NUM       02511000
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           02511100
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02511200
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02511300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02511400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02511500
.ZG855A               ANOP  ,                                           02511600
.*-------------------------------------------------------------------   02511700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02511800
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02511900
.ZG856A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG857A                  02512000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02512100
.*-------------------------------------------------------------------   02512200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02512300
.ZG857A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG858A            02512400
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02512500
.*-------------------------------------------------------------------   02512600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02512700
.ZG858A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG858C  KEYWORD     02512800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG858B            02512900
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           02513000
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02513100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02513200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02513300
&ZMS                  SETC  '&ZMS "EQUAL"'                              02513400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02513500
                      MNOTE 8,' &ZMS '                                  02513600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02513700
.ZG858B               ANOP  ,                                           02513800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02513900
.ZG858C               ANOP  ,                                           02514000
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02514100
.*-------------------------------------------------------------------   02514200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02514300
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG858D  KEY           02514400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG858D  PARM      02514500
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           02514600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02514700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02514800
&ZMS                  SETC  '&ZMS '                                     02514900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02515000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02515100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02515200
.ZG858D               ANOP  ,                                           02515300
.*------------------------------------------------------------------    02515400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02515500
.ZG860                ANOP  ,                                           02515600
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02515700
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG860E  VALID ARG    02515800
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG860D  OMITTED     02515900
&ZASYSLNDX            SETA  0                                           02516000
.ZG860A               ANOP  ,           POSITIONAL MACRO KEY            02516100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02516200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG860C           02516300
&ZTLC                 SETC 'AUTHCOMPARE'                                02516400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG860A  02516500
.ZG860B               ANOP  ,                                           02516600
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02516700
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      02516800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02516900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02517000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02517100
                      AGO   .ZG860E                                     02517200
.ZG860C               ANOP  ,                                           02517300
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02517400
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           02517500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02517600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02517700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02517800
&ZMS                  SETC  '&ZMS "NO"'                                 02517900
&ZMS                  SETC  '&ZMS OR "YES".'                            02518000
                      MNOTE 8,' &ZMS '                                  02518100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02518200
                      AGO   .ZG860E                                     02518300
.ZG860D               ANOP  ,                                           02518400
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02518500
.ZG860E               ANOP  ,                                           02518600
.*------------------------------------------------------------------    02518700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02518800
.ZG861                ANOP  ,                                           02518900
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02519000
                      AIF   (K'&XLISTCOMPARE GT 0).ZG861E  VALID ARG    02519100
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG861D  OMITTED     02519200
&ZASYSLNDX            SETA  0                                           02519300
.ZG861A               ANOP  ,           POSITIONAL MACRO KEY            02519400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02519500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG861C           02519600
&ZTLC                 SETC 'LISTCOMPARE'                                02519700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG861A  02519800
.ZG861B               ANOP  ,                                           02519900
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02520000
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      02520100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02520200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02520300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02520400
                      AGO   .ZG861E                                     02520500
.ZG861C               ANOP  ,                                           02520600
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02520700
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           02520800
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02520900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02521000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02521100
&ZMS                  SETC  '&ZMS "NO"'                                 02521200
&ZMS                  SETC  '&ZMS OR "YES".'                            02521300
                      MNOTE 8,' &ZMS '                                  02521400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02521500
                      AGO   .ZG861E                                     02521600
.ZG861D               ANOP  ,                                           02521700
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02521800
.ZG861E               ANOP  ,                                           02521900
.*------------------------------------------------------------------    02522000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02522100
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02522200
.*-------------------------------------------------------------------   02522300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02522400
.ZG864                ANOP  ,                                           02522500
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG864A              02522600
&ZTLC                 SETC 'NO'                                         02522700
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG865         02522800
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02522900
                      AIF   (N'&KEYCOMPARE LE 1).ZG864A  CK NUM         02523000
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02523100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02523200
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02523300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02523400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02523500
.ZG864A               ANOP  ,                                           02523600
.*------------------------------------------------------------------    02523700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02523800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02523900
.ZG864A0              AIF   (K'&ENTRYKEY LE 0).ZG864A1  OK              02524000
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02524100
.ZG864A1              AIF   (K'&KEYREQTYPE LE 0).ZG864A2  OK            02524200
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02524300
.ZG864A2              AIF   (K'&KEYRANGEEND LE 0).ZG864A3  OK           02524400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02524500
.ZG864A3              AIF   (K'&ZCVAL LE 0).ZG864A4  OK                 02524600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02524700
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           02524800
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02524900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02525000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02525100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02525200
.ZG864A4              ANOP  ,                                           02525300
.*-------------------------------------------------------------------   02525400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02525500
.ZG865                ANOP  ,                                           02525600
&ZTLC                 SETC 'YES'                                        02525700
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG879         02525800
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02525900
                      AIF   (N'&KEYCOMPARE LE 1).ZG865A  CK NUM         02526000
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02526100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02526200
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02526300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02526400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02526500
.ZG865A               ANOP  ,                                           02526600
.*----------------------------------------------------------------***   02526700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02526800
                      AIF   (N'&ENTRYKEY LE 1).ZG867A  CK NUM           02526900
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           02527000
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02527100
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02527200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02527300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02527400
.ZG867A               ANOP  ,                                           02527500
.*-------------------------------------------------------------------   02527600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02527700
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02527800
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02527900
                      AIF   (N'&ENTRYKEY GT 1).ZG867B  MULTI PARMS      02528000
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02528100
.ZG867B               AIF   (K'&ENTRYKEY(1) GT 0).ZG867C                02528200
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02528300
&ZMS                  SETC  ' '         *KRQDA*                         02528400
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02528500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02528600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02528700
.ZG867C               ANOP  ,                                           02528800
.*-------------------------------------------------------------------   02528900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02529000
                      AIF   (K'&ZXENTRYKEY LE 0).ZG867R  NOT I/O        02529100
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG867R           02529200
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02529300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG867P               02529400
                      AIF   (K'&ZCGPR GT 2).ZG867Q                      02529500
                      AIF   ('&ZCGPR' EQ '0').ZG867Q                    02529600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02529700
                      AIF   (T'&ZCGPR NE 'N').ZG867Q  INVALID REG NAME  02529800
.ZG867P               ANOP  ,                                           02529900
                      AIF   (T'&ZCGPR NE 'N').ZG867R  NON NUMERIC       02530000
                      AIF   ('&ZCGPR' LT '2').ZG867Q                    02530100
                      AIF   ('&ZCGPR' LE '12').ZG867R                   02530200
.ZG867Q               ANOP  ,                                           02530300
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           02530400
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02530500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02530600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02530700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02530800
.ZG867R               ANOP  ,                                           02530900
.*------------------------------------------------------------------    02531000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02531100
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02531200
.*-------------------------------------------------------------------   02531300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02531400
.ZG871                ANOP  ,                                           02531500
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG871A              02531600
&ZTLC                 SETC 'EQUAL'                                      02531700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG872         02531800
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02531900
                      AIF   (N'&KEYREQTYPE LE 1).ZG871A  CK NUM         02532000
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02532100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02532200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02532300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02532400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02532500
.ZG871A               ANOP  ,                                           02532600
.*------------------------------------------------------------------    02532700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02532800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02532900
.ZG871A0              AIF   (K'&KEYRANGEEND LE 0).ZG871A1  OK           02533000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02533100
.ZG871A1              AIF   (K'&ZCVAL LE 0).ZG871A2  OK                 02533200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02533300
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02533400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02533500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02533600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02533700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02533800
.ZG871A2              ANOP  ,                                           02533900
.*-------------------------------------------------------------------   02534000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02534100
.ZG872                ANOP  ,                                           02534200
&ZTLC                 SETC 'LESSOREQUAL'                                02534300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG873         02534400
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02534500
                      AIF   (N'&KEYREQTYPE LE 1).ZG872A  CK NUM         02534600
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02534700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02534800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02534900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02535000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02535100
.ZG872A               ANOP  ,                                           02535200
.*------------------------------------------------------------------    02535300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02535400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02535500
.ZG872A0              AIF   (K'&KEYRANGEEND LE 0).ZG872A1  OK           02535600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02535700
.ZG872A1              AIF   (K'&ZCVAL LE 0).ZG872A2  OK                 02535800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02535900
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02536000
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02536100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02536200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02536300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02536400
.ZG872A2              ANOP  ,                                           02536500
.*-------------------------------------------------------------------   02536600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02536700
.ZG873                ANOP  ,                                           02536800
&ZTLC                 SETC 'GREATEROREQUAL'                             02536900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG874         02537000
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02537100
                      AIF   (N'&KEYREQTYPE LE 1).ZG873A  CK NUM         02537200
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02537300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02537400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02537500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02537600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02537700
.ZG873A               ANOP  ,                                           02537800
.*------------------------------------------------------------------    02537900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02538000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02538100
.ZG873A0              AIF   (K'&KEYRANGEEND LE 0).ZG873A1  OK           02538200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02538300
.ZG873A1              AIF   (K'&ZCVAL LE 0).ZG873A2  OK                 02538400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02538500
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02538600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02538700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02538800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02538900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02539000
.ZG873A2              ANOP  ,                                           02539100
.*-------------------------------------------------------------------   02539200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02539300
.ZG874                ANOP  ,                                           02539400
&ZTLC                 SETC 'RANGE'                                      02539500
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG878         02539600
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02539700
                      AIF   (N'&KEYREQTYPE LE 1).ZG874A  CK NUM         02539800
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02539900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02540000
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02540100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02540200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02540300
.ZG874A               ANOP  ,                                           02540400
.*----------------------------------------------------------------***   02540500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02540600
                      AIF   (N'&KEYRANGEEND LE 1).ZG876A  CK NUM        02540700
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           02540800
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02540900
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02541000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02541100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02541200
.ZG876A               ANOP  ,                                           02541300
.*-------------------------------------------------------------------   02541400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02541500
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02541600
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02541700
                      AIF   (N'&KEYRANGEEND GT 1).ZG876B  MULTI PARMS   02541800
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02541900
.ZG876B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG876C             02542000
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02542100
&ZMS                  SETC  ' '         *KRQDA*                         02542200
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02542300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02542400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02542500
.ZG876C               ANOP  ,                                           02542600
.*-------------------------------------------------------------------   02542700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02542800
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG876R  NOT I/O     02542900
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG876R        02543000
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02543100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG876P               02543200
                      AIF   (K'&ZCGPR GT 2).ZG876Q                      02543300
                      AIF   ('&ZCGPR' EQ '0').ZG876Q                    02543400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02543500
                      AIF   (T'&ZCGPR NE 'N').ZG876Q  INVALID REG NAME  02543600
.ZG876P               ANOP  ,                                           02543700
                      AIF   (T'&ZCGPR NE 'N').ZG876R  NON NUMERIC       02543800
                      AIF   ('&ZCGPR' LT '2').ZG876Q                    02543900
                      AIF   ('&ZCGPR' LE '12').ZG876R                   02544000
.ZG876Q               ANOP  ,                                           02544100
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           02544200
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02544300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02544400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02544500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02544600
.ZG876R               ANOP  ,                                           02544700
.*------------------------------------------------------------------    02544800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02544900
.ZG878                ANOP  ,                                           02545000
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02545100
                      AIF   (K'&XKEYREQTYPE GT 0).ZG878E  VALID ARG     02545200
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG878D  OMITTED      02545300
&ZASYSLNDX            SETA  0                                           02545400
.ZG878A               ANOP  ,           POSITIONAL MACRO KEY            02545500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02545600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG878C           02545700
&ZTLC                 SETC 'KEYREQTYPE'                                 02545800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG878A  02545900
.ZG878B               ANOP  ,                                           02546000
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02546100
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       02546200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02546300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02546400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02546500
                      AGO   .ZG878E                                     02546600
.ZG878C               ANOP  ,                                           02546700
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02546800
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           02546900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02547000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02547100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02547200
&ZMS                  SETC  '&ZMS "EQUAL",'                             02547300
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02547400
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02547500
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02547600
                      MNOTE 8,' &ZMS '                                  02547700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02547800
                      AGO   .ZG878E                                     02547900
.ZG878D               ANOP  ,                                           02548000
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02548100
.ZG878E               ANOP  ,                                           02548200
.*------------------------------------------------------------------    02548300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02548400
.ZG879                ANOP  ,                                           02548500
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02548600
                      AIF   (K'&XKEYCOMPARE GT 0).ZG879E  VALID ARG     02548700
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG879D  OMITTED      02548800
&ZASYSLNDX            SETA  0                                           02548900
.ZG879A               ANOP  ,           POSITIONAL MACRO KEY            02549000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02549100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG879C           02549200
&ZTLC                 SETC 'KEYCOMPARE'                                 02549300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG879A  02549400
.ZG879B               ANOP  ,                                           02549500
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02549600
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       02549700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02549800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02549900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02550000
                      AGO   .ZG879E                                     02550100
.ZG879C               ANOP  ,                                           02550200
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02550300
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           02550400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02550500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02550600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02550700
&ZMS                  SETC  '&ZMS "NO"'                                 02550800
&ZMS                  SETC  '&ZMS OR "YES".'                            02550900
                      MNOTE 8,' &ZMS '                                  02551000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02551100
                      AGO   .ZG879E                                     02551200
.ZG879D               ANOP  ,                                           02551300
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02551400
.ZG879E               ANOP  ,                                           02551500
.*------------------------------------------------------------------    02551600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02551700
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02551800
.*-------------------------------------------------------------------   02551900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02552000
.ZG882                ANOP  ,                                           02552100
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG882A             02552200
&ZTLC                 SETC 'NO'                                         02552300
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG883        02552400
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02552500
                      AIF   (N'&SKEYCOMPARE LE 1).ZG882A  CK NUM        02552600
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02552700
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02552800
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02552900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02553000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02553100
.ZG882A               ANOP  ,                                           02553200
.*------------------------------------------------------------------    02553300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02553400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02553500
.ZG882A0              AIF   (K'&SECONDARYKEY LE 0).ZG882A1  OK          02553600
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02553700
.ZG882A1              AIF   (K'&SKEYREQTYPE LE 0).ZG882A2  OK           02553800
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02553900
.ZG882A2              AIF   (K'&SKEYRANGEEND LE 0).ZG882A3  OK          02554000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02554100
.ZG882A3              AIF   (K'&ZCVAL LE 0).ZG882A4  OK                 02554200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02554300
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           02554400
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02554500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02554600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02554700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02554800
.ZG882A4              ANOP  ,                                           02554900
.*-------------------------------------------------------------------   02555000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02555100
.ZG883                ANOP  ,                                           02555200
&ZTLC                 SETC 'YES'                                        02555300
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG897        02555400
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02555500
                      AIF   (N'&SKEYCOMPARE LE 1).ZG883A  CK NUM        02555600
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02555700
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02555800
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02555900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02556000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02556100
.ZG883A               ANOP  ,                                           02556200
.*----------------------------------------------------------------***   02556300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02556400
                      AIF   (N'&SECONDARYKEY LE 1).ZG885A  CK NUM       02556500
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           02556600
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02556700
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02556800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02556900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02557000
.ZG885A               ANOP  ,                                           02557100
.*-------------------------------------------------------------------   02557200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02557300
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02557400
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02557500
                      AIF   (N'&SECONDARYKEY GT 1).ZG885B  MULTI PARMS  02557600
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02557700
.ZG885B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG885C            02557800
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02557900
&ZMS                  SETC  ' '         *KRQDA*                         02558000
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02558100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02558200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02558300
.ZG885C               ANOP  ,                                           02558400
.*-------------------------------------------------------------------   02558500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02558600
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG885R  NOT I/O    02558700
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG885R       02558800
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02558900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG885P               02559000
                      AIF   (K'&ZCGPR GT 2).ZG885Q                      02559100
                      AIF   ('&ZCGPR' EQ '0').ZG885Q                    02559200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02559300
                      AIF   (T'&ZCGPR NE 'N').ZG885Q  INVALID REG NAME  02559400
.ZG885P               ANOP  ,                                           02559500
                      AIF   (T'&ZCGPR NE 'N').ZG885R  NON NUMERIC       02559600
                      AIF   ('&ZCGPR' LT '2').ZG885Q                    02559700
                      AIF   ('&ZCGPR' LE '12').ZG885R                   02559800
.ZG885Q               ANOP  ,                                           02559900
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           02560000
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02560100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02560200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02560300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02560400
.ZG885R               ANOP  ,                                           02560500
.*------------------------------------------------------------------    02560600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02560700
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02560800
.*-------------------------------------------------------------------   02560900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02561000
.ZG889                ANOP  ,                                           02561100
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG889A             02561200
&ZTLC                 SETC 'EQUAL'                                      02561300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG890        02561400
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02561500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG889A  CK NUM        02561600
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02561700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02561800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02561900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02562000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02562100
.ZG889A               ANOP  ,                                           02562200
.*------------------------------------------------------------------    02562300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02562400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02562500
.ZG889A0              AIF   (K'&SKEYRANGEEND LE 0).ZG889A1  OK          02562600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02562700
.ZG889A1              AIF   (K'&ZCVAL LE 0).ZG889A2  OK                 02562800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02562900
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02563000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02563100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02563200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02563300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02563400
.ZG889A2              ANOP  ,                                           02563500
.*-------------------------------------------------------------------   02563600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02563700
.ZG890                ANOP  ,                                           02563800
&ZTLC                 SETC 'LESSOREQUAL'                                02563900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG891        02564000
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02564100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG890A  CK NUM        02564200
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02564300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02564400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02564500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02564600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02564700
.ZG890A               ANOP  ,                                           02564800
.*------------------------------------------------------------------    02564900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02565000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02565100
.ZG890A0              AIF   (K'&SKEYRANGEEND LE 0).ZG890A1  OK          02565200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02565300
.ZG890A1              AIF   (K'&ZCVAL LE 0).ZG890A2  OK                 02565400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02565500
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02565600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02565700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02565800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02565900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02566000
.ZG890A2              ANOP  ,                                           02566100
.*-------------------------------------------------------------------   02566200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02566300
.ZG891                ANOP  ,                                           02566400
&ZTLC                 SETC 'GREATEROREQUAL'                             02566500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG892        02566600
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02566700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG891A  CK NUM        02566800
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02566900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02567000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02567100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02567200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02567300
.ZG891A               ANOP  ,                                           02567400
.*------------------------------------------------------------------    02567500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02567600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02567700
.ZG891A0              AIF   (K'&SKEYRANGEEND LE 0).ZG891A1  OK          02567800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02567900
.ZG891A1              AIF   (K'&ZCVAL LE 0).ZG891A2  OK                 02568000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02568100
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02568200
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02568300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02568400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02568500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02568600
.ZG891A2              ANOP  ,                                           02568700
.*-------------------------------------------------------------------   02568800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02568900
.ZG892                ANOP  ,                                           02569000
&ZTLC                 SETC 'RANGE'                                      02569100
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG896        02569200
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02569300
                      AIF   (N'&SKEYREQTYPE LE 1).ZG892A  CK NUM        02569400
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02569500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02569600
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02569700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02569800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02569900
.ZG892A               ANOP  ,                                           02570000
.*----------------------------------------------------------------***   02570100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02570200
                      AIF   (N'&SKEYRANGEEND LE 1).ZG894A  CK NUM       02570300
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           02570400
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02570500
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02570600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02570700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02570800
.ZG894A               ANOP  ,                                           02570900
.*-------------------------------------------------------------------   02571000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02571100
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02571200
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02571300
                      AIF   (N'&SKEYRANGEEND GT 1).ZG894B  MULTI PARMS  02571400
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02571500
.ZG894B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG894C            02571600
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02571700
&ZMS                  SETC  ' '         *KRQDA*                         02571800
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02571900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02572000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02572100
.ZG894C               ANOP  ,                                           02572200
.*-------------------------------------------------------------------   02572300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02572400
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG894R  NOT I/O    02572500
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG894R       02572600
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02572700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG894P               02572800
                      AIF   (K'&ZCGPR GT 2).ZG894Q                      02572900
                      AIF   ('&ZCGPR' EQ '0').ZG894Q                    02573000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02573100
                      AIF   (T'&ZCGPR NE 'N').ZG894Q  INVALID REG NAME  02573200
.ZG894P               ANOP  ,                                           02573300
                      AIF   (T'&ZCGPR NE 'N').ZG894R  NON NUMERIC       02573400
                      AIF   ('&ZCGPR' LT '2').ZG894Q                    02573500
                      AIF   ('&ZCGPR' LE '12').ZG894R                   02573600
.ZG894Q               ANOP  ,                                           02573700
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           02573800
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02573900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02574000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02574100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02574200
.ZG894R               ANOP  ,                                           02574300
.*------------------------------------------------------------------    02574400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02574500
.ZG896                ANOP  ,                                           02574600
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02574700
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG896E  VALID ARG    02574800
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG896D  OMITTED     02574900
&ZASYSLNDX            SETA  0                                           02575000
.ZG896A               ANOP  ,           POSITIONAL MACRO KEY            02575100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02575200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG896C           02575300
&ZTLC                 SETC 'SKEYREQTYPE'                                02575400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG896A  02575500
.ZG896B               ANOP  ,                                           02575600
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02575700
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      02575800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02575900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02576000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02576100
                      AGO   .ZG896E                                     02576200
.ZG896C               ANOP  ,                                           02576300
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02576400
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           02576500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02576600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02576700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02576800
&ZMS                  SETC  '&ZMS "EQUAL",'                             02576900
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02577000
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02577100
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02577200
                      MNOTE 8,' &ZMS '                                  02577300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02577400
                      AGO   .ZG896E                                     02577500
.ZG896D               ANOP  ,                                           02577600
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02577700
.ZG896E               ANOP  ,                                           02577800
.*------------------------------------------------------------------    02577900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02578000
.ZG897                ANOP  ,                                           02578100
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02578200
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG897E  VALID ARG    02578300
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG897D  OMITTED     02578400
&ZASYSLNDX            SETA  0                                           02578500
.ZG897A               ANOP  ,           POSITIONAL MACRO KEY            02578600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02578700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG897C           02578800
&ZTLC                 SETC 'SKEYCOMPARE'                                02578900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG897A  02579000
.ZG897B               ANOP  ,                                           02579100
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02579200
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      02579300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02579400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02579500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02579600
                      AGO   .ZG897E                                     02579700
.ZG897C               ANOP  ,                                           02579800
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02579900
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           02580000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02580100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02580200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02580300
&ZMS                  SETC  '&ZMS "NO"'                                 02580400
&ZMS                  SETC  '&ZMS OR "YES".'                            02580500
                      MNOTE 8,' &ZMS '                                  02580600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02580700
                      AGO   .ZG897E                                     02580800
.ZG897D               ANOP  ,                                           02580900
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02581000
.ZG897E               ANOP  ,                                           02581100
.*------------------------------------------------------------------    02581200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02581300
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02581400
.*-------------------------------------------------------------------   02581500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02581600
.ZG900                ANOP  ,                                           02581700
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG900A             02581800
&ZTLC                 SETC 'NO'                                         02581900
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG901        02582000
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02582100
                      AIF   (N'&VERSCOMPARE LE 1).ZG900A  CK NUM        02582200
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02582300
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02582400
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02582500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02582600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02582700
.ZG900A               ANOP  ,                                           02582800
.*------------------------------------------------------------------    02582900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02583000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02583100
.ZG900A0              AIF   (K'&VERSCOMP LE 0).ZG900A1  OK              02583200
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02583300
.ZG900A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG900A2  OK          02583400
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02583500
.ZG900A2              AIF   (K'&ZCVAL LE 0).ZG900A3  OK                 02583600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02583700
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           02583800
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02583900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02584000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02584100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02584200
.ZG900A3              ANOP  ,                                           02584300
.*-------------------------------------------------------------------   02584400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02584500
.ZG901                ANOP  ,                                           02584600
&ZTLC                 SETC 'YES'                                        02584700
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG910        02584800
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02584900
                      AIF   (N'&VERSCOMPARE LE 1).ZG901A  CK NUM        02585000
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02585100
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02585200
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02585300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02585400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02585500
.ZG901A               ANOP  ,                                           02585600
.*----------------------------------------------------------------***   02585700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02585800
                      AIF   (N'&VERSCOMP LE 1).ZG903A  CK NUM           02585900
&ZMS                  SETC  '"VERSCOMP='        *KPOSA* MNOTE           02586000
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02586100
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02586200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02586300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02586400
.ZG903A               ANOP  ,                                           02586500
.*-------------------------------------------------------------------   02586600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02586700
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02586800
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02586900
                      AIF   (N'&VERSCOMP GT 1).ZG903B  MULTI PARMS      02587000
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02587100
.ZG903B               AIF   (K'&VERSCOMP(1) GT 0).ZG903C                02587200
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02587300
&ZMS                  SETC  ' '         *KRQDA*                         02587400
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               02587500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02587600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02587700
.ZG903C               ANOP  ,                                           02587800
.*-------------------------------------------------------------------   02587900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02588000
                      AIF   (K'&ZXVERSCOMP LE 0).ZG903R  NOT I/O        02588100
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG903R           02588200
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02588300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG903P               02588400
                      AIF   (K'&ZCGPR GT 2).ZG903Q                      02588500
                      AIF   ('&ZCGPR' EQ '0').ZG903Q                    02588600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02588700
                      AIF   (T'&ZCGPR NE 'N').ZG903Q  INVALID REG NAME  02588800
.ZG903P               ANOP  ,                                           02588900
                      AIF   (T'&ZCGPR NE 'N').ZG903R  NON NUMERIC       02589000
                      AIF   ('&ZCGPR' LT '2').ZG903Q                    02589100
                      AIF   ('&ZCGPR' LE '12').ZG903R                   02589200
.ZG903Q               ANOP  ,                                           02589300
&ZMS                  SETC  '"VERSCOMP='        *KGPRA* MNOTE           02589400
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02589500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02589600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02589700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02589800
.ZG903R               ANOP  ,                                           02589900
.*----------------------------------------------------------------***   02590000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02590100
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG905A  CK NUM       02590200
&ZMS                  SETC  '"VERSCOMPTYPE='    *KPOSA* MNOTE           02590300
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02590400
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02590500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02590600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02590700
.ZG905A               ANOP  ,                                           02590800
.*-------------------------------------------------------------------   02590900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02591000
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02591100
.ZG906A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG907A                  02591200
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02591300
.*-------------------------------------------------------------------   02591400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02591500
.ZG907A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG908A            02591600
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02591700
.*-------------------------------------------------------------------   02591800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02591900
.ZG908A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG908C  KEYWORD     02592000
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG908B            02592100
&ZMS                  SETC  '"VERSCOMPTYPE='    *KUKWA* MNOTE           02592200
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02592300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02592400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02592500
&ZMS                  SETC  '&ZMS "EQUAL"'                              02592600
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02592700
                      MNOTE 8,' &ZMS '                                  02592800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02592900
.ZG908B               ANOP  ,                                           02593000
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02593100
.ZG908C               ANOP  ,                                           02593200
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02593300
.*-------------------------------------------------------------------   02593400
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02593500
                      AIF   (K'&VERSCOMP(1) GT 0).ZG908D  KEY           02593600
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG908D  PARM      02593700
&ZMS                  SETC  '"VERSCOMPTYPE'     *KDEPA* MNOTE           02593800
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02593900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02594000
&ZMS                  SETC  '&ZMS '                                     02594100
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02594200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02594300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02594400
.ZG908D               ANOP  ,                                           02594500
.*------------------------------------------------------------------    02594600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02594700
.ZG910                ANOP  ,                                           02594800
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02594900
                      AIF   (K'&XVERSCOMPARE GT 0).ZG910E  VALID ARG    02595000
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG910D  OMITTED     02595100
&ZASYSLNDX            SETA  0                                           02595200
.ZG910A               ANOP  ,           POSITIONAL MACRO KEY            02595300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02595400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG910C           02595500
&ZTLC                 SETC 'VERSCOMPARE'                                02595600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG910A  02595700
.ZG910B               ANOP  ,                                           02595800
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02595900
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'  *KOPTA* MNOTE      02596000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02596100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02596200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02596300
                      AGO   .ZG910E                                     02596400
.ZG910C               ANOP  ,                                           02596500
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02596600
&ZMS                  SETC  '"VERSCOMPARE='     *KUKWA* MNOTE           02596700
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02596800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02596900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02597000
&ZMS                  SETC  '&ZMS "NO"'                                 02597100
&ZMS                  SETC  '&ZMS OR "YES".'                            02597200
                      MNOTE 8,' &ZMS '                                  02597300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02597400
                      AGO   .ZG910E                                     02597500
.ZG910D               ANOP  ,                                           02597600
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02597700
.ZG910E               ANOP  ,                                           02597800
.*-------------------------------------------------------------------   02597900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02598000
.ZG911                ANOP  ,                                           02598100
&ZTLC                 SETC 'MOVE_ENTRYLIST'                             02598200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG1058           02598300
&XREQUEST             SETC  'MOVE_ENTRYLIST'    SET KEYWORD             02598400
                      AIF   (N'&REQUEST LE 1).ZG911A  CK NUM            02598500
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           02598600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02598700
&ZMS                  SETC  '&ZMS "REQUEST"'                            02598800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02598900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02599000
.ZG911A               ANOP  ,                                           02599100
.*------------------------------------------------------------------    02599200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02599300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02599400
.ZG911A0              AIF   (K'&TYPE LE 0).ZG911A1  OK                  02599500
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      02599600
.ZG911A1              AIF   (K'&ADJAREA LE 0).ZG911A2  OK               02599700
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      02599800
.ZG911A2              AIF   (K'&DIRECTION LE 0).ZG911A3  OK             02599900
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02600000
.ZG911A3              AIF   (K'&LOCATOR LE 0).ZG911A4  OK               02600100
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02600200
.ZG911A4              AIF   (K'&KEYSCANTYPE LE 0).ZG911A5  OK           02600300
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02600400
.ZG911A5              AIF   (K'&ENTRYID LE 0).ZG911A6  OK               02600500
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02600600
.ZG911A6              AIF   (K'&ENTRYNAME LE 0).ZG911A7  OK             02600700
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02600800
.ZG911A7              AIF   (K'&KEYTYPE LE 0).ZG911A8  OK               02600900
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02601000
.ZG911A8              AIF   (K'&RESTOKEN LE 0).ZG911A9  OK              02601100
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      02601200
.ZG911A9              AIF   (K'&EXTRESTOKEN LE 0).ZG911A10  OK          02601300
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     02601400
.ZG911A10             AIF   (K'&ZCVAL LE 0).ZG911A11  OK                02601500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02601600
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   02601700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02601800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02601900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02602000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02602100
.ZG911A11             ANOP  ,                                           02602200
.*----------------------------------------------------------------***   02602300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02602400
                      AIF   (N'&FIRSTELEM LE 1).ZG913A  CK NUM          02602500
&ZMS                  SETC  '"FIRSTELEM='       *KPOSA* MNOTE           02602600
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02602700
&ZMS                  SETC  '&ZMS "FIRSTELEM"'                          02602800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02602900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02603000
.ZG913A               ANOP  ,                                           02603100
.*-------------------------------------------------------------------   02603200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02603300
&ZXFIRSTELEM          SETC  'INPUT'     SET IN/OUTPUT                   02603400
&XFIRSTELEM           SETC  '1'                                         02603500
                      AIF   (K'&FIRSTELEM(1) LE 0).ZG913B  PARM         02603600
&XFIRSTELEM           SETC  '&FIRSTELEM(1)'     SET XVARIABLE           02603700
                      AIF   (N'&FIRSTELEM GT 1).ZG913B  MULTI PARMS     02603800
&XFIRSTELEM           SETC  '&FIRSTELEM'        SET XVARIABLE           02603900
.ZG913B               ANOP  ,                                           02604000
.*-------------------------------------------------------------------   02604100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02604200
                      AIF   (K'&ZXFIRSTELEM LE 0).ZG913R  NOT I/O       02604300
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZG913R          02604400
&ZCGPR                SETC  '&XFIRSTELEM'(2,K'&XFIRSTELEM-2)            02604500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG913P               02604600
                      AIF   (K'&ZCGPR GT 2).ZG913Q                      02604700
                      AIF   ('&ZCGPR' EQ '0').ZG913Q                    02604800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02604900
                      AIF   (T'&ZCGPR NE 'N').ZG913Q  INVALID REG NAME  02605000
.ZG913P               ANOP  ,                                           02605100
                      AIF   (T'&ZCGPR NE 'N').ZG913R  NON NUMERIC       02605200
                      AIF   ('&ZCGPR' LT '2').ZG913Q                    02605300
                      AIF   ('&ZCGPR' LE '12').ZG913R                   02605400
.ZG913Q               ANOP  ,                                           02605500
&ZMS                  SETC  '"FIRSTELEM='       *KGPRA* MNOTE           02605600
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02605700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02605800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02605900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02606000
.ZG913R               ANOP  ,                                           02606100
.*----------------------------------------------------------------***   02606200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02606300
                      AIF   (N'&LASTELEM LE 1).ZG916A  CK NUM           02606400
&ZMS                  SETC  '"LASTELEM='        *KPOSA* MNOTE           02606500
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02606600
&ZMS                  SETC  '&ZMS "LASTELEM"'                           02606700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02606800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02606900
.ZG916A               ANOP  ,                                           02607000
.*-------------------------------------------------------------------   02607100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02607200
&ZXLASTELEM           SETC  'INPUT'     SET IN/OUTPUT                   02607300
&XLASTELEM            SETC  '&LASTELEM(1)'      SET XVARIABLE           02607400
                      AIF   (N'&LASTELEM GT 1).ZG916B  MULTI PARMS      02607500
&XLASTELEM            SETC  '&LASTELEM'         SET XVARIABLE           02607600
.ZG916B               AIF   (K'&LASTELEM(1) GT 0).ZG916C                02607700
&ZXLASTELEM           SETC  ''          RESET IN/OUTPUT                 02607800
&ZMS                  SETC  ' '         *KRQDA*                         02607900
&ZMS                  SETC  '&ZMS "LASTELEM" KEY AND ITS'               02608000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02608100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02608200
.ZG916C               ANOP  ,                                           02608300
.*-------------------------------------------------------------------   02608400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02608500
                      AIF   (K'&ZXLASTELEM LE 0).ZG916R  NOT I/O        02608600
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZG916R           02608700
&ZCGPR                SETC  '&XLASTELEM'(2,K'&XLASTELEM-2)              02608800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG916P               02608900
                      AIF   (K'&ZCGPR GT 2).ZG916Q                      02609000
                      AIF   ('&ZCGPR' EQ '0').ZG916Q                    02609100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02609200
                      AIF   (T'&ZCGPR NE 'N').ZG916Q  INVALID REG NAME  02609300
.ZG916P               ANOP  ,                                           02609400
                      AIF   (T'&ZCGPR NE 'N').ZG916R  NON NUMERIC       02609500
                      AIF   ('&ZCGPR' LT '2').ZG916Q                    02609600
                      AIF   ('&ZCGPR' LE '12').ZG916R                   02609700
.ZG916Q               ANOP  ,                                           02609800
&ZMS                  SETC  '"LASTELEM='        *KGPRA* MNOTE           02609900
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02610000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02610100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02610200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02610300
.ZG916R               ANOP  ,                                           02610400
.*----------------------------------------------------------------***   02610500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02610600
                      AIF   (N'&MISCOMPARE LE 1).ZG919A  CK NUM         02610700
&ZMS                  SETC  '"MISCOMPARE='      *KPOSA* MNOTE           02610800
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02610900
&ZMS                  SETC  '&ZMS "MISCOMPARE"'                         02611000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02611100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02611200
.ZG919A               ANOP  ,                                           02611300
.*-------------------------------------------------------------------   02611400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02611500
&XMISCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02611600
.ZG920A   AIF   ('&MISCOMPARE(1)' NE 'CONTINUE').ZG921A                 02611700
&XMISCOMPARE          SETC  'CONTINUE'  SET KEYWORD                     02611800
.*-------------------------------------------------------------------   02611900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02612000
.ZG921A   AIF   ('&MISCOMPARE(1)' NE 'HALT').ZG922A                     02612100
&XMISCOMPARE          SETC  'HALT'      SET KEYWORD                     02612200
.*-------------------------------------------------------------------   02612300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02612400
.ZG922A               AIF   (K'&XMISCOMPARE GT 0).ZG922C  KEYWORD       02612500
                      AIF   (K'&MISCOMPARE(1) LE 0).ZG922B              02612600
&ZMS                  SETC  '"MISCOMPARE='      *KUKWA* MNOTE           02612700
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02612800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02612900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02613000
&ZMS                  SETC  '&ZMS "CONTINUE"'                           02613100
&ZMS                  SETC  '&ZMS OR "HALT".'                           02613200
                      MNOTE 8,' &ZMS '                                  02613300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02613400
.ZG922B               ANOP  ,                                           02613500
&XMISCOMPARE          SETC  'CONTINUE'  SET DEFAULT KEYWORD             02613600
.ZG922C               ANOP  ,                                           02613700
&ZXMISCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02613800
.*------------------------------------------------------------------    02613900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02614000
&XLISTTYPE            SETC  ''          INITIALIZE XVARIABLE            02614100
.*-------------------------------------------------------------------   02614200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02614300
.ZG925                ANOP  ,                                           02614400
                      AIF   (K'&LISTTYPE(1) LE 0).ZG925A                02614500
&ZTLC                 SETC 'NAMELIST'                                   02614600
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG926           02614700
&XLISTTYPE            SETC  'NAMELIST'  SET KEYWORD                     02614800
                      AIF   (N'&LISTTYPE LE 1).ZG925A  CK NUM           02614900
&ZMS                  SETC  '"LISTTYPE='        *KPOSA* MNOTE           02615000
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02615100
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02615200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02615300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02615400
.ZG925A               ANOP  ,                                           02615500
.*------------------------------------------------------------------    02615600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02615700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02615800
.ZG925A0              AIF   (K'&KEYCOMPARE LE 0).ZG925A1  OK            02615900
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      02616000
.ZG925A1              AIF   (K'&ENTRYKEY LE 0).ZG925A2  OK              02616100
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02616200
.ZG925A2              AIF   (K'&KEYREQTYPE LE 0).ZG925A3  OK            02616300
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02616400
.ZG925A3              AIF   (K'&KEYRANGEEND LE 0).ZG925A4  OK           02616500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02616600
.ZG925A4              AIF   (K'&SKEYCOMPARE LE 0).ZG925A5  OK           02616700
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     02616800
.ZG925A5              AIF   (K'&SECONDARYKEY LE 0).ZG925A6  OK          02616900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02617000
.ZG925A6              AIF   (K'&SKEYREQTYPE LE 0).ZG925A7  OK           02617100
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02617200
.ZG925A7              AIF   (K'&SKEYRANGEEND LE 0).ZG925A8  OK          02617300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02617400
.ZG925A8              AIF   (K'&MOVETOKEY LE 0).ZG925A9  OK             02617500
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02617600
.ZG925A9              AIF   (K'&LISTKEYINC LE 0).ZG925A10  OK           02617700
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02617800
.ZG925A10             AIF   (K'&LISTKEYAREA LE 0).ZG925A11  OK          02617900
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02618000
.ZG925A11             AIF   (K'&MOVETOSKEY LE 0).ZG925A12  OK           02618100
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02618200
.ZG925A12             AIF   (K'&ZCVAL LE 0).ZG925A13  OK                02618300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02618400
&ZMS                  SETC  '"LISTTYPE'         *KMEIA* MNOTE           02618500
&ZMS                  SETC  '&ZMS.=&LISTTYPE"'                          02618600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02618700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02618800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02618900
.ZG925A13             ANOP  ,                                           02619000
.*-------------------------------------------------------------------   02619100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02619200
.ZG926                ANOP  ,                                           02619300
&ZTLC                 SETC 'IDLIST'                                     02619400
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG980           02619500
&XLISTTYPE            SETC  'IDLIST'    SET KEYWORD                     02619600
                      AIF   (N'&LISTTYPE LE 1).ZG926A  CK NUM           02619700
&ZMS                  SETC  '"LISTTYPE='        *KPOSA* MNOTE           02619800
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02619900
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02620000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02620100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02620200
.ZG926A               ANOP  ,                                           02620300
.*------------------------------------------------------------------    02620400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02620500
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02620600
.*-------------------------------------------------------------------   02620700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02620800
.ZG929                ANOP  ,                                           02620900
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG929A              02621000
&ZTLC                 SETC 'NO'                                         02621100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG930         02621200
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02621300
                      AIF   (N'&KEYCOMPARE LE 1).ZG929A  CK NUM         02621400
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02621500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02621600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02621700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02621800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02621900
.ZG929A               ANOP  ,                                           02622000
.*------------------------------------------------------------------    02622100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02622200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02622300
.ZG929A0              AIF   (K'&ENTRYKEY LE 0).ZG929A1  OK              02622400
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02622500
.ZG929A1              AIF   (K'&KEYREQTYPE LE 0).ZG929A2  OK            02622600
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02622700
.ZG929A2              AIF   (K'&KEYRANGEEND LE 0).ZG929A3  OK           02622800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02622900
.ZG929A3              AIF   (K'&ZCVAL LE 0).ZG929A4  OK                 02623000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02623100
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           02623200
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02623300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02623400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02623500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02623600
.ZG929A4              ANOP  ,                                           02623700
.*-------------------------------------------------------------------   02623800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02623900
.ZG930                ANOP  ,                                           02624000
&ZTLC                 SETC 'YES'                                        02624100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG944         02624200
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02624300
                      AIF   (N'&KEYCOMPARE LE 1).ZG930A  CK NUM         02624400
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02624500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02624600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02624700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02624800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02624900
.ZG930A               ANOP  ,                                           02625000
.*----------------------------------------------------------------***   02625100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02625200
                      AIF   (N'&ENTRYKEY LE 1).ZG932A  CK NUM           02625300
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           02625400
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02625500
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02625600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02625700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02625800
.ZG932A               ANOP  ,                                           02625900
.*-------------------------------------------------------------------   02626000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02626100
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02626200
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02626300
                      AIF   (N'&ENTRYKEY GT 1).ZG932B  MULTI PARMS      02626400
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02626500
.ZG932B               AIF   (K'&ENTRYKEY(1) GT 0).ZG932C                02626600
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02626700
&ZMS                  SETC  ' '         *KRQDA*                         02626800
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02626900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02627000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02627100
.ZG932C               ANOP  ,                                           02627200
.*-------------------------------------------------------------------   02627300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02627400
                      AIF   (K'&ZXENTRYKEY LE 0).ZG932R  NOT I/O        02627500
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG932R           02627600
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02627700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG932P               02627800
                      AIF   (K'&ZCGPR GT 2).ZG932Q                      02627900
                      AIF   ('&ZCGPR' EQ '0').ZG932Q                    02628000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02628100
                      AIF   (T'&ZCGPR NE 'N').ZG932Q  INVALID REG NAME  02628200
.ZG932P               ANOP  ,                                           02628300
                      AIF   (T'&ZCGPR NE 'N').ZG932R  NON NUMERIC       02628400
                      AIF   ('&ZCGPR' LT '2').ZG932Q                    02628500
                      AIF   ('&ZCGPR' LE '12').ZG932R                   02628600
.ZG932Q               ANOP  ,                                           02628700
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           02628800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02628900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02629000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02629100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02629200
.ZG932R               ANOP  ,                                           02629300
.*------------------------------------------------------------------    02629400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02629500
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02629600
.*-------------------------------------------------------------------   02629700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02629800
.ZG936                ANOP  ,                                           02629900
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG936A              02630000
&ZTLC                 SETC 'EQUAL'                                      02630100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG937         02630200
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02630300
                      AIF   (N'&KEYREQTYPE LE 1).ZG936A  CK NUM         02630400
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02630500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02630600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02630700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02630800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02630900
.ZG936A               ANOP  ,                                           02631000
.*------------------------------------------------------------------    02631100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02631200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02631300
.ZG936A0              AIF   (K'&KEYRANGEEND LE 0).ZG936A1  OK           02631400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02631500
.ZG936A1              AIF   (K'&ZCVAL LE 0).ZG936A2  OK                 02631600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02631700
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02631800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02631900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02632000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02632100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02632200
.ZG936A2              ANOP  ,                                           02632300
.*-------------------------------------------------------------------   02632400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02632500
.ZG937                ANOP  ,                                           02632600
&ZTLC                 SETC 'LESSOREQUAL'                                02632700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG938         02632800
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02632900
                      AIF   (N'&KEYREQTYPE LE 1).ZG937A  CK NUM         02633000
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02633100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02633200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02633300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02633400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02633500
.ZG937A               ANOP  ,                                           02633600
.*------------------------------------------------------------------    02633700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02633800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02633900
.ZG937A0              AIF   (K'&KEYRANGEEND LE 0).ZG937A1  OK           02634000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02634100
.ZG937A1              AIF   (K'&ZCVAL LE 0).ZG937A2  OK                 02634200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02634300
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02634400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02634500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02634600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02634700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02634800
.ZG937A2              ANOP  ,                                           02634900
.*-------------------------------------------------------------------   02635000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02635100
.ZG938                ANOP  ,                                           02635200
&ZTLC                 SETC 'GREATEROREQUAL'                             02635300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG939         02635400
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02635500
                      AIF   (N'&KEYREQTYPE LE 1).ZG938A  CK NUM         02635600
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02635700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02635800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02635900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02636000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02636100
.ZG938A               ANOP  ,                                           02636200
.*------------------------------------------------------------------    02636300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02636400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02636500
.ZG938A0              AIF   (K'&KEYRANGEEND LE 0).ZG938A1  OK           02636600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02636700
.ZG938A1              AIF   (K'&ZCVAL LE 0).ZG938A2  OK                 02636800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02636900
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02637000
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02637100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02637200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02637300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02637400
.ZG938A2              ANOP  ,                                           02637500
.*-------------------------------------------------------------------   02637600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02637700
.ZG939                ANOP  ,                                           02637800
&ZTLC                 SETC 'RANGE'                                      02637900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG943         02638000
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02638100
                      AIF   (N'&KEYREQTYPE LE 1).ZG939A  CK NUM         02638200
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02638300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02638400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02638500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02638600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02638700
.ZG939A               ANOP  ,                                           02638800
.*----------------------------------------------------------------***   02638900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02639000
                      AIF   (N'&KEYRANGEEND LE 1).ZG941A  CK NUM        02639100
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           02639200
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02639300
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02639400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02639500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02639600
.ZG941A               ANOP  ,                                           02639700
.*-------------------------------------------------------------------   02639800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02639900
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02640000
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02640100
                      AIF   (N'&KEYRANGEEND GT 1).ZG941B  MULTI PARMS   02640200
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02640300
.ZG941B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG941C             02640400
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02640500
&ZMS                  SETC  ' '         *KRQDA*                         02640600
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02640700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02640800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02640900
.ZG941C               ANOP  ,                                           02641000
.*-------------------------------------------------------------------   02641100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02641200
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG941R  NOT I/O     02641300
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG941R        02641400
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02641500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG941P               02641600
                      AIF   (K'&ZCGPR GT 2).ZG941Q                      02641700
                      AIF   ('&ZCGPR' EQ '0').ZG941Q                    02641800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02641900
                      AIF   (T'&ZCGPR NE 'N').ZG941Q  INVALID REG NAME  02642000
.ZG941P               ANOP  ,                                           02642100
                      AIF   (T'&ZCGPR NE 'N').ZG941R  NON NUMERIC       02642200
                      AIF   ('&ZCGPR' LT '2').ZG941Q                    02642300
                      AIF   ('&ZCGPR' LE '12').ZG941R                   02642400
.ZG941Q               ANOP  ,                                           02642500
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           02642600
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02642700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02642800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02642900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02643000
.ZG941R               ANOP  ,                                           02643100
.*------------------------------------------------------------------    02643200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02643300
.ZG943                ANOP  ,                                           02643400
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02643500
                      AIF   (K'&XKEYREQTYPE GT 0).ZG943E  VALID ARG     02643600
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG943D  OMITTED      02643700
&ZASYSLNDX            SETA  0                                           02643800
.ZG943A               ANOP  ,           POSITIONAL MACRO KEY            02643900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02644000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG943C           02644100
&ZTLC                 SETC 'KEYREQTYPE'                                 02644200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG943A  02644300
.ZG943B               ANOP  ,                                           02644400
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02644500
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       02644600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02644700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02644800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02644900
                      AGO   .ZG943E                                     02645000
.ZG943C               ANOP  ,                                           02645100
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02645200
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           02645300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02645400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02645500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02645600
&ZMS                  SETC  '&ZMS "EQUAL",'                             02645700
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02645800
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02645900
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02646000
                      MNOTE 8,' &ZMS '                                  02646100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02646200
                      AGO   .ZG943E                                     02646300
.ZG943D               ANOP  ,                                           02646400
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02646500
.ZG943E               ANOP  ,                                           02646600
.*------------------------------------------------------------------    02646700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02646800
.ZG944                ANOP  ,                                           02646900
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02647000
                      AIF   (K'&XKEYCOMPARE GT 0).ZG944E  VALID ARG     02647100
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG944D  OMITTED      02647200
&ZASYSLNDX            SETA  0                                           02647300
.ZG944A               ANOP  ,           POSITIONAL MACRO KEY            02647400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02647500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG944C           02647600
&ZTLC                 SETC 'KEYCOMPARE'                                 02647700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG944A  02647800
.ZG944B               ANOP  ,                                           02647900
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02648000
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       02648100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02648200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02648300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02648400
                      AGO   .ZG944E                                     02648500
.ZG944C               ANOP  ,                                           02648600
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02648700
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           02648800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02648900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02649000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02649100
&ZMS                  SETC  '&ZMS "NO"'                                 02649200
&ZMS                  SETC  '&ZMS OR "YES".'                            02649300
                      MNOTE 8,' &ZMS '                                  02649400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02649500
                      AGO   .ZG944E                                     02649600
.ZG944D               ANOP  ,                                           02649700
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02649800
.ZG944E               ANOP  ,                                           02649900
.*------------------------------------------------------------------    02650000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02650100
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02650200
.*-------------------------------------------------------------------   02650300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02650400
.ZG947                ANOP  ,                                           02650500
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG947A             02650600
&ZTLC                 SETC 'NO'                                         02650700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG948        02650800
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02650900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG947A  CK NUM        02651000
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02651100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02651200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02651300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02651400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02651500
.ZG947A               ANOP  ,                                           02651600
.*------------------------------------------------------------------    02651700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02651800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02651900
.ZG947A0              AIF   (K'&SECONDARYKEY LE 0).ZG947A1  OK          02652000
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02652100
.ZG947A1              AIF   (K'&SKEYREQTYPE LE 0).ZG947A2  OK           02652200
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02652300
.ZG947A2              AIF   (K'&SKEYRANGEEND LE 0).ZG947A3  OK          02652400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02652500
.ZG947A3              AIF   (K'&ZCVAL LE 0).ZG947A4  OK                 02652600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02652700
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           02652800
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02652900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02653000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02653100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02653200
.ZG947A4              ANOP  ,                                           02653300
.*-------------------------------------------------------------------   02653400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02653500
.ZG948                ANOP  ,                                           02653600
&ZTLC                 SETC 'YES'                                        02653700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG962        02653800
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02653900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG948A  CK NUM        02654000
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02654100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02654200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02654300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02654400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02654500
.ZG948A               ANOP  ,                                           02654600
.*----------------------------------------------------------------***   02654700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02654800
                      AIF   (N'&SECONDARYKEY LE 1).ZG950A  CK NUM       02654900
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           02655000
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02655100
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02655200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02655300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02655400
.ZG950A               ANOP  ,                                           02655500
.*-------------------------------------------------------------------   02655600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02655700
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02655800
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02655900
                      AIF   (N'&SECONDARYKEY GT 1).ZG950B  MULTI PARMS  02656000
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02656100
.ZG950B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG950C            02656200
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02656300
&ZMS                  SETC  ' '         *KRQDA*                         02656400
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02656500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02656600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02656700
.ZG950C               ANOP  ,                                           02656800
.*-------------------------------------------------------------------   02656900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02657000
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG950R  NOT I/O    02657100
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG950R       02657200
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02657300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG950P               02657400
                      AIF   (K'&ZCGPR GT 2).ZG950Q                      02657500
                      AIF   ('&ZCGPR' EQ '0').ZG950Q                    02657600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02657700
                      AIF   (T'&ZCGPR NE 'N').ZG950Q  INVALID REG NAME  02657800
.ZG950P               ANOP  ,                                           02657900
                      AIF   (T'&ZCGPR NE 'N').ZG950R  NON NUMERIC       02658000
                      AIF   ('&ZCGPR' LT '2').ZG950Q                    02658100
                      AIF   ('&ZCGPR' LE '12').ZG950R                   02658200
.ZG950Q               ANOP  ,                                           02658300
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           02658400
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02658500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02658600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02658700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02658800
.ZG950R               ANOP  ,                                           02658900
.*------------------------------------------------------------------    02659000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02659100
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02659200
.*-------------------------------------------------------------------   02659300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02659400
.ZG954                ANOP  ,                                           02659500
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG954A             02659600
&ZTLC                 SETC 'EQUAL'                                      02659700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG955        02659800
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02659900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG954A  CK NUM        02660000
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02660100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02660200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02660300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02660400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02660500
.ZG954A               ANOP  ,                                           02660600
.*------------------------------------------------------------------    02660700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02660800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02660900
.ZG954A0              AIF   (K'&SKEYRANGEEND LE 0).ZG954A1  OK          02661000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02661100
.ZG954A1              AIF   (K'&ZCVAL LE 0).ZG954A2  OK                 02661200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02661300
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02661400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02661500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02661600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02661700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02661800
.ZG954A2              ANOP  ,                                           02661900
.*-------------------------------------------------------------------   02662000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02662100
.ZG955                ANOP  ,                                           02662200
&ZTLC                 SETC 'LESSOREQUAL'                                02662300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG956        02662400
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02662500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG955A  CK NUM        02662600
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02662700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02662800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02662900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02663000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02663100
.ZG955A               ANOP  ,                                           02663200
.*------------------------------------------------------------------    02663300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02663400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02663500
.ZG955A0              AIF   (K'&SKEYRANGEEND LE 0).ZG955A1  OK          02663600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02663700
.ZG955A1              AIF   (K'&ZCVAL LE 0).ZG955A2  OK                 02663800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02663900
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02664000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02664100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02664200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02664300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02664400
.ZG955A2              ANOP  ,                                           02664500
.*-------------------------------------------------------------------   02664600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02664700
.ZG956                ANOP  ,                                           02664800
&ZTLC                 SETC 'GREATEROREQUAL'                             02664900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG957        02665000
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02665100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG956A  CK NUM        02665200
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02665300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02665400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02665500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02665600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02665700
.ZG956A               ANOP  ,                                           02665800
.*------------------------------------------------------------------    02665900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02666000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02666100
.ZG956A0              AIF   (K'&SKEYRANGEEND LE 0).ZG956A1  OK          02666200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02666300
.ZG956A1              AIF   (K'&ZCVAL LE 0).ZG956A2  OK                 02666400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02666500
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02666600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02666700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02666800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02666900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02667000
.ZG956A2              ANOP  ,                                           02667100
.*-------------------------------------------------------------------   02667200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02667300
.ZG957                ANOP  ,                                           02667400
&ZTLC                 SETC 'RANGE'                                      02667500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG961        02667600
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02667700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG957A  CK NUM        02667800
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02667900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02668000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02668100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02668200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02668300
.ZG957A               ANOP  ,                                           02668400
.*----------------------------------------------------------------***   02668500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02668600
                      AIF   (N'&SKEYRANGEEND LE 1).ZG959A  CK NUM       02668700
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           02668800
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02668900
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02669000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02669100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02669200
.ZG959A               ANOP  ,                                           02669300
.*-------------------------------------------------------------------   02669400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02669500
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02669600
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02669700
                      AIF   (N'&SKEYRANGEEND GT 1).ZG959B  MULTI PARMS  02669800
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02669900
.ZG959B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG959C            02670000
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02670100
&ZMS                  SETC  ' '         *KRQDA*                         02670200
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02670300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02670400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02670500
.ZG959C               ANOP  ,                                           02670600
.*-------------------------------------------------------------------   02670700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02670800
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG959R  NOT I/O    02670900
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG959R       02671000
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02671100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG959P               02671200
                      AIF   (K'&ZCGPR GT 2).ZG959Q                      02671300
                      AIF   ('&ZCGPR' EQ '0').ZG959Q                    02671400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02671500
                      AIF   (T'&ZCGPR NE 'N').ZG959Q  INVALID REG NAME  02671600
.ZG959P               ANOP  ,                                           02671700
                      AIF   (T'&ZCGPR NE 'N').ZG959R  NON NUMERIC       02671800
                      AIF   ('&ZCGPR' LT '2').ZG959Q                    02671900
                      AIF   ('&ZCGPR' LE '12').ZG959R                   02672000
.ZG959Q               ANOP  ,                                           02672100
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           02672200
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02672300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02672400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02672500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02672600
.ZG959R               ANOP  ,                                           02672700
.*------------------------------------------------------------------    02672800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02672900
.ZG961                ANOP  ,                                           02673000
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02673100
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG961E  VALID ARG    02673200
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG961D  OMITTED     02673300
&ZASYSLNDX            SETA  0                                           02673400
.ZG961A               ANOP  ,           POSITIONAL MACRO KEY            02673500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02673600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG961C           02673700
&ZTLC                 SETC 'SKEYREQTYPE'                                02673800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG961A  02673900
.ZG961B               ANOP  ,                                           02674000
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02674100
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      02674200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02674300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02674400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02674500
                      AGO   .ZG961E                                     02674600
.ZG961C               ANOP  ,                                           02674700
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02674800
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           02674900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02675000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02675100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02675200
&ZMS                  SETC  '&ZMS "EQUAL",'                             02675300
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02675400
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02675500
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02675600
                      MNOTE 8,' &ZMS '                                  02675700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02675800
                      AGO   .ZG961E                                     02675900
.ZG961D               ANOP  ,                                           02676000
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02676100
.ZG961E               ANOP  ,                                           02676200
.*------------------------------------------------------------------    02676300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02676400
.ZG962                ANOP  ,                                           02676500
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02676600
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG962E  VALID ARG    02676700
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG962D  OMITTED     02676800
&ZASYSLNDX            SETA  0                                           02676900
.ZG962A               ANOP  ,           POSITIONAL MACRO KEY            02677000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02677100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG962C           02677200
&ZTLC                 SETC 'SKEYCOMPARE'                                02677300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG962A  02677400
.ZG962B               ANOP  ,                                           02677500
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02677600
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      02677700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02677800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02677900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02678000
                      AGO   .ZG962E                                     02678100
.ZG962C               ANOP  ,                                           02678200
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02678300
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           02678400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02678500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02678600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02678700
&ZMS                  SETC  '&ZMS "NO"'                                 02678800
&ZMS                  SETC  '&ZMS OR "YES".'                            02678900
                      MNOTE 8,' &ZMS '                                  02679000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02679100
                      AGO   .ZG962E                                     02679200
.ZG962D               ANOP  ,                                           02679300
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02679400
.ZG962E               ANOP  ,                                           02679500
.*------------------------------------------------------------------    02679600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02679700
&XMOVETOKEY           SETC  ''          INITIALIZE XVARIABLE            02679800
.*-------------------------------------------------------------------   02679900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02680000
.ZG965                ANOP  ,                                           02680100
                      AIF   (K'&MOVETOKEY(1) LE 0).ZG965A               02680200
&ZTLC                 SETC 'UNCHANGED'                                  02680300
                      AIF   ('&MOVETOKEY(1)' NE '&ZTLC').ZG966          02680400
&XMOVETOKEY           SETC  'UNCHANGED'         SET KEYWORD             02680500
                      AIF   (N'&MOVETOKEY LE 1).ZG965A  CK NUM          02680600
&ZMS                  SETC  '"MOVETOKEY='       *KPOSA* MNOTE           02680700
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02680800
&ZMS                  SETC  '&ZMS "MOVETOKEY"'                          02680900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02681000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02681100
.ZG965A               ANOP  ,                                           02681200
.*------------------------------------------------------------------    02681300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02681400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02681500
.ZG965A0              AIF   (K'&LISTKEYINC LE 0).ZG965A1  OK            02681600
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02681700
.ZG965A1              AIF   (K'&LISTKEYAREA LE 0).ZG965A2  OK           02681800
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02681900
.ZG965A2              AIF   (K'&ZCVAL LE 0).ZG965A3  OK                 02682000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02682100
&ZMS                  SETC  '"MOVETOKEY'        *KMEIA* MNOTE           02682200
&ZMS                  SETC  '&ZMS.=&MOVETOKEY"'                         02682300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02682400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02682500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02682600
.ZG965A3              ANOP  ,                                           02682700
.*-------------------------------------------------------------------   02682800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02682900
.ZG966                ANOP  ,                                           02683000
&ZTLC                 SETC 'TARGETKEY'                                  02683100
                      AIF   ('&MOVETOKEY(1)' NE '&ZTLC').ZG967          02683200
&XMOVETOKEY           SETC  'TARGETKEY'         SET KEYWORD             02683300
                      AIF   (N'&MOVETOKEY LE 1).ZG966A  CK NUM          02683400
&ZMS                  SETC  '"MOVETOKEY='       *KPOSA* MNOTE           02683500
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02683600
&ZMS                  SETC  '&ZMS "MOVETOKEY"'                          02683700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02683800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02683900
.ZG966A               ANOP  ,                                           02684000
.*------------------------------------------------------------------    02684100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02684200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02684300
.ZG966A0              AIF   (K'&LISTKEYINC LE 0).ZG966A1  OK            02684400
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02684500
.ZG966A1              AIF   (K'&LISTKEYAREA LE 0).ZG966A2  OK           02684600
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02684700
.ZG966A2              AIF   (K'&ZCVAL LE 0).ZG966A3  OK                 02684800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02684900
&ZMS                  SETC  '"MOVETOKEY'        *KMEIA* MNOTE           02685000
&ZMS                  SETC  '&ZMS.=&MOVETOKEY"'                         02685100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02685200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02685300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02685400
.ZG966A3              ANOP  ,                                           02685500
.*-------------------------------------------------------------------   02685600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02685700
.ZG967                ANOP  ,                                           02685800
&ZTLC                 SETC 'LISTKEY'                                    02685900
                      AIF   ('&MOVETOKEY(1)' NE '&ZTLC').ZG974          02686000
&XMOVETOKEY           SETC  'LISTKEY'   SET KEYWORD                     02686100
                      AIF   (N'&MOVETOKEY LE 1).ZG967A  CK NUM          02686200
&ZMS                  SETC  '"MOVETOKEY='       *KPOSA* MNOTE           02686300
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02686400
&ZMS                  SETC  '&ZMS "MOVETOKEY"'                          02686500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02686600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02686700
.ZG967A               ANOP  ,                                           02686800
.*----------------------------------------------------------------***   02686900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02687000
                      AIF   (N'&LISTKEYINC LE 1).ZG969A  CK NUM         02687100
&ZMS                  SETC  '"LISTKEYINC='      *KPOSA* MNOTE           02687200
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         02687300
&ZMS                  SETC  '&ZMS "LISTKEYINC"'                         02687400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02687500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02687600
.ZG969A               ANOP  ,                                           02687700
.*-------------------------------------------------------------------   02687800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02687900
&ZXLISTKEYINC         SETC  'INPUT'     SET IN/OUTPUT                   02688000
&XLISTKEYINC          SETC  'NO'                                        02688100
                      AIF   (K'&LISTKEYINC(1) LE 0).ZG969B  PARM        02688200
&XLISTKEYINC          SETC  '&LISTKEYINC(1)'    SET XVARIABLE           02688300
                      AIF   (N'&LISTKEYINC GT 1).ZG969B  MULTI PARMS    02688400
&XLISTKEYINC          SETC  '&LISTKEYINC'       SET XVARIABLE           02688500
.ZG969B               ANOP  ,                                           02688600
.*-------------------------------------------------------------------   02688700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02688800
                      AIF   (K'&ZXLISTKEYINC LE 0).ZG969R  NOT I/O      02688900
         AIF   ('&XLISTKEYINC' EQ 'NO').ZG969R                          02689000
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZG969R         02689100
&ZCGPR                SETC  '&XLISTKEYINC'(2,K'&XLISTKEYINC-2)          02689200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG969P               02689300
                      AIF   (K'&ZCGPR GT 2).ZG969Q                      02689400
                      AIF   ('&ZCGPR' EQ '0').ZG969Q                    02689500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02689600
                      AIF   (T'&ZCGPR NE 'N').ZG969Q  INVALID REG NAME  02689700
.ZG969P               ANOP  ,                                           02689800
                      AIF   (T'&ZCGPR NE 'N').ZG969R  NON NUMERIC       02689900
                      AIF   ('&ZCGPR' LT '2').ZG969Q                    02690000
                      AIF   ('&ZCGPR' LE '12').ZG969R                   02690100
.ZG969Q               ANOP  ,                                           02690200
&ZMS                  SETC  '"LISTKEYINC='      *KGPRA* MNOTE           02690300
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         02690400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02690500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02690600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02690700
.ZG969R               ANOP  ,                                           02690800
.*----------------------------------------------------------------***   02690900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02691000
                      AIF   (N'&LISTKEYAREA LE 1).ZG972A  CK NUM        02691100
&ZMS                  SETC  '"LISTKEYAREA='     *KPOSA* MNOTE           02691200
&ZMS                  SETC  '&ZMS.&LISTKEYAREA"'                        02691300
&ZMS                  SETC  '&ZMS "LISTKEYAREA"'                        02691400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02691500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02691600
.ZG972A               ANOP  ,                                           02691700
.*-------------------------------------------------------------------   02691800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02691900
&ZXLISTKEYAREA        SETC  'INPUT'     SET IN/OUTPUT                   02692000
&XLISTKEYAREA         SETC  'NO'                                        02692100
                      AIF   (K'&LISTKEYAREA(1) LE 0).ZG972B  PARM       02692200
&XLISTKEYAREA         SETC  '&LISTKEYAREA(1)'   SET XVARIABLE           02692300
                      AIF   (N'&LISTKEYAREA GT 1).ZG972B  MULTI PARMS   02692400
&XLISTKEYAREA         SETC  '&LISTKEYAREA'      SET XVARIABLE           02692500
.ZG972B               ANOP  ,                                           02692600
.*-------------------------------------------------------------------   02692700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02692800
                      AIF   (K'&ZXLISTKEYAREA LE 0).ZG972R  NOT I/O     02692900
         AIF   ('&XLISTKEYAREA' EQ 'NO').ZG972R                         02693000
                      AIF   ('&XLISTKEYAREA'(1,1) NE '(').ZG972R        02693100
&ZCGPR                SETC  '&XLISTKEYAREA'(2,K'&XLISTKEYAREA-2)        02693200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG972P               02693300
                      AIF   (K'&ZCGPR GT 2).ZG972Q                      02693400
                      AIF   ('&ZCGPR' EQ '0').ZG972Q                    02693500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02693600
                      AIF   (T'&ZCGPR NE 'N').ZG972Q  INVALID REG NAME  02693700
.ZG972P               ANOP  ,                                           02693800
                      AIF   (T'&ZCGPR NE 'N').ZG972R  NON NUMERIC       02693900
                      AIF   ('&ZCGPR' LT '2').ZG972Q                    02694000
                      AIF   ('&ZCGPR' LE '12').ZG972R                   02694100
.ZG972Q               ANOP  ,                                           02694200
&ZMS                  SETC  '"LISTKEYAREA='     *KGPRA* MNOTE           02694300
&ZMS                  SETC  '&ZMS.&LISTKEYAREA"'                        02694400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02694500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02694600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02694700
.ZG972R               ANOP  ,                                           02694800
.*------------------------------------------------------------------    02694900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02695000
.ZG974                ANOP  ,                                           02695100
&ZXMOVETOKEY          SETC  'INPUT'     SET IN/OUTPUT                   02695200
                      AIF   (K'&XMOVETOKEY GT 0).ZG974E  VALID ARG      02695300
                      AIF   (T'&MOVETOKEY EQ 'O').ZG974D  OMITTED       02695400
&ZASYSLNDX            SETA  0                                           02695500
.ZG974A               ANOP  ,           POSITIONAL MACRO KEY            02695600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02695700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG974C           02695800
&ZTLC                 SETC 'MOVETOKEY'                                  02695900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG974A  02696000
.ZG974B               ANOP  ,                                           02696100
&ZXMOVETOKEY          SETC  ''          RESET IN/OUTPUT                 02696200
&ZMS                  SETC  'THE "MOVETOKEY" KEY'  *KOPTA* MNOTE        02696300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02696400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02696500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02696600
                      AGO   .ZG974E                                     02696700
.ZG974C               ANOP  ,                                           02696800
&ZXMOVETOKEY          SETC  ''          RESET IN/OUTPUT                 02696900
&ZMS                  SETC  '"MOVETOKEY='       *KUKWA* MNOTE           02697000
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02697100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02697200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02697300
&ZMS                  SETC  '&ZMS "UNCHANGED",'                         02697400
&ZMS                  SETC  '&ZMS "TARGETKEY",'                         02697500
&ZMS                  SETC  '&ZMS OR "LISTKEY".'                        02697600
                      MNOTE 8,' &ZMS '                                  02697700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02697800
                      AGO   .ZG974E                                     02697900
.ZG974D               ANOP  ,                                           02698000
&XMOVETOKEY           SETC  'UNCHANGED'         SET DEFAULT KEYWORD     02698100
.ZG974E               ANOP  ,                                           02698200
.*------------------------------------------------------------------    02698300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02698400
&XMOVETOSKEY          SETC  ''          INITIALIZE XVARIABLE            02698500
.*-------------------------------------------------------------------   02698600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02698700
.ZG977                ANOP  ,                                           02698800
                      AIF   (K'&MOVETOSKEY(1) LE 0).ZG977A              02698900
&ZTLC                 SETC 'UNCHANGED'                                  02699000
                      AIF   ('&MOVETOSKEY(1)' NE '&ZTLC').ZG978         02699100
&XMOVETOSKEY          SETC  'UNCHANGED'         SET KEYWORD             02699200
                      AIF   (N'&MOVETOSKEY LE 1).ZG977A  CK NUM         02699300
&ZMS                  SETC  '"MOVETOSKEY='      *KPOSA* MNOTE           02699400
&ZMS                  SETC  '&ZMS.&MOVETOSKEY"'                         02699500
&ZMS                  SETC  '&ZMS "MOVETOSKEY"'                         02699600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02699700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02699800
.ZG977A               ANOP  ,                                           02699900
.*-------------------------------------------------------------------   02700000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02700100
.ZG978                ANOP  ,                                           02700200
&ZTLC                 SETC 'TARGETKEY'                                  02700300
                      AIF   ('&MOVETOSKEY(1)' NE '&ZTLC').ZG979         02700400
&XMOVETOSKEY          SETC  'TARGETKEY'         SET KEYWORD             02700500
                      AIF   (N'&MOVETOSKEY LE 1).ZG978A  CK NUM         02700600
&ZMS                  SETC  '"MOVETOSKEY='      *KPOSA* MNOTE           02700700
&ZMS                  SETC  '&ZMS.&MOVETOSKEY"'                         02700800
&ZMS                  SETC  '&ZMS "MOVETOSKEY"'                         02700900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02701000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02701100
.ZG978A               ANOP  ,                                           02701200
.*------------------------------------------------------------------    02701300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02701400
.ZG979                ANOP  ,                                           02701500
&ZXMOVETOSKEY         SETC  'INPUT'     SET IN/OUTPUT                   02701600
                      AIF   (K'&XMOVETOSKEY GT 0).ZG979E  VALID ARG     02701700
                      AIF   (T'&MOVETOSKEY EQ 'O').ZG979D  OMITTED      02701800
&ZASYSLNDX            SETA  0                                           02701900
.ZG979A               ANOP  ,           POSITIONAL MACRO KEY            02702000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02702100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG979C           02702200
&ZTLC                 SETC 'MOVETOSKEY'                                 02702300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG979A  02702400
.ZG979B               ANOP  ,                                           02702500
&ZXMOVETOSKEY         SETC  ''          RESET IN/OUTPUT                 02702600
&ZMS                  SETC  'THE "MOVETOSKEY" KEY'  *KOPTA* MNOTE       02702700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02702800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02702900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02703000
                      AGO   .ZG979E                                     02703100
.ZG979C               ANOP  ,                                           02703200
&ZXMOVETOSKEY         SETC  ''          RESET IN/OUTPUT                 02703300
&ZMS                  SETC  '"MOVETOSKEY='      *KUKWA* MNOTE           02703400
&ZMS                  SETC  '&ZMS.&MOVETOSKEY"'                         02703500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02703600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02703700
&ZMS                  SETC  '&ZMS "UNCHANGED"'                          02703800
&ZMS                  SETC  '&ZMS OR "TARGETKEY".'                      02703900
                      MNOTE 8,' &ZMS '                                  02704000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02704100
                      AGO   .ZG979E                                     02704200
.ZG979D               ANOP  ,                                           02704300
&XMOVETOSKEY          SETC  'UNCHANGED'         SET DEFAULT KEYWORD     02704400
.ZG979E               ANOP  ,                                           02704500
.*------------------------------------------------------------------    02704600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02704700
.ZG980                ANOP  ,                                           02704800
&ZXLISTTYPE           SETC  'INPUT'     SET IN/OUTPUT                   02704900
                      AIF   (K'&XLISTTYPE GT 0).ZG980E  VALID ARG       02705000
                      AIF   (T'&LISTTYPE EQ 'O').ZG980D  OMITTED        02705100
&ZASYSLNDX            SETA  0                                           02705200
.ZG980A               ANOP  ,           POSITIONAL MACRO KEY            02705300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02705400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG980C           02705500
&ZTLC                 SETC 'LISTTYPE'                                   02705600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG980A  02705700
.ZG980B               ANOP  ,                                           02705800
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02705900
&ZMS                  SETC  'THE "LISTTYPE" KEY'  *KOPTA* MNOTE         02706000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02706100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02706200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02706300
                      AGO   .ZG980E                                     02706400
.ZG980C               ANOP  ,                                           02706500
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02706600
&ZMS                  SETC  '"LISTTYPE='        *KUKWA* MNOTE           02706700
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02706800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02706900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02707000
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02707100
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02707200
                      MNOTE 8,' &ZMS '                                  02707300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02707400
                      AGO   .ZG980E                                     02707500
.ZG980D               ANOP  ,                                           02707600
&XLISTTYPE            SETC  'NAMELIST'  SET DEFAULT KEYWORD             02707700
.ZG980E               ANOP  ,                                           02707800
.*------------------------------------------------------------------    02707900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02708000
                      AIF   (K'&LISTTYPE(1) GT 0).ZG980F  PARM          02708100
&XLISTTYPE            SETC  ''          ENSURE NULL KEYWORD             02708200
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02708300
&ZMS                  SETC  'THE'                                       02708400
&ZMS                  SETC  '&ZMS "LISTTYPE" KEY AND ITS'               02708500
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02708600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02708700
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02708800
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02708900
                      MNOTE 8,' &ZMS '                                  02709000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02709100
.ZG980F               ANOP  ,                                           02709200
.*------------------------------------------------------------------    02709300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02709400
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02709500
.*-------------------------------------------------------------------   02709600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02709700
.ZG983                ANOP  ,                                           02709800
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG983A             02709900
&ZTLC                 SETC 'NO'                                         02710000
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG984        02710100
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02710200
                      AIF   (N'&LISTCOMPARE LE 1).ZG983A  CK NUM        02710300
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02710400
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02710500
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02710600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02710700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02710800
.ZG983A               ANOP  ,                                           02710900
.*------------------------------------------------------------------    02711000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02711100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02711200
.ZG983A0              AIF   (K'&LISTNUM LE 0).ZG983A1  OK               02711300
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02711400
.ZG983A1              AIF   (K'&AUTHCOMPARE LE 0).ZG983A2  OK           02711500
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02711600
.ZG983A2              AIF   (K'&AUTHCOMP LE 0).ZG983A3  OK              02711700
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02711800
.ZG983A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG983A4  OK          02711900
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02712000
.ZG983A4              AIF   (K'&ZCVAL LE 0).ZG983A5  OK                 02712100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02712200
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           02712300
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02712400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02712500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02712600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02712700
.ZG983A5              ANOP  ,                                           02712800
.*-------------------------------------------------------------------   02712900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02713000
.ZG984                ANOP  ,                                           02713100
&ZTLC                 SETC 'YES'                                        02713200
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG1001       02713300
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02713400
                      AIF   (N'&LISTCOMPARE LE 1).ZG984A  CK NUM        02713500
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02713600
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02713700
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02713800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02713900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02714000
.ZG984A               ANOP  ,                                           02714100
.*----------------------------------------------------------------***   02714200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02714300
                      AIF   (N'&LISTNUM LE 1).ZG986A  CK NUM            02714400
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           02714500
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02714600
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02714700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02714800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02714900
.ZG986A               ANOP  ,                                           02715000
.*-------------------------------------------------------------------   02715100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02715200
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02715300
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02715400
                      AIF   (N'&LISTNUM GT 1).ZG986B  MULTI PARMS       02715500
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02715600
.ZG986B               AIF   (K'&LISTNUM(1) GT 0).ZG986C                 02715700
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02715800
&ZMS                  SETC  ' '         *KRQDA*                         02715900
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02716000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02716100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02716200
.ZG986C               ANOP  ,                                           02716300
.*-------------------------------------------------------------------   02716400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02716500
                      AIF   (K'&ZXLISTNUM LE 0).ZG986R  NOT I/O         02716600
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG986R            02716700
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02716800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG986P               02716900
                      AIF   (K'&ZCGPR GT 2).ZG986Q                      02717000
                      AIF   ('&ZCGPR' EQ '0').ZG986Q                    02717100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02717200
                      AIF   (T'&ZCGPR NE 'N').ZG986Q  INVALID REG NAME  02717300
.ZG986P               ANOP  ,                                           02717400
                      AIF   (T'&ZCGPR NE 'N').ZG986R  NON NUMERIC       02717500
                      AIF   ('&ZCGPR' LT '2').ZG986Q                    02717600
                      AIF   ('&ZCGPR' LE '12').ZG986R                   02717700
.ZG986Q               ANOP  ,                                           02717800
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           02717900
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02718000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02718100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02718200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02718300
.ZG986R               ANOP  ,                                           02718400
.*------------------------------------------------------------------    02718500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02718600
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02718700
.*-------------------------------------------------------------------   02718800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02718900
.ZG989                ANOP  ,                                           02719000
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG989A             02719100
&ZTLC                 SETC 'NO'                                         02719200
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG990        02719300
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02719400
                      AIF   (N'&AUTHCOMPARE LE 1).ZG989A  CK NUM        02719500
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02719600
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02719700
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02719800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02719900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02720000
.ZG989A               ANOP  ,                                           02720100
.*------------------------------------------------------------------    02720200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02720300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02720400
.ZG989A0              AIF   (K'&AUTHCOMP LE 0).ZG989A1  OK              02720500
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02720600
.ZG989A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG989A2  OK          02720700
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02720800
.ZG989A2              AIF   (K'&ZCVAL LE 0).ZG989A3  OK                 02720900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02721000
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           02721100
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02721200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02721300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02721400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02721500
.ZG989A3              ANOP  ,                                           02721600
.*-------------------------------------------------------------------   02721700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02721800
.ZG990                ANOP  ,                                           02721900
&ZTLC                 SETC 'YES'                                        02722000
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG999        02722100
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02722200
                      AIF   (N'&AUTHCOMPARE LE 1).ZG990A  CK NUM        02722300
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02722400
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02722500
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02722600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02722700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02722800
.ZG990A               ANOP  ,                                           02722900
.*----------------------------------------------------------------***   02723000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02723100
                      AIF   (N'&AUTHCOMP LE 1).ZG992A  CK NUM           02723200
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           02723300
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02723400
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02723500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02723600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02723700
.ZG992A               ANOP  ,                                           02723800
.*-------------------------------------------------------------------   02723900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02724000
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02724100
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02724200
                      AIF   (N'&AUTHCOMP GT 1).ZG992B  MULTI PARMS      02724300
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02724400
.ZG992B               AIF   (K'&AUTHCOMP(1) GT 0).ZG992C                02724500
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02724600
&ZMS                  SETC  ' '         *KRQDA*                         02724700
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02724800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02724900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02725000
.ZG992C               ANOP  ,                                           02725100
.*-------------------------------------------------------------------   02725200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02725300
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG992R  NOT I/O        02725400
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG992R           02725500
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02725600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG992P               02725700
                      AIF   (K'&ZCGPR GT 2).ZG992Q                      02725800
                      AIF   ('&ZCGPR' EQ '0').ZG992Q                    02725900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02726000
                      AIF   (T'&ZCGPR NE 'N').ZG992Q  INVALID REG NAME  02726100
.ZG992P               ANOP  ,                                           02726200
                      AIF   (T'&ZCGPR NE 'N').ZG992R  NON NUMERIC       02726300
                      AIF   ('&ZCGPR' LT '2').ZG992Q                    02726400
                      AIF   ('&ZCGPR' LE '12').ZG992R                   02726500
.ZG992Q               ANOP  ,                                           02726600
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           02726700
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02726800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02726900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02727000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02727100
.ZG992R               ANOP  ,                                           02727200
.*----------------------------------------------------------------***   02727300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02727400
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG994A  CK NUM       02727500
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           02727600
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02727700
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02727800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02727900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02728000
.ZG994A               ANOP  ,                                           02728100
.*-------------------------------------------------------------------   02728200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02728300
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02728400
.ZG995A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG996A                  02728500
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02728600
.*-------------------------------------------------------------------   02728700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02728800
.ZG996A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG997A            02728900
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02729000
.*-------------------------------------------------------------------   02729100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02729200
.ZG997A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG997C  KEYWORD     02729300
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG997B            02729400
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           02729500
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02729600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02729700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02729800
&ZMS                  SETC  '&ZMS "EQUAL"'                              02729900
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02730000
                      MNOTE 8,' &ZMS '                                  02730100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02730200
.ZG997B               ANOP  ,                                           02730300
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02730400
.ZG997C               ANOP  ,                                           02730500
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02730600
.*-------------------------------------------------------------------   02730700
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02730800
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG997D  KEY           02730900
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG997D  PARM      02731000
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           02731100
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02731200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02731300
&ZMS                  SETC  '&ZMS '                                     02731400
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02731500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02731600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02731700
.ZG997D               ANOP  ,                                           02731800
.*------------------------------------------------------------------    02731900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02732000
.ZG999                ANOP  ,                                           02732100
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02732200
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG999E  VALID ARG    02732300
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG999D  OMITTED     02732400
&ZASYSLNDX            SETA  0                                           02732500
.ZG999A               ANOP  ,           POSITIONAL MACRO KEY            02732600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02732700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG999C           02732800
&ZTLC                 SETC 'AUTHCOMPARE'                                02732900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG999A  02733000
.ZG999B               ANOP  ,                                           02733100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02733200
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      02733300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02733400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02733500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02733600
                      AGO   .ZG999E                                     02733700
.ZG999C               ANOP  ,                                           02733800
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02733900
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           02734000
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02734100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02734200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02734300
&ZMS                  SETC  '&ZMS "NO"'                                 02734400
&ZMS                  SETC  '&ZMS OR "YES".'                            02734500
                      MNOTE 8,' &ZMS '                                  02734600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02734700
                      AGO   .ZG999E                                     02734800
.ZG999D               ANOP  ,                                           02734900
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02735000
.ZG999E               ANOP  ,                                           02735100
.*------------------------------------------------------------------    02735200
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02735300
                      AIF   (K'&LISTNUM(1) GT 0).ZG999F  KEY            02735400
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG999F  PARM       02735500
&ZMS                  SETC  '"AUTHCOMPARE'      *KDEPA* MNOTE           02735600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02735700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02735800
&ZMS                  SETC  '&ZMS '                                     02735900
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02736000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02736100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02736200
.ZG999F               ANOP  ,                                           02736300
.*------------------------------------------------------------------    02736400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02736500
.ZG1001               ANOP  ,                                           02736600
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02736700
                      AIF   (K'&XLISTCOMPARE GT 0).ZG1001E  VALID ARG   02736800
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG1001D  OMITTED    02736900
&ZASYSLNDX            SETA  0                                           02737000
.ZG1001A              ANOP  ,           POSITIONAL MACRO KEY            02737100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02737200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1001C          02737300
&ZTLC                 SETC 'LISTCOMPARE'                                02737400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1001A 02737500
.ZG1001B              ANOP  ,                                           02737600
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02737700
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      02737800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02737900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02738000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02738100
                      AGO   .ZG1001E                                    02738200
.ZG1001C              ANOP  ,                                           02738300
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02738400
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           02738500
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02738600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02738700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02738800
&ZMS                  SETC  '&ZMS "NO"'                                 02738900
&ZMS                  SETC  '&ZMS OR "YES".'                            02739000
                      MNOTE 8,' &ZMS '                                  02739100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02739200
                      AGO   .ZG1001E                                    02739300
.ZG1001D              ANOP  ,                                           02739400
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02739500
.ZG1001E              ANOP  ,                                           02739600
.*------------------------------------------------------------------    02739700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02739800
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02739900
.*-------------------------------------------------------------------   02740000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02740100
.ZG1004               ANOP  ,                                           02740200
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG1004A            02740300
&ZTLC                 SETC 'NO'                                         02740400
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1005       02740500
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02740600
                      AIF   (N'&VERSCOMPARE LE 1).ZG1004A  CK NUM       02740700
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02740800
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02740900
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02741000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02741100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02741200
.ZG1004A              ANOP  ,                                           02741300
.*------------------------------------------------------------------    02741400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02741500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02741600
.ZG1004A0             AIF   (K'&VERSCOMP LE 0).ZG1004A1  OK             02741700
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02741800
.ZG1004A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1004A2  OK         02741900
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02742000
.ZG1004A2             AIF   (K'&ZCVAL LE 0).ZG1004A3  OK                02742100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02742200
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           02742300
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02742400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02742500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02742600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02742700
.ZG1004A3             ANOP  ,                                           02742800
.*-------------------------------------------------------------------   02742900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02743000
.ZG1005               ANOP  ,                                           02743100
&ZTLC                 SETC 'BYENTRY'                                    02743200
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1006       02743300
&XVERSCOMPARE         SETC  'BYENTRY'   SET KEYWORD                     02743400
                      AIF   (N'&VERSCOMPARE LE 1).ZG1005A  CK NUM       02743500
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02743600
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02743700
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02743800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02743900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02744000
.ZG1005A              ANOP  ,                                           02744100
.*------------------------------------------------------------------    02744200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02744300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02744400
.ZG1005A0             AIF   (K'&VERSCOMP LE 0).ZG1005A1  OK             02744500
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02744600
.ZG1005A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1005A2  OK         02744700
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02744800
.ZG1005A2             AIF   (K'&ZCVAL LE 0).ZG1005A3  OK                02744900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02745000
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           02745100
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02745200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02745300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02745400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02745500
.ZG1005A3             ANOP  ,                                           02745600
.*-------------------------------------------------------------------   02745700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02745800
.ZG1006               ANOP  ,                                           02745900
&ZTLC                 SETC 'YES'                                        02746000
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1015       02746100
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02746200
                      AIF   (N'&VERSCOMPARE LE 1).ZG1006A  CK NUM       02746300
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02746400
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02746500
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02746600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02746700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02746800
.ZG1006A              ANOP  ,                                           02746900
.*----------------------------------------------------------------***   02747000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02747100
                      AIF   (N'&VERSCOMP LE 1).ZG1008A  CK NUM          02747200
&ZMS                  SETC  '"VERSCOMP='        *KPOSA* MNOTE           02747300
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02747400
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02747500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02747600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02747700
.ZG1008A              ANOP  ,                                           02747800
.*-------------------------------------------------------------------   02747900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02748000
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02748100
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02748200
                      AIF   (N'&VERSCOMP GT 1).ZG1008B  MULTI PARMS     02748300
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02748400
.ZG1008B              AIF   (K'&VERSCOMP(1) GT 0).ZG1008C               02748500
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02748600
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          02748700
&ZMS                  SETC  '&ZMS , "VERSCOMP" KEY AND ITS'             02748800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02748900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02749000
.ZG1008C              ANOP  ,                                           02749100
.*-------------------------------------------------------------------   02749200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02749300
                      AIF   (K'&ZXVERSCOMP LE 0).ZG1008R  NOT I/O       02749400
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG1008R          02749500
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02749600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1008P              02749700
                      AIF   (K'&ZCGPR GT 2).ZG1008Q                     02749800
                      AIF   ('&ZCGPR' EQ '0').ZG1008Q                   02749900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02750000
                      AIF   (T'&ZCGPR NE 'N').ZG1008Q  INVALID REG NAME 02750100
.ZG1008P              ANOP  ,                                           02750200
                      AIF   (T'&ZCGPR NE 'N').ZG1008R  NON NUMERIC      02750300
                      AIF   ('&ZCGPR' LT '2').ZG1008Q                   02750400
                      AIF   ('&ZCGPR' LE '12').ZG1008R                  02750500
.ZG1008Q              ANOP  ,                                           02750600
&ZMS                  SETC  '"VERSCOMP='        *KGPRA* MNOTE           02750700
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02750800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02750900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02751000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02751100
.ZG1008R              ANOP  ,                                           02751200
.*----------------------------------------------------------------***   02751300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02751400
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG1010A  CK NUM      02751500
&ZMS                  SETC  '"VERSCOMPTYPE='    *KPOSA* MNOTE           02751600
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02751700
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02751800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02751900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02752000
.ZG1010A              ANOP  ,                                           02752100
.*-------------------------------------------------------------------   02752200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02752300
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02752400
.ZG1011A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG1012A                02752500
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02752600
.*-------------------------------------------------------------------   02752700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02752800
.ZG1012A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG1013A          02752900
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02753000
.*-------------------------------------------------------------------   02753100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02753200
.ZG1013A              AIF   (K'&XVERSCOMPTYPE GT 0).ZG1013C  KEYWORD    02753300
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1013B           02753400
&ZMS                  SETC  '"VERSCOMPTYPE='    *KUKWA* MNOTE           02753500
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02753600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02753700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02753800
&ZMS                  SETC  '&ZMS "EQUAL"'                              02753900
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02754000
                      MNOTE 8,' &ZMS '                                  02754100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02754200
.ZG1013B              ANOP  ,                                           02754300
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02754400
.ZG1013C              ANOP  ,                                           02754500
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02754600
.*-------------------------------------------------------------------   02754700
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02754800
                      AIF   (K'&VERSCOMP(1) GT 0).ZG1013D  KEY          02754900
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1013D  PARM     02755000
&ZMS                  SETC  '"VERSCOMPTYPE'     *KDEPA* MNOTE           02755100
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02755200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02755300
&ZMS                  SETC  '&ZMS '                                     02755400
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02755500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02755600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02755700
.ZG1013D              ANOP  ,                                           02755800
.*------------------------------------------------------------------    02755900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02756000
.ZG1015               ANOP  ,                                           02756100
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02756200
                      AIF   (K'&XVERSCOMPARE GT 0).ZG1015E  VALID ARG   02756300
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG1015D  OMITTED    02756400
&ZASYSLNDX            SETA  0                                           02756500
.ZG1015A              ANOP  ,           POSITIONAL MACRO KEY            02756600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02756700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1015C          02756800
&ZTLC                 SETC 'VERSCOMPARE'                                02756900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1015A 02757000
.ZG1015B              ANOP  ,                                           02757100
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02757200
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'  *KOPTA* MNOTE      02757300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02757400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02757500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02757600
                      AGO   .ZG1015E                                    02757700
.ZG1015C              ANOP  ,                                           02757800
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02757900
&ZMS                  SETC  '"VERSCOMPARE='     *KUKWA* MNOTE           02758000
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02758100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02758200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02758300
&ZMS                  SETC  '&ZMS "NO",'                                02758400
&ZMS                  SETC  '&ZMS "BYENTRY",'                           02758500
&ZMS                  SETC  '&ZMS OR "YES".'                            02758600
                      MNOTE 8,' &ZMS '                                  02758700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02758800
                      AGO   .ZG1015E                                    02758900
.ZG1015D              ANOP  ,                                           02759000
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02759100
.ZG1015E              ANOP  ,                                           02759200
.*----------------------------------------------------------------***   02759300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02759400
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            02759500
                      AIF   (K'&BUFLIST LE 0).ZG1017C                   02759600
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   02759700
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   02759800
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   02759900
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      02760000
                      AIF   (N'&BUFLIST GT 1).ZG1017A                   02760100
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              02760200
.ZG1017A              AIF   (N'&BUFLIST LE 1).ZG1017B  CK NUM           02760300
&ZMS                  SETC  '"BUFLIST='         *KPOSA* MNOTE           02760400
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02760500
&ZMS                  SETC  '&ZMS "BUFLIST"'                            02760600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02760700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02760800
.ZG1017B              AIF   (K'&XBUFLIST GT 0).ZG1017C  ONE PARM        02760900
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02761000
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02761100
&ZMS                  SETC  ' '         *KRQDA*                         02761200
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                02761300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02761400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02761500
.ZG1017C              ANOP  ,                                           02761600
.*----------------------------------------------------------------***   02761700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02761800
                      AIF   (K'&BUFFER LE 0).ZG1045D  NO ME KEY         02761900
                      AIF   (N'&BUFFER LE 1).ZG1045A  CK NUM            02762000
&ZMS                  SETC  '"BUFFER='  *KPOSA* MNOTE                   02762100
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02762200
&ZMS                  SETC  '&ZMS "BUFFER"'                             02762300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02762400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02762500
.ZG1045A              AIF   (K'&XDATAREA LE 0).ZG1045B                  02762600
&ZMS                  SETC  '"BUFFER'   *KMEKA* MNOTE                   02762700
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02762800
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02762900
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          02763000
                      MNOTE 8,' &ZMS KEY.'                              02763100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02763200
                      AGO   .ZG1045D                                    02763300
.*                                                                      02763400
.ZG1045B              ANOP  ,                                           02763500
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   02763600
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   02763700
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   02763800
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      02763900
                      AIF   (N'&BUFFER GT 1).ZG1045C                    02764000
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              02764100
.ZG1045C              AIF   (K'&XBUFFER GT 0).ZG1045D  ONE PARM         02764200
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02764300
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 02764400
&ZMS                  SETC  ' '         *KRQDA*                         02764500
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 02764600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02764700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02764800
.ZG1045D              ANOP  ,                                           02764900
.*------------------------------------------------------------------    02765000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           02765100
                      AIF   (K'&XDATAREA GT 0).ZG1057B                  02765200
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02765300
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02765400
&XDATAREA             SETC  ''          ENSURE NULL                     02765500
&XBUFLIST             SETC  ''          ENSURE NULL                     02765600
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       02765700
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         02765800
&ZMS                  SETC  '&ZMS REQUIRED:'                            02765900
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            02766000
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           02766100
                      MNOTE 8,' &ZMS '                                  02766200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02766300
.ZG1057B              ANOP  ,                                           02766400
.*-------------------------------------------------------------------   02766500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02766600
                      AIF   (T'&BUFLIST  EQ 'O').ZG1045  OMITTED        02766700
.ZG1017               AIF   ('&XDATAREA' NE 'BUFLIST').ZG1045           02766800
.*-------------------------------------------------------------------   02766900
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02767000
&ZCVAL                SETC ''           ERROR KEY FIELD                 02767100
.ZG1017I0             AIF   (K'&BUFSIZE LE 0).ZG1017I1                  02767200
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          02767300
.ZG1017I1             AIF   (K'&ZCVAL LE 0).ZG1017J  KEY                02767400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02767500
&ZMS                  SETC  '"BUFLIST'  *KMEIA* MNOTE                   02767600
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           02767700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02767800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02767900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02768000
.ZG1017J              ANOP  ,                                           02768100
.*-------------------------------------------------------------------   02768200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02768300
                      AIF   (K'&ZXBUFLIST LE 0).ZG1017R  NOT I/O        02768400
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG1017R           02768500
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                02768600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1017P              02768700
                      AIF   (K'&ZCGPR GT 2).ZG1017Q                     02768800
                      AIF   ('&ZCGPR' EQ '0').ZG1017Q                   02768900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02769000
                      AIF   (T'&ZCGPR NE 'N').ZG1017Q  INVALID REG NAME 02769100
.ZG1017P              ANOP  ,                                           02769200
                      AIF   (T'&ZCGPR NE 'N').ZG1017R  NON NUMERIC      02769300
                      AIF   ('&ZCGPR' LT '2').ZG1017Q                   02769400
                      AIF   ('&ZCGPR' LE '12').ZG1017R                  02769500
.ZG1017Q              ANOP  ,                                           02769600
&ZMS                  SETC  '"BUFLIST='         *KGPRA* MNOTE           02769700
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02769800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02769900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02770000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02770100
.ZG1017R              ANOP  ,                                           02770200
.*------------------------------------------------------------------    02770300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02770400
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            02770500
.*-------------------------------------------------------------------   02770600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02770700
.ZG1020               ANOP  ,                                           02770800
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG1020A            02770900
&ZTLC                 SETC 'VIRTUAL'                                    02771000
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1032       02771100
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     02771200
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1020A  CK NUM       02771300
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           02771400
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02771500
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02771600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02771700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02771800
.ZG1020A              ANOP  ,                                           02771900
.*------------------------------------------------------------------    02772000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02772100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02772200
.ZG1020A0             AIF   (K'&BUFADDRSIZE LE 0).ZG1020A1  OK          02772300
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     02772400
.ZG1020A1             AIF   (K'&ZCVAL LE 0).ZG1020A2  OK                02772500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02772600
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           02772700
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02772800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02772900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02773000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02773100
.ZG1020A2             ANOP  ,                                           02773200
.*------------------------------------------------------------------    02773300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02773400
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02773500
.*-------------------------------------------------------------------   02773600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02773700
.ZG1023               ANOP  ,                                           02773800
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1023A               02773900
&ZTLC                 SETC 'YES'                                        02774000
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1027          02774100
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02774200
                      AIF   (N'&PAGEABLE LE 1).ZG1023A  CK NUM          02774300
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02774400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02774500
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02774600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02774700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02774800
.ZG1023A              ANOP  ,                                           02774900
.*----------------------------------------------------------------***   02775000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02775100
                      AIF   (N'&BUFSTGKEY LE 1).ZG1025A  CK NUM         02775200
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           02775300
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02775400
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02775500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02775600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02775700
.ZG1025A              ANOP  ,                                           02775800
.*-------------------------------------------------------------------   02775900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02776000
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02776100
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02776200
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1025B  PARM        02776300
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02776400
                      AIF   (N'&BUFSTGKEY GT 1).ZG1025B  MULTI PARMS    02776500
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02776600
.ZG1025B              ANOP  ,                                           02776700
.*-------------------------------------------------------------------   02776800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02776900
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1025R  NOT I/O      02777000
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1025R                 02777100
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1025R         02777200
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02777300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1025P              02777400
                      AIF   (K'&ZCGPR GT 2).ZG1025Q                     02777500
                      AIF   ('&ZCGPR' EQ '0').ZG1025Q                   02777600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02777700
                      AIF   (T'&ZCGPR NE 'N').ZG1025Q  INVALID REG NAME 02777800
.ZG1025P              ANOP  ,                                           02777900
                      AIF   (T'&ZCGPR NE 'N').ZG1025R  NON NUMERIC      02778000
                      AIF   ('&ZCGPR' LT '2').ZG1025Q                   02778100
                      AIF   ('&ZCGPR' LE '12').ZG1025R                  02778200
.ZG1025Q              ANOP  ,                                           02778300
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           02778400
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02778500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02778600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02778700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02778800
.ZG1025R              ANOP  ,                                           02778900
.*-------------------------------------------------------------------   02779000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02779100
.ZG1027               ANOP  ,                                           02779200
&ZTLC                 SETC 'NO'                                         02779300
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1028          02779400
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02779500
                      AIF   (N'&PAGEABLE LE 1).ZG1027A  CK NUM          02779600
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02779700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02779800
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02779900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02780000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02780100
.ZG1027A              ANOP  ,                                           02780200
.*------------------------------------------------------------------    02780300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02780400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02780500
.ZG1027A0             AIF   (K'&BUFSTGKEY LE 0).ZG1027A1  OK            02780600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02780700
.ZG1027A1             AIF   (K'&ZCVAL LE 0).ZG1027A2  OK                02780800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02780900
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           02781000
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02781100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02781200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02781300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02781400
.ZG1027A2             ANOP  ,                                           02781500
.*------------------------------------------------------------------    02781600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02781700
.ZG1028               ANOP  ,                                           02781800
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02781900
                      AIF   (K'&XPAGEABLE GT 0).ZG1028E  VALID ARG      02782000
                      AIF   (T'&PAGEABLE EQ 'O').ZG1028D  OMITTED       02782100
&ZASYSLNDX            SETA  0                                           02782200
.ZG1028A              ANOP  ,           POSITIONAL MACRO KEY            02782300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02782400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1028C          02782500
&ZTLC                 SETC 'PAGEABLE'                                   02782600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1028A 02782700
.ZG1028B              ANOP  ,                                           02782800
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02782900
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         02783000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02783100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02783200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02783300
                      AGO   .ZG1028E                                    02783400
.ZG1028C              ANOP  ,                                           02783500
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02783600
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           02783700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02783800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02783900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02784000
&ZMS                  SETC  '&ZMS "YES"'                                02784100
&ZMS                  SETC  '&ZMS OR "NO".'                             02784200
                      MNOTE 8,' &ZMS '                                  02784300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02784400
                      AGO   .ZG1028E                                    02784500
.ZG1028D              ANOP  ,                                           02784600
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02784700
.ZG1028E              ANOP  ,                                           02784800
.*----------------------------------------------------------------***   02784900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02785000
                      AIF   (N'&BUFALET LE 1).ZG1030A  CK NUM           02785100
&ZMS                  SETC  '"BUFALET='         *KPOSA* MNOTE           02785200
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02785300
&ZMS                  SETC  '&ZMS "BUFALET"'                            02785400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02785500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02785600
.ZG1030A              ANOP  ,                                           02785700
.*-------------------------------------------------------------------   02785800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02785900
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   02786000
&XBUFALET             SETC  'NO_BUFALET'                                02786100
                      AIF   (K'&BUFALET(1) LE 0).ZG1030B  PARM          02786200
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           02786300
                      AIF   (N'&BUFALET GT 1).ZG1030B  MULTI PARMS      02786400
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   02786500
.ZG1030B              ANOP  ,                                           02786600
.*-------------------------------------------------------------------   02786700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02786800
                      AIF   (K'&ZXBUFALET LE 0).ZG1030R  NOT I/O        02786900
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG1030R                    02787000
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG1030R           02787100
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                02787200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1030P              02787300
                      AIF   (K'&ZCGPR GT 2).ZG1030Q                     02787400
                      AIF   ('&ZCGPR' EQ '0').ZG1030Q                   02787500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02787600
                      AIF   (T'&ZCGPR NE 'N').ZG1030Q  INVALID REG NAME 02787700
.ZG1030P              ANOP  ,                                           02787800
                      AIF   (T'&ZCGPR NE 'N').ZG1030R  NON NUMERIC      02787900
                      AIF   ('&ZCGPR' LT '2').ZG1030Q                   02788000
                      AIF   ('&ZCGPR' LE '12').ZG1030R                  02788100
.ZG1030Q              ANOP  ,                                           02788200
&ZMS                  SETC  '"BUFALET='         *KGPRA* MNOTE           02788300
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02788400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02788500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02788600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02788700
.ZG1030R              ANOP  ,                                           02788800
.*-------------------------------------------------------------------   02788900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02789000
.ZG1032               ANOP  ,                                           02789100
&ZTLC                 SETC 'REAL'                                       02789200
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1038       02789300
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     02789400
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1032A  CK NUM       02789500
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           02789600
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02789700
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02789800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02789900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02790000
.ZG1032A              ANOP  ,                                           02790100
.*------------------------------------------------------------------    02790200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02790300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02790400
.ZG1032A0             AIF   (K'&PAGEABLE LE 0).ZG1032A1  OK             02790500
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      02790600
.ZG1032A1             AIF   (K'&BUFSTGKEY LE 0).ZG1032A2  OK            02790700
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02790800
.ZG1032A2             AIF   (K'&BUFALET LE 0).ZG1032A3  OK              02790900
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      02791000
.ZG1032A3             AIF   (K'&ZCVAL LE 0).ZG1032A4  OK                02791100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02791200
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           02791300
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02791400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02791500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02791600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02791700
.ZG1032A4             ANOP  ,                                           02791800
.*------------------------------------------------------------------    02791900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02792000
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            02792100
.*-------------------------------------------------------------------   02792200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02792300
.ZG1035               ANOP  ,                                           02792400
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG1035A            02792500
&ZTLC                 SETC '31'                                         02792600
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1036       02792700
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     02792800
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1035A  CK NUM       02792900
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           02793000
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02793100
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02793200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02793300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02793400
.ZG1035A              ANOP  ,                                           02793500
.*-------------------------------------------------------------------   02793600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02793700
.ZG1036               ANOP  ,                                           02793800
&ZTLC                 SETC '64'                                         02793900
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1037       02794000
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     02794100
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1036A  CK NUM       02794200
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           02794300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02794400
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02794500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02794600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02794700
.ZG1036A              ANOP  ,                                           02794800
.*------------------------------------------------------------------    02794900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02795000
.ZG1037               ANOP  ,                                           02795100
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   02795200
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG1037E  VALID ARG   02795300
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG1037D  OMITTED    02795400
&ZASYSLNDX            SETA  0                                           02795500
.ZG1037A              ANOP  ,           POSITIONAL MACRO KEY            02795600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02795700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1037C          02795800
&ZTLC                 SETC 'BUFADDRSIZE'                                02795900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1037A 02796000
.ZG1037B              ANOP  ,                                           02796100
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02796200
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE      02796300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02796400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02796500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02796600
                      AGO   .ZG1037E                                    02796700
.ZG1037C              ANOP  ,                                           02796800
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02796900
&ZMS                  SETC  '"BUFADDRSIZE='     *KUKWA* MNOTE           02797000
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02797100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02797200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02797300
&ZMS                  SETC  '&ZMS "31"'                                 02797400
&ZMS                  SETC  '&ZMS OR "64".'                             02797500
                      MNOTE 8,' &ZMS '                                  02797600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02797700
                      AGO   .ZG1037E                                    02797800
.ZG1037D              ANOP  ,                                           02797900
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             02798000
.ZG1037E              ANOP  ,                                           02798100
.*------------------------------------------------------------------    02798200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02798300
.ZG1038               ANOP  ,                                           02798400
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02798500
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG1038E  VALID ARG   02798600
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG1038D  OMITTED    02798700
&ZASYSLNDX            SETA  0                                           02798800
.ZG1038A              ANOP  ,           POSITIONAL MACRO KEY            02798900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02799000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1038C          02799100
&ZTLC                 SETC 'BUFADDRTYPE'                                02799200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1038A 02799300
.ZG1038B              ANOP  ,                                           02799400
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02799500
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE      02799600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02799700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02799800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02799900
                      AGO   .ZG1038E                                    02800000
.ZG1038C              ANOP  ,                                           02800100
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02800200
&ZMS                  SETC  '"BUFADDRTYPE='     *KUKWA* MNOTE           02800300
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02800400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02800500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02800600
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            02800700
&ZMS                  SETC  '&ZMS OR "REAL".'                           02800800
                      MNOTE 8,' &ZMS '                                  02800900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02801000
                      AGO   .ZG1038E                                    02801100
.ZG1038D              ANOP  ,                                           02801200
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             02801300
.ZG1038E              ANOP  ,                                           02801400
.*----------------------------------------------------------------***   02801500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02801600
                      AIF   (N'&BUFNUM LE 1).ZG1040A  CK NUM            02801700
&ZMS                  SETC  '"BUFNUM='  *KPOSA* MNOTE                   02801800
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02801900
&ZMS                  SETC  '&ZMS "BUFNUM"'                             02802000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02802100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02802200
.ZG1040A              ANOP  ,                                           02802300
.*-------------------------------------------------------------------   02802400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02802500
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   02802600
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           02802700
                      AIF   (N'&BUFNUM GT 1).ZG1040B  MULTI PARMS       02802800
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   02802900
.ZG1040B              AIF   (K'&BUFNUM(1) GT 0).ZG1040C                 02803000
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 02803100
&ZMS                  SETC  ' '         *KRQDA*                         02803200
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 02803300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02803400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02803500
.ZG1040C              ANOP  ,                                           02803600
.*-------------------------------------------------------------------   02803700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02803800
                      AIF   (K'&ZXBUFNUM LE 0).ZG1040R  NOT I/O         02803900
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG1040R            02804000
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  02804100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1040P              02804200
                      AIF   (K'&ZCGPR GT 2).ZG1040Q                     02804300
                      AIF   ('&ZCGPR' EQ '0').ZG1040Q                   02804400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02804500
                      AIF   (T'&ZCGPR NE 'N').ZG1040Q  INVALID REG NAME 02804600
.ZG1040P              ANOP  ,                                           02804700
                      AIF   (T'&ZCGPR NE 'N').ZG1040R  NON NUMERIC      02804800
                      AIF   ('&ZCGPR' LT '2').ZG1040Q                   02804900
                      AIF   ('&ZCGPR' LE '12').ZG1040R                  02805000
.ZG1040Q              ANOP  ,                                           02805100
&ZMS                  SETC  '"BUFNUM='  *KGPRA* MNOTE                   02805200
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02805300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02805400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02805500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02805600
.ZG1040R              ANOP  ,                                           02805700
.*----------------------------------------------------------------***   02805800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02805900
                      AIF   (N'&BUFINCRNUM LE 1).ZG1043A  CK NUM        02806000
&ZMS                  SETC  '"BUFINCRNUM='      *KPOSA* MNOTE           02806100
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         02806200
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         02806300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02806400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02806500
.ZG1043A              ANOP  ,                                           02806600
.*-------------------------------------------------------------------   02806700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02806800
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   02806900
&XBUFINCRNUM          SETC  '16'                                        02807000
                      AIF   (K'&BUFINCRNUM(1) LE 0).ZG1043B  PARM       02807100
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           02807200
                      AIF   (N'&BUFINCRNUM GT 1).ZG1043B  MULTI PARMS   02807300
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           02807400
.ZG1043B              ANOP  ,                                           02807500
.*-------------------------------------------------------------------   02807600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02807700
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG1043R  NOT I/O     02807800
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG1043R        02807900
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          02808000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1043P              02808100
                      AIF   (K'&ZCGPR GT 2).ZG1043Q                     02808200
                      AIF   ('&ZCGPR' EQ '0').ZG1043Q                   02808300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02808400
                      AIF   (T'&ZCGPR NE 'N').ZG1043Q  INVALID REG NAME 02808500
.ZG1043P              ANOP  ,                                           02808600
                      AIF   (T'&ZCGPR NE 'N').ZG1043R  NON NUMERIC      02808700
                      AIF   ('&ZCGPR' LT '2').ZG1043Q                   02808800
                      AIF   ('&ZCGPR' LE '12').ZG1043R                  02808900
.ZG1043Q              ANOP  ,                                           02809000
&ZMS                  SETC  '"BUFINCRNUM='      *KGPRA* MNOTE           02809100
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         02809200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02809300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02809400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02809500
.ZG1043R              ANOP  ,                                           02809600
.*-------------------------------------------------------------------   02809700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02809800
.ZG1045               AIF   ('&XDATAREA' NE 'BUFFER').ZG1057            02809900
.*-------------------------------------------------------------------   02810000
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02810100
&ZCVAL                SETC ''           ERROR KEY FIELD                 02810200
.ZG1045I0             AIF   (K'&BUFADDRTYPE LE 0).ZG1045I1              02810300
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         02810400
.ZG1045I1             AIF   (K'&BUFALET LE 0).ZG1045I2                  02810500
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          02810600
.ZG1045I2             AIF   (K'&BUFADDRSIZE LE 0).ZG1045I3              02810700
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         02810800
.ZG1045I3             AIF   (K'&BUFNUM LE 0).ZG1045I4                   02810900
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          02811000
.ZG1045I4             AIF   (K'&BUFINCRNUM LE 0).ZG1045I5               02811100
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          02811200
.ZG1045I5             AIF   (K'&ZCVAL LE 0).ZG1045J  KEY                02811300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02811400
&ZMS                  SETC  '"BUFFER'   *KMEIA* MNOTE                   02811500
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02811600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02811700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02811800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02811900
.ZG1045J              ANOP  ,                                           02812000
.*-------------------------------------------------------------------   02812100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02812200
                      AIF   (K'&ZXBUFFER LE 0).ZG1045R  NOT I/O         02812300
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG1045R            02812400
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  02812500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1045P              02812600
                      AIF   (K'&ZCGPR GT 2).ZG1045Q                     02812700
                      AIF   ('&ZCGPR' EQ '0').ZG1045Q                   02812800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02812900
                      AIF   (T'&ZCGPR NE 'N').ZG1045Q  INVALID REG NAME 02813000
.ZG1045P              ANOP  ,                                           02813100
                      AIF   (T'&ZCGPR NE 'N').ZG1045R  NON NUMERIC      02813200
                      AIF   ('&ZCGPR' LT '2').ZG1045Q                   02813300
                      AIF   ('&ZCGPR' LE '12').ZG1045R                  02813400
.ZG1045Q              ANOP  ,                                           02813500
&ZMS                  SETC  '"BUFFER='  *KGPRA* MNOTE                   02813600
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02813700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02813800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02813900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02814000
.ZG1045R              ANOP  ,                                           02814100
.*------------------------------------------------------------------    02814200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02814300
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02814400
.*-------------------------------------------------------------------   02814500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02814600
.ZG1048               ANOP  ,                                           02814700
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1048A               02814800
&ZTLC                 SETC 'YES'                                        02814900
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1052          02815000
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02815100
                      AIF   (N'&PAGEABLE LE 1).ZG1048A  CK NUM          02815200
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02815300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02815400
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02815500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02815600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02815700
.ZG1048A              ANOP  ,                                           02815800
.*----------------------------------------------------------------***   02815900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02816000
                      AIF   (N'&BUFSTGKEY LE 1).ZG1050A  CK NUM         02816100
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           02816200
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02816300
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02816400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02816500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02816600
.ZG1050A              ANOP  ,                                           02816700
.*-------------------------------------------------------------------   02816800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02816900
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02817000
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02817100
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1050B  PARM        02817200
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02817300
                      AIF   (N'&BUFSTGKEY GT 1).ZG1050B  MULTI PARMS    02817400
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02817500
.ZG1050B              ANOP  ,                                           02817600
.*-------------------------------------------------------------------   02817700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02817800
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1050R  NOT I/O      02817900
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1050R                 02818000
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1050R         02818100
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02818200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1050P              02818300
                      AIF   (K'&ZCGPR GT 2).ZG1050Q                     02818400
                      AIF   ('&ZCGPR' EQ '0').ZG1050Q                   02818500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02818600
                      AIF   (T'&ZCGPR NE 'N').ZG1050Q  INVALID REG NAME 02818700
.ZG1050P              ANOP  ,                                           02818800
                      AIF   (T'&ZCGPR NE 'N').ZG1050R  NON NUMERIC      02818900
                      AIF   ('&ZCGPR' LT '2').ZG1050Q                   02819000
                      AIF   ('&ZCGPR' LE '12').ZG1050R                  02819100
.ZG1050Q              ANOP  ,                                           02819200
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           02819300
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02819400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02819500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02819600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02819700
.ZG1050R              ANOP  ,                                           02819800
.*-------------------------------------------------------------------   02819900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02820000
.ZG1052               ANOP  ,                                           02820100
&ZTLC                 SETC 'NO'                                         02820200
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1053          02820300
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02820400
                      AIF   (N'&PAGEABLE LE 1).ZG1052A  CK NUM          02820500
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02820600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02820700
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02820800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02820900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02821000
.ZG1052A              ANOP  ,                                           02821100
.*------------------------------------------------------------------    02821200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02821300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02821400
.ZG1052A0             AIF   (K'&BUFSTGKEY LE 0).ZG1052A1  OK            02821500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02821600
.ZG1052A1             AIF   (K'&ZCVAL LE 0).ZG1052A2  OK                02821700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02821800
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           02821900
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02822000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02822100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02822200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02822300
.ZG1052A2             ANOP  ,                                           02822400
.*------------------------------------------------------------------    02822500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02822600
.ZG1053               ANOP  ,                                           02822700
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02822800
                      AIF   (K'&XPAGEABLE GT 0).ZG1053E  VALID ARG      02822900
                      AIF   (T'&PAGEABLE EQ 'O').ZG1053D  OMITTED       02823000
&ZASYSLNDX            SETA  0                                           02823100
.ZG1053A              ANOP  ,           POSITIONAL MACRO KEY            02823200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02823300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1053C          02823400
&ZTLC                 SETC 'PAGEABLE'                                   02823500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1053A 02823600
.ZG1053B              ANOP  ,                                           02823700
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02823800
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         02823900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02824000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02824100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02824200
                      AGO   .ZG1053E                                    02824300
.ZG1053C              ANOP  ,                                           02824400
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02824500
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           02824600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02824700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02824800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02824900
&ZMS                  SETC  '&ZMS "YES"'                                02825000
&ZMS                  SETC  '&ZMS OR "NO".'                             02825100
                      MNOTE 8,' &ZMS '                                  02825200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02825300
                      AGO   .ZG1053E                                    02825400
.ZG1053D              ANOP  ,                                           02825500
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02825600
.ZG1053E              ANOP  ,                                           02825700
.*----------------------------------------------------------------***   02825800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02825900
                      AIF   (N'&BUFSIZE LE 1).ZG1055A  CK NUM           02826000
&ZMS                  SETC  '"BUFSIZE='         *KPOSA* MNOTE           02826100
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02826200
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            02826300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02826400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02826500
.ZG1055A              ANOP  ,                                           02826600
.*-------------------------------------------------------------------   02826700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02826800
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   02826900
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           02827000
                      AIF   (N'&BUFSIZE GT 1).ZG1055B  MULTI PARMS      02827100
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   02827200
.ZG1055B              AIF   (K'&BUFSIZE(1) GT 0).ZG1055C                02827300
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 02827400
&ZMS                  SETC  ' '         *KRQDA*                         02827500
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                02827600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02827700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02827800
.ZG1055C              ANOP  ,                                           02827900
.*-------------------------------------------------------------------   02828000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02828100
                      AIF   (K'&ZXBUFSIZE LE 0).ZG1055R  NOT I/O        02828200
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG1055R           02828300
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                02828400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1055P              02828500
                      AIF   (K'&ZCGPR GT 2).ZG1055Q                     02828600
                      AIF   ('&ZCGPR' EQ '0').ZG1055Q                   02828700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02828800
                      AIF   (T'&ZCGPR NE 'N').ZG1055Q  INVALID REG NAME 02828900
.ZG1055P              ANOP  ,                                           02829000
                      AIF   (T'&ZCGPR NE 'N').ZG1055R  NON NUMERIC      02829100
                      AIF   ('&ZCGPR' LT '2').ZG1055Q                   02829200
                      AIF   ('&ZCGPR' LE '12').ZG1055R                  02829300
.ZG1055Q              ANOP  ,                                           02829400
&ZMS                  SETC  '"BUFSIZE='         *KGPRA* MNOTE           02829500
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02829600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02829700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02829800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02829900
.ZG1055R              ANOP  ,                                           02830000
.*-------------------------------------------------------------------   02830100
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            02830200
.ZG1057               ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     02830300
.*-------------------------------------------------------------------   02830400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02830500
.ZG1058               ANOP  ,                                           02830600
&ZTLC                 SETC 'DELETE_ENTRYLIST'                           02830700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG1188           02830800
&XREQUEST             SETC  'DELETE_ENTRYLIST'  SET KEYWORD             02830900
                      AIF   (N'&REQUEST LE 1).ZG1058A  CK NUM           02831000
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           02831100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02831200
&ZMS                  SETC  '&ZMS "REQUEST"'                            02831300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02831400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02831500
.ZG1058A              ANOP  ,                                           02831600
.*------------------------------------------------------------------    02831700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02831800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02831900
.ZG1058A0             AIF   (K'&TYPE LE 0).ZG1058A1  OK                 02832000
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      02832100
.ZG1058A1             AIF   (K'&ADJAREA LE 0).ZG1058A2  OK              02832200
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      02832300
.ZG1058A2             AIF   (K'&DIRECTION LE 0).ZG1058A3  OK            02832400
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02832500
.ZG1058A3             AIF   (K'&LOCATOR LE 0).ZG1058A4  OK              02832600
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02832700
.ZG1058A4             AIF   (K'&KEYSCANTYPE LE 0).ZG1058A5  OK          02832800
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02832900
.ZG1058A5             AIF   (K'&ENTRYID LE 0).ZG1058A6  OK              02833000
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02833100
.ZG1058A6             AIF   (K'&ENTRYNAME LE 0).ZG1058A7  OK            02833200
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02833300
.ZG1058A7             AIF   (K'&KEYTYPE LE 0).ZG1058A8  OK              02833400
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02833500
.ZG1058A8             AIF   (K'&RESTOKEN LE 0).ZG1058A9  OK             02833600
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      02833700
.ZG1058A9             AIF   (K'&EXTRESTOKEN LE 0).ZG1058A10  OK         02833800
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     02833900
.ZG1058A10            AIF   (K'&MOVETOKEY LE 0).ZG1058A11  OK           02834000
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02834100
.ZG1058A11            AIF   (K'&LISTKEYINC LE 0).ZG1058A12  OK          02834200
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02834300
.ZG1058A12            AIF   (K'&LISTKEYAREA LE 0).ZG1058A13  OK         02834400
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02834500
.ZG1058A13            AIF   (K'&MOVETOSKEY LE 0).ZG1058A14  OK          02834600
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02834700
.ZG1058A14            AIF   (K'&ZCVAL LE 0).ZG1058A15  OK               02834800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02834900
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   02835000
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02835100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02835200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02835300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02835400
.ZG1058A15            ANOP  ,                                           02835500
.*----------------------------------------------------------------***   02835600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02835700
                      AIF   (N'&FIRSTELEM LE 1).ZG1060A  CK NUM         02835800
&ZMS                  SETC  '"FIRSTELEM='       *KPOSA* MNOTE           02835900
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02836000
&ZMS                  SETC  '&ZMS "FIRSTELEM"'                          02836100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02836200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02836300
.ZG1060A              ANOP  ,                                           02836400
.*-------------------------------------------------------------------   02836500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02836600
&ZXFIRSTELEM          SETC  'INPUT'     SET IN/OUTPUT                   02836700
&XFIRSTELEM           SETC  '1'                                         02836800
                      AIF   (K'&FIRSTELEM(1) LE 0).ZG1060B  PARM        02836900
&XFIRSTELEM           SETC  '&FIRSTELEM(1)'     SET XVARIABLE           02837000
                      AIF   (N'&FIRSTELEM GT 1).ZG1060B  MULTI PARMS    02837100
&XFIRSTELEM           SETC  '&FIRSTELEM'        SET XVARIABLE           02837200
.ZG1060B              ANOP  ,                                           02837300
.*-------------------------------------------------------------------   02837400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02837500
                      AIF   (K'&ZXFIRSTELEM LE 0).ZG1060R  NOT I/O      02837600
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZG1060R         02837700
&ZCGPR                SETC  '&XFIRSTELEM'(2,K'&XFIRSTELEM-2)            02837800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1060P              02837900
                      AIF   (K'&ZCGPR GT 2).ZG1060Q                     02838000
                      AIF   ('&ZCGPR' EQ '0').ZG1060Q                   02838100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02838200
                      AIF   (T'&ZCGPR NE 'N').ZG1060Q  INVALID REG NAME 02838300
.ZG1060P              ANOP  ,                                           02838400
                      AIF   (T'&ZCGPR NE 'N').ZG1060R  NON NUMERIC      02838500
                      AIF   ('&ZCGPR' LT '2').ZG1060Q                   02838600
                      AIF   ('&ZCGPR' LE '12').ZG1060R                  02838700
.ZG1060Q              ANOP  ,                                           02838800
&ZMS                  SETC  '"FIRSTELEM='       *KGPRA* MNOTE           02838900
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02839000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02839100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02839200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02839300
.ZG1060R              ANOP  ,                                           02839400
.*----------------------------------------------------------------***   02839500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02839600
                      AIF   (N'&LASTELEM LE 1).ZG1063A  CK NUM          02839700
&ZMS                  SETC  '"LASTELEM='        *KPOSA* MNOTE           02839800
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02839900
&ZMS                  SETC  '&ZMS "LASTELEM"'                           02840000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02840100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02840200
.ZG1063A              ANOP  ,                                           02840300
.*-------------------------------------------------------------------   02840400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02840500
&ZXLASTELEM           SETC  'INPUT'     SET IN/OUTPUT                   02840600
&XLASTELEM            SETC  '&LASTELEM(1)'      SET XVARIABLE           02840700
                      AIF   (N'&LASTELEM GT 1).ZG1063B  MULTI PARMS     02840800
&XLASTELEM            SETC  '&LASTELEM'         SET XVARIABLE           02840900
.ZG1063B              AIF   (K'&LASTELEM(1) GT 0).ZG1063C               02841000
&ZXLASTELEM           SETC  ''          RESET IN/OUTPUT                 02841100
&ZMS                  SETC  ' '         *KRQDA*                         02841200
&ZMS                  SETC  '&ZMS "LASTELEM" KEY AND ITS'               02841300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02841400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02841500
.ZG1063C              ANOP  ,                                           02841600
.*-------------------------------------------------------------------   02841700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02841800
                      AIF   (K'&ZXLASTELEM LE 0).ZG1063R  NOT I/O       02841900
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZG1063R          02842000
&ZCGPR                SETC  '&XLASTELEM'(2,K'&XLASTELEM-2)              02842100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1063P              02842200
                      AIF   (K'&ZCGPR GT 2).ZG1063Q                     02842300
                      AIF   ('&ZCGPR' EQ '0').ZG1063Q                   02842400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02842500
                      AIF   (T'&ZCGPR NE 'N').ZG1063Q  INVALID REG NAME 02842600
.ZG1063P              ANOP  ,                                           02842700
                      AIF   (T'&ZCGPR NE 'N').ZG1063R  NON NUMERIC      02842800
                      AIF   ('&ZCGPR' LT '2').ZG1063Q                   02842900
                      AIF   ('&ZCGPR' LE '12').ZG1063R                  02843000
.ZG1063Q              ANOP  ,                                           02843100
&ZMS                  SETC  '"LASTELEM='        *KGPRA* MNOTE           02843200
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02843300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02843400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02843500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02843600
.ZG1063R              ANOP  ,                                           02843700
.*----------------------------------------------------------------***   02843800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02843900
                      AIF   (N'&MISCOMPARE LE 1).ZG1066A  CK NUM        02844000
&ZMS                  SETC  '"MISCOMPARE='      *KPOSA* MNOTE           02844100
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02844200
&ZMS                  SETC  '&ZMS "MISCOMPARE"'                         02844300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02844400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02844500
.ZG1066A              ANOP  ,                                           02844600
.*-------------------------------------------------------------------   02844700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02844800
&XMISCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02844900
.ZG1067A   AIF   ('&MISCOMPARE(1)' NE 'CONTINUE').ZG1068A               02845000
&XMISCOMPARE          SETC  'CONTINUE'  SET KEYWORD                     02845100
.*-------------------------------------------------------------------   02845200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02845300
.ZG1068A   AIF   ('&MISCOMPARE(1)' NE 'HALT').ZG1069A                   02845400
&XMISCOMPARE          SETC  'HALT'      SET KEYWORD                     02845500
.*-------------------------------------------------------------------   02845600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02845700
.ZG1069A              AIF   (K'&XMISCOMPARE GT 0).ZG1069C  KEYWORD      02845800
                      AIF   (K'&MISCOMPARE(1) LE 0).ZG1069B             02845900
&ZMS                  SETC  '"MISCOMPARE='      *KUKWA* MNOTE           02846000
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02846100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02846200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02846300
&ZMS                  SETC  '&ZMS "CONTINUE"'                           02846400
&ZMS                  SETC  '&ZMS OR "HALT".'                           02846500
                      MNOTE 8,' &ZMS '                                  02846600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02846700
.ZG1069B              ANOP  ,                                           02846800
&XMISCOMPARE          SETC  'CONTINUE'  SET DEFAULT KEYWORD             02846900
.ZG1069C              ANOP  ,                                           02847000
&ZXMISCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02847100
.*------------------------------------------------------------------    02847200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02847300
&XLISTTYPE            SETC  ''          INITIALIZE XVARIABLE            02847400
.*-------------------------------------------------------------------   02847500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02847600
.ZG1072               ANOP  ,                                           02847700
                      AIF   (K'&LISTTYPE(1) LE 0).ZG1072A               02847800
&ZTLC                 SETC 'NAMELIST'                                   02847900
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG1073          02848000
&XLISTTYPE            SETC  'NAMELIST'  SET KEYWORD                     02848100
                      AIF   (N'&LISTTYPE LE 1).ZG1072A  CK NUM          02848200
&ZMS                  SETC  '"LISTTYPE='        *KPOSA* MNOTE           02848300
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02848400
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02848500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02848600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02848700
.ZG1072A              ANOP  ,                                           02848800
.*------------------------------------------------------------------    02848900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02849000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02849100
.ZG1072A0             AIF   (K'&KEYCOMPARE LE 0).ZG1072A1  OK           02849200
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      02849300
.ZG1072A1             AIF   (K'&ENTRYKEY LE 0).ZG1072A2  OK             02849400
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02849500
.ZG1072A2             AIF   (K'&KEYREQTYPE LE 0).ZG1072A3  OK           02849600
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02849700
.ZG1072A3             AIF   (K'&KEYRANGEEND LE 0).ZG1072A4  OK          02849800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02849900
.ZG1072A4             AIF   (K'&SKEYCOMPARE LE 0).ZG1072A5  OK          02850000
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     02850100
.ZG1072A5             AIF   (K'&SECONDARYKEY LE 0).ZG1072A6  OK         02850200
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02850300
.ZG1072A6             AIF   (K'&SKEYREQTYPE LE 0).ZG1072A7  OK          02850400
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02850500
.ZG1072A7             AIF   (K'&SKEYRANGEEND LE 0).ZG1072A8  OK         02850600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02850700
.ZG1072A8             AIF   (K'&ZCVAL LE 0).ZG1072A9  OK                02850800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02850900
&ZMS                  SETC  '"LISTTYPE'         *KMEIA* MNOTE           02851000
&ZMS                  SETC  '&ZMS.=&LISTTYPE"'                          02851100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02851200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02851300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02851400
.ZG1072A9             ANOP  ,                                           02851500
.*-------------------------------------------------------------------   02851600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02851700
.ZG1073               ANOP  ,                                           02851800
&ZTLC                 SETC 'IDLIST'                                     02851900
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG1110          02852000
&XLISTTYPE            SETC  'IDLIST'    SET KEYWORD                     02852100
                      AIF   (N'&LISTTYPE LE 1).ZG1073A  CK NUM          02852200
&ZMS                  SETC  '"LISTTYPE='        *KPOSA* MNOTE           02852300
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02852400
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02852500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02852600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02852700
.ZG1073A              ANOP  ,                                           02852800
.*------------------------------------------------------------------    02852900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02853000
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02853100
.*-------------------------------------------------------------------   02853200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02853300
.ZG1076               ANOP  ,                                           02853400
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG1076A             02853500
&ZTLC                 SETC 'NO'                                         02853600
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG1077        02853700
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02853800
                      AIF   (N'&KEYCOMPARE LE 1).ZG1076A  CK NUM        02853900
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02854000
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02854100
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02854200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02854300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02854400
.ZG1076A              ANOP  ,                                           02854500
.*------------------------------------------------------------------    02854600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02854700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02854800
.ZG1076A0             AIF   (K'&ENTRYKEY LE 0).ZG1076A1  OK             02854900
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02855000
.ZG1076A1             AIF   (K'&KEYREQTYPE LE 0).ZG1076A2  OK           02855100
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02855200
.ZG1076A2             AIF   (K'&KEYRANGEEND LE 0).ZG1076A3  OK          02855300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02855400
.ZG1076A3             AIF   (K'&ZCVAL LE 0).ZG1076A4  OK                02855500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02855600
&ZMS                  SETC  '"KEYCOMPARE'       *KMEIA* MNOTE           02855700
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02855800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02855900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02856000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02856100
.ZG1076A4             ANOP  ,                                           02856200
.*-------------------------------------------------------------------   02856300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02856400
.ZG1077               ANOP  ,                                           02856500
&ZTLC                 SETC 'YES'                                        02856600
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG1091        02856700
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02856800
                      AIF   (N'&KEYCOMPARE LE 1).ZG1077A  CK NUM        02856900
&ZMS                  SETC  '"KEYCOMPARE='      *KPOSA* MNOTE           02857000
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02857100
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02857200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02857300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02857400
.ZG1077A              ANOP  ,                                           02857500
.*----------------------------------------------------------------***   02857600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02857700
                      AIF   (N'&ENTRYKEY LE 1).ZG1079A  CK NUM          02857800
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           02857900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02858000
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02858100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02858200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02858300
.ZG1079A              ANOP  ,                                           02858400
.*-------------------------------------------------------------------   02858500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02858600
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02858700
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02858800
                      AIF   (N'&ENTRYKEY GT 1).ZG1079B  MULTI PARMS     02858900
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02859000
.ZG1079B              AIF   (K'&ENTRYKEY(1) GT 0).ZG1079C               02859100
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02859200
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          02859300
&ZMS                  SETC  '&ZMS , "ENTRYKEY" KEY AND ITS'             02859400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02859500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02859600
.ZG1079C              ANOP  ,                                           02859700
.*-------------------------------------------------------------------   02859800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02859900
                      AIF   (K'&ZXENTRYKEY LE 0).ZG1079R  NOT I/O       02860000
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG1079R          02860100
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02860200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1079P              02860300
                      AIF   (K'&ZCGPR GT 2).ZG1079Q                     02860400
                      AIF   ('&ZCGPR' EQ '0').ZG1079Q                   02860500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02860600
                      AIF   (T'&ZCGPR NE 'N').ZG1079Q  INVALID REG NAME 02860700
.ZG1079P              ANOP  ,                                           02860800
                      AIF   (T'&ZCGPR NE 'N').ZG1079R  NON NUMERIC      02860900
                      AIF   ('&ZCGPR' LT '2').ZG1079Q                   02861000
                      AIF   ('&ZCGPR' LE '12').ZG1079R                  02861100
.ZG1079Q              ANOP  ,                                           02861200
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           02861300
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02861400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02861500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02861600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02861700
.ZG1079R              ANOP  ,                                           02861800
.*------------------------------------------------------------------    02861900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02862000
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02862100
.*-------------------------------------------------------------------   02862200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02862300
.ZG1083               ANOP  ,                                           02862400
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG1083A             02862500
&ZTLC                 SETC 'EQUAL'                                      02862600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1084        02862700
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02862800
                      AIF   (N'&KEYREQTYPE LE 1).ZG1083A  CK NUM        02862900
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02863000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02863100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02863200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02863300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02863400
.ZG1083A              ANOP  ,                                           02863500
.*------------------------------------------------------------------    02863600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02863700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02863800
.ZG1083A0             AIF   (K'&KEYRANGEEND LE 0).ZG1083A1  OK          02863900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02864000
.ZG1083A1             AIF   (K'&ZCVAL LE 0).ZG1083A2  OK                02864100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02864200
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02864300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02864400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02864500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02864600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02864700
.ZG1083A2             ANOP  ,                                           02864800
.*-------------------------------------------------------------------   02864900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02865000
.ZG1084               ANOP  ,                                           02865100
&ZTLC                 SETC 'LESSOREQUAL'                                02865200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1085        02865300
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02865400
                      AIF   (N'&KEYREQTYPE LE 1).ZG1084A  CK NUM        02865500
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02865600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02865700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02865800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02865900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02866000
.ZG1084A              ANOP  ,                                           02866100
.*------------------------------------------------------------------    02866200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02866300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02866400
.ZG1084A0             AIF   (K'&KEYRANGEEND LE 0).ZG1084A1  OK          02866500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02866600
.ZG1084A1             AIF   (K'&ZCVAL LE 0).ZG1084A2  OK                02866700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02866800
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02866900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02867000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02867100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02867200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02867300
.ZG1084A2             ANOP  ,                                           02867400
.*-------------------------------------------------------------------   02867500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02867600
.ZG1085               ANOP  ,                                           02867700
&ZTLC                 SETC 'GREATEROREQUAL'                             02867800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1086        02867900
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02868000
                      AIF   (N'&KEYREQTYPE LE 1).ZG1085A  CK NUM        02868100
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02868200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02868300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02868400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02868500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02868600
.ZG1085A              ANOP  ,                                           02868700
.*------------------------------------------------------------------    02868800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02868900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02869000
.ZG1085A0             AIF   (K'&KEYRANGEEND LE 0).ZG1085A1  OK          02869100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02869200
.ZG1085A1             AIF   (K'&ZCVAL LE 0).ZG1085A2  OK                02869300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02869400
&ZMS                  SETC  '"KEYREQTYPE'       *KMEIA* MNOTE           02869500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02869600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02869700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02869800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02869900
.ZG1085A2             ANOP  ,                                           02870000
.*-------------------------------------------------------------------   02870100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02870200
.ZG1086               ANOP  ,                                           02870300
&ZTLC                 SETC 'RANGE'                                      02870400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1090        02870500
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02870600
                      AIF   (N'&KEYREQTYPE LE 1).ZG1086A  CK NUM        02870700
&ZMS                  SETC  '"KEYREQTYPE='      *KPOSA* MNOTE           02870800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02870900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02871000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02871100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02871200
.ZG1086A              ANOP  ,                                           02871300
.*----------------------------------------------------------------***   02871400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02871500
                      AIF   (N'&KEYRANGEEND LE 1).ZG1088A  CK NUM       02871600
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           02871700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02871800
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02871900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02872000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02872100
.ZG1088A              ANOP  ,                                           02872200
.*-------------------------------------------------------------------   02872300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02872400
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02872500
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02872600
                      AIF   (N'&KEYRANGEEND GT 1).ZG1088B  MULTI PARMS  02872700
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02872800
.ZG1088B              AIF   (K'&KEYRANGEEND(1) GT 0).ZG1088C            02872900
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02873000
&ZMS                  SETC  'WHEN "RANGE" IS SPECIFIED'  *KRQDA*        02873100
&ZMS                  SETC  '&ZMS , "KEYRANGEEND" KEY AND ITS'          02873200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02873300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02873400
.ZG1088C              ANOP  ,                                           02873500
.*-------------------------------------------------------------------   02873600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02873700
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG1088R  NOT I/O    02873800
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG1088R       02873900
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02874000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1088P              02874100
                      AIF   (K'&ZCGPR GT 2).ZG1088Q                     02874200
                      AIF   ('&ZCGPR' EQ '0').ZG1088Q                   02874300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02874400
                      AIF   (T'&ZCGPR NE 'N').ZG1088Q  INVALID REG NAME 02874500
.ZG1088P              ANOP  ,                                           02874600
                      AIF   (T'&ZCGPR NE 'N').ZG1088R  NON NUMERIC      02874700
                      AIF   ('&ZCGPR' LT '2').ZG1088Q                   02874800
                      AIF   ('&ZCGPR' LE '12').ZG1088R                  02874900
.ZG1088Q              ANOP  ,                                           02875000
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           02875100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02875200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02875300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02875400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02875500
.ZG1088R              ANOP  ,                                           02875600
.*------------------------------------------------------------------    02875700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02875800
.ZG1090               ANOP  ,                                           02875900
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02876000
                      AIF   (K'&XKEYREQTYPE GT 0).ZG1090E  VALID ARG    02876100
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG1090D  OMITTED     02876200
&ZASYSLNDX            SETA  0                                           02876300
.ZG1090A              ANOP  ,           POSITIONAL MACRO KEY            02876400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02876500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1090C          02876600
&ZTLC                 SETC 'KEYREQTYPE'                                 02876700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1090A 02876800
.ZG1090B              ANOP  ,                                           02876900
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02877000
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'  *KOPTA* MNOTE       02877100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02877200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02877300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02877400
                      AGO   .ZG1090E                                    02877500
.ZG1090C              ANOP  ,                                           02877600
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02877700
&ZMS                  SETC  '"KEYREQTYPE='      *KUKWA* MNOTE           02877800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02877900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02878000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02878100
&ZMS                  SETC  '&ZMS "EQUAL",'                             02878200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02878300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02878400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02878500
                      MNOTE 8,' &ZMS '                                  02878600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02878700
                      AGO   .ZG1090E                                    02878800
.ZG1090D              ANOP  ,                                           02878900
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02879000
.ZG1090E              ANOP  ,                                           02879100
.*------------------------------------------------------------------    02879200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02879300
.ZG1091               ANOP  ,                                           02879400
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02879500
                      AIF   (K'&XKEYCOMPARE GT 0).ZG1091E  VALID ARG    02879600
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG1091D  OMITTED     02879700
&ZASYSLNDX            SETA  0                                           02879800
.ZG1091A              ANOP  ,           POSITIONAL MACRO KEY            02879900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02880000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1091C          02880100
&ZTLC                 SETC 'KEYCOMPARE'                                 02880200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1091A 02880300
.ZG1091B              ANOP  ,                                           02880400
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02880500
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'  *KOPTA* MNOTE       02880600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02880700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02880800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02880900
                      AGO   .ZG1091E                                    02881000
.ZG1091C              ANOP  ,                                           02881100
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02881200
&ZMS                  SETC  '"KEYCOMPARE='      *KUKWA* MNOTE           02881300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02881400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02881500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02881600
&ZMS                  SETC  '&ZMS "NO"'                                 02881700
&ZMS                  SETC  '&ZMS OR "YES".'                            02881800
                      MNOTE 8,' &ZMS '                                  02881900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02882000
                      AGO   .ZG1091E                                    02882100
.ZG1091D              ANOP  ,                                           02882200
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02882300
.ZG1091E              ANOP  ,                                           02882400
.*------------------------------------------------------------------    02882500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02882600
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02882700
.*-------------------------------------------------------------------   02882800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02882900
.ZG1094               ANOP  ,                                           02883000
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG1094A            02883100
&ZTLC                 SETC 'NO'                                         02883200
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG1095       02883300
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02883400
                      AIF   (N'&SKEYCOMPARE LE 1).ZG1094A  CK NUM       02883500
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02883600
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02883700
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02883800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02883900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02884000
.ZG1094A              ANOP  ,                                           02884100
.*------------------------------------------------------------------    02884200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02884300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02884400
.ZG1094A0             AIF   (K'&SECONDARYKEY LE 0).ZG1094A1  OK         02884500
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02884600
.ZG1094A1             AIF   (K'&SKEYREQTYPE LE 0).ZG1094A2  OK          02884700
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02884800
.ZG1094A2             AIF   (K'&SKEYRANGEEND LE 0).ZG1094A3  OK         02884900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02885000
.ZG1094A3             AIF   (K'&ZCVAL LE 0).ZG1094A4  OK                02885100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02885200
&ZMS                  SETC  '"SKEYCOMPARE'      *KMEIA* MNOTE           02885300
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02885400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02885500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02885600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02885700
.ZG1094A4             ANOP  ,                                           02885800
.*-------------------------------------------------------------------   02885900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02886000
.ZG1095               ANOP  ,                                           02886100
&ZTLC                 SETC 'YES'                                        02886200
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG1109       02886300
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02886400
                      AIF   (N'&SKEYCOMPARE LE 1).ZG1095A  CK NUM       02886500
&ZMS                  SETC  '"SKEYCOMPARE='     *KPOSA* MNOTE           02886600
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02886700
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02886800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02886900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02887000
.ZG1095A              ANOP  ,                                           02887100
.*----------------------------------------------------------------***   02887200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02887300
                      AIF   (N'&SECONDARYKEY LE 1).ZG1097A  CK NUM      02887400
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           02887500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02887600
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02887700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02887800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02887900
.ZG1097A              ANOP  ,                                           02888000
.*-------------------------------------------------------------------   02888100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02888200
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02888300
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02888400
                      AIF   (N'&SECONDARYKEY GT 1).ZG1097B  MULTI PARMS 02888500
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02888600
.ZG1097B              AIF   (K'&SECONDARYKEY(1) GT 0).ZG1097C           02888700
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02888800
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          02888900
&ZMS                  SETC  '&ZMS , "SECONDARYKEY" KEY AND ITS'         02889000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02889100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02889200
.ZG1097C              ANOP  ,                                           02889300
.*-------------------------------------------------------------------   02889400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02889500
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG1097R  NOT I/O   02889600
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG1097R      02889700
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02889800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1097P              02889900
                      AIF   (K'&ZCGPR GT 2).ZG1097Q                     02890000
                      AIF   ('&ZCGPR' EQ '0').ZG1097Q                   02890100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02890200
                      AIF   (T'&ZCGPR NE 'N').ZG1097Q  INVALID REG NAME 02890300
.ZG1097P              ANOP  ,                                           02890400
                      AIF   (T'&ZCGPR NE 'N').ZG1097R  NON NUMERIC      02890500
                      AIF   ('&ZCGPR' LT '2').ZG1097Q                   02890600
                      AIF   ('&ZCGPR' LE '12').ZG1097R                  02890700
.ZG1097Q              ANOP  ,                                           02890800
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           02890900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02891000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02891100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02891200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02891300
.ZG1097R              ANOP  ,                                           02891400
.*------------------------------------------------------------------    02891500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02891600
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02891700
.*-------------------------------------------------------------------   02891800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02891900
.ZG1101               ANOP  ,                                           02892000
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG1101A            02892100
&ZTLC                 SETC 'EQUAL'                                      02892200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1102       02892300
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02892400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1101A  CK NUM       02892500
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02892600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02892700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02892800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02892900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02893000
.ZG1101A              ANOP  ,                                           02893100
.*------------------------------------------------------------------    02893200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02893300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02893400
.ZG1101A0             AIF   (K'&SKEYRANGEEND LE 0).ZG1101A1  OK         02893500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02893600
.ZG1101A1             AIF   (K'&ZCVAL LE 0).ZG1101A2  OK                02893700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02893800
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02893900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02894000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02894100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02894200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02894300
.ZG1101A2             ANOP  ,                                           02894400
.*-------------------------------------------------------------------   02894500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02894600
.ZG1102               ANOP  ,                                           02894700
&ZTLC                 SETC 'LESSOREQUAL'                                02894800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1103       02894900
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02895000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1102A  CK NUM       02895100
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02895200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02895300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02895400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02895500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02895600
.ZG1102A              ANOP  ,                                           02895700
.*------------------------------------------------------------------    02895800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02895900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02896000
.ZG1102A0             AIF   (K'&SKEYRANGEEND LE 0).ZG1102A1  OK         02896100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02896200
.ZG1102A1             AIF   (K'&ZCVAL LE 0).ZG1102A2  OK                02896300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02896400
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02896500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02896600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02896700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02896800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02896900
.ZG1102A2             ANOP  ,                                           02897000
.*-------------------------------------------------------------------   02897100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02897200
.ZG1103               ANOP  ,                                           02897300
&ZTLC                 SETC 'GREATEROREQUAL'                             02897400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1104       02897500
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02897600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1103A  CK NUM       02897700
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02897800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02897900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02898000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02898100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02898200
.ZG1103A              ANOP  ,                                           02898300
.*------------------------------------------------------------------    02898400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02898500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02898600
.ZG1103A0             AIF   (K'&SKEYRANGEEND LE 0).ZG1103A1  OK         02898700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02898800
.ZG1103A1             AIF   (K'&ZCVAL LE 0).ZG1103A2  OK                02898900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02899000
&ZMS                  SETC  '"SKEYREQTYPE'      *KMEIA* MNOTE           02899100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02899200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02899300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02899400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02899500
.ZG1103A2             ANOP  ,                                           02899600
.*-------------------------------------------------------------------   02899700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02899800
.ZG1104               ANOP  ,                                           02899900
&ZTLC                 SETC 'RANGE'                                      02900000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1108       02900100
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02900200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1104A  CK NUM       02900300
&ZMS                  SETC  '"SKEYREQTYPE='     *KPOSA* MNOTE           02900400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02900500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02900600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02900700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02900800
.ZG1104A              ANOP  ,                                           02900900
.*----------------------------------------------------------------***   02901000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02901100
                      AIF   (N'&SKEYRANGEEND LE 1).ZG1106A  CK NUM      02901200
&ZMS                  SETC  '"SKEYRANGEEND='    *KPOSA* MNOTE           02901300
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02901400
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02901500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02901600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02901700
.ZG1106A              ANOP  ,                                           02901800
.*-------------------------------------------------------------------   02901900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02902000
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02902100
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02902200
                      AIF   (N'&SKEYRANGEEND GT 1).ZG1106B  MULTI PARMS 02902300
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02902400
.ZG1106B              AIF   (K'&SKEYRANGEEND(1) GT 0).ZG1106C           02902500
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02902600
&ZMS                  SETC  'WHEN "RANGE" IS SPECIFIED'  *KRQDA*        02902700
&ZMS                  SETC  '&ZMS , "SKEYRANGEEND" KEY AND ITS'         02902800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02902900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02903000
.ZG1106C              ANOP  ,                                           02903100
.*-------------------------------------------------------------------   02903200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02903300
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG1106R  NOT I/O   02903400
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG1106R      02903500
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02903600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1106P              02903700
                      AIF   (K'&ZCGPR GT 2).ZG1106Q                     02903800
                      AIF   ('&ZCGPR' EQ '0').ZG1106Q                   02903900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02904000
                      AIF   (T'&ZCGPR NE 'N').ZG1106Q  INVALID REG NAME 02904100
.ZG1106P              ANOP  ,                                           02904200
                      AIF   (T'&ZCGPR NE 'N').ZG1106R  NON NUMERIC      02904300
                      AIF   ('&ZCGPR' LT '2').ZG1106Q                   02904400
                      AIF   ('&ZCGPR' LE '12').ZG1106R                  02904500
.ZG1106Q              ANOP  ,                                           02904600
&ZMS                  SETC  '"SKEYRANGEEND='    *KGPRA* MNOTE           02904700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02904800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02904900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02905000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02905100
.ZG1106R              ANOP  ,                                           02905200
.*------------------------------------------------------------------    02905300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02905400
.ZG1108               ANOP  ,                                           02905500
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02905600
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG1108E  VALID ARG   02905700
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG1108D  OMITTED    02905800
&ZASYSLNDX            SETA  0                                           02905900
.ZG1108A              ANOP  ,           POSITIONAL MACRO KEY            02906000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02906100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1108C          02906200
&ZTLC                 SETC 'SKEYREQTYPE'                                02906300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1108A 02906400
.ZG1108B              ANOP  ,                                           02906500
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02906600
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'  *KOPTA* MNOTE      02906700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02906800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02906900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02907000
                      AGO   .ZG1108E                                    02907100
.ZG1108C              ANOP  ,                                           02907200
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02907300
&ZMS                  SETC  '"SKEYREQTYPE='     *KUKWA* MNOTE           02907400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02907500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02907600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02907700
&ZMS                  SETC  '&ZMS "EQUAL",'                             02907800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02907900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02908000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02908100
                      MNOTE 8,' &ZMS '                                  02908200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02908300
                      AGO   .ZG1108E                                    02908400
.ZG1108D              ANOP  ,                                           02908500
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02908600
.ZG1108E              ANOP  ,                                           02908700
.*------------------------------------------------------------------    02908800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02908900
.ZG1109               ANOP  ,                                           02909000
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02909100
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG1109E  VALID ARG   02909200
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG1109D  OMITTED    02909300
&ZASYSLNDX            SETA  0                                           02909400
.ZG1109A              ANOP  ,           POSITIONAL MACRO KEY            02909500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02909600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1109C          02909700
&ZTLC                 SETC 'SKEYCOMPARE'                                02909800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1109A 02909900
.ZG1109B              ANOP  ,                                           02910000
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02910100
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'  *KOPTA* MNOTE      02910200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02910300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02910400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02910500
                      AGO   .ZG1109E                                    02910600
.ZG1109C              ANOP  ,                                           02910700
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02910800
&ZMS                  SETC  '"SKEYCOMPARE='     *KUKWA* MNOTE           02910900
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02911000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02911100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02911200
&ZMS                  SETC  '&ZMS "NO"'                                 02911300
&ZMS                  SETC  '&ZMS OR "YES".'                            02911400
                      MNOTE 8,' &ZMS '                                  02911500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02911600
                      AGO   .ZG1109E                                    02911700
.ZG1109D              ANOP  ,                                           02911800
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02911900
.ZG1109E              ANOP  ,                                           02912000
.*------------------------------------------------------------------    02912100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02912200
.ZG1110               ANOP  ,                                           02912300
&ZXLISTTYPE           SETC  'INPUT'     SET IN/OUTPUT                   02912400
                      AIF   (K'&XLISTTYPE GT 0).ZG1110E  VALID ARG      02912500
                      AIF   (T'&LISTTYPE EQ 'O').ZG1110D  OMITTED       02912600
&ZASYSLNDX            SETA  0                                           02912700
.ZG1110A              ANOP  ,           POSITIONAL MACRO KEY            02912800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02912900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1110C          02913000
&ZTLC                 SETC 'LISTTYPE'                                   02913100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1110A 02913200
.ZG1110B              ANOP  ,                                           02913300
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02913400
&ZMS                  SETC  'THE "LISTTYPE" KEY'  *KOPTA* MNOTE         02913500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02913600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02913700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02913800
                      AGO   .ZG1110E                                    02913900
.ZG1110C              ANOP  ,                                           02914000
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02914100
&ZMS                  SETC  '"LISTTYPE='        *KUKWA* MNOTE           02914200
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02914300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02914400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02914500
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02914600
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02914700
                      MNOTE 8,' &ZMS '                                  02914800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02914900
                      AGO   .ZG1110E                                    02915000
.ZG1110D              ANOP  ,                                           02915100
&XLISTTYPE            SETC  'NAMELIST'  SET DEFAULT KEYWORD             02915200
.ZG1110E              ANOP  ,                                           02915300
.*------------------------------------------------------------------    02915400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02915500
                      AIF   (K'&LISTTYPE(1) GT 0).ZG1110F  PARM         02915600
&XLISTTYPE            SETC  ''          ENSURE NULL KEYWORD             02915700
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02915800
&ZMS                  SETC  'THE'                                       02915900
&ZMS                  SETC  '&ZMS "LISTTYPE" KEY AND ITS'               02916000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02916100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02916200
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02916300
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02916400
                      MNOTE 8,' &ZMS '                                  02916500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02916600
.ZG1110F              ANOP  ,                                           02916700
.*------------------------------------------------------------------    02916800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02916900
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02917000
.*-------------------------------------------------------------------   02917100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02917200
.ZG1113               ANOP  ,                                           02917300
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG1113A            02917400
&ZTLC                 SETC 'NO'                                         02917500
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG1114       02917600
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02917700
                      AIF   (N'&LISTCOMPARE LE 1).ZG1113A  CK NUM       02917800
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02917900
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02918000
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02918100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02918200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02918300
.ZG1113A              ANOP  ,                                           02918400
.*------------------------------------------------------------------    02918500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02918600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02918700
.ZG1113A0             AIF   (K'&LISTNUM LE 0).ZG1113A1  OK              02918800
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02918900
.ZG1113A1             AIF   (K'&AUTHCOMPARE LE 0).ZG1113A2  OK          02919000
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02919100
.ZG1113A2             AIF   (K'&AUTHCOMP LE 0).ZG1113A3  OK             02919200
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02919300
.ZG1113A3             AIF   (K'&AUTHCOMPTYPE LE 0).ZG1113A4  OK         02919400
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02919500
.ZG1113A4             AIF   (K'&ZCVAL LE 0).ZG1113A5  OK                02919600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02919700
&ZMS                  SETC  '"LISTCOMPARE'      *KMEIA* MNOTE           02919800
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02919900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02920000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02920100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02920200
.ZG1113A5             ANOP  ,                                           02920300
.*-------------------------------------------------------------------   02920400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02920500
.ZG1114               ANOP  ,                                           02920600
&ZTLC                 SETC 'YES'                                        02920700
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG1131       02920800
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02920900
                      AIF   (N'&LISTCOMPARE LE 1).ZG1114A  CK NUM       02921000
&ZMS                  SETC  '"LISTCOMPARE='     *KPOSA* MNOTE           02921100
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02921200
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02921300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02921400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02921500
.ZG1114A              ANOP  ,                                           02921600
.*----------------------------------------------------------------***   02921700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02921800
                      AIF   (N'&LISTNUM LE 1).ZG1116A  CK NUM           02921900
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           02922000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02922100
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02922200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02922300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02922400
.ZG1116A              ANOP  ,                                           02922500
.*-------------------------------------------------------------------   02922600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02922700
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02922800
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02922900
                      AIF   (N'&LISTNUM GT 1).ZG1116B  MULTI PARMS      02923000
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02923100
.ZG1116B              AIF   (K'&LISTNUM(1) GT 0).ZG1116C                02923200
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02923300
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          02923400
&ZMS                  SETC  '&ZMS , "LISTNUM" KEY AND ITS'              02923500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02923600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02923700
.ZG1116C              ANOP  ,                                           02923800
.*-------------------------------------------------------------------   02923900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02924000
                      AIF   (K'&ZXLISTNUM LE 0).ZG1116R  NOT I/O        02924100
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG1116R           02924200
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02924300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1116P              02924400
                      AIF   (K'&ZCGPR GT 2).ZG1116Q                     02924500
                      AIF   ('&ZCGPR' EQ '0').ZG1116Q                   02924600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02924700
                      AIF   (T'&ZCGPR NE 'N').ZG1116Q  INVALID REG NAME 02924800
.ZG1116P              ANOP  ,                                           02924900
                      AIF   (T'&ZCGPR NE 'N').ZG1116R  NON NUMERIC      02925000
                      AIF   ('&ZCGPR' LT '2').ZG1116Q                   02925100
                      AIF   ('&ZCGPR' LE '12').ZG1116R                  02925200
.ZG1116Q              ANOP  ,                                           02925300
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           02925400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02925500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02925600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02925700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02925800
.ZG1116R              ANOP  ,                                           02925900
.*------------------------------------------------------------------    02926000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02926100
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02926200
.*-------------------------------------------------------------------   02926300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02926400
.ZG1119               ANOP  ,                                           02926500
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG1119A            02926600
&ZTLC                 SETC 'NO'                                         02926700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG1120       02926800
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02926900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG1119A  CK NUM       02927000
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02927100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02927200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02927300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02927400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02927500
.ZG1119A              ANOP  ,                                           02927600
.*------------------------------------------------------------------    02927700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02927800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02927900
.ZG1119A0             AIF   (K'&AUTHCOMP LE 0).ZG1119A1  OK             02928000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02928100
.ZG1119A1             AIF   (K'&AUTHCOMPTYPE LE 0).ZG1119A2  OK         02928200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02928300
.ZG1119A2             AIF   (K'&ZCVAL LE 0).ZG1119A3  OK                02928400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02928500
&ZMS                  SETC  '"AUTHCOMPARE'      *KMEIA* MNOTE           02928600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02928700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02928800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02928900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02929000
.ZG1119A3             ANOP  ,                                           02929100
.*-------------------------------------------------------------------   02929200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02929300
.ZG1120               ANOP  ,                                           02929400
&ZTLC                 SETC 'YES'                                        02929500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG1129       02929600
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02929700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG1120A  CK NUM       02929800
&ZMS                  SETC  '"AUTHCOMPARE='     *KPOSA* MNOTE           02929900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02930000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02930100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02930200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02930300
.ZG1120A              ANOP  ,                                           02930400
.*----------------------------------------------------------------***   02930500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02930600
                      AIF   (N'&AUTHCOMP LE 1).ZG1122A  CK NUM          02930700
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           02930800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02930900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02931000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02931100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02931200
.ZG1122A              ANOP  ,                                           02931300
.*-------------------------------------------------------------------   02931400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02931500
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02931600
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02931700
                      AIF   (N'&AUTHCOMP GT 1).ZG1122B  MULTI PARMS     02931800
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02931900
.ZG1122B              AIF   (K'&AUTHCOMP(1) GT 0).ZG1122C               02932000
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02932100
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          02932200
&ZMS                  SETC  '&ZMS , "AUTHCOMP" KEY AND ITS'             02932300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02932400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02932500
.ZG1122C              ANOP  ,                                           02932600
.*-------------------------------------------------------------------   02932700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02932800
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG1122R  NOT I/O       02932900
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG1122R          02933000
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02933100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1122P              02933200
                      AIF   (K'&ZCGPR GT 2).ZG1122Q                     02933300
                      AIF   ('&ZCGPR' EQ '0').ZG1122Q                   02933400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02933500
                      AIF   (T'&ZCGPR NE 'N').ZG1122Q  INVALID REG NAME 02933600
.ZG1122P              ANOP  ,                                           02933700
                      AIF   (T'&ZCGPR NE 'N').ZG1122R  NON NUMERIC      02933800
                      AIF   ('&ZCGPR' LT '2').ZG1122Q                   02933900
                      AIF   ('&ZCGPR' LE '12').ZG1122R                  02934000
.ZG1122Q              ANOP  ,                                           02934100
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           02934200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02934300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02934400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02934500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02934600
.ZG1122R              ANOP  ,                                           02934700
.*----------------------------------------------------------------***   02934800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02934900
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG1124A  CK NUM      02935000
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KPOSA* MNOTE           02935100
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02935200
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02935300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02935400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02935500
.ZG1124A              ANOP  ,                                           02935600
.*-------------------------------------------------------------------   02935700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02935800
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02935900
.ZG1125A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG1126A                02936000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02936100
.*-------------------------------------------------------------------   02936200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02936300
.ZG1126A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG1127A          02936400
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02936500
.*-------------------------------------------------------------------   02936600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02936700
.ZG1127A              AIF   (K'&XAUTHCOMPTYPE GT 0).ZG1127C  KEYWORD    02936800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG1127B           02936900
&ZMS                  SETC  '"AUTHCOMPTYPE='    *KUKWA* MNOTE           02937000
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02937100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02937200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02937300
&ZMS                  SETC  '&ZMS "EQUAL"'                              02937400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02937500
                      MNOTE 8,' &ZMS '                                  02937600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02937700
.ZG1127B              ANOP  ,                                           02937800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02937900
.ZG1127C              ANOP  ,                                           02938000
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02938100
.*-------------------------------------------------------------------   02938200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02938300
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG1127D  KEY          02938400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG1127D  PARM     02938500
&ZMS                  SETC  '"AUTHCOMPTYPE'     *KDEPA* MNOTE           02938600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02938700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02938800
&ZMS                  SETC  '&ZMS '                                     02938900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02939000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02939100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02939200
.ZG1127D              ANOP  ,                                           02939300
.*------------------------------------------------------------------    02939400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02939500
.ZG1129               ANOP  ,                                           02939600
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02939700
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG1129E  VALID ARG   02939800
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG1129D  OMITTED    02939900
&ZASYSLNDX            SETA  0                                           02940000
.ZG1129A              ANOP  ,           POSITIONAL MACRO KEY            02940100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02940200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1129C          02940300
&ZTLC                 SETC 'AUTHCOMPARE'                                02940400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1129A 02940500
.ZG1129B              ANOP  ,                                           02940600
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02940700
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'  *KOPTA* MNOTE      02940800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02940900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02941000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02941100
                      AGO   .ZG1129E                                    02941200
.ZG1129C              ANOP  ,                                           02941300
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02941400
&ZMS                  SETC  '"AUTHCOMPARE='     *KUKWA* MNOTE           02941500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02941600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02941700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02941800
&ZMS                  SETC  '&ZMS "NO"'                                 02941900
&ZMS                  SETC  '&ZMS OR "YES".'                            02942000
                      MNOTE 8,' &ZMS '                                  02942100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02942200
                      AGO   .ZG1129E                                    02942300
.ZG1129D              ANOP  ,                                           02942400
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02942500
.ZG1129E              ANOP  ,                                           02942600
.*------------------------------------------------------------------    02942700
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02942800
                      AIF   (K'&LISTNUM(1) GT 0).ZG1129F  KEY           02942900
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG1129F  PARM      02943000
&ZMS                  SETC  '"AUTHCOMPARE'      *KDEPA* MNOTE           02943100
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02943200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02943300
&ZMS                  SETC  '&ZMS '                                     02943400
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02943500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02943600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02943700
.ZG1129F              ANOP  ,                                           02943800
.*------------------------------------------------------------------    02943900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02944000
.ZG1131               ANOP  ,                                           02944100
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02944200
                      AIF   (K'&XLISTCOMPARE GT 0).ZG1131E  VALID ARG   02944300
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG1131D  OMITTED    02944400
&ZASYSLNDX            SETA  0                                           02944500
.ZG1131A              ANOP  ,           POSITIONAL MACRO KEY            02944600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02944700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1131C          02944800
&ZTLC                 SETC 'LISTCOMPARE'                                02944900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1131A 02945000
.ZG1131B              ANOP  ,                                           02945100
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02945200
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'  *KOPTA* MNOTE      02945300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02945400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02945500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02945600
                      AGO   .ZG1131E                                    02945700
.ZG1131C              ANOP  ,                                           02945800
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02945900
&ZMS                  SETC  '"LISTCOMPARE='     *KUKWA* MNOTE           02946000
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02946100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02946200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02946300
&ZMS                  SETC  '&ZMS "NO"'                                 02946400
&ZMS                  SETC  '&ZMS OR "YES".'                            02946500
                      MNOTE 8,' &ZMS '                                  02946600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02946700
                      AGO   .ZG1131E                                    02946800
.ZG1131D              ANOP  ,                                           02946900
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02947000
.ZG1131E              ANOP  ,                                           02947100
.*------------------------------------------------------------------    02947200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02947300
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02947400
.*-------------------------------------------------------------------   02947500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02947600
.ZG1134               ANOP  ,                                           02947700
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG1134A            02947800
&ZTLC                 SETC 'NO'                                         02947900
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1135       02948000
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02948100
                      AIF   (N'&VERSCOMPARE LE 1).ZG1134A  CK NUM       02948200
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02948300
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02948400
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02948500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02948600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02948700
.ZG1134A              ANOP  ,                                           02948800
.*------------------------------------------------------------------    02948900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02949000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02949100
.ZG1134A0             AIF   (K'&VERSCOMP LE 0).ZG1134A1  OK             02949200
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02949300
.ZG1134A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1134A2  OK         02949400
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02949500
.ZG1134A2             AIF   (K'&ZCVAL LE 0).ZG1134A3  OK                02949600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02949700
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           02949800
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02949900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02950000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02950100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02950200
.ZG1134A3             ANOP  ,                                           02950300
.*-------------------------------------------------------------------   02950400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02950500
.ZG1135               ANOP  ,                                           02950600
&ZTLC                 SETC 'BYENTRY'                                    02950700
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1136       02950800
&XVERSCOMPARE         SETC  'BYENTRY'   SET KEYWORD                     02950900
                      AIF   (N'&VERSCOMPARE LE 1).ZG1135A  CK NUM       02951000
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02951100
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02951200
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02951300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02951400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02951500
.ZG1135A              ANOP  ,                                           02951600
.*------------------------------------------------------------------    02951700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02951800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02951900
.ZG1135A0             AIF   (K'&VERSCOMP LE 0).ZG1135A1  OK             02952000
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02952100
.ZG1135A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1135A2  OK         02952200
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02952300
.ZG1135A2             AIF   (K'&ZCVAL LE 0).ZG1135A3  OK                02952400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02952500
&ZMS                  SETC  '"VERSCOMPARE'      *KMEIA* MNOTE           02952600
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02952700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02952800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02952900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02953000
.ZG1135A3             ANOP  ,                                           02953100
.*-------------------------------------------------------------------   02953200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02953300
.ZG1136               ANOP  ,                                           02953400
&ZTLC                 SETC 'YES'                                        02953500
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1145       02953600
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02953700
                      AIF   (N'&VERSCOMPARE LE 1).ZG1136A  CK NUM       02953800
&ZMS                  SETC  '"VERSCOMPARE='     *KPOSA* MNOTE           02953900
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02954000
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02954100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02954200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02954300
.ZG1136A              ANOP  ,                                           02954400
.*----------------------------------------------------------------***   02954500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02954600
                      AIF   (N'&VERSCOMP LE 1).ZG1138A  CK NUM          02954700
&ZMS                  SETC  '"VERSCOMP='        *KPOSA* MNOTE           02954800
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02954900
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02955000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02955100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02955200
.ZG1138A              ANOP  ,                                           02955300
.*-------------------------------------------------------------------   02955400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02955500
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02955600
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02955700
                      AIF   (N'&VERSCOMP GT 1).ZG1138B  MULTI PARMS     02955800
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02955900
.ZG1138B              AIF   (K'&VERSCOMP(1) GT 0).ZG1138C               02956000
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02956100
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*          02956200
&ZMS                  SETC  '&ZMS , "VERSCOMP" KEY AND ITS'             02956300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02956400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02956500
.ZG1138C              ANOP  ,                                           02956600
.*-------------------------------------------------------------------   02956700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02956800
                      AIF   (K'&ZXVERSCOMP LE 0).ZG1138R  NOT I/O       02956900
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG1138R          02957000
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02957100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1138P              02957200
                      AIF   (K'&ZCGPR GT 2).ZG1138Q                     02957300
                      AIF   ('&ZCGPR' EQ '0').ZG1138Q                   02957400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02957500
                      AIF   (T'&ZCGPR NE 'N').ZG1138Q  INVALID REG NAME 02957600
.ZG1138P              ANOP  ,                                           02957700
                      AIF   (T'&ZCGPR NE 'N').ZG1138R  NON NUMERIC      02957800
                      AIF   ('&ZCGPR' LT '2').ZG1138Q                   02957900
                      AIF   ('&ZCGPR' LE '12').ZG1138R                  02958000
.ZG1138Q              ANOP  ,                                           02958100
&ZMS                  SETC  '"VERSCOMP='        *KGPRA* MNOTE           02958200
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02958300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02958400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02958500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02958600
.ZG1138R              ANOP  ,                                           02958700
.*----------------------------------------------------------------***   02958800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02958900
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG1140A  CK NUM      02959000
&ZMS                  SETC  '"VERSCOMPTYPE='    *KPOSA* MNOTE           02959100
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02959200
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02959300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02959400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02959500
.ZG1140A              ANOP  ,                                           02959600
.*-------------------------------------------------------------------   02959700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02959800
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02959900
.ZG1141A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG1142A                02960000
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02960100
.*-------------------------------------------------------------------   02960200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02960300
.ZG1142A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG1143A          02960400
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02960500
.*-------------------------------------------------------------------   02960600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02960700
.ZG1143A              AIF   (K'&XVERSCOMPTYPE GT 0).ZG1143C  KEYWORD    02960800
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1143B           02960900
&ZMS                  SETC  '"VERSCOMPTYPE='    *KUKWA* MNOTE           02961000
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02961100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02961200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02961300
&ZMS                  SETC  '&ZMS "EQUAL"'                              02961400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02961500
                      MNOTE 8,' &ZMS '                                  02961600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02961700
.ZG1143B              ANOP  ,                                           02961800
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02961900
.ZG1143C              ANOP  ,                                           02962000
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02962100
.*-------------------------------------------------------------------   02962200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02962300
                      AIF   (K'&VERSCOMP(1) GT 0).ZG1143D  KEY          02962400
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1143D  PARM     02962500
&ZMS                  SETC  '"VERSCOMPTYPE'     *KDEPA* MNOTE           02962600
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02962700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02962800
&ZMS                  SETC  '&ZMS '                                     02962900
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02963000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02963100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02963200
.ZG1143D              ANOP  ,                                           02963300
.*------------------------------------------------------------------    02963400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02963500
.ZG1145               ANOP  ,                                           02963600
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02963700
                      AIF   (K'&XVERSCOMPARE GT 0).ZG1145E  VALID ARG   02963800
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG1145D  OMITTED    02963900
&ZASYSLNDX            SETA  0                                           02964000
.ZG1145A              ANOP  ,           POSITIONAL MACRO KEY            02964100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02964200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1145C          02964300
&ZTLC                 SETC 'VERSCOMPARE'                                02964400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1145A 02964500
.ZG1145B              ANOP  ,                                           02964600
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02964700
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'  *KOPTA* MNOTE      02964800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02964900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02965000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02965100
                      AGO   .ZG1145E                                    02965200
.ZG1145C              ANOP  ,                                           02965300
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02965400
&ZMS                  SETC  '"VERSCOMPARE='     *KUKWA* MNOTE           02965500
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02965600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02965700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02965800
&ZMS                  SETC  '&ZMS "NO",'                                02965900
&ZMS                  SETC  '&ZMS "BYENTRY",'                           02966000
&ZMS                  SETC  '&ZMS OR "YES".'                            02966100
                      MNOTE 8,' &ZMS '                                  02966200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02966300
                      AGO   .ZG1145E                                    02966400
.ZG1145D              ANOP  ,                                           02966500
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02966600
.ZG1145E              ANOP  ,                                           02966700
.*----------------------------------------------------------------***   02966800
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02966900
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            02967000
                      AIF   (K'&BUFLIST LE 0).ZG1147C                   02967100
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   02967200
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   02967300
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   02967400
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      02967500
                      AIF   (N'&BUFLIST GT 1).ZG1147A                   02967600
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              02967700
.ZG1147A              AIF   (N'&BUFLIST LE 1).ZG1147B  CK NUM           02967800
&ZMS                  SETC  '"BUFLIST='         *KPOSA* MNOTE           02967900
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02968000
&ZMS                  SETC  '&ZMS "BUFLIST"'                            02968100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02968200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02968300
.ZG1147B              AIF   (K'&XBUFLIST GT 0).ZG1147C  ONE PARM        02968400
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02968500
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02968600
&ZMS                  SETC  ' '         *KRQDA*                         02968700
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                02968800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02968900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02969000
.ZG1147C              ANOP  ,                                           02969100
.*----------------------------------------------------------------***   02969200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02969300
                      AIF   (K'&BUFFER LE 0).ZG1175D  NO ME KEY         02969400
                      AIF   (N'&BUFFER LE 1).ZG1175A  CK NUM            02969500
&ZMS                  SETC  '"BUFFER='  *KPOSA* MNOTE                   02969600
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02969700
&ZMS                  SETC  '&ZMS "BUFFER"'                             02969800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02969900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02970000
.ZG1175A              AIF   (K'&XDATAREA LE 0).ZG1175B                  02970100
&ZMS                  SETC  '"BUFFER'   *KMEKA* MNOTE                   02970200
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02970300
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02970400
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          02970500
                      MNOTE 8,' &ZMS KEY.'                              02970600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02970700
                      AGO   .ZG1175D                                    02970800
.*                                                                      02970900
.ZG1175B              ANOP  ,                                           02971000
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   02971100
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   02971200
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   02971300
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      02971400
                      AIF   (N'&BUFFER GT 1).ZG1175C                    02971500
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              02971600
.ZG1175C              AIF   (K'&XBUFFER GT 0).ZG1175D  ONE PARM         02971700
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02971800
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 02971900
&ZMS                  SETC  ' '         *KRQDA*                         02972000
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 02972100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02972200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02972300
.ZG1175D              ANOP  ,                                           02972400
.*------------------------------------------------------------------    02972500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           02972600
                      AIF   (K'&XDATAREA GT 0).ZG1187B                  02972700
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02972800
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02972900
&XDATAREA             SETC  ''          ENSURE NULL                     02973000
&XBUFLIST             SETC  ''          ENSURE NULL                     02973100
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       02973200
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         02973300
&ZMS                  SETC  '&ZMS REQUIRED:'                            02973400
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            02973500
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           02973600
                      MNOTE 8,' &ZMS '                                  02973700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02973800
.ZG1187B              ANOP  ,                                           02973900
.*-------------------------------------------------------------------   02974000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02974100
                      AIF   (T'&BUFLIST  EQ 'O').ZG1175  OMITTED        02974200
.ZG1147               AIF   ('&XDATAREA' NE 'BUFLIST').ZG1175           02974300
.*-------------------------------------------------------------------   02974400
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02974500
&ZCVAL                SETC ''           ERROR KEY FIELD                 02974600
.ZG1147I0             AIF   (K'&BUFSIZE LE 0).ZG1147I1                  02974700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          02974800
.ZG1147I1             AIF   (K'&ZCVAL LE 0).ZG1147J  KEY                02974900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02975000
&ZMS                  SETC  '"BUFLIST'  *KMEIA* MNOTE                   02975100
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           02975200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02975300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02975400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02975500
.ZG1147J              ANOP  ,                                           02975600
.*-------------------------------------------------------------------   02975700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02975800
                      AIF   (K'&ZXBUFLIST LE 0).ZG1147R  NOT I/O        02975900
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG1147R           02976000
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                02976100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1147P              02976200
                      AIF   (K'&ZCGPR GT 2).ZG1147Q                     02976300
                      AIF   ('&ZCGPR' EQ '0').ZG1147Q                   02976400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02976500
                      AIF   (T'&ZCGPR NE 'N').ZG1147Q  INVALID REG NAME 02976600
.ZG1147P              ANOP  ,                                           02976700
                      AIF   (T'&ZCGPR NE 'N').ZG1147R  NON NUMERIC      02976800
                      AIF   ('&ZCGPR' LT '2').ZG1147Q                   02976900
                      AIF   ('&ZCGPR' LE '12').ZG1147R                  02977000
.ZG1147Q              ANOP  ,                                           02977100
&ZMS                  SETC  '"BUFLIST='         *KGPRA* MNOTE           02977200
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02977300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02977400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02977500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02977600
.ZG1147R              ANOP  ,                                           02977700
.*------------------------------------------------------------------    02977800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02977900
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            02978000
.*-------------------------------------------------------------------   02978100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02978200
.ZG1150               ANOP  ,                                           02978300
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG1150A            02978400
&ZTLC                 SETC 'VIRTUAL'                                    02978500
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1162       02978600
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     02978700
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1150A  CK NUM       02978800
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           02978900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02979000
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02979100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02979200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02979300
.ZG1150A              ANOP  ,                                           02979400
.*------------------------------------------------------------------    02979500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02979600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02979700
.ZG1150A0             AIF   (K'&BUFADDRSIZE LE 0).ZG1150A1  OK          02979800
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     02979900
.ZG1150A1             AIF   (K'&ZCVAL LE 0).ZG1150A2  OK                02980000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02980100
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           02980200
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02980300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02980400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02980500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02980600
.ZG1150A2             ANOP  ,                                           02980700
.*------------------------------------------------------------------    02980800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02980900
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02981000
.*-------------------------------------------------------------------   02981100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02981200
.ZG1153               ANOP  ,                                           02981300
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1153A               02981400
&ZTLC                 SETC 'YES'                                        02981500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1157          02981600
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02981700
                      AIF   (N'&PAGEABLE LE 1).ZG1153A  CK NUM          02981800
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02981900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02982000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02982100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02982200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02982300
.ZG1153A              ANOP  ,                                           02982400
.*----------------------------------------------------------------***   02982500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02982600
                      AIF   (N'&BUFSTGKEY LE 1).ZG1155A  CK NUM         02982700
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           02982800
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02982900
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02983000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02983100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02983200
.ZG1155A              ANOP  ,                                           02983300
.*-------------------------------------------------------------------   02983400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02983500
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02983600
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02983700
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1155B  PARM        02983800
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02983900
                      AIF   (N'&BUFSTGKEY GT 1).ZG1155B  MULTI PARMS    02984000
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02984100
.ZG1155B              ANOP  ,                                           02984200
.*-------------------------------------------------------------------   02984300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02984400
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1155R  NOT I/O      02984500
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1155R                 02984600
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1155R         02984700
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02984800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1155P              02984900
                      AIF   (K'&ZCGPR GT 2).ZG1155Q                     02985000
                      AIF   ('&ZCGPR' EQ '0').ZG1155Q                   02985100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02985200
                      AIF   (T'&ZCGPR NE 'N').ZG1155Q  INVALID REG NAME 02985300
.ZG1155P              ANOP  ,                                           02985400
                      AIF   (T'&ZCGPR NE 'N').ZG1155R  NON NUMERIC      02985500
                      AIF   ('&ZCGPR' LT '2').ZG1155Q                   02985600
                      AIF   ('&ZCGPR' LE '12').ZG1155R                  02985700
.ZG1155Q              ANOP  ,                                           02985800
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           02985900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02986000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02986100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02986200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02986300
.ZG1155R              ANOP  ,                                           02986400
.*-------------------------------------------------------------------   02986500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02986600
.ZG1157               ANOP  ,                                           02986700
&ZTLC                 SETC 'NO'                                         02986800
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1158          02986900
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02987000
                      AIF   (N'&PAGEABLE LE 1).ZG1157A  CK NUM          02987100
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           02987200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02987300
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02987400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02987500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02987600
.ZG1157A              ANOP  ,                                           02987700
.*------------------------------------------------------------------    02987800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02987900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02988000
.ZG1157A0             AIF   (K'&BUFSTGKEY LE 0).ZG1157A1  OK            02988100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02988200
.ZG1157A1             AIF   (K'&ZCVAL LE 0).ZG1157A2  OK                02988300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02988400
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           02988500
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02988600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02988700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02988800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02988900
.ZG1157A2             ANOP  ,                                           02989000
.*------------------------------------------------------------------    02989100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02989200
.ZG1158               ANOP  ,                                           02989300
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02989400
                      AIF   (K'&XPAGEABLE GT 0).ZG1158E  VALID ARG      02989500
                      AIF   (T'&PAGEABLE EQ 'O').ZG1158D  OMITTED       02989600
&ZASYSLNDX            SETA  0                                           02989700
.ZG1158A              ANOP  ,           POSITIONAL MACRO KEY            02989800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02989900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1158C          02990000
&ZTLC                 SETC 'PAGEABLE'                                   02990100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1158A 02990200
.ZG1158B              ANOP  ,                                           02990300
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02990400
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         02990500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02990600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02990700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02990800
                      AGO   .ZG1158E                                    02990900
.ZG1158C              ANOP  ,                                           02991000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02991100
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           02991200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02991300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02991400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02991500
&ZMS                  SETC  '&ZMS "YES"'                                02991600
&ZMS                  SETC  '&ZMS OR "NO".'                             02991700
                      MNOTE 8,' &ZMS '                                  02991800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02991900
                      AGO   .ZG1158E                                    02992000
.ZG1158D              ANOP  ,                                           02992100
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02992200
.ZG1158E              ANOP  ,                                           02992300
.*----------------------------------------------------------------***   02992400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02992500
                      AIF   (N'&BUFALET LE 1).ZG1160A  CK NUM           02992600
&ZMS                  SETC  '"BUFALET='         *KPOSA* MNOTE           02992700
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02992800
&ZMS                  SETC  '&ZMS "BUFALET"'                            02992900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02993000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02993100
.ZG1160A              ANOP  ,                                           02993200
.*-------------------------------------------------------------------   02993300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02993400
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   02993500
&XBUFALET             SETC  'NO_BUFALET'                                02993600
                      AIF   (K'&BUFALET(1) LE 0).ZG1160B  PARM          02993700
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           02993800
                      AIF   (N'&BUFALET GT 1).ZG1160B  MULTI PARMS      02993900
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   02994000
.ZG1160B              ANOP  ,                                           02994100
.*-------------------------------------------------------------------   02994200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02994300
                      AIF   (K'&ZXBUFALET LE 0).ZG1160R  NOT I/O        02994400
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG1160R                    02994500
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG1160R           02994600
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                02994700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1160P              02994800
                      AIF   (K'&ZCGPR GT 2).ZG1160Q                     02994900
                      AIF   ('&ZCGPR' EQ '0').ZG1160Q                   02995000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02995100
                      AIF   (T'&ZCGPR NE 'N').ZG1160Q  INVALID REG NAME 02995200
.ZG1160P              ANOP  ,                                           02995300
                      AIF   (T'&ZCGPR NE 'N').ZG1160R  NON NUMERIC      02995400
                      AIF   ('&ZCGPR' LT '2').ZG1160Q                   02995500
                      AIF   ('&ZCGPR' LE '12').ZG1160R                  02995600
.ZG1160Q              ANOP  ,                                           02995700
&ZMS                  SETC  '"BUFALET='         *KGPRA* MNOTE           02995800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02995900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02996000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02996100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02996200
.ZG1160R              ANOP  ,                                           02996300
.*-------------------------------------------------------------------   02996400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02996500
.ZG1162               ANOP  ,                                           02996600
&ZTLC                 SETC 'REAL'                                       02996700
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1168       02996800
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     02996900
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1162A  CK NUM       02997000
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           02997100
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02997200
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02997300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02997400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02997500
.ZG1162A              ANOP  ,                                           02997600
.*------------------------------------------------------------------    02997700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02997800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02997900
.ZG1162A0             AIF   (K'&PAGEABLE LE 0).ZG1162A1  OK             02998000
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      02998100
.ZG1162A1             AIF   (K'&BUFSTGKEY LE 0).ZG1162A2  OK            02998200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02998300
.ZG1162A2             AIF   (K'&BUFALET LE 0).ZG1162A3  OK              02998400
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      02998500
.ZG1162A3             AIF   (K'&ZCVAL LE 0).ZG1162A4  OK                02998600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02998700
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           02998800
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02998900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02999000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02999100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02999200
.ZG1162A4             ANOP  ,                                           02999300
.*------------------------------------------------------------------    02999400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02999500
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            02999600
.*-------------------------------------------------------------------   02999700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02999800
.ZG1165               ANOP  ,                                           02999900
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG1165A            03000000
&ZTLC                 SETC '31'                                         03000100
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1166       03000200
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     03000300
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1165A  CK NUM       03000400
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           03000500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03000600
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        03000700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03000800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03000900
.ZG1165A              ANOP  ,                                           03001000
.*-------------------------------------------------------------------   03001100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03001200
.ZG1166               ANOP  ,                                           03001300
&ZTLC                 SETC '64'                                         03001400
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1167       03001500
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     03001600
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1166A  CK NUM       03001700
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           03001800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03001900
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        03002000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03002100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03002200
.ZG1166A              ANOP  ,                                           03002300
.*------------------------------------------------------------------    03002400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03002500
.ZG1167               ANOP  ,                                           03002600
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   03002700
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG1167E  VALID ARG   03002800
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG1167D  OMITTED    03002900
&ZASYSLNDX            SETA  0                                           03003000
.ZG1167A              ANOP  ,           POSITIONAL MACRO KEY            03003100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03003200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1167C          03003300
&ZTLC                 SETC 'BUFADDRSIZE'                                03003400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1167A 03003500
.ZG1167B              ANOP  ,                                           03003600
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 03003700
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE      03003800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03003900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03004000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03004100
                      AGO   .ZG1167E                                    03004200
.ZG1167C              ANOP  ,                                           03004300
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 03004400
&ZMS                  SETC  '"BUFADDRSIZE='     *KUKWA* MNOTE           03004500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03004600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03004700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03004800
&ZMS                  SETC  '&ZMS "31"'                                 03004900
&ZMS                  SETC  '&ZMS OR "64".'                             03005000
                      MNOTE 8,' &ZMS '                                  03005100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03005200
                      AGO   .ZG1167E                                    03005300
.ZG1167D              ANOP  ,                                           03005400
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             03005500
.ZG1167E              ANOP  ,                                           03005600
.*------------------------------------------------------------------    03005700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03005800
.ZG1168               ANOP  ,                                           03005900
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   03006000
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG1168E  VALID ARG   03006100
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG1168D  OMITTED    03006200
&ZASYSLNDX            SETA  0                                           03006300
.ZG1168A              ANOP  ,           POSITIONAL MACRO KEY            03006400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03006500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1168C          03006600
&ZTLC                 SETC 'BUFADDRTYPE'                                03006700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1168A 03006800
.ZG1168B              ANOP  ,                                           03006900
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 03007000
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE      03007100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03007200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03007300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03007400
                      AGO   .ZG1168E                                    03007500
.ZG1168C              ANOP  ,                                           03007600
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 03007700
&ZMS                  SETC  '"BUFADDRTYPE='     *KUKWA* MNOTE           03007800
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        03007900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03008000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03008100
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            03008200
&ZMS                  SETC  '&ZMS OR "REAL".'                           03008300
                      MNOTE 8,' &ZMS '                                  03008400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03008500
                      AGO   .ZG1168E                                    03008600
.ZG1168D              ANOP  ,                                           03008700
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             03008800
.ZG1168E              ANOP  ,                                           03008900
.*----------------------------------------------------------------***   03009000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03009100
                      AIF   (N'&BUFNUM LE 1).ZG1170A  CK NUM            03009200
&ZMS                  SETC  '"BUFNUM='  *KPOSA* MNOTE                   03009300
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             03009400
&ZMS                  SETC  '&ZMS "BUFNUM"'                             03009500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03009600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03009700
.ZG1170A              ANOP  ,                                           03009800
.*-------------------------------------------------------------------   03009900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03010000
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   03010100
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           03010200
                      AIF   (N'&BUFNUM GT 1).ZG1170B  MULTI PARMS       03010300
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   03010400
.ZG1170B              AIF   (K'&BUFNUM(1) GT 0).ZG1170C                 03010500
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 03010600
&ZMS                  SETC  ' '         *KRQDA*                         03010700
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 03010800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03010900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03011000
.ZG1170C              ANOP  ,                                           03011100
.*-------------------------------------------------------------------   03011200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03011300
                      AIF   (K'&ZXBUFNUM LE 0).ZG1170R  NOT I/O         03011400
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG1170R            03011500
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  03011600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1170P              03011700
                      AIF   (K'&ZCGPR GT 2).ZG1170Q                     03011800
                      AIF   ('&ZCGPR' EQ '0').ZG1170Q                   03011900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03012000
                      AIF   (T'&ZCGPR NE 'N').ZG1170Q  INVALID REG NAME 03012100
.ZG1170P              ANOP  ,                                           03012200
                      AIF   (T'&ZCGPR NE 'N').ZG1170R  NON NUMERIC      03012300
                      AIF   ('&ZCGPR' LT '2').ZG1170Q                   03012400
                      AIF   ('&ZCGPR' LE '12').ZG1170R                  03012500
.ZG1170Q              ANOP  ,                                           03012600
&ZMS                  SETC  '"BUFNUM='  *KGPRA* MNOTE                   03012700
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             03012800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03012900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03013000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03013100
.ZG1170R              ANOP  ,                                           03013200
.*----------------------------------------------------------------***   03013300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03013400
                      AIF   (N'&BUFINCRNUM LE 1).ZG1173A  CK NUM        03013500
&ZMS                  SETC  '"BUFINCRNUM='      *KPOSA* MNOTE           03013600
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         03013700
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         03013800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03013900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03014000
.ZG1173A              ANOP  ,                                           03014100
.*-------------------------------------------------------------------   03014200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03014300
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   03014400
&XBUFINCRNUM          SETC  '16'                                        03014500
                      AIF   (K'&BUFINCRNUM(1) LE 0).ZG1173B  PARM       03014600
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           03014700
                      AIF   (N'&BUFINCRNUM GT 1).ZG1173B  MULTI PARMS   03014800
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           03014900
.ZG1173B              ANOP  ,                                           03015000
.*-------------------------------------------------------------------   03015100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03015200
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG1173R  NOT I/O     03015300
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG1173R        03015400
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          03015500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1173P              03015600
                      AIF   (K'&ZCGPR GT 2).ZG1173Q                     03015700
                      AIF   ('&ZCGPR' EQ '0').ZG1173Q                   03015800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03015900
                      AIF   (T'&ZCGPR NE 'N').ZG1173Q  INVALID REG NAME 03016000
.ZG1173P              ANOP  ,                                           03016100
                      AIF   (T'&ZCGPR NE 'N').ZG1173R  NON NUMERIC      03016200
                      AIF   ('&ZCGPR' LT '2').ZG1173Q                   03016300
                      AIF   ('&ZCGPR' LE '12').ZG1173R                  03016400
.ZG1173Q              ANOP  ,                                           03016500
&ZMS                  SETC  '"BUFINCRNUM='      *KGPRA* MNOTE           03016600
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         03016700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03016800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03016900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03017000
.ZG1173R              ANOP  ,                                           03017100
.*-------------------------------------------------------------------   03017200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           03017300
.ZG1175               AIF   ('&XDATAREA' NE 'BUFFER').ZG1187            03017400
.*-------------------------------------------------------------------   03017500
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                03017600
&ZCVAL                SETC ''           ERROR KEY FIELD                 03017700
.ZG1175I0             AIF   (K'&BUFADDRTYPE LE 0).ZG1175I1              03017800
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         03017900
.ZG1175I1             AIF   (K'&BUFALET LE 0).ZG1175I2                  03018000
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          03018100
.ZG1175I2             AIF   (K'&BUFADDRSIZE LE 0).ZG1175I3              03018200
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         03018300
.ZG1175I3             AIF   (K'&BUFNUM LE 0).ZG1175I4                   03018400
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          03018500
.ZG1175I4             AIF   (K'&BUFINCRNUM LE 0).ZG1175I5               03018600
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          03018700
.ZG1175I5             AIF   (K'&ZCVAL LE 0).ZG1175J  KEY                03018800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03018900
&ZMS                  SETC  '"BUFFER'   *KMEIA* MNOTE                   03019000
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            03019100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03019200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03019300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03019400
.ZG1175J              ANOP  ,                                           03019500
.*-------------------------------------------------------------------   03019600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 03019700
                      AIF   (K'&ZXBUFFER LE 0).ZG1175R  NOT I/O         03019800
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG1175R            03019900
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  03020000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1175P              03020100
                      AIF   (K'&ZCGPR GT 2).ZG1175Q                     03020200
                      AIF   ('&ZCGPR' EQ '0').ZG1175Q                   03020300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03020400
                      AIF   (T'&ZCGPR NE 'N').ZG1175Q  INVALID REG NAME 03020500
.ZG1175P              ANOP  ,                                           03020600
                      AIF   (T'&ZCGPR NE 'N').ZG1175R  NON NUMERIC      03020700
                      AIF   ('&ZCGPR' LT '2').ZG1175Q                   03020800
                      AIF   ('&ZCGPR' LE '12').ZG1175R                  03020900
.ZG1175Q              ANOP  ,                                           03021000
&ZMS                  SETC  '"BUFFER='  *KGPRA* MNOTE                   03021100
&ZMS                  SETC  '&ZMS.&BUFFER"'                             03021200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03021300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03021400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03021500
.ZG1175R              ANOP  ,                                           03021600
.*------------------------------------------------------------------    03021700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03021800
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            03021900
.*-------------------------------------------------------------------   03022000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03022100
.ZG1178               ANOP  ,                                           03022200
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1178A               03022300
&ZTLC                 SETC 'YES'                                        03022400
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1182          03022500
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     03022600
                      AIF   (N'&PAGEABLE LE 1).ZG1178A  CK NUM          03022700
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           03022800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03022900
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           03023000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03023100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03023200
.ZG1178A              ANOP  ,                                           03023300
.*----------------------------------------------------------------***   03023400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03023500
                      AIF   (N'&BUFSTGKEY LE 1).ZG1180A  CK NUM         03023600
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           03023700
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          03023800
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          03023900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03024000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03024100
.ZG1180A              ANOP  ,                                           03024200
.*-------------------------------------------------------------------   03024300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03024400
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   03024500
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               03024600
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1180B  PARM        03024700
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           03024800
                      AIF   (N'&BUFSTGKEY GT 1).ZG1180B  MULTI PARMS    03024900
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           03025000
.ZG1180B              ANOP  ,                                           03025100
.*-------------------------------------------------------------------   03025200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03025300
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1180R  NOT I/O      03025400
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1180R                 03025500
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1180R         03025600
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            03025700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1180P              03025800
                      AIF   (K'&ZCGPR GT 2).ZG1180Q                     03025900
                      AIF   ('&ZCGPR' EQ '0').ZG1180Q                   03026000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03026100
                      AIF   (T'&ZCGPR NE 'N').ZG1180Q  INVALID REG NAME 03026200
.ZG1180P              ANOP  ,                                           03026300
                      AIF   (T'&ZCGPR NE 'N').ZG1180R  NON NUMERIC      03026400
                      AIF   ('&ZCGPR' LT '2').ZG1180Q                   03026500
                      AIF   ('&ZCGPR' LE '12').ZG1180R                  03026600
.ZG1180Q              ANOP  ,                                           03026700
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           03026800
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          03026900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03027000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03027100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03027200
.ZG1180R              ANOP  ,                                           03027300
.*-------------------------------------------------------------------   03027400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03027500
.ZG1182               ANOP  ,                                           03027600
&ZTLC                 SETC 'NO'                                         03027700
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1183          03027800
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     03027900
                      AIF   (N'&PAGEABLE LE 1).ZG1182A  CK NUM          03028000
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           03028100
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03028200
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           03028300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03028400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03028500
.ZG1182A              ANOP  ,                                           03028600
.*------------------------------------------------------------------    03028700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03028800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03028900
.ZG1182A0             AIF   (K'&BUFSTGKEY LE 0).ZG1182A1  OK            03029000
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      03029100
.ZG1182A1             AIF   (K'&ZCVAL LE 0).ZG1182A2  OK                03029200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03029300
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           03029400
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          03029500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03029600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03029700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03029800
.ZG1182A2             ANOP  ,                                           03029900
.*------------------------------------------------------------------    03030000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03030100
.ZG1183               ANOP  ,                                           03030200
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   03030300
                      AIF   (K'&XPAGEABLE GT 0).ZG1183E  VALID ARG      03030400
                      AIF   (T'&PAGEABLE EQ 'O').ZG1183D  OMITTED       03030500
&ZASYSLNDX            SETA  0                                           03030600
.ZG1183A              ANOP  ,           POSITIONAL MACRO KEY            03030700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03030800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1183C          03030900
&ZTLC                 SETC 'PAGEABLE'                                   03031000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1183A 03031100
.ZG1183B              ANOP  ,                                           03031200
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 03031300
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         03031400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03031500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03031600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03031700
                      AGO   .ZG1183E                                    03031800
.ZG1183C              ANOP  ,                                           03031900
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 03032000
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           03032100
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03032200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03032300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03032400
&ZMS                  SETC  '&ZMS "YES"'                                03032500
&ZMS                  SETC  '&ZMS OR "NO".'                             03032600
                      MNOTE 8,' &ZMS '                                  03032700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03032800
                      AGO   .ZG1183E                                    03032900
.ZG1183D              ANOP  ,                                           03033000
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             03033100
.ZG1183E              ANOP  ,                                           03033200
.*----------------------------------------------------------------***   03033300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03033400
                      AIF   (N'&BUFSIZE LE 1).ZG1185A  CK NUM           03033500
&ZMS                  SETC  '"BUFSIZE='         *KPOSA* MNOTE           03033600
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            03033700
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            03033800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03033900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03034000
.ZG1185A              ANOP  ,                                           03034100
.*-------------------------------------------------------------------   03034200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03034300
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   03034400
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           03034500
                      AIF   (N'&BUFSIZE GT 1).ZG1185B  MULTI PARMS      03034600
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   03034700
.ZG1185B              AIF   (K'&BUFSIZE(1) GT 0).ZG1185C                03034800
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 03034900
&ZMS                  SETC  ' '         *KRQDA*                         03035000
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                03035100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03035200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03035300
.ZG1185C              ANOP  ,                                           03035400
.*-------------------------------------------------------------------   03035500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03035600
                      AIF   (K'&ZXBUFSIZE LE 0).ZG1185R  NOT I/O        03035700
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG1185R           03035800
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                03035900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1185P              03036000
                      AIF   (K'&ZCGPR GT 2).ZG1185Q                     03036100
                      AIF   ('&ZCGPR' EQ '0').ZG1185Q                   03036200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03036300
                      AIF   (T'&ZCGPR NE 'N').ZG1185Q  INVALID REG NAME 03036400
.ZG1185P              ANOP  ,                                           03036500
                      AIF   (T'&ZCGPR NE 'N').ZG1185R  NON NUMERIC      03036600
                      AIF   ('&ZCGPR' LT '2').ZG1185Q                   03036700
                      AIF   ('&ZCGPR' LE '12').ZG1185R                  03036800
.ZG1185Q              ANOP  ,                                           03036900
&ZMS                  SETC  '"BUFSIZE='         *KGPRA* MNOTE           03037000
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            03037100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03037200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03037300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03037400
.ZG1185R              ANOP  ,                                           03037500
.*-------------------------------------------------------------------   03037600
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            03037700
.ZG1187               ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     03037800
.*------------------------------------------------------------------    03037900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03038000
.ZG1188               ANOP  ,                                           03038100
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   03038200
                      AIF   (K'&XREQUEST GT 0).ZG1188E  VALID ARG       03038300
                      AIF   (T'&REQUEST EQ 'O').ZG1188D  OMITTED        03038400
&ZASYSLNDX            SETA  0                                           03038500
.ZG1188A              ANOP  ,           POSITIONAL MACRO KEY            03038600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03038700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1188C          03038800
&ZTLC                 SETC 'REQUEST'                                    03038900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1188A 03039000
.ZG1188B              ANOP  ,                                           03039100
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 03039200
&ZMS                  SETC  'THE "REQUEST" KEY'  *KOPTA* MNOTE          03039300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03039400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03039500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03039600
                      AGO   .ZG1188E                                    03039700
.ZG1188C              ANOP  ,                                           03039800
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 03039900
&ZMS                  SETC  '"REQUEST='         *KUKWA* MNOTE           03040000
&ZMS                  SETC  '&ZMS.&REQUEST"'                            03040100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03040200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03040300
&ZMS                  SETC  '&ZMS "READ_LIST",'                         03040400
&ZMS                  SETC  '&ZMS "DELETE_LIST",'                       03040500
&ZMS                  SETC  '&ZMS "READ_MULT",'                         03040600
&ZMS                  SETC  '&ZMS "DELETE_MULT",'                       03040700
&ZMS                  SETC  '&ZMS "MOVE_ENTRYLIST",'                    03040800
&ZMS                  SETC  '&ZMS OR "DELETE_ENTRYLIST".'               03040900
                      MNOTE 8,' &ZMS '                                  03041000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03041100
                      AGO   .ZG1188E                                    03041200
.ZG1188D              ANOP  ,                                           03041300
&XREQUEST             SETC  'READ_LIST'         SET DEFAULT KEYWORD     03041400
.ZG1188E              ANOP  ,                                           03041500
.*------------------------------------------------------------------    03041600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03041700
                      AIF   (K'&REQUEST(1) GT 0).ZG1188F  PARM          03041800
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             03041900
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 03042000
&ZMS                  SETC  'THE'                                       03042100
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS'                03042200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               03042300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03042400
&ZMS                  SETC  '&ZMS "READ_LIST",'                         03042500
&ZMS                  SETC  '&ZMS "DELETE_LIST",'                       03042600
&ZMS                  SETC  '&ZMS "READ_MULT",'                         03042700
&ZMS                  SETC  '&ZMS "DELETE_MULT",'                       03042800
&ZMS                  SETC  '&ZMS "MOVE_ENTRYLIST",'                    03042900
&ZMS                  SETC  '&ZMS OR "DELETE_ENTRYLIST".'               03043000
                      MNOTE 8,' &ZMS '                                  03043100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03043200
.ZG1188F              ANOP  ,                                           03043300
.*----------------------------------------------------------------***   03043400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03043500
                      AIF   (N'&LOCKINDEX LE 1).ZG1190A  CK NUM         03043600
&ZMS                  SETC  '"LOCKINDEX='       *KPOSA* MNOTE           03043700
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          03043800
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          03043900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03044000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03044100
.ZG1190A              ANOP  ,                                           03044200
.*-------------------------------------------------------------------   03044300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03044400
&ZXLOCKINDEX          SETC  'INPUT'     SET IN/OUTPUT                   03044500
&XLOCKINDEX           SETC  'NO_LOCKINDEX'                              03044600
                      AIF   (K'&LOCKINDEX(1) LE 0).ZG1190B  PARM        03044700
&XLOCKINDEX           SETC  '&LOCKINDEX(1)'     SET XVARIABLE           03044800
                      AIF   (N'&LOCKINDEX GT 1).ZG1190B  MULTI PARMS    03044900
&XLOCKINDEX           SETC  '&LOCKINDEX'        SET XVARIABLE           03045000
.ZG1190B              ANOP  ,                                           03045100
.*-------------------------------------------------------------------   03045200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03045300
                      AIF   (K'&ZXLOCKINDEX LE 0).ZG1190R  NOT I/O      03045400
         AIF   ('&XLOCKINDEX' EQ 'NO_LOCKINDEX').ZG1190R                03045500
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZG1190R         03045600
&ZCGPR                SETC  '&XLOCKINDEX'(2,K'&XLOCKINDEX-2)            03045700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1190P              03045800
                      AIF   (K'&ZCGPR GT 2).ZG1190Q                     03045900
                      AIF   ('&ZCGPR' EQ '0').ZG1190Q                   03046000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03046100
                      AIF   (T'&ZCGPR NE 'N').ZG1190Q  INVALID REG NAME 03046200
.ZG1190P              ANOP  ,                                           03046300
                      AIF   (T'&ZCGPR NE 'N').ZG1190R  NON NUMERIC      03046400
                      AIF   ('&ZCGPR' LT '2').ZG1190Q                   03046500
                      AIF   ('&ZCGPR' LE '12').ZG1190R                  03046600
.ZG1190Q              ANOP  ,                                           03046700
&ZMS                  SETC  '"LOCKINDEX='       *KGPRA* MNOTE           03046800
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          03046900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03047000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03047100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03047200
.ZG1190R              ANOP  ,                                           03047300
.*------------------------------------------------------------------    03047400
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03047500
&XLOCKOPER            SETC  ''          INITIALIZE XVARIABLE            03047600
.*-------------------------------------------------------------------   03047700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03047800
.ZG1193               ANOP  ,                                           03047900
                      AIF   (K'&LOCKOPER(1) LE 0).ZG1193A               03048000
&ZTLC                 SETC 'NOTHELD'                                    03048100
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG1194          03048200
&XLOCKOPER            SETC  'NOTHELD'   SET KEYWORD                     03048300
                      AIF   (N'&LOCKOPER LE 1).ZG1193A  CK NUM          03048400
&ZMS                  SETC  '"LOCKOPER='        *KPOSA* MNOTE           03048500
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           03048600
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           03048700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03048800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03048900
.ZG1193A              ANOP  ,                                           03049000
.*------------------------------------------------------------------    03049100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03049200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03049300
.ZG1193A0             AIF   (K'&LOCKCOMP LE 0).ZG1193A1  OK             03049400
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      03049500
.ZG1193A1             AIF   (K'&ZCVAL LE 0).ZG1193A2  OK                03049600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03049700
&ZMS                  SETC  '"LOCKOPER'         *KMEIA* MNOTE           03049800
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          03049900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03050000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03050100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03050200
.ZG1193A2             ANOP  ,                                           03050300
.*-------------------------------------------------------------------   03050400
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03050500
.ZG1194               ANOP  ,                                           03050600
&ZTLC                 SETC 'HELDBY'                                     03050700
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG1198          03050800
&XLOCKOPER            SETC  'HELDBY'    SET KEYWORD                     03050900
                      AIF   (N'&LOCKOPER LE 1).ZG1194A  CK NUM          03051000
&ZMS                  SETC  '"LOCKOPER='        *KPOSA* MNOTE           03051100
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           03051200
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           03051300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03051400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03051500
.ZG1194A              ANOP  ,                                           03051600
.*----------------------------------------------------------------***   03051700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03051800
                      AIF   (N'&LOCKCOMP LE 1).ZG1196A  CK NUM          03051900
&ZMS                  SETC  '"LOCKCOMP='        *KPOSA* MNOTE           03052000
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           03052100
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           03052200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03052300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03052400
.ZG1196A              ANOP  ,                                           03052500
.*-------------------------------------------------------------------   03052600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03052700
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   03052800
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               03052900
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG1196B  PARM         03053000
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           03053100
                      AIF   (N'&LOCKCOMP GT 1).ZG1196B  MULTI PARMS     03053200
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           03053300
.ZG1196B              ANOP  ,                                           03053400
.*-------------------------------------------------------------------   03053500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03053600
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG1196R  NOT I/O       03053700
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG1196R                  03053800
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG1196R          03053900
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              03054000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1196P              03054100
                      AIF   (K'&ZCGPR GT 2).ZG1196Q                     03054200
                      AIF   ('&ZCGPR' EQ '0').ZG1196Q                   03054300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03054400
                      AIF   (T'&ZCGPR NE 'N').ZG1196Q  INVALID REG NAME 03054500
.ZG1196P              ANOP  ,                                           03054600
                      AIF   (T'&ZCGPR NE 'N').ZG1196R  NON NUMERIC      03054700
                      AIF   ('&ZCGPR' LT '2').ZG1196Q                   03054800
                      AIF   ('&ZCGPR' LE '12').ZG1196R                  03054900
.ZG1196Q              ANOP  ,                                           03055000
&ZMS                  SETC  '"LOCKCOMP='        *KGPRA* MNOTE           03055100
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           03055200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03055300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03055400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03055500
.ZG1196R              ANOP  ,                                           03055600
.*------------------------------------------------------------------    03055700
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03055800
.ZG1198               ANOP  ,                                           03055900
&ZXLOCKOPER           SETC  'INPUT'     SET IN/OUTPUT                   03056000
                      AIF   (K'&XLOCKOPER GT 0).ZG1198E  VALID ARG      03056100
                      AIF   (T'&LOCKOPER EQ 'O').ZG1198D  OMITTED       03056200
&ZASYSLNDX            SETA  0                                           03056300
.ZG1198A              ANOP  ,           POSITIONAL MACRO KEY            03056400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03056500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1198C          03056600
&ZTLC                 SETC 'LOCKOPER'                                   03056700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1198A 03056800
.ZG1198B              ANOP  ,                                           03056900
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 03057000
&ZMS                  SETC  'THE "LOCKOPER" KEY'  *KOPTA* MNOTE         03057100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03057200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03057300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03057400
                      AGO   .ZG1198E                                    03057500
.ZG1198C              ANOP  ,                                           03057600
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 03057700
&ZMS                  SETC  '"LOCKOPER='        *KUKWA* MNOTE           03057800
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           03057900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03058000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03058100
&ZMS                  SETC  '&ZMS "NOTHELD"'                            03058200
&ZMS                  SETC  '&ZMS OR "HELDBY".'                         03058300
                      MNOTE 8,' &ZMS '                                  03058400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03058500
                      AGO   .ZG1198E                                    03058600
.ZG1198D              ANOP  ,                                           03058700
&XLOCKOPER            SETC  'NOTHELD'   SET DEFAULT KEYWORD             03058800
.ZG1198E              ANOP  ,                                           03058900
.*------------------------------------------------------------------    03059000
.***AG.KKCTL06 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03059100
                      AIF   (K'&LOCKINDEX(1) GT 0).ZG1198F  KEY         03059200
                      AIF   (K'&LOCKOPER(1) LE 0).ZG1198G  PARM         03059300
&ZMS                  SETC  '"LOCKOPER'         *KDEPA* MNOTE           03059400
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          03059500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03059600
&ZMS                  SETC  '&ZMS '                                     03059700
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          03059800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03059900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03060000
                      AGO   .ZG1198G                                    03060100
.*                                                                      03060200
.ZG1198F              ANOP  ,                                           03060300
                      AIF   (K'&LOCKOPER(1) GT 0).ZG1198G  PARM         03060400
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 03060500
&XLOCKOPER            SETC  ''          ENSURE NULL KEYWORD             03060600
&ZMS                  SETC  'WHEN "LOCKINDEX" IS SPECIFIED, THE'        03060700
&ZMS                  SETC  '&ZMS "LOCKOPER" KEY AND ITS'               03060800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               03060900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03061000
&ZMS                  SETC  '&ZMS "NOTHELD"'                            03061100
&ZMS                  SETC  '&ZMS OR "HELDBY".'                         03061200
                      MNOTE 8,' &ZMS '                                  03061300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03061400
.ZG1198G              ANOP  ,                                           03061500
.*------------------------------------------------------------------    03061600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03061700
&XMODE                SETC  ''          INITIALIZE XVARIABLE            03061800
.*-------------------------------------------------------------------   03061900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03062000
.ZG1202               ANOP  ,                                           03062100
                      AIF   (K'&MODE(1) LE 0).ZG1202A                   03062200
&ZTLC                 SETC 'SYNCSUSPEND'                                03062300
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1209              03062400
&XMODE                SETC  'SYNCSUSPEND'       SET KEYWORD             03062500
                      AIF   (N'&MODE LE 1).ZG1202A  CK NUM              03062600
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03062700
&ZMS                  SETC  '&ZMS.&MODE"'                               03062800
&ZMS                  SETC  '&ZMS "MODE"'                               03062900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03063000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03063100
.ZG1202A              ANOP  ,                                           03063200
.*------------------------------------------------------------------    03063300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03063400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03063500
.ZG1202A0             AIF   (K'&REQECB LE 0).ZG1202A1  OK               03063600
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03063700
.ZG1202A1             AIF   (K'&REQDATA LE 0).ZG1202A2  OK              03063800
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03063900
.ZG1202A2             AIF   (K'&REQTOKEN LE 0).ZG1202A3  OK             03064000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03064100
.ZG1202A3             AIF   (K'&ZCVAL LE 0).ZG1202A4  OK                03064200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03064300
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03064400
&ZMS                  SETC  '&ZMS.=&MODE"'                              03064500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03064600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03064700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03064800
.ZG1202A4             ANOP  ,                                           03064900
.*----------------------------------------------------------------***   03065000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03065100
                      AIF   (N'&ANSAREA LE 1).ZG1204A  CK NUM           03065200
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           03065300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03065400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03065500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03065600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03065700
.ZG1204A              ANOP  ,                                           03065800
.*-------------------------------------------------------------------   03065900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03066000
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03066100
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03066200
                      AIF   (N'&ANSAREA GT 1).ZG1204B  MULTI PARMS      03066300
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03066400
.ZG1204B              AIF   (K'&ANSAREA(1) GT 0).ZG1204C                03066500
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03066600
&ZMS                  SETC  'WHEN "SYNCSUSPEND" IS SPECIFIED'  *KRQDA*  03066700
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03066800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03066900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03067000
.ZG1204C              ANOP  ,                                           03067100
.*-------------------------------------------------------------------   03067200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03067300
                      AIF   (K'&ZXANSAREA LE 0).ZG1204R  NOT I/O        03067400
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1204R           03067500
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03067600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1204P              03067700
                      AIF   (K'&ZCGPR GT 2).ZG1204Q                     03067800
                      AIF   ('&ZCGPR' EQ '0').ZG1204Q                   03067900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03068000
                      AIF   (T'&ZCGPR NE 'N').ZG1204Q  INVALID REG NAME 03068100
.ZG1204P              ANOP  ,                                           03068200
                      AIF   (T'&ZCGPR NE 'N').ZG1204R  NON NUMERIC      03068300
                      AIF   ('&ZCGPR' LT '2').ZG1204Q                   03068400
                      AIF   ('&ZCGPR' LE '12').ZG1204R                  03068500
.ZG1204Q              ANOP  ,                                           03068600
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           03068700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03068800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03068900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03069000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03069100
.ZG1204R              ANOP  ,                                           03069200
.*----------------------------------------------------------------***   03069300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03069400
                      AIF   (N'&ANSLEN LE 1).ZG1206A  CK NUM            03069500
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   03069600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03069700
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03069800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03069900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03070000
.ZG1206A              ANOP  ,                                           03070100
.*-------------------------------------------------------------------   03070200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03070300
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03070400
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03070500
                      AIF   (N'&ANSLEN GT 1).ZG1206B  MULTI PARMS       03070600
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03070700
.ZG1206B              AIF   (K'&ANSAREA(1) GT 0).ZG1206C  KEY           03070800
                      AIF   (K'&ANSLEN(1) LE 0).ZG1206D  PARM           03070900
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   03071000
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03071100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03071200
&ZMS                  SETC  '&ZMS '                                     03071300
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03071400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03071500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03071600
                      AGO   .ZG1206E                                    03071700
.*                                                                      03071800
.ZG1206C              AIF   (K'&ANSLEN(1) GT 0).ZG1206E  PARM           03071900
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03072000
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      03072100
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03072200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03072300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03072400
.ZG1206D              ANOP  ,                                           03072500
&XANSLEN              SETC  '0'         SET DEFAULT                     03072600
.ZG1206E              ANOP  ,                                           03072700
.*-------------------------------------------------------------------   03072800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03072900
                      AIF   (K'&ZXANSLEN LE 0).ZG1206R  NOT I/O         03073000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1206R            03073100
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03073200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1206P              03073300
                      AIF   (K'&ZCGPR GT 2).ZG1206Q                     03073400
                      AIF   ('&ZCGPR' EQ '0').ZG1206Q                   03073500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03073600
                      AIF   (T'&ZCGPR NE 'N').ZG1206Q  INVALID REG NAME 03073700
.ZG1206P              ANOP  ,                                           03073800
                      AIF   (T'&ZCGPR NE 'N').ZG1206R  NON NUMERIC      03073900
                      AIF   ('&ZCGPR' LT '2').ZG1206Q                   03074000
                      AIF   ('&ZCGPR' LE '12').ZG1206R                  03074100
.ZG1206Q              ANOP  ,                                           03074200
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   03074300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03074400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03074500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03074600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03074700
.ZG1206R              ANOP  ,                                           03074800
.*-------------------------------------------------------------------   03074900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03075000
.ZG1209               ANOP  ,                                           03075100
&ZTLC                 SETC 'SYNCECB'                                    03075200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1219              03075300
&XMODE                SETC  'SYNCECB'   SET KEYWORD                     03075400
                      AIF   (N'&MODE LE 1).ZG1209A  CK NUM              03075500
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03075600
&ZMS                  SETC  '&ZMS.&MODE"'                               03075700
&ZMS                  SETC  '&ZMS "MODE"'                               03075800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03075900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03076000
.ZG1209A              ANOP  ,                                           03076100
.*------------------------------------------------------------------    03076200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03076300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03076400
.ZG1209A0             AIF   (K'&REQDATA LE 0).ZG1209A1  OK              03076500
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03076600
.ZG1209A1             AIF   (K'&REQTOKEN LE 0).ZG1209A2  OK             03076700
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03076800
.ZG1209A2             AIF   (K'&ZCVAL LE 0).ZG1209A3  OK                03076900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03077000
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03077100
&ZMS                  SETC  '&ZMS.=&MODE"'                              03077200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03077300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03077400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03077500
.ZG1209A3             ANOP  ,                                           03077600
.*----------------------------------------------------------------***   03077700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03077800
                      AIF   (N'&ANSAREA LE 1).ZG1211A  CK NUM           03077900
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           03078000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03078100
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03078200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03078300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03078400
.ZG1211A              ANOP  ,                                           03078500
.*-------------------------------------------------------------------   03078600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03078700
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03078800
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03078900
                      AIF   (N'&ANSAREA GT 1).ZG1211B  MULTI PARMS      03079000
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03079100
.ZG1211B              AIF   (K'&ANSAREA(1) GT 0).ZG1211C                03079200
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03079300
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'  *KRQDA*      03079400
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03079500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03079600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03079700
.ZG1211C              ANOP  ,                                           03079800
.*-------------------------------------------------------------------   03079900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03080000
                      AIF   (K'&ZXANSAREA LE 0).ZG1211R  NOT I/O        03080100
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1211R           03080200
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03080300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1211P              03080400
                      AIF   (K'&ZCGPR GT 2).ZG1211Q                     03080500
                      AIF   ('&ZCGPR' EQ '0').ZG1211Q                   03080600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03080700
                      AIF   (T'&ZCGPR NE 'N').ZG1211Q  INVALID REG NAME 03080800
.ZG1211P              ANOP  ,                                           03080900
                      AIF   (T'&ZCGPR NE 'N').ZG1211R  NON NUMERIC      03081000
                      AIF   ('&ZCGPR' LT '2').ZG1211Q                   03081100
                      AIF   ('&ZCGPR' LE '12').ZG1211R                  03081200
.ZG1211Q              ANOP  ,                                           03081300
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           03081400
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03081500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03081600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03081700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03081800
.ZG1211R              ANOP  ,                                           03081900
.*----------------------------------------------------------------***   03082000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03082100
                      AIF   (N'&ANSLEN LE 1).ZG1213A  CK NUM            03082200
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   03082300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03082400
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03082500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03082600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03082700
.ZG1213A              ANOP  ,                                           03082800
.*-------------------------------------------------------------------   03082900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03083000
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03083100
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03083200
                      AIF   (N'&ANSLEN GT 1).ZG1213B  MULTI PARMS       03083300
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03083400
.ZG1213B              AIF   (K'&ANSAREA(1) GT 0).ZG1213C  KEY           03083500
                      AIF   (K'&ANSLEN(1) LE 0).ZG1213D  PARM           03083600
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   03083700
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03083800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03083900
&ZMS                  SETC  '&ZMS '                                     03084000
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03084100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03084200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03084300
                      AGO   .ZG1213E                                    03084400
.*                                                                      03084500
.ZG1213C              AIF   (K'&ANSLEN(1) GT 0).ZG1213E  PARM           03084600
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03084700
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      03084800
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03084900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03085000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03085100
.ZG1213D              ANOP  ,                                           03085200
&XANSLEN              SETC  '0'         SET DEFAULT                     03085300
.ZG1213E              ANOP  ,                                           03085400
.*-------------------------------------------------------------------   03085500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03085600
                      AIF   (K'&ZXANSLEN LE 0).ZG1213R  NOT I/O         03085700
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1213R            03085800
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03085900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1213P              03086000
                      AIF   (K'&ZCGPR GT 2).ZG1213Q                     03086100
                      AIF   ('&ZCGPR' EQ '0').ZG1213Q                   03086200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03086300
                      AIF   (T'&ZCGPR NE 'N').ZG1213Q  INVALID REG NAME 03086400
.ZG1213P              ANOP  ,                                           03086500
                      AIF   (T'&ZCGPR NE 'N').ZG1213R  NON NUMERIC      03086600
                      AIF   ('&ZCGPR' LT '2').ZG1213Q                   03086700
                      AIF   ('&ZCGPR' LE '12').ZG1213R                  03086800
.ZG1213Q              ANOP  ,                                           03086900
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   03087000
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03087100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03087200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03087300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03087400
.ZG1213R              ANOP  ,                                           03087500
.*----------------------------------------------------------------***   03087600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03087700
                      AIF   (N'&REQECB LE 1).ZG1217A  CK NUM            03087800
&ZMS                  SETC  '"REQECB='  *KPOSA* MNOTE                   03087900
&ZMS                  SETC  '&ZMS.&REQECB"'                             03088000
&ZMS                  SETC  '&ZMS "REQECB"'                             03088100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03088200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03088300
.ZG1217A              ANOP  ,                                           03088400
.*-------------------------------------------------------------------   03088500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03088600
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   03088700
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           03088800
                      AIF   (N'&REQECB GT 1).ZG1217B  MULTI PARMS       03088900
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   03089000
.ZG1217B              AIF   (K'&REQECB(1) GT 0).ZG1217C                 03089100
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 03089200
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'  *KRQDA*      03089300
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               03089400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03089500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03089600
.ZG1217C              ANOP  ,                                           03089700
.*-------------------------------------------------------------------   03089800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03089900
                      AIF   (K'&ZXREQECB LE 0).ZG1217R  NOT I/O         03090000
                      AIF   ('&XREQECB'(1,1) NE '(').ZG1217R            03090100
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  03090200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1217P              03090300
                      AIF   (K'&ZCGPR GT 2).ZG1217Q                     03090400
                      AIF   ('&ZCGPR' EQ '0').ZG1217Q                   03090500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03090600
                      AIF   (T'&ZCGPR NE 'N').ZG1217Q  INVALID REG NAME 03090700
.ZG1217P              ANOP  ,                                           03090800
                      AIF   (T'&ZCGPR NE 'N').ZG1217R  NON NUMERIC      03090900
                      AIF   ('&ZCGPR' LT '2').ZG1217Q                   03091000
                      AIF   ('&ZCGPR' LE '12').ZG1217R                  03091100
.ZG1217Q              ANOP  ,                                           03091200
&ZMS                  SETC  '"REQECB='  *KGPRA* MNOTE                   03091300
&ZMS                  SETC  '&ZMS.&REQECB"'                             03091400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03091500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03091600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03091700
.ZG1217R              ANOP  ,                                           03091800
.*-------------------------------------------------------------------   03091900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03092000
.ZG1219               ANOP  ,                                           03092100
&ZTLC                 SETC 'SYNCEXIT'                                   03092200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1229              03092300
&XMODE                SETC  'SYNCEXIT'  SET KEYWORD                     03092400
                      AIF   (N'&MODE LE 1).ZG1219A  CK NUM              03092500
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03092600
&ZMS                  SETC  '&ZMS.&MODE"'                               03092700
&ZMS                  SETC  '&ZMS "MODE"'                               03092800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03092900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03093000
.ZG1219A              ANOP  ,                                           03093100
.*------------------------------------------------------------------    03093200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03093300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03093400
.ZG1219A0             AIF   (K'&REQECB LE 0).ZG1219A1  OK               03093500
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03093600
.ZG1219A1             AIF   (K'&REQTOKEN LE 0).ZG1219A2  OK             03093700
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03093800
.ZG1219A2             AIF   (K'&ZCVAL LE 0).ZG1219A3  OK                03093900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03094000
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03094100
&ZMS                  SETC  '&ZMS.=&MODE"'                              03094200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03094300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03094400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03094500
.ZG1219A3             ANOP  ,                                           03094600
.*----------------------------------------------------------------***   03094700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03094800
                      AIF   (N'&ANSAREA LE 1).ZG1221A  CK NUM           03094900
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           03095000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03095100
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03095200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03095300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03095400
.ZG1221A              ANOP  ,                                           03095500
.*-------------------------------------------------------------------   03095600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03095700
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03095800
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03095900
                      AIF   (N'&ANSAREA GT 1).ZG1221B  MULTI PARMS      03096000
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03096100
.ZG1221B              AIF   (K'&ANSAREA(1) GT 0).ZG1221C                03096200
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03096300
&ZMS                  SETC  'WHEN "SYNCEXIT" IS SPECIFIED'  *KRQDA*     03096400
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03096500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03096600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03096700
.ZG1221C              ANOP  ,                                           03096800
.*-------------------------------------------------------------------   03096900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03097000
                      AIF   (K'&ZXANSAREA LE 0).ZG1221R  NOT I/O        03097100
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1221R           03097200
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03097300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1221P              03097400
                      AIF   (K'&ZCGPR GT 2).ZG1221Q                     03097500
                      AIF   ('&ZCGPR' EQ '0').ZG1221Q                   03097600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03097700
                      AIF   (T'&ZCGPR NE 'N').ZG1221Q  INVALID REG NAME 03097800
.ZG1221P              ANOP  ,                                           03097900
                      AIF   (T'&ZCGPR NE 'N').ZG1221R  NON NUMERIC      03098000
                      AIF   ('&ZCGPR' LT '2').ZG1221Q                   03098100
                      AIF   ('&ZCGPR' LE '12').ZG1221R                  03098200
.ZG1221Q              ANOP  ,                                           03098300
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           03098400
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03098500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03098600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03098700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03098800
.ZG1221R              ANOP  ,                                           03098900
.*----------------------------------------------------------------***   03099000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03099100
                      AIF   (N'&ANSLEN LE 1).ZG1223A  CK NUM            03099200
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   03099300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03099400
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03099500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03099600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03099700
.ZG1223A              ANOP  ,                                           03099800
.*-------------------------------------------------------------------   03099900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03100000
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03100100
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03100200
                      AIF   (N'&ANSLEN GT 1).ZG1223B  MULTI PARMS       03100300
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03100400
.ZG1223B              AIF   (K'&ANSAREA(1) GT 0).ZG1223C  KEY           03100500
                      AIF   (K'&ANSLEN(1) LE 0).ZG1223D  PARM           03100600
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   03100700
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03100800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03100900
&ZMS                  SETC  '&ZMS '                                     03101000
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03101100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03101200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03101300
                      AGO   .ZG1223E                                    03101400
.*                                                                      03101500
.ZG1223C              AIF   (K'&ANSLEN(1) GT 0).ZG1223E  PARM           03101600
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03101700
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      03101800
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03101900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03102000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03102100
.ZG1223D              ANOP  ,                                           03102200
&XANSLEN              SETC  '0'         SET DEFAULT                     03102300
.ZG1223E              ANOP  ,                                           03102400
.*-------------------------------------------------------------------   03102500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03102600
                      AIF   (K'&ZXANSLEN LE 0).ZG1223R  NOT I/O         03102700
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1223R            03102800
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03102900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1223P              03103000
                      AIF   (K'&ZCGPR GT 2).ZG1223Q                     03103100
                      AIF   ('&ZCGPR' EQ '0').ZG1223Q                   03103200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03103300
                      AIF   (T'&ZCGPR NE 'N').ZG1223Q  INVALID REG NAME 03103400
.ZG1223P              ANOP  ,                                           03103500
                      AIF   (T'&ZCGPR NE 'N').ZG1223R  NON NUMERIC      03103600
                      AIF   ('&ZCGPR' LT '2').ZG1223Q                   03103700
                      AIF   ('&ZCGPR' LE '12').ZG1223R                  03103800
.ZG1223Q              ANOP  ,                                           03103900
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   03104000
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03104100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03104200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03104300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03104400
.ZG1223R              ANOP  ,                                           03104500
.*----------------------------------------------------------------***   03104600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03104700
                      AIF   (N'&REQDATA LE 1).ZG1227A  CK NUM           03104800
&ZMS                  SETC  '"REQDATA='         *KPOSA* MNOTE           03104900
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03105000
&ZMS                  SETC  '&ZMS "REQDATA"'                            03105100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03105200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03105300
.ZG1227A              ANOP  ,                                           03105400
.*-------------------------------------------------------------------   03105500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03105600
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   03105700
&XREQDATA             SETC  'NO_REQDATA'                                03105800
                      AIF   (K'&REQDATA(1) LE 0).ZG1227B  PARM          03105900
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           03106000
                      AIF   (N'&REQDATA GT 1).ZG1227B  MULTI PARMS      03106100
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   03106200
.ZG1227B              ANOP  ,                                           03106300
.*-------------------------------------------------------------------   03106400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03106500
                      AIF   (K'&ZXREQDATA LE 0).ZG1227R  NOT I/O        03106600
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG1227R                    03106700
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG1227R           03106800
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                03106900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1227P              03107000
                      AIF   (K'&ZCGPR GT 2).ZG1227Q                     03107100
                      AIF   ('&ZCGPR' EQ '0').ZG1227Q                   03107200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03107300
                      AIF   (T'&ZCGPR NE 'N').ZG1227Q  INVALID REG NAME 03107400
.ZG1227P              ANOP  ,                                           03107500
                      AIF   (T'&ZCGPR NE 'N').ZG1227R  NON NUMERIC      03107600
                      AIF   ('&ZCGPR' LT '2').ZG1227Q                   03107700
                      AIF   ('&ZCGPR' LE '12').ZG1227R                  03107800
.ZG1227Q              ANOP  ,                                           03107900
&ZMS                  SETC  '"REQDATA='         *KGPRA* MNOTE           03108000
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03108100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03108200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03108300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03108400
.ZG1227R              ANOP  ,                                           03108500
.*-------------------------------------------------------------------   03108600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03108700
.ZG1229               ANOP  ,                                           03108800
&ZTLC                 SETC 'SYNCTOKEN'                                  03108900
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1239              03109000
&XMODE                SETC  'SYNCTOKEN'         SET KEYWORD             03109100
                      AIF   (N'&MODE LE 1).ZG1229A  CK NUM              03109200
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03109300
&ZMS                  SETC  '&ZMS.&MODE"'                               03109400
&ZMS                  SETC  '&ZMS "MODE"'                               03109500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03109600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03109700
.ZG1229A              ANOP  ,                                           03109800
.*------------------------------------------------------------------    03109900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03110000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03110100
.ZG1229A0             AIF   (K'&REQECB LE 0).ZG1229A1  OK               03110200
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03110300
.ZG1229A1             AIF   (K'&REQDATA LE 0).ZG1229A2  OK              03110400
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03110500
.ZG1229A2             AIF   (K'&ZCVAL LE 0).ZG1229A3  OK                03110600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03110700
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03110800
&ZMS                  SETC  '&ZMS.=&MODE"'                              03110900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03111000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03111100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03111200
.ZG1229A3             ANOP  ,                                           03111300
.*----------------------------------------------------------------***   03111400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03111500
                      AIF   (N'&ANSAREA LE 1).ZG1231A  CK NUM           03111600
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           03111700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03111800
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03111900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03112000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03112100
.ZG1231A              ANOP  ,                                           03112200
.*-------------------------------------------------------------------   03112300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03112400
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03112500
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03112600
                      AIF   (N'&ANSAREA GT 1).ZG1231B  MULTI PARMS      03112700
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03112800
.ZG1231B              AIF   (K'&ANSAREA(1) GT 0).ZG1231C                03112900
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03113000
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'  *KRQDA*    03113100
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03113200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03113300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03113400
.ZG1231C              ANOP  ,                                           03113500
.*-------------------------------------------------------------------   03113600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03113700
                      AIF   (K'&ZXANSAREA LE 0).ZG1231R  NOT I/O        03113800
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1231R           03113900
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03114000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1231P              03114100
                      AIF   (K'&ZCGPR GT 2).ZG1231Q                     03114200
                      AIF   ('&ZCGPR' EQ '0').ZG1231Q                   03114300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03114400
                      AIF   (T'&ZCGPR NE 'N').ZG1231Q  INVALID REG NAME 03114500
.ZG1231P              ANOP  ,                                           03114600
                      AIF   (T'&ZCGPR NE 'N').ZG1231R  NON NUMERIC      03114700
                      AIF   ('&ZCGPR' LT '2').ZG1231Q                   03114800
                      AIF   ('&ZCGPR' LE '12').ZG1231R                  03114900
.ZG1231Q              ANOP  ,                                           03115000
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           03115100
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03115200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03115300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03115400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03115500
.ZG1231R              ANOP  ,                                           03115600
.*----------------------------------------------------------------***   03115700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03115800
                      AIF   (N'&ANSLEN LE 1).ZG1233A  CK NUM            03115900
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   03116000
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03116100
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03116200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03116300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03116400
.ZG1233A              ANOP  ,                                           03116500
.*-------------------------------------------------------------------   03116600
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03116700
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03116800
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03116900
                      AIF   (N'&ANSLEN GT 1).ZG1233B  MULTI PARMS       03117000
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03117100
.ZG1233B              AIF   (K'&ANSAREA(1) GT 0).ZG1233C  KEY           03117200
                      AIF   (K'&ANSLEN(1) LE 0).ZG1233D  PARM           03117300
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   03117400
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03117500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03117600
&ZMS                  SETC  '&ZMS '                                     03117700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03117800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03117900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03118000
                      AGO   .ZG1233E                                    03118100
.*                                                                      03118200
.ZG1233C              AIF   (K'&ANSLEN(1) GT 0).ZG1233E  PARM           03118300
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03118400
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      03118500
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03118600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03118700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03118800
.ZG1233D              ANOP  ,                                           03118900
&XANSLEN              SETC  '0'         SET DEFAULT                     03119000
.ZG1233E              ANOP  ,                                           03119100
.*-------------------------------------------------------------------   03119200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03119300
                      AIF   (K'&ZXANSLEN LE 0).ZG1233R  NOT I/O         03119400
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1233R            03119500
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03119600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1233P              03119700
                      AIF   (K'&ZCGPR GT 2).ZG1233Q                     03119800
                      AIF   ('&ZCGPR' EQ '0').ZG1233Q                   03119900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03120000
                      AIF   (T'&ZCGPR NE 'N').ZG1233Q  INVALID REG NAME 03120100
.ZG1233P              ANOP  ,                                           03120200
                      AIF   (T'&ZCGPR NE 'N').ZG1233R  NON NUMERIC      03120300
                      AIF   ('&ZCGPR' LT '2').ZG1233Q                   03120400
                      AIF   ('&ZCGPR' LE '12').ZG1233R                  03120500
.ZG1233Q              ANOP  ,                                           03120600
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   03120700
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03120800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03120900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03121000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03121100
.ZG1233R              ANOP  ,                                           03121200
.*----------------------------------------------------------------***   03121300
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                03121400
                      AIF   (N'&REQTOKEN LE 1).ZG1237A  CK NUM          03121500
&ZMS                  SETC  '"REQTOKEN='        *KPOSA* MNOTE           03121600
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03121700
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           03121800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03121900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03122000
.ZG1237A              ANOP  ,                                           03122100
.*-------------------------------------------------------------------   03122200
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    03122300
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   03122400
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           03122500
                      AIF   (N'&REQTOKEN GT 1).ZG1237B  MULTI PARMS     03122600
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           03122700
.ZG1237B              AIF   (K'&REQTOKEN(1) GT 0).ZG1237C               03122800
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 03122900
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'  *KRQDA*    03123000
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             03123100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03123200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03123300
.ZG1237C              ANOP  ,                                           03123400
.*-------------------------------------------------------------------   03123500
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               03123600
                      AIF   (K'&ZXREQTOKEN LE 0).ZG1237R  NOT I/O       03123700
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG1237R          03123800
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              03123900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1237P              03124000
                      AIF   (K'&ZCGPR GT 2).ZG1237Q                     03124100
                      AIF   ('&ZCGPR' EQ '0').ZG1237Q                   03124200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03124300
                      AIF   (T'&ZCGPR NE 'N').ZG1237Q  INVALID REG NAME 03124400
.ZG1237P              ANOP  ,                                           03124500
                      AIF   (T'&ZCGPR NE 'N').ZG1237R  NON NUMERIC      03124600
                      AIF   ('&ZCGPR' LT '2').ZG1237Q                   03124700
                      AIF   ('&ZCGPR' LE '12').ZG1237R                  03124800
.ZG1237Q              ANOP  ,                                           03124900
&ZMS                  SETC  '"REQTOKEN='        *KGPRA* MNOTE           03125000
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03125100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03125200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03125300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03125400
.ZG1237R              ANOP  ,                                           03125500
.*-------------------------------------------------------------------   03125600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03125700
.ZG1239               ANOP  ,                                           03125800
&ZTLC                 SETC 'ASYNCECB'                                   03125900
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1249              03126000
&XMODE                SETC  'ASYNCECB'  SET KEYWORD                     03126100
                      AIF   (N'&MODE LE 1).ZG1239A  CK NUM              03126200
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03126300
&ZMS                  SETC  '&ZMS.&MODE"'                               03126400
&ZMS                  SETC  '&ZMS "MODE"'                               03126500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03126600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03126700
.ZG1239A              ANOP  ,                                           03126800
.*------------------------------------------------------------------    03126900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03127000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03127100
.ZG1239A0             AIF   (K'&REQDATA LE 0).ZG1239A1  OK              03127200
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03127300
.ZG1239A1             AIF   (K'&REQTOKEN LE 0).ZG1239A2  OK             03127400
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03127500
.ZG1239A2             AIF   (K'&ZCVAL LE 0).ZG1239A3  OK                03127600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03127700
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03127800
&ZMS                  SETC  '&ZMS.=&MODE"'                              03127900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03128000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03128100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03128200
.ZG1239A3             ANOP  ,                                           03128300
.*----------------------------------------------------------------***   03128400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03128500
                      AIF   (N'&ANSAREA LE 1).ZG1241A  CK NUM           03128600
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           03128700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03128800
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03128900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03129000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03129100
.ZG1241A              ANOP  ,                                           03129200
.*-------------------------------------------------------------------   03129300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03129400
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03129500
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03129600
                      AIF   (N'&ANSAREA GT 1).ZG1241B  MULTI PARMS      03129700
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03129800
.ZG1241B              AIF   (K'&ANSAREA(1) GT 0).ZG1241C                03129900
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03130000
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'  *KRQDA*     03130100
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03130200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03130300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03130400
.ZG1241C              ANOP  ,                                           03130500
.*-------------------------------------------------------------------   03130600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03130700
                      AIF   (K'&ZXANSAREA LE 0).ZG1241R  NOT I/O        03130800
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1241R           03130900
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03131000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1241P              03131100
                      AIF   (K'&ZCGPR GT 2).ZG1241Q                     03131200
                      AIF   ('&ZCGPR' EQ '0').ZG1241Q                   03131300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03131400
                      AIF   (T'&ZCGPR NE 'N').ZG1241Q  INVALID REG NAME 03131500
.ZG1241P              ANOP  ,                                           03131600
                      AIF   (T'&ZCGPR NE 'N').ZG1241R  NON NUMERIC      03131700
                      AIF   ('&ZCGPR' LT '2').ZG1241Q                   03131800
                      AIF   ('&ZCGPR' LE '12').ZG1241R                  03131900
.ZG1241Q              ANOP  ,                                           03132000
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           03132100
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03132200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03132300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03132400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03132500
.ZG1241R              ANOP  ,                                           03132600
.*----------------------------------------------------------------***   03132700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03132800
                      AIF   (N'&ANSLEN LE 1).ZG1243A  CK NUM            03132900
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   03133000
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03133100
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03133200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03133300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03133400
.ZG1243A              ANOP  ,                                           03133500
.*-------------------------------------------------------------------   03133600
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03133700
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03133800
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03133900
                      AIF   (N'&ANSLEN GT 1).ZG1243B  MULTI PARMS       03134000
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03134100
.ZG1243B              AIF   (K'&ANSAREA(1) GT 0).ZG1243C  KEY           03134200
                      AIF   (K'&ANSLEN(1) LE 0).ZG1243D  PARM           03134300
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   03134400
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03134500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03134600
&ZMS                  SETC  '&ZMS '                                     03134700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03134800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03134900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03135000
                      AGO   .ZG1243E                                    03135100
.*                                                                      03135200
.ZG1243C              AIF   (K'&ANSLEN(1) GT 0).ZG1243E  PARM           03135300
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03135400
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      03135500
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03135600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03135700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03135800
.ZG1243D              ANOP  ,                                           03135900
&XANSLEN              SETC  '0'         SET DEFAULT                     03136000
.ZG1243E              ANOP  ,                                           03136100
.*-------------------------------------------------------------------   03136200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03136300
                      AIF   (K'&ZXANSLEN LE 0).ZG1243R  NOT I/O         03136400
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1243R            03136500
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03136600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1243P              03136700
                      AIF   (K'&ZCGPR GT 2).ZG1243Q                     03136800
                      AIF   ('&ZCGPR' EQ '0').ZG1243Q                   03136900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03137000
                      AIF   (T'&ZCGPR NE 'N').ZG1243Q  INVALID REG NAME 03137100
.ZG1243P              ANOP  ,                                           03137200
                      AIF   (T'&ZCGPR NE 'N').ZG1243R  NON NUMERIC      03137300
                      AIF   ('&ZCGPR' LT '2').ZG1243Q                   03137400
                      AIF   ('&ZCGPR' LE '12').ZG1243R                  03137500
.ZG1243Q              ANOP  ,                                           03137600
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   03137700
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03137800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03137900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03138000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03138100
.ZG1243R              ANOP  ,                                           03138200
.*----------------------------------------------------------------***   03138300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03138400
                      AIF   (N'&REQECB LE 1).ZG1247A  CK NUM            03138500
&ZMS                  SETC  '"REQECB='  *KPOSA* MNOTE                   03138600
&ZMS                  SETC  '&ZMS.&REQECB"'                             03138700
&ZMS                  SETC  '&ZMS "REQECB"'                             03138800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03138900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03139000
.ZG1247A              ANOP  ,                                           03139100
.*-------------------------------------------------------------------   03139200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03139300
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   03139400
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           03139500
                      AIF   (N'&REQECB GT 1).ZG1247B  MULTI PARMS       03139600
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   03139700
.ZG1247B              AIF   (K'&REQECB(1) GT 0).ZG1247C                 03139800
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 03139900
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'  *KRQDA*     03140000
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               03140100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03140200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03140300
.ZG1247C              ANOP  ,                                           03140400
.*-------------------------------------------------------------------   03140500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03140600
                      AIF   (K'&ZXREQECB LE 0).ZG1247R  NOT I/O         03140700
                      AIF   ('&XREQECB'(1,1) NE '(').ZG1247R            03140800
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  03140900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1247P              03141000
                      AIF   (K'&ZCGPR GT 2).ZG1247Q                     03141100
                      AIF   ('&ZCGPR' EQ '0').ZG1247Q                   03141200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03141300
                      AIF   (T'&ZCGPR NE 'N').ZG1247Q  INVALID REG NAME 03141400
.ZG1247P              ANOP  ,                                           03141500
                      AIF   (T'&ZCGPR NE 'N').ZG1247R  NON NUMERIC      03141600
                      AIF   ('&ZCGPR' LT '2').ZG1247Q                   03141700
                      AIF   ('&ZCGPR' LE '12').ZG1247R                  03141800
.ZG1247Q              ANOP  ,                                           03141900
&ZMS                  SETC  '"REQECB='  *KGPRA* MNOTE                   03142000
&ZMS                  SETC  '&ZMS.&REQECB"'                             03142100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03142200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03142300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03142400
.ZG1247R              ANOP  ,                                           03142500
.*-------------------------------------------------------------------   03142600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03142700
.ZG1249               ANOP  ,                                           03142800
&ZTLC                 SETC 'ASYNCEXIT'                                  03142900
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1259              03143000
&XMODE                SETC  'ASYNCEXIT'         SET KEYWORD             03143100
                      AIF   (N'&MODE LE 1).ZG1249A  CK NUM              03143200
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03143300
&ZMS                  SETC  '&ZMS.&MODE"'                               03143400
&ZMS                  SETC  '&ZMS "MODE"'                               03143500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03143600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03143700
.ZG1249A              ANOP  ,                                           03143800
.*------------------------------------------------------------------    03143900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03144000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03144100
.ZG1249A0             AIF   (K'&REQECB LE 0).ZG1249A1  OK               03144200
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03144300
.ZG1249A1             AIF   (K'&REQTOKEN LE 0).ZG1249A2  OK             03144400
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03144500
.ZG1249A2             AIF   (K'&ZCVAL LE 0).ZG1249A3  OK                03144600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03144700
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03144800
&ZMS                  SETC  '&ZMS.=&MODE"'                              03144900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03145000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03145100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03145200
.ZG1249A3             ANOP  ,                                           03145300
.*----------------------------------------------------------------***   03145400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03145500
                      AIF   (N'&ANSAREA LE 1).ZG1251A  CK NUM           03145600
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           03145700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03145800
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03145900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03146000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03146100
.ZG1251A              ANOP  ,                                           03146200
.*-------------------------------------------------------------------   03146300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03146400
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03146500
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03146600
                      AIF   (N'&ANSAREA GT 1).ZG1251B  MULTI PARMS      03146700
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03146800
.ZG1251B              AIF   (K'&ANSAREA(1) GT 0).ZG1251C                03146900
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03147000
&ZMS                  SETC  'WHEN "ASYNCEXIT" IS SPECIFIED'  *KRQDA*    03147100
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03147200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03147300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03147400
.ZG1251C              ANOP  ,                                           03147500
.*-------------------------------------------------------------------   03147600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03147700
                      AIF   (K'&ZXANSAREA LE 0).ZG1251R  NOT I/O        03147800
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1251R           03147900
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03148000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1251P              03148100
                      AIF   (K'&ZCGPR GT 2).ZG1251Q                     03148200
                      AIF   ('&ZCGPR' EQ '0').ZG1251Q                   03148300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03148400
                      AIF   (T'&ZCGPR NE 'N').ZG1251Q  INVALID REG NAME 03148500
.ZG1251P              ANOP  ,                                           03148600
                      AIF   (T'&ZCGPR NE 'N').ZG1251R  NON NUMERIC      03148700
                      AIF   ('&ZCGPR' LT '2').ZG1251Q                   03148800
                      AIF   ('&ZCGPR' LE '12').ZG1251R                  03148900
.ZG1251Q              ANOP  ,                                           03149000
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           03149100
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03149200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03149300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03149400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03149500
.ZG1251R              ANOP  ,                                           03149600
.*----------------------------------------------------------------***   03149700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03149800
                      AIF   (N'&ANSLEN LE 1).ZG1253A  CK NUM            03149900
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   03150000
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03150100
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03150200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03150300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03150400
.ZG1253A              ANOP  ,                                           03150500
.*-------------------------------------------------------------------   03150600
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03150700
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03150800
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03150900
                      AIF   (N'&ANSLEN GT 1).ZG1253B  MULTI PARMS       03151000
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03151100
.ZG1253B              AIF   (K'&ANSAREA(1) GT 0).ZG1253C  KEY           03151200
                      AIF   (K'&ANSLEN(1) LE 0).ZG1253D  PARM           03151300
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   03151400
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03151500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03151600
&ZMS                  SETC  '&ZMS '                                     03151700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03151800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03151900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03152000
                      AGO   .ZG1253E                                    03152100
.*                                                                      03152200
.ZG1253C              AIF   (K'&ANSLEN(1) GT 0).ZG1253E  PARM           03152300
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03152400
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      03152500
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03152600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03152700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03152800
.ZG1253D              ANOP  ,                                           03152900
&XANSLEN              SETC  '0'         SET DEFAULT                     03153000
.ZG1253E              ANOP  ,                                           03153100
.*-------------------------------------------------------------------   03153200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03153300
                      AIF   (K'&ZXANSLEN LE 0).ZG1253R  NOT I/O         03153400
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1253R            03153500
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03153600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1253P              03153700
                      AIF   (K'&ZCGPR GT 2).ZG1253Q                     03153800
                      AIF   ('&ZCGPR' EQ '0').ZG1253Q                   03153900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03154000
                      AIF   (T'&ZCGPR NE 'N').ZG1253Q  INVALID REG NAME 03154100
.ZG1253P              ANOP  ,                                           03154200
                      AIF   (T'&ZCGPR NE 'N').ZG1253R  NON NUMERIC      03154300
                      AIF   ('&ZCGPR' LT '2').ZG1253Q                   03154400
                      AIF   ('&ZCGPR' LE '12').ZG1253R                  03154500
.ZG1253Q              ANOP  ,                                           03154600
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   03154700
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03154800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03154900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03155000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03155100
.ZG1253R              ANOP  ,                                           03155200
.*----------------------------------------------------------------***   03155300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03155400
                      AIF   (N'&REQDATA LE 1).ZG1257A  CK NUM           03155500
&ZMS                  SETC  '"REQDATA='         *KPOSA* MNOTE           03155600
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03155700
&ZMS                  SETC  '&ZMS "REQDATA"'                            03155800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03155900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03156000
.ZG1257A              ANOP  ,                                           03156100
.*-------------------------------------------------------------------   03156200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03156300
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   03156400
&XREQDATA             SETC  'NO_REQDATA'                                03156500
                      AIF   (K'&REQDATA(1) LE 0).ZG1257B  PARM          03156600
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           03156700
                      AIF   (N'&REQDATA GT 1).ZG1257B  MULTI PARMS      03156800
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   03156900
.ZG1257B              ANOP  ,                                           03157000
.*-------------------------------------------------------------------   03157100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03157200
                      AIF   (K'&ZXREQDATA LE 0).ZG1257R  NOT I/O        03157300
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG1257R                    03157400
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG1257R           03157500
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                03157600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1257P              03157700
                      AIF   (K'&ZCGPR GT 2).ZG1257Q                     03157800
                      AIF   ('&ZCGPR' EQ '0').ZG1257Q                   03157900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03158000
                      AIF   (T'&ZCGPR NE 'N').ZG1257Q  INVALID REG NAME 03158100
.ZG1257P              ANOP  ,                                           03158200
                      AIF   (T'&ZCGPR NE 'N').ZG1257R  NON NUMERIC      03158300
                      AIF   ('&ZCGPR' LT '2').ZG1257Q                   03158400
                      AIF   ('&ZCGPR' LE '12').ZG1257R                  03158500
.ZG1257Q              ANOP  ,                                           03158600
&ZMS                  SETC  '"REQDATA='         *KGPRA* MNOTE           03158700
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03158800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03158900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03159000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03159100
.ZG1257R              ANOP  ,                                           03159200
.*-------------------------------------------------------------------   03159300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03159400
.ZG1259               ANOP  ,                                           03159500
&ZTLC                 SETC 'ASYNCTOKEN'                                 03159600
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1269              03159700
&XMODE                SETC  'ASYNCTOKEN'        SET KEYWORD             03159800
                      AIF   (N'&MODE LE 1).ZG1259A  CK NUM              03159900
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03160000
&ZMS                  SETC  '&ZMS.&MODE"'                               03160100
&ZMS                  SETC  '&ZMS "MODE"'                               03160200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03160300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03160400
.ZG1259A              ANOP  ,                                           03160500
.*------------------------------------------------------------------    03160600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03160700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03160800
.ZG1259A0             AIF   (K'&REQECB LE 0).ZG1259A1  OK               03160900
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03161000
.ZG1259A1             AIF   (K'&REQDATA LE 0).ZG1259A2  OK              03161100
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03161200
.ZG1259A2             AIF   (K'&ZCVAL LE 0).ZG1259A3  OK                03161300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03161400
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03161500
&ZMS                  SETC  '&ZMS.=&MODE"'                              03161600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03161700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03161800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03161900
.ZG1259A3             ANOP  ,                                           03162000
.*----------------------------------------------------------------***   03162100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03162200
                      AIF   (N'&ANSAREA LE 1).ZG1261A  CK NUM           03162300
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           03162400
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03162500
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03162600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03162700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03162800
.ZG1261A              ANOP  ,                                           03162900
.*-------------------------------------------------------------------   03163000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03163100
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03163200
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03163300
                      AIF   (N'&ANSAREA GT 1).ZG1261B  MULTI PARMS      03163400
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03163500
.ZG1261B              AIF   (K'&ANSAREA(1) GT 0).ZG1261C                03163600
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03163700
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'  *KRQDA*   03163800
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03163900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03164000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03164100
.ZG1261C              ANOP  ,                                           03164200
.*-------------------------------------------------------------------   03164300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03164400
                      AIF   (K'&ZXANSAREA LE 0).ZG1261R  NOT I/O        03164500
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1261R           03164600
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03164700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1261P              03164800
                      AIF   (K'&ZCGPR GT 2).ZG1261Q                     03164900
                      AIF   ('&ZCGPR' EQ '0').ZG1261Q                   03165000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03165100
                      AIF   (T'&ZCGPR NE 'N').ZG1261Q  INVALID REG NAME 03165200
.ZG1261P              ANOP  ,                                           03165300
                      AIF   (T'&ZCGPR NE 'N').ZG1261R  NON NUMERIC      03165400
                      AIF   ('&ZCGPR' LT '2').ZG1261Q                   03165500
                      AIF   ('&ZCGPR' LE '12').ZG1261R                  03165600
.ZG1261Q              ANOP  ,                                           03165700
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           03165800
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03165900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03166000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03166100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03166200
.ZG1261R              ANOP  ,                                           03166300
.*----------------------------------------------------------------***   03166400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03166500
                      AIF   (N'&ANSLEN LE 1).ZG1263A  CK NUM            03166600
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   03166700
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03166800
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03166900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03167000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03167100
.ZG1263A              ANOP  ,                                           03167200
.*-------------------------------------------------------------------   03167300
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03167400
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03167500
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03167600
                      AIF   (N'&ANSLEN GT 1).ZG1263B  MULTI PARMS       03167700
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03167800
.ZG1263B              AIF   (K'&ANSAREA(1) GT 0).ZG1263C  KEY           03167900
                      AIF   (K'&ANSLEN(1) LE 0).ZG1263D  PARM           03168000
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   03168100
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03168200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03168300
&ZMS                  SETC  '&ZMS '                                     03168400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03168500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03168600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03168700
                      AGO   .ZG1263E                                    03168800
.*                                                                      03168900
.ZG1263C              AIF   (K'&ANSLEN(1) GT 0).ZG1263E  PARM           03169000
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03169100
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      03169200
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03169300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03169400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03169500
.ZG1263D              ANOP  ,                                           03169600
&XANSLEN              SETC  '0'         SET DEFAULT                     03169700
.ZG1263E              ANOP  ,                                           03169800
.*-------------------------------------------------------------------   03169900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03170000
                      AIF   (K'&ZXANSLEN LE 0).ZG1263R  NOT I/O         03170100
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1263R            03170200
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03170300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1263P              03170400
                      AIF   (K'&ZCGPR GT 2).ZG1263Q                     03170500
                      AIF   ('&ZCGPR' EQ '0').ZG1263Q                   03170600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03170700
                      AIF   (T'&ZCGPR NE 'N').ZG1263Q  INVALID REG NAME 03170800
.ZG1263P              ANOP  ,                                           03170900
                      AIF   (T'&ZCGPR NE 'N').ZG1263R  NON NUMERIC      03171000
                      AIF   ('&ZCGPR' LT '2').ZG1263Q                   03171100
                      AIF   ('&ZCGPR' LE '12').ZG1263R                  03171200
.ZG1263Q              ANOP  ,                                           03171300
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   03171400
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03171500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03171600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03171700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03171800
.ZG1263R              ANOP  ,                                           03171900
.*----------------------------------------------------------------***   03172000
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                03172100
                      AIF   (N'&REQTOKEN LE 1).ZG1267A  CK NUM          03172200
&ZMS                  SETC  '"REQTOKEN='        *KPOSA* MNOTE           03172300
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03172400
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           03172500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03172600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03172700
.ZG1267A              ANOP  ,                                           03172800
.*-------------------------------------------------------------------   03172900
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    03173000
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   03173100
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           03173200
                      AIF   (N'&REQTOKEN GT 1).ZG1267B  MULTI PARMS     03173300
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           03173400
.ZG1267B              AIF   (K'&REQTOKEN(1) GT 0).ZG1267C               03173500
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 03173600
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'  *KRQDA*   03173700
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             03173800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03173900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03174000
.ZG1267C              ANOP  ,                                           03174100
.*-------------------------------------------------------------------   03174200
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               03174300
                      AIF   (K'&ZXREQTOKEN LE 0).ZG1267R  NOT I/O       03174400
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG1267R          03174500
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              03174600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1267P              03174700
                      AIF   (K'&ZCGPR GT 2).ZG1267Q                     03174800
                      AIF   ('&ZCGPR' EQ '0').ZG1267Q                   03174900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03175000
                      AIF   (T'&ZCGPR NE 'N').ZG1267Q  INVALID REG NAME 03175100
.ZG1267P              ANOP  ,                                           03175200
                      AIF   (T'&ZCGPR NE 'N').ZG1267R  NON NUMERIC      03175300
                      AIF   ('&ZCGPR' LT '2').ZG1267Q                   03175400
                      AIF   ('&ZCGPR' LE '12').ZG1267R                  03175500
.ZG1267Q              ANOP  ,                                           03175600
&ZMS                  SETC  '"REQTOKEN='        *KGPRA* MNOTE           03175700
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03175800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03175900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03176000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03176100
.ZG1267R              ANOP  ,                                           03176200
.*-------------------------------------------------------------------   03176300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03176400
.ZG1269               ANOP  ,                                           03176500
&ZTLC                 SETC 'ASYNCNORESPONSE'                            03176600
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1270              03176700
&XMODE                SETC  'ASYNCNORESPONSE'   SET KEYWORD             03176800
                      AIF   (N'&MODE LE 1).ZG1269A  CK NUM              03176900
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   03177000
&ZMS                  SETC  '&ZMS.&MODE"'                               03177100
&ZMS                  SETC  '&ZMS "MODE"'                               03177200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03177300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03177400
.ZG1269A              ANOP  ,                                           03177500
.*------------------------------------------------------------------    03177600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03177700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03177800
.ZG1269A0             AIF   (K'&ANSAREA LE 0).ZG1269A1  OK              03177900
&ZCVAL                SETC '&ZCVAL ANSAREA'     INCORRECT KEY USED      03178000
.ZG1269A1             AIF   (K'&ANSLEN LE 0).ZG1269A2  OK               03178100
&ZCVAL                SETC '&ZCVAL ANSLEN'      INCORRECT KEY USED      03178200
.ZG1269A2             AIF   (K'&REQECB LE 0).ZG1269A3  OK               03178300
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03178400
.ZG1269A3             AIF   (K'&REQDATA LE 0).ZG1269A4  OK              03178500
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03178600
.ZG1269A4             AIF   (K'&REQTOKEN LE 0).ZG1269A5  OK             03178700
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03178800
.ZG1269A5             AIF   (K'&ZCVAL LE 0).ZG1269A6  OK                03178900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03179000
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   03179100
&ZMS                  SETC  '&ZMS.=&MODE"'                              03179200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03179300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03179400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03179500
.ZG1269A6             ANOP  ,                                           03179600
.*------------------------------------------------------------------    03179700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03179800
.ZG1270               ANOP  ,                                           03179900
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   03180000
                      AIF   (K'&XMODE GT 0).ZG1270E  VALID ARG          03180100
                      AIF   (T'&MODE EQ 'O').ZG1270D  OMITTED           03180200
&ZASYSLNDX            SETA  0                                           03180300
.ZG1270A              ANOP  ,           POSITIONAL MACRO KEY            03180400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03180500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1270C          03180600
&ZTLC                 SETC 'MODE'                                       03180700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1270A 03180800
.ZG1270B              ANOP  ,                                           03180900
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 03181000
&ZMS                  SETC  'THE "MODE" KEY'    *KOPTA* MNOTE           03181100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03181200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03181300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03181400
                      AGO   .ZG1270E                                    03181500
.ZG1270C              ANOP  ,                                           03181600
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 03181700
&ZMS                  SETC  '"MODE='    *KUKWA* MNOTE                   03181800
&ZMS                  SETC  '&ZMS.&MODE"'                               03181900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03182000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03182100
&ZMS                  SETC  '&ZMS "SYNCSUSPEND",'                       03182200
&ZMS                  SETC  '&ZMS "SYNCECB",'                           03182300
&ZMS                  SETC  '&ZMS "SYNCEXIT",'                          03182400
&ZMS                  SETC  '&ZMS "SYNCTOKEN",'                         03182500
&ZMS                  SETC  '&ZMS "ASYNCECB",'                          03182600
&ZMS                  SETC  '&ZMS "ASYNCEXIT",'                         03182700
&ZMS                  SETC  '&ZMS "ASYNCTOKEN",'                        03182800
&ZMS                  SETC  '&ZMS OR "ASYNCNORESPONSE".'                03182900
                      MNOTE 8,' &ZMS '                                  03183000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03183100
                      AGO   .ZG1270E                                    03183200
.ZG1270D              ANOP  ,                                           03183300
&XMODE                SETC  'SYNCSUSPEND'       SET DEFAULT KEYWORD     03183400
.ZG1270E              ANOP  ,                                           03183500
.*----------------------------------------------------------------***   03183600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    03183700
                      AIF   (N'&RETCODE LE 1).ZG1272A  CK NUM           03183800
&ZMS                  SETC  '"RETCODE='         *KPOSA* MNOTE           03183900
&ZMS                  SETC  '&ZMS.&RETCODE"'                            03184000
&ZMS                  SETC  '&ZMS "RETCODE"'                            03184100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03184200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03184300
.ZG1272A              ANOP  ,                                           03184400
.*-------------------------------------------------------------------   03184500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        03184600
                      AIF   (K'&RETCODE(1) LE 0).ZG1272C  NO PARM       03184700
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      03184800
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           03184900
                      AIF   (N'&RETCODE GT 1).ZG1272C                   03185000
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   03185100
.ZG1272C              ANOP  ,                                           03185200
.*-------------------------------------------------------------------   03185300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   03185400
                      AIF   (K'&ZXRETCODE LE 0).ZG1272R  NOT I/O        03185500
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG1272R           03185600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                03185700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1272P              03185800
                      AIF   (K'&ZCGPR GT 2).ZG1272Q                     03185900
                      AIF   ('&ZCGPR' EQ '0').ZG1272Q                   03186000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03186100
                      AIF   (T'&ZCGPR NE 'N').ZG1272Q  INVALID REG NAME 03186200
.ZG1272P              ANOP  ,                                           03186300
                      AIF   (T'&ZCGPR NE 'N').ZG1272R  NON NUMERIC      03186400
                      AIF   ('&ZCGPR' LT '2').ZG1272Q                   03186500
                      AIF   ('&ZCGPR' LE '12').ZG1272R                  03186600
.ZG1272Q              ANOP  ,                                           03186700
&ZMS                  SETC  '"RETCODE='         *KGPRA* MNOTE           03186800
&ZMS                  SETC  '&ZMS.&RETCODE"'                            03186900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03187000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03187100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03187200
.ZG1272R              ANOP  ,                                           03187300
.*----------------------------------------------------------------***   03187400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    03187500
                      AIF   (N'&RSNCODE LE 1).ZG1275A  CK NUM           03187600
&ZMS                  SETC  '"RSNCODE='         *KPOSA* MNOTE           03187700
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            03187800
&ZMS                  SETC  '&ZMS "RSNCODE"'                            03187900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03188000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03188100
.ZG1275A              ANOP  ,                                           03188200
.*-------------------------------------------------------------------   03188300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        03188400
                      AIF   (K'&RSNCODE(1) LE 0).ZG1275C  NO PARM       03188500
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      03188600
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           03188700
                      AIF   (N'&RSNCODE GT 1).ZG1275C                   03188800
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   03188900
.ZG1275C              ANOP  ,                                           03189000
.*-------------------------------------------------------------------   03189100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   03189200
                      AIF   (K'&ZXRSNCODE LE 0).ZG1275R  NOT I/O        03189300
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG1275R           03189400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                03189500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1275P              03189600
                      AIF   (K'&ZCGPR GT 2).ZG1275Q                     03189700
                      AIF   ('&ZCGPR' EQ '0').ZG1275Q                   03189800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03189900
                      AIF   (T'&ZCGPR NE 'N').ZG1275Q  INVALID REG NAME 03190000
.ZG1275P              ANOP  ,                                           03190100
                      AIF   (T'&ZCGPR NE 'N').ZG1275R  NON NUMERIC      03190200
                      AIF   ('&ZCGPR' LT '2').ZG1275Q                   03190300
                      AIF   ('&ZCGPR' LE '12').ZG1275R                  03190400
.ZG1275Q              ANOP  ,                                           03190500
&ZMS                  SETC  '"RSNCODE='         *KGPRA* MNOTE           03190600
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            03190700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03190800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03190900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03191000
.ZG1275R              ANOP  ,                                           03191100
.******************************************************************     03191200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        03191300
.******************************************************************     03191400
                      ACTR  10000                                       03191500
.*----------------------------------------------------------------***   03191600
.***AH.P02 EXTRA POSITIONALS                                            03191700
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        03191800
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        03191900
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    03192000
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     03192100
.ZGLISTX1             ANOP  ,                                           03192200
&ZCVAL                SETC  ''          ERROR FIELD                     03192300
&ZAWRK                SETA  0           POSITIONAL NUMBER               03192400
.ZGLIST2              ANOP  ,                                           03192500
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 03192600
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        03192700
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             03192800
                      AGO   .ZGLIST2                                    03192900
.*                                                                      03193000
.ZGLIST3              ANOP  ,                                           03193100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          03193200
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE    03193300
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             03193400
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      03193500
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              03193600
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      03193700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03193800
.ZGLISTX              ANOP  ,                                           03193900
&ZASYSLNDX            SETA  0                                           03194000
.*-------------------------------------------------------------------   03194100
.***AG.MF04 MF=(SLE)                                                    03194200
.ZGMFX                ANOP  ,           END OF FULL SYNTAX CHECK        03194300
.*******************************************************************    03194400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       03194500
.*******************************************************************    03194600
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        03194700
.*******************************************************************    03194800
.***AE.01  START OF IXLLSTM MACRO CODE                                  03194900
.*******************************************************************    03195000
                      LCLC  &M0M0001                 NAME               03195100
&M0M0001              SETC  '&XLABEL'                SET NAME           03195200
                      AIF   (K'&XLABEL NE 0).XLAB2                      03195300
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       03195400
.*                                                                      03195500
.XLAB2                ANOP  ,                                           03195600
                      AIF   ('&XMF' EQ 'L').XLAB3                       03195700
&M0M0001 DS    0H                             IXLLSTM-4                 03195800
.XLAB3                ANOP  ,                                           03195900
.*******************************************************************    03196000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              03196100
.*******************************************************************    03196200
              PUSH  PRINT                                               03196300
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  03196400
                      PRINT OFF         ++ PR01                         03196500
                      AGO   .ZPRNTXX                                    03196600
.ZPRINTX              PRINT ON                                          03196700
.ZPRNTXX              ANOP  ,                                           03196800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03196900
.**------------------------------------------------------------------** 03197000
.**  Start of user macasm code                                       ** 03197100
.**------------------------------------------------------------------** 03197200
.*                                                                      03197300
.**------------------------------------------------------------------** 03197400
.**  Start of code to remove "*" defaults                        @L1A** 03197500
.**                                                                  ** 03197600
.**  This code removes "NO_keyname" values.  Keywords with these     ** 03197700
.**  default values should be treated as if they were not specified. ** 03197800
.**  Removing the values makes it look as if they were not specified ** 03197900
.**  and avoids failure of mutual exclusivity checks.                ** 03198000
.**                                                                  ** 03198100
.**  Some other default values also need to be removed.  These       ** 03198200
.**  values are removed to make the invocation look consistent       ** 03198300
.**  to the checking code.                                           ** 03198400
.**                                                                  ** 03198500
.**------------------------------------------------------------------** 03198600
.*                                                                      03198700
.**------------------------------------------------------------------** 03198800
.**  Remove defaults for ResToken                                @L1A** 03198900
.**------------------------------------------------------------------** 03199000
         AIF   ('&XRESTOKEN'  NE 'NO_RESTOKEN').DELDEFRESTOKEN     @L1A 03199100
&XRESTOKEN     SETC ''                                             @L1A 03199200
&ZXRESTOKEN    SETC ''                                             @L1A 03199300
.DELDEFRESTOKEN ANOP ,                                             @L1A 03199400
.*                                                                      03199500
.**------------------------------------------------------------------** 03199600
.**  Remove defaults for ExtResToken                             @L1A** 03199700
.**------------------------------------------------------------------** 03199800
         AIF   ('&XEXTRESTOKEN'  NE 'NO_EXTRESTOKEN').DELDEFEXTRESTOKEN 03199900
.*                                                                 @L1A 03200000
&XEXTRESTOKEN     SETC ''                                          @L1A 03200100
&ZXEXTRESTOKEN    SETC ''                                          @L1A 03200200
.DELDEFEXTRESTOKEN ANOP ,                                          @L1A 03200300
.*                                                                      03200400
.**------------------------------------------------------------------** 03200500
.**  Remove defaults for AuthCompType                                ** 03200600
.**------------------------------------------------------------------** 03200700
.*                                                                      03200800
         AIF   ('&AUTHCOMPTYPE(1)' NE '').DEFAUTHCOMPTYPESPEC           03200900
.*                                                                      03201000
         AIF   ('&AUTHCOMP(1)' NE '').DEFACTYPESKIPREMOVE               03201100
&XAUTHCOMPTYPE  SETC ''                                                 03201200
&ZXAUTHCOMPTYPE SETC ''                                                 03201300
.DEFACTYPESKIPREMOVE ANOP ,                                             03201400
.DEFAUTHCOMPTYPESPEC ANOP ,                                             03201500
.*                                                                      03201600
         AIF   ('&LOCKINDEX(1)' NE '' AND                              *03201700
                '&LOCKINDEX(1)' NE 'NO_LOCKINDEX').DELDEFLOCKINDEX      03201800
&XLOCKINDEX    SETC ''                                                  03201900
&ZXLOCKINDEX   SETC ''                                                  03202000
&XLOCKOPER     SETC ''                                                  03202100
&ZXLOCKOPER    SETC ''                                                  03202200
.DELDEFLOCKINDEX ANOP ,                                                 03202300
.*                                                                      03202400
.**------------------------------------------------------------------** 03202500
.**  Start of code to validity check parameters                      ** 03202600
.**                                                                  ** 03202700
.**  This code is needed in addition to the checks which AMG         ** 03202800
.**  produces because we did not repeat keys in all places where     ** 03202900
.**  they could be used.                                             ** 03203000
.**                                                                  ** 03203100
.**  Validity checking for mutually exclusive keys, required keys,   ** 03203200
.**  and dependent keys is performed for the standard and execute    ** 03203300
.**  forms.                                                          ** 03203400
.**                                                                  ** 03203500
.**------------------------------------------------------------------** 03203600
.*                                                                      03203700
.* Skip all validity checking for MF=L                                  03203800
.*                                                                      03203900
         AIF   ('&MF(1)' EQ 'L').ENDPARMVALIDATION                      03204000
.*                                                                      03204100
.**------------------------------------------------------------------** 03204200
.**  Validity checking for AdjArea                                   ** 03204300
.**                                                                  ** 03204400
.**     AdjArea is required if Type(AdjData) is specified            ** 03204500
.**                                                                  ** 03204600
.**   If request is read_list or read_mult                           ** 03204700
.**      If type(adjdata) is specified                               ** 03204800
.**        If adjarea is not specified                               ** 03204900
.**          Issue MNOTE                                             ** 03205000
.**                                                                  ** 03205100
.*                                                                      03205200
         AIF   ('&XREQUEST' NE 'READ_LIST' AND                         *03205300
                '&XREQUEST' NE 'READ_MULT').REQUESTNOTREAD              03205400
&ZCVAL   SETC  'NO'                                                     03205500
&ZI      SETA  0                                                        03205600
.*                                                                      03205700
.ADJFINDREQ ANOP ,                                                      03205800
.*                                                                      03205900
&ZI      SETA  &ZI+1                                                    03206000
.*                                                                      03206100
         AIF   (K'&XTYPE(&ZI) LE 0).ADJFINDREQNOVALUE                   03206200
.*                                                                      03206300
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').ADJFINDREQ                  03206400
.*                                                                      03206500
&ZCVAL   SETC  'YES'                                                    03206600
.*                                                                      03206700
.ADJFINDREQNOVALUE ANOP ,                                               03206800
.*                                                                      03206900
         AIF   ('&ZCVAL' NE 'YES').ADJDATANOTSPEC                       03207000
         AIF   ('&XADJAREA' NE 'NO_ADJAREA' AND                        *03207100
                '&XADJAREA' NE '').ADJAREASPEC                          03207200
         MNOTE 8,'IXLLSTM ---> The ADJAREA key is required for REQUEST=*03207300
               &XREQUEST when TYPE=ADJDATA is specified'                03207400
&ZMACRET SETA  8                                                        03207500
.ADJAREAERROR001 ANOP ,                                                 03207600
.*                                                                      03207700
.*                                                                      03207800
.ADJAREASPEC ANOP ,                                                     03207900
.ADJDATANOTSPEC ANOP ,                                                  03208000
.REQUESTNOTREAD ANOP ,                                                  03208100
.**                                                                  ** 03208200
.**  End of validity checking for AdjArea                            ** 03208300
.**------------------------------------------------------------------** 03208400
.**------------------------------------------------------------------** 03208500
.**  Validity checking for Mode                                      ** 03208600
.**                                                                  ** 03208700
.**    Mode(AsyncNoResponse) is mutually exclusive with Buffer       ** 03208800
.**    and Buflist                                                   ** 03208900
.**                                                                  ** 03209000
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ASYNCNORESPONSENOTSPEC   03209100
.*                                                                      03209200
         AIF   ('&XBUFFER'  EQ ''  AND                                 *03209300
                '&XBUFLIST' EQ '').MODEERROR001                         03209400
         MNOTE 8,'IXLLSTM ---> MODE=&XMODE is mutually exclusive with t*03209500
               he BUFFER and BUFLIST keys'                              03209600
&ZMACRET SETA  8                                                        03209700
.MODEERROR001 ANOP ,                                                    03209800
.*                                                                      03209900
.ASYNCNORESPONSENOTSPEC ANOP ,                                          03210000
.**                                                                  ** 03210100
.**  End of validity checking for Mode                               ** 03210200
.**------------------------------------------------------------------** 03210300
.**------------------------------------------------------------------** 03210400
.**  Validity checking for KeyCompare                                ** 03210500
.**                                                                  ** 03210600
.**    For a REQUEST(Read_List) or REQUEST(Delete_List)              ** 03210700
.**      If LOCATOR(KEYPOS) and KEYREQTYPE(RANGE) Then               ** 03210800
.**        KEYCOMPARE(YES) must be specified                         ** 03210900
.**                                                                  ** 03211000
.**                                                                  ** 03211100
.**                                                                  ** 03211200
         AIF (('&XREQUEST' NE 'READ_LIST' AND                          *03211300
               '&XREQUEST' NE 'DELETE_LIST') OR                        *03211400
               '&XLOCATOR' NE 'KEYPOS' OR                              *03211500
               '&XKEYREQTYPE' NE 'RANGE' OR                            *03211600
               '&XKEYCOMPARE' EQ 'YES').VALIDKEYCOMPARE                 03211700
         MNOTE 8,'IXLLSTM ---> KEYCOMPARE=YES is required when LOCATOR=*03211800
               KEYPOS and KEYREQTYPE=RANGE is specified with REQUEST=&x*03211900
               request'                                                 03212000
&ZMACRET SETA  8                                                        03212100
.VALIDKEYCOMPARE ANOP ,                                                 03212200
.**                                                                     03212300
.**  End of validity checking for KeyCompare                         ** 03212400
.**------------------------------------------------------------------** 03212500
.**------------------------------------------------------------------** 03212600
.**  Validity checking for SKeyCompare                               ** 03212700
.**                                                                  ** 03212800
.**    For a REQUEST(Read_List) or REQUEST(Delete_List)              ** 03212900
.**      If LOCATOR(KEYPOS) and SKEYREQTYPE(RANGE) Then              ** 03213000
.**        SKEYCOMPARE(YES) must be specified                        ** 03213100
.**                                                                  ** 03213200
.**                                                                  ** 03213300
.**                                                                  ** 03213400
         AIF (('&XREQUEST' NE 'READ_LIST' AND                          *03213500
               '&XREQUEST' NE 'DELETE_LIST') OR                        *03213600
               '&XLOCATOR' NE 'KEYPOS' OR                              *03213700
               '&XSKEYREQTYPE' NE 'RANGE' OR                           *03213800
               '&XSKEYCOMPARE' EQ 'YES').VALIDSKEYCOMPARE               03213900
         MNOTE 8,'IXLLSTM ---> SKEYCOMPARE=YES is required when LOCATOR*03214000
               =KEYPOS and SKEYREQTYPE=RANGE is specified with REQUEST=*03214100
               &xrequest'                                               03214200
&ZMACRET SETA  8                                                        03214300
.VALIDSKEYCOMPARE ANOP ,                                                03214400
.**                                                                     03214500
.**  End of validity checking for KeyCompare                         ** 03214600
.**------------------------------------------------------------------** 03214700
.**------------------------------------------------------------------** 03214800
.**  Validity checking for LockIndex                                 ** 03214900
.**                                                                  ** 03215000
.**   LockIndex and Mode(AsyncNoResponse) are mutually exclusive     ** 03215100
.**                                                                  ** 03215200
         AIF   ('&XLOCKINDEX' EQ '').LOCKINDEXNOTSPEC                   03215300
.*                                                                      03215400
.*                                                                      03215500
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').LOCKINDEXERROR001        03215600
         MNOTE 8,'IXLLSTM ---> The LOCKINDEX key is mutually exclusive *03215700
               with MODE=&XMODE'                                        03215800
&ZMACRET SETA  8                                                        03215900
.LOCKINDEXERROR001 ANOP ,                                               03216000
.*                                                                      03216100
.LOCKINDEXNOTSPEC ANOP ,                                                03216200
.*                                                                      03216300
.**                                                                  ** 03216400
.**  End of validity checking for LockIndex                          ** 03216500
.**------------------------------------------------------------------** 03216600
.**------------------------------------------------------------------** 03216700
.**  Start of validity checking for LockIndex=NO_LOCKINDEX           ** 03216800
.**                                                                  ** 03216900
.**  LOCKINDEX=NO_LOCKINDEX with LOCKOPER is invalid                 ** 03217000
.**                                                                  ** 03217100
.** if lockIndex^=NO_LOCKINDEX                                          03217200
.** then                                                                03217300
.**   branch to label LockIndexSpec                                     03217400
.** else (lockIndex=NO_LOCKINDEX)                                       03217500
.**   if LOCKOPER was not specified                                     03217600
.**   then                                                              03217700
.**     branch to label NOLOCKOPERSPEC                                  03217800
.**   else                                                              03217900
.**     issue an MNOTE to inform the user that a value must be          03218000
.**       specified for LockIndex when LOCKOPER is specified            03218100
.**                                                                     03218200
         AIF   ('&LOCKINDEX(1)' NE 'NO_LOCKINDEX').LOCKINDEXSPEC        03218300
         AIF   ('&LOCKOPER(1)' EQ '').NOLOCKOPERSPEC                    03218400
         MNOTE 8,'IXLLSTM ---> A value other than NO_LOCKINDEX must be *03218500
               specified for LOCKINDEX when LOCKOPER is specified'      03218600
&ZMACRET SETA  8                                                        03218700
.LOCKINDEXSPEC      ANOP ,                                              03218800
.NOLOCKOPERSPEC     ANOP ,                                              03218900
.*                                                                      03219000
.**                                                                  ** 03219100
.**  End of validity checking for LockIndex=NO_LOCKINDEX             ** 03219200
.**------------------------------------------------------------------** 03219300
.*                                                                      03219400
.ENDPARMVALIDATION ANOP ,                                               03219500
.*                                                                      03219600
.**------------------------------------------------------------------** 03219700
.**  End of code to validity check parameters                        ** 03219800
.**------------------------------------------------------------------** 03219900
.*                                                                      03220000
.**------------------------------------------------------------------** 03220100
.**  Determine the parameter list version                        @P1A** 03220200
.**                                                                  ** 03220300
.**  Note that AMG has already set &XPLISTVER to the highest value   ** 03220400
.**  of either the user specified value, or the value specified by   ** 03220500
.**  macplver on any keys that were specified. The following code    ** 03220600
.**  will set &XPLISTVER to a higher value if needed depending on    ** 03220700
.**  an analysis of special case keys that AMG does not handle.      ** 03220800
.**                                                                  ** 03220900
.**  Note that each of the new macros, IXLLSTC, IXLLSTE, and IXLLSTM,** 03221000
.**  provide a subset of the function originally provided for in     ** 03221100
.**  IXLLIST. As such, the parmlist version is set to the same       ** 03221200
.**  parmlist version that would have resulted had the request       ** 03221300
.**  been coded with IXLLIST. This is done to ensure that the        ** 03221400
.**  new macros can directly replace any of the IXLLIST invocations  ** 03221500
.**  compatibly. Since each macro provides a subset of IXLLIST       ** 03221600
.**  function, the possible parmlist version numbers in each macro   ** 03221700
.**  are not necessarily contiguous. Furthermore, the new macros     ** 03221800
.**  will have parmlist version numbers higher than those of         ** 03221900
.**  IXLLIST since the new macros add new function. In all cases,    ** 03222000
.**  the purpose of the parmlist version number is to ensure that    ** 03222100
.**  any new function is rejected on a downlevel system that does    ** 03222200
.**  not yet recognize the new function.                             ** 03222300
.**                                                                  ** 03222400
.**------------------------------------------------------------------** 03222500
.*                                                                      03222600
         LCLA  &LISTPLVERS                                         @P1A 03222700
.*                                                                      03222800
.* initialize the plist version to zero                            @P1A 03222900
&LISTPLVERS SETA  0                                                @P1A 03223000
.*                                                                      03223100
.* determine if plist version 1 should be used                     @P1A 03223200
         AIF    ('&XAUTHCOMPARE' EQ 'YES' OR                           *03223300
                 '&XVERSCOMPTYPE' EQ 'LESSOREQUAL').SETPLVERSONE   @P1A 03223400
.*                                                                      03223500
         AGO   .SETPLVERSONEEND                                    @P1A 03223600
.*                                                                      03223700
.SETPLVERSONE ANOP ,                                               @P1A 03223800
&LISTPLVERS SETA  1                                                @P1A 03223900
.*                                                                      03224000
.SETPLVERSONEEND ANOP ,                                            @P1A 03224100
.*                                                                      03224200
.* note that no version 2 or 3 checking is done here               @P1A 03224300
.*                                                                      03224400
.* determine if plist version 4 should be used                     @P1A 03224500
.********************************************************************   03224600
.*  Version 4 unique keywords that AMG will not cover for us:           03224700
.*      * - Request(Delete_List)                                        03224800
.*      * - Request(Move_EntryList)                                     03224900
.*      * - KeyScanType(Secondary)                                      03225000
.*      * - KeyReqType(LessOrEqual) Request(^Read_List)                 03225100
.*      * - KeyReqType(GreaterOrEqual) Request(^Read_List)              03225200
.*      * - KeyReqType(Range)                                           03225300
.*      * - VersCompare(ByEntry)                                        03225400
.* Note - Assembler AIF is coded as a two part negitive test            03225500
.*        (Non-version 4 branches around the setting of version 4)      03225600
.********************************************************************   03225700
         AIF  ('&XREQUEST' NE 'DELETE_LIST' AND                        *03225800
               '&XREQUEST' NE 'MOVE_ENTRYLIST' AND                     *03225900
               '&XKEYSCANTYPE' NE 'SECONDARY' AND                      *03226000
               '&XKEYREQTYPE' NE 'RANGE' AND                           *03226100
               '&XVERSCOMPARE' NE 'BYENTRY').SETPLVERSFOURENDA          03226200
.*                                                                      03226300
&LISTPLVERS SETA  4                                                     03226400
         AGO .SETPLVERSFOURENDB                                         03226500
.*                                                                      03226600
.SETPLVERSFOURENDA ANOP ,                                               03226700
         AIF  (('&XKEYREQTYPE' NE 'LESSOREQUAL' AND                    *03226800
                '&XKEYREQTYPE' NE 'GREATEROREQUAL') OR                 *03226900
               '&XREQUEST' EQ 'READ_LIST').SETPLVERSFOURENDB            03227000
&LISTPLVERS SETA  4                                                     03227100
.SETPLVERSFOURENDB ANOP ,                                               03227200
.*                                                                      03227300
.* if AMG already set a higher plist version when it did its       @P1A 03227400
.* keyword analysis (based on the macplver specification), or      @P1A 03227500
.* if the user specified a higher plist version,                   @P1A 03227600
.* then use the highest version found so far                       @P1A 03227700
         AIF   (&XPLISTVER LE &LISTPLVERS).SETLISTPLVERSEND        @P1A 03227800
.*                                                                      03227900
&LISTPLVERS SETA  &XPLISTVER                                       @P1A 03228000
.*                                                                      03228100
.SETLISTPLVERSEND ANOP ,                                           @P1A 03228200
.*                                                                      03228300
.* if the user specified a plist version less than the version     @P1A 03228400
.* that was determined based on the specified keywords then        @P1A 03228500
.* issue an MNOTE                                                  @P1A 03228600
         AIF   (K'&PLISTVER(1) LE 0                      OR            *03228700
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *03228800
                '&PLISTVER(1)' EQ 'MAX'                  OR            *03228900
                &XPLISTVER     GE &LISTPLVERS).SETPLVERSUPDATE     @P1A 03229000
         MNOTE 8,'IXLLSTM ---> PLISTVER=&PLISTVER(1), BUT PLISTVER OF  *03229100
               &LISTPLVERS IS REQUIRED'                                 03229200
.*                                                                      03229300
&ZMACRET SETA  8                                                   @P1A 03229400
         AGO   .SETPLVERSEND                                       @P1A 03229500
.*                                                                      03229600
.SETPLVERSUPDATE ANOP ,                                            @P1A 03229700
&XPLISTVER  SETA  &LISTPLVERS                                      @P1A 03229800
.SETPLVERSEND ANOP ,                                               @P1A 03229900
.*                                                                      03230000
.**------------------------------------------------------------------** 03230100
.**  End determine the parameter list version                    @P1A** 03230200
.**------------------------------------------------------------------** 03230300
.*                                                                      03230400
.*                                                                      03230500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03230600
.********************************************************************   03230700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     03230800
.********************************************************************   03230900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       03231000
                      LCLA  &ZOPN1         INVOCATION INDEX             03231100
                      LCLC  &ZOPL(4095)    LABEL                        03231200
                      LCLC  &ZOPO(4095)    OPERATION                    03231300
                      LCLC  &ZOPV(4095)    VALUE                        03231400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  03231500
.*                                                                      03231600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     03231700
.******************************************************************     03231800
.***AL.L10 IXLLSTM FMT=LIST MF=S|L PARAMETERS                           03231900
.******************************************************************     03232000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     03232100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     03232200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     03232300
&XMFATTR              SETC  '0D'                                        03232400
.*                                                                      03232500
&ZOPN                 SETA  &ZOPN+1                                     03232600
&ZOPL(&ZOPN)          SETC  ' '                                         03232700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     03232800
&ZOPO(&ZOPN)          SETC  'B'                                         03232900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                03233000
                      AGO   .ZALVL6B                                    03233100
.ZALVL6A              ANOP                                              03233200
&ZOPO(&ZOPN)          SETC  'BRAS'                                      03233300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              03233400
.ZALVL6B              ANOP                                              03233500
&ZOPD(&ZOPN)          SETC  '++ IXLLSTM ARG PARMS'                      03233600
.*                                                                      03233700
&ZOPN                 SETA  &ZOPN+1                                     03233800
&ZOPL(&ZOPN)          SETC  ' '                                         03233900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     03234000
&ZOPV(&ZOPN)          SETC  '1'                                         03234100
&ZOPD(&ZOPN)          SETC  ' '                                         03234200
.*                                                                      03234300
.ZLMFSL2              ANOP  ,                                           03234400
.*-------------------------------------------------------------------   03234500
.***AM.L00  IXLLSTM FMT=LIST name                                       03234600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    03234700
&ZOPN                 SETA &ZOPN+1                                      03234800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   03234900
&ZOPO(&ZOPN)          SETC 'EQU'                                        03235000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   03235100
&ZOPD(&ZOPN)          SETC '++ IXLLSTM NAME'                            03235200
.ZLMFSL2M             ANOP  ,                                           03235300
.*-------------------------------------------------------------------   03235400
.***AM.L01  IXLLSTM FMT=LIST PARAMETERS                                 03235500
&ZOPN                 SETA &ZOPN+1                                      03235600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   03235700
&ZOPO(&ZOPN)          SETC 'DS'                                         03235800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   03235900
&ZOPD(&ZOPN)          SETC '++ IXLLSTM PARM LIST'                       03236000
.*-------------------------------------------------------------------   03236100
.***AM.L09  XSHL_DATA CL96                                              03236200
&ZOPN                 SETA &ZOPN+1                                      03236300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHL_DATA'                        03236400
&ZOPO(&ZOPN)          SETC 'DS'                                         03236500
&ZOPV(&ZOPN)          SETC 'CL96'                                       03236600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHL_DATA'                  03236700
.*-------------------------------------------------------------------   03236800
.***AM.L09  XMOB_DATA CL4                                               03236900
&ZOPN                 SETA &ZOPN+1                                      03237000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOB_DATA'                        03237100
&ZOPO(&ZOPN)          SETC 'DS'                                         03237200
&ZOPV(&ZOPN)          SETC 'CL4'                                        03237300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMOB_DATA'                  03237400
.*-------------------------------------------------------------------   03237500
.***AM.L09  XMCB_DATA1 CL112                                            03237600
&ZOPN                 SETA &ZOPN+1                                      03237700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA1'                       03237800
&ZOPO(&ZOPN)          SETC 'DS'                                         03237900
&ZOPV(&ZOPN)          SETC 'CL112'                                      03238000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA1'                 03238100
.*-------------------------------------------------------------------   03238200
.***AM.L09  XMCB_DATA2 CL20                                             03238300
&ZOPN                 SETA &ZOPN+1                                      03238400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA2'                       03238500
&ZOPO(&ZOPN)          SETC 'DS'                                         03238600
&ZOPV(&ZOPN)          SETC 'CL20'                                       03238700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA2'                 03238800
.*-------------------------------------------------------------------   03238900
.***AM.MLM2 SAVED LOCATION COUNTER                                      03239000
                      AIF  (&XPLISTVER GE 1).ZL5LA                      03239100
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  03239200
&ZENDBASEPL           SETC 'YES'                                        03239300
&ZOPN                 SETA &ZOPN+1                                      03239400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03239500
&ZOPO(&ZOPN)          SETC 'EQU'                                        03239600
&ZOPV(&ZOPN)          SETC '*'                                          03239700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       03239800
.ZL5LA                ANOP  ,                                           03239900
.*-------------------------------------------------------------------   03240000
.***AM.LVER1                                                            03240100
                      AIF  (&XPLISTVER LT 1).ZL5L                       03240200
.*-------------------------------------------------------------------   03240300
.*-------------------------------------------------------------------   03240400
.***AM.L09  XMCB_DATA3 CL44                                             03240500
&ZOPN                 SETA &ZOPN+1                                      03240600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA3'                       03240700
&ZOPO(&ZOPN)          SETC 'DS'                                         03240800
&ZOPV(&ZOPN)          SETC 'CL44'                                       03240900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA3'                 03241000
.*-------------------------------------------------------------------   03241100
.***AM.LVER2                                                            03241200
.ZL5L                 ANOP  ,                                           03241300
.*-------------------------------------------------------------------   03241400
.*-------------------------------------------------------------------   03241500
.***AM.MLM2 SAVED LOCATION COUNTER                                      03241600
                      AIF  (&XPLISTVER GE 4).ZL6LA                      03241700
                      AIF  ('&ZENDBASEPL' NE '').ZL6LA                  03241800
&ZENDBASEPL           SETC 'YES'                                        03241900
&ZOPN                 SETA &ZOPN+1                                      03242000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03242100
&ZOPO(&ZOPN)          SETC 'EQU'                                        03242200
&ZOPV(&ZOPN)          SETC '*'                                          03242300
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       03242400
.ZL6LA                ANOP  ,                                           03242500
.*-------------------------------------------------------------------   03242600
.***AM.LVER1                                                            03242700
                      AIF  (&XPLISTVER LT 4).ZL6L                       03242800
.*-------------------------------------------------------------------   03242900
.*-------------------------------------------------------------------   03243000
.***AM.L09  XMCB_DATA4 CL64                                             03243100
&ZOPN                 SETA &ZOPN+1                                      03243200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA4'                       03243300
&ZOPO(&ZOPN)          SETC 'DS'                                         03243400
&ZOPV(&ZOPN)          SETC 'CL64'                                       03243500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA4'                 03243600
.*-------------------------------------------------------------------   03243700
.***AM.LVER2                                                            03243800
.ZL6L                 ANOP  ,                                           03243900
.*-------------------------------------------------------------------   03244000
.*-------------------------------------------------------------------   03244100
.***AM.LVER1                                                            03244200
                      AIF  (&XPLISTVER LT 1).ZL7L                       03244300
.*-------------------------------------------------------------------   03244400
.*-------------------------------------------------------------------   03244500
.***AM.MLM1 SAVED LOCATION COUNTER                                      03244600
                      AIF  ('&ZENDBASEPL' NE '').ZL7LB                  03244700
&ZENDBASEPL           SETC 'YES'                                        03244800
&ZOPN                 SETA &ZOPN+1                                      03244900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03245000
&ZOPO(&ZOPN)          SETC 'EQU'                                        03245100
&ZOPV(&ZOPN)          SETC '*'                                          03245200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       03245300
.ZL7LB                ANOP  ,                                           03245400
.*-------------------------------------------------------------------   03245500
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       03245600
&ZOPN                 SETA &ZOPN+1                                      03245700
&ZOPL(&ZOPN)          SETC ' '                                          03245800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03245900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03246000
&ZOPD(&ZOPN)          SETC ' '                                          03246100
.*-------------------------------------------------------------------   03246200
.***AM.LVER2                                                            03246300
.ZL7L                 ANOP  ,                                           03246400
.*-------------------------------------------------------------------   03246500
.*-------------------------------------------------------------------   03246600
.***AM.LVER1                                                            03246700
                      AIF  (&XPLISTVER LT 1).ZL8L                       03246800
.*-------------------------------------------------------------------   03246900
.*-------------------------------------------------------------------   03247000
.***AM.L09  XMCB_DATA CL176                                             03247100
&ZOPN                 SETA &ZOPN+1                                      03247200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA'                        03247300
&ZOPO(&ZOPN)          SETC 'DS'                                         03247400
&ZOPV(&ZOPN)          SETC 'CL176'                                      03247500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA'                  03247600
.*-------------------------------------------------------------------   03247700
.***AM.LVER2                                                            03247800
.ZL8L                 ANOP  ,                                           03247900
.*-------------------------------------------------------------------   03248000
.*-------------------------------------------------------------------   03248100
.***AM.LVER1                                                            03248200
                      AIF  (&XPLISTVER LT 4).ZL9L                       03248300
.*-------------------------------------------------------------------   03248400
.*-------------------------------------------------------------------   03248500
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       03248600
&ZOPN                 SETA &ZOPN+1                                      03248700
&ZOPL(&ZOPN)          SETC ' '                                          03248800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03248900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03249000
&ZOPD(&ZOPN)          SETC ' '                                          03249100
.*-------------------------------------------------------------------   03249200
.***AM.LVER2                                                            03249300
.ZL9L                 ANOP  ,                                           03249400
.*-------------------------------------------------------------------   03249500
.*-------------------------------------------------------------------   03249600
.***AM.LVER1                                                            03249700
                      AIF  (&XPLISTVER LT 4).ZL10L                      03249800
.*-------------------------------------------------------------------   03249900
.*-------------------------------------------------------------------   03250000
.***AM.L09  XMCB_DATAL CL240                                            03250100
&ZOPN                 SETA &ZOPN+1                                      03250200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATAL'                       03250300
&ZOPO(&ZOPN)          SETC 'DS'                                         03250400
&ZOPV(&ZOPN)          SETC 'CL240'                                      03250500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATAL'                 03250600
.*-------------------------------------------------------------------   03250700
.***AM.LVER2                                                            03250800
.ZL10L                ANOP  ,                                           03250900
.*-------------------------------------------------------------------   03251000
.*-------------------------------------------------------------------   03251100
.***AM.PJR1 DEFINED ON XSHL_DATA                                        03251200
&ZOPN                 SETA &ZOPN+1                                      03251300
&ZOPL(&ZOPN)          SETC ' '                                          03251400
&ZOPO(&ZOPN)          SETC 'ORG'                                        03251500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+0'                                03251600
&ZOPD(&ZOPN)          SETC ' '                                          03251700
.*-------------------------------------------------------------------   03251800
.***AM.L02 XVERSION XL1                                                 03251900
&ZOPN                 SETA &ZOPN+1                                      03252000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         03252100
&ZOPO(&ZOPN)          SETC 'DS'                                         03252200
&ZOPV(&ZOPN)          SETC 'XL1'                                        03252300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          03252400
.*-------------------------------------------------------------------   03252500
.***AM.L09  XCMDCODE XL1                                                03252600
&ZOPN                 SETA &ZOPN+1                                      03252700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDCODE'                         03252800
&ZOPO(&ZOPN)          SETC 'DS'                                         03252900
&ZOPV(&ZOPN)          SETC 'XL1'                                        03253000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDCODE'                   03253100
.*-------------------------------------------------------------------   03253200
.***AM.L09  XSHLFLGS CL4                                                03253300
&ZOPN                 SETA &ZOPN+1                                      03253400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS'                         03253500
&ZOPO(&ZOPN)          SETC 'DS'                                         03253600
&ZOPV(&ZOPN)          SETC 'CL4'                                        03253700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHLFLGS'                   03253800
.*-------------------------------------------------------------------   03253900
.***AM.L09  XRSV0101 CL2                                                03254000
&ZOPN                 SETA &ZOPN+1                                      03254100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0101'                         03254200
&ZOPO(&ZOPN)          SETC 'DS'                                         03254300
&ZOPV(&ZOPN)          SETC 'CL2'                                        03254400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0101'                      03254500
.*-------------------------------------------------------------------   03254600
.***AM.L09  XCOMPCONID XL1                                              03254700
&ZOPN                 SETA &ZOPN+1                                      03254800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPCONID'                       03254900
&ZOPO(&ZOPN)          SETC 'DS'                                         03255000
&ZOPV(&ZOPN)          SETC 'XL1'                                        03255100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCOMPCONID'                 03255200
.*-------------------------------------------------------------------   03255300
.***AM.L09  XBUFSTGKEY BL.8                                             03255400
&ZOPN                 SETA &ZOPN+1                                      03255500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSTGKEY'                       03255600
&ZOPO(&ZOPN)          SETC 'DS'                                         03255700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03255800
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSTGKEY  XBUFSTGKEY'                03255900
.*-------------------------------------------------------------------   03256000
.***AM.L09  XANSLEN XL2                                                 03256100
&ZOPN                 SETA &ZOPN+1                                      03256200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          03256300
&ZOPO(&ZOPN)          SETC 'DS'                                         03256400
&ZOPV(&ZOPN)          SETC 'XL2'                                        03256500
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      03256600
.*-------------------------------------------------------------------   03256700
.***AM.L09  XCONTOKEN CL16                                              03256800
&ZOPN                 SETA &ZOPN+1                                      03256900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        03257000
&ZOPO(&ZOPN)          SETC 'DS'                                         03257100
&ZOPV(&ZOPN)          SETC 'CL16'                                       03257200
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN  XCONTOKEN'                  03257300
.*-------------------------------------------------------------------   03257400
.***AM.L09  XDATADDR CL12                                               03257500
&ZOPN                 SETA &ZOPN+1                                      03257600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADDR'                         03257700
&ZOPO(&ZOPN)          SETC 'DS'                                         03257800
&ZOPV(&ZOPN)          SETC 'CL12'                                       03257900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDATADDR'                   03258000
.*-------------------------------------------------------------------   03258100
.***AM.L09  XADJADDR CL8                                                03258200
&ZOPN                 SETA &ZOPN+1                                      03258300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJADDR'                         03258400
&ZOPO(&ZOPN)          SETC 'DS'                                         03258500
&ZOPV(&ZOPN)          SETC 'CL8'                                        03258600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XADJADDR'                   03258700
.*-------------------------------------------------------------------   03258800
.***AM.L09  XANSADDR CL8                                                03258900
&ZOPN                 SETA &ZOPN+1                                      03259000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSADDR'                         03259100
&ZOPO(&ZOPN)          SETC 'DS'                                         03259200
&ZOPV(&ZOPN)          SETC 'CL8'                                        03259300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XANSADDR'                   03259400
.*-------------------------------------------------------------------   03259500
.***AM.L09  XREQDATA CL8                                                03259600
&ZOPN                 SETA &ZOPN+1                                      03259700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQDATA'                         03259800
&ZOPO(&ZOPN)          SETC 'DS'                                         03259900
&ZOPV(&ZOPN)          SETC 'CL8'                                        03260000
&ZOPD(&ZOPN)          SETC '++ &ZXREQDATA  XREQDATA'                    03260100
.*-------------------------------------------------------------------   03260200
.***AM.L09  XREQID CL8                                                  03260300
&ZOPN                 SETA &ZOPN+1                                      03260400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQID'                           03260500
&ZOPO(&ZOPN)          SETC 'DS'                                         03260600
&ZOPV(&ZOPN)          SETC 'CL8'                                        03260700
&ZOPD(&ZOPN)          SETC '++ &ZXREQID  XREQID'                        03260800
.*-------------------------------------------------------------------   03260900
.***AM.L09  XOPTIONALDATA CL16                                          03261000
&ZOPN                 SETA &ZOPN+1                                      03261100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONALDATA'                    03261200
&ZOPO(&ZOPN)          SETC 'DS'                                         03261300
&ZOPV(&ZOPN)          SETC 'CL16'                                       03261400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOPTIONALDATA'              03261500
.*-------------------------------------------------------------------   03261600
.***AM.L09  XSHLFLGSA CL4                                               03261700
&ZOPN                 SETA &ZOPN+1                                      03261800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA'                        03261900
&ZOPO(&ZOPN)          SETC 'DS'                                         03262000
&ZOPV(&ZOPN)          SETC 'CL4'                                        03262100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHLFLGSA'                  03262200
.*-------------------------------------------------------------------   03262300
.***AM.L09  XRSV0102 CL4                                                03262400
&ZOPN                 SETA &ZOPN+1                                      03262500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0102'                         03262600
&ZOPO(&ZOPN)          SETC 'DS'                                         03262700
&ZOPV(&ZOPN)          SETC 'CL4'                                        03262800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0102'                      03262900
.*-------------------------------------------------------------------   03263000
.***AM.PJR1 DEFINED ON XSHLFLGS                                         03263100
&ZOPN                 SETA &ZOPN+1                                      03263200
&ZOPL(&ZOPN)          SETC ' '                                          03263300
&ZOPO(&ZOPN)          SETC 'ORG'                                        03263400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                03263500
&ZOPD(&ZOPN)          SETC ' '                                          03263600
.*-------------------------------------------------------------------   03263700
.***AM.L03 XSHLFLGS1 BL.8                                               03263800
&ZOPN                 SETA &ZOPN+1                                      03263900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS1'                        03264000
&ZOPO(&ZOPN)          SETC 'DS'                                         03264100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03264200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03264300
.*                                                                      03264400
&ZOPN                 SETA  &ZOPN+1                                     03264500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  03264600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03264700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03264800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03264900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       03265000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03265100
.*                                                                      03265200
&ZOPN                 SETA  &ZOPN+1                                     03265300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFLIST'                 03265400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03265500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03265600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03265700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFLIST'                      03265800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03265900
.*                                                                      03266000
&ZOPN                 SETA  &ZOPN+1                                     03266100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ADJAREA'                 03266200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03266300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03266400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03266500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJAREA'                      03266600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03266700
.*                                                                      03266800
&ZOPN                 SETA  &ZOPN+1                                     03266900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 03267000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03267100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03267200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03267300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      03267400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03267500
.*                                                                      03267600
&ZOPN                 SETA  &ZOPN+1                                     03267700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEABLE_NO'                    03267800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03267900
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03268000
&ZOPD(&ZOPN)          SETC  '++ XPAGEABLE.'                             03268100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           03268200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03268300
.*                                                                      03268400
&ZOPN                 SETA  &ZOPN+1                                     03268500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFSTGKEY'               03268600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03268700
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03268800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03268900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFSTGKEY'                    03269000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03269100
.*                                                                      03269200
&ZOPN                 SETA  &ZOPN+1                                     03269300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRTYPE_REAL'               03269400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03269500
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             03269600
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRTYPE.'                          03269700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REAL'                         03269800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03269900
.*                                                                      03270000
&ZOPN                 SETA  &ZOPN+1                                     03270100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTKEYAREA'             03270200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03270300
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03270400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03270500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEYAREA'                  03270600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03270700
.*-------------------------------------------------------------------   03270800
.***AM.L03 XSHLFLGS2 BL.8                                               03270900
&ZOPN                 SETA &ZOPN+1                                      03271000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS2'                        03271100
&ZOPO(&ZOPN)          SETC 'DS'                                         03271200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03271300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03271400
.*                                                                      03271500
&ZOPN                 SETA  &ZOPN+1                                     03271600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCECB'                   03271700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03271800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03271900
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03272000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCECB'                      03272100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03272200
.*                                                                      03272300
&ZOPN                 SETA  &ZOPN+1                                     03272400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  03272500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03272600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03272700
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03272800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     03272900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03273000
.*                                                                      03273100
&ZOPN                 SETA  &ZOPN+1                                     03273200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCTOKEN'                 03273300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03273400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03273500
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03273600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCTOKEN'                    03273700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03273800
.*                                                                      03273900
&ZOPN                 SETA  &ZOPN+1                                     03274000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCECB'                  03274100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03274200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03274300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03274400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCECB'                     03274500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03274600
.*                                                                      03274700
&ZOPN                 SETA  &ZOPN+1                                     03274800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCEXIT'                 03274900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03275000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03275100
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03275200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCEXIT'                    03275300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03275400
.*                                                                      03275500
&ZOPN                 SETA  &ZOPN+1                                     03275600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCTOKEN'                03275700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03275800
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03275900
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03276000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCTOKEN'                   03276100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03276200
.*                                                                      03276300
&ZOPN                 SETA  &ZOPN+1                                     03276400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCNORESPONSE'           03276500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03276600
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             03276700
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03276800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCNORESPONSE'              03276900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03277000
.*-------------------------------------------------------------------   03277100
.***AM.L03 XSHLFLGS3 BL.8                                               03277200
&ZOPN                 SETA &ZOPN+1                                      03277300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS3'                        03277400
&ZOPO(&ZOPN)          SETC 'DS'                                         03277500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03277600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03277700
.*                                                                      03277800
&ZOPN                 SETA  &ZOPN+1                                     03277900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_HELDBY'                03278000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03278100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03278200
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             03278300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HELDBY'                       03278400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03278500
.*                                                                      03278600
&ZOPN                 SETA  &ZOPN+1                                     03278700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LOCKCOMP'                03278800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03278900
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03279000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03279100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCKCOMP'                     03279200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03279300
.*-------------------------------------------------------------------   03279400
.***AM.L03 XSHLFLGS4 BL.8                                               03279500
&ZOPN                 SETA &ZOPN+1                                      03279600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS4'                        03279700
&ZOPO(&ZOPN)          SETC 'DS'                                         03279800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03279900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03280000
.*                                                                      03280100
&ZOPN                 SETA  &ZOPN+1                                     03280200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_EXTRESTOKEN'             03280300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03280400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03280500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03280600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXTRESTOKEN'                  03280700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03280800
.*                                                                      03280900
&ZOPN                 SETA  &ZOPN+1                                     03281000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRSIZE_64'                 03281100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03281200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03281300
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRSIZE.'                          03281400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           03281500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03281600
.*                                                                      03281700
&ZOPN                 SETA  &ZOPN+1                                     03281800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYREQASYNC'                   03281900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03282000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03282100
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03282200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LIST'                         03282300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03282400
.*-------------------------------------------------------------------   03282500
.***AM.PJR1 DEFINED ON XCONTOKEN                                        03282600
&ZOPN                 SETA &ZOPN+1                                      03282700
&ZOPL(&ZOPN)          SETC ' '                                          03282800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03282900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+12'                               03283000
&ZOPD(&ZOPN)          SETC ' '                                          03283100
.*-------------------------------------------------------------------   03283200
.***AM.L09  XRSV0201 CL13                                               03283300
&ZOPN                 SETA &ZOPN+1                                      03283400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0201'                         03283500
&ZOPO(&ZOPN)          SETC 'DS'                                         03283600
&ZOPV(&ZOPN)          SETC 'CL13'                                       03283700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0201'                      03283800
.*-------------------------------------------------------------------   03283900
.***AM.L09  XCONID XL1                                                  03284000
&ZOPN                 SETA &ZOPN+1                                      03284100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           03284200
&ZOPO(&ZOPN)          SETC 'DS'                                         03284300
&ZOPV(&ZOPN)          SETC 'XL1'                                        03284400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCONID'                     03284500
.*-------------------------------------------------------------------   03284600
.***AM.L09  XRSV0202 CL2                                                03284700
&ZOPN                 SETA &ZOPN+1                                      03284800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0202'                         03284900
&ZOPO(&ZOPN)          SETC 'DS'                                         03285000
&ZOPV(&ZOPN)          SETC 'CL2'                                        03285100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0202'                      03285200
.*-------------------------------------------------------------------   03285300
.***AM.PJR1 DEFINED ON XDATADDR                                         03285400
&ZOPN                 SETA &ZOPN+1                                      03285500
&ZOPL(&ZOPN)          SETC ' '                                          03285600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03285700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               03285800
&ZOPD(&ZOPN)          SETC ' '                                          03285900
.*-------------------------------------------------------------------   03286000
.***AM.L09 ALET XBUFFER F                                               03286100
&ZOPN                 SETA &ZOPN+1                                      03286200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     03286300
&ZOPO(&ZOPN)          SETC 'DS'                                         03286400
&ZOPV(&ZOPN)          SETC 'F'                                          03286500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET XBUFFER'                  03286600
.*-------------------------------------------------------------------   03286700
.***AM.L09  XBUFSIZE F                                                  03286800
&ZOPN                 SETA &ZOPN+1                                      03286900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         03287000
&ZOPO(&ZOPN)          SETC 'DS'                                         03287100
&ZOPV(&ZOPN)          SETC 'F'                                          03287200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE  XBUFSIZE'                    03287300
.*-------------------------------------------------------------------   03287400
.***AM.L09  XBUFFER A                                                   03287500
&ZOPN                 SETA &ZOPN+1                                      03287600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER'                          03287700
&ZOPO(&ZOPN)          SETC 'DS'                                         03287800
&ZOPV(&ZOPN)          SETC 'A'                                          03287900
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER  XBUFFER'                      03288000
.*-------------------------------------------------------------------   03288100
.***AM.PJR1 DEFINED ON XDATADDR                                         03288200
&ZOPN                 SETA &ZOPN+1                                      03288300
&ZOPL(&ZOPN)          SETC ' '                                          03288400
&ZOPO(&ZOPN)          SETC 'ORG'                                        03288500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               03288600
&ZOPD(&ZOPN)          SETC ' '                                          03288700
.*-------------------------------------------------------------------   03288800
.***AM.L09  XBUFALET F                                                  03288900
&ZOPN                 SETA &ZOPN+1                                      03289000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFALET'                         03289100
&ZOPO(&ZOPN)          SETC 'DS'                                         03289200
&ZOPV(&ZOPN)          SETC 'F'                                          03289300
&ZOPD(&ZOPN)          SETC '++ &ZXBUFALET  XBUFALET'                    03289400
.*-------------------------------------------------------------------   03289500
.***AM.L09 ALET XBUFLIST F                                              03289600
&ZOPN                 SETA &ZOPN+1                                      03289700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST_ALET'                    03289800
&ZOPO(&ZOPN)          SETC 'DS'                                         03289900
&ZOPV(&ZOPN)          SETC 'F'                                          03290000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST ALET XBUFLIST'                03290100
.*-------------------------------------------------------------------   03290200
.***AM.L09  XBUFLIST A                                                  03290300
&ZOPN                 SETA &ZOPN+1                                      03290400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         03290500
&ZOPO(&ZOPN)          SETC 'DS'                                         03290600
&ZOPV(&ZOPN)          SETC 'A'                                          03290700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST  XBUFLIST'                    03290800
.*-------------------------------------------------------------------   03290900
.***AM.PJR1 DEFINED ON XADJADDR                                         03291000
&ZOPN                 SETA &ZOPN+1                                      03291100
&ZOPL(&ZOPN)          SETC ' '                                          03291200
&ZOPO(&ZOPN)          SETC 'ORG'                                        03291300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               03291400
&ZOPD(&ZOPN)          SETC ' '                                          03291500
.*-------------------------------------------------------------------   03291600
.***AM.L09 ALET XADJAREA F                                              03291700
&ZOPN                 SETA &ZOPN+1                                      03291800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA_ALET'                    03291900
&ZOPO(&ZOPN)          SETC 'DS'                                         03292000
&ZOPV(&ZOPN)          SETC 'F'                                          03292100
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA ALET XADJAREA'                03292200
.*-------------------------------------------------------------------   03292300
.***AM.L09  XADJAREA A                                                  03292400
&ZOPN                 SETA &ZOPN+1                                      03292500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA'                         03292600
&ZOPO(&ZOPN)          SETC 'DS'                                         03292700
&ZOPV(&ZOPN)          SETC 'A'                                          03292800
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA  XADJAREA'                    03292900
.*-------------------------------------------------------------------   03293000
.***AM.PJR1 DEFINED ON XANSADDR                                         03293100
&ZOPN                 SETA &ZOPN+1                                      03293200
&ZOPL(&ZOPN)          SETC ' '                                          03293300
&ZOPO(&ZOPN)          SETC 'ORG'                                        03293400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               03293500
&ZOPD(&ZOPN)          SETC ' '                                          03293600
.*-------------------------------------------------------------------   03293700
.***AM.L09 ALET XANSAREA F                                              03293800
&ZOPN                 SETA &ZOPN+1                                      03293900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    03294000
&ZOPO(&ZOPN)          SETC 'DS'                                         03294100
&ZOPV(&ZOPN)          SETC 'F'                                          03294200
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET XANSAREA'                03294300
.*-------------------------------------------------------------------   03294400
.***AM.L09  XANSAREA A                                                  03294500
&ZOPN                 SETA &ZOPN+1                                      03294600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA'                         03294700
&ZOPO(&ZOPN)          SETC 'DS'                                         03294800
&ZOPV(&ZOPN)          SETC 'A'                                          03294900
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA  XANSAREA'                    03295000
.*-------------------------------------------------------------------   03295100
.***AM.PJR1 DEFINED ON XREQDATA                                         03295200
&ZOPN                 SETA &ZOPN+1                                      03295300
&ZOPL(&ZOPN)          SETC ' '                                          03295400
&ZOPO(&ZOPN)          SETC 'ORG'                                        03295500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               03295600
&ZOPD(&ZOPN)          SETC ' '                                          03295700
.*-------------------------------------------------------------------   03295800
.***AM.L09  XREQECB A                                                   03295900
&ZOPN                 SETA &ZOPN+1                                      03296000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQECB'                          03296100
&ZOPO(&ZOPN)          SETC 'DS'                                         03296200
&ZOPV(&ZOPN)          SETC 'A'                                          03296300
&ZOPD(&ZOPN)          SETC '++ &ZXREQECB  XREQECB'                      03296400
.*-------------------------------------------------------------------   03296500
.***AM.L09  XRSV0203 CL4                                                03296600
&ZOPN                 SETA &ZOPN+1                                      03296700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0203'                         03296800
&ZOPO(&ZOPN)          SETC 'DS'                                         03296900
&ZOPV(&ZOPN)          SETC 'CL4'                                        03297000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0203'                      03297100
.*-------------------------------------------------------------------   03297200
.***AM.PJR1 DEFINED ON XREQDATA                                         03297300
&ZOPN                 SETA &ZOPN+1                                      03297400
&ZOPL(&ZOPN)          SETC ' '                                          03297500
&ZOPO(&ZOPN)          SETC 'ORG'                                        03297600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               03297700
&ZOPD(&ZOPN)          SETC ' '                                          03297800
.*-------------------------------------------------------------------   03297900
.***AM.L09 ALET XREQTOKEN F                                             03298000
&ZOPN                 SETA &ZOPN+1                                      03298100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN_ALET'                   03298200
&ZOPO(&ZOPN)          SETC 'DS'                                         03298300
&ZOPV(&ZOPN)          SETC 'F'                                          03298400
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN ALET XREQTOKEN'              03298500
.*-------------------------------------------------------------------   03298600
.***AM.L09  XREQTOKEN A                                                 03298700
&ZOPN                 SETA &ZOPN+1                                      03298800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        03298900
&ZOPO(&ZOPN)          SETC 'DS'                                         03299000
&ZOPV(&ZOPN)          SETC 'A'                                          03299100
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN  XREQTOKEN'                  03299200
.*-------------------------------------------------------------------   03299300
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    03299400
&ZOPN                 SETA &ZOPN+1                                      03299500
&ZOPL(&ZOPN)          SETC ' '                                          03299600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03299700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03299800
&ZOPD(&ZOPN)          SETC ' '                                          03299900
.*-------------------------------------------------------------------   03300000
.***AM.L09 ALET XLISTKEYAREA F                                          03300100
&ZOPN                 SETA &ZOPN+1                                      03300200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYAREA_ALET'                03300300
&ZOPO(&ZOPN)          SETC 'DS'                                         03300400
&ZOPV(&ZOPN)          SETC 'F'                                          03300500
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEYAREA ALET XLISTKEYAREA'        03300600
.*-------------------------------------------------------------------   03300700
.***AM.L09  XLISTKEYAREA A                                              03300800
&ZOPN                 SETA &ZOPN+1                                      03300900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYAREA'                     03301000
&ZOPO(&ZOPN)          SETC 'DS'                                         03301100
&ZOPV(&ZOPN)          SETC 'A'                                          03301200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEYAREA  XLISTKEYAREA'            03301300
.*-------------------------------------------------------------------   03301400
.***AM.PJR1 DEFINED ON XSHLFLGSA                                        03301500
&ZOPN                 SETA &ZOPN+1                                      03301600
&ZOPL(&ZOPN)          SETC ' '                                          03301700
&ZOPO(&ZOPN)          SETC 'ORG'                                        03301800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               03301900
&ZOPD(&ZOPN)          SETC ' '                                          03302000
.*-------------------------------------------------------------------   03302100
.***AM.L03 XSHLFLGSA1 BL.8                                              03302200
&ZOPN                 SETA &ZOPN+1                                      03302300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA1'                       03302400
&ZOPO(&ZOPN)          SETC 'DS'                                         03302500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03302600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03302700
.*                                                                      03302800
&ZOPN                 SETA  &ZOPN+1                                     03302900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTC'                 03303000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03303100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03303200
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03303300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTC'                      03303400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03303500
.*                                                                      03303600
&ZOPN                 SETA  &ZOPN+1                                     03303700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTE'                 03303800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03303900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03304000
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03304100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTE'                      03304200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03304300
.*                                                                      03304400
&ZOPN                 SETA  &ZOPN+1                                     03304500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTM'                 03304600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03304700
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03304800
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03304900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTM'                      03305000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03305100
.*-------------------------------------------------------------------   03305200
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    03305300
&ZOPN                 SETA &ZOPN+1                                      03305400
&ZOPL(&ZOPN)          SETC ' '                                          03305500
&ZOPO(&ZOPN)          SETC 'ORG'                                        03305600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03305700
&ZOPD(&ZOPN)          SETC ' '                                          03305800
.*-------------------------------------------------------------------   03305900
.***AM.L09  XLISTKEYADDR CL8                                            03306000
&ZOPN                 SETA &ZOPN+1                                      03306100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYADDR'                     03306200
&ZOPO(&ZOPN)          SETC 'DS'                                         03306300
&ZOPV(&ZOPN)          SETC 'CL8'                                        03306400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XLISTKEYADDR'               03306500
.*-------------------------------------------------------------------   03306600
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    03306700
&ZOPN                 SETA &ZOPN+1                                      03306800
&ZOPL(&ZOPN)          SETC ' '                                          03306900
&ZOPO(&ZOPN)          SETC 'ORG'                                        03307000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03307100
&ZOPD(&ZOPN)          SETC ' '                                          03307200
.*-------------------------------------------------------------------   03307300
.***AM.L09  XEXTRESTOKEN CL16                                           03307400
&ZOPN                 SETA &ZOPN+1                                      03307500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKEN'                     03307600
&ZOPO(&ZOPN)          SETC 'DS'                                         03307700
&ZOPV(&ZOPN)          SETC 'CL16'                                       03307800
&ZOPD(&ZOPN)          SETC '++ &ZXEXTRESTOKEN  XEXTRESTOKEN'            03307900
.*-------------------------------------------------------------------   03308000
.***AM.PJR1 DEFINED ON XEXTRESTOKEN                                     03308100
&ZOPN                 SETA &ZOPN+1                                      03308200
&ZOPL(&ZOPN)          SETC ' '                                          03308300
&ZOPO(&ZOPN)          SETC 'ORG'                                        03308400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03308500
&ZOPD(&ZOPN)          SETC ' '                                          03308600
.*-------------------------------------------------------------------   03308700
.***AM.L09  XEXTRESTOKENTKN CL8                                         03308800
&ZOPN                 SETA &ZOPN+1                                      03308900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENTKN'                  03309000
&ZOPO(&ZOPN)          SETC 'DS'                                         03309100
&ZOPV(&ZOPN)          SETC 'CL8'                                        03309200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XEXTRESTOKENTKN'            03309300
.*-------------------------------------------------------------------   03309400
.***AM.L09  XEXTRESTOKENPSVN CL8                                        03309500
&ZOPN                 SETA &ZOPN+1                                      03309600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENPSVN'                 03309700
&ZOPO(&ZOPN)          SETC 'DS'                                         03309800
&ZOPV(&ZOPN)          SETC 'CL8'                                        03309900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XEXTRESTOKENPSVN'           03310000
.*-------------------------------------------------------------------   03310100
.***AM.PJR1 DEFINED ON XMOB_DATA                                        03310200
&ZOPN                 SETA &ZOPN+1                                      03310300
&ZOPL(&ZOPN)          SETC ' '                                          03310400
&ZOPO(&ZOPN)          SETC 'ORG'                                        03310500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               03310600
&ZOPD(&ZOPN)          SETC ' '                                          03310700
.*-------------------------------------------------------------------   03310800
.***AM.L09  XCMDLEN XL2                                                 03310900
&ZOPN                 SETA &ZOPN+1                                      03311000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDLEN'                          03311100
&ZOPO(&ZOPN)          SETC 'DS'                                         03311200
&ZOPV(&ZOPN)          SETC 'XL2'                                        03311300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDLEN'                    03311400
.*-------------------------------------------------------------------   03311500
.***AM.L09  XBUFNUM XL1                                                 03311600
&ZOPN                 SETA &ZOPN+1                                      03311700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          03311800
&ZOPO(&ZOPN)          SETC 'DS'                                         03311900
&ZOPV(&ZOPN)          SETC 'XL1'                                        03312000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM  XBUFNUM'                      03312100
.*-------------------------------------------------------------------   03312200
.***AM.L09  XBUFINCRNUM XL1                                             03312300
&ZOPN                 SETA &ZOPN+1                                      03312400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFINCRNUM'                      03312500
&ZOPO(&ZOPN)          SETC 'DS'                                         03312600
&ZOPV(&ZOPN)          SETC 'XL1'                                        03312700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFINCRNUM  XBUFINCRNUM'              03312800
.*-------------------------------------------------------------------   03312900
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       03313000
&ZOPN                 SETA &ZOPN+1                                      03313100
&ZOPL(&ZOPN)          SETC ' '                                          03313200
&ZOPO(&ZOPN)          SETC 'ORG'                                        03313300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03313400
&ZOPD(&ZOPN)          SETC ' '                                          03313500
.*-------------------------------------------------------------------   03313600
.***AM.L09  XCCA CL1                                                    03313700
&ZOPN                 SETA &ZOPN+1                                      03313800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCA'                             03313900
&ZOPO(&ZOPN)          SETC 'DS'                                         03314000
&ZOPV(&ZOPN)          SETC 'CL1'                                        03314100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCCA'                       03314200
.*-------------------------------------------------------------------   03314300
.***AM.L09  XCCB CL1                                                    03314400
&ZOPN                 SETA &ZOPN+1                                      03314500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCB'                             03314600
&ZOPO(&ZOPN)          SETC 'DS'                                         03314700
&ZOPV(&ZOPN)          SETC 'CL1'                                        03314800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCCB'                       03314900
.*-------------------------------------------------------------------   03315000
.***AM.L09  XRSV0501 CL2                                                03315100
&ZOPN                 SETA &ZOPN+1                                      03315200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0501'                         03315300
&ZOPO(&ZOPN)          SETC 'DS'                                         03315400
&ZOPV(&ZOPN)          SETC 'CL2'                                        03315500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0501'                      03315600
.*-------------------------------------------------------------------   03315700
.***AM.L09  XCMDFLGS1 BL.32                                             03315800
&ZOPN                 SETA &ZOPN+1                                      03315900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1'                        03316000
&ZOPO(&ZOPN)          SETC 'DS'                                         03316100
&ZOPV(&ZOPN)          SETC 'BL.32'                                      03316200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLGS1'                  03316300
.*-------------------------------------------------------------------   03316400
.***AM.L09  XRSV0502 CL3                                                03316500
&ZOPN                 SETA &ZOPN+1                                      03316600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0502'                         03316700
&ZOPO(&ZOPN)          SETC 'DS'                                         03316800
&ZOPV(&ZOPN)          SETC 'CL3'                                        03316900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0502'                      03317000
.*-------------------------------------------------------------------   03317100
.***AM.L09  XCGLM CL1                                                   03317200
&ZOPN                 SETA &ZOPN+1                                      03317300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCGLM'                            03317400
&ZOPO(&ZOPN)          SETC 'DS'                                         03317500
&ZOPV(&ZOPN)          SETC 'CL1'                                        03317600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCGLM'                      03317700
.*-------------------------------------------------------------------   03317800
.***AM.L09  XLOCKINDEX F                                                03317900
&ZOPN                 SETA &ZOPN+1                                      03318000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKINDEX'                       03318100
&ZOPO(&ZOPN)          SETC 'DS'                                         03318200
&ZOPV(&ZOPN)          SETC 'F'                                          03318300
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKINDEX  XLOCKINDEX'                03318400
.*-------------------------------------------------------------------   03318500
.***AM.L09  XLISTNUM F                                                  03318600
&ZOPN                 SETA &ZOPN+1                                      03318700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUM'                         03318800
&ZOPO(&ZOPN)          SETC 'DS'                                         03318900
&ZOPV(&ZOPN)          SETC 'F'                                          03319000
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUM  XLISTNUM'                    03319100
.*-------------------------------------------------------------------   03319200
.***AM.L09  XENTRYID CL12                                               03319300
&ZOPN                 SETA &ZOPN+1                                      03319400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYID'                         03319500
&ZOPO(&ZOPN)          SETC 'DS'                                         03319600
&ZOPV(&ZOPN)          SETC 'CL12'                                       03319700
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYID  XENTRYID'                    03319800
.*-------------------------------------------------------------------   03319900
.***AM.L09  XRSV0503 CL8                                                03320000
&ZOPN                 SETA &ZOPN+1                                      03320100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0503'                         03320200
&ZOPO(&ZOPN)          SETC 'DS'                                         03320300
&ZOPV(&ZOPN)          SETC 'CL8'                                        03320400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0503'                      03320500
.*-------------------------------------------------------------------   03320600
.***AM.L09  XVERSCOMP CL8                                               03320700
&ZOPN                 SETA &ZOPN+1                                      03320800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP'                        03320900
&ZOPO(&ZOPN)          SETC 'DS'                                         03321000
&ZOPV(&ZOPN)          SETC 'CL8'                                        03321100
&ZOPD(&ZOPN)          SETC '++ &ZXVERSCOMP  XVERSCOMP'                  03321200
.*-------------------------------------------------------------------   03321300
.***AM.L09  XCOMPDATA1 CL16                                             03321400
&ZOPN                 SETA &ZOPN+1                                      03321500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPDATA1'                       03321600
&ZOPO(&ZOPN)          SETC 'DS'                                         03321700
&ZOPV(&ZOPN)          SETC 'CL16'                                       03321800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCOMPDATA1'                 03321900
.*-------------------------------------------------------------------   03322000
.***AM.L09  XCOMPDATA2 CL8                                              03322100
&ZOPN                 SETA &ZOPN+1                                      03322200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPDATA2'                       03322300
&ZOPO(&ZOPN)          SETC 'DS'                                         03322400
&ZOPV(&ZOPN)          SETC 'CL8'                                        03322500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCOMPDATA2'                 03322600
.*-------------------------------------------------------------------   03322700
.***AM.L09  XRSV0504 CL4                                                03322800
&ZOPN                 SETA &ZOPN+1                                      03322900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0504'                         03323000
&ZOPO(&ZOPN)          SETC 'DS'                                         03323100
&ZOPV(&ZOPN)          SETC 'CL4'                                        03323200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0504'                      03323300
.*-------------------------------------------------------------------   03323400
.***AM.L09  XCMDFLGS2 BL.32                                             03323500
&ZOPN                 SETA &ZOPN+1                                      03323600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS2'                        03323700
&ZOPO(&ZOPN)          SETC 'DS'                                         03323800
&ZOPV(&ZOPN)          SETC 'BL.32'                                      03323900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDFLGS2'                  03324000
.*-------------------------------------------------------------------   03324100
.***AM.L09  XUID1 CL1                                                   03324200
&ZOPN                 SETA &ZOPN+1                                      03324300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID1'                            03324400
&ZOPO(&ZOPN)          SETC 'DS'                                         03324500
&ZOPV(&ZOPN)          SETC 'CL1'                                        03324600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUID1'                      03324700
.*-------------------------------------------------------------------   03324800
.***AM.L09  XRSV0505 CL15                                               03324900
&ZOPN                 SETA &ZOPN+1                                      03325000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0505'                         03325100
&ZOPO(&ZOPN)          SETC 'DS'                                         03325200
&ZOPV(&ZOPN)          SETC 'CL15'                                       03325300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0505'                      03325400
.*-------------------------------------------------------------------   03325500
.***AM.L09  XKEYRANGEEND CL16                                           03325600
&ZOPN                 SETA &ZOPN+1                                      03325700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYRANGEEND'                     03325800
&ZOPO(&ZOPN)          SETC 'DS'                                         03325900
&ZOPV(&ZOPN)          SETC 'CL16'                                       03326000
&ZOPD(&ZOPN)          SETC '++ &ZXKEYRANGEEND  XKEYRANGEEND'            03326100
.*-------------------------------------------------------------------   03326200
.***AM.PJR1 DEFINED ON XCMDFLGS1                                        03326300
&ZOPN                 SETA &ZOPN+1                                      03326400
&ZOPL(&ZOPN)          SETC ' '                                          03326500
&ZOPO(&ZOPN)          SETC 'ORG'                                        03326600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              03326700
&ZOPD(&ZOPN)          SETC ' '                                          03326800
.*-------------------------------------------------------------------   03326900
.***AM.L09  XDBS BL.8                                                   03327000
&ZOPN                 SETA &ZOPN+1                                      03327100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS'                             03327200
&ZOPO(&ZOPN)          SETC 'DS'                                         03327300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03327400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDBS'                       03327500
.*-------------------------------------------------------------------   03327600
.***AM.L03 XCMDFLGS1B BL.8                                              03327700
&ZOPN                 SETA &ZOPN+1                                      03327800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1B'                       03327900
&ZOPO(&ZOPN)          SETC 'DS'                                         03328000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03328100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03328200
.*                                                                      03328300
&ZOPN                 SETA  &ZOPN+1                                     03328400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYCOMPARE_YES'                 03328500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03328600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03328700
&ZOPD(&ZOPN)          SETC  '++ XKEYCOMPARE.'                           03328800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03328900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03329000
.*                                                                      03329100
&ZOPN                 SETA  &ZOPN+1                                     03329200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVERSCOMPTYPE_LESSOREQUAL'       03329300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03329400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03329500
&ZOPD(&ZOPN)          SETC  '++ XVERSCOMPTYPE.'                         03329600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03329700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03329800
.*                                                                      03329900
&ZOPN                 SETA  &ZOPN+1                                     03330000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYREQTYPE_GREATEROREQUAL'      03330100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03330200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             03330300
&ZOPD(&ZOPN)          SETC  '++ XKEYREQTYPE.'                           03330400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GREATEROREQUAL'               03330500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03330600
.*                                                                      03330700
&ZOPN                 SETA  &ZOPN+1                                     03330800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYREQTYPE_LESSOREQUAL'         03330900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03331000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03331100
&ZOPD(&ZOPN)          SETC  '++ XKEYREQTYPE.'                           03331200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03331300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03331400
.*-------------------------------------------------------------------   03331500
.***AM.L03 XCMDFLGS1C BL.8                                              03331600
&ZOPN                 SETA &ZOPN+1                                      03331700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1C'                       03331800
&ZOPO(&ZOPN)          SETC 'DS'                                         03331900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03332000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03332100
.*                                                                      03332200
&ZOPN                 SETA  &ZOPN+1                                     03332300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDIRECTION_TAILTOHEAD'           03332400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03332500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03332600
&ZOPD(&ZOPN)          SETC  '++ XDIRECTION.'                            03332700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TAILTOHEAD'                   03332800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03332900
.*                                                                      03333000
&ZOPN                 SETA  &ZOPN+1                                     03333100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVERSCOMPARE_BYENTRY'            03333200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03333300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03333400
&ZOPD(&ZOPN)          SETC  '++ XVERSCOMPARE.'                          03333500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BYENTRY'                      03333600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03333700
.*                                                                      03333800
&ZOPN                 SETA  &ZOPN+1                                     03333900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMISCOMPARE_HALT'                03334000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03334100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03334200
&ZOPD(&ZOPN)          SETC  '++ XMISCOMPARE.'                           03334300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HALT'                         03334400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03334500
.*                                                                      03334600
&ZOPN                 SETA  &ZOPN+1                                     03334700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTTYPE_NAMELIST'              03334800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03334900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03335000
&ZOPD(&ZOPN)          SETC  '++ XLISTTYPE.'                             03335100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NAMELIST'                     03335200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03335300
.*                                                                      03335400
&ZOPN                 SETA  &ZOPN+1                                     03335500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTCOMPARE_YES'                03335600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03335700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03335800
&ZOPD(&ZOPN)          SETC  '++ XLISTCOMPARE.'                          03335900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03336000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03336100
.*                                                                      03336200
&ZOPN                 SETA  &ZOPN+1                                     03336300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVERSCOMPARE_YES'                03336400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03336500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03336600
&ZOPD(&ZOPN)          SETC  '++ XVERSCOMPARE.'                          03336700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03336800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03336900
.*-------------------------------------------------------------------   03337000
.***AM.PJR1 DEFINED ON XCMDFLGS1C                                       03337100
&ZOPN                 SETA &ZOPN+1                                      03337200
&ZOPL(&ZOPN)          SETC ' '                                          03337300
&ZOPO(&ZOPN)          SETC 'ORG'                                        03337400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              03337500
&ZOPD(&ZOPN)          SETC ' '                                          03337600
.*-------------------------------------------------------------------   03337700
.***AM.L03 XCMDFLGS1C1 BL.8                                             03337800
&ZOPN                 SETA &ZOPN+1                                      03337900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1C1'                      03338000
&ZOPO(&ZOPN)          SETC 'DS'                                         03338100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03338200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03338300
.*                                                                      03338400
&ZOPN                 SETA  &ZOPN+1                                     03338500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCATOR_CURSOR'                 03338600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03338700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03338800
&ZOPD(&ZOPN)          SETC  '++ XLOCATOR.'                              03338900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CURSOR'                       03339000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03339100
.*                                                                      03339200
&ZOPN                 SETA  &ZOPN+1                                     03339300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCATOR_ENTRYID'                03339400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03339500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03339600
&ZOPD(&ZOPN)          SETC  '++ XLOCATOR.'                              03339700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYID'                      03339800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03339900
.*                                                                      03340000
&ZOPN                 SETA  &ZOPN+1                                     03340100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCATOR_KEYPOS'                 03340200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03340300
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03340400
&ZOPD(&ZOPN)          SETC  '++ XLOCATOR.'                              03340500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEYPOS'                       03340600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03340700
.*-------------------------------------------------------------------   03340800
.***AM.L03 XCMDFLGS1D BL.8                                              03340900
&ZOPN                 SETA &ZOPN+1                                      03341000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1D'                       03341100
&ZOPO(&ZOPN)          SETC 'DS'                                         03341200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03341300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03341400
.*                                                                      03341500
&ZOPN                 SETA  &ZOPN+1                                     03341600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMOVETOSKEY_TARGETKEY'           03341700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03341800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03341900
&ZOPD(&ZOPN)          SETC  '++ XMOVETOSKEY.'                           03342000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TARGETKEY'                    03342100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03342200
.*                                                                      03342300
&ZOPN                 SETA  &ZOPN+1                                     03342400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMOVETOKEY_TARGETKEY'            03342500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03342600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03342700
&ZOPD(&ZOPN)          SETC  '++ XMOVETOKEY.'                            03342800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TARGETKEY'                    03342900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03343000
.*                                                                      03343100
&ZOPN                 SETA  &ZOPN+1                                     03343200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ECONTROLS'                 03343300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03343400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03343500
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 03343600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECONTROLS'                    03343700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03343800
.*                                                                      03343900
&ZOPN                 SETA  &ZOPN+1                                     03344000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ENTDATA'                   03344100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03344200
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03344300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 03344400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTDATA'                      03344500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03344600
.*                                                                      03344700
&ZOPN                 SETA  &ZOPN+1                                     03344800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ADJDATA'                   03344900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03345000
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03345100
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 03345200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJDATA'                      03345300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03345400
.*-------------------------------------------------------------------   03345500
.***AM.PJR1 DEFINED ON XCOMPDATA1                                       03345600
&ZOPN                 SETA &ZOPN+1                                      03345700
&ZOPL(&ZOPN)          SETC ' '                                          03345800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03345900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              03346000
&ZOPD(&ZOPN)          SETC ' '                                          03346100
.*-------------------------------------------------------------------   03346200
.***AM.L09  XENTRYNAME CL16                                             03346300
&ZOPN                 SETA &ZOPN+1                                      03346400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYNAME'                       03346500
&ZOPO(&ZOPN)          SETC 'DS'                                         03346600
&ZOPV(&ZOPN)          SETC 'CL16'                                       03346700
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYNAME  XENTRYNAME'                03346800
.*-------------------------------------------------------------------   03346900
.***AM.PJR1 DEFINED ON XCOMPDATA1                                       03347000
&ZOPN                 SETA &ZOPN+1                                      03347100
&ZOPL(&ZOPN)          SETC ' '                                          03347200
&ZOPO(&ZOPN)          SETC 'ORG'                                        03347300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              03347400
&ZOPD(&ZOPN)          SETC ' '                                          03347500
.*-------------------------------------------------------------------   03347600
.***AM.L09  XENTRYKEY CL16                                              03347700
&ZOPN                 SETA &ZOPN+1                                      03347800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEY'                        03347900
&ZOPO(&ZOPN)          SETC 'DS'                                         03348000
&ZOPV(&ZOPN)          SETC 'CL16'                                       03348100
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYKEY  XENTRYKEY'                  03348200
.*-------------------------------------------------------------------   03348300
.***AM.PJR1 DEFINED ON XCOMPDATA2                                       03348400
&ZOPN                 SETA &ZOPN+1                                      03348500
&ZOPL(&ZOPN)          SETC ' '                                          03348600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03348700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+164'                              03348800
&ZOPD(&ZOPN)          SETC ' '                                          03348900
.*-------------------------------------------------------------------   03349000
.***AM.L09  XFIRSTELEM XL2                                              03349100
&ZOPN                 SETA &ZOPN+1                                      03349200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFIRSTELEM'                       03349300
&ZOPO(&ZOPN)          SETC 'DS'                                         03349400
&ZOPV(&ZOPN)          SETC 'XL2'                                        03349500
&ZOPD(&ZOPN)          SETC '++ &ZXFIRSTELEM  XFIRSTELEM'                03349600
.*-------------------------------------------------------------------   03349700
.***AM.L09  XLASTELEM XL2                                               03349800
&ZOPN                 SETA &ZOPN+1                                      03349900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLASTELEM'                        03350000
&ZOPO(&ZOPN)          SETC 'DS'                                         03350100
&ZOPV(&ZOPN)          SETC 'XL2'                                        03350200
&ZOPD(&ZOPN)          SETC '++ &ZXLASTELEM  XLASTELEM'                  03350300
.*-------------------------------------------------------------------   03350400
.***AM.PJR1 DEFINED ON XCOMPDATA2                                       03350500
&ZOPN                 SETA &ZOPN+1                                      03350600
&ZOPL(&ZOPN)          SETC ' '                                          03350700
&ZOPO(&ZOPN)          SETC 'ORG'                                        03350800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+164'                              03350900
&ZOPD(&ZOPN)          SETC ' '                                          03351000
.*-------------------------------------------------------------------   03351100
.***AM.L09  XRESTOKEN CL8                                               03351200
&ZOPN                 SETA &ZOPN+1                                      03351300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTOKEN'                        03351400
&ZOPO(&ZOPN)          SETC 'DS'                                         03351500
&ZOPV(&ZOPN)          SETC 'CL8'                                        03351600
&ZOPD(&ZOPN)          SETC '++ &ZXRESTOKEN  XRESTOKEN'                  03351700
.*-------------------------------------------------------------------   03351800
.***AM.PJR1 DEFINED ON XCMDFLGS2                                        03351900
&ZOPN                 SETA &ZOPN+1                                      03352000
&ZOPL(&ZOPN)          SETC ' '                                          03352100
&ZOPO(&ZOPN)          SETC 'ORG'                                        03352200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+176'                              03352300
&ZOPD(&ZOPN)          SETC ' '                                          03352400
.*-------------------------------------------------------------------   03352500
.***AM.L03 XCMDFLGS2A BL.8                                              03352600
&ZOPN                 SETA &ZOPN+1                                      03352700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS2A'                       03352800
&ZOPO(&ZOPN)          SETC 'DS'                                         03352900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03353000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03353100
.*                                                                      03353200
&ZOPN                 SETA  &ZOPN+1                                     03353300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMOVETOKEY_LISTKEY'              03353400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03353500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03353600
&ZOPD(&ZOPN)          SETC  '++ XMOVETOKEY.'                            03353700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEY'                      03353800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03353900
.*                                                                      03354000
&ZOPN                 SETA  &ZOPN+1                                     03354100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTKEYINC'              03354200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03354300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03354400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03354500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEYINC'                   03354600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03354700
.*                                                                      03354800
&ZOPN                 SETA  &ZOPN+1                                     03354900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAUTHCOMPTYPE_LESSOREQUAL'       03355000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03355100
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03355200
&ZOPD(&ZOPN)          SETC  '++ XAUTHCOMPTYPE.'                         03355300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03355400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03355500
.*                                                                      03355600
&ZOPN                 SETA  &ZOPN+1                                     03355700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAUTHCOMPTYPE_EQUAL'             03355800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03355900
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03356000
&ZOPD(&ZOPN)          SETC  '++ XAUTHCOMPTYPE.'                         03356100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EQUAL'                        03356200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03356300
.*-------------------------------------------------------------------   03356400
.***AM.L03 XCMDFLGS2B BL.8                                              03356500
&ZOPN                 SETA &ZOPN+1                                      03356600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS2B'                       03356700
&ZOPO(&ZOPN)          SETC 'DS'                                         03356800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03356900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03357000
.*                                                                      03357100
&ZOPN                 SETA  &ZOPN+1                                     03357200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYTYPE_SECONDARY'              03357300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03357400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03357500
&ZOPD(&ZOPN)          SETC  '++ XKEYTYPE.'                              03357600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARY'                    03357700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03357800
.*                                                                      03357900
&ZOPN                 SETA  &ZOPN+1                                     03358000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKEYCOMPARE_YES'                03358100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03358200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03358300
&ZOPD(&ZOPN)          SETC  '++ XSKEYCOMPARE.'                          03358400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03358500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03358600
.*                                                                      03358700
&ZOPN                 SETA  &ZOPN+1                                     03358800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKEYREQTYPE_GREATEROREQUAL'     03358900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03359000
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03359100
&ZOPD(&ZOPN)          SETC  '++ XSKEYREQTYPE.'                          03359200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GREATEROREQUAL'               03359300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03359400
.*                                                                      03359500
&ZOPN                 SETA  &ZOPN+1                                     03359600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKEYREQTYPE_LESSOREQUAL'        03359700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03359800
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03359900
&ZOPD(&ZOPN)          SETC  '++ XSKEYREQTYPE.'                          03360000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03360100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03360200
.*                                                                      03360300
&ZOPN                 SETA  &ZOPN+1                                     03360400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYSCANTYPE_SECONDARY'          03360500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03360600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03360700
&ZOPD(&ZOPN)          SETC  '++ XKEYSCANTYPE.'                          03360800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARY'                    03360900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03361000
.*-------------------------------------------------------------------   03361100
.***AM.L09  XRSV0601 CL2                                                03361200
&ZOPN                 SETA &ZOPN+1                                      03361300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0601'                         03361400
&ZOPO(&ZOPN)          SETC 'DS'                                         03361500
&ZOPV(&ZOPN)          SETC 'CL2'                                        03361600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0601'                      03361700
.*-------------------------------------------------------------------   03361800
.***AM.LVER1                                                            03361900
                      AIF  (&XPLISTVER LT 1).ZL162L                     03362000
.*-------------------------------------------------------------------   03362100
.*-------------------------------------------------------------------   03362200
.***AM.PJR1 DEFINED ON XMCB_DATA                                        03362300
&ZOPN                 SETA &ZOPN+1                                      03362400
&ZOPL(&ZOPN)          SETC ' '                                          03362500
&ZOPO(&ZOPN)          SETC 'ORG'                                        03362600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03362700
&ZOPD(&ZOPN)          SETC ' '                                          03362800
.*-------------------------------------------------------------------   03362900
.***AM.LVER2                                                            03363000
.ZL162L               ANOP  ,                                           03363100
.*-------------------------------------------------------------------   03363200
.*-------------------------------------------------------------------   03363300
.***AM.LVER1                                                            03363400
                      AIF  (&XPLISTVER LT 1).ZL163L                     03363500
.*-------------------------------------------------------------------   03363600
.*-------------------------------------------------------------------   03363700
.***AM.L09  XRSV0701 CL112                                              03363800
&ZOPN                 SETA &ZOPN+1                                      03363900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0701'                         03364000
&ZOPO(&ZOPN)          SETC 'DS'                                         03364100
&ZOPV(&ZOPN)          SETC 'CL112'                                      03364200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0701'                      03364300
.*-------------------------------------------------------------------   03364400
.***AM.LVER2                                                            03364500
.ZL163L               ANOP  ,                                           03364600
.*-------------------------------------------------------------------   03364700
.*-------------------------------------------------------------------   03364800
.***AM.LVER1                                                            03364900
                      AIF  (&XPLISTVER LT 1).ZL164L                     03365000
.*-------------------------------------------------------------------   03365100
.*-------------------------------------------------------------------   03365200
.***AM.L09  XRSV0702 CL16                                               03365300
&ZOPN                 SETA &ZOPN+1                                      03365400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0702'                         03365500
&ZOPO(&ZOPN)          SETC 'DS'                                         03365600
&ZOPV(&ZOPN)          SETC 'CL16'                                       03365700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0702'                      03365800
.*-------------------------------------------------------------------   03365900
.***AM.LVER2                                                            03366000
.ZL164L               ANOP  ,                                           03366100
.*-------------------------------------------------------------------   03366200
.*-------------------------------------------------------------------   03366300
.***AM.LVER1                                                            03366400
                      AIF  (&XPLISTVER LT 1).ZL165L                     03366500
.*-------------------------------------------------------------------   03366600
.*-------------------------------------------------------------------   03366700
.***AM.L09  XAUTHCOMP1 CL16                                             03366800
&ZOPN                 SETA &ZOPN+1                                      03366900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAUTHCOMP1'                       03367000
&ZOPO(&ZOPN)          SETC 'DS'                                         03367100
&ZOPV(&ZOPN)          SETC 'CL16'                                       03367200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XAUTHCOMP1'                 03367300
.*-------------------------------------------------------------------   03367400
.***AM.LVER2                                                            03367500
.ZL165L               ANOP  ,                                           03367600
.*-------------------------------------------------------------------   03367700
.*-------------------------------------------------------------------   03367800
.***AM.LVER1                                                            03367900
                      AIF  (&XPLISTVER LT 1).ZL166L                     03368000
.*-------------------------------------------------------------------   03368100
.*-------------------------------------------------------------------   03368200
.***AM.L09  XRSV0703 CL28                                               03368300
&ZOPN                 SETA &ZOPN+1                                      03368400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0703'                         03368500
&ZOPO(&ZOPN)          SETC 'DS'                                         03368600
&ZOPV(&ZOPN)          SETC 'CL28'                                       03368700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0703'                      03368800
.*-------------------------------------------------------------------   03368900
.***AM.LVER2                                                            03369000
.ZL166L               ANOP  ,                                           03369100
.*-------------------------------------------------------------------   03369200
.*-------------------------------------------------------------------   03369300
.***AM.LVER1                                                            03369400
                      AIF  (&XPLISTVER LT 1).ZL167L                     03369500
.*-------------------------------------------------------------------   03369600
.*-------------------------------------------------------------------   03369700
.***AM.L09  XLISTKEYINC F                                               03369800
&ZOPN                 SETA &ZOPN+1                                      03369900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYINC'                      03370000
&ZOPO(&ZOPN)          SETC 'DS'                                         03370100
&ZOPV(&ZOPN)          SETC 'F'                                          03370200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEYINC  XLISTKEYINC'              03370300
.*-------------------------------------------------------------------   03370400
.***AM.LVER2                                                            03370500
.ZL167L               ANOP  ,                                           03370600
.*-------------------------------------------------------------------   03370700
.*-------------------------------------------------------------------   03370800
.***AM.LVER1                                                            03370900
                      AIF  (&XPLISTVER LT 4).ZL168L                     03371000
.*-------------------------------------------------------------------   03371100
.*-------------------------------------------------------------------   03371200
.***AM.PJR1 DEFINED ON XMCB_DATA4                                       03371300
&ZOPN                 SETA &ZOPN+1                                      03371400
&ZOPL(&ZOPN)          SETC ' '                                          03371500
&ZOPO(&ZOPN)          SETC 'ORG'                                        03371600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+276'                              03371700
&ZOPD(&ZOPN)          SETC ' '                                          03371800
.*-------------------------------------------------------------------   03371900
.***AM.LVER2                                                            03372000
.ZL168L               ANOP  ,                                           03372100
.*-------------------------------------------------------------------   03372200
.*-------------------------------------------------------------------   03372300
.***AM.LVER1                                                            03372400
                      AIF  (&XPLISTVER LT 4).ZL169L                     03372500
.*-------------------------------------------------------------------   03372600
.*-------------------------------------------------------------------   03372700
.***AM.L09  XSECONDARYKEY CL32                                          03372800
&ZOPN                 SETA &ZOPN+1                                      03372900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEY'                    03373000
&ZOPO(&ZOPN)          SETC 'DS'                                         03373100
&ZOPV(&ZOPN)          SETC 'CL32'                                       03373200
&ZOPD(&ZOPN)          SETC '++ &ZXSECONDARYKEY  XSECONDARYKEY'          03373300
.*-------------------------------------------------------------------   03373400
.***AM.LVER2                                                            03373500
.ZL169L               ANOP  ,                                           03373600
.*-------------------------------------------------------------------   03373700
.*-------------------------------------------------------------------   03373800
.***AM.LVER1                                                            03373900
                      AIF  (&XPLISTVER LT 4).ZL170L                     03374000
.*-------------------------------------------------------------------   03374100
.*-------------------------------------------------------------------   03374200
.***AM.L09  XSKEYRANGEEND CL32                                          03374300
&ZOPN                 SETA &ZOPN+1                                      03374400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSKEYRANGEEND'                    03374500
&ZOPO(&ZOPN)          SETC 'DS'                                         03374600
&ZOPV(&ZOPN)          SETC 'CL32'                                       03374700
&ZOPD(&ZOPN)          SETC '++ &ZXSKEYRANGEEND  XSKEYRANGEEND'          03374800
.*-------------------------------------------------------------------   03374900
.***AM.LVER2                                                            03375000
.ZL170L               ANOP  ,                                           03375100
.*-------------------------------------------------------------------   03375200
&ZOPN                 SETA &ZOPN+1                                      03375300
&ZOPL(&ZOPN)          SETC ' '                                          03375400
&ZOPO(&ZOPN)          SETC 'ORG'                                        03375500
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03375600
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     03375700
.*-------------------------------------------------------------------   03375800
.***AM.L10 END OF IXLLSTM LIST PARAMETERS                               03375900
&ZOPN                 SETA &ZOPN+1                                      03376000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 03376100
&ZOPO(&ZOPN)          SETC 'EQU'                                        03376200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 03376300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         03376400
.*                                                                      03376500
&ZOPN                 SETA &ZOPN+1                                      03376600
&ZOPL(&ZOPN)          SETC ' '                                          03376700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      03376800
&ZOPV(&ZOPN)          SETC '1'                                          03376900
&ZOPD(&ZOPN)          SETC ' '                                          03377000
.*-------------------------------------------------------------------   03377100
.***AL.L12 IXLLSTM FMT=LIST MF=S|L PARAMETERS                           03377200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         03377300
.*                                                                      03377400
&ZOPN                 SETA  &ZOPN+1                                     03377500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                03377600
&ZOPO(&ZOPN)          SETC  'DC'                                        03377700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   03377800
&ZOPD(&ZOPN)          SETC  '++ IXLLSTM ARG PARMS'                      03377900
.*                                                                      03378000
.ZLMFSLX              ANOP  ,                                           03378100
.*-------------------------------------------------------------------   03378200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          03378300
&ZPLLEN               SETA 232                                          03378400
.*                                                                      03378500
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    03378600
&ZPLLEN               SETA 276                                          03378700
.ZLLEN2Z              ANOP  ,                                           03378800
.*                                                                      03378900
                      AIF  (&XPLISTVER LT 4).ZLLEN3Z                    03379000
&ZPLLEN               SETA 340                                          03379100
.ZLLEN3Z              ANOP  ,                                           03379200
.*                                                                      03379300
.******************************************************************     03379400
.***AI.L01 IXLLSTM FMT=LIST FILL IN PARAMETER AREA                      03379500
.******************************************************************     03379600
                      ACTR  10000                                       03379700
&ZCVAL                SETC  'LA'           ASSUME XA MODE               03379800
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    03379900
&ZCVAL                SETC  'LAE'          XAX MODE                     03380000
.ZIMFXA               ANOP ,                                            03380100
.*                                                                      03380200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    03380300
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         03380400
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 03380500
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                03380600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 03380700
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                03380800
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   03380900
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    03381000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   03381100
&ZOPN                 SETA  &ZOPN+1                                     03381200
&ZOPL(&ZOPN)          SETC  ' '                                         03381300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03381400
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              03381500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       03381600
                      AGO   .ZIMFNX                                     03381700
.*                                                                      03381800
.ZIMFN2               ANOP ,                                            03381900
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     03382000
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     03382100
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  03382200
&ZOPN                 SETA  &ZOPN+1                                     03382300
&ZOPL(&ZOPN)          SETC  ' '                                         03382400
&ZOPO(&ZOPN)          SETC  'LAE'                                       03382500
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  03382600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       03382700
                      AGO   .ZIMFNX                                     03382800
.ZIMFNX1              ANOP ,                                            03382900
&ZOPN                 SETA  &ZOPN+1                                     03383000
&ZOPL(&ZOPN)          SETC  ' '                                         03383100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03383200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                03383300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       03383400
.ZIMFNX               ANOP ,                                            03383500
.********************************************************************   03383600
.***AI.L02 IXLLSTM FMT=LIST INITIALIZE PARAMETER AREA                   03383700
.********************************************************************   03383800
.***AI.L03 MF=(SLE)                                                     03383900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      03384000
&ZAWRK                SETA  0                                           03384100
&ZN                   SETA  &ZPLLEN                                     03384200
.ZCLRCONT             AIF   (&ZN LE 256).ZCLRX                          03384300
.*                                                                      03384400
&ZOPN                 SETA  &ZOPN+1                                     03384500
&ZOPL(&ZOPN)          SETC  ' '                                         03384600
&ZOPO(&ZOPN)          SETC  'XC'                                        03384700
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(256,1),&ZAWRK.(1)'                 03384800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             03384900
.*                                                                      03385000
&ZAWRK                SETA &ZAWRK+256                                   03385100
&ZN                   SETA  &ZN-256                                     03385200
                      AGO   .ZCLRCONT                                   03385300
.*                                                                      03385400
.ZCLRX                ANOP  ,                                           03385500
.*                                                                      03385600
&ZOPN                 SETA  &ZOPN+1                                     03385700
&ZOPL(&ZOPN)          SETC  ' '                                         03385800
&ZOPO(&ZOPN)          SETC  'XC'                                        03385900
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(&ZN,1),&ZAWRK.(1)'                 03386000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             03386100
.ZIMFLX               ANOP  ,                                           03386200
.*-------------------------------------------------------------------   03386300
.***AI.LVER01                                                           03386400
                      AIF  (&XPLISTVER LT 1).ZI5Z                       03386500
.*-------------------------------------------------------------------   03386600
.***AI.LVER02                                                           03386700
.ZI5Z                 ANOP  ,                                           03386800
.*-------------------------------------------------------------------   03386900
.***AI.LVER01                                                           03387000
                      AIF  (&XPLISTVER LT 4).ZI6Z                       03387100
.*-------------------------------------------------------------------   03387200
.***AI.LVER02                                                           03387300
.ZI6Z                 ANOP  ,                                           03387400
.*-------------------------------------------------------------------   03387500
.***AI.LVER01                                                           03387600
                      AIF  (&XPLISTVER LT 1).ZI8Z                       03387700
.*-------------------------------------------------------------------   03387800
.***AI.LVER02                                                           03387900
.ZI8Z                 ANOP  ,                                           03388000
.*-------------------------------------------------------------------   03388100
.***AI.LVER01                                                           03388200
                      AIF  (&XPLISTVER LT 4).ZI10Z                      03388300
.*-------------------------------------------------------------------   03388400
.***AI.LVER02                                                           03388500
.ZI10Z                ANOP  ,                                           03388600
.*-------------------------------------------------------------------   03388700
.***AI.L04B XVERSION XL1                                                03388800
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    03388900
&ZOPN                 SETA  &ZOPN+1                                     03389000
&ZOPL(&ZOPN)          SETC  ' '                                         03389100
&ZOPO(&ZOPN)          SETC  'MVI'                                       03389200
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           03389300
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     03389400
.ZIMFVZ               ANOP  ,                                           03389500
.*-------------------------------------------------------------------   03389600
.***AI.L18  XBUFSTGKEY XL1                                              03389700
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').ZI17                    03389800
&ZXBUFSTGKEY          SETC  ''             RESET INPUT/OUTPUT           03389900
.ZI17                 ANOP  ,                                           03390000
.*-------------------------------------------------------------------   03390100
.***AI.L25  XBUFSTGKEY XL1                                              03390200
                      AIF   ('&ZXBUFSTGKEY' EQ '').ZI17E                03390300
                      AIF   ('&ZXBUFSTGKEY' EQ 'OUTPUT').ZI17E          03390400
&ZCGPR                SETC  '&XBUFSTGKEY'                               03390500
.*                                                                      03390600
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZI17B           03390700
&ZCGPR   SETC  '0('.'&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2).')'                03390800
                      AGO   .ZI17D                                      03390900
.ZI17B                ANOP  ,                                           03391000
.*                                                                      03391100
&ZC                   SETC  '&XBUFSTGKEY'(1,1)                          03391200
                      AIF   (T'&ZC NE 'N').ZI17D                        03391300
&ZC                   SETC  '&XBUFSTGKEY'                               03391400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI17D               03391500
&ZCGPR                SETC  '=BL1''&XBUFSTGKEY'''                       03391600
.*                                                                      03391700
.ZI17D                ANOP  ,                                           03391800
.*                                                                      03391900
&ZOPN                 SETA  &ZOPN+1                                     03392000
&ZOPL(&ZOPN)          SETC  ' '                                         03392100
&ZOPO(&ZOPN)          SETC  'MVC'                                       03392200
&ZOPV(&ZOPN)          SETC  '9(1,1),&ZCGPR'                             03392300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSTGKEY XBUFSTGKEY'                03392400
.*                                                                      03392500
.ZI17E                ANOP  ,                                           03392600
.*-------------------------------------------------------------------   03392700
.***AI.L25  XANSLEN XL2                                                 03392800
                      AIF   ('&ZXANSLEN' EQ '').ZI18E                   03392900
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI18E             03393000
&ZCGPR                SETC  '&XANSLEN'                                  03393100
.*                                                                      03393200
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI18B              03393300
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      03393400
                      AGO   .ZI18D                                      03393500
.ZI18B                ANOP  ,                                           03393600
.*                                                                      03393700
&ZC                   SETC  '&XANSLEN'(1,1)                             03393800
                      AIF   (T'&ZC NE 'N').ZI18D                        03393900
&ZC                   SETC  '&XANSLEN'                                  03394000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI18D               03394100
&ZCGPR                SETC  '=AL2(&XANSLEN)'                            03394200
.*                                                                      03394300
.ZI18D                ANOP  ,                                           03394400
.*                                                                      03394500
&ZOPN                 SETA  &ZOPN+1                                     03394600
&ZOPL(&ZOPN)          SETC  ' '                                         03394700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03394800
&ZOPV(&ZOPN)          SETC  '10(2,1),&ZCGPR'                            03394900
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      03395000
.*                                                                      03395100
.ZI18E                ANOP  ,                                           03395200
.*-------------------------------------------------------------------   03395300
.***AI.L25  XCONTOKEN CL16                                              03395400
                      AIF   ('&ZXCONTOKEN' EQ '').ZI19E                 03395500
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI19E           03395600
&ZCGPR                SETC  '&XCONTOKEN'                                03395700
.*                                                                      03395800
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI19B            03395900
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  03396000
.ZI19B                ANOP  ,                                           03396100
.*                                                                      03396200
&ZOPN                 SETA  &ZOPN+1                                     03396300
&ZOPL(&ZOPN)          SETC  ' '                                         03396400
&ZOPO(&ZOPN)          SETC  'MVC'                                       03396500
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           03396600
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  03396700
.*                                                                      03396800
.ZI19E                ANOP  ,                                           03396900
.*-------------------------------------------------------------------   03397000
.***AI.L18  XREQDATA CL8                                                03397100
         AIF   ('&XREQDATA' NE 'NO_REQDATA').ZI23                       03397200
&ZXREQDATA            SETC  ''             RESET INPUT/OUTPUT           03397300
.ZI23                 ANOP  ,                                           03397400
.*-------------------------------------------------------------------   03397500
.***AI.L25  XREQDATA CL8                                                03397600
                      AIF   ('&ZXREQDATA' EQ '').ZI23E                  03397700
                      AIF   ('&ZXREQDATA' EQ 'OUTPUT').ZI23E            03397800
&ZCGPR                SETC  '&XREQDATA'                                 03397900
.*                                                                      03398000
                      AIF   ('&XREQDATA'(1,1) NE '(').ZI23B             03398100
&ZCGPR   SETC  '0('.'&XREQDATA'(2,K'&XREQDATA-2).')'                    03398200
.ZI23B                ANOP  ,                                           03398300
.*                                                                      03398400
&ZOPN                 SETA  &ZOPN+1                                     03398500
&ZOPL(&ZOPN)          SETC  ' '                                         03398600
&ZOPO(&ZOPN)          SETC  'MVC'                                       03398700
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            03398800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQDATA XREQDATA'                    03398900
.*                                                                      03399000
.ZI23E                ANOP  ,                                           03399100
.*-------------------------------------------------------------------   03399200
.***AI.L18  XREQID CL8                                                  03399300
         AIF   ('&XREQID' NE 'NO_REQID').ZI24                           03399400
&ZXREQID              SETC  ''             RESET INPUT/OUTPUT           03399500
.ZI24                 ANOP  ,                                           03399600
.*-------------------------------------------------------------------   03399700
.***AI.L25  XREQID CL8                                                  03399800
                      AIF   ('&ZXREQID' EQ '').ZI24E                    03399900
                      AIF   ('&ZXREQID' EQ 'OUTPUT').ZI24E              03400000
&ZCGPR                SETC  '&XREQID'                                   03400100
.*                                                                      03400200
                      AIF   ('&XREQID'(1,1) NE '(').ZI24B               03400300
&ZCGPR   SETC  '0('.'&XREQID'(2,K'&XREQID-2).')'                        03400400
.ZI24B                ANOP  ,                                           03400500
.*                                                                      03400600
&ZOPN                 SETA  &ZOPN+1                                     03400700
&ZOPL(&ZOPN)          SETC  ' '                                         03400800
&ZOPO(&ZOPN)          SETC  'MVC'                                       03400900
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            03401000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQID XREQID'                        03401100
.*                                                                      03401200
.ZI24E                ANOP  ,                                           03401300
.*-------------------------------------------------------------------   03401400
.***AI.L05 XSHLFLGS1 BL1                                                03401500
&ZW                   SETC  ''                                          03401600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03401700
.*-------------------------------------------------------------------   03401800
.***AI.L08 XSHLFLGS1 "BUFFER"                                           03401900
.***      BL1'1XXXXXXX'                                                 03402000
         AIF   ('&BUFFER' EQ '').ZI30A                                  03402100
&ZW                   SETC  '&ZW.1'                                     03402200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03402300
                      AGO   .ZI30C                                      03402400
.*                                                                      03402500
.ZI30A                ANOP  ,                                           03402600
&ZW                   SETC  '&ZW.0'                                     03402700
.ZI30C                ANOP  ,                                           03402800
.*-------------------------------------------------------------------   03402900
.***AI.L08 XSHLFLGS1 "BUFLIST"                                          03403000
.***      BL1'X1XXXXXX'                                                 03403100
         AIF   ('&BUFLIST' EQ '').ZI31A                                 03403200
&ZW                   SETC  '&ZW.1'                                     03403300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03403400
                      AGO   .ZI31C                                      03403500
.*                                                                      03403600
.ZI31A                ANOP  ,                                           03403700
&ZW                   SETC  '&ZW.0'                                     03403800
.ZI31C                ANOP  ,                                           03403900
.*-------------------------------------------------------------------   03404000
.***AI.L08 XSHLFLGS1 "ADJAREA"                                          03404100
.***      BL1'XX1XXXXX'                                                 03404200
         AIF   ('&ADJAREA' EQ '').ZI32A                                 03404300
&ZW                   SETC  '&ZW.1'                                     03404400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03404500
                      AGO   .ZI32C                                      03404600
.*                                                                      03404700
.ZI32A                ANOP  ,                                           03404800
&ZW                   SETC  '&ZW.0'                                     03404900
.ZI32C                ANOP  ,                                           03405000
.*-------------------------------------------------------------------   03405100
.***AI.L08 XSHLFLGS1 "ANSAREA"                                          03405200
.***      BL1'XXX1XXXX'                                                 03405300
         AIF   ('&ANSAREA' EQ '').ZI33A                                 03405400
         AIF   ('&ANSAREA' EQ '').ZI33A                                 03405500
&ZW                   SETC  '&ZW.1'                                     03405600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03405700
                      AGO   .ZI33C                                      03405800
.*                                                                      03405900
.ZI33A                ANOP  ,                                           03406000
&ZW                   SETC  '&ZW.0'                                     03406100
.ZI33C                ANOP  ,                                           03406200
.*-------------------------------------------------------------------   03406300
.***AI.L08 XSHLFLGS1 "NO"                                               03406400
.***      BL1'XXXX1XXX'                                                 03406500
         AIF   ('&XPAGEABLE' NE 'NO').ZI34A                             03406600
&ZW                   SETC  '&ZW.1'                                     03406700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03406800
                      AGO   .ZI34C                                      03406900
.*                                                                      03407000
.ZI34A                ANOP  ,                                           03407100
&ZW                   SETC  '&ZW.0'                                     03407200
.ZI34C                ANOP  ,                                           03407300
.*-------------------------------------------------------------------   03407400
.***AI.L08 XSHLFLGS1 "BUFSTGKEY"                                        03407500
.***      BL1'XXXXX1XX'                                                 03407600
         AIF   ('&BUFSTGKEY' EQ '').ZI35A                               03407700
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03407800
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03407900
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03408000
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03408100
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03408200
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03408300
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03408400
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03408500
&ZW                   SETC  '&ZW.1'                                     03408600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03408700
                      AGO   .ZI35C                                      03408800
.*                                                                      03408900
.ZI35A                ANOP  ,                                           03409000
&ZW                   SETC  '&ZW.0'                                     03409100
.ZI35C                ANOP  ,                                           03409200
.*-------------------------------------------------------------------   03409300
.***AI.L08 XSHLFLGS1 "REAL"                                             03409400
.***      BL1'XXXXXX1X'                                                 03409500
         AIF   ('&XBUFADDRTYPE' NE 'REAL').ZI36A                        03409600
&ZW                   SETC  '&ZW.1'                                     03409700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03409800
                      AGO   .ZI36C                                      03409900
.*                                                                      03410000
.ZI36A                ANOP  ,                                           03410100
&ZW                   SETC  '&ZW.0'                                     03410200
.ZI36C                ANOP  ,                                           03410300
.*-------------------------------------------------------------------   03410400
.***AI.L08 XSHLFLGS1 "LISTKEYAREA"                                      03410500
.***      BL1'XXXXXXX1'                                                 03410600
         AIF   ('&LISTKEYAREA' EQ '').ZI37A                             03410700
         AIF   ('&LISTKEYAREA' EQ 'NO').ZI37A                           03410800
&ZW                   SETC  '&ZW.1'                                     03410900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03411000
                      AGO   .ZI37C                                      03411100
.*                                                                      03411200
.ZI37A                ANOP  ,                                           03411300
&ZW                   SETC  '&ZW.0'                                     03411400
.ZI37C                ANOP  ,                                           03411500
.*-------------------------------------------------------------------   03411600
.***AI.L11 XSHLFLGS1 BL1                                                03411700
                      AIF   ('&ZCLNG' NE 'YES').ZI37E  ALL ZERO BITS    03411800
&ZOPN                 SETA  &ZOPN+1                                     03411900
&ZOPL(&ZOPN)          SETC  ' '                                         03412000
&ZOPO(&ZOPN)          SETC  'OI'                                        03412100
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             03412200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03412300
.ZI37E                ANOP  ,                                           03412400
.*-------------------------------------------------------------------   03412500
.***AI.L05 XSHLFLGS2 BL1                                                03412600
&ZW                   SETC  ''                                          03412700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03412800
.*-------------------------------------------------------------------   03412900
.***AI.L08 XSHLFLGS2 "SYNCECB"                                          03413000
.***      BL1'1XXXXXXX'                                                 03413100
         AIF   ('&XMODE' NE 'SYNCECB').ZI39A                            03413200
&ZW                   SETC  '&ZW.1'                                     03413300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03413400
                      AGO   .ZI39C                                      03413500
.*                                                                      03413600
.ZI39A                ANOP  ,                                           03413700
&ZW                   SETC  '&ZW.0'                                     03413800
.ZI39C                ANOP  ,                                           03413900
.*-------------------------------------------------------------------   03414000
.***AI.L08 XSHLFLGS2 "SYNCEXIT"                                         03414100
.***      BL1'X1XXXXXX'                                                 03414200
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI40A                           03414300
&ZW                   SETC  '&ZW.1'                                     03414400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03414500
                      AGO   .ZI40C                                      03414600
.*                                                                      03414700
.ZI40A                ANOP  ,                                           03414800
&ZW                   SETC  '&ZW.0'                                     03414900
.ZI40C                ANOP  ,                                           03415000
.*-------------------------------------------------------------------   03415100
.***AI.L08 XSHLFLGS2 "SYNCTOKEN"                                        03415200
.***      BL1'XX1XXXXX'                                                 03415300
         AIF   ('&XMODE' NE 'SYNCTOKEN').ZI41A                          03415400
&ZW                   SETC  '&ZW.1'                                     03415500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03415600
                      AGO   .ZI41C                                      03415700
.*                                                                      03415800
.ZI41A                ANOP  ,                                           03415900
&ZW                   SETC  '&ZW.0'                                     03416000
.ZI41C                ANOP  ,                                           03416100
.*-------------------------------------------------------------------   03416200
.***AI.L08 XSHLFLGS2 "ASYNCECB"                                         03416300
.***      BL1'XXX1XXXX'                                                 03416400
         AIF   ('&XMODE' NE 'ASYNCECB').ZI42A                           03416500
&ZW                   SETC  '&ZW.1'                                     03416600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03416700
                      AGO   .ZI42C                                      03416800
.*                                                                      03416900
.ZI42A                ANOP  ,                                           03417000
&ZW                   SETC  '&ZW.0'                                     03417100
.ZI42C                ANOP  ,                                           03417200
.*-------------------------------------------------------------------   03417300
.***AI.L08 XSHLFLGS2 "ASYNCEXIT"                                        03417400
.***      BL1'XXXX1XXX'                                                 03417500
         AIF   ('&XMODE' NE 'ASYNCEXIT').ZI43A                          03417600
&ZW                   SETC  '&ZW.1'                                     03417700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03417800
                      AGO   .ZI43C                                      03417900
.*                                                                      03418000
.ZI43A                ANOP  ,                                           03418100
&ZW                   SETC  '&ZW.0'                                     03418200
.ZI43C                ANOP  ,                                           03418300
.*-------------------------------------------------------------------   03418400
.***AI.L08 XSHLFLGS2 "ASYNCTOKEN"                                       03418500
.***      BL1'XXXXX1XX'                                                 03418600
         AIF   ('&XMODE' NE 'ASYNCTOKEN').ZI44A                         03418700
&ZW                   SETC  '&ZW.1'                                     03418800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03418900
                      AGO   .ZI44C                                      03419000
.*                                                                      03419100
.ZI44A                ANOP  ,                                           03419200
&ZW                   SETC  '&ZW.0'                                     03419300
.ZI44C                ANOP  ,                                           03419400
.*-------------------------------------------------------------------   03419500
.***AI.L08 XSHLFLGS2 "ASYNCNORESPONSE"                                  03419600
.***      BL1'XXXXXX1X'                                                 03419700
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ZI45A                    03419800
&ZW                   SETC  '&ZW.10'                                    03419900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03420000
                      AGO   .ZI45C                                      03420100
.*                                                                      03420200
.ZI45A                ANOP  ,                                           03420300
&ZW                   SETC  '&ZW.00'                                    03420400
.ZI45C                ANOP  ,                                           03420500
.*-------------------------------------------------------------------   03420600
.***AI.L11 XSHLFLGS2 BL1                                                03420700
                      AIF   ('&ZCLNG' NE 'YES').ZI45E  ALL ZERO BITS    03420800
&ZOPN                 SETA  &ZOPN+1                                     03420900
&ZOPL(&ZOPN)          SETC  ' '                                         03421000
&ZOPO(&ZOPN)          SETC  'OI'                                        03421100
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             03421200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03421300
.ZI45E                ANOP  ,                                           03421400
.*-------------------------------------------------------------------   03421500
.***AI.L05 XSHLFLGS3 BL1                                                03421600
&ZW                   SETC  ''                                          03421700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03421800
.*-------------------------------------------------------------------   03421900
.***AI.L08 XSHLFLGS3 "HELDBY"                                           03422000
.***      BL1'XXX1XXXX'                                                 03422100
         AIF   ('&XLOCKOPER' NE 'HELDBY').ZI47A                         03422200
&ZW                   SETC  '&ZW.0001'                                  03422300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03422400
                      AGO   .ZI47C                                      03422500
.*                                                                      03422600
.ZI47A                ANOP  ,                                           03422700
&ZW                   SETC  '&ZW.0000'                                  03422800
.ZI47C                ANOP  ,                                           03422900
.*-------------------------------------------------------------------   03423000
.***AI.L08 XSHLFLGS3 "LOCKCOMP"                                         03423100
.***      BL1'XXXXXXX1'                                                 03423200
         AIF   ('&LOCKCOMP' EQ '').ZI48A                                03423300
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI48A                     03423400
&ZW                   SETC  '&ZW.0001'                                  03423500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03423600
                      AGO   .ZI48C                                      03423700
.*                                                                      03423800
.ZI48A                ANOP  ,                                           03423900
&ZW                   SETC  '&ZW.0000'                                  03424000
.ZI48C                ANOP  ,                                           03424100
.*-------------------------------------------------------------------   03424200
.***AI.L11 XSHLFLGS3 BL1                                                03424300
                      AIF   ('&ZCLNG' NE 'YES').ZI48E  ALL ZERO BITS    03424400
&ZOPN                 SETA  &ZOPN+1                                     03424500
&ZOPL(&ZOPN)          SETC  ' '                                         03424600
&ZOPO(&ZOPN)          SETC  'OI'                                        03424700
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             03424800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03424900
.ZI48E                ANOP  ,                                           03425000
.*-------------------------------------------------------------------   03425100
.***AI.L05 XSHLFLGS4 BL1                                                03425200
&ZW                   SETC  ''                                          03425300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03425400
.*-------------------------------------------------------------------   03425500
.***AI.L08 XSHLFLGS4 "EXTRESTOKEN"                                      03425600
.***      BL1'XX1XXXXX'                                                 03425700
         AIF   ('&EXTRESTOKEN' EQ '').ZI50A                             03425800
&ZW                   SETC  '&ZW.001'                                   03425900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03426000
                      AGO   .ZI50C                                      03426100
.*                                                                      03426200
.ZI50A                ANOP  ,                                           03426300
&ZW                   SETC  '&ZW.000'                                   03426400
.ZI50C                ANOP  ,                                           03426500
.*-------------------------------------------------------------------   03426600
.***AI.L08 XSHLFLGS4 "64"                                               03426700
.***      BL1'XXX1XXXX'                                                 03426800
         AIF   ('&XBUFADDRSIZE' NE '64').ZI51A                          03426900
&ZW                   SETC  '&ZW.1'                                     03427000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03427100
                      AGO   .ZI51C                                      03427200
.*                                                                      03427300
.ZI51A                ANOP  ,                                           03427400
&ZW                   SETC  '&ZW.0'                                     03427500
.ZI51C                ANOP  ,                                           03427600
.*-------------------------------------------------------------------   03427700
.***AI.L08 XSHLFLGS4 "LIST"                                             03427800
.***      BL1'XXXXXXX1'                                                 03427900
&ZW                   SETC  '&ZW.0000'                                  03428000
.*-------------------------------------------------------------------   03428100
.***AI.L11 XSHLFLGS4 BL1                                                03428200
                      AIF   ('&ZCLNG' NE 'YES').ZI52E  ALL ZERO BITS    03428300
&ZOPN                 SETA  &ZOPN+1                                     03428400
&ZOPL(&ZOPN)          SETC  ' '                                         03428500
&ZOPO(&ZOPN)          SETC  'OI'                                        03428600
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             03428700
&ZOPD(&ZOPN)          SETC  '++ 1298 BL1'                               03428800
.ZI52E                ANOP  ,                                           03428900
.*-------------------------------------------------------------------   03429000
.***AI.L23 ALET XBUFFER F                                               03429100
         AIF   ('&ZXBUFFER' EQ '').ZI58G                                03429200
         AIF   ('&SYSASCE' EQ 'P').ZI58G   SYSSTATE PRIMARY             03429300
&ZCLNG                SETC  '&XBUFFER'                                  03429400
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI58E  IN AR                    03429500
.*                                                                      03429600
&ZCGPR                SETC  '14'                                        03429700
&ZOPN                 SETA  &ZOPN+1                                     03429800
&ZOPL(&ZOPN)          SETC  ' '                                         03429900
&ZOPO(&ZOPN)          SETC  'LAE'                                       03430000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03430100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03430200
                      AGO   .ZI58F                                      03430300
.*                                                                      03430400
.ZI58E                ANOP  ,                                           03430500
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               03430600
.*                                                                      03430700
.ZI58F                ANOP  ,                                           03430800
.*                                                                      03430900
&ZOPN                 SETA  &ZOPN+1                                     03431000
&ZOPL(&ZOPN)          SETC  ' '                                         03431100
&ZOPO(&ZOPN)          SETC  'STAM'                                      03431200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,28(1)'                       03431300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03431400
.*                                                                      03431500
.ZI58G                ANOP  ,                                           03431600
.*-------------------------------------------------------------------   03431700
.***AI.L25  XBUFSIZE F                                                  03431800
                      AIF   ('&ZXBUFSIZE' EQ '').ZI59E                  03431900
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI59E            03432000
&ZCGPR                SETC  '&XBUFSIZE'                                 03432100
.*                                                                      03432200
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI59B             03432300
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    03432400
                      AGO   .ZI59D                                      03432500
.ZI59B                ANOP  ,                                           03432600
.*                                                                      03432700
&ZC                   SETC  '&XBUFSIZE'(1,1)                            03432800
                      AIF   (T'&ZC NE 'N').ZI59D                        03432900
&ZC                   SETC  '&XBUFSIZE'                                 03433000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI59D               03433100
&ZCGPR                SETC  '=AL4(&XBUFSIZE)'                           03433200
.*                                                                      03433300
.ZI59D                ANOP  ,                                           03433400
.*                                                                      03433500
&ZOPN                 SETA  &ZOPN+1                                     03433600
&ZOPL(&ZOPN)          SETC  ' '                                         03433700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03433800
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            03433900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    03434000
.*                                                                      03434100
.ZI59E                ANOP  ,                                           03434200
.*-------------------------------------------------------------------   03434300
.***AI.L19  XBUFFER A                                                   03434400
                      AIF   ('&ZXBUFFER' EQ '').ZI60H                   03434500
&ZCLNG                SETC  '&XBUFFER'                                  03434600
&ZCGPR                SETC  '14'                                        03434700
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI60F  IN GPR                   03434800
.*                                                                      03434900
&ZOPN                 SETA  &ZOPN+1                                     03435000
&ZOPL(&ZOPN)          SETC  ' '                                         03435100
&ZOPO(&ZOPN)          SETC  'LA'                                        03435200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03435300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03435400
.*                                                                      03435500
                      AGO   .ZI60G                                      03435600
.*                                                                      03435700
.ZI60F                ANOP  ,                                           03435800
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               03435900
.*                                                                      03436000
.ZI60G                ANOP  ,                                           03436100
.*                                                                      03436200
&ZOPN                 SETA  &ZOPN+1                                     03436300
&ZOPL(&ZOPN)          SETC  ' '                                         03436400
&ZOPO(&ZOPN)          SETC  'ST'                                        03436500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             03436600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03436700
.*                                                                      03436800
.ZI60H                ANOP  ,                                           03436900
.*-------------------------------------------------------------------   03437000
.***AI.L18  XBUFALET F                                                  03437100
         AIF   ('&XBUFALET' NE 'NO_BUFALET').ZI62                       03437200
&ZXBUFALET            SETC  ''             RESET INPUT/OUTPUT           03437300
.ZI62                 ANOP  ,                                           03437400
.*-------------------------------------------------------------------   03437500
.***AI.L25  XBUFALET F                                                  03437600
                      AIF   ('&ZXBUFALET' EQ '').ZI62E                  03437700
                      AIF   ('&ZXBUFALET' EQ 'OUTPUT').ZI62E            03437800
&ZCGPR                SETC  '&XBUFALET'                                 03437900
.*                                                                      03438000
                      AIF   ('&XBUFALET'(1,1) NE '(').ZI62B             03438100
&ZCGPR   SETC  '0('.'&XBUFALET'(2,K'&XBUFALET-2).')'                    03438200
                      AGO   .ZI62D                                      03438300
.ZI62B                ANOP  ,                                           03438400
.*                                                                      03438500
&ZC                   SETC  '&XBUFALET'(1,1)                            03438600
                      AIF   (T'&ZC NE 'N').ZI62D                        03438700
&ZC                   SETC  '&XBUFALET'                                 03438800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI62D               03438900
&ZCGPR                SETC  '=AL4(&XBUFALET)'                           03439000
.*                                                                      03439100
.ZI62D                ANOP  ,                                           03439200
.*                                                                      03439300
&ZOPN                 SETA  &ZOPN+1                                     03439400
&ZOPL(&ZOPN)          SETC  ' '                                         03439500
&ZOPO(&ZOPN)          SETC  'MVC'                                       03439600
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            03439700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFALET XBUFALET'                    03439800
.*                                                                      03439900
.ZI62E                ANOP  ,                                           03440000
.*-------------------------------------------------------------------   03440100
.***AI.L23 ALET XBUFLIST F                                              03440200
         AIF   ('&ZXBUFLIST' EQ '').ZI63G                               03440300
         AIF   ('&SYSASCE' EQ 'P').ZI63G   SYSSTATE PRIMARY             03440400
&ZCLNG                SETC  '&XBUFLIST'                                 03440500
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI63E  IN AR                   03440600
.*                                                                      03440700
&ZCGPR                SETC  '14'                                        03440800
&ZOPN                 SETA  &ZOPN+1                                     03440900
&ZOPL(&ZOPN)          SETC  ' '                                         03441000
&ZOPO(&ZOPN)          SETC  'LAE'                                       03441100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03441200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03441300
                      AGO   .ZI63F                                      03441400
.*                                                                      03441500
.ZI63E                ANOP  ,                                           03441600
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             03441700
.*                                                                      03441800
.ZI63F                ANOP  ,                                           03441900
.*                                                                      03442000
&ZOPN                 SETA  &ZOPN+1                                     03442100
&ZOPL(&ZOPN)          SETC  ' '                                         03442200
&ZOPO(&ZOPN)          SETC  'STAM'                                      03442300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,32(1)'                       03442400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03442500
.*                                                                      03442600
.ZI63G                ANOP  ,                                           03442700
.*-------------------------------------------------------------------   03442800
.***AI.L19  XBUFLIST A                                                  03442900
                      AIF   ('&ZXBUFLIST' EQ '').ZI64H                  03443000
&ZCLNG                SETC  '&XBUFLIST'                                 03443100
&ZCGPR                SETC  '14'                                        03443200
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI64F  IN GPR                  03443300
         AIF   ('&SYSASCE' NE 'P').ZI64G   SYSSTATE PRIMARY             03443400
.*                                                                      03443500
&ZOPN                 SETA  &ZOPN+1                                     03443600
&ZOPL(&ZOPN)          SETC  ' '                                         03443700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03443800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03443900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03444000
.*                                                                      03444100
                      AGO   .ZI64G                                      03444200
.*                                                                      03444300
.ZI64F                ANOP  ,                                           03444400
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             03444500
.*                                                                      03444600
.ZI64G                ANOP  ,                                           03444700
.*                                                                      03444800
&ZOPN                 SETA  &ZOPN+1                                     03444900
&ZOPL(&ZOPN)          SETC  ' '                                         03445000
&ZOPO(&ZOPN)          SETC  'ST'                                        03445100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             03445200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03445300
.*                                                                      03445400
.ZI64H                ANOP  ,                                           03445500
.*-------------------------------------------------------------------   03445600
.***AI.L18 ALET XADJAREA F                                              03445700
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI66                       03445800
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           03445900
.ZI66                 ANOP  ,                                           03446000
.*-------------------------------------------------------------------   03446100
.***AI.L23 ALET XADJAREA F                                              03446200
         AIF   ('&ZXADJAREA' EQ '').ZI66G                               03446300
         AIF   ('&SYSASCE' EQ 'P').ZI66G   SYSSTATE PRIMARY             03446400
&ZCLNG                SETC  '&XADJAREA'                                 03446500
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI66E  IN AR                   03446600
.*                                                                      03446700
&ZCGPR                SETC  '14'                                        03446800
&ZOPN                 SETA  &ZOPN+1                                     03446900
&ZOPL(&ZOPN)          SETC  ' '                                         03447000
&ZOPO(&ZOPN)          SETC  'LAE'                                       03447100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03447200
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03447300
                      AGO   .ZI66F                                      03447400
.*                                                                      03447500
.ZI66E                ANOP  ,                                           03447600
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             03447700
.*                                                                      03447800
.ZI66F                ANOP  ,                                           03447900
.*                                                                      03448000
&ZOPN                 SETA  &ZOPN+1                                     03448100
&ZOPL(&ZOPN)          SETC  ' '                                         03448200
&ZOPO(&ZOPN)          SETC  'STAM'                                      03448300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       03448400
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03448500
.*                                                                      03448600
.ZI66G                ANOP  ,                                           03448700
.*-------------------------------------------------------------------   03448800
.***AI.L18  XADJAREA A                                                  03448900
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI67                       03449000
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           03449100
.ZI67                 ANOP  ,                                           03449200
.*-------------------------------------------------------------------   03449300
.***AI.L19  XADJAREA A                                                  03449400
                      AIF   ('&ZXADJAREA' EQ '').ZI67H                  03449500
&ZCLNG                SETC  '&XADJAREA'                                 03449600
&ZCGPR                SETC  '14'                                        03449700
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI67F  IN GPR                  03449800
         AIF   ('&SYSASCE' NE 'P').ZI67G   SYSSTATE PRIMARY             03449900
.*                                                                      03450000
&ZOPN                 SETA  &ZOPN+1                                     03450100
&ZOPL(&ZOPN)          SETC  ' '                                         03450200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03450300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03450400
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03450500
.*                                                                      03450600
                      AGO   .ZI67G                                      03450700
.*                                                                      03450800
.ZI67F                ANOP  ,                                           03450900
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             03451000
.*                                                                      03451100
.ZI67G                ANOP  ,                                           03451200
.*                                                                      03451300
&ZOPN                 SETA  &ZOPN+1                                     03451400
&ZOPL(&ZOPN)          SETC  ' '                                         03451500
&ZOPO(&ZOPN)          SETC  'ST'                                        03451600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             03451700
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03451800
.*                                                                      03451900
.ZI67H                ANOP  ,                                           03452000
.*-------------------------------------------------------------------   03452100
.***AI.L23 ALET XANSAREA F                                              03452200
         AIF   ('&ZXANSAREA' EQ '').ZI69G                               03452300
         AIF   ('&SYSASCE' EQ 'P').ZI69G   SYSSTATE PRIMARY             03452400
&ZCLNG                SETC  '&XANSAREA'                                 03452500
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI69E  IN AR                   03452600
.*                                                                      03452700
&ZCGPR                SETC  '14'                                        03452800
&ZOPN                 SETA  &ZOPN+1                                     03452900
&ZOPL(&ZOPN)          SETC  ' '                                         03453000
&ZOPO(&ZOPN)          SETC  'LAE'                                       03453100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03453200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03453300
                      AGO   .ZI69F                                      03453400
.*                                                                      03453500
.ZI69E                ANOP  ,                                           03453600
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             03453700
.*                                                                      03453800
.ZI69F                ANOP  ,                                           03453900
.*                                                                      03454000
&ZOPN                 SETA  &ZOPN+1                                     03454100
&ZOPL(&ZOPN)          SETC  ' '                                         03454200
&ZOPO(&ZOPN)          SETC  'STAM'                                      03454300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       03454400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03454500
.*                                                                      03454600
.ZI69G                ANOP  ,                                           03454700
.*-------------------------------------------------------------------   03454800
.***AI.L19  XANSAREA A                                                  03454900
                      AIF   ('&ZXANSAREA' EQ '').ZI70H                  03455000
&ZCLNG                SETC  '&XANSAREA'                                 03455100
&ZCGPR                SETC  '14'                                        03455200
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI70F  IN GPR                  03455300
         AIF   ('&SYSASCE' NE 'P').ZI70G   SYSSTATE PRIMARY             03455400
.*                                                                      03455500
&ZOPN                 SETA  &ZOPN+1                                     03455600
&ZOPL(&ZOPN)          SETC  ' '                                         03455700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03455800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03455900
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03456000
.*                                                                      03456100
                      AGO   .ZI70G                                      03456200
.*                                                                      03456300
.ZI70F                ANOP  ,                                           03456400
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             03456500
.*                                                                      03456600
.ZI70G                ANOP  ,                                           03456700
.*                                                                      03456800
&ZOPN                 SETA  &ZOPN+1                                     03456900
&ZOPL(&ZOPN)          SETC  ' '                                         03457000
&ZOPO(&ZOPN)          SETC  'ST'                                        03457100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             03457200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03457300
.*                                                                      03457400
.ZI70H                ANOP  ,                                           03457500
.*-------------------------------------------------------------------   03457600
.***AI.L25  XREQECB AL4                                                 03457700
                      AIF   ('&ZXREQECB' EQ '').ZI72E                   03457800
                      AIF   ('&ZXREQECB' EQ 'OUTPUT').ZI72E             03457900
&ZCGPR                SETC  '&XREQECB'                                  03458000
.*                                                                      03458100
                      AIF   ('&XREQECB'(1,1) NE '(').ZI72B              03458200
&ZCGPR   SETC  '0('.'&XREQECB'(2,K'&XREQECB-2).')'                      03458300
                      AGO   .ZI72D                                      03458400
.ZI72B                ANOP  ,                                           03458500
.*                                                                      03458600
&ZC                   SETC  '&XREQECB'(1,1)                             03458700
                      AIF   (T'&ZC NE 'N').ZI72D                        03458800
&ZC                   SETC  '&XREQECB'                                  03458900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI72D               03459000
&ZCGPR                SETC  '=AL4(&XREQECB)'                            03459100
.*                                                                      03459200
.ZI72D                ANOP  ,                                           03459300
.*                                                                      03459400
&ZOPN                 SETA  &ZOPN+1                                     03459500
&ZOPL(&ZOPN)          SETC  ' '                                         03459600
&ZOPO(&ZOPN)          SETC  'MVC'                                       03459700
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            03459800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQECB XREQECB'                      03459900
.*                                                                      03460000
.ZI72E                ANOP  ,                                           03460100
.*-------------------------------------------------------------------   03460200
.***AI.L23 ALET XREQTOKEN F                                             03460300
         AIF   ('&ZXREQTOKEN' EQ '').ZI75G                              03460400
         AIF   ('&SYSASCE' EQ 'P').ZI75G   SYSSTATE PRIMARY             03460500
&ZCLNG                SETC  '&XREQTOKEN'                                03460600
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI75E  IN AR                  03460700
.*                                                                      03460800
&ZCGPR                SETC  '14'                                        03460900
&ZOPN                 SETA  &ZOPN+1                                     03461000
&ZOPL(&ZOPN)          SETC  ' '                                         03461100
&ZOPO(&ZOPN)          SETC  'LAE'                                       03461200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03461300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03461400
                      AGO   .ZI75F                                      03461500
.*                                                                      03461600
.ZI75E                ANOP  ,                                           03461700
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           03461800
.*                                                                      03461900
.ZI75F                ANOP  ,                                           03462000
.*                                                                      03462100
&ZOPN                 SETA  &ZOPN+1                                     03462200
&ZOPL(&ZOPN)          SETC  ' '                                         03462300
&ZOPO(&ZOPN)          SETC  'STAM'                                      03462400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       03462500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03462600
.*                                                                      03462700
.ZI75G                ANOP  ,                                           03462800
.*-------------------------------------------------------------------   03462900
.***AI.L19  XREQTOKEN A                                                 03463000
                      AIF   ('&ZXREQTOKEN' EQ '').ZI76H                 03463100
&ZCLNG                SETC  '&XREQTOKEN'                                03463200
&ZCGPR                SETC  '14'                                        03463300
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI76F  IN GPR                 03463400
         AIF   ('&SYSASCE' NE 'P').ZI76G   SYSSTATE PRIMARY             03463500
.*                                                                      03463600
&ZOPN                 SETA  &ZOPN+1                                     03463700
&ZOPL(&ZOPN)          SETC  ' '                                         03463800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03463900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03464000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03464100
.*                                                                      03464200
                      AGO   .ZI76G                                      03464300
.*                                                                      03464400
.ZI76F                ANOP  ,                                           03464500
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           03464600
.*                                                                      03464700
.ZI76G                ANOP  ,                                           03464800
.*                                                                      03464900
&ZOPN                 SETA  &ZOPN+1                                     03465000
&ZOPL(&ZOPN)          SETC  ' '                                         03465100
&ZOPO(&ZOPN)          SETC  'ST'                                        03465200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             03465300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03465400
.*                                                                      03465500
.ZI76H                ANOP  ,                                           03465600
.*-------------------------------------------------------------------   03465700
.***AI.L18 ALET XLISTKEYAREA F                                          03465800
         AIF   ('&XLISTKEYAREA' NE 'NO').ZI78                           03465900
&ZXLISTKEYAREA        SETC  ''             RESET INPUT/OUTPUT           03466000
.ZI78                 ANOP  ,                                           03466100
.*-------------------------------------------------------------------   03466200
.***AI.L23 ALET XLISTKEYAREA F                                          03466300
         AIF   ('&ZXLISTKEYAREA' EQ '').ZI78G                           03466400
         AIF   ('&SYSASCE' EQ 'P').ZI78G   SYSSTATE PRIMARY             03466500
&ZCLNG                SETC  '&XLISTKEYAREA'                             03466600
         AIF   ('&XLISTKEYAREA'(1,1) EQ '(').ZI78E  IN AR               03466700
.*                                                                      03466800
&ZCGPR                SETC  '14'                                        03466900
&ZOPN                 SETA  &ZOPN+1                                     03467000
&ZOPL(&ZOPN)          SETC  ' '                                         03467100
&ZOPO(&ZOPN)          SETC  'LAE'                                       03467200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03467300
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03467400
                      AGO   .ZI78F                                      03467500
.*                                                                      03467600
.ZI78E                ANOP  ,                                           03467700
&ZCGPR   SETC  '&XLISTKEYAREA'(2,K'&XLISTKEYAREA-2)                     03467800
.*                                                                      03467900
.ZI78F                ANOP  ,                                           03468000
.*                                                                      03468100
&ZOPN                 SETA  &ZOPN+1                                     03468200
&ZOPL(&ZOPN)          SETC  ' '                                         03468300
&ZOPO(&ZOPN)          SETC  'STAM'                                      03468400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,72(1)'                       03468500
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03468600
.*                                                                      03468700
.ZI78G                ANOP  ,                                           03468800
.*-------------------------------------------------------------------   03468900
.***AI.L18  XLISTKEYAREA A                                              03469000
         AIF   ('&XLISTKEYAREA' NE 'NO').ZI79                           03469100
&ZXLISTKEYAREA        SETC  ''             RESET INPUT/OUTPUT           03469200
.ZI79                 ANOP  ,                                           03469300
.*-------------------------------------------------------------------   03469400
.***AI.L19  XLISTKEYAREA A                                              03469500
                      AIF   ('&ZXLISTKEYAREA' EQ '').ZI79H              03469600
&ZCLNG                SETC  '&XLISTKEYAREA'                             03469700
&ZCGPR                SETC  '14'                                        03469800
         AIF   ('&XLISTKEYAREA'(1,1) EQ '(').ZI79F  IN GPR              03469900
         AIF   ('&SYSASCE' NE 'P').ZI79G   SYSSTATE PRIMARY             03470000
.*                                                                      03470100
&ZOPN                 SETA  &ZOPN+1                                     03470200
&ZOPL(&ZOPN)          SETC  ' '                                         03470300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03470400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03470500
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03470600
.*                                                                      03470700
                      AGO   .ZI79G                                      03470800
.*                                                                      03470900
.ZI79F                ANOP  ,                                           03471000
&ZCGPR   SETC  '&XLISTKEYAREA'(2,K'&XLISTKEYAREA-2)                     03471100
.*                                                                      03471200
.ZI79G                ANOP  ,                                           03471300
.*                                                                      03471400
&ZOPN                 SETA  &ZOPN+1                                     03471500
&ZOPL(&ZOPN)          SETC  ' '                                         03471600
&ZOPO(&ZOPN)          SETC  'ST'                                        03471700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,76(,1)'                             03471800
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03471900
.*                                                                      03472000
.ZI79H                ANOP  ,                                           03472100
.*-------------------------------------------------------------------   03472200
.***AI.L05 XSHLFLGSA1 BL1                                               03472300
&ZW                   SETC  ''                                          03472400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03472500
.*-------------------------------------------------------------------   03472600
.***AI.L08 XSHLFLGSA1 "IXLLSTC"                                         03472700
.***      BL1'1XXXXXXX'                                                 03472800
&ZW                   SETC  '&ZW.0'                                     03472900
.*-------------------------------------------------------------------   03473000
.***AI.L08 XSHLFLGSA1 "IXLLSTE"                                         03473100
.***      BL1'X1XXXXXX'                                                 03473200
&ZW                   SETC  '&ZW.0'                                     03473300
.*-------------------------------------------------------------------   03473400
.***AI.L08 XSHLFLGSA1 "IXLLSTM"                                         03473500
.***      BL1'XX1XXXXX'                                                 03473600
&ZW                   SETC  '&ZW.100000'                                03473700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03473800
.*-------------------------------------------------------------------   03473900
.***AI.L11 XSHLFLGSA1 BL1                                               03474000
                      AIF   ('&ZCLNG' NE 'YES').ZI84E  ALL ZERO BITS    03474100
&ZOPN                 SETA  &ZOPN+1                                     03474200
&ZOPL(&ZOPN)          SETC  ' '                                         03474300
&ZOPO(&ZOPN)          SETC  'OI'                                        03474400
&ZOPV(&ZOPN)          SETC  '88(1),B''&ZW'''                            03474500
&ZOPD(&ZOPN)          SETC  '++ 1298 BL1'                               03474600
.ZI84E                ANOP  ,                                           03474700
.*-------------------------------------------------------------------   03474800
.***AI.L18  XEXTRESTOKEN CL16                                           03474900
         AIF   ('&XEXTRESTOKEN' NE 'NO_EXTRESTOKEN').ZI88               03475000
&ZXEXTRESTOKEN        SETC  ''             RESET INPUT/OUTPUT           03475100
.ZI88                 ANOP  ,                                           03475200
.*-------------------------------------------------------------------   03475300
.***AI.L25  XEXTRESTOKEN CL16                                           03475400
                      AIF   ('&ZXEXTRESTOKEN' EQ '').ZI88E              03475500
                      AIF   ('&ZXEXTRESTOKEN' EQ 'OUTPUT').ZI88E        03475600
&ZCGPR                SETC  '&XEXTRESTOKEN'                             03475700
.*                                                                      03475800
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZI88B         03475900
&ZCGPR   SETC  '0('.'&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2).')'            03476000
.ZI88B                ANOP  ,                                           03476100
.*                                                                      03476200
&ZOPN                 SETA  &ZOPN+1                                     03476300
&ZOPL(&ZOPN)          SETC  ' '                                         03476400
&ZOPO(&ZOPN)          SETC  'MVC'                                       03476500
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           03476600
&ZOPD(&ZOPN)          SETC  '++ &ZXEXTRESTOKEN XEXTRESTOKEN'            03476700
.*                                                                      03476800
.ZI88E                ANOP  ,                                           03476900
.*-------------------------------------------------------------------   03477000
.***AI.L25  XBUFNUM XL1                                                 03477100
                      AIF   ('&ZXBUFNUM' EQ '').ZI94E                   03477200
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI94E             03477300
&ZCGPR                SETC  '&XBUFNUM'                                  03477400
.*                                                                      03477500
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI94B              03477600
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      03477700
                      AGO   .ZI94D                                      03477800
.ZI94B                ANOP  ,                                           03477900
.*                                                                      03478000
&ZC                   SETC  '&XBUFNUM'(1,1)                             03478100
                      AIF   (T'&ZC NE 'N').ZI94D                        03478200
&ZC                   SETC  '&XBUFNUM'                                  03478300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI94D               03478400
&ZCGPR                SETC  '=AL1(&XBUFNUM)'                            03478500
.*                                                                      03478600
.ZI94D                ANOP  ,                                           03478700
.*                                                                      03478800
&ZOPN                 SETA  &ZOPN+1                                     03478900
&ZOPL(&ZOPN)          SETC  ' '                                         03479000
&ZOPO(&ZOPN)          SETC  'MVC'                                       03479100
&ZOPV(&ZOPN)          SETC  '98(1,1),&ZCGPR'                            03479200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      03479300
.*                                                                      03479400
.ZI94E                ANOP  ,                                           03479500
.*-------------------------------------------------------------------   03479600
.***AI.L25  XBUFINCRNUM XL1                                             03479700
                      AIF   ('&ZXBUFINCRNUM' EQ '').ZI95E               03479800
                      AIF   ('&ZXBUFINCRNUM' EQ 'OUTPUT').ZI95E         03479900
&ZCGPR                SETC  '&XBUFINCRNUM'                              03480000
.*                                                                      03480100
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZI95B          03480200
&ZCGPR   SETC  '0('.'&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2).')'              03480300
                      AGO   .ZI95D                                      03480400
.ZI95B                ANOP  ,                                           03480500
.*                                                                      03480600
&ZC                   SETC  '&XBUFINCRNUM'(1,1)                         03480700
                      AIF   (T'&ZC NE 'N').ZI95D                        03480800
&ZC                   SETC  '&XBUFINCRNUM'                              03480900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI95D               03481000
&ZCGPR                SETC  '=AL1(&XBUFINCRNUM)'                        03481100
.*                                                                      03481200
.ZI95D                ANOP  ,                                           03481300
.*                                                                      03481400
&ZOPN                 SETA  &ZOPN+1                                     03481500
&ZOPL(&ZOPN)          SETC  ' '                                         03481600
&ZOPO(&ZOPN)          SETC  'MVC'                                       03481700
&ZOPV(&ZOPN)          SETC  '99(1,1),&ZCGPR'                            03481800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFINCRNUM XBUFINCRNUM'              03481900
.*                                                                      03482000
.ZI95E                ANOP  ,                                           03482100
.*-------------------------------------------------------------------   03482200
.***AI.L18  XLOCKINDEX F                                                03482300
         AIF   ('&XLOCKINDEX' NE 'NO_LOCKINDEX').ZI103                  03482400
&ZXLOCKINDEX          SETC  ''             RESET INPUT/OUTPUT           03482500
.ZI103                ANOP  ,                                           03482600
.*-------------------------------------------------------------------   03482700
.***AI.L25  XLOCKINDEX F                                                03482800
                      AIF   ('&ZXLOCKINDEX' EQ '').ZI103E               03482900
                      AIF   ('&ZXLOCKINDEX' EQ 'OUTPUT').ZI103E         03483000
&ZCGPR                SETC  '&XLOCKINDEX'                               03483100
.*                                                                      03483200
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZI103B          03483300
&ZCGPR   SETC  '0('.'&XLOCKINDEX'(2,K'&XLOCKINDEX-2).')'                03483400
                      AGO   .ZI103D                                     03483500
.ZI103B               ANOP  ,                                           03483600
.*                                                                      03483700
&ZC                   SETC  '&XLOCKINDEX'(1,1)                          03483800
                      AIF   (T'&ZC NE 'N').ZI103D                       03483900
&ZC                   SETC  '&XLOCKINDEX'                               03484000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI103D              03484100
&ZCGPR                SETC  '=FL4''&XLOCKINDEX'''                       03484200
.*                                                                      03484300
.ZI103D               ANOP  ,                                           03484400
.*                                                                      03484500
&ZOPN                 SETA  &ZOPN+1                                     03484600
&ZOPL(&ZOPN)          SETC  ' '                                         03484700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03484800
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           03484900
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKINDEX XLOCKINDEX'                03485000
.*                                                                      03485100
.ZI103E               ANOP  ,                                           03485200
.*-------------------------------------------------------------------   03485300
.***AI.L25  XLISTNUM F                                                  03485400
                      AIF   ('&ZXLISTNUM' EQ '').ZI104E                 03485500
                      AIF   ('&ZXLISTNUM' EQ 'OUTPUT').ZI104E           03485600
&ZCGPR                SETC  '&XLISTNUM'                                 03485700
.*                                                                      03485800
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZI104B            03485900
&ZCGPR   SETC  '0('.'&XLISTNUM'(2,K'&XLISTNUM-2).')'                    03486000
                      AGO   .ZI104D                                     03486100
.ZI104B               ANOP  ,                                           03486200
.*                                                                      03486300
&ZC                   SETC  '&XLISTNUM'(1,1)                            03486400
                      AIF   (T'&ZC NE 'N').ZI104D                       03486500
&ZC                   SETC  '&XLISTNUM'                                 03486600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI104D              03486700
&ZCGPR                SETC  '=AL4(&XLISTNUM)'                           03486800
.*                                                                      03486900
.ZI104D               ANOP  ,                                           03487000
.*                                                                      03487100
&ZOPN                 SETA  &ZOPN+1                                     03487200
&ZOPL(&ZOPN)          SETC  ' '                                         03487300
&ZOPO(&ZOPN)          SETC  'MVC'                                       03487400
&ZOPV(&ZOPN)          SETC  '116(4,1),&ZCGPR'                           03487500
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUM XLISTNUM'                    03487600
.*                                                                      03487700
.ZI104E               ANOP  ,                                           03487800
.*-------------------------------------------------------------------   03487900
.***AI.L25  XENTRYID CL12                                               03488000
                      AIF   ('&ZXENTRYID' EQ '').ZI105E                 03488100
                      AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZI105E           03488200
&ZCGPR                SETC  '&XENTRYID'                                 03488300
.*                                                                      03488400
                      AIF   ('&XENTRYID'(1,1) NE '(').ZI105B            03488500
&ZCGPR   SETC  '0('.'&XENTRYID'(2,K'&XENTRYID-2).')'                    03488600
.ZI105B               ANOP  ,                                           03488700
.*                                                                      03488800
&ZOPN                 SETA  &ZOPN+1                                     03488900
&ZOPL(&ZOPN)          SETC  ' '                                         03489000
&ZOPO(&ZOPN)          SETC  'MVC'                                       03489100
&ZOPV(&ZOPN)          SETC  '120(12,1),&ZCGPR'                          03489200
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYID XENTRYID'                    03489300
.*                                                                      03489400
.ZI105E               ANOP  ,                                           03489500
.*-------------------------------------------------------------------   03489600
.***AI.L25  XVERSCOMP CL8                                               03489700
                      AIF   ('&ZXVERSCOMP' EQ '').ZI107E                03489800
                      AIF   ('&ZXVERSCOMP' EQ 'OUTPUT').ZI107E          03489900
&ZCGPR                SETC  '&XVERSCOMP'                                03490000
.*                                                                      03490100
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZI107B           03490200
&ZCGPR   SETC  '0('.'&XVERSCOMP'(2,K'&XVERSCOMP-2).')'                  03490300
.ZI107B               ANOP  ,                                           03490400
.*                                                                      03490500
&ZOPN                 SETA  &ZOPN+1                                     03490600
&ZOPL(&ZOPN)          SETC  ' '                                         03490700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03490800
&ZOPV(&ZOPN)          SETC  '140(8,1),&ZCGPR'                           03490900
&ZOPD(&ZOPN)          SETC  '++ &ZXVERSCOMP XVERSCOMP'                  03491000
.*                                                                      03491100
.ZI107E               ANOP  ,                                           03491200
.*-------------------------------------------------------------------   03491300
.***AI.L25  XKEYRANGEEND CL16                                           03491400
                      AIF   ('&ZXKEYRANGEEND' EQ '').ZI114E             03491500
                      AIF   ('&ZXKEYRANGEEND' EQ 'OUTPUT').ZI114E       03491600
&ZCGPR                SETC  '&XKEYRANGEEND'                             03491700
.*                                                                      03491800
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZI114B        03491900
&ZCGPR   SETC  '0('.'&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2).')'            03492000
.ZI114B               ANOP  ,                                           03492100
.*                                                                      03492200
&ZOPN                 SETA  &ZOPN+1                                     03492300
&ZOPL(&ZOPN)          SETC  ' '                                         03492400
&ZOPO(&ZOPN)          SETC  'MVC'                                       03492500
&ZOPV(&ZOPN)          SETC  '196(16,1),&ZCGPR'                          03492600
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYRANGEEND XKEYRANGEEND'            03492700
.*                                                                      03492800
.ZI114E               ANOP  ,                                           03492900
.*-------------------------------------------------------------------   03493000
.***AI.L05 XCMDFLGS1B BL1                                               03493100
&ZW                   SETC  ''                                          03493200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03493300
.*-------------------------------------------------------------------   03493400
.***AI.L08 XCMDFLGS1B "YES"                                             03493500
.***      BL1'XXXX1XXX'                                                 03493600
         AIF   ('&XKEYCOMPARE' NE 'YES').ZI118A                         03493700
&ZW                   SETC  '&ZW.00001'                                 03493800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03493900
                      AGO   .ZI118C                                     03494000
.*                                                                      03494100
.ZI118A               ANOP  ,                                           03494200
&ZW                   SETC  '&ZW.00000'                                 03494300
.ZI118C               ANOP  ,                                           03494400
.*-------------------------------------------------------------------   03494500
.***AI.L08 XCMDFLGS1B "LESSOREQUAL"                                     03494600
.***      BL1'XXXXX1XX'                                                 03494700
         AIF   ('&XVERSCOMPTYPE' NE 'LESSOREQUAL').ZI119A               03494800
&ZW                   SETC  '&ZW.1'                                     03494900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03495000
                      AGO   .ZI119C                                     03495100
.*                                                                      03495200
.ZI119A               ANOP  ,                                           03495300
&ZW                   SETC  '&ZW.0'                                     03495400
.ZI119C               ANOP  ,                                           03495500
.*-------------------------------------------------------------------   03495600
.***AI.L08 XCMDFLGS1B "GREATEROREQUAL"                                  03495700
.***      BL1'XXXXXX1X'                                                 03495800
         AIF   ('&XKEYREQTYPE' NE 'GREATEROREQUAL').ZI120A              03495900
&ZW                   SETC  '&ZW.1'                                     03496000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03496100
                      AGO   .ZI120C                                     03496200
.*                                                                      03496300
.ZI120A               ANOP  ,                                           03496400
&ZW                   SETC  '&ZW.0'                                     03496500
.ZI120C               ANOP  ,                                           03496600
.*-------------------------------------------------------------------   03496700
.***AI.L08 XCMDFLGS1B "LESSOREQUAL"                                     03496800
.***      BL1'XXXXXXX1'                                                 03496900
         AIF   ('&XKEYREQTYPE' NE 'LESSOREQUAL').ZI121A                 03497000
&ZW                   SETC  '&ZW.1'                                     03497100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03497200
                      AGO   .ZI121C                                     03497300
.*                                                                      03497400
.ZI121A               ANOP  ,                                           03497500
&ZW                   SETC  '&ZW.0'                                     03497600
.ZI121C               ANOP  ,                                           03497700
.*-------------------------------------------------------------------   03497800
.***AI.L11 XCMDFLGS1B BL1                                               03497900
                      AIF   ('&ZCLNG' NE 'YES').ZI121E  ALL ZERO BITS   03498000
&ZOPN                 SETA  &ZOPN+1                                     03498100
&ZOPL(&ZOPN)          SETC  ' '                                         03498200
&ZOPO(&ZOPN)          SETC  'OI'                                        03498300
&ZOPV(&ZOPN)          SETC  '105(1),B''&ZW'''                           03498400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03498500
.ZI121E               ANOP  ,                                           03498600
.*-------------------------------------------------------------------   03498700
.***AI.L05 XCMDFLGS1C BL1                                               03498800
&ZW                   SETC  ''                                          03498900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03499000
.*-------------------------------------------------------------------   03499100
.***AI.L08 XCMDFLGS1C "TAILTOHEAD"                                      03499200
.***      BL1'1XXXXXXX'                                                 03499300
         AIF   ('&XDIRECTION' NE 'TAILTOHEAD').ZI123A                   03499400
&ZW                   SETC  '&ZW.1'                                     03499500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03499600
                      AGO   .ZI123C                                     03499700
.*                                                                      03499800
.ZI123A               ANOP  ,                                           03499900
&ZW                   SETC  '&ZW.0'                                     03500000
.ZI123C               ANOP  ,                                           03500100
.*-------------------------------------------------------------------   03500200
.***AI.L08 XCMDFLGS1C "BYENTRY"                                         03500300
.***      BL1'X1XXXXXX'                                                 03500400
         AIF   ('&XVERSCOMPARE' NE 'BYENTRY').ZI124A                    03500500
&ZW                   SETC  '&ZW.1'                                     03500600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03500700
                      AGO   .ZI124C                                     03500800
.*                                                                      03500900
.ZI124A               ANOP  ,                                           03501000
&ZW                   SETC  '&ZW.0'                                     03501100
.ZI124C               ANOP  ,                                           03501200
.*-------------------------------------------------------------------   03501300
.***AI.L08 XCMDFLGS1C "HALT"                                            03501400
.***      BL1'XX1XXXXX'                                                 03501500
         AIF   ('&XMISCOMPARE' NE 'HALT').ZI125A                        03501600
&ZW                   SETC  '&ZW.1'                                     03501700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03501800
                      AGO   .ZI125C                                     03501900
.*                                                                      03502000
.ZI125A               ANOP  ,                                           03502100
&ZW                   SETC  '&ZW.0'                                     03502200
.ZI125C               ANOP  ,                                           03502300
.*-------------------------------------------------------------------   03502400
.***AI.L08 XCMDFLGS1C "NAMELIST"                                        03502500
.***      BL1'XXX1XXXX'                                                 03502600
         AIF   ('&XLISTTYPE' NE 'NAMELIST').ZI126A                      03502700
&ZW                   SETC  '&ZW.1'                                     03502800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03502900
                      AGO   .ZI126C                                     03503000
.*                                                                      03503100
.ZI126A               ANOP  ,                                           03503200
&ZW                   SETC  '&ZW.0'                                     03503300
.ZI126C               ANOP  ,                                           03503400
.*-------------------------------------------------------------------   03503500
.***AI.L08 XCMDFLGS1C "YES"                                             03503600
.***      BL1'XXXX1XXX'                                                 03503700
         AIF   ('&XLISTCOMPARE' NE 'YES').ZI127A                        03503800
&ZW                   SETC  '&ZW.1'                                     03503900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03504000
                      AGO   .ZI127C                                     03504100
.*                                                                      03504200
.ZI127A               ANOP  ,                                           03504300
&ZW                   SETC  '&ZW.0'                                     03504400
.ZI127C               ANOP  ,                                           03504500
.*-------------------------------------------------------------------   03504600
.***AI.L08 XCMDFLGS1C "YES"                                             03504700
.***      BL1'XXXXX1XX'                                                 03504800
         AIF   ('&XVERSCOMPARE' NE 'YES').ZI128A                        03504900
&ZW                   SETC  '&ZW.100'                                   03505000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03505100
                      AGO   .ZI128C                                     03505200
.*                                                                      03505300
.ZI128A               ANOP  ,                                           03505400
&ZW                   SETC  '&ZW.000'                                   03505500
.ZI128C               ANOP  ,                                           03505600
.*-------------------------------------------------------------------   03505700
.***AI.L11 XCMDFLGS1C BL1                                               03505800
                      AIF   ('&ZCLNG' NE 'YES').ZI128E  ALL ZERO BITS   03505900
&ZOPN                 SETA  &ZOPN+1                                     03506000
&ZOPL(&ZOPN)          SETC  ' '                                         03506100
&ZOPO(&ZOPN)          SETC  'OI'                                        03506200
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           03506300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03506400
.ZI128E               ANOP  ,                                           03506500
.*-------------------------------------------------------------------   03506600
.***AI.L05 XCMDFLGS1C1 BL1                                              03506700
&ZW                   SETC  ''                                          03506800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03506900
.*-------------------------------------------------------------------   03507000
.***AI.L08 XCMDFLGS1C1 "CURSOR"                                         03507100
.***      BL1'X1XXXXXX'                                                 03507200
         AIF   ('&XLOCATOR' NE 'CURSOR').ZI131A                         03507300
&ZW                   SETC  '&ZW.01'                                    03507400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03507500
                      AGO   .ZI131C                                     03507600
.*                                                                      03507700
.ZI131A               ANOP  ,                                           03507800
&ZW                   SETC  '&ZW.00'                                    03507900
.ZI131C               ANOP  ,                                           03508000
.*-------------------------------------------------------------------   03508100
.***AI.L08 XCMDFLGS1C1 "ENTRYID"                                        03508200
.***      BL1'XX1XXXXX'                                                 03508300
         AIF   ('&XLOCATOR' NE 'ENTRYID').ZI132A                        03508400
&ZW                   SETC  '&ZW.1'                                     03508500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03508600
                      AGO   .ZI132C                                     03508700
.*                                                                      03508800
.ZI132A               ANOP  ,                                           03508900
&ZW                   SETC  '&ZW.0'                                     03509000
.ZI132C               ANOP  ,                                           03509100
.*-------------------------------------------------------------------   03509200
.***AI.L08 XCMDFLGS1C1 "KEYPOS"                                         03509300
.***      BL1'XXX1XXXX'                                                 03509400
         AIF   ('&XLOCATOR' NE 'KEYPOS').ZI133A                         03509500
&ZW                   SETC  '&ZW.10000'                                 03509600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03509700
                      AGO   .ZI133C                                     03509800
.*                                                                      03509900
.ZI133A               ANOP  ,                                           03510000
&ZW                   SETC  '&ZW.00000'                                 03510100
.ZI133C               ANOP  ,                                           03510200
.*-------------------------------------------------------------------   03510300
.***AI.L11 XCMDFLGS1C1 BL1                                              03510400
                      AIF   ('&ZCLNG' NE 'YES').ZI133E  ALL ZERO BITS   03510500
&ZOPN                 SETA  &ZOPN+1                                     03510600
&ZOPL(&ZOPN)          SETC  ' '                                         03510700
&ZOPO(&ZOPN)          SETC  'OI'                                        03510800
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           03510900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03511000
.ZI133E               ANOP  ,                                           03511100
.*-------------------------------------------------------------------   03511200
.***AI.L05 XCMDFLGS1D BL1                                               03511300
&ZW                   SETC  ''                                          03511400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03511500
.*-------------------------------------------------------------------   03511600
.***AI.L08 XCMDFLGS1D "TARGETKEY"                                       03511700
.***      BL1'1XXXXXXX'                                                 03511800
         AIF   ('&XMOVETOSKEY' NE 'TARGETKEY').ZI135A                   03511900
&ZW                   SETC  '&ZW.1'                                     03512000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03512100
                      AGO   .ZI135C                                     03512200
.*                                                                      03512300
.ZI135A               ANOP  ,                                           03512400
&ZW                   SETC  '&ZW.0'                                     03512500
.ZI135C               ANOP  ,                                           03512600
.*-------------------------------------------------------------------   03512700
.***AI.L08 XCMDFLGS1D "TARGETKEY"                                       03512800
.***      BL1'X1XXXXXX'                                                 03512900
         AIF   ('&XMOVETOKEY' NE 'TARGETKEY').ZI136A                    03513000
&ZW                   SETC  '&ZW.1'                                     03513100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03513200
                      AGO   .ZI136C                                     03513300
.*                                                                      03513400
.ZI136A               ANOP  ,                                           03513500
&ZW                   SETC  '&ZW.0'                                     03513600
.ZI136C               ANOP  ,                                           03513700
.*-------------------------------------------------------------------   03513800
.***AI.L09 XCMDFLGS1D "ECONTROLS"                                       03513900
.***      BL1'XXX1XXXX'                                                 03514000
&ZI                   SETA  0              RESET ARRAY INDEX            03514100
.ZI137A               ANOP  ,                                           03514200
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             03514300
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI137B                 03514400
         AIF   ('&XTYPE(&ZI)' NE 'ECONTROLS').ZI137A                    03514500
&ZW                   SETC  '&ZW.01'                                    03514600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03514700
                      AGO   .ZI137C                                     03514800
.*                                                                      03514900
.ZI137B               ANOP  ,                                           03515000
&ZW                   SETC  '&ZW.00'                                    03515100
.ZI137C               ANOP  ,                                           03515200
.*-------------------------------------------------------------------   03515300
.***AI.L09 XCMDFLGS1D "ENTDATA"                                         03515400
.***      BL1'XXXX1XXX'                                                 03515500
&ZI                   SETA  0              RESET ARRAY INDEX            03515600
.ZI138A               ANOP  ,                                           03515700
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             03515800
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI138B                 03515900
         AIF   ('&XTYPE(&ZI)' NE 'ENTDATA').ZI138A                      03516000
&ZW                   SETC  '&ZW.1'                                     03516100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03516200
                      AGO   .ZI138C                                     03516300
.*                                                                      03516400
.ZI138B               ANOP  ,                                           03516500
&ZW                   SETC  '&ZW.0'                                     03516600
.ZI138C               ANOP  ,                                           03516700
.*-------------------------------------------------------------------   03516800
.***AI.L09 XCMDFLGS1D "ADJDATA"                                         03516900
.***      BL1'XXXXX1XX'                                                 03517000
&ZI                   SETA  0              RESET ARRAY INDEX            03517100
.ZI139A               ANOP  ,                                           03517200
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             03517300
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI139B                 03517400
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').ZI139A                      03517500
&ZW                   SETC  '&ZW.100'                                   03517600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03517700
                      AGO   .ZI139C                                     03517800
.*                                                                      03517900
.ZI139B               ANOP  ,                                           03518000
&ZW                   SETC  '&ZW.000'                                   03518100
.ZI139C               ANOP  ,                                           03518200
.*-------------------------------------------------------------------   03518300
.***AI.L11 XCMDFLGS1D BL1                                               03518400
                      AIF   ('&ZCLNG' NE 'YES').ZI139E  ALL ZERO BITS   03518500
&ZOPN                 SETA  &ZOPN+1                                     03518600
&ZOPL(&ZOPN)          SETC  ' '                                         03518700
&ZOPO(&ZOPN)          SETC  'OI'                                        03518800
&ZOPV(&ZOPN)          SETC  '107(1),B''&ZW'''                           03518900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03519000
.ZI139E               ANOP  ,                                           03519100
.*-------------------------------------------------------------------   03519200
.***AI.L25  XENTRYNAME CL16                                             03519300
                      AIF   ('&ZXENTRYNAME' EQ '').ZI141E               03519400
                      AIF   ('&ZXENTRYNAME' EQ 'OUTPUT').ZI141E         03519500
&ZCGPR                SETC  '&XENTRYNAME'                               03519600
.*                                                                      03519700
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZI141B          03519800
&ZCGPR   SETC  '0('.'&XENTRYNAME'(2,K'&XENTRYNAME-2).')'                03519900
.ZI141B               ANOP  ,                                           03520000
.*                                                                      03520100
&ZOPN                 SETA  &ZOPN+1                                     03520200
&ZOPL(&ZOPN)          SETC  ' '                                         03520300
&ZOPO(&ZOPN)          SETC  'MVC'                                       03520400
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          03520500
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYNAME XENTRYNAME'                03520600
.*                                                                      03520700
.ZI141E               ANOP  ,                                           03520800
.*-------------------------------------------------------------------   03520900
.***AI.L25  XENTRYKEY CL16                                              03521000
                      AIF   ('&ZXENTRYKEY' EQ '').ZI143E                03521100
                      AIF   ('&ZXENTRYKEY' EQ 'OUTPUT').ZI143E          03521200
&ZCGPR                SETC  '&XENTRYKEY'                                03521300
.*                                                                      03521400
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZI143B           03521500
&ZCGPR   SETC  '0('.'&XENTRYKEY'(2,K'&XENTRYKEY-2).')'                  03521600
.ZI143B               ANOP  ,                                           03521700
.*                                                                      03521800
&ZOPN                 SETA  &ZOPN+1                                     03521900
&ZOPL(&ZOPN)          SETC  ' '                                         03522000
&ZOPO(&ZOPN)          SETC  'MVC'                                       03522100
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          03522200
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYKEY XENTRYKEY'                  03522300
.*                                                                      03522400
.ZI143E               ANOP  ,                                           03522500
.*-------------------------------------------------------------------   03522600
.***AI.L25  XFIRSTELEM XL2                                              03522700
                      AIF   ('&ZXFIRSTELEM' EQ '').ZI145E               03522800
                      AIF   ('&ZXFIRSTELEM' EQ 'OUTPUT').ZI145E         03522900
&ZCGPR                SETC  '&XFIRSTELEM'                               03523000
.*                                                                      03523100
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZI145B          03523200
&ZCGPR   SETC  '0('.'&XFIRSTELEM'(2,K'&XFIRSTELEM-2).')'                03523300
                      AGO   .ZI145D                                     03523400
.ZI145B               ANOP  ,                                           03523500
.*                                                                      03523600
&ZC                   SETC  '&XFIRSTELEM'(1,1)                          03523700
                      AIF   (T'&ZC NE 'N').ZI145D                       03523800
&ZC                   SETC  '&XFIRSTELEM'                               03523900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI145D              03524000
&ZCGPR                SETC  '=AL2(&XFIRSTELEM)'                         03524100
.*                                                                      03524200
.ZI145D               ANOP  ,                                           03524300
.*                                                                      03524400
&ZOPN                 SETA  &ZOPN+1                                     03524500
&ZOPL(&ZOPN)          SETC  ' '                                         03524600
&ZOPO(&ZOPN)          SETC  'MVC'                                       03524700
&ZOPV(&ZOPN)          SETC  '164(2,1),&ZCGPR'                           03524800
&ZOPD(&ZOPN)          SETC  '++ &ZXFIRSTELEM XFIRSTELEM'                03524900
.*                                                                      03525000
.ZI145E               ANOP  ,                                           03525100
.*-------------------------------------------------------------------   03525200
.***AI.L25  XLASTELEM XL2                                               03525300
                      AIF   ('&ZXLASTELEM' EQ '').ZI146E                03525400
                      AIF   ('&ZXLASTELEM' EQ 'OUTPUT').ZI146E          03525500
&ZCGPR                SETC  '&XLASTELEM'                                03525600
.*                                                                      03525700
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZI146B           03525800
&ZCGPR   SETC  '0('.'&XLASTELEM'(2,K'&XLASTELEM-2).')'                  03525900
                      AGO   .ZI146D                                     03526000
.ZI146B               ANOP  ,                                           03526100
.*                                                                      03526200
&ZC                   SETC  '&XLASTELEM'(1,1)                           03526300
                      AIF   (T'&ZC NE 'N').ZI146D                       03526400
&ZC                   SETC  '&XLASTELEM'                                03526500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI146D              03526600
&ZCGPR                SETC  '=AL2(&XLASTELEM)'                          03526700
.*                                                                      03526800
.ZI146D               ANOP  ,                                           03526900
.*                                                                      03527000
&ZOPN                 SETA  &ZOPN+1                                     03527100
&ZOPL(&ZOPN)          SETC  ' '                                         03527200
&ZOPO(&ZOPN)          SETC  'MVC'                                       03527300
&ZOPV(&ZOPN)          SETC  '166(2,1),&ZCGPR'                           03527400
&ZOPD(&ZOPN)          SETC  '++ &ZXLASTELEM XLASTELEM'                  03527500
.*                                                                      03527600
.ZI146E               ANOP  ,                                           03527700
.*-------------------------------------------------------------------   03527800
.***AI.L18  XRESTOKEN CL8                                               03527900
         AIF   ('&XRESTOKEN' NE 'NO_RESTOKEN').ZI148                    03528000
&ZXRESTOKEN           SETC  ''             RESET INPUT/OUTPUT           03528100
.ZI148                ANOP  ,                                           03528200
.*-------------------------------------------------------------------   03528300
.***AI.L25  XRESTOKEN CL8                                               03528400
                      AIF   ('&ZXRESTOKEN' EQ '').ZI148E                03528500
                      AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZI148E          03528600
&ZCGPR                SETC  '&XRESTOKEN'                                03528700
.*                                                                      03528800
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZI148B           03528900
&ZCGPR   SETC  '0('.'&XRESTOKEN'(2,K'&XRESTOKEN-2).')'                  03529000
.ZI148B               ANOP  ,                                           03529100
.*                                                                      03529200
&ZOPN                 SETA  &ZOPN+1                                     03529300
&ZOPL(&ZOPN)          SETC  ' '                                         03529400
&ZOPO(&ZOPN)          SETC  'MVC'                                       03529500
&ZOPV(&ZOPN)          SETC  '164(8,1),&ZCGPR'                           03529600
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTOKEN XRESTOKEN'                  03529700
.*                                                                      03529800
.ZI148E               ANOP  ,                                           03529900
.*-------------------------------------------------------------------   03530000
.***AI.L05 XCMDFLGS2A BL1                                               03530100
&ZW                   SETC  ''                                          03530200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03530300
.*-------------------------------------------------------------------   03530400
.***AI.L08 XCMDFLGS2A "LISTKEY"                                         03530500
.***      BL1'X1XXXXXX'                                                 03530600
         AIF   ('&XMOVETOKEY' NE 'LISTKEY').ZI151A                      03530700
&ZW                   SETC  '&ZW.01'                                    03530800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03530900
                      AGO   .ZI151C                                     03531000
.*                                                                      03531100
.ZI151A               ANOP  ,                                           03531200
&ZW                   SETC  '&ZW.00'                                    03531300
.ZI151C               ANOP  ,                                           03531400
.*-------------------------------------------------------------------   03531500
.***AI.L08 XCMDFLGS2A "LISTKEYINC"                                      03531600
.***      BL1'XX1XXXXX'                                                 03531700
         AIF   ('&LISTKEYINC' EQ '').ZI152A                             03531800
&ZW                   SETC  '&ZW.1'                                     03531900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03532000
                      AGO   .ZI152C                                     03532100
.*                                                                      03532200
.ZI152A               ANOP  ,                                           03532300
&ZW                   SETC  '&ZW.0'                                     03532400
.ZI152C               ANOP  ,                                           03532500
.*-------------------------------------------------------------------   03532600
.***AI.L08 XCMDFLGS2A "LESSOREQUAL"                                     03532700
.***      BL1'XXXX1XXX'                                                 03532800
         AIF   ('&XAUTHCOMPTYPE' NE 'LESSOREQUAL').ZI153A               03532900
&ZW                   SETC  '&ZW.01'                                    03533000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03533100
                      AGO   .ZI153C                                     03533200
.*                                                                      03533300
.ZI153A               ANOP  ,                                           03533400
&ZW                   SETC  '&ZW.00'                                    03533500
.ZI153C               ANOP  ,                                           03533600
.*-------------------------------------------------------------------   03533700
.***AI.L08 XCMDFLGS2A "EQUAL"                                           03533800
.***      BL1'XXXXX1XX'                                                 03533900
         AIF   ('&XAUTHCOMPTYPE' NE 'EQUAL').ZI154A                     03534000
&ZW                   SETC  '&ZW.100'                                   03534100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03534200
                      AGO   .ZI154C                                     03534300
.*                                                                      03534400
.ZI154A               ANOP  ,                                           03534500
&ZW                   SETC  '&ZW.000'                                   03534600
.ZI154C               ANOP  ,                                           03534700
.*-------------------------------------------------------------------   03534800
.***AI.L11 XCMDFLGS2A BL1                                               03534900
                      AIF   ('&ZCLNG' NE 'YES').ZI154E  ALL ZERO BITS   03535000
&ZOPN                 SETA  &ZOPN+1                                     03535100
&ZOPL(&ZOPN)          SETC  ' '                                         03535200
&ZOPO(&ZOPN)          SETC  'OI'                                        03535300
&ZOPV(&ZOPN)          SETC  '176(1),B''&ZW'''                           03535400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03535500
.ZI154E               ANOP  ,                                           03535600
.*-------------------------------------------------------------------   03535700
.***AI.L05 XCMDFLGS2B BL1                                               03535800
&ZW                   SETC  ''                                          03535900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03536000
.*-------------------------------------------------------------------   03536100
.***AI.L08 XCMDFLGS2B "SECONDARY"                                       03536200
.***      BL1'1XXXXXXX'                                                 03536300
         AIF   ('&XKEYTYPE' NE 'SECONDARY').ZI156A                      03536400
&ZW                   SETC  '&ZW.1'                                     03536500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03536600
                      AGO   .ZI156C                                     03536700
.*                                                                      03536800
.ZI156A               ANOP  ,                                           03536900
&ZW                   SETC  '&ZW.0'                                     03537000
.ZI156C               ANOP  ,                                           03537100
.*-------------------------------------------------------------------   03537200
.***AI.L08 XCMDFLGS2B "YES"                                             03537300
.***      BL1'XX1XXXXX'                                                 03537400
         AIF   ('&XSKEYCOMPARE' NE 'YES').ZI157A                        03537500
&ZW                   SETC  '&ZW.01'                                    03537600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03537700
                      AGO   .ZI157C                                     03537800
.*                                                                      03537900
.ZI157A               ANOP  ,                                           03538000
&ZW                   SETC  '&ZW.00'                                    03538100
.ZI157C               ANOP  ,                                           03538200
.*-------------------------------------------------------------------   03538300
.***AI.L08 XCMDFLGS2B "GREATEROREQUAL"                                  03538400
.***      BL1'XXX1XXXX'                                                 03538500
         AIF   ('&XSKEYREQTYPE' NE 'GREATEROREQUAL').ZI158A             03538600
&ZW                   SETC  '&ZW.1'                                     03538700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03538800
                      AGO   .ZI158C                                     03538900
.*                                                                      03539000
.ZI158A               ANOP  ,                                           03539100
&ZW                   SETC  '&ZW.0'                                     03539200
.ZI158C               ANOP  ,                                           03539300
.*-------------------------------------------------------------------   03539400
.***AI.L08 XCMDFLGS2B "LESSOREQUAL"                                     03539500
.***      BL1'XXXX1XXX'                                                 03539600
         AIF   ('&XSKEYREQTYPE' NE 'LESSOREQUAL').ZI159A                03539700
&ZW                   SETC  '&ZW.1'                                     03539800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03539900
                      AGO   .ZI159C                                     03540000
.*                                                                      03540100
.ZI159A               ANOP  ,                                           03540200
&ZW                   SETC  '&ZW.0'                                     03540300
.ZI159C               ANOP  ,                                           03540400
.*-------------------------------------------------------------------   03540500
.***AI.L08 XCMDFLGS2B "SECONDARY"                                       03540600
.***      BL1'XXXXX1XX'                                                 03540700
         AIF   ('&XKEYSCANTYPE' NE 'SECONDARY').ZI160A                  03540800
&ZW                   SETC  '&ZW.100'                                   03540900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03541000
                      AGO   .ZI160C                                     03541100
.*                                                                      03541200
.ZI160A               ANOP  ,                                           03541300
&ZW                   SETC  '&ZW.000'                                   03541400
.ZI160C               ANOP  ,                                           03541500
.*-------------------------------------------------------------------   03541600
.***AI.L11 XCMDFLGS2B BL1                                               03541700
                      AIF   ('&ZCLNG' NE 'YES').ZI160E  ALL ZERO BITS   03541800
&ZOPN                 SETA  &ZOPN+1                                     03541900
&ZOPL(&ZOPN)          SETC  ' '                                         03542000
&ZOPO(&ZOPN)          SETC  'OI'                                        03542100
&ZOPV(&ZOPN)          SETC  '177(1),B''&ZW'''                           03542200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03542300
.ZI160E               ANOP  ,                                           03542400
.*-------------------------------------------------------------------   03542500
.***AI.LVER01                                                           03542600
                      AIF  (&XPLISTVER LT 1).ZI163Z                     03542700
.*-------------------------------------------------------------------   03542800
.***AI.LVER02                                                           03542900
.ZI163Z               ANOP  ,                                           03543000
.*-------------------------------------------------------------------   03543100
.***AI.LVER01                                                           03543200
                      AIF  (&XPLISTVER LT 1).ZI164Z                     03543300
.*-------------------------------------------------------------------   03543400
.***AI.LVER02                                                           03543500
.ZI164Z               ANOP  ,                                           03543600
.*-------------------------------------------------------------------   03543700
.***AI.LVER01                                                           03543800
                      AIF  (&XPLISTVER LT 1).ZI165Z                     03543900
.*-------------------------------------------------------------------   03544000
.***AI.LVER02                                                           03544100
.ZI165Z               ANOP  ,                                           03544200
.*-------------------------------------------------------------------   03544300
.***AI.LVER01                                                           03544400
                      AIF  (&XPLISTVER LT 1).ZI166Z                     03544500
.*-------------------------------------------------------------------   03544600
.***AI.LVER02                                                           03544700
.ZI166Z               ANOP  ,                                           03544800
.*-------------------------------------------------------------------   03544900
.***AI.LVER01                                                           03545000
                      AIF  (&XPLISTVER LT 1).ZI167Z                     03545100
.*-------------------------------------------------------------------   03545200
.***AI.L18  XLISTKEYINC F                                               03545300
         AIF   ('&XLISTKEYINC' NE 'NO').ZI167                           03545400
&ZXLISTKEYINC         SETC  ''             RESET INPUT/OUTPUT           03545500
.ZI167                ANOP  ,                                           03545600
.*-------------------------------------------------------------------   03545700
.***AI.L25  XLISTKEYINC F                                               03545800
                      AIF   ('&ZXLISTKEYINC' EQ '').ZI167E              03545900
                      AIF   ('&ZXLISTKEYINC' EQ 'OUTPUT').ZI167E        03546000
&ZCGPR                SETC  '&XLISTKEYINC'                              03546100
.*                                                                      03546200
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZI167B         03546300
&ZCGPR   SETC  '0('.'&XLISTKEYINC'(2,K'&XLISTKEYINC-2).')'              03546400
                      AGO   .ZI167D                                     03546500
.ZI167B               ANOP  ,                                           03546600
.*                                                                      03546700
&ZC                   SETC  '&XLISTKEYINC'(1,1)                         03546800
                      AIF   (T'&ZC NE 'N').ZI167D                       03546900
&ZC                   SETC  '&XLISTKEYINC'                              03547000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI167D              03547100
&ZCGPR                SETC  '=AL4(&XLISTKEYINC)'                        03547200
.*                                                                      03547300
.ZI167D               ANOP  ,                                           03547400
.*                                                                      03547500
&ZOPN                 SETA  &ZOPN+1                                     03547600
&ZOPL(&ZOPN)          SETC  ' '                                         03547700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03547800
&ZOPV(&ZOPN)          SETC  '272(4,1),&ZCGPR'                           03547900
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYINC XLISTKEYINC'              03548000
.*                                                                      03548100
.ZI167E               ANOP  ,                                           03548200
.*-------------------------------------------------------------------   03548300
.***AI.LVER02                                                           03548400
.ZI167Z               ANOP  ,                                           03548500
.*-------------------------------------------------------------------   03548600
.***AI.LVER01                                                           03548700
                      AIF  (&XPLISTVER LT 4).ZI169Z                     03548800
.*-------------------------------------------------------------------   03548900
.***AI.L25  XSECONDARYKEY CL32                                          03549000
                      AIF   ('&ZXSECONDARYKEY' EQ '').ZI169E            03549100
                      AIF   ('&ZXSECONDARYKEY' EQ 'OUTPUT').ZI169E      03549200
&ZCGPR                SETC  '&XSECONDARYKEY'                            03549300
.*                                                                      03549400
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZI169B       03549500
&ZCGPR   SETC  '0('.'&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2).')'          03549600
.ZI169B               ANOP  ,                                           03549700
.*                                                                      03549800
&ZOPN                 SETA  &ZOPN+1                                     03549900
&ZOPL(&ZOPN)          SETC  ' '                                         03550000
&ZOPO(&ZOPN)          SETC  'MVC'                                       03550100
&ZOPV(&ZOPN)          SETC  '276(32,1),&ZCGPR'                          03550200
&ZOPD(&ZOPN)          SETC  '++ &ZXSECONDARYKEY XSECONDARYKEY'          03550300
.*                                                                      03550400
.ZI169E               ANOP  ,                                           03550500
.*-------------------------------------------------------------------   03550600
.***AI.LVER02                                                           03550700
.ZI169Z               ANOP  ,                                           03550800
.*-------------------------------------------------------------------   03550900
.***AI.LVER01                                                           03551000
                      AIF  (&XPLISTVER LT 4).ZI170Z                     03551100
.*-------------------------------------------------------------------   03551200
.***AI.L25  XSKEYRANGEEND CL32                                          03551300
                      AIF   ('&ZXSKEYRANGEEND' EQ '').ZI170E            03551400
                      AIF   ('&ZXSKEYRANGEEND' EQ 'OUTPUT').ZI170E      03551500
&ZCGPR                SETC  '&XSKEYRANGEEND'                            03551600
.*                                                                      03551700
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZI170B       03551800
&ZCGPR   SETC  '0('.'&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2).')'          03551900
.ZI170B               ANOP  ,                                           03552000
.*                                                                      03552100
&ZOPN                 SETA  &ZOPN+1                                     03552200
&ZOPL(&ZOPN)          SETC  ' '                                         03552300
&ZOPO(&ZOPN)          SETC  'MVC'                                       03552400
&ZOPV(&ZOPN)          SETC  '308(32,1),&ZCGPR'                          03552500
&ZOPD(&ZOPN)          SETC  '++ &ZXSKEYRANGEEND XSKEYRANGEEND'          03552600
.*                                                                      03552700
.ZI170E               ANOP  ,                                           03552800
.*-------------------------------------------------------------------   03552900
.***AI.LVER02                                                           03553000
.ZI170Z               ANOP  ,                                           03553100
.*-------------------------------------------------------------------   03553200
&ZOPN1                SETA &ZOPN                                        03553300
.*******************************************************************    03553400
.***  PROCESS IXLLSTM OUTPUT PARAMETERS                                 03553500
.*******************************************************************    03553600
                      ACTR  10000                                       03553700
.*******************************************************************    03553800
.***AO.X02  RETURN CODE PROCESSING                                      03553900
.*******************************************************************    03554000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    03554100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            03554200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             03554300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             03554400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               03554500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                03554600
&ZOPN                 SETA  &ZOPN+1                                     03554700
&ZOPL(&ZOPN)          SETC  ' '                                         03554800
&ZOPO(&ZOPN)          SETC  'ST'                                        03554900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              03555000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        03555100
                      AGO   .ZMRETX                                     03555200
.*                                                                      03555300
.ZMRET2               ANOP  ,                                           03555400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                03555500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                03555600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                03555700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  03555800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   03555900
&ZOPN                 SETA  &ZOPN+1                                     03556000
&ZOPL(&ZOPN)          SETC  ' '                                         03556100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  03556200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 03556300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        03556400
.ZMRETX               ANOP  ,                                           03556500
.*******************************************************************    03556600
.***AO.X03  REASON CODE PROCESSING                                      03556700
.*******************************************************************    03556800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    03556900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            03557000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              03557100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             03557200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              03557300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             03557400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                03557500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 03557600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                03557700
&ZOPN                 SETA  &ZOPN+1                                     03557800
&ZOPL(&ZOPN)          SETC  ' '                                         03557900
&ZOPO(&ZOPN)          SETC  'ST'                                        03558000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               03558100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        03558200
                      AGO   .ZMRSNX                                     03558300
.*                                                                      03558400
.ZMRSN2               ANOP  ,                                           03558500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                03558600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 03558700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                03558800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 03558900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                03559000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   03559100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    03559200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   03559300
&ZOPN                 SETA  &ZOPN+1                                     03559400
&ZOPL(&ZOPN)          SETC  ' '                                         03559500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  03559600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  03559700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        03559800
.ZMRSNX               ANOP  ,                                           03559900
.*******************************************************************    03560000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   03560100
.*******************************************************************    03560200
.ZMFLX                ANOP  ,              MF=L PROCESSING              03560300
.*******************************************************************    03560400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               03560500
.*******************************************************************    03560600
                      ACTR  10000                                       03560700
.*                                                                      03560800
                      LCLA  &ZLC           COLUMN POSITION              03560900
                      LCLA  &ZOPX          LIST TABLE INDEX             03561000
                      LCLC  &ZLL           LABEL                        03561100
                      LCLC  &ZLOP          OPERATION                    03561200
                      LCLC  &ZLV           VALUE                        03561300
                      LCLC  &ZLD           DESCRIPTION                  03561400
.*                                                                      03561500
&ZOPX                 SETA  1                                           03561600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            03561700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              03561800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              03561900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              03562000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              03562100
                      AIF   (K'&ZLD LE 0).ZL5                           03562200
&ZLC                  SETA  35             COMMENT COLUMN               03562300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    03562400
&ZLC                  SETA  33             COMMMENT COLUMN              03562500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   03562600
&ZLV                  SETC  '&ZLV'.' '                                  03562700
                      AGO   .ZL3                                        03562800
.*                                                                      03562900
.ZL4                  ANOP  ,                                           03563000
&ZLV                  SETC  '&ZLV'.' '                                  03563100
.ZL5                  ANOP  ,                                           03563200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               03563300
.*                                                                      03563400
&ZLL     &ZLOP &ZLV                                                     03563500
.*                                                                      03563600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               03563700
                      AGO   .ZL2           CONTINUE LOOPING             03563800
.*                                                                      03563900
.ZLX                  ANOP  ,                                           03564000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                03564100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03564200
.**------------------------------------------------------------------** 03564300
.**  Start of user maclasm code                                      ** 03564400
.**------------------------------------------------------------------** 03564500
.*                                                                      03564600
.**  Only generate code if no errors have been found                 ** 03564700
.*                                                                      03564800
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            03564900
.*                                                                      03565000
.**------------------------------------------------------------------** 03565100
.**  Declares for macro constants                                    ** 03565200
.**------------------------------------------------------------------** 03565300
.*                                                                      03565400
.**  Command codes                                                   ** 03565500
.*                                                                      03565600
               LCLC  &KLISTCMDRL                                        03565700
               LCLC  &KLISTCMDDL                                        03565800
               LCLC  &KLISTCMDRLS                                       03565900
               LCLC  &KLISTCMDDLS                                       03566000
               LCLC  &KLISTCMDDLES                                      03566100
               LCLC  &KLISTCMDMLES                                      03566200
.*                                                                      03566300
&KLISTCMDRL    SETC  '28'                                               03566400
&KLISTCMDDL    SETC  '88'                                               03566500
&KLISTCMDRLS   SETC  '32'                                               03566600
&KLISTCMDDLS   SETC  '36'                                               03566700
&KLISTCMDDLES  SETC  '40'                                               03566800
&KLISTCMDMLES  SETC  '92'                                               03566900
.*                                                                      03567000
.*                                                                      03567100
.**  List command type                                               ** 03567200
.*                                                                      03567300
               LCLC  &KLISTCMDTYPE                                      03567400
&KLISTCMDTYPE  SETC  'X''03'''                                          03567500
.*                                                                      03567600
.*                                                                      03567700
.**  Command opcodes                                                 ** 03567800
.*                                                                      03567900
               LCLC  &KLISTOPRL                                         03568000
               LCLC  &KLISTOPDL                                         03568100
               LCLC  &KLISTOPRLS                                        03568200
               LCLC  &KLISTOPDLS                                        03568300
               LCLC  &KLISTOPDLES                                       03568400
               LCLC  &KLISTOPMLES                                       03568500
.*                                                                      03568600
&KLISTOPRL     SETC  'X''17'''                                          03568700
&KLISTOPDL     SETC  'X''26'''                                          03568800
&KLISTOPRLS    SETC  'X''18'''                                          03568900
&KLISTOPDLS    SETC  'X''19'''                                          03569000
&KLISTOPDLES   SETC  'X''9A'''                                          03569100
&KLISTOPMLES   SETC  'X''A7'''                                          03569200
.*                                                                      03569300
.*                                                                      03569400
.**  Command lengths                                                 ** 03569500
.*                                                                      03569600
               LCLC  &KLISTRLLEN                                        03569700
               LCLC  &KLISTDLLEN                                        03569800
               LCLC  &KLISTRLSLEN                                       03569900
               LCLC  &KLISTDLSLEN                                       03570000
               LCLC  &KLISTDLESLEN                                      03570100
               LCLC  &KLISTMLESLEN                                      03570200
.*                                                                      03570300
.********************************************************************** 03570400
.* If this is a level 4 (or above) plist,                             * 03570500
.*    Use the new command lengths                                     * 03570600
.* Else (plist 0-3)                                                   * 03570700
.*    Use the old command lengths                                     * 03570800
.********************************************************************** 03570900
         AIF   (&ListPlVers GE 4).SETLONGLNGTHS                         03571000
&KLISTRLLEN    SETC  '160'                                              03571100
.* &KLISTDLLEN    SETC  '256'  * Version 0-3 OF DL does not exist       03571200
&KLISTRLSLEN   SETC  '160'                                              03571300
&KLISTDLSLEN   SETC  '160'                                              03571400
&KLISTDLESLEN  SETC  '160'                                              03571500
.* &KLISTMLESLEN  SETC  '256'  * Version 0-3 of MLES does not exist     03571600
               AGO   .SETLENGTHEND                                      03571700
.SETLONGLNGTHS ANOP ,                                                   03571800
&KLISTRLLEN    SETC  '256'                                              03571900
&KLISTDLLEN    SETC  '256'                                              03572000
&KLISTRLSLEN   SETC  '256'                                              03572100
&KLISTDLSLEN   SETC  '256'                                              03572200
&KLISTDLESLEN  SETC  '256'                                              03572300
&KLISTMLESLEN  SETC  '256'                                              03572400
.*             AGO   .SETLENGTHEND                                      03572500
.SETLENGTHEND  ANOP  ,                                                  03572600
.*                                                                      03572700
.*                                                                      03572800
.**  Parameter list offsets                                          ** 03572900
.*                                                                      03573000
.*  Offsets of parameter list sections                                  03573100
.*                                                                      03573200
                   LCLA  &PLOFF_XSHL_DATA                               03573300
                   LCLA  &PLOFF_XMOB_DATA                               03573400
                   LCLA  &PLOFF_XMCB_DATA                               03573500
.*                                                                      03573600
&PLOFF_XSHL_DATA   SETA  0                                              03573700
&PLOFF_XMOB_DATA   SETA  96                                             03573800
&PLOFF_XMCB_DATA   SETA  100                                            03573900
.*                                                                      03574000
.*  Offsets within the shell data section                               03574100
.*                                                                      03574200
                     LCLA  &PLOFF_XVERSION                              03574300
                     LCLA  &PLOFF_XCMDCODE                              03574400
                     LCLA  &PLOFF_XSHLFLGS2                             03574500
                     LCLA  &PLOFF_XSHLFLGS3                             03574600
                     LCLA  &PLOFF_XSHLFLGS4                             03574700
                     LCLA  &PLOFF_XCOMPCONID                            03574800
                     LCLA  &PLOFF_XCONID                                03574900
                     LCLA  &PLOFF_XBUFSIZE                              03575000
                     LCLA  &PLOFF_XANSAREA_ALET                         03575100
                     LCLA  &PLOFF_XANSAREA                              03575200
                     LCLA  &PLOFF_XEXTRESTOKENTKN                  @L1A 03575300
.*                                                                      03575400
&PLOFF_XVERSION      SETA  &PLOFF_XSHL_DATA+0                           03575500
&PLOFF_XCMDCODE      SETA  &PLOFF_XSHL_DATA+1                           03575600
&PLOFF_XSHLFLGS2     SETA  &PLOFF_XSHL_DATA+3                           03575700
&PLOFF_XSHLFLGS3     SETA  &PLOFF_XSHL_DATA+4                           03575800
&PLOFF_XSHLFLGS4     SETA  &PLOFF_XSHL_DATA+5                           03575900
&PLOFF_XCOMPCONID    SETA  &PLOFF_XSHL_DATA+8                           03576000
&PLOFF_XCONID        SETA  &PLOFF_XSHL_DATA+25                          03576100
&PLOFF_XBUFSIZE      SETA  &PLOFF_XSHL_DATA+32                          03576200
&PLOFF_XANSAREA_ALET SETA  &PLOFF_XSHL_DATA+48                          03576300
&PLOFF_XANSAREA      SETA  &PLOFF_XSHL_DATA+52                          03576400
&PLOFF_XEXTRESTOKENTKN  SETA  &PLOFF_XSHL_DATA+72                  @L1A 03576500
.*                                                                      03576600
.*  Offsets within the MOB section                                      03576700
.*                                                                      03576800
                   LCLA  &PLOFF_XCMDLEN                                 03576900
                   LCLA  &PLOFF_XBUFNUM                                 03577000
                   LCLA  &PLOFF_XBUFINCRNUM                             03577100
.*                                                                      03577200
&PLOFF_XCMDLEN     SETA  &PLOFF_XMOB_DATA+0                             03577300
&PLOFF_XBUFNUM     SETA  &PLOFF_XMOB_DATA+2                             03577400
&PLOFF_XBUFINCRNUM SETA  &PLOFF_XMOB_DATA+3                             03577500
.*                                                                      03577600
.*  Offsets within the MCB section                                      03577700
.*                                                                      03577800
                   LCLA  &PLOFF_XCCA                                    03577900
                   LCLA  &PLOFF_XCCB                                    03578000
                   LCLA  &PLOFF_XDBS                                    03578100
                   LCLA  &PLOFF_XCMDFLGS1B                              03578200
                   LCLA  &PLOFF_XCMDFLGS1C                              03578300
                   LCLA  &PLOFF_XCMDFLGS1D                              03578400
                   LCLA  &PLOFF_XCGLM                                   03578500
                   LCLA  &PLOFF_XENTRYKEY                               03578600
                   LCLA  &PLOFF_XRESTOKEN                          @L1A 03578700
                   LCLA  &PLOFF_XUID1                                   03578800
                   LCLA  &PLOFF_XCMDFLGS2A                              03578900
                   LCLA  &PLOFF_XCMDFLGS2B                              03579000
                   LCLA  &PLOFF_XAUTHCOMP1                              03579100
.*                                                                      03579200
&PLOFF_XCCA        SETA  &PLOFF_XMCB_DATA+0                             03579300
&PLOFF_XCCB        SETA  &PLOFF_XMCB_DATA+1                             03579400
&PLOFF_XDBS        SETA  &PLOFF_XMCB_DATA+4                             03579500
&PLOFF_XCMDFLGS1B  SETA  &PLOFF_XMCB_DATA+5                             03579600
&PLOFF_XCMDFLGS1C  SETA  &PLOFF_XMCB_DATA+6                             03579700
&PLOFF_XCMDFLGS1D  SETA  &PLOFF_XMCB_DATA+7                             03579800
&PLOFF_XCGLM       SETA  &PLOFF_XMCB_DATA+11                            03579900
&PLOFF_XENTRYKEY   SETA  &PLOFF_XMCB_DATA+48                            03580000
&PLOFF_XRESTOKEN   SETA  &PLOFF_XMCB_DATA+64                       @L1A 03580100
&PLOFF_XUID1       SETA  &PLOFF_XMCB_DATA+80                            03580200
&PLOFF_XCMDFLGS2A  SETA  &PLOFF_XMCB_DATA+76                            03580300
&PLOFF_XCMDFLGS2B  SETA  &PLOFF_XMCB_DATA+77                            03580400
&PLOFF_XAUTHCOMP1  SETA  &PLOFF_XMCB_DATA+128                           03580500
.*                                                                      03580600
.**  Answer area offsets                                             ** 03580700
.*                                                                      03580800
                   LCLC  &AAOFF_LEVEL                                   03580900
                   LCLC  &AAOFF_OFFSET                                  03581000
                   LCLC  &AAOFF_LENGTH                                  03581100
                   LCLC  &AAOFF_RETCODE                                 03581200
                   LCLC  &AAOFF_RSNCODE                                 03581300
.*                                                                      03581400
&AAOFF_LEVEL       SETC  '0'                                            03581500
&AAOFF_OFFSET      SETC  '4'                                            03581600
&AAOFF_LENGTH      SETC  '8'                                            03581700
&AAOFF_RETCODE     SETC  '12'                                           03581800
&AAOFF_RSNCODE     SETC  '16'                                           03581900
.*                                                                      03582000
.**  Answer area values                                              ** 03582100
.*                                                                      03582200
                   LCLC  &AAVAL_LEVEL                                   03582300
                   LCLC  &AAVAL_OFFSET                                  03582400
                   LCLC  &AAVAL_LENGTH                                  03582500
                   LCLC  &AAVAL_RETCODE                                 03582600
                   LCLC  &AAVAL_RSNCODE                                 03582700
.*                                                                      03582800
&AAVAL_LEVEL       SETC  '0'                                            03582900
&AAVAL_OFFSET      SETC  '12'                                           03583000
&AAVAL_LENGTH      SETC  '8'                                            03583100
&AAVAL_RETCODE     SETC  '12'                                           03583200
&AAVAL_RSNCODE     SETC  'X''0C13'''                                    03583300
.*                                                                      03583400
.*                                                                      03583500
.**------------------------------------------------------------------** 03583600
.**  Declares for macro variables                                    ** 03583700
.**                                                                  ** 03583800
.**  The following AMG-declared variables are also used in this      ** 03583900
.**  section:                                                        ** 03584000
.**                                                                  ** 03584100
.**    AMG "x" and "zx" variables corresponding to interface keys    ** 03584200
.**    ZCGPR                                                         ** 03584300
.**    ZCLNG                                                         ** 03584400
.**    ZCVAL                                                         ** 03584500
.**    ZMACRET                                                       ** 03584600
.**    ZNDX                                                          ** 03584700
.**    ZPLLEN                                                        ** 03584800
.**    ZPRM                                                          ** 03584900
.**    ZPRMLINE                                                      ** 03585000
.**    ZPRMNUM                                                       ** 03585100
.**    ZW                                                            ** 03585200
.**                                                                  ** 03585300
.**------------------------------------------------------------------** 03585400
.*                                                                      03585500
               LCLC  &LISTCMD                                           03585600
               LCLC  &LISTOPCODE                                        03585700
               LCLC  &LISTCMDLEN                                        03585800
.*                                                                      03585900
.*                                                                      03586000
.**------------------------------------------------------------------** 03586100
.**  Start of code to fill in the parameter list                     ** 03586200
.**------------------------------------------------------------------** 03586300
.*                                                                      03586400
.*                                                                      03586500
.**------------------------------------------------------------------** 03586600
.**  Initialize the answer area                                      ** 03586700
.**------------------------------------------------------------------** 03586800
.*                                                                      03586900
               AIF   ('&ANSAREA' EQ '').SKIPINITANSAREA                 03587000
               AIF   ('&SYSASCE'  EQ 'P').SKIPINITANSALET               03587100
         L     14,&PLOFF_XANSAREA_ALET.(,1)                             03587200
         SAR   14,14                                                    03587300
.SKIPINITANSALET ANOP ,                                                 03587400
         L     14,&PLOFF_XANSAREA.(,1)                                  03587500
         LA    15,&AAVAL_LEVEL.                                         03587600
         ST    15,&AAOFF_LEVEL.(,14)                                    03587700
         LA    15,&AAVAL_OFFSET.                                        03587800
         ST    15,&AAOFF_OFFSET.(,14)                                   03587900
         LA    15,&AAVAL_LENGTH.                                        03588000
         ST    15,&AAOFF_LENGTH.(,14)                                   03588100
         LA    15,&AAVAL_RETCODE.                                       03588200
         ST    15,&AAOFF_RETCODE.(,14)                                  03588300
         LA    15,&AAVAL_RSNCODE.                                       03588400
         ST    15,&AAOFF_RSNCODE.(,14)                                  03588500
.SKIPINITANSAREA ANOP ,                                                 03588600
.*                                                                      03588700
.*                                                                      03588800
.**------------------------------------------------------------------** 03588900
.**  Find the command code, opcode, and length                       ** 03589000
.**                                                                  ** 03589100
.**  The length is set to the maximum length required for the        ** 03589200
.**  specified command.  The command code and opcode are set from    ** 03589300
.**  the combination of keys specified on the invocation.            ** 03589400
.**                                                                  ** 03589500
.**------------------------------------------------------------------** 03589600
.*                                                                      03589700
.*                                                                      03589800
               AIF   ('&XREQUEST' NE 'READ_LIST').LISTCMDNOTREADLIST    03589900
.*                                                                      03590000
&LISTCMD       SETC  '&KLISTCMDRL'                                      03590100
&LISTOPCODE    SETC  '&KLISTOPRL'                                       03590200
&LISTCMDLEN    SETC  '&KLISTRLLEN'                                      03590300
               AGO   .LISTCMDENDSELECT                                  03590400
.*                                                                      03590500
.LISTCMDNOTREADLIST ANOP ,                                              03590600
.*                                                                      03590700
.*                                                                      03590800
               AIF   ('&XREQUEST' NE 'DELETE_LIST').LISTCMDNOTDELETELIS*03590900
               T                                                        03591000
.*                                                                      03591100
&LISTCMD       SETC  '&KLISTCMDDL'                                      03591200
&LISTOPCODE    SETC  '&KLISTOPDL'                                       03591300
&LISTCMDLEN    SETC  '&KLISTDLLEN'                                      03591400
               AGO   .LISTCMDENDSELECT                                  03591500
.*                                                                      03591600
.LISTCMDNOTDELETELIST ANOP ,                                            03591700
.*                                                                      03591800
               AIF   ('&XREQUEST' NE 'READ_MULT').LISTCMDNOTREADMULT    03591900
.*                                                                      03592000
&LISTCMD       SETC  '&KLISTCMDRLS'                                     03592100
&LISTOPCODE    SETC  '&KLISTOPRLS'                                      03592200
&LISTCMDLEN    SETC  '&KLISTRLSLEN'                                     03592300
               AGO   .LISTCMDENDSELECT                                  03592400
.*                                                                      03592500
.LISTCMDNOTREADMULT ANOP ,                                              03592600
.*                                                                      03592700
               AIF   ('&XREQUEST' NE 'DELETE_MULT').LISTCMDNOTDELETEMUL*03592800
               T                                                        03592900
.*                                                                      03593000
&LISTCMD       SETC  '&KLISTCMDDLS'                                     03593100
&LISTOPCODE    SETC  '&KLISTOPDLS'                                      03593200
&LISTCMDLEN    SETC  '&KLISTDLSLEN'                                     03593300
               AGO   .LISTCMDENDSELECT                                  03593400
.*                                                                      03593500
.LISTCMDNOTDELETEMULT ANOP ,                                            03593600
.*                                                                      03593700
               AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST').LISTCMDNOTDELE*03593800
               TEENTRYLIST                                              03593900
.*                                                                      03594000
&LISTCMD       SETC  '&KLISTCMDDLES'                                    03594100
&LISTOPCODE    SETC  '&KLISTOPDLES'                                     03594200
&LISTCMDLEN    SETC  '&KLISTDLESLEN'                                    03594300
               AGO   .LISTCMDENDSELECT                                  03594400
.*                                                                      03594500
.LISTCMDNOTDELETEENTRYLIST ANOP ,                                       03594600
.*                                                                      03594700
               AIF   ('&XREQUEST' NE 'MOVE_ENTRYLIST').LISTCMDNOTMOVEEN*03594800
               TRYLIST                                                  03594900
.*                                                                      03595000
&LISTCMD       SETC  '&KLISTCMDMLES'                                    03595100
&LISTOPCODE    SETC  '&KLISTOPMLES'                                     03595200
&LISTCMDLEN    SETC  '&KLISTMLESLEN'                                    03595300
               AGO   .LISTCMDENDSELECT                                  03595400
.*                                                                      03595500
.LISTCMDNOTMOVEENTRYLIST ANOP ,                                         03595600
.*                                                                      03595700
         MNOTE 8,'IXLLSTM ---> REQUEST is a required parameter.'        03595800
&ZMACRET SETA  8                                                        03595900
.*                                                                      03596000
.LISTCMDENDSELECT ANOP ,                                                03596100
.*                                                                      03596200
.*                                                                      03596300
.**------------------------------------------------------------------** 03596400
.**  Fill in shell layer parameter fields                            ** 03596500
.**------------------------------------------------------------------** 03596600
.*                                                                      03596700
.**  Set the command code                                            ** 03596800
.*                                                                      03596900
.*   _xCmdCode                                                          03597000
         MVI   &PLOFF_XCMDCODE.(1),&LISTCMD                             03597100
.*                                                                      03597200
.*                                                                      03597300
.**  Set the shell flags third byte                                  ** 03597400
.**------------------------------------------------------------------** 03597500
.**  Handle special case to set LockMode(Cond) bit.                  ** 03597600
.**  Ixllstm does not have a LockMode keyword, but Ixllist does      ** 03597700
.**  and sets the LockMode(COND) bit when LockOper=NotHeld. As such, ** 03597800
.**  the following code will set the Shlflgs3 bits for both          ** 03597900
.**  LockOper=NotHeld and LockMode(Cond) when LockOper=NotHeld       ** 03598000
.**  is specified. Note that AMG will set the bit for                ** 03598100
.**  LockOper=HeldBy when LockOper=HeldBy is specified.              ** 03598200
.**------------------------------------------------------------------** 03598300
         AIF   ('&XLOCKOPER' NE 'NOTHELD').PLLOCKOPERNOTNOTHELD         03598400
.*   _xShlFlgs3                                                         03598500
         OI    &PLOFF_XSHLFLGS3.(1),B'00100010'                         03598600
.PLLOCKOPERNOTNOTHELD ANOP ,                                            03598700
.*                                                                      03598800
.**  Set the shell flags fourth byte                                 ** 03598900
.*                                                                      03599000
&ZW      SETC  ''                                                       03599100
&ZCLNG   SETC  ''                                                       03599200
.*                                                                      03599300
.*                                                                      03599400
         AIF   ('&XREQUEST' NE 'READ_LIST' AND                         *03599500
                '&XREQUEST' NE 'READ_MULT').PLREQNOTREADLISTREADMULT    03599600
.*                                                                      03599700
&ZI      SETA  0                                                        03599800
.*                                                                      03599900
.PLFINDADJDATA ANOP ,                                                   03600000
.*                                                                      03600100
&ZI      SETA  &ZI+1                                                    03600200
.*                                                                      03600300
         AIF   (K'&XTYPE(&ZI) LE 0).PLFINDADJDATANOVALUE                03600400
.*                                                                      03600500
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').PLFINDADJDATA               03600600
.*                                                                      03600700
&ZW      SETC  '&ZW.1'                                                  03600800
&ZCLNG   SETC  'YES'                                                    03600900
         AGO   .PLFINDADJDATAEND                                        03601000
.*                                                                      03601100
.PLFINDADJDATANOVALUE ANOP ,                                            03601200
.*                                                                      03601300
&ZW      SETC  '&ZW.0'                                                  03601400
.*                                                                      03601500
.PLFINDADJDATAEND ANOP ,                                                03601600
.*                                                                      03601700
&ZI      SETA  0                                                        03601800
.*                                                                      03601900
.PLFINDECONTROLS ANOP ,                                                 03602000
.*                                                                      03602100
&ZI      SETA  &ZI+1                                                    03602200
.*                                                                      03602300
         AIF   (K'&XTYPE(&ZI) LE 0).PLFINDECONTROLSNOVALUE              03602400
.*                                                                      03602500
         AIF   ('&XTYPE(&ZI)' NE 'ECONTROLS').PLFINDECONTROLS           03602600
.*                                                                      03602700
&ZW      SETC  '&ZW.1000000'                                            03602800
&ZCLNG   SETC  'YES'                                                    03602900
         AGO   .PLFINDECONTROLSEND                                      03603000
.*                                                                      03603100
.PLFINDECONTROLSNOVALUE ANOP ,                                          03603200
.*                                                                      03603300
&ZW      SETC  '&ZW.0000000'                                            03603400
.*                                                                      03603500
.PLFINDECONTROLSEND ANOP ,                                              03603600
.*                                                                      03603700
.*                                                                      03603800
.PLREQNOTREADLISTREADMULT ANOP ,                                        03603900
.*                                                                      03604000
.*                                                                      03604100
&ZW      SETC  'B''&ZW.'''                                              03604200
.*                                                                      03604300
.*                                                                      03604400
         AIF   ('&ZCLNG' NE 'YES').PLNOSHLFLGS4                         03604500
.*                                                                      03604600
.*   _xShlFlgs4                                                         03604700
         OI    &PLOFF_XSHLFLGS4.(1),&ZW                                 03604800
.*                                                                      03604900
.PLNOSHLFLGS4 ANOP ,                                                    03605000
.*                                                                      03605100
.**------------------------------------------------------------------** 03605200
.**  Fill in MOB parameter fields                                    ** 03605300
.**------------------------------------------------------------------** 03605400
.*                                                                      03605500
.**  Set the command data length                                     ** 03605600
.*                                                                      03605700
         LA    14,&LISTCMDLEN                                           03605800
.*                                                                      03605900
.*   _xCmdLen                                                           03606000
         STH   14,&PLOFF_XCMDLEN.(,1)                                   03606100
.*                                                                      03606200
.**  Set the BufNum value                                            ** 03606300
.*                                                                      03606400
.*                                                                      03606500
.*   _xBufNum                                                           03606600
.*                                                                      03606700
         AIF   ('&XBUFFER' EQ '').SKIPSETBUFNUM1                        03606800
.*                                                                      03606900
.*   _xBufNum                                                           03607000
         L     14,&PLOFF_XBUFSIZE.(0,1)                                 03607100
         SRL   14,12                                                    03607200
         STC   14,&PLOFF_XBUFNUM.(0,1)                                  03607300
.*                                                                      03607400
.SKIPSETBUFNUM1 ANOP ,                                                  03607500
.*                                                                      03607600
.**  Set the BufIncrNum value                                        ** 03607700
.*                                                                      03607800
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *03607900
                '&XREQUEST' NE 'READ_MULT').SKIPSETBUFINUM        @02C  03608000
.*                                                                      03608100
.*   _xBufIncrNum                                                       03608200
         MVI   &PLOFF_XBUFINCRNUM.(1),16                                03608300
.*                                                                      03608400
.SKIPSETBUFINUM ANOP ,                                                  03608500
.*                                                                      03608600
.**  Set the BufIncrNum value for DELETE_ENTRYLIST and MOVE_ENTRYLIST   03608700
.*                                                                      03608800
         AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *03608900
                '&XREQUEST' NE 'MOVE_ENTRYLIST').SKIPSETBUFINU2   @02A  03609000
         AIF   ('&XBUFINCRNUM' NE '').SKIPSETBUFINU2              @02A  03609100
         MVI   &PLOFF_XBUFINCRNUM.(1),16                          @02A  03609200
.SKIPSETBUFINU2 ANOP ,                                            @02A  03609300
.*                                                                      03609400
.*                                                                      03609500
.**------------------------------------------------------------------** 03609600
.**  Fill in MCB parameter fields                                    ** 03609700
.**------------------------------------------------------------------** 03609800
.*                                                                      03609900
.**  Set the command opcode                                          ** 03610000
.**  - The command opcode is stored in two pieces to allow the       ** 03610100
.**    MVI instruction to be used for efficiency.                    ** 03610200
.*                                                                      03610300
.*   _xCcA                                                              03610400
         MVI   &PLOFF_XCCA.(1),&KLISTCMDTYPE                            03610500
.*                                                                      03610600
.*   _xCcB                                                              03610700
         MVI   &PLOFF_XCCB.(1),&LISTOPCODE                              03610800
.*                                                                      03610900
.*                                                                      03611000
.**  Set the DBS                                                     ** 03611100
.*                                                                      03611200
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *03611300
                '&XREQUEST' NE 'READ_MULT').SKIPSETDBS                  03611400
.*                                                                      03611500
.*   _xDbs                                                              03611600
         MVC   &PLOFF_XDBS.(1,1),&PLOFF_XBUFNUM.(1)                     03611700
.*                                                                      03611800
.SKIPSETDBS ANOP ,                                                      03611900
.*                                                                      03612000
.*                                                                      03612100
.**------------------------------------------------------------------** 03612200
.**  Set the command flags                                           ** 03612300
.**  - The command flags are stored as individual bytes to allow the ** 03612400
.**    MVI instruction to be used for efficiency.                    ** 03612500
.*                                                                      03612600
.**  Set the command flags first byte                                ** 03612700
.**  - There are currently no flags in the first byte                ** 03612800
.*                                                                      03612900
.**  Set the command flags second byte                               ** 03613000
.*                                                                      03613100
&ZW      SETC  ''                                                       03613200
&ZCLNG   SETC  ''                                                       03613300
.*                                                                      03613400
.* Bit 0    Local Lock Bit (not used)                                   03613500
&ZW      SETC  '&ZW.0'                                                  03613600
.*                                                                      03613700
.* Bit 1-3  Lock Requst Type                                            03613800
         AIF   ('&LOCKOPER(1)' EQ '').PASTLOCKOPERYES                   03613900
.*                                                                      03614000
.*                                                                      03614100
.*                                                                      03614200
         AIF   ('&XLOCKOPER' NE 'NOTHELD' AND                          *03614300
                '&XLOCKOPER' NE 'HELDBY').PASTLOCKOPERYES               03614400
.*                                                                      03614500
.*                                                                      03614600
&ZW      SETC  '&ZW.100'                                                03614700
&ZCLNG   SETC  'YES'                                                    03614800
         AGO   .PASTLOCKOPERNO                                          03614900
.*                                                                      03615000
.*                                                                      03615100
.PASTLOCKOPERYES ANOP ,                                                 03615200
&ZW      SETC  '&ZW.000'                                                03615300
.*                                                                      03615400
.PASTLOCKOPERNO  ANOP ,                                                 03615500
.*                                                                      03615600
.* Bit 4    Key Compare Type (set correctly by AMG)                     03615700
&ZW      SETC  '&ZW.0'                                                  03615800
.*                                                                      03615900
.* Bit 5    Version Comparison Type (set correctly by AMG)              03616000
&ZW      SETC  '&ZW.0'                                                  03616100
.*                                                                      03616200
.* Bit 6-7  Key Request Type Type                                       03616300
.* Set KEYREQTYPE                                                       03616400
.*                                                                      03616500
.*                                                                      03616600
         AIF   ('&XKEYREQTYPE' NE 'RANGE').NOKEYREQTYPERANGE            03616700
.*                                                                      03616800
.*                                                                      03616900
&ZW      SETC  '&ZW.11'                                                 03617000
&ZCLNG   SETC  'YES'                                                    03617100
         AGO   .PASTKEYREQTYPERANGE                                     03617200
.NOKEYREQTYPERANGE ANOP ,                                               03617300
&ZW      SETC  '&ZW.00'                                                 03617400
.PASTKEYREQTYPERANGE ANOP ,                                             03617500
.*                                                                      03617600
.*   _xCmdFlgs1B                                                        03617700
.*                                                                      03617800
&ZW      SETC  'B''&ZW.'''                                              03617900
.*                                                                      03618000
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1B                        03618100
.*                                                                      03618200
         OI    &PLOFF_XCMDFLGS1B.(1),&ZW.                               03618300
.*                                                                      03618400
.PLNOCMDFLGS1B ANOP ,                                                   03618500
.*                                                                      03618600
.*                                                                      03618700
.**  Set the command flags third byte                                ** 03618800
.*                                                                      03618900
.*                                                                      03619000
&ZW      SETC  ''                                                       03619100
&ZCLNG   SETC  ''                                                       03619200
         AIF   ('&XREQUEST' NE 'DELETE_LIST' AND                       *03619300
                '&XREQUEST' NE 'READ_LIST').PLNOCMDFLGS1C               03619400
.*                                                                      03619500
.*                                                                      03619600
         AIF   ('&XLOCATOR' NE 'ENTRYNAME').PLNOTENTRYNAME              03619700
.*                                                                      03619800
.*   _xCmdFlgs1C                                                        03619900
&ZW      SETC  '&ZW.00110000'                                           03620000
&ZCLNG   SETC  'YES'                                                    03620100
         AGO   .PASTENTRYNAME                                           03620200
.*                                                                      03620300
.PLNOTENTRYNAME ANOP ,                                                  03620400
.*                                                                      03620500
&ZW      SETC  '&ZW.00000000'                                           03620600
.PASTENTRYNAME ANOP ,                                                   03620700
.*                                                                      03620800
&ZW      SETC  'B''&ZW.'''                                              03620900
.*                                                                      03621000
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1C                        03621100
.*                                                                      03621200
         OI    &PLOFF_XCMDFLGS1C.(1),&ZW.                               03621300
.*                                                                      03621400
.PLNOCMDFLGS1C ANOP ,                                                   03621500
.*                                                                      03621600
.* If LOCKOPER^=HELDBY                                                  03621700
.* Then                                                                 03621800
.*   branch to PLLOCKOPERNOTHELDBY                                      03621900
         AIF   ('&XLOCKOPER' NE 'HELDBY').PLLOCKOPERNOTHELDBY           03622000
.*                                                                      03622100
.* Else (LOCKOPER=HELDBY)                                               03622200
.*                                                                      03622300
.* Handle the LockComp specification.                                   03622400
.* There are four ways it can be specified:                             03622500
.*  1) LOCKCOMP=(reg)       --> "reg" contains the address of the value 03622600
.*  2) LOCKCOMP=offset(reg) --> explicit basing specification           03622700
.*  3) LOCKCOMP=name        --> variable name                           03622800
.*  4) LOCKCOMP=value       --> hard-coded value                        03622900
.*                                                                      03623000
         AIF   ('&XLOCKCOMP' EQ ''              OR                     *03623100
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLHELDBYNOLOCKCOMP       03623200
         AIF   ('&XLOCKCOMP'(1,1) NE '(').PLLOCKCOMPNOTREG              03623300
&ZCGPR   SETC  '0('.'&XLOCKCOMP'(2,K'&XLOCKCOMP-2).')'                  03623400
         AGO   .PLENDLOCKCOMPSETUP                                      03623500
.PLLOCKCOMPNOTREG ANOP ,                                                03623600
&ZCGPR   SETC  '&XLOCKCOMP'                                             03623700
&ZC      SETC  '&XLOCKCOMP'(1,1)                                        03623800
         AIF   (T'&ZC NE 'N').PLENDLOCKCOMPSETUP                        03623900
&ZC      SETC  '&XLOCKCOMP'                                             03624000
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDLOCKCOMPSETUP               03624100
&ZCGPR   SETC  '=FL1''&XLOCKCOMP'''                                     03624200
.PLENDLOCKCOMPSETUP ANOP ,                                              03624300
.*                                                                      03624400
.*   _xCglm                                                             03624500
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                03624600
.*                                                                      03624700
         AGO   .PLHELDBYEND                                             03624800
.*                                                                      03624900
.PLHELDBYNOLOCKCOMP ANOP ,                                              03625000
.*                                                                      03625100
.*   _xCglm, _xConId                                                    03625200
         MVC   &PLOFF_XCGLM.(1,1),&PLOFF_XCONID.(1)                     03625300
.*                                                                      03625400
.PLHELDBYEND ANOP ,                                                     03625500
.*                                                                      03625600
.* LockOper=NotHeld or LockOper not specified                           03625700
.PLLOCKOPERNOTHELDBY ANOP ,                                             03625800
.*                                                                      03625900
.*                                                                      03626000
.**  Set the AuthComp                                                   03626100
.*                                                                      03626200
         AIF   ('&AUTHCOMP(1)' EQ 'NO_AUTHCOMP' OR                     *03626300
                '&AUTHCOMP(1)' EQ '0'           OR                     *03626400
                '&AUTHCOMP(1)' EQ '').PLNOAUTHCOMP                      03626500
.*                                                                      03626600
.* Handle the AuthComp specification.                                   03626700
.* There are four ways it can be specified:                             03626800
.*  1) AUTHCOMP=(reg)       --> "reg" contains the addr of the value    03626900
.*  2) AUTHCOMP=offset(reg) --> explicit basing specification           03627000
.*  3) AUTHCOMP=name        --> variable name                           03627100
.*  4) AUTHCOMP=value       --> hard-coded value                        03627200
.*                                                                      03627300
         AIF   ('&XAUTHCOMP'(1,1) NE '(').PLAUTHCOMPNOTREG              03627400
&ZCGPR   SETC  '0('.'&XAUTHCOMP'(2,K'&XAUTHCOMP-2).')'                  03627500
         AGO   .PLENDAUTHCOMPSETUP                                      03627600
.PLAUTHCOMPNOTREG ANOP ,                                                03627700
&ZCGPR   SETC  '&XAUTHCOMP'                                             03627800
&ZC      SETC  '&XAUTHCOMP'(1,1)                                        03627900
         AIF   (T'&ZC NE 'N').PLENDAUTHCOMPSETUP                        03628000
&ZC      SETC  '&XAUTHCOMP'                                             03628100
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDAUTHCOMPSETUP               03628200
&ZCGPR   SETC  '=CL16''&XAUTHCOMP'''                                    03628300
.PLENDAUTHCOMPSETUP ANOP ,                                              03628400
.*                                                                      03628500
.*                                                                      03628600
.*   _xAuthComp                                                         03628700
         MVC   &PLOFF_XAUTHCOMP1.(16,1),&ZCGPR                          03628800
.*                                                                      03628900
.PLNOAUTHCOMP ANOP ,                                                    03629000
.*                                                                      03629100
.********************************************************************** 03629200
.* Since the extended restart token includes a normal restart token     03629300
.* the normal restart token portion of the extended restart token must  03629400
.* be copied to its own place in the MCB.                               03629500
.********************************************************************** 03629600
.*                                                                      03629700
         AIF   ('&XEXTRESTOKEN' EQ '').PLMULTREQSTNOTSPEC          @L1A 03629800
         MVC   &PLOFF_XRESTOKEN.(8,1),&PLOFF_XEXTRESTOKENTKN.(1)   @L1A 03629900
.*                                                                      03630000
.PLMULTREQSTNOTSPEC ANOP ,                                         @L1A 03630100
.*                                                                      03630200
.*                                                                      03630300
.********************************************************************** 03630400
.* If SKeyReqType=RANGE was specified, the SKRT field in the MCB must   03630500
.* be set by hand (SKRT=11).  Since this is the only field that must be 03630600
.* set by hand (in this byte), we can set it directly.                  03630700
.********************************************************************** 03630800
.*                                                                      03630900
         AIF   ('&XSKEYREQTYPE' NE 'RANGE').NOSKEYREQTYPERANGE          03631000
         OI    &PLOFF_XCMDFLGS2B.(1),B'00011000'                        03631100
.*                                                                      03631200
.NOSKEYREQTYPERANGE ANOP ,                                              03631300
.*                                                                      03631400
.*                                                                      03631500
.**------------------------------------------------------------------** 03631600
.**  Start of user maclasm code                                      ** 03631700
.**------------------------------------------------------------------** 03631800
.*                                                                      03631900
.**  Only generate code if no errors have been found                 ** 03632000
.*                                                                      03632100
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            03632200
.*                                                                      03632300
.*                                                                      03632400
.**------------------------------------------------------------------** 03632500
.**  Ensure AR1 is 0 for primary callers                             ** 03632600
.**------------------------------------------------------------------** 03632700
.*                                                                      03632800
.**  This code is necessary because the entry linkage of the called  ** 03632900
.**  routine needs to reference fields in the parameter list while   ** 03633000
.**  executing in AR mode without knowing the mode of the caller.    ** 03633100
.*                                                                      03633200
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    03633300
         LAE   1,0(1,0)                 Make sure AR1 is cleared        03633400
.CALLSKIPSETAR1 ANOP ,                                                  03633500
.*                                                                      03633600
.*                                                                      03633700
.**------------------------------------------------------------------** 03633800
.**  Generate the linkage to the list routine                        ** 03633900
.**------------------------------------------------------------------** 03634000
.*                                                                      03634100
.**  Note that in the following instructions the index register is   ** 03634200
.**  used instead of the base register so that ALET translation is   ** 03634300
.**  not performed and the code works the same in both primary and   ** 03634400
.**  AR mode.                                                        ** 03634500
.*                                                                      03634600
         L     15,16(0,0)               Get CVT address                 03634700
         L     15,140(15,0)             Get ECVT address                03634800
         L     15,256(15,0)             Get XRAT address                03634900
         L     15,36(15,0)              List mainline routine           03635000
         BALR  14,15                    Branch to routine               03635100
.*                                                                      03635200
.*                                                                      03635300
.ENDGENLINKAGE ANOP ,                                                   03635400
.*                                                                      03635500
.**------------------------------------------------------------------** 03635600
.**  End of user maclasm code                                        ** 03635700
.**------------------------------------------------------------------** 03635800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03635900
.ZLINKX               ANOP  ,                                           03636000
.*******************************************************************    03636100
.***AP.X01  FORMAT GENERATED CODE                                       03636200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            03636300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              03636400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              03636500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              03636600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              03636700
                      AIF   (K'&ZLD LE 0).ZL51                          03636800
&ZLC                  SETA  35             COMMENT COLUMN               03636900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   03637000
&ZLC                  SETA  33             COMMENT COLUMN               03637100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  03637200
&ZLV                  SETC  '&ZLV'.' '                                  03637300
                      AGO   .ZL31                                       03637400
.*                                                                      03637500
.ZL41                 ANOP  ,                                           03637600
&ZLV                  SETC  '&ZLV'.' '                                  03637700
.ZL51                 ANOP  ,                                           03637800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               03637900
.*                                                                      03638000
&ZLL     &ZLOP &ZLV                                                     03638100
.*                                                                      03638200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               03638300
                      AGO   .ZL21          CONTINUE LOOPING             03638400
.*                                                                      03638500
.ZLX1                 ANOP  ,                                           03638600
.*******************************************************************    03638700
.***AP.X02  END OF IXLLSTM MACRO                                        03638800
&ZIXLLSTM             SETC  'YES'          SET IXLLSTM USED             03638900
         POP   PRINT                                                    03639000
*                                            IXLLSTM-4                  03639100
         SPACE 1                                                        03639200
.ZLX2                 ANOP  ,                                           03639300
         MEND                                                           03639400
**********************************************************************/ 03639500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  03639600
*%IXLLSTM: MACRO KEYS(CONTOKEN,REQID,REQUEST,TYPE,ADJAREA,DIRECTION,    03639700
*                 LOCATOR,LISTNUM,KEYSCANTYPE,AUTHCOMPARE,AUTHCOMP,     03639800
*                 AUTHCOMPTYPE,KEYCOMPARE,ENTRYKEY,KEYREQTYPE,          03639900
*                 KEYRANGEEND,SKEYCOMPARE,SECONDARYKEY,SKEYREQTYPE,     03640000
*                 SKEYRANGEEND,ENTRYID,LISTCOMPARE,ENTRYNAME,KEYTYPE,   03640100
*                 VERSCOMPARE,VERSCOMP,VERSCOMPTYPE,BUFLIST,            03640200
*                 BUFADDRTYPE,PAGEABLE,BUFSTGKEY,BUFALET,BUFADDRSIZE,   03640300
*                 BUFNUM,BUFFER,BUFSIZE,RESTOKEN,EXTRESTOKEN,           03640400
*                 FIRSTELEM,LASTELEM,MISCOMPARE,LISTTYPE,MOVETOKEY,     03640500
*                 LISTKEYINC,LISTKEYAREA,MOVETOSKEY,BUFINCRNUM,         03640600
*                 LOCKINDEX,LOCKOPER,LOCKCOMP,MODE,ANSAREA,ANSLEN,      03640700
*                 REQECB,REQDATA,REQTOKEN,FUNCTION,RETCODE,RSNCODE,     03640800
*                 PLISTVER,MF);                                         03640900
*  ANS('?'||MACLABEL||' '||'IXLLSTMP '||MACLIST||                       03641000
*         ' '||MACKEYS||';') COL(MACLMAR);                              03641100
*%END IXLLSTM;                                                          03641200
