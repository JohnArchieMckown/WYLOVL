* %GOTO DEVTYP1; /*                                                     00010000
         MACRO                                                          00020000
&NAME    DEVTYPE &DDLOC,                                               *00021400
               &A,                                                     *00022800
               &DEVTAB,                                                *00024200
               &RPS,                                               @L1C*00025600
               &UCBLIST=,                                          @L1A*00027000
               &PLISTVER=,                                         @03A*00027200
               &INFOLIST=,                                         @L2A*00027400
               &INFO=,                                             @02C*00027900
               &MF=I                                               @L1A 00028400
.**** START OF SPECIFICATIONS ***************************************** 00029800
.*                                                                    * 00031200
.*$MAC(DEVTYPE): DEVTYPE INVOCATION MACRO.                            * 00032600
.*                                                                    * 00034000
.********************************************************************** 00035400
.*                                                                    * 00036800
.*PROPRIETARY V3 STATEMENT                                              00037800
.*LICENSED MATERIALS - PROPERTY OF IBM                                  00038800
.*"RESTRICTED MATERIALS OF IBM"                                         00039800
.*5694-A01                                                              00040800
.*(C) COPYRIGHT 1986,2000  IBM CORP.                                    00041800
.*END PROPRIETARY V3 STATEMENT                                          00042800
.*                                                                    * 00043800
.********************************************************************** 00045200
.*                                                                    * 00046600
.* CHANGE ACTIVITY =                                                  * 00048000
.*                                                                    * 00049400
.* $L1=DISNEW,JDP2220,,STLJAK: SUPPORT FOR DEVICE INFO. SERVICES  @L1A* 00053600
.* $01=OY09880,HDP2230,,PJS088: FIX ABEND118 IN UCBLIST FORM      @01A* 00054300
.*     CHANGES FOR DFSMS/MVS                                      @02A* 00054400
.* $L2=INFOLIST,JDZ1110,,SJPLJAH: ADD INFOLIST SUPPORT            @L2A* 00054500
.* $02=OW09880,HDZ11B0,SJPLSYW: PICK UP OY60658 FROM JDZ1110      @02A* 00054600
.* $L3=UCBVSCR,HDZ11C0,950620,SJPLSYW: ADD ANY/BELOW TO UCBLIST   @L3A* 00054700
.* $03=OW13554,HDZ11C0,950620,SJPLSYW: ADD PLISTVER               @03A* 00054800
.* $L4=>32KBLK,HDZ11F0,990126,SJPLWER: INFO=AMCAP, PL/X INFO=     @L4A* 00054900
.*                                                                    * 00055000
.********************************************************************** 00056400
.*                                                                    * 00056600
.*   FUNCTION =                                                       * 00056800
.*      The DEVTYPE macro is used to invoke device type services      * 00057000
.*      which will return the following information for the device or * 00057200
.*      devices specified in the request if INFOLIST is omitted.   @02C 00057400
.*        WORD 0 - DESCRIBES THE DEVICE AS DEFINED IN THE UCBTYP      * 00057600
.*                 FIELD OF THE UCB.                                  * 00057800
.*        WORD 1 - MAXIMUM BLOCK SIZE (WITH UCBLIST OR DEVTAB).       * 00058000
.*        WORD 2 - (WITH UCBLIST OR DEVTAB FOR DASD DEVICES ONLY).    * 00058200
.*             BYTES 0-1 - THE NUMBER OF PHYSICAL CYLINDERS ON THE    * 00058400
.*                          DEVICE.                                   * 00058600
.*             BYTES 2-3 - THE NUMBER OF TRACKS PER CYLINDER.         * 00058800
.*        WORD 3 - (WITH UCBLIST OR DEVTAB FOR DASD DEVICES ONLY).    * 00059000
.*             BYTES 0-1 - MAXIMUM TRACK LENGTH                       * 00059200
.*             BYTES 2,3 OR 2-3 - BLOCK OVERHEAD. SEE WORD 4.         * 00059400
.*        WORD 4 - (WITH UCBLIST OR DEVTAB FOR DASD DEVICES ONLY).    * 00059600
.*             BYTE  0   - BLOCK OVERHEAD OR MODULO FACTOR.           * 00059800
.*             BYTE  1   -                                            * 00060000
.*                 BIT  0   - IF ON, THE NUMBER OF CYLINDERS IN       * 00060200
.*                            WORD 2, BYTES 0-1 IS INVALID.           * 00060400
.*                 BITS 1-2 - RESERVED.                               * 00060600
.*                 BIT  3   - IF ON, THIS IS A MODULO DEVICE.         * 00060800
.*                 BIT  4   - IF ON, BYTES 2 AND 3 OF WORD 3 CONTAIN  * 00061000
.*                            A HALFWORD GIVING THE BLOCK OVERHEAD    * 00061200
.*                            FOR ANY BLOCK ON A TRACK, INCLUDING THE * 00061400
.*                            LAST BLOCK                              * 00061600
.*                 BITS 5-6 - RESERVED.                               * 00061800
.*                 BIT  7   - IF ON, A TOLERANCE FACTOR MUST BE       * 00062000
.*                            APPLIED TO ALL BLOCKS EXCEPT THE LAST   * 00062200
.*                            BLOCK ON THE TRACK.                     * 00062400
.*             BYTES 2-3 - TOLERANCE FACTOR.                          * 00062600
.*        WORD 5 - (WITH UCBLIST OR RPS FOR DASD DEVICES ONLY).       * 00062800
.*             BYTES 0-1 - R0 OVERHEAD FOR SECTOR CALCULATIONS.       * 00063000
.*             BYTE  2   - NUMBER OF SECTORS FOR THE DEVICE.          * 00063200
.*             BYTE  3   - NUMBER OF DATA SECTORS FOR THE DEVICE.     * 00063400
.*                                                                    * 00063600
.*      Most of the forms of invocation are shown below:              * 00063800
.*                                                                    * 00064000
.*           LABEL DEVTYPE DDLOC,AREAADDR,DEVTAB,RPS                  * 00064200
.*                                                                    * 00064400
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),UCBLIST=YES,MF=L     @02C 00064600
.*                                                                    * 00064800
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),                     @02C 00065000
.*                       UCBLIST=(UCBLADR,UCBLSIZE)                   * 00065200
.*                                                                    * 00065400
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),                     @02C 00065500
.*                       UCBLIST=(UCBLADR,UCBLSIZE),                  * 00065600
.*                       MF=(E,NAME1)                                 * 00065700
.*                                                                    * 00065800
.*           LABEL DEVTYPE DDLOC,(AREAADDR,AREALEN),INFOLIST=ILIST @02A 00065900
.*                                                                 @02A 00066000
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),INFOLIST=ILIST,      @02A 00066100
.*                       UCBLIST=(UCBLADR,UCBLSIZE)                @02A 00066200
.*                                                                 @02A 00066300
.*           LABEL DEVTYPE INFO=(SUFFIX,DASD,DEVTYPE,AMCAP)        @L4C 00066400
.*                                                                    * 00066500
.*      THE MACRO POSITIONAL OPERANDS ARE:                            * 00066600
.*         DDLOC    - NAME OF THE FIELD CONTAINING A DD NAME.         * 00066700
.*         A        - NAME OF THE STORAGE TO RECEIVE THE RESULTS.     * 00066800
.*                    FOR UCBLIST FORM, NAME AND SIZE OF THE STORAGE  * 00067000
.*                    TO RECEIVE THE RESULTS.                         * 00067200
.*         DEVTAB   - RETURN DASD INFORMATION (5 WORDS).              * 00067400
.*         RPS      - RETURN RPS INFORMATION (6TH WORD).              * 00067600
.*                                                                    * 00067800
.*      THE MACRO KEYWORDS ARE:                                       * 00068000
.*         MF       - LIST, EXECUTE, AND INLINE FORMS.                * 00068200
.*         UCBLIST  - Name of a list of UCB addresses and the         * 00068300
.*                    number of addresses in the list.  Mutually   @02C 00068400
.*                    exclusive with DDLOC above.                  @02A 00068500
.*         INFOLIST - Name of an invocation of DEVTYPE with INFO=. @02A 00068600
.*         PLISTVER - Control format of parameter list.            @03A 00068700
.*         INFO     - One or more codes identifying the type of    @02A 00068800
.*                    information to retrieve.                     @02A 00068900
.*                                                                    * 00069000
.*      UCBLIST provides a list service where the caller passes a  @02C 00069100
.*      list and count of the addresses of UCBs.  The information  @02C 00069200
.*      returned will be six words per device regardless of device @02C 00069300
.*      type if INFOLIST is not coded.  If INFOLIST is coded, then @02C 00069400
.*      the amount of information returned depends on the codes    @02C 00069500
.*      specified with INFO=.                                      @02C 00069600
.*                                                                    * 00070200
.*      PLISTVER=0 generates a 20-byte parameter list, which       @03A 00070300
.*      allows execution on MVS/DFP version 3.  This is assumed    @03A 00070400
.*      if INFOLIST is omitted on the standard form.  PLISTVER=0   @03A 00070500
.*      is invalid if INFOLIST or INFO is coded.                   @03A 00070600
.*      PLISTVER=1 or "MAX" or omitted on list form will generate  @03A 00070700
.*      a 24-byte parameter list.                                  @03A 00070800
.*                                                                    * 00070900
.*      If parameters are specified in the invocation that are not @02C 00071000
.*      needed for the request, those parameters are diagnosed     @02C 00071100
.*      with an error message and ignored.  This is to let the     @02C 00071200
.*      user know which of the contradiction was assumed.          @02A 00071300
.*                                                                    * 00071400
.*   PROCESSOR = PL/X, High Level Assembler                        @L4C 00071500
.*                                                                    * 00071600
.********************************************************************** 00071700
         LCLA  &I,&J                                               @L2A 00071800
         LCLB  &LOCANY,&LOCANYX                                    @L3A 00071900
&LOCANY  SETB  0         LOCANY IS 0 (BELOW) FOR DEFAULT           @L3A 00072000
&LOCANYX SETB  0         3RD PARAMETER IS EXPLICITILY SPECIFIED    @L3A 00072100
         LCLB  &SWERR    Error switch, suppress expansion if on    @02A 00073700
         LCLC  &LABEL    Symbol to generate in expansion           @02A 00074200
&LABEL   SETC  '&NAME'   Prepare name to generate                  @02A 00074700
.*                                                                 @03A 00074800
.* Do syntax checking for PLISTVER                                 @03A 00074900
         AIF   (T'&PLISTVER EQ 'O').NOPLVER   IF PLISTVER OMITTED  @03A 00075000
         AIF   ('&PLISTVER' EQ '0' OR '&PLISTVER' EQ '1' OR            X00075100
               '&PLISTVER' EQ 'MAX').PLVER1                        @03A 00075200
         MNOTE 8,'KEYWORD PLISTVER MUST BE "0", "1" OR "MAX".'     @03A 00075300
&SWERR   SETB  1              SUPPRESS EXPANSION                   @03A 00075400
         AGO   .NOPLVER       CONTINUE                             @03A 00075500
.PLVER1  ANOP                                                      @03A 00075600
         AIF   ('&PLISTVER' EQ '0' AND '&INFOLIST' NE '').PLVER2   @03A 00075700
         AIF   ('&PLISTVER' EQ '0' AND '&INFO' NE '').PLVER2       @03A 00075800
         AGO   .NOPLVER       CONTINUE                             @03A 00075900
.PLVER2  ANOP                                                      @03A 00076000
         MNOTE 8,'KEYWORD PLISTVER=0 IS INVALID WITH INFO OR INFOLIST K*00076100
               EYWORD PARAMETER'                                   @03A 00076200
&SWERR   SETB  1              SUPPRESS EXPANSION                   @03A 00076300
.*                                                                 @03A 00076400
.NOPLVER ANOP                                                      @03A 00076500
         AIF   ('&INFO' NE '').INFOKL    Go if coded, even ()      @02A 00076600
         AIF   (T'&UCBLIST NE 'O').UCBLIST NEW MACRO FORMAT        @L1A 00076700
         AIF   (T'&INFOLIST NE 'O').TESTDD                         @02C 00076800
         AIF   ('&MF' NE 'I').TESTDD    Go if list or execute form @02C 00076900
.* It is the old form with no keywords.                            @02C 00077200
         AIF   ('&DDLOC' EQ '').E1                                      00078300
         AIF   ('&A' EQ '').E2                                          00080000
&NAME    IHBINNRA &DDLOC,&A                                             00100000
         AIF   ('&DEVTAB' EQ '').SVC                                    00120000
         AIF   ('&DEVTAB' NE 'DEVTAB').E3                               00140000
         AIF   ('&RPS' EQ '').NORP      NO RPS REQUESTED                00148000
         AIF   ('&RPS' NE 'RPS').NORP   CORRECTLY                       00156000
         LCR   1,1            COMPLEMENT TO INDICATE RPS         S20201 00164000
.NORP    LCR   0,0            COMPLEMENT TO INDICATE DEVTAB      S20201 00172000
.SVC     SVC   24                                                       00180000
         MEXIT                                                          00200000
.* Do all syntax checking before starting the expansion.           @02A 00200100
.*** Check the UCBLIST parameter.                                  @02A 00200200
.UCBLIST ANOP                 Examine                              @L1A 00200300
         AIF   ('&UCBLIST' EQ 'YES' AND '&MF(1)' NE 'I').UCBLOK    @L1A 00200400
         AIF   (N'&UCBLIST EQ 2).UCBLOK1                           @L1A 00200600
         AIF   (N'&UCBLIST EQ 3).UCBLOK2                           @L3A 00200700
         MNOTE 8,'KEYWORD UCBLIST MUST BE "YES" OR HAVE TWO OR THREE OP*00200800
               ERANDS.'                                            @L3C 00200900
&SWERR   SETB  1              Suppress expansion                   @02C 00201000
         AGO   .UCBLOK        Avoid another error on UCBLIST       @02A 00201100
.UCBLOK2 ANOP                                                      @L3A 00201200
&LOCANYX SETB  1              THIRD PARAMETER EXISTS               @L3A 00201300
         AIF   ('&UCBLIST(3)' EQ 'BELOW').UCBLOK1                  @L3A 00201400
         AIF   ('&UCBLIST(3)' EQ 'ANY').UCBLOK3                    @L3A 00201500
         MNOTE 8,'UCBLIST THIRD VALUE MUST BE BELOW OR ANY.'       @L3A 00201600
&SWERR   SETB  1              SUPPRESS EXPANSION                   @L3A 00201700
         AGO   .UCBLOK        AVOID ANOTHER ERROR ON UCBLIST       @L3A 00201800
.UCBLOK3 ANOP                                                      @L3A 00201900
&LOCANY  SETB  1              ANY IS SPECIFIED IN UCBLIST          @L3A 00202000
.UCBLOK1 ANOP                                                      @L1A 00202100
         AIF   ('&MF(1)' NE 'L').UCBLOK                            @L1A 00202200
         AIF   ('&UCBLIST(1)'(1,1) EQ '(').UCBLBAD                 @L1A 00202300
         AIF   ('&UCBLIST(2)'(1,1) NE '(').UCBLOK                  @L1A 00202400
.UCBLBAD ANOP                                                      @L1A 00202500
         IHBERMAC 69                                               @L1A 00202600
&SWERR   SETB  1              Suppress expansion                   @02C 00202700
.*** Check the first positional parameter, DD name.                @02A 00202800
.UCBLOK  ANOP                 UCBLIST was coded.                   @02C 00202900
         AIF   (T'&DDLOC EQ 'O').TESTA                             @02A 00203000
         MNOTE 8,'DO NOT CODE THE FIRST POSITIONAL PARAMETER WITH UCBLI*00203100
               ST= OR INFO='  Complain and ignore                  @02A 00203200
         AGO   .TESTA                                              @02A 00203300
.TESTDD  ANOP                 UCBLIST was not coded.               @02A 00203400
         AIF   (T'&DDLOC NE 'O' OR '&MF' NE 'I').TESTDD1           @02A 00203500
         MNOTE 8,'ON THE STANDARD FORM YOU MUST CODE DD NAME LOCATION O*00203600
               R UCBLIST='                                         @02A 00203700
&SWERR   SETB  1              Suppress expansion                   @02A 00203800
         AGO   .TESTA                                              @02A 00203900
.TESTDD1 AIF   (T'&DDLOC EQ 'O' OR '&MF' NE 'L').TESTA             @02A 00204000
         AIF   ('&DDLOC'(1,1) NE '(').TESTA                        @02A 00204100
         MNOTE 8,'WITH MF=L, DD NAME AREA MUST NOT BE IN PARENTHESES'   00204200
&SWERR   SETB  1              Suppress expansion                   @02A 00204300
.*** Check the second positional parameter, return area.           @02A 00204400
.TESTA   AIF   (T'&A EQ 'O' AND '&MF(1)' NE 'I').ADROK             @L1A 00204500
         AIF   (N'&A EQ 2).ADROK1                                  @L1A 00204600
         MNOTE 8,'SECOND POSITIONAL OPERAND MUST HAVE 2 SUBOPERANDS.'  *00204700
                                                                   @L1A 00204800
&SWERR   SETB  1              Suppress expansion                   @02C 00204900
         AGO   .ADROK         Avoid an extra error message         @02A 00205000
.ADROK1  ANOP                                                      @L1A 00205100
         AIF   ('&MF(1)' NE 'L').ADROK                             @L1A 00205200
         AIF   (T'&A EQ 'O').ADROK                                 @L1A 00205300
         AIF   ('&A(1)'(1,1) EQ '(').ADRBAD                        @L1A 00205400
         AIF   ('&A(2)'(1,1) NE '(').ADROK                         @L1A 00205500
.ADRBAD  ANOP                                                      @L1A 00205600
         IHBERMAC 69                                               @L1A 00205700
&SWERR   SETB  1              Suppress expansion                   @L1A 00205800
.*** Test the INFOLIST parameter.                                  @02A 00205900
.ADROK   AIF   (T'&INFOLIST EQ 'O').TESTL  Go if INFOLIST omitted  @02C 00206000
         AIF   ('&INFOLIST'(1,1) NE '(' OR '&MF' NE 'L').TESTL     @02A 00206100
         MNOTE 8,'WITH MF=L, INFOLIST MUST NOT BE IN PARENTHESES'  @02A 00206200
&SWERR   SETB  1              Suppress expansion                   @02A 00206300
.*** Test the MF parameter.                                        @02A 00206400
.TESTL   AIF   ('&MF(1)' NE 'L').MFOK1    Go if not list form      @02C 00206500
         AIF   (N'&MF NE 1).MFBAD  Go if too many MF values        @L1A 00206600
         AGO   .SKIPIL2                                            @L1A 00206700
.MFOK1   ANOP                                                      @L1A 00206800
         AIF   ('&MF' EQ 'I').MFOK     Go if standard form (no MF) @02C 00206900
         AIF   ('&MF(1)' NE 'E').MFBAD                             @L1A 00207000
         AIF   (N'&MF EQ 2).NOLIST     Go if valid execute form    @L1A 00207100
.MFBAD   ANOP                                                      @L1A 00207200
         IHBERMAC 35                                               @L1A 00207300
.MEXIT   ANOP                Define label to prevent spurious msgs @02A 00207400
&LABEL   DC    0H'0'                                               @02A 00207500
         MEXIT                                                     @02C 00207600
.*** Begin standard form of expansion                              @02A 00207700
.MFOK    ANOP                                                      @L1A 00207800
         AIF   (&SWERR).MEXIT           Go if any syntax error     @02C 00207900
         CNOP  0,4            ENSURE PARAMETER LIST ALIGNMENT      @L1A 00208000
&LABEL   BAS   1,IHB&SYSNDX   SKIP OVER PARAMETER LIST             @02C 00208100
&LABEL   SETC  ''             Prevent duplicate labels             @02C 00208200
.*** Begin list form of expansion.                                 @02C 00208300
.SKIPIL2 AIF   (&SWERR).MEXIT           Go if any syntax error     @02C 00208400
.* Make a full-length parameter list unless INFOLIST omitted and   @02A 00208500
.* this is the standard form.  Otherwise we would need a way for   @02A 00208600
.* the user to cause a long form and he would have to remember to  @02A 00208700
.* code it.                                                        @02A 00208800
.* If PLISTVER=0 is coded, then use length code of 16              @03A 00208900
         AIF   ('&PLISTVER' EQ '0').LNGTH1                         @03A 00209000
.*  PLISTVER=1 or MAX or omitted will come to here                 @03A 00209100
         AIF   ('&PLISTVER' EQ '1' OR '&PLISTVER' EQ 'MAX').LNGTHA @03A 00209200
         AIF   (T'&INFOLIST EQ 'O' AND '&MF' EQ 'I').LNGTH1        @02C 00209300
.LNGTHA  ANOP                                                      @03A 00209400
&LABEL   DC    0F'0',AL1(24)  LENGTH OF PARAMETER LIST             @02C 00209500
         AGO   .LNGTH2                                             @L2A 00209600
.* Generate a short list for compatibility with old code.  Use a   @02A 00209700
.* length code of 16 even though the list is 20 bytes.             @02A 00209800
.LNGTH1  ANOP                                                      @03C 00209900
&LABEL   DC    AL1(16)        LENGTH CODE FOR PARAMETER LIST       @03A 00210000
.LNGTH2  DC    AL1(1)         VERSION OF PARAMETER LIST            @L1A 00210100
         AIF   ('&DDLOC' EQ '').DDLNO   Go if DD loc omitted       @02A 00210200
         DC    X'8000'        DD NAME LOCATION WAS CODED                00210300
         AIF   ('&DDLOC'(1,1) EQ '(').DD4                          @02A 00210400
         DC    A(&DDLOC)      ADDRESS OF DD NAME                        00210500
         AGO   .DD5                                                @02A 00210600
.DD4     DC    A(0)           ADDRESS OF DD NAME                        00210700
.DD5     DC    A(0)           RESERVED OR UCB LIST LENGTH               00210800
         AGO   .LIST4         Skip over UCBLIST expanding          @02A 00210900
.DDLNO   DC    B'0&LOCANY.000000',X'00'  Flags & reserved          @L4C 00211000
         AIF   ('&UCBLIST' EQ 'YES' OR '&UCBLIST' EQ '').LIST1     @02C 00211100
         AIF   ('&UCBLIST(1)'(1,1) EQ '(').LIST1                   @L1A 00211200
         DC    A(&UCBLIST(1)) ADDRESS OF UCB LIST                  @L1A 00211300
         AGO   .LIST2                                              @L1A 00211400
.LIST1   ANOP                                                      @L1A 00211500
         DC    A(0)           ADDRESS OF UCB LIST OR DD NAME       @L1A 00211600
.LIST2   ANOP                                                      @L1A 00211700
         AIF   ('&UCBLIST' EQ 'YES' OR '&UCBLIST' EQ '').LIST3     @02C 00211800
         AIF   ('&UCBLIST(2)'(1,1) EQ '(').LIST3                   @L1A 00211900
         DC    A(&UCBLIST(2)) NUMBER OF UCBS IN LIST               @L1A 00212000
         AGO   .LIST4                                              @L1A 00212100
.LIST3   ANOP                                                      @L1A 00212200
         DC    A(0)           NUMBER OF UCBS IN LIST               @L1A 00212300
.LIST4   ANOP                                                      @L1A 00212400
         AIF   (T'&A EQ 'O').LIST5                                 @L1A 00212500
         AIF   (T'&A(1) EQ 'O').LIST5                              @L1A 00212600
         AIF   ('&A(1)'(1,1) EQ '(').LIST5                         @L1A 00212700
         DC    A(&A(1))       ADDRESS OF RESULT AREA               @L1A 00212800
         AGO   .LIST6                                              @L1A 00212900
.LIST5   ANOP                                                      @L1A 00213000
         DC    A(0)           ADDRESS OF RESULT AREA               @L1A 00213100
.LIST6   ANOP                                                      @L1A 00213200
         AIF   (T'&A EQ 'O').LIST7                                 @L1A 00213300
         AIF   (T'&A(2) EQ 'O').LIST7                              @L1A 00213400
         AIF   ('&A(2)'(1,1) EQ '(').LIST7                         @L1A 00213500
         DC    A(&A(2))       SIZE OF RESULT AREA                  @L1A 00213600
         AGO   .LIST8                                              @L1A 00213700
.LIST7   ANOP                                                      @L1A 00213800
         DC    A(0)           SIZE OF RESULT AREA                  @L1A 00213900
.LIST8   ANOP                                                      @L2A 00214000
         AIF   ('&PLISTVER' EQ '0').LIST10                         @03A 00214100
         AIF   ('&PLISTVER' EQ '1' OR '&PLISTVER' EQ 'MAX').LIST9A @03A 00214200
         AIF   (T'&INFOLIST EQ 'O' AND '&MF' EQ 'I').LIST10        @02C 00214300
.LIST9A  ANOP                                                      @03A 00214400
         AIF   ('&INFOLIST' EQ '').LIST9                           @02C 00214500
         AIF   ('&INFOLIST'(1,1) EQ '(').LIST9                     @L2A 00214600
         DC    A(&INFOLIST)   ADDRESS OF INFO LIST (DEVTYPE INFO=) @02C 00214700
         AGO   .LIST10                                             @L2A 00214800
.LIST9   ANOP                                                      @L2A 00214900
         DC    A(0)           ADDRESS OF INFO LIST (DEVTYPE INFO=) @L2A 00215000
.LIST10  ANOP                 We are finished generating the list. @L1A 00215100
         AIF   ('&MF(1)' EQ 'L').SKIPIL9                           @L1A 00215200
IHB&SYSNDX DS  0H                                                  @02C 00215300
         AGO   .NOLIST1                                            @02A 00215400
.*** Start generating the execute form.                                 00215500
.NOLIST  AIF   (&SWERR).MEXIT           Go if any syntax error     @02C 00215600
&LABEL   IHBINNRA &MF(2)      Point register 1 to parameter list   @L1A 00215700
.*** Continue generating the standard form or the execute form.    @02A 00215800
.NOLIST1 ANOP                                                      @L1A 00215900
.*** Store DD name address or UCB list address and length.         @02A 00216000
         AIF   ('&DDLOC' EQ '').EFORM1                             @02A 00216100
         AIF   ('&DDLOC'(1,1) EQ '(').EFORM1R                      @02A 00216200
         AIF   ('&MF(1)' NE 'E').EFORM5  Go if we already have it  @02A 00216300
         LA    0,&DDLOC            GET ADDRESS OF DD NAME AREA          00216400
         ST    0,4(,1)             DD NAME LOCATION ADDR IN LIST        00216500
         AGO   .EFORM1S                                            @02A 00216600
.EFORM1R ST    &DDLOC(1),4(,1)     DD NAME LOCATION ADDR IN LIST        00216700
.EFORM1S AIF   ('&MF(1)' NE 'E').EFORM5  Go if we already have it  @02A 00216800
         OI    2(1),X'80'          INDICATOR OF DD NAME                 00216900
         AGO   .EFORM5                                             @02A 00217000
.* Handle UCBLIST.                                                      00217100
.EFORM1  AIF   ('&UCBLIST' EQ 'YES' OR '&UCBLIST' EQ '').EFORM4Z   @L3C 00217200
         AIF   ('&UCBLIST(1)'(1,1) EQ '(').EFORM2R                 @02C 00217300
         AIF   ('&MF(1)' NE 'E').EFORM3  Go if already have it     @02C 00217400
         LA    0,&UCBLIST(1)       GET ADDRESS OF UCB LIST              00217500
         ST    0,4(,1)             UCB LIST ADDRESS                     00217600
         AGO   .EFORM3                                             @02C 00217700
.EFORM2R ST    &UCBLIST(1),4(,1)   STORE UCB LIST ADDRESS               00217800
.EFORM3  AIF   ('&UCBLIST(2)'(1,1) EQ '(').EFORM3R                 @02C 00217900
         AIF   ('&MF(1)' NE 'E').EFORM4  Go if already have it     @02A 00218000
         LA    0,&UCBLIST(2)       GET NUMBER OF UCBS                   00218100
         ST    0,8(,1)             STORE NUMBER OF UCBS IN LIST         00218200
         AGO   .EFORM4                                             @02A 00218300
.EFORM3R ST    &UCBLIST(2),8(,1)   STORE NUMBER OF UCB'S IN LIST        00218400
.*** CHECK FOR LOC ANY AND BELOW                                   @L3A 00218500
.EFORM4  AIF   ('&MF(1)' NE 'E').EFORM5   Go if already set bits   @L3C 00218600
         AIF   (&LOCANY EQ 0).EFORM4M                              @L3A 00218700
         NI    2(1),X'7F'          INDICATOR OF UCB LIST           @L3M 00218800
         OI    2(1),X'40'          UCBLIST ANY FLAG                @L3A 00218900
         AGO   .EFORM5                                             @L3A 00219000
.EFORM4M ANOP                                                      @L3A 00219100
.*       IF THE THIRD PARAMETER IS OMITTED, BELOW IS ASSUMED       @L3A 00219200
         NI    2(1),X'3F'          UCBLIST BELOW FLAG              @L3A 00219300
         AGO   .EFORM5                                                  00219400
.EFORM4Z AIF   ('&MF(1)' NE 'E').EFORM5  Go if warning not needed  @L3C 00219500
*        DD NAME OR UCB LIST IS ALREADY IN THE PARAMETER LIST.          00219600
.*** Store the address and length of the output area.              @02A 00219700
.EFORM5  ANOP                                                      @L3A 00219800
         AIF   (T'&A EQ 'O').EFORM6X                               @02C 00219900
         AIF   ('&A(1)'(1,1) EQ '(').EFORM5R                       @02C 00220000
         AIF   ('&MF(1)' NE 'E').EFORM6  Go if already have it     @02A 00220100
         LA    0,&A(1)             ADDRESS OF OUTPUT AREA               00220200
         ST    0,12(,1)            STORE ADDRESS OF OUTPUT AREA         00220300
         AGO   .EFORM6                                             @02C 00220400
.EFORM5R ST    &A(1),12(,1)        PUT AREA ADDRESS INTO PARMS          00220500
.EFORM6  AIF   ('&A(2)'(1,1) EQ '(').EFORM6R                       @02C 00220600
         AIF   ('&MF(1)' NE 'E').EFORM7   Go if already have it    @02C 00220700
         LA    0,&A(2)             LENGTH OF OUTPUT AREA                00220800
         ST    0,16(,1)            STORE LENGTH OF OUTPUT AREA          00220900
         AGO   .EFORM7                                             @02A 00221000
.EFORM6R ST    &A(2),16(,1)        PUT AREA SIZE INTO PARMS        @02C 00221100
         AGO   .EFORM7                                             @02A 00221200
.EFORM6X AIF   ('&MF(1)' NE 'E').EFORM7  Go if warning not needed  @02A 00221300
*        OUTPUT AREA AND LENGTH ARE ALREADY IN THE PARAMETER LIST.      00221400
.*** Store address of the area coded via the INFOLIST parameter.   @02A 00221500
.EFORM7  ANOP                                                      @L2A 00221600
         AIF   (T'&INFOLIST EQ 'O').INLINEX                        @L2A 00221700
         AIF   ('&INFOLIST'(1,1) EQ '(').EFORM7R                   @02C 00221800
         AIF   ('&MF(1)' NE 'E').INLINEX   Go if already have it   @02C 00221900
         LA    0,&INFOLIST         GET ADDRESS OF DEVTYPE INFO=XXX @02C 00222000
         ST    0,20(,1)            STORE INFOLIST ADDRESS          @02C 00222100
         AGO   .INLINEX                                            @02A 00222200
.EFORM7R ST    &INFOLIST(1),20(,1) STORE INFOLIST ADDRESS          @02A 00222300
.* Cannot give warning about no INFOLIST.  List may be short.      @L3C 00222400
.INLINEX ANOP                                                      @L1A 00222500
         SR    0,0                 SHOW PARAMETER LIST IS PROVIDED @02C 00222600
         SVC   24                  CALL DEVTYPE SERVICE ROUTINE    @L1A 00222700
.SKIPIL9 ANOP                                                      @L1A 00222800
         MEXIT                                                     @L1A 00222900
.*** Process the INFO keyword.  No other parameter except maybe    @02C 00223000
.*** MF=L may be coded with it.                                    @02C 00223100
.INFOKL  ANOP                 (N'&SYSLIST is num. of positionals)  @02C 00223200
         AIF   (N'&SYSLIST GT 0 OR '&UCBLIST' NE '' OR                 *00223300
               '&INFOLIST' NE '').ITOOMCH                          @02C 00223400
         AIF   ('&MF' EQ 'I' OR '&MF' EQ 'L').INFOKE               @02C 00223500
.ITOOMCH MNOTE 8,'IF YOU CODE THE INFO KEYWORD, CODE NO OTHER PARAMETER*00223600
                EXCEPT MAYBE MF=L OR PLISTVER.'                    @03C 00223700
.INFOKE  ANOP                                                      @02C 00223800
&J       SETA  N'&INFO        Get number of values or nulls        @02C 00223900
&NAME    DC    H'&J'          NUMBER OF ENTRIES IN INFO LIST       @02C 00224000
&I       SETA  1              Initialize loop counter              @02C 00224100
.INFOL   AIF   ('&INFO(&I)' EQ 'DEVTYPE').DTYPE                    @02C 00224200
         AIF   ('&INFO(&I)' EQ 'DASD').DASD                        @02C 00224300
         AIF   ('&INFO(&I)' EQ 'SUFFIX').SUFIX                     @02C 00224400
         AIF   ('&INFO(&I)' EQ 'AMCAP').AMCAP                      @L4A 00225200
         MNOTE 8,'INFO VALUES MUST BE DEVTYPE, DASD, SUFFIX OR AMCAP'   00226000
         MEXIT                                                     @02C 00226800
.DTYPE   DC    X'0104'        DEVTYPE CODE                         @02C 00227600
         AGO   .BUMPI                                              @02C 00228400
.DASD    DC    X'0210'        DASD CODE                            @02C 00229200
         AGO   .BUMPI                                              @02C 00230000
.SUFIX   DC    X'0302'        SUFFIX CODE                          @02C 00230800
         AGO   .BUMPI                                              @L4C 00231600
.AMCAP   DC    X'0420'        AMCAP (access method capability)     @L4A 00232400
.BUMPI   ANOP                                                      @02C 00233200
&I       SETA  &I+1           Increment to next INFO= value        @02C 00234000
         AIF   (&I LE &J).INFOL  Loop if another entry in the list @02C 00234800
         MEXIT                                                     @02C 00235600
.*** Error processing when UCBLIST, INFOLIST and MF are omitted.   @02C 00236400
.E1      IHBERMAC 2                                                     00237300
         MEXIT                                                          00240000
.E2      IHBERMAC 3                                                     00260000
         MEXIT                                                          00280000
.E3      IHBERMAC 38,,&DEVTAB                                           00300000
         MEND                                        */                 00350000
* %DEVTYP1: ;                                                  /*@L1A*/ 00400000
* %DEVTYPE: MACRO KEYS(UCBLIST,  /* CONTAINS THE ADDR OF THE LIST OF    00450000
*                                            UCBS                @L1A*/ 00500000
                       INFO, !Information list of codes           @L4A  00525000
*                      MF);  /* MACRO FORMAT                     @L1A*/ 00550000
*         /* ALSO, POSITIONAL (MACLIST) OPERANDS                        00600000
*                      DDLOC,  ADDRESS OF DD STATEMENT NAME             00650000
*                      A,      ADDRESS (AND SIZE, IF UCBLIST USED)      00700000
*                              OF AREA TO RECEIVE RESULTS               00750000
*                      DEVTAB, NUMBER OF WORDS RETURNED IS 2 OR 5       00800000
*                      RPS     NUMBER OF WORDS RETURNED IS 6     @L1A*/ 00850000
*  DCL EHAREGS CHAR EXTERNAL;  /* REGISTERS FOR EPILOG TO DCL    @L1A*/ 00900000
*  DCL DEVTRC FIXED;  /* RETURN CODE FROM DEVTYPE MACRO          @L1A*/ 00950000
*  DEVTRC = 0;                                                 /*@L1A*/ 00975000
*  ANS('/* '||MACLABEL||' DEVTYPE '||MACLIST||' '||MACKEYS||' */')      01000000
*      NORESCAN SKIP COL(MACLMAR+1);                           /*@L1A*/ 01050000
*  IF NUMBER(UCBLIST) < 1 THEN                                 /*@L1A*/ 01100000
*    DO;  /* OLD FORM OF MACRO CALL                              @L1A*/ 01150000
*      IF NUMBER(MACLIST(1)) < 1 THEN                          /*@L1A*/ 01200000
*        DO;                                                   /*@L1A*/ 01250000
*          ANS MSG('FIRST POSITIONAL OPERAND REQUIRED')        /*@L1A*/ 01300000
*              NORESCAN;                                       /*@L1A*/ 01350000
*          ANS('/* FIRST POSITIONAL OPERAND REQUIRED */')      /*@L1A*/ 01400000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 01450000
*          IF DEVTRC < 12 THEN                                 /*@L1A*/ 01475000
*            DEVTRC = 12;                                      /*@L1A*/ 01500000
*          ELSE;                                               /*@L1A*/ 01525000
*        END;                                                  /*@L1A*/ 01550000
*      ELSE;                                                   /*@L1A*/ 01600000
*      IF NUMBER(MACLIST(2)) < 1 THEN                          /*@L1A*/ 01650000
*        DO;                                                   /*@L1A*/ 01700000
*          ANS MSG('SECOND POSITIONAL OPERAND REQUIRED')       /*@L1A*/ 01750000
*              NORESCAN;                                       /*@L1A*/ 01800000
*          ANS('/* SECOND POSITIONAL OPERAND REQUIRED */')     /*@L1A*/ 01850000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 01900000
*          IF DEVTRC < 12 THEN                                 /*@L1A*/ 01925000
*            DEVTRC = 12;                                      /*@L1A*/ 01950000
*          ELSE;                                               /*@L1A*/ 01975000
*        END;                                                  /*@L1A*/ 02000000
*      ELSE;                                                   /*@L1A*/ 02050000
*      IF NUMBER(MACLIST(3)) >= 1 & MACLIST(3) ^= 'DEVTAB'     /*@L1A*/ 02100000
*          THEN                                                /*@L1A*/ 02150000
*        DO;                                                   /*@L1A*/ 02200000
*          ANS MSG('THIRD POSITIONAL OPERAND INVALID')         /*@L1A*/ 02250000
*              NORESCAN;                                       /*@L1A*/ 02300000
*          ANS('/* THIRD POSITIONAL OPERAND INVALID */')       /*@L1A*/ 02350000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 02400000
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 02425000
*            DEVTRC = 8;                                       /*@L1A*/ 02450000
*          ELSE;                                               /*@L1A*/ 02475000
*        END;                                                  /*@L1A*/ 02500000
*      ELSE;                                                   /*@L1A*/ 02550000
*      IF NUMBER(MACLIST(4)) >= 1 & MACLIST(4) ^= 'RPS' THEN   /*@L1A*/ 02600000
*        DO;                                                   /*@L1A*/ 02650000
*          ANS MSG('FOURTH POSITIONAL OPERAND INVALID')        /*@L1A*/ 02700000
*              NORESCAN;                                       /*@L1A*/ 02750000
*          ANS('/* FOURTH POSITIONAL OPERAND INVALID */')      /*@L1A*/ 02800000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 02850000
*          IF DEVTRC < 4 THEN                                  /*@L1A*/ 02875000
*            DEVTRC = 4;                                       /*@L1A*/ 02900000
*          ELSE;                                               /*@L1A*/ 02925000
*        END;                                                  /*@L1A*/ 02950000
*      ELSE;                                                   /*@L1A*/ 03000000
*      IF DEVTRC > 4 THEN                                      /*@L1A*/ 03050000
*        RETURN CODE(DEVTRC);                                  /*@L1A*/ 03100000
*      ELSE;                                                   /*@L1A*/ 03150000
*      IF INDEX(EHAREGS,'01P') = 0 THEN                        /*@L1A*/ 03200000
*        EHAREGS = EHAREGS || '01P';                           /*@L1A*/ 03250000
*      ELSE;                                                   /*@L1A*/ 03300000
*      IF INDEX(EHAREGS,'00P') = 0 THEN                        /*@L1A*/ 03350000
*        EHAREGS = EHAREGS || '00P';                           /*@L1A*/ 03400000
*      ELSE;                                                   /*@L1A*/ 03450000
*      ANS('DO; ')                                             /*@L1A*/ 03500000
*          NORESCAN SKIP COL(MACCOL);                          /*@L1A*/ 03550000
*      ANS('RFY (GPR00P,GPR01P) RSTD; ')                       /*@L1A*/ 03600000
*          NORESCAN SKIP COL(MACCOL + 2);                      /*@L1A*/ 03650000
*      IF MACLIST(1,1:1) = '(' THEN                            /*@L1A*/ 03700000
*        ANS('GPR01P = '||MACLIST(1)||'; ')                    /*@L1A*/ 03750000
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 03800000
*      ELSE                                                    /*@L1A*/ 03850000
*        ANS('GPR01P = ADDR('||MACLIST(1)||'); ')              /*@L1A*/ 03900000
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 03950000
*      IF MACLIST(2,1:1) = '(' THEN                            /*@L1A*/ 04000000
*        ANS('GPR00P = '||MACLIST(2)||'; ')                    /*@L1A*/ 04050000
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 04100000
*      ELSE                                                    /*@L1A*/ 04150000
*        ANS('GPR00P = ADDR('||MACLIST(2)||'); ')              /*@L1A*/ 04200000
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 04250000
*      IF MACLIST(3) = 'DEVTAB' THEN                           /*@L1A*/ 04300000
*        ANS('GPR00P = 0 - GPR00P; ')                          /*@L1A*/ 04350000
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 04400000
*      ELSE;                                                   /*@L1A*/ 04450000
*      IF MACLIST(4) = 'RPS' THEN                              /*@L1A*/ 04500000
*        ANS('GPR01P = 0 - GPR01P; ')                          /*@L1A*/ 04550000
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 04600000
*      ELSE;                                                   /*@L1A*/ 04650000
*      ANS('SVC(24); ')                                        /*@L1A*/ 04700000
*          NORESCAN SKIP COL(MACCOL + 2);                      /*@L1A*/ 04750000
*      ANS('RFY (GPR00P,GPR01P) UNRSTD; ')                     /*@L1A*/ 04800000
*          NORESCAN SKIP COL(MACCOL + 2);                      /*@L1A*/ 04850000
*      ANS('END; ')                                            /*@L1A*/ 04900000
*          NORESCAN SKIP COL(MACCOL);                          /*@L1A*/ 04950000
*      RETURN CODE(DEVTRC);                                    /*@L1A*/ 05000000
*    END;                                                      /*@L1A*/ 05050000
*  ELSE                                                        /*@L1A*/ 05100000
*    DO;  /* UCB LIST FORM OF MACRO CALL                         @L1A*/ 05150000
*      IF NUMBER(UCBLIST) = 2 |                                /*@L1A*/ 05187500
*         NUMBER(UCBLIST) = 3 |                                /*@L3A*/ 05206200
*          (NUMBER(MF) > 0 &                                   /*@L1A*/ 05225000
*           NUMBER(UCBLIST) = 1 & UCBLIST(1) = 'YES') THEN;    /*@L1A*/ 05262500
*      ELSE                                                    /*@L1A*/ 05300000
*        DO;                                                   /*@L1A*/ 05350000
*          ANS MSG('KEYWORD UCBLIST MUST BE "YES" OR HAVE TWO '||       05400000
*              'OR THREE OPERANDS. ')                          /*@L3C*/ 05450000
*              NORESCAN;                                       /*@L1A*/ 05500000
*          ANS('/* KEYWORD UCBLIST MUST BE "YES" OR HAVE TWO ')         05550000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 05600000
*          ANS('OR THREE OPERANDS. */')                        /*@L3C*/ 05650000
*              NORESCAN;                                       /*@L1A*/ 05700000
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 05707100
*            DEVTRC = 8;                                       /*@L1A*/ 05714200
*          ELSE;                                               /*@L1A*/ 05721300
*        END;                                                  /*@L1A*/ 05728400
*      IF NUMBER(UCBLIST) = 3 &                                /*@L3A*/ 05728700
*         (UCBLIST(3) ^= 'ANY' &                               /*@L3A*/ 05729000
*          UCBLIST(3) ^= 'BELOW')                              /*@L3A*/ 05729300
*      THEN                                                    /*@L3A*/ 05729600
*        DO;                                                   /*@L3A*/ 05729900
*          ANS MSG('THIRD VALUE UCBLIST MUST BE "ANY" '||      /*@L3A*/ 05730200
*              'OR "BELOW". ')                                 /*@L3A*/ 05730500
*              NORESCAN;                                       /*@L3A*/ 05730800
*          ANS('/* THIRD VALUE UCBLIST MUST BE "ANY" OR ')     /*@L3A*/ 05731100
*              NORESCAN SKIP COL(MACLMAR);                     /*@L3A*/ 05731400
*          ANS('OR "BELOW". */')                               /*@L3C*/ 05731700
*              NORESCAN;                                       /*@L3A*/ 05732000
*          IF DEVTRC < 8 THEN                                  /*@L3A*/ 05732300
*            DEVTRC = 8;                                       /*@L3A*/ 05732600
*          ELSE;                                               /*@L3A*/ 05732900
*        END;                                                  /*@L3A*/ 05733200
*      ELSE;                                                   /*@L3A*/ 05733500
*      IF (NUMBER(MF) < 1 & NUMBER(MACLIST(2)) ^= 2) |         /*@L1A*/ 05735500
*          (NUMBER(MACLIST(2)) > 1 & NUMBER(MACLIST(2)) ^= 2)  /*@L1A*/ 05742600
*          THEN                                                /*@L1A*/ 05749700
*        DO;                                                   /*@L1A*/ 05756800
*          ANS MSG('SECOND POSITIONAL OPERAND MUST HAVE '||    /*@L1A*/ 05763900
*              'TWO OPERANDS. ')                               /*@L1A*/ 05771000
*              NORESCAN;                                       /*@L1A*/ 05778100
*          ANS('/* SECOND POSITIONAL OPERAND MUST HAVE TWO ')  /*@L1A*/ 05785200
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 05792300
*          ANS('OPERANDS. */')                                 /*@L1A*/ 05799400
*              NORESCAN;                                       /*@L1A*/ 05806500
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 05813600
*            DEVTRC = 8;                                       /*@L1A*/ 05820700
*          ELSE;                                               /*@L1A*/ 05827800
*        END;                                                  /*@L1A*/ 05834900
*      ELSE;                                                   /*@L1A*/ 05842000
*      IF NUMBER(MF) > 0 & MF(1) ^= 'L' & MF(1) ^= 'E' THEN    /*@L1A*/ 05850000
*        DO;                                                   /*@L1A*/ 05900000
*          ANS MSG('KEYWORD MF MUST BE "L" OR "E". ')                   05950000
*              NORESCAN;                                       /*@L1A*/ 06000000
*          ANS('/* KEYWORD MF MUST BE "L" OR "E". */')                  06050000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 06100000
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 06125000
*            DEVTRC = 8;                                       /*@L1A*/ 06150000
*          ELSE;                                               /*@L1A*/ 06175000
*        END;                                                  /*@L1A*/ 06200000
*      ELSE;                                                   /*@L1A*/ 06250000
*      IF NUMBER(MF) > 0 & MF(1) = 'L' THEN                    /*@L1A*/ 06300000
*        DO;                                                   /*@L1A*/ 06350000
*          IF UCBLIST(1,1:1) = '(' |                           /*@L1A*/ 06400000
*              (NUMBER(UCBLIST) > 1 & UCBLIST(2,1:1) = '(') |  /*@L1A*/ 06425000
*              (NUMBER(MACLIST(2)) > 0 &                       /*@L1A*/ 06450000
*                 MACLIST(2,1,1:1) = '(') |                    /*@L1A*/ 06475000
*              (NUMBER(MACLIST(2)) > 1 &                       /*@L1A*/ 06500000
*                 MACLIST(2,2,1:1) = '(') THEN                 /*@L1A*/ 06525000
*            DO;                                               /*@L1A*/ 06550000
*              ANS MSG('REGISTER NOTATION IS NOT PERMITED WITH MF(L) ') 06600000
*                  NORESCAN;                                   /*@L1A*/ 06650000
*              ANS('/* REGISTER NOTATION IS NOT PERMITED WITH ')        06700000
*                  NORESCAN SKIP COL(MACLMAR);                 /*@L1A*/ 06750000
*              ANS('MF(L). */')                                /*@L1A*/ 06800000
*                  NORESCAN;                                   /*@L1A*/ 06850000
*              IF DEVTRC < 8 THEN                              /*@L1A*/ 06875000
*                DEVTRC = 8;                                   /*@L1A*/ 06900000
*              ELSE;                                           /*@L1A*/ 06925000
*            END;                                              /*@L1A*/ 06950000
*          ELSE;                                               /*@L1A*/ 07000000
*        END;                                                  /*@L1A*/ 07050000
*      ELSE;                                                   /*@L1A*/ 07100000
*      IF NUMBER(MF) > 0 & MF(1) = 'E' & NUMBER(MF) < 2 THEN   /*@L1A*/ 07150000
*        DO;                                                   /*@L1A*/ 07200000
*          ANS MSG('KEYWORD MF'||MF||' IS INVALID. ')                   07250000
*              NORESCAN;                                       /*@L1A*/ 07300000
*          ANS('/* KEYWORD MF'||MF||' IS INVALID. */')                  07350000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 07400000
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 07425000
*            DEVTRC = 8;                                       /*@L1A*/ 07450000
*          ELSE;                                               /*@L1A*/ 07475000
*        END;                                                  /*@L1A*/ 07500000
*      ELSE;                                                   /*@L1A*/ 07550000
*      IF NUMBER(MF) > 0 & MF(1) = 'L' &                       /*@L1A*/ 07600000
*          LENGTH(MACLABEL) < 1 THEN                           /*@L1A*/ 07650000
*        DO;                                                   /*@L1A*/ 07700000
*          ANS MSG('LABEL REQUIRED BUT NOT SUPPLIED. ')                 07750000
*              NORESCAN;                                       /*@L1A*/ 07800000
*          ANS('/* LABEL REQUIRED BUT NOT SUPPLIED. */')                07850000
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 07900000
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 07925000
*            DEVTRC = 8;                                       /*@L1A*/ 07950000
*          ELSE;                                               /*@L1A*/ 07975000
*        END;                                                  /*@L1A*/ 08000000
*      ELSE;                                                   /*@L1A*/ 08050000
*      IF DEVTRC > 4 THEN                                      /*@L1A*/ 08100000
*        RETURN CODE(DEVTRC);                                  /*@L1A*/ 08150000
*      ELSE;                                                   /*@L1A*/ 08200000
*      IF NUMBER(MF) = 0 | MF(1) = 'L' THEN                    /*@L1A*/ 08250000
*        DO;                                                   /*@L1A*/ 08300000
*          ANS('DCL 1 '||MACLABEL(1:LENGTH(MACLABEL)-1))       /*@L1A*/ 08350000
*              NORESCAN SKIP COL(MACCOL);                      /*@L1A*/ 08400000
*          ANS(' BDY(WORD) STATIC, ')                          /*@L1A*/ 08450000
*              NORESCAN;                                       /*@L1A*/ 08500000
*          ANS('2 * FIXED(8) INIT(16), ')                      /*@L1A*/ 08550000
*              NORESCAN SKIP COL(MACCOL+6);                    /*@L1A*/ 08600000
*          ANS('2 * FIXED(8) INIT(1), ')                       /*@L1A*/ 08650000
*              NORESCAN SKIP COL(MACCOL+6);                    /*@L1A*/ 08700000
*          IF NUMBER(UCBLIST) = 3 &                            /*@L3A*/ 08712600
*              UCBLIST(3,1:3) = 'ANY' THEN                     /*@L3A*/ 08725200
*             ANS('2 * BIT(16) INIT(''4000''X), ')             /*@L3A*/ 08737800
*                 NORESCAN SKIP COL(MACCOL+6);                 /*@L3A*/ 08750400
*          ELSE                                                /*@L3A*/ 08763000
*             ANS('2 * FIXED(16) INIT(0), ')                   /*@L3C*/ 08775600
*                 NORESCAN SKIP COL(MACCOL+6);                 /*@L3C*/ 08788200
*          IF NUMBER(UCBLIST) > 1 &                            /*@L1A*/ 08801000
*              UCBLIST(1,1:1) ^= '(' THEN                      /*@L1A*/ 08802000
*            ANS('2 * PTR(31) INIT(ADDR('||UCBLIST(1)||')), ')          08803000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08804000
*          ELSE                                                /*@L1A*/ 08805000
*            ANS('2 * PTR(31) INIT(0), ')                      /*@L1A*/ 08806000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08807000
*          IF NUMBER(UCBLIST) > 1 &                            /*@L1A*/ 08808000
*              UCBLIST(2,1:1) ^= '(' THEN                      /*@L1A*/ 08809000
*            ANS('2 * FIXED(31) INIT('||UCBLIST(2)||'), ')     /*@L1A*/ 08810000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08811000
*          ELSE                                                /*@L1A*/ 08812000
*            ANS('2 * FIXED(31) INIT(0), ')                    /*@L1A*/ 08813000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08814000
*          IF NUMBER(MACLIST(2)) > 0 &                         /*@L1A*/ 08815000
*              MACLIST(2,1,1:1) ^= '(' THEN                    /*@L1A*/ 08816000
*            ANS('2 * PTR(31) INIT(ADDR('||MACLIST(2,1)||')), ')        08817000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08818000
*          ELSE                                                /*@L1A*/ 08819000
*            ANS('2 * PTR(31) INIT(0), ')                      /*@L1A*/ 08820000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08821000
*          IF NUMBER(MACLIST(2)) > 0 &                         /*@L1A*/ 08822000
*              MACLIST(2,2,1:1) ^= '(' THEN                    /*@L1A*/ 08823000
*            ANS('2 * FIXED(31) INIT('||MACLIST(2,2)||'); ')   /*@L1A*/ 08824000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08825000
*          ELSE                                                /*@L1A*/ 08826000
*            ANS('2 * FIXED(31) INIT(0); ')                    /*@L1A*/ 08827000
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 08828000
*        END;                                                  /*@L1A*/ 08829000
*      ELSE;                                                   /*@L1A*/ 08830000
*      IF NUMBER(MF) = 0 | MF(1) = 'E' THEN                    /*@L1A*/ 08831000
*        DO;                                                   /*@L1A*/ 08832000
*          ANS('DO; ')                                         /*@L1A*/ 08833000
*              NORESCAN SKIP COL(MACCOL);                      /*@L1A*/ 08834000
*          IF INDEX(EHAREGS,'01P') = 0 THEN                    /*@L1A*/ 08835000
*            EHAREGS = EHAREGS || '01P';                       /*@L1A*/ 08836000
*          ELSE;                                               /*@L1A*/ 08837000
*          IF INDEX(EHAREGS,'00P') = 0 THEN                    /*@L1A*/ 08838000
*            EHAREGS = EHAREGS || '00P';                       /*@L1A*/ 08839000
*          ELSE;                                               /*@L1A*/ 08840000
*          ANS('RFY (GPR00P,GPR01P) RSTD; ')                   /*@L1A*/ 08841000
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 08842000
*          IF MF(2,1:1) = '(' THEN                             /*@L1A*/ 08843000
*            ANS('GPR01P = '||MF(2,2:LENGTH(MF(2))-1)||'; ')   /*@L1A*/ 08844000
*                NORESCAN SKIP COL(MACCOL+2);                  /*@L1A*/ 08845000
*          ELSE                                                /*@L1A*/ 08846000
*            ANS('GPR01P = ADDR('||MF(2)||'); ')               /*@L1A*/ 08847000
*                NORESCAN SKIP COL(MACCOL+2);                  /*@L1A*/ 08848000
*          IF NUMBER(UCBLIST) > 1 THEN                         /*@L1A*/ 08850000
*            DO;                                               /*@L1A*/ 08900000
*              IF UCBLIST(1,1:1) = '(' THEN                    /*@L1A*/ 10950000
*                DO;                                           /*@L1A*/ 11000000
*                  ANS('(GPR01P + 4) -> I031P = ')             /*@L1A*/ 11050000
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 11100000
*                  ANS(UCBLIST(1,2:LENGTH(UCBLIST(1))-1))      /*@L1A*/ 11150000
*                      NORESCAN;                               /*@L1A*/ 11200000
*                  ANS('; ')                                   /*@L1A*/ 11250000
*                      NORESCAN;                               /*@L1A*/ 11300000
*                END;                                          /*@L1A*/ 11350000
*              ELSE                                            /*@L1A*/ 11400000
*                IF NUMBER(MF) > 0 & MF(1) = 'E' THEN          /*@L1A*/ 11405000
*                  DO;                                         /*@L1A*/ 11410000
*                    ANS('(GPR01P + 4) -> I031P = ADDR(')      /*@L1A*/ 11415000
*                        NORESCAN SKIP COL(MACCOL+2);          /*@L1A*/ 11420000
*                    ANS(UCBLIST(1)||'); ')                    /*@L1A*/ 11425000
*                        NORESCAN;                             /*@L1A*/ 11430000
*                  END;                                        /*@L1A*/ 11435000
*                ELSE;                                         /*@L1A*/ 11440000
*              IF NUMBER(MF) > 0 & MF(1) = 'E' THEN            /*@L1A*/ 11445000
*                DO;                                           /*@L1A*/ 11450000
*                  ANS('(GPR01P + 8) -> I031P = ')             /*@L1A*/ 11850000
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 11900000
*                  ANS(UCBLIST(2))                             /*@L1A*/ 11950000
*                      NORESCAN;                               /*@L1A*/ 12000000
*                  ANS('; ')                                   /*@L1A*/ 12050000
*                      NORESCAN;                               /*@L1A*/ 12100000
*                END;                                          /*@L1A*/ 12150000
*              ELSE;                                           /*@L1A*/ 12200000
*              IF NUMBER(MF) > 0 & MF(1) = 'E' &               /*@L3A*/ 12216600
*                 NUMBER(UCBLIST) = 3 &                        /*@L3A*/ 12233200
*                 UCBLIST(3,1:3) = 'ANY' THEN                  /*@L3A*/ 12249800
*                DO;                                           /*@L3A*/ 12266400
*                  ANS('(GPR01P + 2) -> I001C = ')             /*@L3A*/ 12283000
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L3A*/ 12299600
*                  ANS("'40'X")                                /*@L3A*/ 12316200
*                      NORESCAN;                               /*@L3A*/ 12332800
*                  ANS('; ')                                   /*@L3A*/ 12349400
*                      NORESCAN;                               /*@L3A*/ 12366000
*                END;                                          /*@L3A*/ 12382600
*                ELSE;                                         /*@L3A*/ 12399200
*            /*  ELSE DO;                                        @L3A*/ 12415800
*            /*    ANS('(GPR01P + 2) -> I001C = ')               @L3A*/ 12432400
*            /*        NORESCAN SKIP COL(MACCOL+2);              @L3A*/ 12449000
*            /*    ANS("'00'X")                                  @L3A*/ 12465600
*            /*        NORESCAN;                                 @L3A*/ 12482200
*            /*    ANS('; ')                                     @L3A*/ 12498800
*            /*        NORESCAN;                                 @L3A*/ 12515400
*            /*  END;                                            @L3A*/ 12532000
*            END;                                              /*@L1A*/ 12550000
*          ELSE;                                               /*@L1A*/ 12600000
*          IF NUMBER(MACLIST(2)) > 0 THEN                      /*@L1A*/ 12650000
*            DO;                                               /*@L1A*/ 12750000
*              IF MACLIST(2,1,1:1) = '(' THEN                  /*@L1A*/ 12762000
*                DO;                                           /*@L1A*/ 12774000
*                  ANS('(GPR01P + 12) -> I031P = ')            /*@L1A*/ 12786000
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 12798000
*                  ANS(MACLIST(2,1,2:LENGTH(MACLIST(2,1))-1))  /*@L1A*/ 12810000
*                      NORESCAN;                               /*@L1A*/ 12822000
*                  ANS('; ')                                   /*@L1A*/ 12834000
*                      NORESCAN;                               /*@L1A*/ 12846000
*                END;                                          /*@L1A*/ 12858000
*              ELSE                                            /*@L1A*/ 12870000
*                IF NUMBER(MF) > 0 & MF(1) = 'E' THEN          /*@L1A*/ 12882000
*                  DO;                                         /*@L1A*/ 12894000
*                    ANS('(GPR01P + 12) -> I031P = ADDR(')     /*@L1A*/ 12906000
*                        NORESCAN SKIP COL(MACCOL+2);          /*@L1A*/ 12918000
*                    ANS(MACLIST(2,1)||'); ')                  /*@L1A*/ 12930000
*                        NORESCAN;                             /*@L1A*/ 12942000
*                  END;                                        /*@L1A*/ 12954000
*                ELSE;                                         /*@L1A*/ 12966000
*              IF NUMBER(MF) > 0 & MF(1) = 'E' THEN            /*@L1A*/ 12978000
*                DO;                                           /*@L1A*/ 12990000
*                  ANS('(GPR01P + 16) -> I031P = ')            /*@L1A*/ 13002000
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 13014000
*                  ANS(MACLIST(2,2))                           /*@L1A*/ 13026000
*                      NORESCAN;                               /*@L1A*/ 13038000
*                  ANS('; ')                                   /*@L1A*/ 13050000
*                      NORESCAN;                               /*@L1A*/ 13062000
*                END;                                          /*@L1A*/ 13074000
*              ELSE;                                           /*@L1A*/ 13086000
*            END;                                              /*@L1A*/ 13100000
*          ELSE;                                               /*@L1A*/ 13150000
*          ANS('GPR00P = 0; ')                                 /*@L1A*/ 13500000
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 13550000
*          ANS('SVC(24); ')                                    /*@L1A*/ 13600000
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 13650000
*          ANS('RFY (GPR00P,GPR01P) UNRSTD; ')                 /*@L1A*/ 13700000
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 13750000
*          ANS('END; ')                                        /*@L1A*/ 13800000
*              NORESCAN SKIP COL(MACCOL);                      /*@L1A*/ 13850000
*        END;                                                  /*@L1A*/ 13900000
*      ELSE;                                                   /*@L1A*/ 13950000
*    END;         !Of ELSE for IF NUMBER(UCBLIST) < 1              @L4C 14000000
*  %END DEVTYPE;                                               /*@L1A*/ 14050000
