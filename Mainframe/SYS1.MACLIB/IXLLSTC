*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLLSTC                               -03/20/01-<4> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES List Structure Services                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 2000, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7703                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLLSTC macro provides operations to atomically perform    * 00002100
*      locking functions, monitor list state changes, read and write  * 00002200
*      list controls, read event queue controls and event monitor     * 00002300
*      controls and dequeue event monitor controls.                   * 00002400
*                                                                     * 00002500
*      The list structure is accessed as a set of linked lists where  * 00002600
*      each list is comprised of some number of list entries.  The    * 00002700
*      number of lists is determined via programming interface when   * 00002800
*      the structure is allocated, and is static for the duration of  * 00002900
*      the structure.                                                 * 00003000
*                                                                     * 00003100
*      Refer to the IXLCONN service description for additional        * 00003200
*      information regarding the allocation of and connection to a    * 00003300
*      list structure.                                                * 00003400
*                                                                     * 00003500
*      A "list cursor" is maintained for each linked list.  This list * 00003600
*      cursor is a list entry identifier corresponding to one of the  * 00003700
*      entries on the linked list.  If the list cursor is not         * 00003800
*      initialized it has a value of all binary zeros.                * 00003900
*                                                                     * 00004000
*      An allocated list entry has a structure assigned entry         * 00004100
*      identifier which is unique within the structure and can be     * 00004200
*      used for subsequent reference or access to that entry.         * 00004300
*      Structure allocation allows an option to support user defined  * 00004400
*      entry names, or user defined entry IDs which the structure     * 00004500
*      will enforce as unique within the structure on create          * 00004600
*      requests.  Entry names and user defined entry IDs may also be  * 00004700
*      used for subsequent entry reference and access.  Structure     * 00004800
*      allocation allows optional entry key support and secondary key * 00004900
*      support which functions as a mechanism for designating         * 00005000
*      relative positions within a specified list other than the list * 00005100
*      head or tail.  Either an entry key and/or a secondary key can  * 00005200
*      be specified on list requests.  Entry name and entry           * 00005300
*      key/secondary key support are mutually exclusive options.      * 00005400
*                                                                     * 00005500
*      A list structure may also be allocated to include a lock table * 00005600
*      as part of the structure.  The lock table is comprised of a    * 00005700
*      set of exclusive locks which can be manipulated either         * 00005800
*      independently of or in conjunction with list entry and adjunct * 00005900
*      data.  Locking operations include the setting, resetting, and  * 00006000
*      testing of a specified lock.  List entry and adjunct data      * 00006100
*      operations can be affected by the state of a specified lock.   * 00006200
*      The purpose and scope of each lock is entirely user defined.   * 00006300
*                                                                     * 00006400
*      A connection may optionally have a list notification vector    * 00006500
*      allocated on the attached host CPC.  The notification vector   * 00006600
*      may be used to monitor list state changes from the empty to    * 00006700
*      not-empty state, and vice-versa, for any list, sublist, or set * 00006800
*      of sublists in the structure.  Monitoring a set of sublists is * 00006900
*      accomplished via key-range monitoring and is available for     * 00007000
*      keyed sublists.  Monitoring secondary keyed sublists by        * 00007100
*      key-range is not provided.                                     * 00007200
*                                                                     * 00007300
*      List state transitions are recognized differently depending on * 00007400
*      the CFLEVEL of the coupling facility that contains the         * 00007500
*      structure:                                                     * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*      o   For CFLEVEL<=8, a list changes from the empty to the       * 00007900
*          not-empty state when the list has no entries and an entry  * 00008000
*          is created on or moved to the list.  A list changes from   * 00008100
*          the not-empty to the empty state when the list has one     * 00008200
*          entry and the entry is deleted or moved to another list.   * 00008300
*                                                                     * 00008400
*      o   For CFLEVEL=9 or higher, the initial state of a list is    * 00008500
*          empty.  Consider a particular pair of list empty/not-empty * 00008600
*          threshold counts.  Once a list is in the empty state, it   * 00008700
*          remains in the empty state until the number of entries on  * 00008800
*          the list becomes greater than the list not-empty threshold * 00008900
*          count.  If the list is in an empty state and an entry is   * 00009000
*          created on or moved to the list, the list state            * 00009100
*          transitions from empty to not-empty if the number of list  * 00009200
*          entries on the list becomes greater than the               * 00009300
*          list-not-empty threshold count.  Once a list is in the     * 00009400
*          not-empty state, it remains in the not-empty state until   * 00009500
*          the number of entries on the list either becomes zero or   * 00009600
*          becomes less than or equal to the list empty threshold     * 00009700
*          count.  If a list is in the not-empty state and an entry   * 00009800
*          is either deleted from the list or moved to another list,  * 00009900
*          the list state transitions from not-empty to empty if the  * 00010000
*          number of list entries on the list either becomes zero or  * 00010100
*          becomes less than or equal to the list-empty threshold     * 00010200
*          count.                                                     * 00010300
*                                                                     * 00010400
*          When the list empty/not-empty threshold counts change, the * 00010500
*          list state may also change.  If the number of entries on   * 00010600
*          the list is less than or equal to the new list empty       * 00010700
*          threshold count, the list state is empty.  If the number   * 00010800
*          of entries on the list is greater than the new list        * 00010900
*          not-empty threshold count, the list state is not-empty.    * 00011000
*          Otherwise the list state remains unchanged.                * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*      Key-range state transitions are recognized similarly to the    * 00011500
*      list state transitions for CFLEVEL=9 or higher:                * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*      o   When key-range initialization completes, the key-range     * 00011900
*          state is set to empty if the number of list entries in the * 00012000
*          key-range is less than or equal to the key-range not-empty * 00012100
*          threshold count, and not-empty otherwise.  Once a          * 00012200
*          key-range is in the empty state, it remains in the empty   * 00012300
*          state until the number of list entries in the key range    * 00012400
*          becomes greater than the key-range not-empty threshold     * 00012500
*          count.  If a key-range is in the empty state and an entry  * 00012600
*          is either created in the key-range or moved to the         * 00012700
*          key-range, the key-range state transitions from empty to   * 00012800
*          not-empty if the number of list entries in the key-range   * 00012900
*          becomes greater than the key-range not-empty threshold     * 00013000
*          count.  Once a key-range is in the not-empty state, it     * 00013100
*          remains in the not-empty state until the number of entries * 00013200
*          in the key-range either becomes zero or becomes less than  * 00013300
*          or equal to the key-range empty threshold count.  If a     * 00013400
*          key-range is in the not-empty state and an entry is either * 00013500
*          deleted from the key-range or moved to another list or     * 00013600
*          moved to the same list with a new entry key that is        * 00013700
*          outside the key-range, the key-range state transitions     * 00013800
*          from not-empty to empty if the number of list entries in   * 00013900
*          the key-range becomes zero or becomes less than or equal   * 00014000
*          to the key-range empty threshold count.                    * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*      For structures allocated in CFLEVEL=3 or higher, the           * 00014500
*      notification vector may be used to monitor an event queue for  * 00014600
*      state changes from the empty to not-empty state, and vice      * 00014700
*      versa.  An event queue contains Event Monitor Controls (EMCs)  * 00014800
*      for sublists which the user is monitoring and which have       * 00014900
*      become not-empty.  An event queue transitions from empty to    * 00015000
*      not-empty when a monitored sublist becomes not-empty, causing  * 00015100
*      the event monitor controls associated with the sublist to be   * 00015200
*      queued to the event queue.  An event queue transitions from    * 00015300
*      not-empty to empty when the last event monitor controls object * 00015400
*      is removed from the event queue as a result of one of the      * 00015500
*      following:                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*      o   the event monitor controls being dequeued from the event   * 00015900
*          queue by the user                                          * 00016000
*                                                                     * 00016100
*      o   the event monitor controls being withdrawn from the event  * 00016200
*          queue as a result of the corresponding sublist becoming    * 00016300
*          empty                                                      * 00016400
*                                                                     * 00016500
*      o   the user deregistering monitoring interest in the          * 00016600
*          corresponding sublist.                                     * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*      Event queue monitoring should be used in conjunction with      * 00017100
*      sublist monitoring.                                            * 00017200
*                                                                     * 00017300
*      For list structures allocated in CFLEVEL=9 or higher, a        * 00017400
*      sublist can be identified either by entry key or by secondary  * 00017500
*      key.  EMCs for sublists identified by entry key and EMCs for   * 00017600
*      sublists identified by secondary key are queued to different   * 00017700
*      event queues.  The different event queues can be monitored     * 00017800
*      independently.                                                 * 00017900
*                                                                     * 00018000
*      MVS provides a facility,  the IXLVECTR service, for optimized  * 00018100
*      testing of list transitions and/or event queue transitions     * 00018200
*      from empty to not-empty,  by interrogating the status of       * 00018300
*      individual entries in the notification vector which have been  * 00018400
*      associated with a particular list or the user's event queue.   * 00018500
*                                                                     * 00018600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00018700
*                                                                     * 00018800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00018900
*                                                                     * 00019000
*01* ENVIRONMENT:                                                     * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00019400
*                                                                     * 00019500
*      Dispatchable unit mode: Task or SRB mode.                      * 00019600
*                                                                     * 00019700
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00019800
*                                                                     * 00019900
*                        The current primary address space must be    * 00020000
*                        the same as the primary address space at the * 00020100
*                        time the connection service, IXLCONN, was    * 00020200
*                        issued for the structure.                    * 00020300
*                                                                     * 00020400
*      AMODE:            31-bit.                                      * 00020500
*                                                                     * 00020600
*      ASC mode:         Primary or Access Register.                  * 00020700
*                                                                     * 00020800
*      Interrupt status: Enabled or disabled for I/O and external     * 00020900
*                        interrupts.                                  * 00021000
*                                                                     * 00021100
*      Locks:            Disabled callers must be legally disabled by * 00021200
*                        holding the CPU lock and cannot hold other   * 00021300
*                        disabled locks (invocation by DIE routines   * 00021400
*                        is not supported).  Enabled callers must not * 00021500
*                        hold any locks.  When MODE=SYNCSUSPEND is    * 00021600
*                        specified the caller must be enabled.        * 00021700
*                                                                     * 00021800
*      Control parameters:                                            * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                        1.  The caller's parameter list must be      * 00022200
*                            addressable in the caller's primary      * 00022300
*                            address space.                           * 00022400
*                                                                     * 00022500
*                        2.  If the caller is running in Access       * 00022600
*                            Register ASC mode and specifies a macro  * 00022700
*                            parameter using explicit register        * 00022800
*                            notation the access register             * 00022900
*                            corresponding to the general register    * 00023000
*                            must appropriately qualify the general   * 00023100
*                            register.                                * 00023200
*                                                                     * 00023300
*                        3.  The virtual storage areas specified by   * 00023400
*                            the ANSAREA and MOSVECTOR keywords must  * 00023500
*                            be addressable in the caller's primary   * 00023600
*                            address space or from the caller's PASN  * 00023700
*                            access list.                             * 00023800
*                                                                     * 00023900
*                        4.  All other virtual storage areas          * 00024000
*                            specified on the invocation may be       * 00024100
*                            addressable in the caller's primary,     * 00024200
*                            secondary, or home address spaces, from  * 00024300
*                            the PASN access list, or from the DU     * 00024400
*                            access list.                             * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*01* PROGRAMMING REQUIREMENTS:                                        * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*    1.  Access Register mode invokers must specify SYSSTATE          * 00025400
*        ASCENV=AR prior to invoking this macro.                      * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*01* RESTRICTIONS:                                                    * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*    1.  If the caller is disabled then the parameter list and all    * 00026200
*        storage areas addressed by macro parameters must reside in   * 00026300
*        either non-pageable or disabled reference storage.           * 00026400
*                                                                     * 00026500
*    2.  The caller may not be running as a Disabled Interrupt Exit   * 00026600
*        (DIE).                                                       * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*01* INPUT REGISTER INFORMATION:                                      * 00027100
*                                                                     * 00027200
*    Before issuing the IXLLSTC macro, the caller does not have to    * 00027300
*    place any information into any register or AR unless using it in * 00027400
*    register notation for a particular parameter, or using it as a   * 00027500
*    base register.                                                   * 00027600
*                                                                     * 00027700
*01* OUTPUT REGISTER INFORMATION:                                     * 00027800
*                                                                     * 00027900
*    When control returns to the caller, the GPRs contain:            * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*    REGISTER  CONTENTS                                               * 00028300
*                                                                     * 00028400
*    0         Reason code                                            * 00028500
*                                                                     * 00028600
*    1         Used as work registers by the system                   * 00028700
*                                                                     * 00028800
*    2-13      Unchanged                                              * 00028900
*                                                                     * 00029000
*    14        Used as work registers by the system.                  * 00029100
*                                                                     * 00029200
*    15        Return code                                            * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*    When control returns to the caller, the ARs contain:             * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*    REGISTER  CONTENTS                                               * 00030000
*                                                                     * 00030100
*    0-1       Used as work registers by the system                   * 00030200
*                                                                     * 00030300
*    2-13      Unchanged                                              * 00030400
*                                                                     * 00030500
*    14-15     Used as work registers by the system.                  * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*01* PERFORMANCE IMPLICATIONS:                                        * 00031000
*                                                                     * 00031100
*    None.                                                            * 00031200
*                                                                     * 00031300
*01* SYNTAX:                                                          * 00031400
*                                                                     * 00031500
*[xlabel]  IXLLSTC     CONTOKEN=xcontoken                             * 00031600
*                    [,REQID=xreqid|NO_REQID]                       * 00031700
*                    ,REQUEST=LOCK                                   * 00031800
*                   |     ,LOCKINDEX=xlockindex                       * 00031900
*                   |    ,LOCKOPER=SET                               * 00032000
*                   |   |   [,LOCKMODE=UNCOND]                       * 00032100
*                   |   |   [,LOCKMODE=COND                          * 00032200
*                   |   |        [,LOCKCOMP=xlockcomp|NO_LOCKCOMP]] * 00032300
*                   |   |    [,LOCKDATA=xlockdata|NO_LOCKDATA]      * 00032400
*                   |    ,LOCKOPER=RESET                             * 00032500
*                   |   |    [,LOCKCOMP=xlockcomp|NO_LOCKCOMP]      * 00032600
*                   |    ,LOCKOPER=TEST                              * 00032700
*                   |   |    [,LOCKCOMP=xlockcomp|NO_LOCKCOMP]      * 00032800
*                   |    ,LOCKOPER=READNEXT                          * 00032900
*                   |        [,LOCKCOMP=xlockcomp|NO_LOCKCOMP]      * 00033000
*                    ,REQUEST=READ_LCONTROLS                         * 00033100
*                   |     ,LISTNUM=xlistnum                           * 00033200
*                   |    ,BUFLIST=xbuflist                           * 00033300
*                   |   |   [,BUFADDRTYPE=VIRTUAL                    * 00033400
*                   |   |   |   [,PAGEABLE=YES                       * 00033500
*                   |   |   |   |    [,BUFSTGKEY                      * 00033600
*                   |   |   |   |                =xbufstgkey|CALLERS * 00033700
*                   |   |   |   |                _KEY]]              * 00033800
*                   |   |   |   [,PAGEABLE=NO]                       * 00033900
*                   |   |   |    [,BUFALET=xbufalet|NO_BUFALET]]    * 00034000
*                   |   |   [,BUFADDRTYPE=REAL                       * 00034100
*                   |   |       [,BUFADDRSIZE=31]                    * 00034200
*                   |   |       [,BUFADDRSIZE=64]]                   * 00034300
*                   |    ,BUFFER=xbuffer                             * 00034400
*                   |       [,PAGEABLE=YES                           * 00034500
*                   |       |    [,BUFSTGKEY                          * 00034600
*                   |       |                =xbufstgkey|CALLERS_KEY * 00034700
*                   |       |                ]]                      * 00034800
*                   |       [,PAGEABLE=NO]                           * 00034900
*                    ,REQUEST=WRITE_LCONTROLS                        * 00035000
*                   |     ,LISTNUM=xlistnum                           * 00035100
*                   |     ,AUTHCOMP=xauthcomp                         * 00035200
*                   |    [,NEWAUTH=xnewauth|NO_NEWAUTH]             * 00035300
*                   |    [,LISTLIMIT=xlistlimit|NO_LISTLIMIT]       * 00035400
*                   |    [,LISTDESC=xlistdesc|NO_LISTDESC]          * 00035500
*                   |    [,LISTKEY=xlistkey|NO_LISTKEY]             * 00035600
*                   |    [,MAXLISTKEY=xmaxlistkey|NO_MAXLISTKEY]    * 00035700
*                   |    [,SETCURSOR=NO_SETCURSOR|HEAD|TAIL]        * 00035800
*                   |   [,KEYRANGE=NO_CHANGE]                        * 00035900
*                   |   [,KEYRANGE=SET                               * 00036000
*                   |         ,KEYRANGESTART                          * 00036100
*                   |                        =xkeyrangestart          * 00036200
*                   |         ,KEYRANGEEND=xkeyrangeend]              * 00036300
*                   |   [,KEYRANGESTATE=NO_CHANGE]                   * 00036400
*                   |   [,KEYRANGESTATE=DEFINE                       * 00036500
*                   |         ,KREMPTY=xkrempty                       * 00036600
*                   |         ,KRNOTEMPTY=xkrnotempty]                * 00036700
*                   |   [,LISTSTATE=NO_CHANGE]                       * 00036800
*                   |   [,LISTSTATE=DEFINE                           * 00036900
*                   |         ,LISTEMPTY=xlistempty                   * 00037000
*                   |         ,LISTNOTEMPTY=xlistnotempty]            * 00037100
*                    ,REQUEST=READ_EQCONTROLS                        * 00037200
*                   |    [,KEYTYPE=ENTRY|SECONDARY]                 * 00037300
*                    ,REQUEST=READ_EMCONTROLS                        * 00037400
*                   |     ,LISTNUM=xlistnum                           * 00037500
*                   |    ,ENTRYKEY=xentrykey                         * 00037600
*                   |    ,SECONDARYKEY=xsecondarykey                 * 00037700
*                    ,REQUEST=DEQ_EVENTQ                             * 00037800
*                   |    [,KEYTYPE=ENTRY|SECONDARY]                 * 00037900
*                   |    ,BUFLIST=xbuflist                           * 00038000
*                   |   |   [,BUFADDRTYPE=VIRTUAL                    * 00038100
*                   |   |   |   [,PAGEABLE=YES                       * 00038200
*                   |   |   |   |    [,BUFSTGKEY                      * 00038300
*                   |   |   |   |                =xbufstgkey|CALLERS * 00038400
*                   |   |   |   |                _KEY]]              * 00038500
*                   |   |   |   [,PAGEABLE=NO]                       * 00038600
*                   |   |   |    [,BUFALET=xbufalet|NO_BUFALET]]    * 00038700
*                   |   |   [,BUFADDRTYPE=REAL                       * 00038800
*                   |   |       [,BUFADDRSIZE=31]                    * 00038900
*                   |   |       [,BUFADDRSIZE=64]]                   * 00039000
*                   |    ,BUFFER=xbuffer                             * 00039100
*                   |       [,PAGEABLE=YES                           * 00039200
*                   |       |    [,BUFSTGKEY                          * 00039300
*                   |       |                =xbufstgkey|CALLERS_KEY * 00039400
*                   |       |                ]]                      * 00039500
*                   |       [,PAGEABLE=NO]                           * 00039600
*                    ,REQUEST=MONITOR_EVENTQ                         * 00039700
*                   |    [,KEYTYPE=ENTRY|SECONDARY]                 * 00039800
*                   |    ,ACTION=START                               * 00039900
*                   |   |     ,VECTORINDEX=xvectorindex               * 00040000
*                   |   |    [,DRIVEEXIT=YES|NO]                    * 00040100
*                   |    ,ACTION=STOP                                * 00040200
*                    ,REQUEST=MONITOR_LIST                           * 00040300
*                   |     ,LISTNUM=xlistnum                           * 00040400
*                   |    ,ACTION=START                               * 00040500
*                   |   |     ,VECTORINDEX=xvectorindex               * 00040600
*                   |   |    [,DRIVEEXIT=YES|NO]                    * 00040700
*                   |    ,ACTION=STOP                                * 00040800
*                    ,REQUEST=MONITOR_KEYRANGE                       * 00040900
*                   |     ,LISTNUM=xlistnum                           * 00041000
*                   |    ,ACTION=START                               * 00041100
*                   |   |     ,VECTORINDEX=xvectorindex               * 00041200
*                   |   |    [,DRIVEEXIT=YES|NO]                    * 00041300
*                   |    ,ACTION=STOP                                * 00041400
*                    ,REQUEST=MONITOR_SUBLIST                        * 00041500
*                   |     ,LISTNUM=xlistnum                           * 00041600
*                   |    ,ENTRYKEY=xentrykey                         * 00041700
*                   |    ,SECONDARYKEY=xsecondarykey                 * 00041800
*                   |    ,ACTION=START                               * 00041900
*                   |   |    [,NOTIFICATION=FIRST|EVERY]            * 00042000
*                   |   |     ,UNC=xunc                               * 00042100
*                   |    ,ACTION=STOP                                * 00042200
*                    ,REQUEST=MONITOR_SUBLISTS                       * 00042300
*                         ,STARTINDEX=xstartindex                     * 00042400
*                         ,ENDINDEX=xendindex                         * 00042500
*                         ,MOSVECTOR=xmosvector                       * 00042600
*                        ,BUFLIST=xbuflist                           * 00042700
*                       |   [,BUFADDRTYPE=VIRTUAL                    * 00042800
*                       |   |   [,PAGEABLE=YES                       * 00042900
*                       |   |   |    [,BUFSTGKEY                      * 00043000
*                       |   |   |                =xbufstgkey|CALLERS * 00043100
*                       |   |   |                _KEY]]              * 00043200
*                       |   |   [,PAGEABLE=NO]                       * 00043300
*                       |   |    [,BUFALET=xbufalet|NO_BUFALET]]    * 00043400
*                       |   [,BUFADDRTYPE=REAL                       * 00043500
*                       |       [,BUFADDRSIZE=31]                    * 00043600
*                       |       [,BUFADDRSIZE=64]]                   * 00043700
*                       |     ,BUFNUM=xbufnum                         * 00043800
*                       |     ,BUFINCRNUM=xbufincrnum                 * 00043900
*                        ,BUFFER=xbuffer                             * 00044000
*                           [,PAGEABLE=YES                           * 00044100
*                           |    [,BUFSTGKEY                          * 00044200
*                           |                =xbufstgkey|CALLERS_KEY * 00044300
*                           |                ]]                      * 00044400
*                           [,PAGEABLE=NO]                           * 00044500
*                             ,BUFSIZE=xbufsize                       * 00044600
*                   [,MODE=SYNCSUSPEND                               * 00044700
*                   |     ,ANSAREA=xansarea                           * 00044800
*                   |         ,ANSLEN=xanslen]                        * 00044900
*                   [,MODE=SYNCECB                                   * 00045000
*                   |     ,REQECB=xreqecb                             * 00045100
*                   |     ,ANSAREA=xansarea                           * 00045200
*                   |         ,ANSLEN=xanslen]                        * 00045300
*                   [,MODE=SYNCEXIT                                  * 00045400
*                   |    [,REQDATA=xreqdata|NO_REQDATA]             * 00045500
*                   |     ,ANSAREA=xansarea                           * 00045600
*                   |         ,ANSLEN=xanslen]                        * 00045700
*                   [,MODE=SYNCTOKEN                                 * 00045800
*                   |     ,REQTOKEN=xreqtoken                         * 00045900
*                   |     ,ANSAREA=xansarea                           * 00046000
*                   |         ,ANSLEN=xanslen]                        * 00046100
*                   [,MODE=ASYNCECB                                  * 00046200
*                   |     ,REQECB=xreqecb                             * 00046300
*                   |     ,ANSAREA=xansarea                           * 00046400
*                   |         ,ANSLEN=xanslen]                        * 00046500
*                   [,MODE=ASYNCEXIT                                 * 00046600
*                   |    [,REQDATA=xreqdata|NO_REQDATA]             * 00046700
*                   |     ,ANSAREA=xansarea                           * 00046800
*                   |         ,ANSLEN=xanslen]                        * 00046900
*                   [,MODE=ASYNCTOKEN                                * 00047000
*                   |     ,REQTOKEN=xreqtoken                         * 00047100
*                   |     ,ANSAREA=xansarea                           * 00047200
*                   |         ,ANSLEN=xanslen]                        * 00047300
*                   [,MODE=ASYNCNORESPONSE]                          * 00047400
*                    [,RETCODE=xretcode]                              * 00047500
*                    [,RSNCODE=xrsncode]                              * 00047600
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00047700
*                   [,MF=S]                                          * 00047800
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00047900
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*      Where:                                                         * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*      [xlabel]                                                       * 00048600
*          is an optional symbol, starting in column 1, that is the   * 00048700
*          name on the IXLLSTC macro invocation.  The name must       * 00048800
*          conform to the rules for an ordinary assembler language    * 00048900
*          symbol.                                                    * 00049000
*          DEFAULT: No name.                                          * 00049100
*                                                                     * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*      CONTOKEN=xcontoken                                             * 00049600
*          is the name (RS-type), or address in register (2)-(12), of * 00049700
*          a required 16 character input field that contains the      * 00049800
*          connect token returned by the IXLCONN service.  The        * 00049900
*          CONTOKEN uniquely identifies the user's connection to the  * 00050000
*          list structure.                                            * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*      [REQID=xreqid|NO_REQID]                                      * 00050600
*          is the name (RS-type), or address in register (2)-(12), of * 00050700
*          an optional 8 character input that contains a user-defined * 00050800
*          request identifier to be associated with the request.      * 00050900
*                                                                     * 00051000
*          Requests that have not been processed may be cancelled     * 00051100
*          using this request identifier.                             * 00051200
*                                                                     * 00051300
*          Refer to the IXLPURGE service description for additional   * 00051400
*          information regarding the cancelling requests.             * 00051500
*                                                                     * 00051600
*          DEFAULT: NO_REQID                                          * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*      REQUEST=LOCK|READ_LCONTROLS|WRITE_LCONTROLS|READ_EQCONTROLS|R * 00052200
*          EAD_EMCONTROLS|DEQ_EVENTQ|MONITOR_EVENTQ|MONITOR_LIST|MONI * 00052300
*          TOR_KEYRANGE|MONITOR_SUBLIST|MONITOR_SUBLISTS             * 00052400
*          is a required keyword input that specifies the type of     * 00052500
*          operation to be performed on the structure.                * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*          REQUEST=LOCK                                               * 00052900
*              Requests that the lock entry designated by LOCKINDEX   * 00053000
*              be operated on as specified by the LOCKOPER keyword.   * 00053100
*              This request type may only be specified for structures * 00053200
*              that contain a lock table.                             * 00053300
*                                                                     * 00053400
*              REQUEST=LOCK is mutually exclusive with                * 00053500
*              MODE=ASYNCNORESPONSE.                                  * 00053600
*                                                                     * 00053700
*                                                                     * 00053800
*              LOCKINDEX=xlockindex                                   * 00053900
*                  is the name (RS-type), or address in register      * 00054000
*                  (2)-(12), of a required fullword input that        * 00054100
*                  contains the index of the lock to be operated on   * 00054200
*                  within the lock table for the list structure.      * 00054300
*                                                                     * 00054400
*                  When specified, the designated lock will be        * 00054500
*                  operated on as specified by the LOCKOPER keyword.  * 00054600
*                  The specified value must fall within the range 0   * 00054700
*                  to the number of lock table entries minus one,     * 00054800
*                  inclusive.                                         * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*              LOCKOPER=SET|RESET|TEST|READNEXT                     * 00055400
*                  is a required keyword input that specifies the     * 00055500
*                  type of operation to be performed on the specified * 00055600
*                  lock.                                              * 00055700
*                                                                     * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*                  LOCKOPER=SET                                       * 00056100
*                      When LOCKCOMP is not specified, requests       * 00056200
*                      ownership of the lock for the connection       * 00056300
*                      specified by CONTOKEN.                         * 00056400
*                                                                     * 00056500
*                      When LOCKCOMP is specified, requests that      * 00056600
*                      ownership of the lock be transferred from the  * 00056700
*                      connection specified by LOCKCOMP to the        * 00056800
*                      connection specified by CONTOKEN.  Any         * 00056900
*                      outstanding requests awaiting contention       * 00057000
*                      resolution on this lock are ignored.           * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*                      [LOCKMODE=UNCOND|COND]                       * 00057400
*                          is an optional keyword input that          * 00057500
*                          specifies how contention on the lock       * 00057600
*                          should be handled.                         * 00057700
*                          DEFAULT: UNCOND                            * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*                          [LOCKMODE=UNCOND]                          * 00058100
*                              Requests that the lock operation be    * 00058200
*                              done unconditionally.                  * 00058300
*                                                                     * 00058400
*                              If the specified lock is held then the * 00058500
*                              entire IXLLSTC operation will be held  * 00058600
*                              up until the whole operation can be    * 00058700
*                              processed.  If MODE=SYNCSUSPEND was    * 00058800
*                              specified the caller will be suspended * 00058900
*                              until the lock becomes available,      * 00059000
*                              otherwise the request will be          * 00059100
*                              processed asynchronously and the       * 00059200
*                              requestor will be notified by the      * 00059300
*                              means indicated on the MODE keyword.   * 00059400
*                                                                     * 00059500
*                          [LOCKMODE=COND                             * 00059600
*                              Requests that the lock operation be    * 00059700
*                              done conditionally.                    * 00059800
*                                                                     * 00059900
*                              If the specified lock is held then the * 00060000
*                              entire IXLLSTC operation will be       * 00060100
*                              terminated with no resultant change to * 00060200
*                              the structure, and indicative return   * 00060300
*                              and reason codes are provided to the   * 00060400
*                              invoker.                               * 00060500
*                                                                     * 00060600
*                                                                     * 00060700
*                              [LOCKCOMP=xlockcomp|NO_LOCKCOMP]]    * 00060800
*                                  is the name (RS-type), or address  * 00060900
*                                  in register (2)-(12), of an        * 00061000
*                                  optional byte input field          * 00061100
*                                  containing a connection identifier * 00061200
*                                  to be verified as the current lock * 00061300
*                                  owner as a prerequisite to         * 00061400
*                                  successful completion of this      * 00061500
*                                  request. If the request            * 00061600
*                                  experiences lock contention the    * 00061700
*                                  request will be failed.  The       * 00061800
*                                  connection identifier is available * 00061900
*                                  from the IXLCONN answer area.      * 00062000
*                                  DEFAULT: NO_LOCKCOMP               * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*                      [LOCKDATA=xlockdata|NO_LOCKDATA]             * 00063000
*                          is the name (RS-type), or address in       * 00063100
*                          register (2)-(12), of an optional 8        * 00063200
*                          character input that contains              * 00063300
*                          user-specified information to be passed to * 00063400
*                          the NOTIFY exit for the connection when    * 00063500
*                          the lock is held because of this           * 00063600
*                          LOCKOPER=SET request and another           * 00063700
*                          connection issues either:                  * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*                          o   A IXLLSTC LOCK request specifying      * 00064100
*                              LOCKOPER=SET with LOCKMODE=UNCOND.     * 00064200
*                                                                     * 00064300
*                          o   An IXLLSTE request specifying          * 00064400
*                              LOCKOPER=SET with LOCKMODE=UNCOND.     * 00064500
*                                                                     * 00064600
*                          o   An IXLLSTM request specifying          * 00064700
*                              LOCKOPER=NOTHELD.                      * 00064800
*                                                                     * 00064900
*                                                                     * 00065000
*                                                                     * 00065100
*                          DEFAULT: NO_LOCKDATA                       * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                                                                     * 00065500
*                  LOCKOPER=RESET                                     * 00065600
*                      When LOCKCOMP is not specified, requests that  * 00065700
*                      ownership of the lock be released if held by   * 00065800
*                      the connection specified by CONTOKEN.          * 00065900
*                                                                     * 00066000
*                      When LOCKCOMP is specified, requests that      * 00066100
*                      ownership of the lock be released if and only  * 00066200
*                      if it is held by the connection specified by   * 00066300
*                      LOCKCOMP.                                      * 00066400
*                                                                     * 00066500
*                      The RESET operation will always be done        * 00066600
*                      unconditionally when LOCKCOMP is not specified * 00066700
*                      and conditionally when LOCKCOMP is specified.  * 00066800
*                                                                     * 00066900
*                                                                     * 00067000
*                                                                     * 00067100
*                      [LOCKCOMP=xlockcomp|NO_LOCKCOMP]             * 00067200
*                          is the name (RS-type), or address in       * 00067300
*                          register (2)-(12), of an optional byte     * 00067400
*                          input field containing a connection        * 00067500
*                          identifier to be verified as the current   * 00067600
*                          lock owner as a prerequisite to successful * 00067700
*                          completion of this request.                * 00067800
*                                                                     * 00067900
*                          When LOCKCOMP is specified the locking     * 00068000
*                          operation is always considered to be a     * 00068100
*                          conditional operation.  That is, if the    * 00068200
*                          request experiences lock contention the    * 00068300
*                          request will be failed.  The connection    * 00068400
*                          identifier is available from the IXLCONN   * 00068500
*                          answer area.                               * 00068600
*                          DEFAULT: NO_LOCKCOMP                       * 00068700
*                                                                     * 00068800
*                                                                     * 00068900
*                                                                     * 00069000
*                  LOCKOPER=TEST                                      * 00069100
*                      When LOCKCOMP is not specified, requests that  * 00069200
*                      the lock be tested to see if it is owned by    * 00069300
*                      the connection specified by CONTOKEN.  If      * 00069400
*                      LOCKCOMP is specified the lock is to be tested * 00069500
*                      to see if it is owned by the LOCKCOMP          * 00069600
*                      connection.                                    * 00069700
*                                                                     * 00069800
*                      In both cases return code 0 indicates the lock * 00069900
*                      was held, while return code 4 indicates the    * 00070000
*                      lock is either not held or is held by a        * 00070100
*                      different connection.                          * 00070200
*                                                                     * 00070300
*                      The lock state remains unchanged as a result   * 00070400
*                      of this option.                                * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                      [LOCKCOMP=xlockcomp|NO_LOCKCOMP]             * 00070800
*                          is the name (RS-type), or address in       * 00070900
*                          register (2)-(12), of an optional byte     * 00071000
*                          input field containing a connection        * 00071100
*                          identifier to be verified as the current   * 00071200
*                          lock owner as a prerequisite to successful * 00071300
*                          completion of this request.                * 00071400
*                          DEFAULT: NO_LOCKCOMP                       * 00071500
*                                                                     * 00071600
*                                                                     * 00071700
*                                                                     * 00071800
*                  LOCKOPER=READNEXT                                  * 00071900
*                      When LOCKCOMP is not specified, requests that  * 00072000
*                      the lock index and connection ID of the owner  * 00072100
*                      of the next owned lock starting at the lock    * 00072200
*                      index specified by LOCKINDEX be returned.      * 00072300
*                                                                     * 00072400
*                      When LOCKCOMP is specified, requests that the  * 00072500
*                      lock index of the next lock owned by the       * 00072600
*                      LOCKCOMP connection, starting at the lock      * 00072700
*                      index specified by LOCKINDEX, be returned.     * 00072800
*                                                                     * 00072900
*                      The lock state remains unchanged as a result   * 00073000
*                      of this option.                                * 00073100
*                                                                     * 00073200
*                      A request specifying LOCKOPER=READNEXT may     * 00073300
*                      complete prematurely if coupling facility      * 00073400
*                      model-dependent timeout criteria is exceeded.  * 00073500
*                      In this event indicative return and reason     * 00073600
*                      codes are provided, and the index of the next  * 00073700
*                      lock to be processed is returned in the answer * 00073800
*                      area specified by ANSAREA.  This lock index    * 00073900
*                      may be specified on a subsequent               * 00074000
*                      LOCKOPER=READNEXT request to resume processing * 00074100
*                      with the appropriate lock entry.               * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*                      [LOCKCOMP=xlockcomp|NO_LOCKCOMP]             * 00074500
*                          is the name (RS-type), or address in       * 00074600
*                          register (2)-(12), of an optional byte     * 00074700
*                          input field containing a connection        * 00074800
*                          identifier.                                * 00074900
*                          DEFAULT: NO_LOCKCOMP                       * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*          REQUEST=READ_LCONTROLS                                     * 00075800
*              Read list controls.  Requests that control information * 00075900
*              for the list specified by LISTNUM be returned.         * 00076000
*                                                                     * 00076100
*              Information returned in the answer area specified by   * 00076200
*              ANSAREA consists of the list controls as mapped by     * 00076300
*              IXLYLAA mapping macro.  In addition, the list          * 00076400
*              monitoring information and key-range monitoring        * 00076500
*              information for the list is returned in the storage    * 00076600
*              specified by BUFFER or the buffers specified by        * 00076700
*              BUFLIST.  Refer to the IXLYLMI mapping macro for the   * 00076800
*              format of the returned list monitoring information and * 00076900
*              key-range monitoring information.                      * 00077000
*                                                                     * 00077100
*              REQUEST=READ_LCONTROLS is mutually exclusive with      * 00077200
*              MODE=ASYNCNORESPONSE.                                  * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*              LISTNUM=xlistnum                                       * 00077600
*                  is the name (RS-type), or address in register      * 00077700
*                  (2)-(12), of a required fullword input specifying  * 00077800
*                  the number of the list to be processed.            * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*                                                                     * 00078300
*              The following is a set of mutually exclusive keys.     * 00078400
*              This set is required; only one key must be specified.  * 00078500
*                                                                     * 00078600
*                                                                     * 00078700
*              BUFLIST=xbuflist                                       * 00078800
*                  belongs to a set of mutually exclusive keys. It is * 00078900
*                  an input.  It is the name (RS-type), or address in * 00079000
*                  register (2)-(12), of a 128-byte virtual storage   * 00079100
*                  area containing the address of a buffer.  The      * 00079200
*                  buffer receives output data from the               * 00079300
*                  READ_LCONTROLS request.                            * 00079400
*                                                                     * 00079500
*                  The buffer address description is an 8-byte        * 00079600
*                  element.  The first four bytes of the element is   * 00079700
*                  reserved space.  The second four bytes of the      * 00079800
*                  element contains the address of a buffer.          * 00079900
*                                                                     * 00080000
*                  For READ_LCONTROLS requests only one buffer may be * 00080100
*                  passed.  The buffer must be 4096 bytes in length   * 00080200
*                  and must start on a 4096-byte boundary.            * 00080300
*                                                                     * 00080400
*                  Upon successful completion of a READ_LCONTROLS     * 00080500
*                  request, the BUFLIST buffer contains, starting at  * 00080600
*                  offset zero, an array of list monitoring           * 00080700
*                  information for the specified list and an array of * 00080800
*                  key-range monitoring information for the specified * 00080900
*                  list.  The relative position of an array element   * 00081000
*                  associates it with a connection identifier.  The   * 00081100
*                  first array element is associated with a           * 00081200
*                  connection identifier of zero, and is reserved.    * 00081300
*                  The length and contents of each array element is   * 00081400
*                  defined by mapping macro IXLYLMI.                  * 00081500
*                                                                     * 00081600
*                  BUFLIST is mutually exclusive with BUFFER.         * 00081700
*                                                                     * 00081800
*                                                                     * 00081900
*                  [BUFADDRTYPE=VIRTUAL|REAL                        * 00082000
*                      is an optional keyword input that specifies    * 00082100
*                      whether the buffer address specified in the    * 00082200
*                      BUFLIST list is a virtual storage address or a * 00082300
*                      real storage address.                          * 00082400
*                                                                     * 00082500
*                      DEFAULT: VIRTUAL                               * 00082600
*                                                                     * 00082700
*                                                                     * 00082800
*                      [BUFADDRTYPE=VIRTUAL                           * 00082900
*                          Indicates that the buffer address          * 00083000
*                          specified in the BUFLIST list is a virtual * 00083100
*                          storage address.                           * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*                                                                     * 00083500
*                          [PAGEABLE=YES|NO]                        * 00083600
*                              is an optional keyword input that      * 00083700
*                              specifies whether or not the buffer    * 00083800
*                              specified by BUFLIST resides in        * 00083900
*                              pageable storage.                      * 00084000
*                                                                     * 00084100
*                              DEFAULT: YES                           * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*                              [PAGEABLE=YES                          * 00084500
*                                  Indicates that the BUFLIST buffer  * 00084600
*                                  resides in pageable virtual        * 00084700
*                                  storage.                           * 00084800
*                                                                     * 00084900
*                                  This includes disabled reference   * 00085000
*                                  storage, and may include storage   * 00085100
*                                  that has the potential to become   * 00085200
*                                  pageable (such as address space    * 00085300
*                                  storage for which a PGSER FIX has  * 00085400
*                                  been successfully processed).  It  * 00085500
*                                  does not include implicitly        * 00085600
*                                  non-pageable storage (such as is   * 00085700
*                                  obtained from non-pageable         * 00085800
*                                  subpools).                         * 00085900
*                                                                     * 00086000
*                                                                     * 00086100
*                                                                     * 00086200
*                                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY * 00086300
*                                      ]]                            * 00086400
*                                      is the name (RS-type), or      * 00086500
*                                      address in register (2)-(12),  * 00086600
*                                      of an optional 8 bit input     * 00086700
*                                      containing the storage key to  * 00086800
*                                      be used when referencing the   * 00086900
*                                      buffer in the list specified   * 00087000
*                                      by BUFLIST.                    * 00087100
*                                                                     * 00087200
*                                      The high order nibble contains * 00087300
*                                      the storage key, the low order * 00087400
*                                      nibble is ignored.  For        * 00087500
*                                      example, set 'kkkk' in the     * 00087600
*                                      binary bit string 'kkkkxxxx'B  * 00087700
*                                      to correspond to the desired   * 00087800
*                                      storage key.                   * 00087900
*                                                                     * 00088000
*                                      If BUFSTGKEY is not specified, * 00088100
*                                      then all references to the     * 00088200
*                                      BUFLIST buffer are performed   * 00088300
*                                      using the caller's PSW key.    * 00088400
*                                                                     * 00088500
*                                      DEFAULT: CALLERS_KEY           * 00088600
*                                                                     * 00088700
*                                                                     * 00088800
*                                                                     * 00088900
*                              [PAGEABLE=NO]                          * 00089000
*                                  Indicates that the BUFLIST buffer  * 00089100
*                                  resides in non-pageable virtual    * 00089200
*                                  storage.                           * 00089300
*                                                                     * 00089400
*                                  This includes implicitly           * 00089500
*                                  non-pageable storage areas.  If    * 00089600
*                                  the virtual storage may            * 00089700
*                                  potentially become pageable, then  * 00089800
*                                  the invoker is responsible for     * 00089900
*                                  ensuring the virtual storage       * 00090000
*                                  remains non-pageable for the       * 00090100
*                                  duration of the request.           * 00090200
*                                                                     * 00090300
*                                  If MODE=ASYNCTOKEN is specified or * 00090400
*                                  MODE=SYNCTOKEN is specified and    * 00090500
*                                  the request does not complete      * 00090600
*                                  synchronously, then the storage    * 00090700
*                                  must remain non-pageable until     * 00090800
*                                  completion of the corresponding    * 00090900
*                                  IXLFCOMP request.  If              * 00091000
*                                  MODE=ASYNCEXIT is specified or     * 00091100
*                                  MODE=SYNCEXIT is specified and the * 00091200
*                                  request does not complete          * 00091300
*                                  synchronously, then the storage    * 00091400
*                                  must remain non-pageable until the * 00091500
*                                  completion exit is driven for the  * 00091600
*                                  request.  If MODE=ASYNCECB is      * 00091700
*                                  specified or MODE=SYNCECB is       * 00091800
*                                  specified and the request does not * 00091900
*                                  complete synchronously, then the   * 00092000
*                                  storage must remain non-pageable   * 00092100
*                                  until the specified ECB is posted  * 00092200
*                                  for the request.                   * 00092300
*                                                                     * 00092400
*                                                                     * 00092500
*                                                                     * 00092600
*                                                                     * 00092700
*                                                                     * 00092800
*                                                                     * 00092900
*                          [BUFALET=xbufalet|NO_BUFALET]]           * 00093000
*                              is the name (RS-type), or address in   * 00093100
*                              register (2)-(12), of an optional      * 00093200
*                              fullword input specifying the ALET     * 00093300
*                              value to be used in referencing the    * 00093400
*                              buffer specified for BUFLIST.          * 00093500
*                                                                     * 00093600
*                              DEFAULT: NO_BUFALET                    * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*                      [BUFADDRTYPE=REAL                              * 00094100
*                          Indicates that the buffer address          * 00094200
*                          specified in the BUFLIST list is a real    * 00094300
*                          storage address.                           * 00094400
*                                                                     * 00094500
*                                                                     * 00094600
*                          [BUFADDRSIZE=31|64]]                     * 00094700
*                              is an optional keyword input that      * 00094800
*                              specifies whether a 31 or a 64 bit     * 00094900
*                              address is specified by a BUFLIST      * 00095000
*                              entry.                                 * 00095100
*                                                                     * 00095200
*                              DEFAULT: 31                            * 00095300
*                                                                     * 00095400
*                                                                     * 00095500
*                              [BUFADDRSIZE=31]                       * 00095600
*                                  Indicates that the BUFLIST address * 00095700
*                                  is 31 bits in size.                * 00095800
*                                                                     * 00095900
*                              [BUFADDRSIZE=64]]                      * 00096000
*                                  Indicates that the BUFLIST address * 00096100
*                                  is 64 bits in size.                * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*                                                                     * 00096500
*                                                                     * 00096600
*                                                                     * 00096700
*                                                                     * 00096800
*                                                                     * 00096900
*                                                                     * 00097000
*                                                                     * 00097100
*              BUFFER=xbuffer                                         * 00097200
*                  belongs to a set of mutually exclusive keys. It is * 00097300
*                  an input.  It is the name (RS-type), or address in * 00097400
*                  register (2)-(12), of a virtual storage area to    * 00097500
*                  receive output data from the request.              * 00097600
*                                                                     * 00097700
*                  For READ_LCONTROLS requests, the buffer must be    * 00097800
*                  4096 bytes on a 4096-byte boundary.                * 00097900
*                                                                     * 00098000
*                  Upon successful completion of a READ_LCONTROLS     * 00098100
*                  request, the BUFFER area contains, starting at     * 00098200
*                  offset zero, an array of list monitoring           * 00098300
*                  information for the specified list and an array of * 00098400
*                  key-range monitoring information for the specified * 00098500
*                  list.  The relative position of an array element   * 00098600
*                  associates it with a connection identifier.  The   * 00098700
*                  first array element is associated with a           * 00098800
*                  connection identifier of zero, and is reserved.    * 00098900
*                  The length and contents of each array element is   * 00099000
*                  defined by mapping macro IXLYLMI.                  * 00099100
*                                                                     * 00099200
*                  BUFFER is mutually exclusive with BUFLIST.         * 00099300
*                                                                     * 00099400
*                                                                     * 00099500
*                  [PAGEABLE=YES|NO]                                * 00099600
*                      is an optional keyword input that specifies    * 00099700
*                      whether or not the storage area specified by   * 00099800
*                      BUFFER resides in pageable storage.            * 00099900
*                                                                     * 00100000
*                      DEFAULT: YES                                   * 00100100
*                                                                     * 00100200
*                                                                     * 00100300
*                      [PAGEABLE=YES                                  * 00100400
*                          Indicates that the BUFFER area resides in  * 00100500
*                          pageable virtual storage.                  * 00100600
*                                                                     * 00100700
*                          This includes disabled reference storage,  * 00100800
*                          and may include storage that has the       * 00100900
*                          potential to become pageable (such as      * 00101000
*                          address space storage for which a PGSER    * 00101100
*                          FIX has been successfully processed).  It  * 00101200
*                          does not include implicitly non-pageable   * 00101300
*                          storage (such as is obtained from          * 00101400
*                          non-pageable subpools).                    * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                                                                     * 00101800
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00101900
*                              is the name (RS-type), or address in   * 00102000
*                              register (2)-(12), of an optional 8    * 00102100
*                              bit input containing the storage key   * 00102200
*                              to be used when referencing the        * 00102300
*                              storage area specified by BUFFER.      * 00102400
*                                                                     * 00102500
*                              The high order nibble contains the     * 00102600
*                              storage key, the low order nibble is   * 00102700
*                              ignored.  For example, set 'kkkk' in   * 00102800
*                              the binary bit string 'kkkkxxxx'B to   * 00102900
*                              correspond to the desired storage key. * 00103000
*                                                                     * 00103100
*                              If BUFSTGKEY is not specified, then    * 00103200
*                              all references to the BUFFER buffer    * 00103300
*                              storage are performed using the        * 00103400
*                              caller's PSW key.                      * 00103500
*                                                                     * 00103600
*                              DEFAULT: CALLERS_KEY                   * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*                      [PAGEABLE=NO]                                  * 00104100
*                          Indicates that the BUFFER area resides in  * 00104200
*                          non-pageable virtual storage.              * 00104300
*                                                                     * 00104400
*                          This includes implicitly non-pageable      * 00104500
*                          storage areas.  If the virtual storage may * 00104600
*                          potentially become pageable, then the      * 00104700
*                          invoker is responsible for ensuring the    * 00104800
*                          virtual storage remains non-pageable for   * 00104900
*                          the duration of the request.               * 00105000
*                                                                     * 00105100
*                          If MODE=ASYNCTOKEN is specified or         * 00105200
*                          MODE=SYNCTOKEN is specified and the        * 00105300
*                          request does not complete synchronously,   * 00105400
*                          then the storage must remain non-pageable  * 00105500
*                          until completion of the corresponding      * 00105600
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00105700
*                          specified or MODE=SYNCEXIT is specified    * 00105800
*                          and the request does not complete          * 00105900
*                          synchronously, then the storage must       * 00106000
*                          remain non-pageable until the completion   * 00106100
*                          exit is driven for the request.  If        * 00106200
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00106300
*                          is specified and the request does not      * 00106400
*                          complete synchronously, then the storage   * 00106500
*                          must remain non-pageable until the         * 00106600
*                          specified ECB is posted for the request.   * 00106700
*                                                                     * 00106800
*                                                                     * 00106900
*                                                                     * 00107000
*                                                                     * 00107100
*                                                                     * 00107200
*                                                                     * 00107300
*                                                                     * 00107400
*              End of a set of mutually exclusive required keys.      * 00107500
*                                                                     * 00107600
*                                                                     * 00107700
*          REQUEST=WRITE_LCONTROLS                                    * 00107800
*              Write list controls.  Requests that one or more of the * 00107900
*              list controls for the list specified by LISTNUM be     * 00108000
*              updated.  The list controls which may be updated       * 00108100
*              include the following:                                 * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*              o   List authority (NEWAUTH)                           * 00108500
*                                                                     * 00108600
*              o   List limit bounding the number of entries or       * 00108700
*                  elements which may reside on the list (LISTLIMIT)  * 00108800
*                                                                     * 00108900
*              o   List description (LISTDESC)                        * 00109000
*                                                                     * 00109100
*              o   List key (LISTKEY)                                 * 00109200
*                                                                     * 00109300
*              o   Maximum list key (MAXLISTKEY)                      * 00109400
*                                                                     * 00109500
*              o   List cursor and list cursor direction (SETCURSOR)  * 00109600
*                                                                     * 00109700
*              o   Key-range start and end values (KEYRANGESTART and  * 00109800
*                  KEYRANGEEND)                                       * 00109900
*                                                                     * 00110000
*              o   Key-range empty and key-range not-empty threshold  * 00110100
*                  counts (KREMPTY and KRNOTEMPTY)                    * 00110200
*                                                                     * 00110300
*              o   List empty and list not-empty threshold counts     * 00110400
*                  (LISTEMPTY and LISTNOTEMPTY)                       * 00110500
*                                                                     * 00110600
*                                                                     * 00110700
*                                                                     * 00110800
*                                                                     * 00110900
*              LISTNUM=xlistnum                                       * 00111000
*                  is the name (RS-type), or address in register      * 00111100
*                  (2)-(12), of a required fullword input specifying  * 00111200
*                  the number of the list to be processed.            * 00111300
*                                                                     * 00111400
*                                                                     * 00111500
*                                                                     * 00111600
*                                                                     * 00111700
*                                                                     * 00111800
*              AUTHCOMP=xauthcomp                                     * 00111900
*                  is the name (RS-type), or address in register      * 00112000
*                  (2)-(12), of a required 16 character input which   * 00112100
*                  specifies a value to be compared to the list       * 00112200
*                  authority value for the designated list.           * 00112300
*                                                                     * 00112400
*                  If the specified list authority fails to equal the * 00112500
*                  list authority value for the designated list then  * 00112600
*                  the IXLLSTC operation is terminated with no        * 00112700
*                  resultant change to the structure, and indicative  * 00112800
*                  return and reason codes are provided to the        * 00112900
*                  invoker.                                           * 00113000
*                                                                     * 00113100
*                                                                     * 00113200
*                                                                     * 00113300
*                                                                     * 00113400
*              [NEWAUTH=xnewauth|NO_NEWAUTH]                        * 00113500
*                  is the name (RS-type), or address in register      * 00113600
*                  (2)-(12), of an optional 16 character input which  * 00113700
*                  specifies a new value to be established as the     * 00113800
*                  list authority of the designated list.  If NEWAUTH * 00113900
*                  is not specified the list authority for the        * 00114000
*                  designated list will remain unchanged.             * 00114100
*                                                                     * 00114200
*                  Note: The default list authority for all lists     * 00114300
*                  when the structure is allocated is binary zeros.   * 00114400
*                  DEFAULT: NO_NEWAUTH                                * 00114500
*                                                                     * 00114600
*                                                                     * 00114700
*                                                                     * 00114800
*                                                                     * 00114900
*              [LISTLIMIT=xlistlimit|NO_LISTLIMIT]                  * 00115000
*                  is the name (RS-type), or address in register      * 00115100
*                  (2)-(12), of an optional fullword input specifying * 00115200
*                  the list limit bounding the number of entries or   * 00115300
*                  elements that may reside on the list.  If          * 00115400
*                  LISTLIMIT is not specified the list limit for the  * 00115500
*                  designated list will remain unchanged.             * 00115600
*                                                                     * 00115700
*                  Note: The default list limit for all lists when    * 00115800
*                  the structure is allocated is the total number of  * 00115900
*                  list entries or elements in the structure.         * 00116000
*                                                                     * 00116100
*                  When an IXLALTER is processed for a list           * 00116200
*                  structure, if the list limit for a list is equal   * 00116300
*                  to the default value then it will be automatically * 00116400
*                  adjusted to the new number of entries or elements. * 00116500
*                  If a list limit is not equal to the default value  * 00116600
*                  then the alter process will not adjust it and it   * 00116700
*                  is the responsibility of the user, if desired, to  * 00116800
*                  set a new limit taking into account the current    * 00116900
*                  entry and element counts for the altered           * 00117000
*                  structure.                                         * 00117100
*                  DEFAULT: NO_LISTLIMIT                              * 00117200
*                                                                     * 00117300
*                                                                     * 00117400
*                                                                     * 00117500
*                                                                     * 00117600
*              [LISTDESC=xlistdesc|NO_LISTDESC]                     * 00117700
*                  is the name (RS-type), or address in register      * 00117800
*                  (2)-(12), of an optional 32 character input        * 00117900
*                  specifying the user defined description to be      * 00118000
*                  associated with the list.  If LISTDESC is not      * 00118100
*                  specified the user description for the designated  * 00118200
*                  list will remain unchanged.                        * 00118300
*                                                                     * 00118400
*                  Note: The default list description for all lists   * 00118500
*                  when the structure is allocated is binary zeros.   * 00118600
*                  DEFAULT: NO_LISTDESC                               * 00118700
*                                                                     * 00118800
*                                                                     * 00118900
*                                                                     * 00119000
*                                                                     * 00119100
*              [LISTKEY=xlistkey|NO_LISTKEY]                        * 00119200
*                  is the name (RS-type), or address in register      * 00119300
*                  (2)-(12), of an optional 16 character input        * 00119400
*                  specifying the list key to be associated with the  * 00119500
*                  list.  This list key value may be assigned to list * 00119600
*                  entries when they are created or moved.            * 00119700
*                                                                     * 00119800
*                  If LISTKEY is not specified the list key for the   * 00119900
*                  designated list will remain unchanged.  LISTKEY is * 00120000
*                  ignored when the structure does not support keyed  * 00120100
*                  entries.                                           * 00120200
*                                                                     * 00120300
*                  Note: The default list key for all lists when the  * 00120400
*                  structure is allocated is binary zeros.            * 00120500
*                                                                     * 00120600
*                  The LISTKEY keyword is only meaningful for list    * 00120700
*                  structures allocated in a CFLEVEL=1 or higher      * 00120800
*                  coupling facility.                                 * 00120900
*                  DEFAULT: NO_LISTKEY                                * 00121000
*                                                                     * 00121100
*                                                                     * 00121200
*                                                                     * 00121300
*                                                                     * 00121400
*              [MAXLISTKEY=xmaxlistkey|NO_MAXLISTKEY]               * 00121500
*                  is the name (RS-type), or address in register      * 00121600
*                  (2)-(12), of an optional 16 character input        * 00121700
*                  specifying the maximum list key value to be        * 00121800
*                  associated with the list.  This value specifies an * 00121900
*                  upper bound for the list key value.                * 00122000
*                                                                     * 00122100
*                  If MAXLISTKEY is not specified the maximum list    * 00122200
*                  key for the designated list will remain unchanged. * 00122300
*                  MAXLISTKEY is ignored when the structure does not  * 00122400
*                  support keyed entries.                             * 00122500
*                                                                     * 00122600
*                  Note: The default maximum list key for all lists   * 00122700
*                  when the structure is allocated is binary zeros.   * 00122800
*                                                                     * 00122900
*                  The MAXLISTKEY keyword is only meaningful for list * 00123000
*                  structures allocated in a CFLEVEL=1 or higher      * 00123100
*                  coupling facility.                                 * 00123200
*                  DEFAULT: NO_MAXLISTKEY                             * 00123300
*                                                                     * 00123400
*                                                                     * 00123500
*                                                                     * 00123600
*                                                                     * 00123700
*              [SETCURSOR=NO_SETCURSOR|HEAD|TAIL]                   * 00123800
*                  is an optional keyword input which indicates that  * 00123900
*                  the list cursor and the list cursor direction are  * 00124000
*                  to be set.                                         * 00124100
*                                                                     * 00124200
*                  The list cursor direction is only used when an     * 00124300
*                  IXLLSTE invocation specifies UPDATECURSOR=YES with * 00124400
*                  CURSORUPDATETYPE=NEXTCOND.                         * 00124500
*                                                                     * 00124600
*                  Note: The default list cursor for all lists when   * 00124700
*                  the structure is allocated is binary zeros.  The   * 00124800
*                  default list cursor direction for all lists when   * 00124900
*                  the structure is allocated is a head-to-tail       * 00125000
*                  direction.                                         * 00125100
*                                                                     * 00125200
*                  The SETCURSOR keyword is only meaningful for list  * 00125300
*                  structures allocated in a CFLEVEL=1 or higher      * 00125400
*                  coupling facility.                                 * 00125500
*                                                                     * 00125600
*                  DEFAULT: NO_SETCURSOR                              * 00125700
*                                                                     * 00125800
*                                                                     * 00125900
*                  SETCURSOR=NO_SETCURSOR                             * 00126000
*                      Indicates that the list cursor and the list    * 00126100
*                      cursor direction will remain unchanged.        * 00126200
*                                                                     * 00126300
*                  SETCURSOR=HEAD                                     * 00126400
*                      Indicates that the list cursor is to be set to * 00126500
*                      the entry identifier for the first entry on    * 00126600
*                      the list and the list cursor direction is to   * 00126700
*                      be set in a head-to-tail direction.  If the    * 00126800
*                      list is empty then the list cursor will be     * 00126900
*                      reset to binary zeros.                         * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*                  SETCURSOR=TAIL                                     * 00127300
*                      Indicates that the list cursor is to be set to * 00127400
*                      the entry identifier for the last entry on the * 00127500
*                      list and the list cursor direction is to be    * 00127600
*                      set in a tail-to-head direction.  If the list  * 00127700
*                      is empty then the list cursor will be reset to * 00127800
*                      binary zeros.                                  * 00127900
*                                                                     * 00128000
*                                                                     * 00128100
*                                                                     * 00128200
*                                                                     * 00128300
*                                                                     * 00128400
*                                                                     * 00128500
*              [KEYRANGE=NO_CHANGE|SET]                             * 00128600
*                  is an optional keyword input that determines       * 00128700
*                  whether the key-range is to be updated.            * 00128800
*                  DEFAULT: NO_CHANGE                                 * 00128900
*                                                                     * 00129000
*                                                                     * 00129100
*                  [KEYRANGE=NO_CHANGE]                               * 00129200
*                      Indicates that the key-range currently defined * 00129300
*                      for the list will remain unchanged.            * 00129400
*                                                                     * 00129500
*                  [KEYRANGE=SET                                      * 00129600
*                      Indicates that the key-range defined for the   * 00129700
*                      list is to be set to the range specified by    * 00129800
*                      KEYRANGESTART and KEYRANGEEND.                 * 00129900
*                                                                     * 00130000
*                      SET is valid for keyed list structures         * 00130100
*                      allocated in a CFLEVEL=9 or higher coupling    * 00130200
*                      facility.  SET is ignored and the request      * 00130300
*                      processed as if NO_CHANGE were specified when  * 00130400
*                      the structure is allocated in a CFLEVEL=8 or   * 00130500
*                      lower coupling facility, or if the structure   * 00130600
*                      does not support keyed list entries.           * 00130700
*                                                                     * 00130800
*                      The default key-range start and end key values * 00130900
*                      are initialized to binary zeros for all lists  * 00131000
*                      when the structure is allocated.               * 00131100
*                                                                     * 00131200
*                                                                     * 00131300
*                      KEYRANGESTART=xkeyrangestart                   * 00131400
*                          is the name (RS-type), or address in       * 00131500
*                          register (2)-(12), of a required 16        * 00131600
*                          character input that specifies an unsigned * 00131700
*                          128-bit key-range start key value to be    * 00131800
*                          associated with the list.                  * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*                                                                     * 00132300
*                      KEYRANGEEND=xkeyrangeend]                      * 00132400
*                          is the name (RS-type), or address in       * 00132500
*                          register (2)-(12), of a required 16        * 00132600
*                          character input that specifies an unsigned * 00132700
*                          128-bit key-range end key value to be      * 00132800
*                          associated with the list.  The end key     * 00132900
*                          value must be greater than or equal to the * 00133000
*                          start key value.                           * 00133100
*                                                                     * 00133200
*                                                                     * 00133300
*                                                                     * 00133400
*                                                                     * 00133500
*                                                                     * 00133600
*                                                                     * 00133700
*                                                                     * 00133800
*                                                                     * 00133900
*              [KEYRANGESTATE=NO_CHANGE|DEFINE]                     * 00134000
*                  is an optional keyword input that specifies        * 00134100
*                  whether the threshold counts that define the       * 00134200
*                  empty/not-empty state of a key-range are to be     * 00134300
*                  updated.                                           * 00134400
*                  DEFAULT: NO_CHANGE                                 * 00134500
*                                                                     * 00134600
*                                                                     * 00134700
*                  [KEYRANGESTATE=NO_CHANGE]                          * 00134800
*                      Indicates that the threshold counts will       * 00134900
*                      remain unchanged.                              * 00135000
*                                                                     * 00135100
*                  [KEYRANGESTATE=DEFINE                              * 00135200
*                      Indicates that the threshold counts that       * 00135300
*                      define the empty/not-empty state of a          * 00135400
*                      key-range are to be set to the values          * 00135500
*                      indicated by KREMPTY and KRNOTEMPTY.           * 00135600
*                                                                     * 00135700
*                      DEFINE is valid for keyed list structures      * 00135800
*                      allocated in a CFLEVEL=9 or higher coupling    * 00135900
*                      facility.  DEFINE is ignored and the request   * 00136000
*                      processed as if NO_CHANGE were specified when  * 00136100
*                      the structure is allocated in a CFLEVEL=8 or   * 00136200
*                      lower coupling facility, or if the structure   * 00136300
*                      does not support keyed list entries.           * 00136400
*                                                                     * 00136500
*                      A key-range is either in the empty state or    * 00136600
*                      the not-empty state.  Use a                    * 00136700
*                      REQUEST=MONITOR_KEYRANGE request to register   * 00136800
*                      interest in monitoring transitions between     * 00136900
*                      key-range states.                              * 00137000
*                                                                     * 00137100
*                      The default key-range empty/not-empty          * 00137200
*                      threshold counts are initialized to zero for   * 00137300
*                      all lists when the structure is allocated.     * 00137400
*                                                                     * 00137500
*                      A request to define the key-range              * 00137600
*                      empty/not-empty threshold counts can timeout.  * 00137700
*                      The caller is expected to reissue the request  * 00137800
*                      until it completes without timing out.         * 00137900
*                                                                     * 00138000
*                                                                     * 00138100
*                      KREMPTY=xkrempty                               * 00138200
*                          is the name (RS-type), or address in       * 00138300
*                          register (2)-(12), of a required fullword  * 00138400
*                          input specifying the key-range empty       * 00138500
*                          threshold count to be associated with the  * 00138600
*                          list.                                      * 00138700
*                                                                     * 00138800
*                          A key-range is in the empty state if the   * 00138900
*                          number of list entries in the key-range is * 00139000
*                          either less than or equal to the KREMPTY   * 00139100
*                          threshold or zero.  Upon completion of the * 00139200
*                          key-range state definition, the key-range  * 00139300
*                          is also considered to be in the empty      * 00139400
*                          state if the number of list entries in the * 00139500
*                          key-range is less than or equal to the     * 00139600
*                          KRNOTEMPTY threshold.  Once the key-range  * 00139700
*                          state becomes empty, it remains empty      * 00139800
*                          until the number of list entries in the    * 00139900
*                          key-range becomes greater than the         * 00140000
*                          KRNOTEMPTY threshold.                      * 00140100
*                                                                     * 00140200
*                          The KREMPTY keyword is valid only for a    * 00140300
*                          keyed list structure allocated in a        * 00140400
*                          CFLEVEL=9 or higher coupling facility.     * 00140500
*                                                                     * 00140600
*                                                                     * 00140700
*                                                                     * 00140800
*                                                                     * 00140900
*                      KRNOTEMPTY=xkrnotempty]                        * 00141000
*                          is the name (RS-type), or address in       * 00141100
*                          register (2)-(12), of a required fullword  * 00141200
*                          input specifying the key-range not-empty   * 00141300
*                          threshold count to be associated with the  * 00141400
*                          list.  The key-range not-empty count must  * 00141500
*                          be greater than or equal to the key-range  * 00141600
*                          empty count.                               * 00141700
*                                                                     * 00141800
*                          A key-range is in the not-empty state if   * 00141900
*                          the number of list entries in the          * 00142000
*                          key-range is greater than the KRNOTEMPTY   * 00142100
*                          threshold.  Once the key-range state is    * 00142200
*                          not-empty, it remains not-empty until the  * 00142300
*                          number of list entries in the key-range    * 00142400
*                          either becomes less than or equal to the   * 00142500
*                          KREMPTY threshold or becomes zero.         * 00142600
*                                                                     * 00142700
*                          The KRNOTEMPTY keyword is valid only for a * 00142800
*                          keyed list structure allocated in a        * 00142900
*                          CFLEVEL=9 or higher coupling facility.     * 00143000
*                                                                     * 00143100
*                                                                     * 00143200
*                                                                     * 00143300
*                                                                     * 00143400
*                                                                     * 00143500
*                                                                     * 00143600
*                                                                     * 00143700
*                                                                     * 00143800
*              [LISTSTATE=NO_CHANGE|DEFINE]                         * 00143900
*                  is an optional keyword input that specifies        * 00144000
*                  whether the threshold counts that define the       * 00144100
*                  empty/not-empty state of a list are to be updated. * 00144200
*                  DEFAULT: NO_CHANGE                                 * 00144300
*                                                                     * 00144400
*                                                                     * 00144500
*                  [LISTSTATE=NO_CHANGE]                              * 00144600
*                      Indicates that the threshold counts will       * 00144700
*                      remain unchanged.                              * 00144800
*                                                                     * 00144900
*                  [LISTSTATE=DEFINE                                  * 00145000
*                      Indicates that the threshold counts that       * 00145100
*                      define the empty/not-empty state of a list are * 00145200
*                      to be set to the values indicated by LISTEMPTY * 00145300
*                      and LISTNOTEMPTY.                              * 00145400
*                                                                     * 00145500
*                      Upon completion of the definition of the list  * 00145600
*                      empty/not-empty thresholds, the list state may * 00145700
*                      change.  If the number of list entries is less * 00145800
*                      than the new list empty threshold, the list    * 00145900
*                      state is empty.  If the number of list entries * 00146000
*                      is greater than the new list not-empty         * 00146100
*                      threshold, the list state is not-empty.  When  * 00146200
*                      the number of list entries is greater than or  * 00146300
*                      equal to the new list empty threshold and less * 00146400
*                      than or equal to the new list not-empty        * 00146500
*                      threshold, the list state remains unchanged.   * 00146600
*                                                                     * 00146700
*                      DEFINE is valid for CFLEVEL=9 or higher.       * 00146800
*                      DEFINE is ignored and the request processed as * 00146900
*                      if NO_CHANGE were specified when the structure * 00147000
*                      is allocated in a CFLEVEL=8 or lower coupling  * 00147100
*                      facility.                                      * 00147200
*                                                                     * 00147300
*                      A list is either in the empty state or the     * 00147400
*                      not-empty state.  Use a REQUEST=MONITOR_LIST   * 00147500
*                      request to register interest in monitoring     * 00147600
*                      transitions between list states.               * 00147700
*                                                                     * 00147800
*                      The default list empty/not-empty threshold     * 00147900
*                      counts are initialized to zero for all lists   * 00148000
*                      when the structure is allocated.  For          * 00148100
*                      structures allocated in a CFLEVEL=8 or lower   * 00148200
*                      coupling facility, the list-empty and list     * 00148300
*                      not-empty threshold counts are always zero.    * 00148400
*                                                                     * 00148500
*                                                                     * 00148600
*                      LISTEMPTY=xlistempty                           * 00148700
*                          is the name (RS-type), or address in       * 00148800
*                          register (2)-(12), of a required fullword  * 00148900
*                          input specifying the list empty threshold  * 00149000
*                          count to be associated with the list.      * 00149100
*                                                                     * 00149200
*                          A list is in the empty state if the number * 00149300
*                          of list entries on the list is either zero * 00149400
*                          or less than the LISTEMPTY threshold.      * 00149500
*                                                                     * 00149600
*                          The LISTEMPTY keyword is valid only for a  * 00149700
*                          list structure allocated in a CFLEVEL=9 or * 00149800
*                          higher coupling facility.                  * 00149900
*                                                                     * 00150000
*                                                                     * 00150100
*                                                                     * 00150200
*                                                                     * 00150300
*                      LISTNOTEMPTY=xlistnotempty]                    * 00150400
*                          is the name (RS-type), or address in       * 00150500
*                          register (2)-(12), of a required fullword  * 00150600
*                          input specifying the list not-empty        * 00150700
*                          threshold count to be associated with the  * 00150800
*                          list.  The list not-empty threshold count  * 00150900
*                          must be greater than or equal to the list  * 00151000
*                          empty threshold count.                     * 00151100
*                                                                     * 00151200
*                          A list is in the not-empty state if the    * 00151300
*                          number of list entries on the list is      * 00151400
*                          greater than the LISTNOTEMPTY threshold.   * 00151500
*                                                                     * 00151600
*                          The LISTNOTEMPTY keyword is valid only for * 00151700
*                          a list structure allocated in a CFLEVEL=9  * 00151800
*                          or higher coupling facility.               * 00151900
*                                                                     * 00152000
*                                                                     * 00152100
*                                                                     * 00152200
*                                                                     * 00152300
*                                                                     * 00152400
*                                                                     * 00152500
*                                                                     * 00152600
*          REQUEST=READ_EQCONTROLS                                    * 00152700
*              Read event queue controls.  Requests that control      * 00152800
*              information for the requesting user's event queue be   * 00152900
*              returned.                                              * 00153000
*                                                                     * 00153100
*              Information returned in the answer area specified by   * 00153200
*              ANSAREA consists of the total number of EMCs (Event    * 00153300
*              Monitor Controls) currently on the event queue, the    * 00153400
*              number of times that the event queue has transitioned  * 00153500
*              from the empty to the not-empty state, the vector      * 00153600
*              index number which is being used to monitor the event  * 00153700
*              queue, an indication of whether or not the user's list * 00153800
*              transition exit is to be driven when the event queue   * 00153900
*              transitions from the empty to not-empty state, and an  * 00154000
*              indication of whether the EMCs are for sublists        * 00154100
*              identified by entry key or for sublists identified by  * 00154200
*              secondary key.                                         * 00154300
*                                                                     * 00154400
*                                                                     * 00154500
*              [KEYTYPE=ENTRY|SECONDARY]                            * 00154600
*                  is an optional keyword input that specifies        * 00154700
*                  whether to return information about the event      * 00154800
*                  queue for state transitions of sublists identified * 00154900
*                  by list entry key or to return informaion about    * 00155000
*                  the event queue for state transitions of sublists  * 00155100
*                  identified by secondary key.                       * 00155200
*                  DEFAULT: ENTRY                                     * 00155300
*                                                                     * 00155400
*                                                                     * 00155500
*                  KEYTYPE=ENTRY                                      * 00155600
*                      specifies that information about the event     * 00155700
*                      queue for state transitions of sublists        * 00155800
*                      identified by list entry key is to be          * 00155900
*                      returned.                                      * 00156000
*                                                                     * 00156100
*                      KEYTYPE=ENTRY is valid only when the structure * 00156200
*                      is allocated in a CFLEVEL=3 or higher coupling * 00156300
*                      facility.                                      * 00156400
*                                                                     * 00156500
*                  KEYTYPE=SECONDARY                                  * 00156600
*                      specifies that information about the event     * 00156700
*                      queue for state transitions of sublists        * 00156800
*                      identified by secondary key is to be returned. * 00156900
*                                                                     * 00157000
*                      KEYTYPE=SECONDARY is valid only when the       * 00157100
*                      structure is allocated with secondary keys in  * 00157200
*                      a CFLEVEL=9 or higher coupling facility.       * 00157300
*                                                                     * 00157400
*                                                                     * 00157500
*                                                                     * 00157600
*                                                                     * 00157700
*                                                                     * 00157800
*          REQUEST=READ_EMCONTROLS                                    * 00157900
*              Read event monitor controls (EMCs).  Requests that     * 00158000
*              control information for the requesting user's          * 00158100
*              registered interest in monitoring a particular sublist * 00158200
*              (designated by LISTNUM and either ENTRYKEY or          * 00158300
*              SECONDARYKEY) be returned.                             * 00158400
*                                                                     * 00158500
*              For entry keys, this request type is valid only when   * 00158600
*              the structure is allocated in a CFLEVEL=3 or higher    * 00158700
*              coupling facility.  The structure must support keyed   * 00158800
*              list entries (i.e., REFOPTION=KEY must be specified on * 00158900
*              the IXLCONN request when the structure is allocated).  * 00159000
*                                                                     * 00159100
*              For secondary keys, this request type is valid only    * 00159200
*              when the structure is allocated in a CFLEVEL=9 or      * 00159300
*              higher coupling facility.  The structure must support  * 00159400
*              secondary keys (i.e., KEYTYPE=SECONDARY must be        * 00159500
*              specified on the IXLCONN request when the structure is * 00159600
*              allocated).                                            * 00159700
*                                                                     * 00159800
*              Information returned in the answer area specified by   * 00159900
*              ANSAREA includes the user notification controls (UNC), * 00160000
*              the list number and entry key or secondary key of the  * 00160100
*              sublist with which the event monitor control           * 00160200
*              information is associated, an indication of whether or * 00160300
*              not the EMC is currently queued to the user's event    * 00160400
*              queue, an indication of whether the EMCs are for       * 00160500
*              sublists identified by entry key or for sublists       * 00160600
*              identified by secondary key, and an indication of      * 00160700
*              whether the EMC is queued to the event queue for only  * 00160800
*              the first list entry added to the sublist or for every * 00160900
*              list entry added to the sublist.                       * 00161000
*                                                                     * 00161100
*                                                                     * 00161200
*              LISTNUM=xlistnum                                       * 00161300
*                  is the name (RS-type), or address in register      * 00161400
*                  (2)-(12), of a required fullword input partially   * 00161500
*                  designating a sublist to be processed.             * 00161600
*                                                                     * 00161700
*                  LISTNUM is used in conjunction with either         * 00161800
*                  ENTRYKEY or SECONDARYKEY to designate a sublist    * 00161900
*                  for which the user's event monitor controls are to * 00162000
*                  be read.                                           * 00162100
*                                                                     * 00162200
*                                                                     * 00162300
*                                                                     * 00162400
*                                                                     * 00162500
*              The following is a set of mutually exclusive keys.     * 00162600
*              This set is required; only one key must be specified.  * 00162700
*                                                                     * 00162800
*                                                                     * 00162900
*              ENTRYKEY=xentrykey                                     * 00163000
*                  belongs to a set of mutually exclusive keys. It is * 00163100
*                  the name (RS-type), or address in register         * 00163200
*                  (2)-(12), of a 16 character input that specifies   * 00163300
*                  an unsigned 128-bit entry key to be used in        * 00163400
*                  conjunction with LISTNUM to designate a sublist    * 00163500
*                  whose EMCs are to be read.                         * 00163600
*                                                                     * 00163700
*                  ENTRYKEY may only be specified for structures that * 00163800
*                  support keyed entries.                             * 00163900
*                                                                     * 00164000
*              SECONDARYKEY=xsecondarykey                             * 00164100
*                  belongs to a set of mutually exclusive keys. It is * 00164200
*                  the name (RS-type), or address in register         * 00164300
*                  (2)-(12), of a 32 character input that specifies   * 00164400
*                  an unsigned 256-bit secondary key to be used in    * 00164500
*                  conjunction with LISTNUM to designate a sublist    * 00164600
*                  whose EMCs are to be read.                         * 00164700
*                                                                     * 00164800
*                  SECONDARYKEY is valid only for structures that are * 00164900
*                  allocated in a CFLEVEL=9 or higher coupling        * 00165000
*                  facility.  The structure must support secondary    * 00165100
*                  keys.                                              * 00165200
*                                                                     * 00165300
*                                                                     * 00165400
*                                                                     * 00165500
*              End of a set of mutually exclusive required keys.      * 00165600
*                                                                     * 00165700
*                                                                     * 00165800
*          REQUEST=DEQ_EVENTQ                                         * 00165900
*              Dequeue event queue EMCs.  Requests that event monitor * 00166000
*              controls be dequeued from an event queue.  The         * 00166100
*              contents of the dequeued EMCs are returned in the      * 00166200
*              specified BUFFER or BUFLIST area.  Each individual EMC * 00166300
*              is mapped by the IXLYEMC mapping macro. Note that      * 00166400
*              neither the EMCs nor the sublist monitoring interest   * 00166500
*              which they represent is deleted by this request.       * 00166600
*              Sublist monitoring remains active until it is stopped  * 00166700
*              via a subsequent MONITOR_SUBLIST ACTION=STOP request.  * 00166800
*                                                                     * 00166900
*              This request type is valid only when the structure is  * 00167000
*              allocated in a CFLEVEL=3 or higher coupling facility.  * 00167100
*                                                                     * 00167200
*              The DEQ_EVENTQ request may complete prematurely, that  * 00167300
*              is, without having dequeued all of the EMCs from an    * 00167400
*              event queue.  In such a case, the user is expected to  * 00167500
*              process the EMCs which were returned on the current    * 00167600
*              request and then re-issue the DEQ_EVENTQ request to    * 00167700
*              continue the process of dequeueing the remaining EMCs  * 00167800
*              from event queue.                                      * 00167900
*                                                                     * 00168000
*              Information returned in the answer area specified by   * 00168100
*              ANSAREA consists of the number of EMCs which were      * 00168200
*              returned, and the number of EMCs which still remain on * 00168300
*              the user's event queue.                                * 00168400
*                                                                     * 00168500
*              REQUEST=DEQ_EVENTQ is mutually exclusive with          * 00168600
*              MODE=ASYNCNORESPONSE.                                  * 00168700
*                                                                     * 00168800
*                                                                     * 00168900
*              [KEYTYPE=ENTRY|SECONDARY]                            * 00169000
*                  is an optional keyword input that specifies        * 00169100
*                  whether to dequeue EMCs for state transitions of   * 00169200
*                  sublists identified by list entry key or to        * 00169300
*                  dequeue EMCs for state transitions of sublists     * 00169400
*                  identified by secondary key.                       * 00169500
*                  DEFAULT: ENTRY                                     * 00169600
*                                                                     * 00169700
*                                                                     * 00169800
*                  KEYTYPE=ENTRY                                      * 00169900
*                      specifies that the EMCs for state transitions  * 00170000
*                      of sublists identified by list entry key are   * 00170100
*                      to be dequeued.                                * 00170200
*                                                                     * 00170300
*                      KEYTYPE=ENTRY is valid only when the structure * 00170400
*                      is allocated in a CFLEVEL=3 or higher coupling * 00170500
*                      facility.                                      * 00170600
*                                                                     * 00170700
*                  KEYTYPE=SECONDARY                                  * 00170800
*                      specifies that the EMCs for state transitions  * 00170900
*                      of sublists identified by secondary key are to * 00171000
*                      be dequeued.                                   * 00171100
*                                                                     * 00171200
*                      KEYTYPE=SECONDARY is valid only when the       * 00171300
*                      structure is allocated with secondary keys in  * 00171400
*                      a CFLEVEL=9 or higher coupling facility.       * 00171500
*                                                                     * 00171600
*                                                                     * 00171700
*                                                                     * 00171800
*                                                                     * 00171900
*                                                                     * 00172000
*                                                                     * 00172100
*              The following is a set of mutually exclusive keys.     * 00172200
*              This set is required; only one key must be specified.  * 00172300
*                                                                     * 00172400
*                                                                     * 00172500
*              BUFLIST=xbuflist                                       * 00172600
*                  belongs to a set of mutually exclusive keys. It is * 00172700
*                  an input.  It is the name (RS-type), or address in * 00172800
*                  register (2)-(12), of a 128-byte virtual storage   * 00172900
*                  area containing the address of a buffer.  The      * 00173000
*                  buffer receives output data from the DEQ_EVENTQ    * 00173100
*                  request.                                           * 00173200
*                                                                     * 00173300
*                  The buffer address description is an 8-byte        * 00173400
*                  element.  The first four bytes of the element is   * 00173500
*                  reserved space.  The second four bytes of the      * 00173600
*                  element contains the address of a buffer.          * 00173700
*                                                                     * 00173800
*                  For DEQ_EVENTQ requests only one buffer may be     * 00173900
*                  passed.  The buffer must be 4096 bytes in length   * 00174000
*                  and must start on a 4096-byte boundary.            * 00174100
*                                                                     * 00174200
*                  Upon successful completion of a DEQ_EVENTQ         * 00174300
*                  request, the BUFLIST contains, starting at offset  * 00174400
*                  zero in the buffer, an array of event monitor      * 00174500
*                  controls that were dequeued from the event queue.  * 00174600
*                  The length and contents of each array element is   * 00174700
*                  defined by mapping macro IXLYEMC.                  * 00174800
*                                                                     * 00174900
*                  BUFLIST is mutually exclusive with BUFFER.         * 00175000
*                                                                     * 00175100
*                                                                     * 00175200
*                  [BUFADDRTYPE=VIRTUAL|REAL                        * 00175300
*                      is an optional keyword input that specifies    * 00175400
*                      whether the buffer address specified in the    * 00175500
*                      BUFLIST list is a virtual storage address or a * 00175600
*                      real storage address.                          * 00175700
*                                                                     * 00175800
*                      DEFAULT: VIRTUAL                               * 00175900
*                                                                     * 00176000
*                                                                     * 00176100
*                      [BUFADDRTYPE=VIRTUAL                           * 00176200
*                          Indicates that the buffer address          * 00176300
*                          specified in the BUFLIST list is a virtual * 00176400
*                          storage address.                           * 00176500
*                                                                     * 00176600
*                                                                     * 00176700
*                                                                     * 00176800
*                          [PAGEABLE=YES|NO]                        * 00176900
*                              is an optional keyword input that      * 00177000
*                              specifies whether or not the buffer    * 00177100
*                              specified by BUFLIST resides in        * 00177200
*                              pageable storage.                      * 00177300
*                                                                     * 00177400
*                              DEFAULT: YES                           * 00177500
*                                                                     * 00177600
*                                                                     * 00177700
*                              [PAGEABLE=YES                          * 00177800
*                                  Indicates that the BUFLIST buffer  * 00177900
*                                  resides in pageable virtual        * 00178000
*                                  storage.                           * 00178100
*                                                                     * 00178200
*                                  This includes disabled reference   * 00178300
*                                  storage, and may include storage   * 00178400
*                                  that has the potential to become   * 00178500
*                                  pageable (such as address space    * 00178600
*                                  storage for which a PGSER FIX has  * 00178700
*                                  been successfully processed).  It  * 00178800
*                                  does not include implicitly        * 00178900
*                                  non-pageable storage (such as is   * 00179000
*                                  obtained from non-pageable         * 00179100
*                                  subpools).                         * 00179200
*                                                                     * 00179300
*                                                                     * 00179400
*                                                                     * 00179500
*                                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY * 00179600
*                                      ]]                            * 00179700
*                                      is the name (RS-type), or      * 00179800
*                                      address in register (2)-(12),  * 00179900
*                                      of an optional 8 bit input     * 00180000
*                                      containing the storage key to  * 00180100
*                                      be used when referencing the   * 00180200
*                                      buffer in the list specified   * 00180300
*                                      by BUFLIST.                    * 00180400
*                                                                     * 00180500
*                                      The high order nibble contains * 00180600
*                                      the storage key, the low order * 00180700
*                                      nibble is ignored.  For        * 00180800
*                                      example, set 'kkkk' in the     * 00180900
*                                      binary bit string 'kkkkxxxx'B  * 00181000
*                                      to correspond to the desired   * 00181100
*                                      storage key.                   * 00181200
*                                                                     * 00181300
*                                      If BUFSTGKEY is not specified, * 00181400
*                                      then all references to the     * 00181500
*                                      BUFLIST buffer are performed   * 00181600
*                                      using the caller's PSW key.    * 00181700
*                                                                     * 00181800
*                                      DEFAULT: CALLERS_KEY           * 00181900
*                                                                     * 00182000
*                                                                     * 00182100
*                                                                     * 00182200
*                              [PAGEABLE=NO]                          * 00182300
*                                  Indicates that the BUFLIST buffer  * 00182400
*                                  resides in non-pageable virtual    * 00182500
*                                  storage.                           * 00182600
*                                                                     * 00182700
*                                  This includes implicitly           * 00182800
*                                  non-pageable storage areas.  If    * 00182900
*                                  the virtual storage may            * 00183000
*                                  potentially become pageable, then  * 00183100
*                                  the invoker is responsible for     * 00183200
*                                  ensuring the virtual storage       * 00183300
*                                  remains non-pageable for the       * 00183400
*                                  duration of the request.           * 00183500
*                                                                     * 00183600
*                                  If MODE=ASYNCTOKEN is specified or * 00183700
*                                  MODE=SYNCTOKEN is specified and    * 00183800
*                                  the request does not complete      * 00183900
*                                  synchronously, then the storage    * 00184000
*                                  must remain non-pageable until     * 00184100
*                                  completion of the corresponding    * 00184200
*                                  IXLFCOMP request.  If              * 00184300
*                                  MODE=ASYNCEXIT is specified or     * 00184400
*                                  MODE=SYNCEXIT is specified and the * 00184500
*                                  request does not complete          * 00184600
*                                  synchronously, then the storage    * 00184700
*                                  must remain non-pageable until the * 00184800
*                                  completion exit is driven for the  * 00184900
*                                  request.  If MODE=ASYNCECB is      * 00185000
*                                  specified or MODE=SYNCECB is       * 00185100
*                                  specified and the request does not * 00185200
*                                  complete synchronously, then the   * 00185300
*                                  storage must remain non-pageable   * 00185400
*                                  until the specified ECB is posted  * 00185500
*                                  for the request.                   * 00185600
*                                                                     * 00185700
*                                                                     * 00185800
*                                                                     * 00185900
*                                                                     * 00186000
*                                                                     * 00186100
*                                                                     * 00186200
*                          [BUFALET=xbufalet|NO_BUFALET]]           * 00186300
*                              is the name (RS-type), or address in   * 00186400
*                              register (2)-(12), of an optional      * 00186500
*                              fullword input specifying the ALET     * 00186600
*                              value to be used in referencing the    * 00186700
*                              buffer specified for BUFLIST.          * 00186800
*                                                                     * 00186900
*                              DEFAULT: NO_BUFALET                    * 00187000
*                                                                     * 00187100
*                                                                     * 00187200
*                                                                     * 00187300
*                      [BUFADDRTYPE=REAL                              * 00187400
*                          Indicates that the buffer address          * 00187500
*                          specified in the BUFLIST list is a real    * 00187600
*                          storage address.                           * 00187700
*                                                                     * 00187800
*                                                                     * 00187900
*                          [BUFADDRSIZE=31|64]]                     * 00188000
*                              is an optional keyword input that      * 00188100
*                              specifies whether a 31 or a 64 bit     * 00188200
*                              address is specified by a BUFLIST      * 00188300
*                              entry.                                 * 00188400
*                                                                     * 00188500
*                              DEFAULT: 31                            * 00188600
*                                                                     * 00188700
*                                                                     * 00188800
*                              [BUFADDRSIZE=31]                       * 00188900
*                                  Indicates that the BUFLIST address * 00189000
*                                  is 31 bits in size.                * 00189100
*                                                                     * 00189200
*                              [BUFADDRSIZE=64]]                      * 00189300
*                                  Indicates that the BUFLIST address * 00189400
*                                  is 64 bits in size.                * 00189500
*                                                                     * 00189600
*                                                                     * 00189700
*                                                                     * 00189800
*                                                                     * 00189900
*                                                                     * 00190000
*                                                                     * 00190100
*                                                                     * 00190200
*                                                                     * 00190300
*                                                                     * 00190400
*              BUFFER=xbuffer                                         * 00190500
*                  belongs to a set of mutually exclusive keys. It is * 00190600
*                  an input.  It is the name (RS-type), or address in * 00190700
*                  register (2)-(12), of a virtual storage area to    * 00190800
*                  receive output data from the request.              * 00190900
*                                                                     * 00191000
*                  For DEQ_EVENTQ requests, the buffer must be 4096   * 00191100
*                  bytes on a 4096-byte boundary.                     * 00191200
*                                                                     * 00191300
*                  Upon successful completion of a DEQ_EVENTQ         * 00191400
*                  request, the BUFFER area contains, starting at     * 00191500
*                  offset zero, an array of event monitor controls    * 00191600
*                  that were dequeued from the event queue.  The      * 00191700
*                  length and contents of each array element is       * 00191800
*                  defined by mapping macro IXLYEMC.                  * 00191900
*                                                                     * 00192000
*                  BUFFER is mutually exclusive with BUFLIST.         * 00192100
*                                                                     * 00192200
*                                                                     * 00192300
*                  [PAGEABLE=YES|NO]                                * 00192400
*                      is an optional keyword input that specifies    * 00192500
*                      whether or not the storage area specified by   * 00192600
*                      BUFFER resides in pageable storage.            * 00192700
*                                                                     * 00192800
*                      DEFAULT: YES                                   * 00192900
*                                                                     * 00193000
*                                                                     * 00193100
*                      [PAGEABLE=YES                                  * 00193200
*                          Indicates that the BUFFER area resides in  * 00193300
*                          pageable virtual storage.                  * 00193400
*                                                                     * 00193500
*                          This includes disabled reference storage,  * 00193600
*                          and may include storage that has the       * 00193700
*                          potential to become pageable (such as      * 00193800
*                          address space storage for which a PGSER    * 00193900
*                          FIX has been successfully processed).  It  * 00194000
*                          does not include implicitly non-pageable   * 00194100
*                          storage (such as is obtained from          * 00194200
*                          non-pageable subpools).                    * 00194300
*                                                                     * 00194400
*                                                                     * 00194500
*                                                                     * 00194600
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00194700
*                              is the name (RS-type), or address in   * 00194800
*                              register (2)-(12), of an optional 8    * 00194900
*                              bit input containing the storage key   * 00195000
*                              to be used when referencing the        * 00195100
*                              storage area specified by BUFFER.      * 00195200
*                                                                     * 00195300
*                              The high order nibble contains the     * 00195400
*                              storage key, the low order nibble is   * 00195500
*                              ignored.  For example, set 'kkkk' in   * 00195600
*                              the binary bit string 'kkkkxxxx'B to   * 00195700
*                              correspond to the desired storage key. * 00195800
*                                                                     * 00195900
*                              If BUFSTGKEY is not specified, then    * 00196000
*                              all references to the BUFFER buffer    * 00196100
*                              storage are performed using the        * 00196200
*                              caller's PSW key.                      * 00196300
*                                                                     * 00196400
*                              DEFAULT: CALLERS_KEY                   * 00196500
*                                                                     * 00196600
*                                                                     * 00196700
*                                                                     * 00196800
*                      [PAGEABLE=NO]                                  * 00196900
*                          Indicates that the BUFFER area resides in  * 00197000
*                          non-pageable virtual storage.              * 00197100
*                                                                     * 00197200
*                          This includes implicitly non-pageable      * 00197300
*                          storage areas.  If the virtual storage may * 00197400
*                          potentially become pageable, then the      * 00197500
*                          invoker is responsible for ensuring the    * 00197600
*                          virtual storage remains non-pageable for   * 00197700
*                          the duration of the request.               * 00197800
*                                                                     * 00197900
*                          If MODE=ASYNCTOKEN is specified or         * 00198000
*                          MODE=SYNCTOKEN is specified and the        * 00198100
*                          request does not complete synchronously,   * 00198200
*                          then the storage must remain non-pageable  * 00198300
*                          until completion of the corresponding      * 00198400
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00198500
*                          specified or MODE=SYNCEXIT is specified    * 00198600
*                          and the request does not complete          * 00198700
*                          synchronously, then the storage must       * 00198800
*                          remain non-pageable until the completion   * 00198900
*                          exit is driven for the request.  If        * 00199000
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00199100
*                          is specified and the request does not      * 00199200
*                          complete synchronously, then the storage   * 00199300
*                          must remain non-pageable until the         * 00199400
*                          specified ECB is posted for the request.   * 00199500
*                                                                     * 00199600
*                                                                     * 00199700
*                                                                     * 00199800
*                                                                     * 00199900
*                                                                     * 00200000
*                                                                     * 00200100
*                                                                     * 00200200
*              End of a set of mutually exclusive required keys.      * 00200300
*                                                                     * 00200400
*                                                                     * 00200500
*          REQUEST=MONITOR_EVENTQ                                     * 00200600
*              Monitor an event queue.  Requests that list            * 00200700
*              notification vector monitoring of an event queue for   * 00200800
*              the requesting user be started or stopped.             * 00200900
*                                                                     * 00201000
*              This request type is valid only when the structure is  * 00201100
*              allocated in a CFLEVEL=3 or higher coupling facility.  * 00201200
*              The user must have a local vector associated with his  * 00201300
*              connection to the structure, and the structure must    * 00201400
*              support keyed list entries.  If the structure is       * 00201500
*              allocated in a CFLEVEL=9 or higher coupling facility   * 00201600
*              and is allocated with secondary keys, there are two    * 00201700
*              event queues that can be monitored.  The KEYTYPE       * 00201800
*              keyword designates which event queue is the subject of * 00201900
*              the MONITOR_EVENTQ request.                            * 00202000
*                                                                     * 00202100
*              While event queue monitoring is in effect for an event * 00202200
*              queue, the IXLVECTR service may be used to determine   * 00202300
*              whether the event queue contains any event monitor     * 00202400
*              controls (EMCs).  These EMCs represent not-empty       * 00202500
*              sublists in which the user has registered sublist      * 00202600
*              monitoring interest.  Refer to the IXLVECTR service    * 00202700
*              for more details.  The user should use event queue     * 00202800
*              monitoring in conjunction with sublist monitoring      * 00202900
*              (MONITOR_SUBLIST and/or MONITOR_SUBLISTS) to process   * 00203000
*              state transitions for monitored sublists.  Queued EMCs * 00203100
*              may be dequeued from an event queue, and their         * 00203200
*              contents read, using the DEQ_EVENTQ request.           * 00203300
*                                                                     * 00203400
*              If a list notification vector index is in use for      * 00203500
*              monitoring, a request to stop monitoring should be     * 00203600
*              performed before using the same vector index to start  * 00203700
*              another monitor.  If event queue monitoring is in      * 00203800
*              effect, a request to start monitoring the same event   * 00203900
*              queue with a different VECTORINDEX or DRIVEEXIT        * 00204000
*              specification will cause the old specifications to be  * 00204100
*              immediately replaced by the new specifications.  It is * 00204200
*              not necessary to stop event queue monitoring before    * 00204300
*              requesting to start monitoring the same event queue    * 00204400
*              using the new specifications.  The state of the        * 00204500
*              replaced vector index is not defined.  However,  since * 00204600
*              the replaced vector index is no longer being used to   * 00204700
*              monitor an event queue,  it may be reassigned for      * 00204800
*              other uses (e.g. to monitor a list).                   * 00204900
*                                                                     * 00205000
*              When event queue monitoring is stopped, the state of   * 00205100
*              the vector index which was previously being used to    * 00205200
*              monitor the event queue is not defined.  However,      * 00205300
*              since the vector index is no longer being used to      * 00205400
*              monitor the event queue,  it may be reassigned for     * 00205500
*              other uses (e.g. to monitor a list).                   * 00205600
*                                                                     * 00205700
*                                                                     * 00205800
*              [KEYTYPE=ENTRY|SECONDARY]                            * 00205900
*                  is an optional keyword input that specifies        * 00206000
*                  whether to monitor the event queue for state       * 00206100
*                  transitions of sublists identified by list entry   * 00206200
*                  key or to monitor the event queue for state        * 00206300
*                  transitions of sublists identified by secondary    * 00206400
*                  key.                                               * 00206500
*                  DEFAULT: ENTRY                                     * 00206600
*                                                                     * 00206700
*                                                                     * 00206800
*                  KEYTYPE=ENTRY                                      * 00206900
*                      specifies that the event queue for state       * 00207000
*                      transitions of sublists identified by list     * 00207100
*                      entry key is to be monitored.                  * 00207200
*                                                                     * 00207300
*                      KEYTYPE=ENTRY is valid only when the structure * 00207400
*                      is allocated with keys in a CFLEVEL=3 or       * 00207500
*                      higher coupling facility.                      * 00207600
*                                                                     * 00207700
*                  KEYTYPE=SECONDARY                                  * 00207800
*                      specifies that the event queue for state       * 00207900
*                      transitions of sublists identified by          * 00208000
*                      secondary key is to be monitored.              * 00208100
*                                                                     * 00208200
*                      KEYTYPE=SECONDARY is valid only when the       * 00208300
*                      structure is allocated with secondary keys in  * 00208400
*                      a CFLEVEL=9 or higher coupling facility.       * 00208500
*                                                                     * 00208600
*                                                                     * 00208700
*                                                                     * 00208800
*                                                                     * 00208900
*                                                                     * 00209000
*                                                                     * 00209100
*              ACTION=START|STOP                                    * 00209200
*                  is a required keyword input that specifies whether * 00209300
*                  event queue monitoring is to be started or         * 00209400
*                  stopped.                                           * 00209500
*                                                                     * 00209600
*                                                                     * 00209700
*                                                                     * 00209800
*                  ACTION=START                                       * 00209900
*                      Requests that event queue monitoring for the   * 00210000
*                      connection specified by CONTOKEN be started    * 00210100
*                      for the specified event queue.                 * 00210200
*                                                                     * 00210300
*                                                                     * 00210400
*                      VECTORINDEX=xvectorindex                       * 00210500
*                          is the name (RS-type), or address in       * 00210600
*                          register (2)-(12), of a required fullword  * 00210700
*                          input field which contains the vector      * 00210800
*                          index to be associated with the monitored  * 00210900
*                          event queue.  If the request completes     * 00211000
*                          successfully, this local vector index in   * 00211100
*                          the vector for the connection specified by * 00211200
*                          CONTOKEN will subsequently reflect the     * 00211300
*                          empty/not-empty state of the user's event  * 00211400
*                          queue.                                     * 00211500
*                                                                     * 00211600
*                                                                     * 00211700
*                                                                     * 00211800
*                                                                     * 00211900
*                      [DRIVEEXIT=YES|NO]                           * 00212000
*                          is an optional keyword input that          * 00212100
*                          specifies whether XES should drive the     * 00212200
*                          connection's list transition exit when the * 00212300
*                          state of the specified user's event queue  * 00212400
*                          changes from empty to not-empty.           * 00212500
*                                                                     * 00212600
*                          DEFAULT: YES                               * 00212700
*                                                                     * 00212800
*                                                                     * 00212900
*                          DRIVEEXIT=YES                              * 00213000
*                              When the state of the user's event     * 00213100
*                              queue changes from empty to not-empty  * 00213200
*                              XES will drive the connection's list   * 00213300
*                              transition exit.                       * 00213400
*                                                                     * 00213500
*                                                                     * 00213600
*                          DRIVEEXIT=NO                               * 00213700
*                              When the state of the user's event     * 00213800
*                              queue changes from empty to not-empty  * 00213900
*                              XES will not drive the connection's    * 00214000
*                              list transition exit.                  * 00214100
*                                                                     * 00214200
*                                                                     * 00214300
*                                                                     * 00214400
*                                                                     * 00214500
*                                                                     * 00214600
*                  ACTION=STOP                                        * 00214700
*                      Requests that monitoring of the event queue    * 00214800
*                      for the connection specified by CONTOKEN be    * 00214900
*                      stopped.                                       * 00215000
*                                                                     * 00215100
*                                                                     * 00215200
*                                                                     * 00215300
*                                                                     * 00215400
*                                                                     * 00215500
*          REQUEST=MONITOR_LIST                                       * 00215600
*              Monitor a list.  Requests that list monitoring of the  * 00215700
*              list specified by LISTNUM be started or stopped.       * 00215800
*                                                                     * 00215900
*              While list monitoring is in effect for a list, the     * 00216000
*              IXLVECTR service may be used to determine whether the  * 00216100
*              list is considered empty or not-empty according to the * 00216200
*              thresholds established with a WRITE_LCONTROLS request. * 00216300
*                                                                     * 00216400
*              The IXLVECTR service may also be used to alter the     * 00216500
*              size of the list notification vector, and thus change  * 00216600
*              the number of lists, key-ranges, or event queues which * 00216700
*              can be monitored concurrently.  Refer to the IXLVECTR  * 00216800
*              service for more details.                              * 00216900
*                                                                     * 00217000
*              If a list notification vector index is in use for      * 00217100
*              monitoring, a request to stop monitoring should be     * 00217200
*              performed before using the same vector index to start  * 00217300
*              another monitor.  If a vector index is in use for      * 00217400
*              monitoring a list, a request to start list monitoring  * 00217500
*              for the same list with a different vector index will   * 00217600
*              cause the vector index in use for the list to be       * 00217700
*              replaced by the new vector index.  In this case it is  * 00217800
*              not necessary to stop monitoring using the old index   * 00217900
*              before requesting to start monitoring using the new    * 00218000
*              index.                                                 * 00218100
*                                                                     * 00218200
*              REQUEST=WRITE_LCONTROLS may be used to set the         * 00218300
*              empty/not-empty threshold counts that are used to      * 00218400
*              define the empty/not-empty state of a list for list    * 00218500
*              monitoring.                                            * 00218600
*                                                                     * 00218700
*              REQUEST=MONITOR_LIST with ACTION=START is mutually     * 00218800
*              exclusive with MODE=ASYNCNORESPONSE.                   * 00218900
*                                                                     * 00219000
*                                                                     * 00219100
*              LISTNUM=xlistnum                                       * 00219200
*                  is the name (RS-type), or address in register      * 00219300
*                  (2)-(12), of a required fullword input specifying  * 00219400
*                  the number of the list to be monitored.            * 00219500
*                                                                     * 00219600
*                                                                     * 00219700
*                                                                     * 00219800
*                                                                     * 00219900
*              ACTION=START|STOP                                    * 00220000
*                  is a required keyword input that specifies whether * 00220100
*                  list monitoring is to be started or stopped.       * 00220200
*                                                                     * 00220300
*                                                                     * 00220400
*                                                                     * 00220500
*                  ACTION=START                                       * 00220600
*                      Requests that monitoring for the connection    * 00220700
*                      specified by CONTOKEN be started.              * 00220800
*                                                                     * 00220900
*                                                                     * 00221000
*                      VECTORINDEX=xvectorindex                       * 00221100
*                          is the name (RS-type), or address in       * 00221200
*                          register (2)-(12), of a required fullword  * 00221300
*                          input field which contains the list        * 00221400
*                          notification vector index that is to       * 00221500
*                          reflect the empty/not-empty state of the   * 00221600
*                          monitored list.  If the request completes  * 00221700
*                          successfully, this local notification      * 00221800
*                          vector index in the vector for the         * 00221900
*                          connection specified by CONTOKEN will      * 00222000
*                          subsequently reflect the empty/not-empty   * 00222100
*                          state of the monitored list.               * 00222200
*                                                                     * 00222300
*                                                                     * 00222400
*                                                                     * 00222500
*                                                                     * 00222600
*                      [DRIVEEXIT=YES|NO]                           * 00222700
*                          is an optional keyword input that          * 00222800
*                          specifies whether XES should drive the     * 00222900
*                          connection's list transition exit when the * 00223000
*                          state of a list changes from empty to      * 00223100
*                          not-empty.                                 * 00223200
*                                                                     * 00223300
*                          DEFAULT: YES                               * 00223400
*                                                                     * 00223500
*                                                                     * 00223600
*                          DRIVEEXIT=YES                              * 00223700
*                              When the state of a list changes from  * 00223800
*                              empty to not-empty XES will drive the  * 00223900
*                              connection's list transition exit.     * 00224000
*                                                                     * 00224100
*                                                                     * 00224200
*                          DRIVEEXIT=NO                               * 00224300
*                              When the state of a list changes from  * 00224400
*                              empty to not-empty XES will not drive  * 00224500
*                              the connection's list transition exit. * 00224600
*                                                                     * 00224700
*                                                                     * 00224800
*                                                                     * 00224900
*                                                                     * 00225000
*                                                                     * 00225100
*                  ACTION=STOP                                        * 00225200
*                      Requests that list monitoring monitoring for   * 00225300
*                      the connection specified by CONTOKEN be        * 00225400
*                      stopped for the list specified by LISTNUM.     * 00225500
*                                                                     * 00225600
*                                                                     * 00225700
*                                                                     * 00225800
*                                                                     * 00225900
*                                                                     * 00226000
*          REQUEST=MONITOR_KEYRANGE                                   * 00226100
*              Requests that key-range monitoring of the list         * 00226200
*              specified by LISTNUM be started or stopped.            * 00226300
*              REQUEST=MONITOR_KEYRANGE is valid only for keyed list  * 00226400
*              structures allocated in CFLEVEL=9 or higher coupling   * 00226500
*              facility.                                              * 00226600
*                                                                     * 00226700
*              While key-range monitoring is in effect for a list,    * 00226800
*              the IXLVECTR service may be used to determine whether  * 00226900
*              the key-range is considered empty or not-empty         * 00227000
*              according to the thresholds established with a         * 00227100
*              WRITE_LCONTROLS request that specifies                 * 00227200
*              KEYRANGESTATE=DEFINE.                                  * 00227300
*                                                                     * 00227400
*              The IXLVECTR service may also be used to alter the     * 00227500
*              size of the list notification vector, and thus change  * 00227600
*              the number of lists, key-ranges, or event queues which * 00227700
*              can be monitored concurrently.  Refer to the IXLVECTR  * 00227800
*              service for more details.                              * 00227900
*                                                                     * 00228000
*              If a list notification vector index is in use for      * 00228100
*              monitoring, a request to stop monitoring should be     * 00228200
*              performed before using the same vector index to start  * 00228300
*              another monitor.  If a vector index is in use for      * 00228400
*              monitoring a key-range, a request to start key-range   * 00228500
*              monitoring of the same list with a different vector    * 00228600
*              index will cause the vector index in use for the       * 00228700
*              key-range to be replaced by the new vector index.  In  * 00228800
*              this case it is not necessary to stop monitoring using * 00228900
*              the old index before requesting to start monitoring    * 00229000
*              using the new index.                                   * 00229100
*                                                                     * 00229200
*              Only one key-range may be monitored per list.          * 00229300
*              REQUEST=WRITE_LCONTROLS may be used to set the         * 00229400
*              starting and ending key-range values, and the          * 00229500
*              empty/not-empty threshold counts that define the       * 00229600
*              empty/not-empty state of a key-range for key-range     * 00229700
*              monitoring.                                            * 00229800
*                                                                     * 00229900
*              REQUEST=MONITOR_KEYRANGE with ACTION=START is mutually * 00230000
*              exclusive with MODE=ASYNCNORESPONSE.                   * 00230100
*                                                                     * 00230200
*              A request to start monitoring a key-range for a list   * 00230300
*              can timeout if definition of the key-range is not      * 00230400
*              complete (see WRITE_LCONTROLS request with             * 00230500
*              KEYRANGESTATE=DEFINE).  The caller is expected to      * 00230600
*              reissue the request until it completes without timing  * 00230700
*              out.                                                   * 00230800
*                                                                     * 00230900
*                                                                     * 00231000
*              LISTNUM=xlistnum                                       * 00231100
*                  is the name (RS-type), or address in register      * 00231200
*                  (2)-(12), of a required fullword input specifying  * 00231300
*                  the number of the list whose key-range is to be    * 00231400
*                  monitored.                                         * 00231500
*                                                                     * 00231600
*                                                                     * 00231700
*                                                                     * 00231800
*                                                                     * 00231900
*              ACTION=START|STOP                                    * 00232000
*                  is a required keyword input that specifies whether * 00232100
*                  key-range monitoring of the list is to be started  * 00232200
*                  or stopped.                                        * 00232300
*                                                                     * 00232400
*                                                                     * 00232500
*                                                                     * 00232600
*                  ACTION=START                                       * 00232700
*                      Requests that key-range monitoring for the     * 00232800
*                      connection specified by CONTOKEN be started    * 00232900
*                      for the list specified by LISTNUM.             * 00233000
*                                                                     * 00233100
*                                                                     * 00233200
*                      VECTORINDEX=xvectorindex                       * 00233300
*                          is the name (RS-type), or address in       * 00233400
*                          register (2)-(12), of a required fullword  * 00233500
*                          input field which contains the list        * 00233600
*                          notification vector index that is to       * 00233700
*                          reflect the empty/not-empty state of the   * 00233800
*                          monitored key-range.  If the request       * 00233900
*                          completes successfully, this local         * 00234000
*                          notification vector index in the vector    * 00234100
*                          for the connection specified by CONTOKEN   * 00234200
*                          will subsequently reflect the              * 00234300
*                          empty/not-empty state of the monitored     * 00234400
*                          key-range.                                 * 00234500
*                                                                     * 00234600
*                                                                     * 00234700
*                                                                     * 00234800
*                                                                     * 00234900
*                      [DRIVEEXIT=YES|NO]                           * 00235000
*                          is an optional keyword input that          * 00235100
*                          specifies whether XES should drive the     * 00235200
*                          connection's list transition exit when the * 00235300
*                          state of the key-range changes from empty  * 00235400
*                          to not-empty.                              * 00235500
*                                                                     * 00235600
*                          DEFAULT: YES                               * 00235700
*                                                                     * 00235800
*                                                                     * 00235900
*                          DRIVEEXIT=YES                              * 00236000
*                              When the state of a key-range changes  * 00236100
*                              from empty to not-empty XES will drive * 00236200
*                              the connection's list transition exit. * 00236300
*                                                                     * 00236400
*                                                                     * 00236500
*                          DRIVEEXIT=NO                               * 00236600
*                              When the state of the key-range        * 00236700
*                              changes from empty to not-empty XES    * 00236800
*                              will not drive the connection's list   * 00236900
*                              transition exit.                       * 00237000
*                                                                     * 00237100
*                                                                     * 00237200
*                                                                     * 00237300
*                                                                     * 00237400
*                                                                     * 00237500
*                  ACTION=STOP                                        * 00237600
*                      Requests that key-range monitoring for the     * 00237700
*                      connection specified by CONTOKEN be stopped    * 00237800
*                      for the list specified by LISTNUM.             * 00237900
*                                                                     * 00238000
*                                                                     * 00238100
*                                                                     * 00238200
*                                                                     * 00238300
*                                                                     * 00238400
*          REQUEST=MONITOR_SUBLIST                                    * 00238500
*              Monitor a sublist, designated by a list number and     * 00238600
*              either an entry key or secondary key, within the list  * 00238700
*              structure.  Requests that monitoring of the designated * 00238800
*              sublist be started or stopped for the requesting user. * 00238900
*                                                                     * 00239000
*              A request to monitor a keyed sublist is valid only     * 00239100
*              when the structure is allocated in a CFLEVEL=3 or      * 00239200
*              higher coupling facility.  The user must have a local  * 00239300
*              vector associated with his connection to the           * 00239400
*              structure, and the structure must support keyed list   * 00239500
*              entries (i.e., REFOPTION=KEY must be specified on the  * 00239600
*              IXLCONN request when the structure is allocated).      * 00239700
*                                                                     * 00239800
*              A request to monitor a secondary keyed sublist is      * 00239900
*              valid only when the structure is allocated in a        * 00240000
*              CFLEVEL=9 or higher coupling facility.  The user must  * 00240100
*              have a local vector associated with his connection to  * 00240200
*              the structure, and the structure must support          * 00240300
*              secondary keys (i.e., KEYTYPE=SECONDARY must be        * 00240400
*              specified on the IXLCONN request when the structure is * 00240500
*              allocated).                                            * 00240600
*                                                                     * 00240700
*              While sublist monitoring is in effect for a sublist,   * 00240800
*              the coupling facility will queue or withdraw event     * 00240900
*              monitor controls (EMCs) to or from the registered      * 00241000
*              user's event queue to reflect the empty or not-empty   * 00241100
*              state of the sublist.  The user should use sublist     * 00241200
*              monitoring in conjunction with event queue monitoring  * 00241300
*              (MONITOR_EVENTQ) to process state transitions for      * 00241400
*              monitored sublists.  Queued EMCs may be dequeued from  * 00241500
*              an event queue, and their contents read, using the     * 00241600
*              DEQ_EVENTQ request.                                    * 00241700
*                                                                     * 00241800
*              If multiple sublists are to be monitored, it may be    * 00241900
*              more efficient to start sublist monitoring for those   * 00242000
*              multiple sublists using MONITOR_SUBLISTS.  However,    * 00242100
*              sublist monitoring may only be stopped for one sublist * 00242200
*              at a time via MONITOR_SUBLIST.                         * 00242300
*                                                                     * 00242400
*              If sublist monitoring for a sublist is in effect, a    * 00242500
*              request to start monitoring the sublist with a         * 00242600
*              different User Notification Controls (UNC)             * 00242700
*              specification will cause the old specification to be   * 00242800
*              immediately replaced by the new specification.  It is  * 00242900
*              not necessary to stop sublist monitoring before        * 00243000
*              requesting to start monitoring using the new           * 00243100
*              specification.  The replacement of the UNC occurs      * 00243200
*              regardless of whether the EMC representing the sublist * 00243300
*              monitor is currently queued to an event queue for the  * 00243400
*              user.                                                  * 00243500
*                                                                     * 00243600
*              When sublist monitoring is stopped, the EMC            * 00243700
*              representing the sublist monitor is made available for * 00243800
*              reuse.  If the EMC is currently queued to an event     * 00243900
*              queue for the user, it will be dequeued.               * 00244000
*                                                                     * 00244100
*                                                                     * 00244200
*              LISTNUM=xlistnum                                       * 00244300
*                  is the name (RS-type), or address in register      * 00244400
*                  (2)-(12), of a required fullword input partially   * 00244500
*                  designating a sublist to be processed.             * 00244600
*                                                                     * 00244700
*                  LISTNUM may be used in conjunction with ENTRYKEY   * 00244800
*                  or SECONDARYKEY to designate a sublist for which   * 00244900
*                  the user wishes to start or stop sublist           * 00245000
*                  monitoring.                                        * 00245100
*                                                                     * 00245200
*                                                                     * 00245300
*                                                                     * 00245400
*                                                                     * 00245500
*              The following is a set of mutually exclusive keys.     * 00245600
*              This set is required; only one key must be specified.  * 00245700
*                                                                     * 00245800
*                                                                     * 00245900
*              ENTRYKEY=xentrykey                                     * 00246000
*                  belongs to a set of mutually exclusive keys. It is * 00246100
*                  the name (RS-type), or address in register         * 00246200
*                  (2)-(12), of a 16 character input that specifies   * 00246300
*                  an unsigned 128-bit entry key to be used in        * 00246400
*                  conjunction with LISTNUM to designate a sublist    * 00246500
*                  whose monitoring is to be started or stopped.      * 00246600
*                                                                     * 00246700
*                  ENTRYKEY may only be specified for structures that * 00246800
*                  support keyed entries.                             * 00246900
*                                                                     * 00247000
*              SECONDARYKEY=xsecondarykey                             * 00247100
*                  belongs to a set of mutually exclusive keys. It is * 00247200
*                  the name (RS-type), or address in register         * 00247300
*                  (2)-(12), of a 32 character input that specifies   * 00247400
*                  an unsigned 256-bit secondary key to be used in    * 00247500
*                  conjunction with LISTNUM to designate a sublist    * 00247600
*                  whose monitoring is to be started or stopped.      * 00247700
*                                                                     * 00247800
*                  SECONDARYKEY may only be specified for structures  * 00247900
*                  that are allocated in a CFLEVEL=9 or higher        * 00248000
*                  coupling facility.                                 * 00248100
*                                                                     * 00248200
*                                                                     * 00248300
*                                                                     * 00248400
*              End of a set of mutually exclusive required keys.      * 00248500
*                                                                     * 00248600
*                                                                     * 00248700
*                                                                     * 00248800
*              ACTION=START|STOP                                    * 00248900
*                  is a required keyword input that specifies whether * 00249000
*                  sublist monitoring is to be started or stopped.    * 00249100
*                                                                     * 00249200
*                                                                     * 00249300
*                                                                     * 00249400
*                  ACTION=START                                       * 00249500
*                      Requests that sublist monitoring for the       * 00249600
*                      connection specified by CONTOKEN for the       * 00249700
*                      designated sublist be started.                 * 00249800
*                                                                     * 00249900
*                                                                     * 00250000
*                      [NOTIFICATION=FIRST|EVERY]                   * 00250100
*                          is an optional keyword input that          * 00250200
*                          specifies the condition for which the      * 00250300
*                          coupling facility is to queue an EMC to    * 00250400
*                          the registered user's event queue.         * 00250500
*                          DEFAULT: FIRST                             * 00250600
*                                                                     * 00250700
*                                                                     * 00250800
*                          NOTIFICATION=FIRST                         * 00250900
*                              indicates that an EMC is to be queued  * 00251000
*                              to the registered user's event queue   * 00251100
*                              when the monitored sublist transitions * 00251200
*                              from empty to not-empty.               * 00251300
*                                                                     * 00251400
*                          NOTIFICATION=EVERY                         * 00251500
*                              indicates that an EMC is to be queued  * 00251600
*                              to the registered user's event queue   * 00251700
*                              whenever a list entry is queued to the * 00251800
*                              monitored sublist.                     * 00251900
*                                                                     * 00252000
*                              NOTIFICATION=EVERY is valid only when  * 00252100
*                              the structure is allocated in a        * 00252200
*                              CFLEVEL=9 or higher coupling facility. * 00252300
*                                                                     * 00252400
*                                                                     * 00252500
*                                                                     * 00252600
*                                                                     * 00252700
*                                                                     * 00252800
*                                                                     * 00252900
*                      UNC=xunc                                       * 00253000
*                          is the name (RS-type), or address in       * 00253100
*                          register (2)-(12), of a required 16        * 00253200
*                          character input field which contains the   * 00253300
*                          user notification controls (UNC) which     * 00253400
*                          represent the user's monitoring interest   * 00253500
*                          in the designated sublist.  The user       * 00253600
*                          notification control information resides   * 00253700
*                          in the event monitor controls (EMC), which * 00253800
*                          is queued to an event queue when the       * 00253900
*                          monitored sublist becomes not-empty, and   * 00254000
*                          is returned along with other information   * 00254100
*                          from the EMC on a DEQ_EVENTQ  request.     * 00254200
*                                                                     * 00254300
*                                                                     * 00254400
*                                                                     * 00254500
*                  ACTION=STOP                                        * 00254600
*                      Requests that monitoring of the designated     * 00254700
*                      sublist for the connection specified by        * 00254800
*                      CONTOKEN be stopped.                           * 00254900
*                                                                     * 00255000
*                                                                     * 00255100
*                                                                     * 00255200
*                                                                     * 00255300
*                                                                     * 00255400
*          REQUEST=MONITOR_SUBLISTS                                   * 00255500
*              Monitor a set of sublists (designated by list number   * 00255600
*              and either entry key or secondary key) in the list     * 00255700
*              structure.  Requests that monitoring of the designated * 00255800
*              sublists be started for the requesting user.           * 00255900
*              MONITOR_SUBLISTS cannot be used to stop sublist        * 00256000
*              monitoring.                                            * 00256100
*                                                                     * 00256200
*              A request to monitor a sublist identified by a list    * 00256300
*              entry key is valid only when the structure is          * 00256400
*              allocated in a CFLEVEL=3 or higher coupling facility.  * 00256500
*              A request to monitor a sublist identified by a         * 00256600
*              secondary key is valid only when the structure is      * 00256700
*              allocated in a CFLEVEL=9 or higher coupling facility   * 00256800
*              and supports secondary keys.  In both cases, the user  * 00256900
*              must have a local vector associated with his           * 00257000
*              connection to the structure, and the structure must    * 00257100
*              support keyed list entries.                            * 00257200
*                                                                     * 00257300
*              While sublist monitoring is in effect for a sublist,   * 00257400
*              the coupling facility will queue or withdraw event     * 00257500
*              monitor controls (EMCs) to or from an event queue for  * 00257600
*              the registered user to reflect the empty or not-empty  * 00257700
*              state of the sublist.  The user should use sublist     * 00257800
*              monitoring in conjunction with event queue monitoring  * 00257900
*              (MONITOR_EVENTQ) to process state transitions for      * 00258000
*              monitored sublists.  Queued EMCs may be dequeued from  * 00258100
*              an event queue, and their contents read, using the     * 00258200
*              DEQ_EVENTQ request.                                    * 00258300
*                                                                     * 00258400
*              If sublist monitoring for a sublist is in effect, a    * 00258500
*              request to start monitoring the sublist with a         * 00258600
*              different UNC specification will cause the old         * 00258700
*              specification to be immediately replaced by the new    * 00258800
*              specification.  It is not necessary to stop sublist    * 00258900
*              monitoring before requesting to start monitoring using * 00259000
*              the new specification.  The replacement of the UNC     * 00259100
*              occurs regardless of whether the EMC representing the  * 00259200
*              sublist monitor is currently queued to the user's      * 00259300
*              event queue.                                           * 00259400
*                                                                     * 00259500
*              The BUFFER or BUFLIST contains an input array of       * 00259600
*              entries, each mapped by the IXLYMSRI mapping macro,    * 00259700
*              and each of which contains the information needed to   * 00259800
*              request monitoring for one sublist.  The entries are   * 00259900
*              indexed with the first entry (index 1) starting at     * 00260000
*              offset zero in the BUFFER or BUFLIST area.             * 00260100
*                                                                     * 00260200
*              The STARTINDEX and ENDINDEX keywords contain the       * 00260300
*              starting and ending index numbers of the input         * 00260400
*              IXLYMSRI entries which are requested to be processed.  * 00260500
*              The MONITOR_SUBLISTS request can complete prematurely  * 00260600
*              for various reasons:                                   * 00260700
*                                                                     * 00260800
*                                                                     * 00260900
*              o   Model-dependent timeout - the index number of the  * 00261000
*                  first unprocessed IXLYMSRI entry is returned in    * 00261100
*                  the ANSAREA.                                       * 00261200
*                                                                     * 00261300
*              o   Insufficient event monitor control space to        * 00261400
*                  register as a sublist monitor - the index number   * 00261500
*                  of the first IXLYMSRI entry which could not be     * 00261600
*                  processed is returned in the ANSAREA.              * 00261700
*                                                                     * 00261800
*              o   Invalid list number specified in an IXLYMSRI entry * 00261900
*                  - the index number of the IXLYMSRI entry           * 00262000
*                  containing the invalid list number is returned in  * 00262100
*                  the ANSAREA.                                       * 00262200
*                                                                     * 00262300
*                                                                     * 00262400
*                                                                     * 00262500
*              In all of these premature completion cases, all prior  * 00262600
*              IXLYMSRI  entries were processed successfully.  The    * 00262700
*              user is responsible for performing any necessary       * 00262800
*              processing for the IXLYMSRI entries that were          * 00262900
*              successfully processed by the current request,  taking * 00263000
*              any necessary recovery actions to correct an error     * 00263100
*              condition reported on the current request,  and        * 00263200
*              re-issuing the MONITOR_SUBLISTS request with an        * 00263300
*              updated STARTINDEX value to redrive processing of      * 00263400
*              IXLYMSRI entries that were not processed on the        * 00263500
*              current request.                                       * 00263600
*                                                                     * 00263700
*              REQUEST=MONITOR_SUBLISTS is mutually exclusive with    * 00263800
*              MODE=ASYNCNORESPONSE.                                  * 00263900
*                                                                     * 00264000
*                                                                     * 00264100
*              STARTINDEX=xstartindex                                 * 00264200
*                  is the name (RS-type), or address in register      * 00264300
*                  (2)-(12), of a required halfword input field which * 00264400
*                  contains the 1-origin index number of the first    * 00264500
*                  IXLYMSRI entry which is requested to be processed. * 00264600
*                  Valid range is from 1 to the ENDINDEX value,       * 00264700
*                  inclusive.                                         * 00264800
*                                                                     * 00264900
*                                                                     * 00265000
*                                                                     * 00265100
*                                                                     * 00265200
*              ENDINDEX=xendindex                                     * 00265300
*                  is the name (RS-type), or address in register      * 00265400
*                  (2)-(12), of a required halfword input field which * 00265500
*                  contains the 1-origin index number of the last     * 00265600
*                  IXLYMSRI entry which is requested to be processed. * 00265700
*                  Valid range is from the STARTINDEX value to 1024,  * 00265800
*                  inclusive.  The specified index must not imply a   * 00265900
*                  larger buffer size than the user has actually      * 00266000
*                  provided for the BUFFER or BUFLIST.                * 00266100
*                                                                     * 00266200
*                                                                     * 00266300
*                                                                     * 00266400
*                                                                     * 00266500
*              MOSVECTOR=xmosvector                                   * 00266600
*                  is a required output.  It is the name (RS-type),   * 00266700
*                  or address in register (2)-(12), of a 128-byte     * 00266800
*                  virtual storage area which will contain a 1-origin * 00266900
*                  bit string in which each bit represents the        * 00267000
*                  monitored object state (empty or not-empty) of a   * 00267100
*                  particular sublist at the time that the            * 00267200
*                  MONITOR_SUBLISTS request was processed.            * 00267300
*                                                                     * 00267400
*                  The MOSVECTOR bits correspond one-to-one with the  * 00267500
*                  IXLYMSRI entries that were passed as input in the  * 00267600
*                  BUFFER or BUFLIST.  Only the bits corresponding to * 00267700
*                  the IXLYMSRI entries that were actually processed  * 00267800
*                  on the current request (i.e. between STARTINDEX    * 00267900
*                  and ENDINDEX for a request which completed         * 00268000
*                  successfully, or between STARTINDEX and the        * 00268100
*                  returned index of the first unprocessed entry      * 00268200
*                  minus one for premature completion cases) will     * 00268300
*                  contain valid monitored object state information   * 00268400
*                  for the sublists designated by the corresponding   * 00268500
*                  IXLYMSRI entries.  Bits in the MOSVECTOR which lie * 00268600
*                  outside the valid range are not meaningful.        * 00268700
*                                                                     * 00268800
*                  When a bit in the valid range is on, the sublist   * 00268900
*                  designated by the corresponding IXLYMSRI entry was * 00269000
*                  not-empty at the time that the request was         * 00269100
*                  processed.  When a bit in the valid range is off,  * 00269200
*                  the sublist designated by the corresponding        * 00269300
*                  IXLYMSRI entry was empty at the time that the      * 00269400
*                  request was processed.                             * 00269500
*                                                                     * 00269600
*                                                                     * 00269700
*                                                                     * 00269800
*                                                                     * 00269900
*              The following is a set of mutually exclusive keys.     * 00270000
*              This set is required; only one key must be specified.  * 00270100
*                                                                     * 00270200
*                                                                     * 00270300
*              BUFLIST=xbuflist                                       * 00270400
*                  belongs to a set of mutually exclusive keys. It is * 00270500
*                  an input.  It is the name (RS-type), or address in * 00270600
*                  register (2)-(12), of a 128-byte virtual storage   * 00270700
*                  area containing a list of addresses of buffers.    * 00270800
*                  These buffers contain input data for the request.  * 00270900
*                  The set of buffers is used as if it were a single  * 00271000
*                  contiguous area for purposes of input.             * 00271100
*                                                                     * 00271200
*                  The format of the list is a set of 8-byte          * 00271300
*                  elements.  The first four bytes of each element is * 00271400
*                  reserved space.  The second four bytes of each     * 00271500
*                  element contains the address of a buffer.          * 00271600
*                                                                     * 00271700
*                  There may be 1 to 16 buffers passed in the list.   * 00271800
*                  Each buffer in the list must be the same size and  * 00271900
*                  must reside in the same address space or data      * 00272000
*                  space.  Data is fetched from the buffers in the    * 00272100
*                  order specified.                                   * 00272200
*                                                                     * 00272300
*                  For MONITOR_SUBLISTS requests, the length of a     * 00272400
*                  buffer must be a multiple of 256 bytes between 256 * 00272500
*                  and 4096.  Each buffer must start on a 256-byte    * 00272600
*                  boundary and must not cross a 4096-byte boundary.  * 00272700
*                                                                     * 00272800
*                  For a MONITOR_SUBLISTS request, the BUFLIST is     * 00272900
*                  used to input an array of entries, each mapped by  * 00273000
*                  IXLYMSRI, and each of which contains the           * 00273100
*                  information necessary to register as a sublist     * 00273200
*                  monitor for one sublist.                           * 00273300
*                                                                     * 00273400
*                  BUFLIST is mutually exclusive with BUFFER.         * 00273500
*                                                                     * 00273600
*                                                                     * 00273700
*                  [BUFADDRTYPE=VIRTUAL|REAL                        * 00273800
*                      is an optional keyword input that specifies    * 00273900
*                      whether the buffer addresses specified in the  * 00274000
*                      BUFLIST list are virtual storage addresses or  * 00274100
*                      real storage addresses.                        * 00274200
*                                                                     * 00274300
*                      DEFAULT: VIRTUAL                               * 00274400
*                                                                     * 00274500
*                                                                     * 00274600
*                      [BUFADDRTYPE=VIRTUAL                           * 00274700
*                          Indicates that the buffer addresses        * 00274800
*                          specified in the BUFLIST list are virtual  * 00274900
*                          storage addresses.                         * 00275000
*                                                                     * 00275100
*                                                                     * 00275200
*                                                                     * 00275300
*                          [PAGEABLE=YES|NO]                        * 00275400
*                              is an optional keyword input that      * 00275500
*                              specifies whether or not the buffers   * 00275600
*                              specified by BUFLIST resides in        * 00275700
*                              pageable storage.                      * 00275800
*                                                                     * 00275900
*                              DEFAULT: YES                           * 00276000
*                                                                     * 00276100
*                                                                     * 00276200
*                              [PAGEABLE=YES                          * 00276300
*                                  Indicates that the BUFLIST buffers * 00276400
*                                  reside in pageable virtual         * 00276500
*                                  storage.                           * 00276600
*                                                                     * 00276700
*                                  This includes disabled reference   * 00276800
*                                  storage, and may include storage   * 00276900
*                                  that has the potential to become   * 00277000
*                                  pageable (such as address space    * 00277100
*                                  storage for which a PGSER FIX has  * 00277200
*                                  been successfully processed).  It  * 00277300
*                                  does not include implicitly        * 00277400
*                                  non-pageable storage (such as is   * 00277500
*                                  obtained from non-pageable         * 00277600
*                                  subpools).                         * 00277700
*                                                                     * 00277800
*                                                                     * 00277900
*                                                                     * 00278000
*                                  [BUFSTGKEY=xbufstgkey|CALLERS_KEY * 00278100
*                                      ]]                            * 00278200
*                                      is the name (RS-type), or      * 00278300
*                                      address in register (2)-(12),  * 00278400
*                                      of an optional 8 bit input     * 00278500
*                                      containing the storage key to  * 00278600
*                                      be used when referencing the   * 00278700
*                                      buffers in the list specified  * 00278800
*                                      by BUFLIST.                    * 00278900
*                                                                     * 00279000
*                                      The high order nibble contains * 00279100
*                                      the storage key, the low order * 00279200
*                                      nibble is ignored.  For        * 00279300
*                                      example, set 'kkkk' in the     * 00279400
*                                      binary bit string 'kkkkxxxx'B  * 00279500
*                                      to correspond to the desired   * 00279600
*                                      storage key.                   * 00279700
*                                                                     * 00279800
*                                      If BUFSTGKEY is not specified, * 00279900
*                                      then all references to the     * 00280000
*                                      BUFLIST buffers are performed  * 00280100
*                                      using the caller's PSW key.    * 00280200
*                                                                     * 00280300
*                                      DEFAULT: CALLERS_KEY           * 00280400
*                                                                     * 00280500
*                                                                     * 00280600
*                                                                     * 00280700
*                              [PAGEABLE=NO]                          * 00280800
*                                  Indicates that the BUFLIST buffers * 00280900
*                                  reside in non-pageable virtual     * 00281000
*                                  storage.                           * 00281100
*                                                                     * 00281200
*                                  This includes implicitly           * 00281300
*                                  non-pageable storage areas.  If    * 00281400
*                                  the virtual storage may            * 00281500
*                                  potentially become pageable, then  * 00281600
*                                  the invoker is responsible for     * 00281700
*                                  ensuring the virtual storage       * 00281800
*                                  remains non-pageable for the       * 00281900
*                                  duration of the request.           * 00282000
*                                                                     * 00282100
*                                  If MODE=ASYNCTOKEN is specified or * 00282200
*                                  MODE=SYNCTOKEN is specified and    * 00282300
*                                  the request does not complete      * 00282400
*                                  synchronously, then the storage    * 00282500
*                                  must remain non-pageable until     * 00282600
*                                  completion of the corresponding    * 00282700
*                                  IXLFCOMP request.  If              * 00282800
*                                  MODE=ASYNCEXIT is specified or     * 00282900
*                                  MODE=SYNCEXIT is specified and the * 00283000
*                                  request does not complete          * 00283100
*                                  synchronously, then the storage    * 00283200
*                                  must remain non-pageable until the * 00283300
*                                  completion exit is driven for the  * 00283400
*                                  request.  If MODE=ASYNCECB is      * 00283500
*                                  specified or MODE=SYNCECB is       * 00283600
*                                  specified and the request does not * 00283700
*                                  complete synchronously, then the   * 00283800
*                                  storage must remain non-pageable   * 00283900
*                                  until the specified ECB is posted  * 00284000
*                                  for the request.                   * 00284100
*                                                                     * 00284200
*                                                                     * 00284300
*                                                                     * 00284400
*                                                                     * 00284500
*                                                                     * 00284600
*                                                                     * 00284700
*                          [BUFALET=xbufalet|NO_BUFALET]]           * 00284800
*                              is the name (RS-type), or address in   * 00284900
*                              register (2)-(12), of an optional      * 00285000
*                              fullword input specifying the ALET     * 00285100
*                              value to be used in referencing all of * 00285200
*                              the buffers specified for BUFLIST      * 00285300
*                                                                     * 00285400
*                              DEFAULT: NO_BUFALET                    * 00285500
*                                                                     * 00285600
*                                                                     * 00285700
*                                                                     * 00285800
*                      [BUFADDRTYPE=REAL                              * 00285900
*                          Indicates that the buffer addresses        * 00286000
*                          specified in the BUFLIST list are real     * 00286100
*                          storage addresses.                         * 00286200
*                                                                     * 00286300
*                                                                     * 00286400
*                          [BUFADDRSIZE=31|64]]                     * 00286500
*                              is an optional keyword input that      * 00286600
*                              specifies whether a 31 or a 64 bit     * 00286700
*                              address is specified by a BUFLIST      * 00286800
*                              entry.                                 * 00286900
*                                                                     * 00287000
*                              DEFAULT: 31                            * 00287100
*                                                                     * 00287200
*                                                                     * 00287300
*                              [BUFADDRSIZE=31]                       * 00287400
*                                  Indicates that the BUFLIST address * 00287500
*                                  is 31 bits in size.                * 00287600
*                                                                     * 00287700
*                              [BUFADDRSIZE=64]]                      * 00287800
*                                  Indicates that the BUFLIST address * 00287900
*                                  is 64 bits in size.                * 00288000
*                                                                     * 00288100
*                                                                     * 00288200
*                                                                     * 00288300
*                                                                     * 00288400
*                                                                     * 00288500
*                                                                     * 00288600
*                                                                     * 00288700
*                                                                     * 00288800
*                                                                     * 00288900
*                                                                     * 00289000
*                  BUFNUM=xbufnum                                     * 00289100
*                      is the name (RS-type), or address in register  * 00289200
*                      (2)-(12), of a required byte input specifying  * 00289300
*                      the number of buffers defined in the BUFLIST   * 00289400
*                      list.                                          * 00289500
*                                                                     * 00289600
*                      BUFNUM values must be in the range of 1 to 16. * 00289700
*                                                                     * 00289800
*                                                                     * 00289900
*                                                                     * 00290000
*                                                                     * 00290100
*                  BUFINCRNUM=xbufincrnum                             * 00290200
*                      is the name (RS-type), or address in register  * 00290300
*                      (2)-(12), of a required byte input specifying  * 00290400
*                      the number of 256-byte increments or segments  * 00290500
*                      in each buffer in the BUFLIST list.            * 00290600
*                                                                     * 00290700
*                      BUFINCRNUM values must be a power of 2 in the  * 00290800
*                      range of 1 to 16 (1, 2, 4, 8, 16),             * 00290900
*                      corresponding to BUFLIST buffer sizes of 256   * 00291000
*                      to 4096 bytes.                                 * 00291100
*                                                                     * 00291200
*                                                                     * 00291300
*                                                                     * 00291400
*              BUFFER=xbuffer                                         * 00291500
*                  belongs to a set of mutually exclusive keys. It is * 00291600
*                  an input.  It is the name (RS-type), or address in * 00291700
*                  register (2)-(12), of a virtual storage area       * 00291800
*                  containing input data for the request.  The        * 00291900
*                  BUFSIZE keyword specifies the size of the buffer.  * 00292000
*                                                                     * 00292100
*                  For MONITOR_SUBLISTS requests, if the length of    * 00292200
*                  the buffer is less than or equal to 4096 bytes     * 00292300
*                  then the length of the buffer must be a power of 2 * 00292400
*                  between 256 and 4096 bytes (256, 512, 1024, 2048,  * 00292500
*                  4096), the buffer must start on a 256-byte         * 00292600
*                  boundary, and the buffer must not cross a          * 00292700
*                  4096-byte boundary.  If the length of the buffer   * 00292800
*                  is greater than 4096 bytes then the length of the  * 00292900
*                  buffer must be a multiple of 4096 bytes between    * 00293000
*                  4096 and 65536 and the buffer must start on a      * 00293100
*                  4096-byte boundary.                                * 00293200
*                                                                     * 00293300
*                  For a MONITOR_SUBLISTS request, the BUFFER is used * 00293400
*                  to input an array of entries, each mapped by       * 00293500
*                  IXLYMSRI, and each of which contains the           * 00293600
*                  information necessary to register as a sublist     * 00293700
*                  monitor for one sublist.                           * 00293800
*                                                                     * 00293900
*                  BUFFER is mutually exclusive with BUFLIST.         * 00294000
*                                                                     * 00294100
*                                                                     * 00294200
*                  [PAGEABLE=YES|NO]                                * 00294300
*                      is an optional keyword input that specifies    * 00294400
*                      whether or not the storage area specified by   * 00294500
*                      BUFFER resides in pageable storage.            * 00294600
*                                                                     * 00294700
*                      DEFAULT: YES                                   * 00294800
*                                                                     * 00294900
*                                                                     * 00295000
*                      [PAGEABLE=YES                                  * 00295100
*                          Indicates that the BUFFER area resides in  * 00295200
*                          pageable virtual storage.                  * 00295300
*                                                                     * 00295400
*                          This includes disabled reference storage,  * 00295500
*                          and may include storage that has the       * 00295600
*                          potential to become pageable (such as      * 00295700
*                          address space storage for which a PGSER    * 00295800
*                          FIX has been successfully processed).  It  * 00295900
*                          does not include implicitly non-pageable   * 00296000
*                          storage (such as is obtained from          * 00296100
*                          non-pageable subpools).                    * 00296200
*                                                                     * 00296300
*                                                                     * 00296400
*                                                                     * 00296500
*                          [BUFSTGKEY=xbufstgkey|CALLERS_KEY]]      * 00296600
*                              is the name (RS-type), or address in   * 00296700
*                              register (2)-(12), of an optional 8    * 00296800
*                              bit input containing the storage key   * 00296900
*                              to be used when referencing the        * 00297000
*                              storage area specified by BUFFER.      * 00297100
*                                                                     * 00297200
*                              The high order nibble contains the     * 00297300
*                              storage key, the low order nibble is   * 00297400
*                              ignored.  For example, set 'kkkk' in   * 00297500
*                              the binary bit string 'kkkkxxxx'B to   * 00297600
*                              correspond to the desired storage key. * 00297700
*                                                                     * 00297800
*                              If BUFSTGKEY is not specified, then    * 00297900
*                              all references to the BUFFER buffer    * 00298000
*                              storage are performed using the        * 00298100
*                              caller's PSW key.                      * 00298200
*                                                                     * 00298300
*                              DEFAULT: CALLERS_KEY                   * 00298400
*                                                                     * 00298500
*                                                                     * 00298600
*                                                                     * 00298700
*                      [PAGEABLE=NO]                                  * 00298800
*                          Indicates that the BUFFER area resides in  * 00298900
*                          non-pageable virtual storage.              * 00299000
*                                                                     * 00299100
*                          This includes implicitly non-pageable      * 00299200
*                          storage areas.  If the virtual storage may * 00299300
*                          potentially become pageable, then the      * 00299400
*                          invoker is responsible for ensuring the    * 00299500
*                          virtual storage remains non-pageable for   * 00299600
*                          the duration of the request.               * 00299700
*                                                                     * 00299800
*                          If MODE=ASYNCTOKEN is specified or         * 00299900
*                          MODE=SYNCTOKEN is specified and the        * 00300000
*                          request does not complete synchronously,   * 00300100
*                          then the storage must remain non-pageable  * 00300200
*                          until completion of the corresponding      * 00300300
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00300400
*                          specified or MODE=SYNCEXIT is specified    * 00300500
*                          and the request does not complete          * 00300600
*                          synchronously, then the storage must       * 00300700
*                          remain non-pageable until the completion   * 00300800
*                          exit is driven for the request.  If        * 00300900
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00301000
*                          is specified and the request does not      * 00301100
*                          complete synchronously, then the storage   * 00301200
*                          must remain non-pageable until the         * 00301300
*                          specified ECB is posted for the request.   * 00301400
*                                                                     * 00301500
*                                                                     * 00301600
*                                                                     * 00301700
*                                                                     * 00301800
*                                                                     * 00301900
*                                                                     * 00302000
*                  BUFSIZE=xbufsize                                   * 00302100
*                      is the name (RS-type), or address in register  * 00302200
*                      (2)-(12), of a required fullword input         * 00302300
*                      specifying the length of the virtual storage   * 00302400
*                      area specified for BUFFER in bytes.            * 00302500
*                                                                     * 00302600
*                      Refer to BUFFER for the buffer size            * 00302700
*                      requirements for this request type.            * 00302800
*                                                                     * 00302900
*                                                                     * 00303000
*                                                                     * 00303100
*                                                                     * 00303200
*                                                                     * 00303300
*              End of a set of mutually exclusive required keys.      * 00303400
*                                                                     * 00303500
*                                                                     * 00303600
*                                                                     * 00303700
*                                                                     * 00303800
*                                                                     * 00303900
*                                                                     * 00304000
*                                                                     * 00304100
*      [MODE=SYNCSUSPEND|SYNCECB|SYNCEXIT|SYNCTOKEN|ASYNCECB|ASYNCEX * 00304200
*          IT|ASYNCTOKEN|ASYNCNORESPONSE]                            * 00304300
*          is an optional keyword input that specifies whether the    * 00304400
*          request is to be performed synchronously or                * 00304500
*          asynchronously.                                            * 00304600
*                                                                     * 00304700
*          DEFAULT: SYNCSUSPEND                                       * 00304800
*                                                                     * 00304900
*                                                                     * 00305000
*          [MODE=SYNCSUSPEND                                          * 00305100
*              Indicates that the request will be performed           * 00305200
*              synchronously.  Control is not returned to the caller  * 00305300
*              until request processing is complete and the final     * 00305400
*              disposition determined.                                * 00305500
*                                                                     * 00305600
*              If necessary the caller will be suspended until the    * 00305700
*              request completes.  The caller must be executing in an * 00305800
*              enabled state to use this option.                      * 00305900
*                                                                     * 00306000
*                                                                     * 00306100
*                                                                     * 00306200
*              ANSAREA=xansarea                                       * 00306300
*                  is a required input.  It is the name (RS-type), or * 00306400
*                  address in register (2)-(12), of a virtual storage * 00306500
*                  area, called the answer area, in which command     * 00306600
*                  response information will be placed.  The format   * 00306700
*                  of the answer area is described by the IXLYLAA     * 00306800
*                  mapping macro.                                     * 00306900
*                                                                     * 00307000
*                  Not all fields in the answer area are applicable   * 00307100
*                  to all request types.  Request type descriptions   * 00307200
*                  indicate what answer area fields are applicable    * 00307300
*                  for successful request completion cases.  Return   * 00307400
*                  and reason code descriptions indicate what answer  * 00307500
*                  area fields are applicable for non-successfully    * 00307600
*                  completing requests.                               * 00307700
*                                                                     * 00307800
*                                                                     * 00307900
*                  ANSLEN=xanslen]                                    * 00308000
*                      is the name (RS-type), or address in register  * 00308100
*                      (2)-(12), of a required halfword input that    * 00308200
*                      contains the length in bytes of the virtual    * 00308300
*                      storage area provided for ANSAREA.             * 00308400
*                                                                     * 00308500
*                      The length of the answer area is described by  * 00308600
*                      the IXLYLAA mapping macro.                     * 00308700
*                                                                     * 00308800
*                                                                     * 00308900
*                                                                     * 00309000
*                                                                     * 00309100
*                                                                     * 00309200
*          [MODE=SYNCECB                                              * 00309300
*              Indicates that the request will be attempted           * 00309400
*              synchronously.  If the request cannot be completed     * 00309500
*              synchronously control is returned to the caller prior  * 00309600
*              to completion of the request, and the ECB specified by * 00309700
*              REQECB is posted when the request has completed.       * 00309800
*                                                                     * 00309900
*              If the request does not complete synchronously latent  * 00310000
*              XES binds to the storage locations specified by        * 00310100
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00310200
*              the REQECB ECB is posted.                              * 00310300
*                                                                     * 00310400
*                                                                     * 00310500
*              REQECB=xreqecb                                         * 00310600
*                  is the name (RS-type), or address in register      * 00310700
*                  (2)-(12), of a required 4 byte input that contains * 00310800
*                  the address of an ECB to be posted when the        * 00310900
*                  request has completed.                             * 00311000
*                                                                     * 00311100
*                  The ECB should be initialized by the requestor     * 00311200
*                  prior to use with this service.  The ECB must      * 00311300
*                  reside either in common storage or in the home     * 00311400
*                  address space that existed at the time the         * 00311500
*                  connection service, IXLCONN, was issued for the    * 00311600
*                  structure.  Any task which waits on the ECB must   * 00311700
*                  have the same home address space as existed when   * 00311800
*                  IXLCONN was issued.                                * 00311900
*                                                                     * 00312000
*                                                                     * 00312100
*                                                                     * 00312200
*                                                                     * 00312300
*              ANSAREA=xansarea                                       * 00312400
*                  is a required input.  It is the name (RS-type), or * 00312500
*                  address in register (2)-(12), of a virtual storage * 00312600
*                  area, called the answer area, in which command     * 00312700
*                  response information will be placed.  The format   * 00312800
*                  of the answer area is described by the IXLYLAA     * 00312900
*                  mapping macro.                                     * 00313000
*                                                                     * 00313100
*                  Not all fields in the answer area are applicable   * 00313200
*                  to all request types.  Request type descriptions   * 00313300
*                  indicate what answer area fields are applicable    * 00313400
*                  for successful request completion cases.  Return   * 00313500
*                  and reason code descriptions indicate what answer  * 00313600
*                  area fields are applicable for non-successfully    * 00313700
*                  completing requests.                               * 00313800
*                                                                     * 00313900
*                                                                     * 00314000
*                  ANSLEN=xanslen]                                    * 00314100
*                      is the name (RS-type), or address in register  * 00314200
*                      (2)-(12), of a required halfword input that    * 00314300
*                      contains the length in bytes of the virtual    * 00314400
*                      storage area provided for ANSAREA.             * 00314500
*                                                                     * 00314600
*                      The length of the answer area is described by  * 00314700
*                      the IXLYLAA mapping macro.                     * 00314800
*                                                                     * 00314900
*                                                                     * 00315000
*                                                                     * 00315100
*                                                                     * 00315200
*                                                                     * 00315300
*          [MODE=SYNCEXIT                                             * 00315400
*              Indicates that the request will be attempted           * 00315500
*              synchronously.  If the request cannot be completed     * 00315600
*              synchronously control is returned to the caller prior  * 00315700
*              to completion of the request.  When the request        * 00315800
*              completes the connection's Complete Exit will be       * 00315900
*              called.                                                * 00316000
*                                                                     * 00316100
*              If the request does not complete synchronously latent  * 00316200
*              XES binds to the storage locations specified by        * 00316300
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00316400
*              the connection's Complete Exit is called.              * 00316500
*                                                                     * 00316600
*                                                                     * 00316700
*              [REQDATA=xreqdata|NO_REQDATA]                        * 00316800
*                  is the name (RS-type), or address in register      * 00316900
*                  (2)-(12), of an optional 8 character input         * 00317000
*                  variable that contains connector user-defined data * 00317100
*                  for the request to be passed to the Complete Exit  * 00317200
*                  when driven.  The contents of REQDATA has no       * 00317300
*                  meaning to the system.                             * 00317400
*                                                                     * 00317500
*                  DEFAULT: NO_REQDATA                                * 00317600
*                                                                     * 00317700
*                                                                     * 00317800
*                                                                     * 00317900
*                                                                     * 00318000
*              ANSAREA=xansarea                                       * 00318100
*                  is a required input.  It is the name (RS-type), or * 00318200
*                  address in register (2)-(12), of a virtual storage * 00318300
*                  area, called the answer area, in which command     * 00318400
*                  response information will be placed.  The format   * 00318500
*                  of the answer area is described by the IXLYLAA     * 00318600
*                  mapping macro.                                     * 00318700
*                                                                     * 00318800
*                  Not all fields in the answer area are applicable   * 00318900
*                  to all request types.  Request type descriptions   * 00319000
*                  indicate what answer area fields are applicable    * 00319100
*                  for successful request completion cases.  Return   * 00319200
*                  and reason code descriptions indicate what answer  * 00319300
*                  area fields are applicable for non-successfully    * 00319400
*                  completing requests.                               * 00319500
*                                                                     * 00319600
*                                                                     * 00319700
*                  ANSLEN=xanslen]                                    * 00319800
*                      is the name (RS-type), or address in register  * 00319900
*                      (2)-(12), of a required halfword input that    * 00320000
*                      contains the length in bytes of the virtual    * 00320100
*                      storage area provided for ANSAREA.             * 00320200
*                                                                     * 00320300
*                      The length of the answer area is described by  * 00320400
*                      the IXLYLAA mapping macro.                     * 00320500
*                                                                     * 00320600
*                                                                     * 00320700
*                                                                     * 00320800
*                                                                     * 00320900
*                                                                     * 00321000
*          [MODE=SYNCTOKEN                                            * 00321100
*              Indicates that the request will be attempted           * 00321200
*              synchronously.  If the request cannot be completed     * 00321300
*              synchronously control is returned to the caller prior  * 00321400
*              to completion of the request and a token that uniquely * 00321500
*              identifies the request is returned.                    * 00321600
*                                                                     * 00321700
*              If the request does not complete synchronously latent  * 00321800
*              XES binds to the storage locations specified by        * 00321900
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00322000
*              a subsequent corresponding IXLFCOMP request indicates  * 00322100
*              completion of the original request.                    * 00322200
*                                                                     * 00322300
*                                                                     * 00322400
*              REQTOKEN=xreqtoken                                     * 00322500
*                  is a required output.  It is the name (RS-type),   * 00322600
*                  or address in register (2)-(12), of a 16 character * 00322700
*                  field into which is stored a token that uniquely   * 00322800
*                  identifies this request.                           * 00322900
*                                                                     * 00323000
*                  This token must be specified on a subsequent       * 00323100
*                  invocation of IXLFCOMP to force completion of the  * 00323200
*                  request and determine its final disposition.       * 00323300
*                                                                     * 00323400
*                                                                     * 00323500
*                                                                     * 00323600
*                                                                     * 00323700
*              ANSAREA=xansarea                                       * 00323800
*                  is a required input.  It is the name (RS-type), or * 00323900
*                  address in register (2)-(12), of a virtual storage * 00324000
*                  area, called the answer area, in which command     * 00324100
*                  response information will be placed.  The format   * 00324200
*                  of the answer area is described by the IXLYLAA     * 00324300
*                  mapping macro.                                     * 00324400
*                                                                     * 00324500
*                  Not all fields in the answer area are applicable   * 00324600
*                  to all request types.  Request type descriptions   * 00324700
*                  indicate what answer area fields are applicable    * 00324800
*                  for successful request completion cases.  Return   * 00324900
*                  and reason code descriptions indicate what answer  * 00325000
*                  area fields are applicable for non-successfully    * 00325100
*                  completing requests.                               * 00325200
*                                                                     * 00325300
*                                                                     * 00325400
*                  ANSLEN=xanslen]                                    * 00325500
*                      is the name (RS-type), or address in register  * 00325600
*                      (2)-(12), of a required halfword input that    * 00325700
*                      contains the length in bytes of the virtual    * 00325800
*                      storage area provided for ANSAREA.             * 00325900
*                                                                     * 00326000
*                      The length of the answer area is described by  * 00326100
*                      the IXLYLAA mapping macro.                     * 00326200
*                                                                     * 00326300
*                                                                     * 00326400
*                                                                     * 00326500
*                                                                     * 00326600
*                                                                     * 00326700
*          [MODE=ASYNCECB                                             * 00326800
*              Indicates that the request is to be initiated and      * 00326900
*              control is to be returned to the caller prior to       * 00327000
*              completion of the request.  When the request completes * 00327100
*              the ECB specified by REQECB will be posted.            * 00327200
*                                                                     * 00327300
*              Latent XES binds to the storage locations specified by * 00327400
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00327500
*              the REQECB ECB is posted.                              * 00327600
*                                                                     * 00327700
*                                                                     * 00327800
*              REQECB=xreqecb                                         * 00327900
*                  is the name (RS-type), or address in register      * 00328000
*                  (2)-(12), of a required 4 byte input that contains * 00328100
*                  the address of an ECB to be posted when the        * 00328200
*                  request has completed.                             * 00328300
*                                                                     * 00328400
*                  The ECB should be initialized by the requestor     * 00328500
*                  prior to use with this service.  The ECB must      * 00328600
*                  reside either in common storage or in the home     * 00328700
*                  address space that existed at the time the         * 00328800
*                  connection service, IXLCONN, was issued for the    * 00328900
*                  structure.  Any task which waits on the ECB must   * 00329000
*                  have the same home address space as existed when   * 00329100
*                  IXLCONN was issued.                                * 00329200
*                                                                     * 00329300
*                                                                     * 00329400
*                                                                     * 00329500
*                                                                     * 00329600
*              ANSAREA=xansarea                                       * 00329700
*                  is a required input.  It is the name (RS-type), or * 00329800
*                  address in register (2)-(12), of a virtual storage * 00329900
*                  area, called the answer area, in which command     * 00330000
*                  response information will be placed.  The format   * 00330100
*                  of the answer area is described by the IXLYLAA     * 00330200
*                  mapping macro.                                     * 00330300
*                                                                     * 00330400
*                  Not all fields in the answer area are applicable   * 00330500
*                  to all request types.  Request type descriptions   * 00330600
*                  indicate what answer area fields are applicable    * 00330700
*                  for successful request completion cases.  Return   * 00330800
*                  and reason code descriptions indicate what answer  * 00330900
*                  area fields are applicable for non-successfully    * 00331000
*                  completing requests.                               * 00331100
*                                                                     * 00331200
*                                                                     * 00331300
*                  ANSLEN=xanslen]                                    * 00331400
*                      is the name (RS-type), or address in register  * 00331500
*                      (2)-(12), of a required halfword input that    * 00331600
*                      contains the length in bytes of the virtual    * 00331700
*                      storage area provided for ANSAREA.             * 00331800
*                                                                     * 00331900
*                      The length of the answer area is described by  * 00332000
*                      the IXLYLAA mapping macro.                     * 00332100
*                                                                     * 00332200
*                                                                     * 00332300
*                                                                     * 00332400
*                                                                     * 00332500
*                                                                     * 00332600
*          [MODE=ASYNCEXIT                                            * 00332700
*              Indicates that the request is to be initiated and      * 00332800
*              control is to be returned to the caller prior to       * 00332900
*              completion of the request.  When the request completes * 00333000
*              the connection's Complete Exit will be called.         * 00333100
*                                                                     * 00333200
*              Latent XES binds to the storage locations specified by * 00333300
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00333400
*              the connection's Complete Exit is called.              * 00333500
*                                                                     * 00333600
*                                                                     * 00333700
*              [REQDATA=xreqdata|NO_REQDATA]                        * 00333800
*                  is the name (RS-type), or address in register      * 00333900
*                  (2)-(12), of an optional 8 character input         * 00334000
*                  variable that contains connector user-defined data * 00334100
*                  for the request to be passed to the Complete Exit  * 00334200
*                  when driven.  The contents of REQDATA has no       * 00334300
*                  meaning to the system.                             * 00334400
*                                                                     * 00334500
*                  DEFAULT: NO_REQDATA                                * 00334600
*                                                                     * 00334700
*                                                                     * 00334800
*                                                                     * 00334900
*                                                                     * 00335000
*              ANSAREA=xansarea                                       * 00335100
*                  is a required input.  It is the name (RS-type), or * 00335200
*                  address in register (2)-(12), of a virtual storage * 00335300
*                  area, called the answer area, in which command     * 00335400
*                  response information will be placed.  The format   * 00335500
*                  of the answer area is described by the IXLYLAA     * 00335600
*                  mapping macro.                                     * 00335700
*                                                                     * 00335800
*                  Not all fields in the answer area are applicable   * 00335900
*                  to all request types.  Request type descriptions   * 00336000
*                  indicate what answer area fields are applicable    * 00336100
*                  for successful request completion cases.  Return   * 00336200
*                  and reason code descriptions indicate what answer  * 00336300
*                  area fields are applicable for non-successfully    * 00336400
*                  completing requests.                               * 00336500
*                                                                     * 00336600
*                                                                     * 00336700
*                  ANSLEN=xanslen]                                    * 00336800
*                      is the name (RS-type), or address in register  * 00336900
*                      (2)-(12), of a required halfword input that    * 00337000
*                      contains the length in bytes of the virtual    * 00337100
*                      storage area provided for ANSAREA.             * 00337200
*                                                                     * 00337300
*                      The length of the answer area is described by  * 00337400
*                      the IXLYLAA mapping macro.                     * 00337500
*                                                                     * 00337600
*                                                                     * 00337700
*                                                                     * 00337800
*                                                                     * 00337900
*                                                                     * 00338000
*          [MODE=ASYNCTOKEN                                           * 00338100
*              Indicates that the request is to be initiated, a token * 00338200
*              generated that uniquely identifies the request on this * 00338300
*              system, and control returned to the caller prior to    * 00338400
*              completion of the requested operation.                 * 00338500
*                                                                     * 00338600
*              Latent XES binds to the storage locations specified by * 00338700
*              BUFFER, BUFLIST, MOSVECTOR, and ANSAREA persist until  * 00338800
*              a subsequent corresponding IXLFCOMP request indicates  * 00338900
*              completion of the original request.                    * 00339000
*                                                                     * 00339100
*                                                                     * 00339200
*              REQTOKEN=xreqtoken                                     * 00339300
*                  is a required output.  It is the name (RS-type),   * 00339400
*                  or address in register (2)-(12), of a 16 character * 00339500
*                  field into which is stored a token that uniquely   * 00339600
*                  identifies this request.                           * 00339700
*                                                                     * 00339800
*                  This token must be specified on a subsequent       * 00339900
*                  invocation of IXLFCOMP to force completion of the  * 00340000
*                  request and determine its final disposition.       * 00340100
*                                                                     * 00340200
*                                                                     * 00340300
*                                                                     * 00340400
*                                                                     * 00340500
*              ANSAREA=xansarea                                       * 00340600
*                  is a required input.  It is the name (RS-type), or * 00340700
*                  address in register (2)-(12), of a virtual storage * 00340800
*                  area, called the answer area, in which command     * 00340900
*                  response information will be placed.  The format   * 00341000
*                  of the answer area is described by the IXLYLAA     * 00341100
*                  mapping macro.                                     * 00341200
*                                                                     * 00341300
*                  Not all fields in the answer area are applicable   * 00341400
*                  to all request types.  Request type descriptions   * 00341500
*                  indicate what answer area fields are applicable    * 00341600
*                  for successful request completion cases.  Return   * 00341700
*                  and reason code descriptions indicate what answer  * 00341800
*                  area fields are applicable for non-successfully    * 00341900
*                  completing requests.                               * 00342000
*                                                                     * 00342100
*                                                                     * 00342200
*                  ANSLEN=xanslen]                                    * 00342300
*                      is the name (RS-type), or address in register  * 00342400
*                      (2)-(12), of a required halfword input that    * 00342500
*                      contains the length in bytes of the virtual    * 00342600
*                      storage area provided for ANSAREA.             * 00342700
*                                                                     * 00342800
*                      The length of the answer area is described by  * 00342900
*                      the IXLYLAA mapping macro.                     * 00343000
*                                                                     * 00343100
*                                                                     * 00343200
*                                                                     * 00343300
*                                                                     * 00343400
*                                                                     * 00343500
*          [MODE=ASYNCNORESPONSE]                                     * 00343600
*              Indicates that the request is to be initiated and      * 00343700
*              control returned to the caller prior to completion of  * 00343800
*              the requested operation.  No asynchronous request      * 00343900
*              token is returned, hence no external mechanism exists  * 00344000
*              to force completion of the request.                    * 00344100
*                                                                     * 00344200
*              MODE=ASYNCNORESPONSE is mutually exclusive with LOCK,  * 00344300
*              READ_LCONTROLS, DEQ_EVENTQ, and MONITOR_SUBLISTS       * 00344400
*              requests.  It is also mutually exclusive with          * 00344500
*              REQUEST=MONITOR_LIST and REQUEST=MONITOR_KEYRANGE when * 00344600
*              ACTION=START is specified.  Any other request may      * 00344700
*              specify MODE=ASYNCNORESPONSE.                          * 00344800
*                                                                     * 00344900
*                                                                     * 00345000
*                                                                     * 00345100
*                                                                     * 00345200
*                                                                     * 00345300
*                                                                     * 00345400
*      [RETCODE=xretcode]                                             * 00345500
*          is the name (RS-type) of an optional fullword output       * 00345600
*          variable, or register (2)-(12), into which the return code * 00345700
*          is to be copied from GPR 15.                               * 00345800
*                                                                     * 00345900
*                                                                     * 00346000
*                                                                     * 00346100
*                                                                     * 00346200
*      [RSNCODE=xrsncode]                                             * 00346300
*          is the name (RS-type) of an optional fullword output       * 00346400
*          variable, or register (2)-(12), into which the reason code * 00346500
*          is to be copied from GPR 0.                                * 00346600
*                                                                     * 00346700
*                                                                     * 00346800
*                                                                     * 00346900
*                                                                     * 00347000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00347100
*          is an optional byte input decimal value in the "0-4" range * 00347200
*          that specifies the macro version.  PLISTVER is the only    * 00347300
*          key allowed on the list form of MF and determines which    * 00347400
*          parameter list is generated.  The macro keys associated    * 00347500
*          with each supported version of the macro are listed in     * 00347600
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00347700
*          instead of a number, and the parameter list will be of the * 00347800
*          largest size currently supported. This size may grow from  * 00347900
*          release to release (thus possibly affecting the amount of  * 00348000
*          storage needed by your program).  If your program can      * 00348100
*          tolerate this, IBM recommends that you always specify MAX  * 00348200
*          when creating the list form parameter list as that will    * 00348300
*          ensure that the list form parameter list is always long    * 00348400
*          enough to hold whatever parameters might be specified on   * 00348500
*          the execute form.                                          * 00348600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00348700
*          default is the lowest version which allows all of the      * 00348800
*          parameters specified on the invocation to be processed.    * 00348900
*                                                                     * 00349000
*                                                                     * 00349100
*                                                                     * 00349200
*                                                                     * 00349300
*      [MF=S|L|E]                                                   * 00349400
*          is an optional keyword input which specifies the macro     * 00349500
*          form.                                                      * 00349600
*          DEFAULT: S                                                 * 00349700
*                                                                     * 00349800
*                                                                     * 00349900
*          [MF=S]                                                     * 00350000
*              specifies the standard form of the macro.  The "S"     * 00350100
*              form generates code to put the parameters into an      * 00350200
*              in-line parameter list and invoke the desired service. * 00350300
*              Full checking for required macro keys is done along    * 00350400
*              with supplying defaults for omitted optional           * 00350500
*              parameters.                                            * 00350600
*                                                                     * 00350700
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00350800
*              specifies the list form of the macro.  The "L" form    * 00350900
*              defines an area to be used for the parameter list.     * 00351000
*              Only the PLISTVER key may be specified on the          * 00351100
*              invocation.  All other macro parameters are flagged as * 00351200
*              errors.  If PLISTVER is not specified, the original    * 00351300
*              parameter list definition is used.                     * 00351400
*                                                                     * 00351500
*            ,xmfctrl                                                 * 00351600
*              is a required input.  It is the name of a storage area * 00351700
*              for the parameter list.                                * 00351800
*                                                                     * 00351900
*            ,xmfattr|0D                                            * 00352000
*              is an optional 60 character input string that varies   * 00352100
*              from 1 to 60 characters. Use it to force boundary      * 00352200
*              alignment of the parameter list. Use only 0F or 0D.    * 00352300
*              DEFAULT: 0D which forces the parameter list to a       * 00352400
*              doubleword boundary.                                   * 00352500
*                                                                     * 00352600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00352700
*              specifies the execute form of the macro.  The "E" form * 00352800
*              generates code to put the parameters into the          * 00352900
*              parameter list specified by xmfctrl and provides full  * 00353000
*              syntax checking with default setting.                  * 00353100
*                                                                     * 00353200
*            ,xmfctrl                                                 * 00353300
*              is a required input.  It is the name (RS-type), or     * 00353400
*              address in register (1)-(12), of a storage area for    * 00353500
*              the parameter list.                                    * 00353600
*                                                                     * 00353700
*            ,COMPLETE                                              * 00353800
*              is an optional keyword input which specifies the       * 00353900
*              degree of macro parameter syntax checking.             * 00354000
*              DEFAULT: COMPLETE                                      * 00354100
*                                                                     * 00354200
*                                                                     * 00354300
*              COMPLETE                                               * 00354400
*                  Checking for required macro keys is done and       * 00354500
*                  defaults are supplied for omitted optional         * 00354600
*                  parameters.                                        * 00354700
*                                                                     * 00354800
*                                                                     * 00354900
*                                                                     * 00355000
*                                                                     * 00355100
*                                                                     * 00355200
*                                                                     * 00355300
*                                                                     * 00355400
*01* RETURN CODES:                                                    * 00355500
*                                                                     * 00355600
*                                                                     * 00355700
*       0         IxlRetCodeOk:  Successful completion.               * 00355800
*                                                                     * 00355900
*                 If a MODE value of ASYNCECB, ASYNCEXIT, ASYNCTOKEN, * 00356000
*                 or ASYNCNORESPONSE was specified then the request   * 00356100
*                 has been successfully initiated.                    * 00356200
*                                                                     * 00356300
*                 If LOCKOPER=TEST was specified then this return     * 00356400
*                 code indicates the lock is held by the connection   * 00356500
*                 specified by CONTOKEN.                              * 00356600
*                                                                     * 00356700
*                                                                     * 00356800
*       4         IxlRetCodeWarning:  Warning.  The request           * 00356900
*                 completed, but with exceptional circumstances.      * 00357000
*                                                                     * 00357100
*                 HEX REASON  MEANING                                 * 00357200
*                 CODE                                                * 00357300
*                                                                     * 00357400
*                                                                     * 00357500
*                 xxxx0402    IxlRsnCodeAsynch:  The request could    * 00357600
*                             not be completed synchronously.  It     * 00357700
*                             will be completed asynchronously.       * 00357800
*                                                                     * 00357900
*                             If MODE=SYNCECB was specified the ECB   * 00358000
*                             specifed for REQECB will be posted when * 00358100
*                             the request has finished.               * 00358200
*                                                                     * 00358300
*                             If MODE=SYNCEXIT was specified the      * 00358400
*                             connection's completion exit will be    * 00358500
*                             given control when the request has      * 00358600
*                             finished.                               * 00358700
*                                                                     * 00358800
*                             If MODE=SYNCTOKEN was specified the     * 00358900
*                             answer area contains an asynchronous    * 00359000
*                             request token which may be used on the  * 00359100
*                             IXLFCOMP macro to determine when the    * 00359200
*                             request has finished.                   * 00359300
*                                                                     * 00359400
*                 xxxx0409    IxlRsnCodeTimeout:  A MONITOR_SUBLISTS, * 00359500
*                             or DEQ_EVENTQ request, or a LOCK        * 00359600
*                             request specifying LOCKOPER=READNEXT,   * 00359700
*                             or a WRITE_LCONTROLS request specifying * 00359800
*                             KEYRANGESTATE=DEFINE, or a              * 00359900
*                             MONITOR_KEYRANGE request has completed  * 00360000
*                             prematurely due to a model-dependent    * 00360100
*                             timeout condition.  For                 * 00360200
*                             MONITOR_SUBLISTS, the index of the      * 00360300
*                             first unprocessed IXLYMSRI entry is     * 00360400
*                             returned in the answer area.  All prior * 00360500
*                             IXLYMSRI entries were processed.  For   * 00360600
*                             DEQ_EVENTQ, the number of EMCs that     * 00360700
*                             were dequeued from the user's event     * 00360800
*                             queue,  and the number of EMCs that     * 00360900
*                             remain on the user's event queue after  * 00361000
*                             dequeueing those EMCs, are returned in  * 00361100
*                             the answer area.  For LOCK, the index   * 00361200
*                             of the next lock to be processed has    * 00361300
*                             been returned in the answer area.  For  * 00361400
*                             WRITE_LCONTROLS, reissue the request.   * 00361500
*                             For MONITOR_KEYRANGE, reissue the       * 00361600
*                             request.                                * 00361700
*                                                                     * 00361800
*                 xxxx040E    IxlRsnCodeLockNotHeld:  A LOCKOPER=TEST * 00361900
*                             request determined the specified lock   * 00362000
*                             was not held for the specified          * 00362100
*                             connection.  The connection ID of the   * 00362200
*                             lock owner is returned in the answer    * 00362300
*                             area.                                   * 00362400
*                                                                     * 00362500
*                 xxxx0410    IxlRsnCodeLockCond:  For a              * 00362600
*                             LOCKMODE=COND request, or a request     * 00362700
*                             that specified LOCKCOMP, the request    * 00362800
*                             could not be completed successfully     * 00362900
*                             because the specified lock is not       * 00363000
*                             currently held as required.  The        * 00363100
*                             connection ID of the lock owner is      * 00363200
*                             returned in the answer area.            * 00363300
*                                                                     * 00363400
*                 xxxx0412    IxlRsnCodeLockHeldBySys:  For a         * 00363500
*                             LOCKOPER=READNEXT or LOCKOPER=TEST      * 00363600
*                             request, the lock is not generally      * 00363700
*                             available.  The lock is not held by any * 00363800
*                             connection, but instead is held by the  * 00363900
*                             system.                                 * 00364000
*                                                                     * 00364100
*                 xxxx041F    IxlRsnCodeNoLocksHeld:  An IXLLSTC      * 00364200
*                             request specifying LOCKOPER=READNEXT    * 00364300
*                             found no locks held from the LOCKINDEX  * 00364400
*                             lock to the end of the lock table.      * 00364500
*                                                                     * 00364600
*                                                                     * 00364700
*                                                                     * 00364800
*                                                                     * 00364900
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00365000
*                 completed due to a user error.                      * 00365100
*                                                                     * 00365200
*                 HEX REASON  MEANING                                 * 00365300
*                 CODE                                                * 00365400
*                                                                     * 00365500
*                                                                     * 00365600
*                 xxxx0801    IxlRsnCodeBadParmlist:  Either unable   * 00365700
*                             to read or unable to write to the       * 00365800
*                             IXLLSTC parameter list.                 * 00365900
*                                                                     * 00366000
*                 xxxx0804    IxlRsnCodeBadVersionNum:  The version   * 00366100
*                             number in the parameter list is not     * 00366200
*                             valid.  This usually indicates that the * 00366300
*                             level of the macro is incompatible with * 00366400
*                             the level of the XES service code.      * 00366500
*                                                                     * 00366600
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00366700
*                             contoken specified.  The contoken is    * 00366800
*                             invalid for one of the following        * 00366900
*                             reasons:  disconnect has occurred, EOT  * 00367000
*                             of the connector's task, input contoken * 00367100
*                             is not the contoken returned from       * 00367200
*                             IXLCONN, the request was issued outside * 00367300
*                             the connector's address space, or the   * 00367400
*                             contoken has been invalidated for       * 00367500
*                             rebuild.                                * 00367600
*                                                                     * 00367700
*                 xxxx0824    IxlRsnCodeWrongStrType:  The connection * 00367800
*                             specified by CONTOKEN is not to a list  * 00367900
*                             structure.                              * 00368000
*                                                                     * 00368100
*                 xxxx0825    IxlRsnCodeNoEntry:  The designated      * 00368200
*                             event monitor controls object does not  * 00368300
*                             exist, hence request processing was     * 00368400
*                             suppressed.  For a READ_EMCONTROLS      * 00368500
*                             request,  the designated event monitor  * 00368600
*                             controls (EMC) does not exist for the   * 00368700
*                             user for the designated sublist.        * 00368800
*                                                                     * 00368900
*                 xxxx082B    IxlRsnCodeBadIDIndex:  An invalid value * 00369000
*                             was specified for either STARTINDEX or  * 00369100
*                             ENDINDEX.  When STARTINDEX or ENDINDEX  * 00369200
*                             is invalid, the index of the first      * 00369300
*                             entry which was not processed is        * 00369400
*                             returned in the answer area.            * 00369500
*                                                                     * 00369600
*                 xxxx0833    IxlRsnCodeBadPgblAttr:  The storage     * 00369700
*                             area specified by BUFFER, or one of the * 00369800
*                             buffers in the BUFLIST list is          * 00369900
*                             specified as being pageable, but is     * 00370000
*                             not.                                    * 00370100
*                                                                     * 00370200
*                 xxxx0834    IxlRsnCodeBadNonPgblAttr:  The storage  * 00370300
*                             area specified by BUFFER, or one of the * 00370400
*                             buffers in the BUFLIST list is          * 00370500
*                             specified as being non-pageable, but is * 00370600
*                             either pageable or not addressable.     * 00370700
*                                                                     * 00370800
*                 xxxx0835    IxlRsnCodeBadDataAddr:  The storage     * 00370900
*                             area specified by BUFFER or one of the  * 00371000
*                             buffers in the BUFLIST list is not      * 00371100
*                             addressable.                            * 00371200
*                                                                     * 00371300
*                 xxxx0836    IxlRsnCodeBadRealAddr:  Real storage    * 00371400
*                             addresses were provided in a BUFLIST    * 00371500
*                             list.  One of the buffers is not        * 00371600
*                             addressable in central storage.         * 00371700
*                                                                     * 00371800
*                 xxxx0838    IxlRsnCodeBadAnsArea:  The storage area * 00371900
*                             specified by ANSAREA and ANSLEN is not  * 00372000
*                             addressable.                            * 00372100
*                                                                     * 00372200
*                 xxxx0839    IxlRsnCodeBadReqTokenArea:  The storage * 00372300
*                             area specified by REQTOKEN is not       * 00372400
*                             addressable.                            * 00372500
*                                                                     * 00372600
*                 xxxx083D    IxlRsnCodeBadAnsLen:  The length of the * 00372700
*                             answer area, as specified by ANSLEN, is * 00372800
*                             not sufficient for providing answer     * 00372900
*                             area information.                       * 00373000
*                                                                     * 00373100
*                 xxxx0842    IxlRsnCodePersistentLock:  A request    * 00373200
*                             specifying an unconditional SET lock    * 00373300
*                             operation failed because the lock was   * 00373400
*                             held by a connection in the failed      * 00373500
*                             persistent state.  The connection ID of * 00373600
*                             the lock owner is returned in the       * 00373700
*                             answer area.                            * 00373800
*                                                                     * 00373900
*                 xxxx0846    IxlRsnCodeBadLockIndex:  The specified  * 00374000
*                             LOCKINDEX exceeds the size of the lock  * 00374100
*                             table for the structure.                * 00374200
*                                                                     * 00374300
*                 xxxx0847    IxlRsnCodeBadListNumber:  The specified * 00374400
*                             LISTNUM exceeds the number of lists for * 00374500
*                             the structure.                          * 00374600
*                                                                     * 00374700
*                 xxxx0848    IxlRsnCodeBadReset:  LOCKOPER=RESET was * 00374800
*                             specified for a lock not currently held * 00374900
*                             by the invoker.                         * 00375000
*                                                                     * 00375100
*                 xxxx084A    IxlRsnCodeNoKeys:  The structure does   * 00375200
*                             not support the use of entry keys,  and * 00375300
*                             the request either was a request type   * 00375400
*                             that requires the structure to support  * 00375500
*                             entry keys or a monitor request type    * 00375600
*                             that requires a keyed structure.        * 00375700
*                                                                     * 00375800
*                 xxxx084B    IxlRsnCodeNoLocks:  A locking operation * 00375900
*                             was requested, but the structure does   * 00376000
*                             not contain a lock table.               * 00376100
*                                                                     * 00376200
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 00376300
*                             specifying MODE=SYNCSUSPEND failed      * 00376400
*                             because the caller is disabled and      * 00376500
*                             cannot be suspended.                    * 00376600
*                                                                     * 00376700
*                 xxxx0852    IxlRsnCodeNoListVector:  A              * 00376800
*                             MONITOR_LIST, MONITOR_KEYRANGE,         * 00376900
*                             MONITOR_SUBLIST, MONITOR_EVENTQ, or     * 00377000
*                             MONITOR_SUBLISTS request failed because * 00377100
*                             no local vector for monitoring list     * 00377200
*                             headers, key-ranges, and/or event       * 00377300
*                             queues exists for this connection.      * 00377400
*                             Either a list notification vector was   * 00377500
*                             not requested for this connection, or   * 00377600
*                             the list notification vector has been   * 00377700
*                             deleted.                                * 00377800
*                                                                     * 00377900
*                 xxxx0853    IxlRsnCodeInvListVIndex:  An invalid    * 00378000
*                             vector index was specified on a         * 00378100
*                             MONITOR_LIST, MONITOR_KEYRANGE, or      * 00378200
*                             MONITOR_EVENTQ request with             * 00378300
*                             ACTION=START specified.                 * 00378400
*                                                                     * 00378500
*                 xxxx0854    IxlRsnCodeBadLockComp:  The value       * 00378600
*                             specified for LOCKCOMP is not a valid   * 00378700
*                             connection identifier.                  * 00378800
*                                                                     * 00378900
*                 xxxx0859    IxlRsnCodeBadListAuth:  The authority   * 00379000
*                             value for the specified list does not   * 00379100
*                             meet the criteria specified by          * 00379200
*                             AUTHCOMP.  The current list authority   * 00379300
*                             and description are returned in the     * 00379400
*                             answer area.                            * 00379500
*                                                                     * 00379600
*                 xxxx0864    IxlRsnCodeBadBufSize:  The specified    * 00379700
*                             buffer area is not large enough to      * 00379800
*                             contain the data being read.  For       * 00379900
*                             READ_LCONTROLS and DEQ_EVENTQ, the      * 00380000
*                             specified buffer area must be 4096      * 00380100
*                             bytes in length.                        * 00380200
*                                                                     * 00380300
*                 xxxx0865    IxlRsnCodeBadBufSpec:  The buffer       * 00380400
*                             specification is in error.  Refer to    * 00380500
*                             the BUFFER or BUFLIST specification     * 00380600
*                             requirements.                           * 00380700
*                                                                     * 00380800
*                 xxxx0866    IxlRsnCodeBadBufKey:  The buffer        * 00380900
*                             storage key is incorrect.  For requests * 00381000
*                             which write coupling facility data the  * 00381100
*                             data cannot be fetched.  For requests   * 00381200
*                             which read coupling facility data the   * 00381300
*                             data cannot be stored.                  * 00381400
*                                                                     * 00381500
*                 xxxx0867    IxlRsnCodeBadBufList:  The storage area * 00381600
*                             specified by BUFLIST is not             * 00381700
*                             addressable.                            * 00381800
*                                                                     * 00381900
*                 xxxx0880    IxlRsnCodeBadMosvector:  The storage    * 00382000
*                             area specified by MOSVECTOR is not      * 00382100
*                             addressable.                            * 00382200
*                                                                     * 00382300
*                 xxxx0891    IxlRsnCodeBadKeyRangeEnd The specified  * 00382400
*                             KEYRANGEEND value is not valid.  The    * 00382500
*                             value of KEYRANGEEND must be greater    * 00382600
*                             than or equal to the value of           * 00382700
*                             KEYRANGESTART.                          * 00382800
*                                                                     * 00382900
*                 xxxx0892    IxlRsnCodeBadKrNotEmpty The specified   * 00383000
*                             KRNOTEMPTY value is not valid.  The     * 00383100
*                             value of KRNOTEMPTY must be greater     * 00383200
*                             than or equal to the value of KREMPTY.  * 00383300
*                                                                     * 00383400
*                 xxxx0893    IxlRsnCodeBadListNotEmpty The specified * 00383500
*                             LISTNOTEMPTY value is not valid.  The   * 00383600
*                             value of LISTNOTEMPTY must be greater   * 00383700
*                             than or equal to the value of           * 00383800
*                             LISTEMPTY.                              * 00383900
*                                                                     * 00384000
*                 xxxx0897    IxlRsnCodeBadKeyType The specified      * 00384100
*                             KEYTYPE is not suitable for the         * 00384200
*                             structure.  KEYTYPE=SECONDARY is valid  * 00384300
*                             only if the structure supports          * 00384400
*                             secondary keys.  KEYTYPE=ENTRY is valid * 00384500
*                             only if the structure supports entry    * 00384600
*                             keys.                                   * 00384700
*                                                                     * 00384800
*                                                                     * 00384900
*                                                                     * 00385000
*                                                                     * 00385100
*       C         IxlRetCodeEnvError:  Environmental problem.         * 00385200
*                                                                     * 00385300
*                 HEX REASON  MEANING                                 * 00385400
*                 CODE                                                * 00385500
*                                                                     * 00385600
*                                                                     * 00385700
*                 xxxx0C06    IxlRsnCodeNoConn:  No connectivity to   * 00385800
*                             the list structure.  This may occur due * 00385900
*                             to operator commands such as VARY PATH  * 00386000
*                             OFFLINE or CONFIG CHP OFFLINE or        * 00386100
*                             hardware errors such as facility or     * 00386200
*                             path failures.  The contoken will be    * 00386300
*                             invalidated.  The user should           * 00386400
*                             disconnect or rebuild.                  * 00386500
*                                                                     * 00386600
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 00386700
*                             completion of the request, the request  * 00386800
*                             was purged.  Reasons: the connector     * 00386900
*                             failed, the connector disconnected, the * 00387000
*                             requestor failed, the request was       * 00387100
*                             purged by IXLPURGE, or requests were    * 00387200
*                             purged when the connector provided an   * 00387300
*                             IXLEERSP response for the Rebuild Stop  * 00387400
*                             or Rebuild Cleanup event.               * 00387500
*                                                                     * 00387600
*                 xxxx0C14    IxlRsnCodeStatusUnknown:  The IXLLSTC   * 00387700
*                             request has completed, but the final    * 00387800
*                             disposition of the request cannot be    * 00387900
*                             determined.                             * 00388000
*                                                                     * 00388100
*                 xxxx0C17    IxlRsnCodeStrFull:  The structure is    * 00388200
*                             full and cannot accommodate the         * 00388300
*                             creation of more event monitor controls * 00388400
*                             (EMCs) on a MONITOR_SUBLIST or          * 00388500
*                             MONITOR_SUBLISTS request.  For a        * 00388600
*                             MONITOR_SUBLISTS request,  the index of * 00388700
*                             the IXLYMSRI entry which experienced    * 00388800
*                             the structure full condition is         * 00388900
*                             returned in the answer area.            * 00389000
*                                                                     * 00389100
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 00389200
*                             completion of the request, the list     * 00389300
*                             structure failed.                       * 00389400
*                                                                     * 00389500
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 00389600
*                             type is not permitted for the level of  * 00389700
*                             coupling facility in which the target   * 00389800
*                             structure is allocated.                 * 00389900
*                                                                     * 00390000
*                 xxxx0CA0    IxlRsnCodeQuiescedSuspendFail:  The     * 00390100
*                             request is failed because the structure * 00390200
*                             is quiesced for a system-managed        * 00390300
*                             process and SUSPEND=FAIL is specified.  * 00390400
*                                                                     * 00390500
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00390600
*                             are not available.  This can be because * 00390700
*                             the hardware necessary to provide XES   * 00390800
*                             functions is not present.               * 00390900
*                                                                     * 00391000
*                                                                     * 00391100
*                                                                     * 00391200
*                                                                     * 00391300
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00391400
*                 state of the involved structure and the disposition * 00391500
*                 of the request are unpredictable.                   * 00391600
*                                                                     * 00391700
*                                                                     * 00391800
*                                                                     * 00391900
*01* REASON CODES:                                                    * 00392000
*                                                                     * 00392100
*       Reason codes, as appropriate, are defined under their         * 00392200
*       corresponding return code.  Reason code and return code       * 00392300
*       constants are defined within the IXLYCON macro.               * 00392400
*                                                                     * 00392500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00392600
*                                                                     * 00392700
*02*   PROCESSOR:  ASSEM                                              * 00392800
*                                                                     * 00392900
*01* COMPONENT:  SCIXL                                                * 00393000
*                                                                     * 00393100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00393200
*                                                                     * 00393300
*01* ABEND CODES:  None.                                              * 00393400
*                                                                     * 00393500
*01* MACRO USAGE NOTES:                                               * 00393600
*                                                                     * 00393700
*                                                                     * 00393800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00393900
*        global macro variable.  Any value other than 'NO' will       * 00394000
*        result in the macro expansion being printed.  The default is * 00394100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00394200
*        variable should be set.                                      * 00394300
*                                                                     * 00394400
*                    GBLC &ZPRINT                                     * 00394500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00394600
*                                                                     * 00394700
*                                                                     * 00394800
*    2.  The  IXLLSTC macro supports multiple versions. The macro key * 00394900
*        list  below  contains the version level in which the key was * 00395000
*        first  introduced.  Positionals  are  identified by the word * 00395100
*        'Positional'  followed by the numeric value of its position. * 00395200
*        Nested  positionals  are  preceded  by their outer key.  The * 00395300
*        lowest value represents the original version and the highest * 00395400
*        value  represents  the  most  recent  version of the IXLLSTC * 00395500
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00395600
*        least  as high as the highest version number of all the keys * 00395700
*        being used.                                                  * 00395800
*                                                                     * 00395900
*        VERSION   KEY                                                * 00396000
*                                                                     * 00396100
*              0      ACTION                                          * 00396200
*                     ANSAREA                                         * 00396300
*                     ANSLEN                                          * 00396400
*                     AUTHCOMP                                        * 00396500
*                     BUFADDRSIZE                                     * 00396600
*                     BUFADDRTYPE                                     * 00396700
*                     BUFALET                                         * 00396800
*                     BUFFER                                          * 00396900
*                     BUFINCRNUM                                      * 00397000
*                     BUFLIST                                         * 00397100
*                     BUFNUM                                          * 00397200
*                     BUFSIZE                                         * 00397300
*                     BUFSTGKEY                                       * 00397400
*                     CONTOKEN                                        * 00397500
*                     DRIVEEXIT                                       * 00397600
*                     KEYRANGE                                        * 00397700
*                     KEYRANGESTATE                                   * 00397800
*                     LISTDESC                                        * 00397900
*                     LISTLIMIT                                       * 00398000
*                     LISTNUM                                         * 00398100
*                     LISTSTATE                                       * 00398200
*                     LOCKCOMP                                        * 00398300
*                     LOCKDATA                                        * 00398400
*                     LOCKINDEX                                       * 00398500
*                     LOCKMODE                                        * 00398600
*                     LOCKOPER                                        * 00398700
*                     MODE                                            * 00398800
*                     NEWAUTH                                         * 00398900
*                     PAGEABLE                                        * 00399000
*                     REQDATA                                         * 00399100
*                     REQECB                                          * 00399200
*                     REQID                                           * 00399300
*                     REQTOKEN                                        * 00399400
*                     REQUEST                                         * 00399500
*                     VECTORINDEX                                     * 00399600
*              1      LISTKEY                                         * 00399700
*                     MAXLISTKEY                                      * 00399800
*                     SETCURSOR                                       * 00399900
*              2      ENDINDEX                                        * 00400000
*                     ENTRYKEY                                        * 00400100
*                     KEYTYPE                                         * 00400200
*                     MOSVECTOR                                       * 00400300
*                     NOTIFICATION                                    * 00400400
*                     STARTINDEX                                      * 00400500
*                     UNC                                             * 00400600
*              4      KEYRANGEEND                                     * 00400700
*                     KEYRANGESTART                                   * 00400800
*                     KREMPTY                                         * 00400900
*                     KRNOTEMPTY                                      * 00401000
*                     LISTEMPTY                                       * 00401100
*                     LISTNOTEMPTY                                    * 00401200
*                     SECONDARYKEY                                    * 00401300
*                                                                     * 00401400
*    3.  Different parameter list versions may be generated depending * 00401500
*        on  the  value  specified  for certain keys.   The following * 00401600
*        table  summarizes  the  minimum  version required to support * 00401700
*        such  specifications.   When  specifying  PLISTVER,  be sure * 00401800
*        that it is as least as high as the highest version number of * 00401900
*        all the key values being used.                               * 00402000
*                                                                     * 00402100
*        Key              Version  Key Value                          * 00402200
*        -------------    -------  ---------------------------------- * 00402300
*        -                                                            * 00402400
*        REQUEST          0        LOCK, READ_LCONTROLS,              * 00402500
*                                  WRITE_LCONTROLS, MONITOR_LIST      * 00402600
*                         2        READ_EQCONTROLS, READ_EMCONTROLS,  * 00402700
*                                  DEQ_EVENTQ, MONITOR_EVENTQ,        * 00402800
*                                  MONITOR_SUBLIST, MONITOR_SUBLISTS  * 00402900
*                         4        MONITOR_KEYRANGE                   * 00403000
*        KEYTYPE          2        ENTRY                              * 00403100
*                         4        SECONDARY                          * 00403200
*        NOTIFICATION     2        FIRST                              * 00403300
*                         4        EVERY                              * 00403400
*                                                                     * 00403500
*                                                                     * 00403600
*                                                                     * 00403700
*01* CHANGE ACTIVITY:                                                 * 00403800
*                                                                     * 00403900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00404000
*                                                                     * 00404100
*    $L0=SYSLKSMG JBB6609 990904 PD00DT:  Split IXLLIST               * 00404200
*    $P1=PWY0001  JBB6609 980807 PD00DV:  Plist version needs to be   * 00404300
*                                         set consistently with       * 00404400
*                                         IXLLIST                     * 00404500
*    $L1=MQ       JBB6609 980903 PD00DV:  Secondary key support       * 00404600
*    $L2=MQ       JBB6609 990126 PD00BJ:  MQSeries support            * 00404700
*    $L3=64BIT    HBB7703 990211 B7VBGD:  64 bit real support         * 00404800
*    $P2=PWY0287  JBB6609 990415 PD00DV:  Add reason code 0410 and    * 00404900
*                                         0847 descriptions           * 00405000
*    $P3=PWY0410  JBB6609 990616 PD00DV:  Move EMACASM and MACLASM    * 00405100
*                                         tags to correct position,   * 00405200
*                                         and comment out prolog and  * 00405300
*                                         docprof tags at top of      * 00405400
*                                         macro                       * 00405500
*    $P4=PWY0507  JBB6609 990715 PD00DT:  Include missing description * 00405600
*                                         for returncode=8            * 00405700
*                                         reasoncode=084A.            * 00405800
*    $01=OW39892  HBB6608 010413 PD00BC:  AutoR extension for CICS    * 00405900
****** END OF SPECIFICATIONS *****************************************/ 00406000
*/* TLINE 1 *********************************************************** 00406100
         MACRO                                                          00406200
&XLABEL  IXLLSTC &CONTOKEN=,&REQID=,&REQUEST=,&LOCKINDEX=,&LOCKOPER=,  *00406300
               &LOCKMODE=,&LOCKCOMP=,&LOCKDATA=,&LISTNUM=,&BUFLIST=,   *00406400
               &BUFADDRTYPE=,&PAGEABLE=,&BUFSTGKEY=,&BUFALET=,         *00406500
               &BUFADDRSIZE=,&BUFFER=,&AUTHCOMP=,&NEWAUTH=,&LISTLIMIT=,*00406600
               &LISTDESC=,&LISTKEY=,&MAXLISTKEY=,&SETCURSOR=,          *00406700
               &KEYRANGE=,&KEYRANGESTART=,&KEYRANGEEND=,               *00406800
               &KEYRANGESTATE=,&KREMPTY=,&KRNOTEMPTY=,&LISTSTATE=,     *00406900
               &LISTEMPTY=,&LISTNOTEMPTY=,&KEYTYPE=,&ENTRYKEY=,        *00407000
               &SECONDARYKEY=,&ACTION=,&VECTORINDEX=,&DRIVEEXIT=,      *00407100
               &NOTIFICATION=,&UNC=,&STARTINDEX=,&ENDINDEX=,           *00407200
               &MOSVECTOR=,&BUFNUM=,&BUFINCRNUM=,&BUFSIZE=,&MODE=,     *00407300
               &ANSAREA=,&ANSLEN=,&REQECB=,&REQDATA=,&REQTOKEN=,       *00407400
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00407500
.*                                                                      00407600
*                      MACDATE -03/20/01-<4>                            00407700
.*                                                                      00407800
.*******************************************************************    00407900
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00408000
.*******************************************************************    00408100
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00408200
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00408300
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00408400
.*                                                                      00408500
                      GBLC  &ZIXLLSTC   YES=MACRO USED AT LEAST ONCE    00408600
.*******************************************************************    00408700
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00408800
.*******************************************************************    00408900
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00409000
                      LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS    00409100
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00409200
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00409300
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00409400
                      LCLA  &ZAWRK      USED AS A WORK AREA             00409500
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00409600
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00409700
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00409800
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00409900
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00410000
                      LCLA  &ZMACRET    MACRO RETURN CODE               00410100
&ZMACRET              SETA  0           ASSUME NO ERRORS                00410200
.*                                                                      00410300
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00410400
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00410500
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00410600
                      LCLC  &ZENDBASEPL         End of base PL          00410700
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           00410800
.*******************************************************************    00410900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00411000
.*******************************************************************    00411100
                      LCLA  &ZI         INDEX FOR ARRAY                 00411200
                      LCLA  &ZJ         INDEX FOR PARMS                 00411300
                      LCLA  &ZK         INDEX FOR PARSE                 00411400
                      LCLA  &ZLO        LOW RANGE VALUE                 00411500
                      LCLA  &ZHI        HIGH RANGE VALUE                00411600
                      LCLC  &ZW         WORK AREA FOR PARM              00411700
.********************************************************************   00411800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00411900
.********************************************************************   00412000
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL         00412100
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  00412200
                      GBLA  &SYSALVL    SYSSTATE ARCHLVL                00412300
.*                                                                      00412400
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  00412500
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   00412600
                      SPLEVEL  TEST                                     00412700
.ZSYS2                ANOP  ,                                           00412800
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       00412900
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       00413000
                      SYSSTATE TEST                                     00413100
                      AGO   .ZSYS4                                      00413200
.ZSYS3                ANOP  ,                                           00413300
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         00413400
.ZSYS4                ANOP  ,                                           00413500
.*******************************************************************    00413600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00413700
.*******************************************************************    00413800
                      LCLC  &XCONTOKEN  ++ NAME                         00413900
                      LCLC  &XREQID     ++ NAME                         00414000
                      LCLC  &XREQUEST   ++ VALUE                        00414100
                      LCLC  &XLOCKINDEX         ++ NAME                 00414200
                      LCLC  &XLOCKOPER  ++ VALUE                        00414300
                      LCLC  &XLOCKMODE  ++ VALUE                        00414400
                      LCLC  &XLOCKCOMP  ++ NAME                         00414500
                      LCLC  &XLOCKDATA  ++ NAME                         00414600
                      LCLC  &XLISTNUM   ++ NAME                         00414700
                      LCLC  &XDATAREA   ++ NAME                         00414800
                      LCLC  &XBUFLIST   ++ NAME                         00414900
                      LCLC  &XBUFADDRTYPE       ++ VALUE                00415000
                      LCLC  &XPAGEABLE  ++ VALUE                        00415100
                      LCLC  &XBUFSTGKEY         ++ NAME                 00415200
                      LCLC  &XBUFALET   ++ NAME                         00415300
                      LCLC  &XBUFADDRSIZE       ++ VALUE                00415400
                      LCLC  &XBUFFER    ++ NAME                         00415500
                      LCLC  &XAUTHCOMP  ++ NAME                         00415600
                      LCLC  &XNEWAUTH   ++ NAME                         00415700
                      LCLC  &XLISTLIMIT         ++ NAME                 00415800
                      LCLC  &XLISTDESC  ++ NAME                         00415900
                      LCLC  &XLISTKEY   ++ NAME                         00416000
                      LCLC  &XMAXLISTKEY        ++ NAME                 00416100
                      LCLC  &XSETCURSOR         ++ VALUE                00416200
                      LCLC  &XKEYRANGE  ++ VALUE                        00416300
                      LCLC  &XKEYRANGESTART     ++ NAME                 00416400
                      LCLC  &XKEYRANGEEND       ++ NAME                 00416500
                      LCLC  &XKEYRANGESTATE     ++ VALUE                00416600
                      LCLC  &XKREMPTY   ++ NAME                         00416700
                      LCLC  &XKRNOTEMPTY        ++ NAME                 00416800
                      LCLC  &XLISTSTATE         ++ VALUE                00416900
                      LCLC  &XLISTEMPTY         ++ NAME                 00417000
                      LCLC  &XLISTNOTEMPTY      ++ NAME                 00417100
                      LCLC  &XKEYTYPE   ++ VALUE                        00417200
                      LCLC  &XNAME      ++ NAME                         00417300
                      LCLC  &XENTRYKEY  ++ NAME                         00417400
                      LCLC  &XSECONDARYKEY      ++ NAME                 00417500
                      LCLC  &XACTION    ++ VALUE                        00417600
                      LCLC  &XVECTORINDEX       ++ NAME                 00417700
                      LCLC  &XDRIVEEXIT         ++ VALUE                00417800
                      LCLC  &XNOTIFICATION      ++ VALUE                00417900
                      LCLC  &XUNC       ++ NAME                         00418000
                      LCLC  &XSTARTINDEX        ++ NAME                 00418100
                      LCLC  &XENDINDEX  ++ NAME                         00418200
                      LCLC  &XMOSVECTOR         ++ NAME                 00418300
                      LCLC  &XBUFNUM    ++ NAME                         00418400
                      LCLC  &XBUFINCRNUM        ++ NAME                 00418500
                      LCLC  &XBUFSIZE   ++ NAME                         00418600
                      LCLC  &XMODE      ++ VALUE                        00418700
                      LCLC  &XANSAREA   ++ NAME                         00418800
                      LCLC  &XANSLEN    ++ NAME                         00418900
                      LCLC  &XREQECB    ++ NAME                         00419000
                      LCLC  &XREQDATA   ++ NAME                         00419100
                      LCLC  &XREQTOKEN  ++ NAME                         00419200
                      LCLC  &XRETCODE   ++ NAME                         00419300
                      LCLC  &XRSNCODE   ++ NAME                         00419400
                      LCLA  &XPLISTVER  ++ VALUE                        00419500
                      LCLC  &XMF        ++ VALUE                        00419600
                      LCLC  &XMFCTRL    ++ NAME                         00419700
                      LCLC  &XMFATTR    ++ VALUE                        00419800
                      LCLC  &XMFSCK     ++ VALUE                        00419900
.*******************************************************************    00420000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00420100
.*******************************************************************    00420200
                      LCLC  &ZXCONTOKEN         ++ INPUT NAME           00420300
                      LCLC  &ZXREQID    ++ INPUT NAME                   00420400
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  00420500
                      LCLC  &ZXLOCKINDEX        ++ INPUT NAME           00420600
                      LCLC  &ZXLOCKOPER         ++ INPUT VALUE          00420700
                      LCLC  &ZXLOCKMODE         ++ INPUT VALUE          00420800
                      LCLC  &ZXLOCKCOMP         ++ INPUT NAME           00420900
                      LCLC  &ZXLOCKDATA         ++ INPUT NAME           00421000
                      LCLC  &ZXLISTNUM  ++ INPUT NAME                   00421100
                      LCLC  &ZXDATAREA  ++ INPUT NAME                   00421200
                      LCLC  &ZXBUFLIST  ++ INPUT NAME                   00421300
                      LCLC  &ZXBUFADDRTYPE      ++ INPUT VALUE          00421400
                      LCLC  &ZXPAGEABLE         ++ INPUT VALUE          00421500
                      LCLC  &ZXBUFSTGKEY        ++ INPUT NAME           00421600
                      LCLC  &ZXBUFALET  ++ INPUT NAME                   00421700
                      LCLC  &ZXBUFADDRSIZE      ++ INPUT VALUE          00421800
                      LCLC  &ZXBUFFER   ++ INPUT NAME                   00421900
                      LCLC  &ZXAUTHCOMP         ++ INPUT NAME           00422000
                      LCLC  &ZXNEWAUTH  ++ INPUT NAME                   00422100
                      LCLC  &ZXLISTLIMIT        ++ INPUT NAME           00422200
                      LCLC  &ZXLISTDESC         ++ INPUT NAME           00422300
                      LCLC  &ZXLISTKEY  ++ INPUT NAME                   00422400
                      LCLC  &ZXMAXLISTKEY       ++ INPUT NAME           00422500
                      LCLC  &ZXSETCURSOR        ++ INPUT VALUE          00422600
                      LCLC  &ZXKEYRANGE         ++ INPUT VALUE          00422700
                      LCLC  &ZXKEYRANGESTART    ++ INPUT NAME           00422800
                      LCLC  &ZXKEYRANGEEND      ++ INPUT NAME           00422900
                      LCLC  &ZXKEYRANGESTATE    ++ INPUT VALUE          00423000
                      LCLC  &ZXKREMPTY  ++ INPUT NAME                   00423100
                      LCLC  &ZXKRNOTEMPTY       ++ INPUT NAME           00423200
                      LCLC  &ZXLISTSTATE        ++ INPUT VALUE          00423300
                      LCLC  &ZXLISTEMPTY        ++ INPUT NAME           00423400
                      LCLC  &ZXLISTNOTEMPTY     ++ INPUT NAME           00423500
                      LCLC  &ZXKEYTYPE  ++ INPUT VALUE                  00423600
                      LCLC  &ZXNAME     ++ INPUT NAME                   00423700
                      LCLC  &ZXENTRYKEY         ++ INPUT NAME           00423800
                      LCLC  &ZXSECONDARYKEY     ++ INPUT NAME           00423900
                      LCLC  &ZXACTION   ++ INPUT VALUE                  00424000
                      LCLC  &ZXVECTORINDEX      ++ INPUT NAME           00424100
                      LCLC  &ZXDRIVEEXIT        ++ INPUT VALUE          00424200
                      LCLC  &ZXNOTIFICATION     ++ INPUT VALUE          00424300
                      LCLC  &ZXUNC      ++ INPUT NAME                   00424400
                      LCLC  &ZXSTARTINDEX       ++ INPUT NAME           00424500
                      LCLC  &ZXENDINDEX         ++ INPUT NAME           00424600
                      LCLC  &ZXMOSVECTOR        ++ OUTPUT NAME          00424700
                      LCLC  &ZXBUFNUM   ++ INPUT NAME                   00424800
                      LCLC  &ZXBUFINCRNUM       ++ INPUT NAME           00424900
                      LCLC  &ZXBUFSIZE  ++ INPUT NAME                   00425000
                      LCLC  &ZXMODE     ++ INPUT VALUE                  00425100
                      LCLC  &ZXANSAREA  ++ INPUT NAME                   00425200
                      LCLC  &ZXANSLEN   ++ INPUT NAME                   00425300
                      LCLC  &ZXREQECB   ++ INPUT NAME                   00425400
                      LCLC  &ZXREQDATA  ++ INPUT NAME                   00425500
                      LCLC  &ZXREQTOKEN         ++ OUTPUT NAME          00425600
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00425700
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  00425800
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          00425900
                      LCLC  &ZXMF       ++ INPUT VALUE                  00426000
                      LCLC  &ZXMFCTRL   ++ INPUT NAME                   00426100
                      LCLC  &ZXMFATTR   ++ INPUT VALUE                  00426200
                      LCLC  &ZXMFSCK    ++ INPUT VALUE                  00426300
.********************************************************************   00426400
.***AC.PLV01  PROCESS PLISTVER                                      *   00426500
.********************************************************************   00426600
&XPLISTVER      SETA  0                                                 00426700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00426800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00426900
&XPLISTVER      SETA  4                                                 00427000
.ZPLV0          ANOP  ,                                                 00427100
.*                                                                      00427200
                AIF   ('&LISTKEY' EQ '').ZPLV1E                         00427300
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00427400
&XPLISTVER      SETA  1                                                 00427500
.ZPLV1E         ANOP  ,                                                 00427600
.*                                                                      00427700
                AIF   ('&MAXLISTKEY' EQ '').ZPLV2E                      00427800
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00427900
&XPLISTVER      SETA  1                                                 00428000
.ZPLV2E         ANOP  ,                                                 00428100
.*                                                                      00428200
                AIF   ('&SETCURSOR' EQ '').ZPLV3E                       00428300
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00428400
&XPLISTVER      SETA  1                                                 00428500
.ZPLV3E         ANOP  ,                                                 00428600
.*                                                                      00428700
                AIF   ('&KEYRANGESTART' EQ '').ZPLV4E                   00428800
                AIF   (&XPLISTVER GE 4).ZPLV4E                          00428900
&XPLISTVER      SETA  4                                                 00429000
.ZPLV4E         ANOP  ,                                                 00429100
.*                                                                      00429200
                AIF   ('&KEYRANGEEND' EQ '').ZPLV5E                     00429300
                AIF   (&XPLISTVER GE 4).ZPLV5E                          00429400
&XPLISTVER      SETA  4                                                 00429500
.ZPLV5E         ANOP  ,                                                 00429600
.*                                                                      00429700
                AIF   ('&KREMPTY' EQ '').ZPLV6E                         00429800
                AIF   (&XPLISTVER GE 4).ZPLV6E                          00429900
&XPLISTVER      SETA  4                                                 00430000
.ZPLV6E         ANOP  ,                                                 00430100
.*                                                                      00430200
                AIF   ('&KRNOTEMPTY' EQ '').ZPLV7E                      00430300
                AIF   (&XPLISTVER GE 4).ZPLV7E                          00430400
&XPLISTVER      SETA  4                                                 00430500
.ZPLV7E         ANOP  ,                                                 00430600
.*                                                                      00430700
                AIF   ('&LISTEMPTY' EQ '').ZPLV8E                       00430800
                AIF   (&XPLISTVER GE 4).ZPLV8E                          00430900
&XPLISTVER      SETA  4                                                 00431000
.ZPLV8E         ANOP  ,                                                 00431100
.*                                                                      00431200
                AIF   ('&LISTNOTEMPTY' EQ '').ZPLV9E                    00431300
                AIF   (&XPLISTVER GE 4).ZPLV9E                          00431400
&XPLISTVER      SETA  4                                                 00431500
.ZPLV9E         ANOP  ,                                                 00431600
.*                                                                      00431700
                AIF   ('&KEYTYPE' EQ '').ZPLV10E                        00431800
                AIF   (&XPLISTVER GE 2).ZPLV10E                         00431900
&XPLISTVER      SETA  2                                                 00432000
.ZPLV10E        ANOP  ,                                                 00432100
.*                                                                      00432200
                AIF   ('&ENTRYKEY' EQ '').ZPLV11E                       00432300
                AIF   (&XPLISTVER GE 2).ZPLV11E                         00432400
&XPLISTVER      SETA  2                                                 00432500
.ZPLV11E        ANOP  ,                                                 00432600
.*                                                                      00432700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV12E                   00432800
                AIF   (&XPLISTVER GE 4).ZPLV12E                         00432900
&XPLISTVER      SETA  4                                                 00433000
.ZPLV12E        ANOP  ,                                                 00433100
.*                                                                      00433200
                AIF   ('&KEYTYPE' EQ '').ZPLV13E                        00433300
                AIF   (&XPLISTVER GE 2).ZPLV13E                         00433400
&XPLISTVER      SETA  2                                                 00433500
.ZPLV13E        ANOP  ,                                                 00433600
.*                                                                      00433700
                AIF   ('&KEYTYPE' EQ '').ZPLV14E                        00433800
                AIF   (&XPLISTVER GE 2).ZPLV14E                         00433900
&XPLISTVER      SETA  2                                                 00434000
.ZPLV14E        ANOP  ,                                                 00434100
.*                                                                      00434200
                AIF   ('&ENTRYKEY' EQ '').ZPLV15E                       00434300
                AIF   (&XPLISTVER GE 2).ZPLV15E                         00434400
&XPLISTVER      SETA  2                                                 00434500
.ZPLV15E        ANOP  ,                                                 00434600
.*                                                                      00434700
                AIF   ('&SECONDARYKEY' EQ '').ZPLV16E                   00434800
                AIF   (&XPLISTVER GE 4).ZPLV16E                         00434900
&XPLISTVER      SETA  4                                                 00435000
.ZPLV16E        ANOP  ,                                                 00435100
.*                                                                      00435200
                AIF   ('&NOTIFICATION' EQ '').ZPLV17E                   00435300
                AIF   (&XPLISTVER GE 2).ZPLV17E                         00435400
&XPLISTVER      SETA  2                                                 00435500
.ZPLV17E        ANOP  ,                                                 00435600
.*                                                                      00435700
                AIF   ('&UNC' EQ '').ZPLV18E                            00435800
                AIF   (&XPLISTVER GE 2).ZPLV18E                         00435900
&XPLISTVER      SETA  2                                                 00436000
.ZPLV18E        ANOP  ,                                                 00436100
.*                                                                      00436200
                AIF   ('&STARTINDEX' EQ '').ZPLV19E                     00436300
                AIF   (&XPLISTVER GE 2).ZPLV19E                         00436400
&XPLISTVER      SETA  2                                                 00436500
.ZPLV19E        ANOP  ,                                                 00436600
.*                                                                      00436700
                AIF   ('&ENDINDEX' EQ '').ZPLV20E                       00436800
                AIF   (&XPLISTVER GE 2).ZPLV20E                         00436900
&XPLISTVER      SETA  2                                                 00437000
.ZPLV20E        ANOP  ,                                                 00437100
.*                                                                      00437200
                AIF   ('&MOSVECTOR' EQ '').ZPLV21E                      00437300
                AIF   (&XPLISTVER GE 2).ZPLV21E                         00437400
&XPLISTVER      SETA  2                                                 00437500
.ZPLV21E        ANOP  ,                                                 00437600
.*                                                                      00437700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00437800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00437900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00438000
.*-------------------------------------------------------------------   00438100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00438200
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00438300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00438400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00438500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00438600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00438700
                AGO   .ZPVCK2                                           00438800
.ZPVCK3         ANOP  ,                                                 00438900
.*-------------------------------------------------------------------   00439000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00439100
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00439200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00439300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00439400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00439500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00439600
                AGO   .ZPVCKE                                           00439700
.ZPVCK2         ANOP  ,                                                 00439800
.*-------------------------------------------------------------------   00439900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00440000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00440100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00440200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00440300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00440400
                AIF   (&ZN LE 4).ZPVCK4A   NOT HIGH                     00440500
.ZPVCK6         ANOP  ,                                                 00440600
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00440700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00440800
&ZMS            SETC  '&ZMS THE RANGE IS "0-4"'                         00440900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00441000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00441100
&XPLISTVER      SETA  4                                                 00441200
                AGO   .ZPVCKE                                           00441300
.*-------------------------------------------------------------------   00441400
.ZPVCK4A        ANOP  ,                                                 00441500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00441600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00441700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00441800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00441900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00442000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00442100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00442200
                AGO   .ZPVCK5                                           00442300
.ZPVCK4         ANOP  ,                                                 00442400
&XPLISTVER      SETA  &PLISTVER(1)                                      00442500
.ZPVCK5         ANOP  ,                                                 00442600
.ZPVCKE         ANOP  ,                                                 00442700
.********************************************************************   00442800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00442900
.********************************************************************   00443000
                      ACTR  10000                                       00443100
.*------------------------------------------------------------------    00443200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00443300
&XMF                  SETC  ''          INITIALIZE XVARIABLE            00443400
.*-------------------------------------------------------------------   00443500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00443600
.ZG400                ANOP  ,                                           00443700
&ZTLC                 SETC 'S'                                          00443800
                      AIF   ('&MF(1)' NE '&ZTLC').ZG401                 00443900
&XMF                  SETC  'S'         SET KEYWORD                     00444000
                      AIF   (N'&MF LE 1).ZG400A  CK NUM                 00444100
&ZMS                  SETC  '"MF='      *KPOSA* MNOTE                   00444200
&ZMS                  SETC  '&ZMS.&MF"'                                 00444300
&ZMS                  SETC  '&ZMS "MF"'                                 00444400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00444500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00444600
.ZG400A               ANOP  ,                                           00444700
.*-------------------------------------------------------------------   00444800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00444900
.ZG401                ANOP  ,                                           00445000
&ZTLC                 SETC 'L'                                          00445100
                      AIF   ('&MF(1)' NE '&ZTLC').ZG408                 00445200
&XMF                  SETC  'L'         SET KEYWORD                     00445300
                      AIF   (N'&MF LE 3).ZG401A  CK NUM                 00445400
&ZMS                  SETC  '"MF='      *KPOSA* MNOTE                   00445500
&ZMS                  SETC  '&ZMS.&MF"'                                 00445600
&ZMS                  SETC  '&ZMS "MF"'                                 00445700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00445800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00445900
.ZG401A               ANOP  ,                                           00446000
.*-------------------------------------------------------------------   00446100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00446200
                      AIF   (N'&SYSLIST NE 0).ZG401B  POSITIONALS?      00446300
                      AIF   ('&CONTOKEN' NE '').ZG401B  KEYS?           00446400
                      AIF   ('&REQID' NE '').ZG401B  KEYS?              00446500
                      AIF   ('&REQUEST' NE '').ZG401B  KEYS?            00446600
                      AIF   ('&LOCKINDEX' NE '').ZG401B  KEYS?          00446700
                      AIF   ('&LOCKOPER' NE '').ZG401B  KEYS?           00446800
                      AIF   ('&LOCKMODE' NE '').ZG401B  KEYS?           00446900
                      AIF   ('&LOCKCOMP' NE '').ZG401B  KEYS?           00447000
                      AIF   ('&LOCKDATA' NE '').ZG401B  KEYS?           00447100
                      AIF   ('&LISTNUM' NE '').ZG401B  KEYS?            00447200
                      AIF   ('&BUFLIST' NE '').ZG401B  KEYS?            00447300
                      AIF   ('&BUFADDRTYPE' NE '').ZG401B  KEYS?        00447400
                      AIF   ('&PAGEABLE' NE '').ZG401B  KEYS?           00447500
                      AIF   ('&BUFSTGKEY' NE '').ZG401B  KEYS?          00447600
                      AIF   ('&BUFALET' NE '').ZG401B  KEYS?            00447700
                      AIF   ('&BUFADDRSIZE' NE '').ZG401B  KEYS?        00447800
                      AIF   ('&BUFFER' NE '').ZG401B  KEYS?             00447900
                      AIF   ('&AUTHCOMP' NE '').ZG401B  KEYS?           00448000
                      AIF   ('&NEWAUTH' NE '').ZG401B  KEYS?            00448100
                      AIF   ('&LISTLIMIT' NE '').ZG401B  KEYS?          00448200
                      AIF   ('&LISTDESC' NE '').ZG401B  KEYS?           00448300
                      AIF   ('&LISTKEY' NE '').ZG401B  KEYS?            00448400
                      AIF   ('&MAXLISTKEY' NE '').ZG401B  KEYS?         00448500
                      AIF   ('&SETCURSOR' NE '').ZG401B  KEYS?          00448600
                      AIF   ('&KEYRANGE' NE '').ZG401B  KEYS?           00448700
                      AIF   ('&KEYRANGESTART' NE '').ZG401B  KEYS?      00448800
                      AIF   ('&KEYRANGEEND' NE '').ZG401B  KEYS?        00448900
                      AIF   ('&KEYRANGESTATE' NE '').ZG401B  KEYS?      00449000
                      AIF   ('&KREMPTY' NE '').ZG401B  KEYS?            00449100
                      AIF   ('&KRNOTEMPTY' NE '').ZG401B  KEYS?         00449200
                      AIF   ('&LISTSTATE' NE '').ZG401B  KEYS?          00449300
                      AIF   ('&LISTEMPTY' NE '').ZG401B  KEYS?          00449400
                      AIF   ('&LISTNOTEMPTY' NE '').ZG401B  KEYS?       00449500
                      AIF   ('&KEYTYPE' NE '').ZG401B  KEYS?            00449600
                      AIF   ('&ENTRYKEY' NE '').ZG401B  KEYS?           00449700
                      AIF   ('&SECONDARYKEY' NE '').ZG401B  KEYS?       00449800
                      AIF   ('&ACTION' NE '').ZG401B  KEYS?             00449900
                      AIF   ('&VECTORINDEX' NE '').ZG401B  KEYS?        00450000
                      AIF   ('&DRIVEEXIT' NE '').ZG401B  KEYS?          00450100
                      AIF   ('&NOTIFICATION' NE '').ZG401B  KEYS?       00450200
                      AIF   ('&UNC' NE '').ZG401B  KEYS?                00450300
                      AIF   ('&STARTINDEX' NE '').ZG401B  KEYS?         00450400
                      AIF   ('&ENDINDEX' NE '').ZG401B  KEYS?           00450500
                      AIF   ('&MOSVECTOR' NE '').ZG401B  KEYS?          00450600
                      AIF   ('&BUFNUM' NE '').ZG401B  KEYS?             00450700
                      AIF   ('&BUFINCRNUM' NE '').ZG401B  KEYS?         00450800
                      AIF   ('&BUFSIZE' NE '').ZG401B  KEYS?            00450900
                      AIF   ('&MODE' NE '').ZG401B  KEYS?               00451000
                      AIF   ('&ANSAREA' NE '').ZG401B  KEYS?            00451100
                      AIF   ('&ANSLEN' NE '').ZG401B  KEYS?             00451200
                      AIF   ('&REQECB' NE '').ZG401B  KEYS?             00451300
                      AIF   ('&REQDATA' NE '').ZG401B  KEYS?            00451400
                      AIF   ('&REQTOKEN' NE '').ZG401B  KEYS?           00451500
                      AIF   ('&RETCODE' NE '').ZG401B  KEYS?            00451600
                      AIF   ('&RSNCODE' NE '').ZG401B  KEYS?            00451700
                      AGO    .ZG401C    INVOCATION OKAY                 00451800
.ZG401B               ANOP  ,                                           00451900
&ZMS                  SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE        00452000
&ZMS                  SETC  '&ZMS CAN ONLY HAVE'                        00452100
&ZMS                  SETC  '&ZMS THE "PLISTVER" KEY'                   00452200
                      MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'      00452300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00452400
.ZG401C               ANOP  ,                                           00452500
.*-------------------------------------------------------------------   00452600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00452700
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00452800
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00452900
                      AIF   (N'&MF(2) GT 1).ZG403B  MULTI PARMS         00453000
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00453100
.ZG403B               AIF   (K'&MF(2) GT 0).ZG403C                      00453200
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00453300
&ZMS                  SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*            00453400
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00453500
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00453600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00453700
.ZG403C               ANOP  ,                                           00453800
.*-------------------------------------------------------------------   00453900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00454000
                      AIF   (K'&ZXMFCTRL LE 0).ZG403P  NOT I/O          00454100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG403P             00454200
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00454300
&ZMS                  SETC  '"MF='      *KGPRA* MNOTE                   00454400
&ZMS                  SETC  '&ZMS.&MF"'                                 00454500
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00454600
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'           00454700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00454800
.ZG403P               ANOP  ,                                           00454900
.*-------------------------------------------------------------------   00455000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00455100
&ZXMFATTR             SETC  'INPUT'     SET IN/OUTPUT                   00455200
&XMFATTR              SETC  '0D'                                        00455300
                      AIF   (K'&MF(3) LE 0).ZG406B  PARM                00455400
&XMFATTR              SETC  '&MF(3,1)'  SET XVARIABLE                   00455500
                      AIF   (N'&MF(3) GT 1).ZG406B  MULTI PARMS         00455600
&XMFATTR              SETC  '&MF(3)'    SET XVARIABLE                   00455700
.ZG406B               ANOP  ,                                           00455800
.*-------------------------------------------------------------------   00455900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00456000
                      AIF   (K'&ZXMFATTR LE 0).ZG406P  NOT I/O          00456100
                      AIF   ('&XMFATTR'(1,1) NE '(').ZG406P             00456200
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00456300
&ZMS                  SETC  '"MF='      *KGPRA* MNOTE                   00456400
&ZMS                  SETC  '&ZMS.&MF"'                                 00456500
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00456600
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'           00456700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00456800
.ZG406P               ANOP  ,                                           00456900
.*-------------------------------------------------------------------   00457000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00457100
                      AIF   (K'&ZXMFATTR LE 0).ZG406S  NOT I/O          00457200
                      AIF   (K'&XMFATTR LE 60).ZG406S  LNG OK           00457300
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00457400
&ZMS                  SETC  '"MF='      *KLNGA* MNOTE                   00457500
&ZMS                  SETC  '&ZMS.&MF"'                                 00457600
&ZMS                  SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'       00457700
                      MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'          00457800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00457900
.ZG406S               ANOP  ,                                           00458000
.*-------------------------------------------------------------------   00458100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00458200
.ZG408                ANOP  ,                                           00458300
&ZTLC                 SETC 'E'                                          00458400
                      AIF   ('&MF(1)' NE '&ZTLC').ZG416                 00458500
&XMF                  SETC  'E'         SET KEYWORD                     00458600
                      AIF   (N'&MF LE 3).ZG408A  CK NUM                 00458700
&ZMS                  SETC  '"MF='      *KPOSA* MNOTE                   00458800
&ZMS                  SETC  '&ZMS.&MF"'                                 00458900
&ZMS                  SETC  '&ZMS "MF"'                                 00459000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00459100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00459200
.ZG408A               ANOP  ,                                           00459300
.*-------------------------------------------------------------------   00459400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00459500
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00459600
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00459700
                      AIF   (N'&MF(2) GT 1).ZG410B  MULTI PARMS         00459800
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00459900
.ZG410B               AIF   (K'&MF(2) GT 0).ZG410C                      00460000
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00460100
&ZMS                  SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*            00460200
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00460300
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00460400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00460500
.ZG410C               ANOP  ,                                           00460600
.*-------------------------------------------------------------------   00460700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00460800
                      AIF   (K'&ZXMFCTRL LE 0).ZG410R  NOT I/O          00460900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG410R             00461000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                  00461100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG410P               00461200
                      AIF   (K'&ZCGPR GT 2).ZG410Q                      00461300
                      AIF   ('&ZCGPR' EQ '0').ZG410Q                    00461400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00461500
                      AIF   (T'&ZCGPR NE 'N').ZG410Q  INVALID REG NAME  00461600
.ZG410P               ANOP  ,                                           00461700
                      AIF   (T'&ZCGPR NE 'N').ZG410R  NON NUMERIC       00461800
                      AIF   ('&ZCGPR' LT '1').ZG410Q                    00461900
                      AIF   ('&ZCGPR' LE '12').ZG410R                   00462000
.ZG410Q               ANOP  ,                                           00462100
&ZMS                  SETC  '"MF='      *KGPRA* MNOTE                   00462200
&ZMS                  SETC  '&ZMS.&MF"'                                 00462300
&ZMS                  SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'   00462400
                      MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'            00462500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00462600
.ZG410R               ANOP  ,                                           00462700
.*-------------------------------------------------------------------   00462800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00462900
&XMFSCK               SETC  ''          INITIALIZE XVARIABLE            00463000
.ZG414A   AIF   ('&MF(3)' NE 'COMPLETE').ZG415A                         00463100
&XMFSCK               SETC  'COMPLETE'  SET KEYWORD                     00463200
.*-------------------------------------------------------------------   00463300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00463400
.ZG415A               AIF   (K'&XMFSCK GT 0).ZG415C  KEYWORD            00463500
                      AIF   (K'&MF(3) LE 0).ZG415B                      00463600
&ZMS                  SETC  '"MF='      *KUKWA* MNOTE                   00463700
&ZMS                  SETC  '&ZMS.&MF"'                                 00463800
&ZMS                  SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '   00463900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00464000
&ZMS                  SETC  '&ZMS "COMPLETE".'                          00464100
                      MNOTE 8,' &ZMS '                                  00464200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00464300
.ZG415B               ANOP  ,                                           00464400
&XMFSCK               SETC  'COMPLETE'  SET DEFAULT KEYWORD             00464500
.ZG415C               ANOP  ,                                           00464600
&ZXMFSCK              SETC  'INPUT'     SET IN/OUTPUT                   00464700
.*------------------------------------------------------------------    00464800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00464900
.ZG416                ANOP  ,                                           00465000
&ZXMF                 SETC  'INPUT'     SET IN/OUTPUT                   00465100
                      AIF   (K'&XMF GT 0).ZG416E  VALID ARG             00465200
                      AIF   (T'&MF EQ 'O').ZG416D  OMITTED              00465300
&ZASYSLNDX            SETA  0                                           00465400
.ZG416A               ANOP  ,           POSITIONAL MACRO KEY            00465500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00465600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG416C           00465700
&ZTLC                 SETC 'MF'                                         00465800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG416A  00465900
.ZG416B               ANOP  ,                                           00466000
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00466100
&ZMS                  SETC  'THE "MF" KEY'      *KOPTA* MNOTE           00466200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00466300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00466400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00466500
                      AGO   .ZG416E                                     00466600
.ZG416C               ANOP  ,                                           00466700
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00466800
&ZMS                  SETC  '"MF='      *KUKWA* MNOTE                   00466900
&ZMS                  SETC  '&ZMS.&MF"'                                 00467000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00467100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00467200
&ZMS                  SETC  '&ZMS "S",'                                 00467300
&ZMS                  SETC  '&ZMS "L",'                                 00467400
&ZMS                  SETC  '&ZMS OR "E".'                              00467500
                      MNOTE 8,' &ZMS '                                  00467600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00467700
                      AGO   .ZG416E                                     00467800
.ZG416D               ANOP  ,                                           00467900
&XMF                  SETC  'S'         SET DEFAULT KEYWORD             00468000
&XMFSCK               SETC  'COMPLETE'  COMPLETE CHECKING               00468100
.ZG416E               ANOP  ,                                           00468200
.********************************************************************   00468300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00468400
.********************************************************************   00468500
                      ACTR  10000                                       00468600
.*-------------------------------------------------------------------   00468700
.***AG.MF03 MF=(SLE)                                                    00468800
                      AIF   ('&XMF' EQ 'L').ZGMFX                       00468900
.*----------------------------------------------------------------***   00469000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00469100
                      AIF   (N'&CONTOKEN LE 1).ZG2A  CK NUM             00469200
&ZMS                  SETC  '"CONTOKEN='        *KPOSA* MNOTE           00469300
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           00469400
&ZMS                  SETC  '&ZMS "CONTOKEN"'                           00469500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00469600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00469700
.ZG2A                 ANOP  ,                                           00469800
.*-------------------------------------------------------------------   00469900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00470000
&ZXCONTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   00470100
&XCONTOKEN            SETC  '&CONTOKEN(1)'      SET XVARIABLE           00470200
                      AIF   (N'&CONTOKEN GT 1).ZG2B  MULTI PARMS        00470300
&XCONTOKEN            SETC  '&CONTOKEN'         SET XVARIABLE           00470400
.ZG2B                 AIF   (K'&CONTOKEN(1) GT 0).ZG2C                  00470500
&ZXCONTOKEN           SETC  ''          RESET IN/OUTPUT                 00470600
&ZMS                  SETC  ' '         *KRQDA*                         00470700
&ZMS                  SETC  '&ZMS "CONTOKEN" KEY AND ITS'               00470800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00470900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00471000
.ZG2C                 ANOP  ,                                           00471100
.*-------------------------------------------------------------------   00471200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00471300
                      AIF   (K'&ZXCONTOKEN LE 0).ZG2R  NOT I/O          00471400
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R             00471500
&ZCGPR                SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)              00471600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 00471700
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        00471800
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      00471900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00472000
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    00472100
.ZG2P                 ANOP  ,                                           00472200
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         00472300
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      00472400
                      AIF   ('&ZCGPR' LE '12').ZG2R                     00472500
.ZG2Q                 ANOP  ,                                           00472600
&ZMS                  SETC  '"CONTOKEN='        *KGPRA* MNOTE           00472700
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           00472800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00472900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00473000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00473100
.ZG2R                 ANOP  ,                                           00473200
.*----------------------------------------------------------------***   00473300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00473400
                      AIF   (N'&REQID LE 1).ZG5A  CK NUM                00473500
&ZMS                  SETC  '"REQID='   *KPOSA* MNOTE                   00473600
&ZMS                  SETC  '&ZMS.&REQID"'                              00473700
&ZMS                  SETC  '&ZMS "REQID"'                              00473800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00473900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00474000
.ZG5A                 ANOP  ,                                           00474100
.*-------------------------------------------------------------------   00474200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00474300
&ZXREQID              SETC  'INPUT'     SET IN/OUTPUT                   00474400
&XREQID               SETC  'NO_REQID'                                  00474500
                      AIF   (K'&REQID(1) LE 0).ZG5B  PARM               00474600
&XREQID               SETC  '&REQID(1)'         SET XVARIABLE           00474700
                      AIF   (N'&REQID GT 1).ZG5B  MULTI PARMS           00474800
&XREQID               SETC  '&REQID'    SET XVARIABLE                   00474900
.ZG5B                 ANOP  ,                                           00475000
.*-------------------------------------------------------------------   00475100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00475200
                      AIF   (K'&ZXREQID LE 0).ZG5R  NOT I/O             00475300
         AIF   ('&XREQID' EQ 'NO_REQID').ZG5R                           00475400
                      AIF   ('&XREQID'(1,1) NE '(').ZG5R                00475500
&ZCGPR                SETC  '&XREQID'(2,K'&XREQID-2)                    00475600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                 00475700
                      AIF   (K'&ZCGPR GT 2).ZG5Q                        00475800
                      AIF   ('&ZCGPR' EQ '0').ZG5Q                      00475900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00476000
                      AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME    00476100
.ZG5P                 ANOP  ,                                           00476200
                      AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC         00476300
                      AIF   ('&ZCGPR' LT '2').ZG5Q                      00476400
                      AIF   ('&ZCGPR' LE '12').ZG5R                     00476500
.ZG5Q                 ANOP  ,                                           00476600
&ZMS                  SETC  '"REQID='   *KGPRA* MNOTE                   00476700
&ZMS                  SETC  '&ZMS.&REQID"'                              00476800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00476900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00477000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00477100
.ZG5R                 ANOP  ,                                           00477200
.*------------------------------------------------------------------    00477300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00477400
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            00477500
.*-------------------------------------------------------------------   00477600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00477700
.ZG9                  ANOP  ,                                           00477800
                      AIF   (K'&REQUEST(1) LE 0).ZG9A                   00477900
&ZTLC                 SETC 'LOCK'                                       00478000
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG40             00478100
&XREQUEST             SETC  'LOCK'      SET KEYWORD                     00478200
                      AIF   (N'&REQUEST LE 1).ZG9A  CK NUM              00478300
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00478400
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00478500
&ZMS                  SETC  '&ZMS "REQUEST"'                            00478600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00478700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00478800
.ZG9A                 ANOP  ,                                           00478900
.*------------------------------------------------------------------    00479000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00479100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00479200
.ZG9A0                AIF   (K'&LISTNUM LE 0).ZG9A1  OK                 00479300
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00479400
.ZG9A1                AIF   (K'&BUFLIST LE 0).ZG9A2  OK                 00479500
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00479600
.ZG9A2                AIF   (K'&BUFADDRTYPE LE 0).ZG9A3  OK             00479700
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00479800
.ZG9A3                AIF   (K'&PAGEABLE LE 0).ZG9A4  OK                00479900
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00480000
.ZG9A4                AIF   (K'&BUFSTGKEY LE 0).ZG9A5  OK               00480100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00480200
.ZG9A5                AIF   (K'&BUFALET LE 0).ZG9A6  OK                 00480300
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00480400
.ZG9A6                AIF   (K'&BUFADDRSIZE LE 0).ZG9A7  OK             00480500
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00480600
.ZG9A7                AIF   (K'&BUFFER LE 0).ZG9A8  OK                  00480700
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00480800
.ZG9A8                AIF   (K'&AUTHCOMP LE 0).ZG9A9  OK                00480900
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00481000
.ZG9A9                AIF   (K'&NEWAUTH LE 0).ZG9A10  OK                00481100
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00481200
.ZG9A10               AIF   (K'&LISTLIMIT LE 0).ZG9A11  OK              00481300
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00481400
.ZG9A11               AIF   (K'&LISTDESC LE 0).ZG9A12  OK               00481500
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00481600
.ZG9A12               AIF   (K'&LISTKEY LE 0).ZG9A13  OK                00481700
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00481800
.ZG9A13               AIF   (K'&MAXLISTKEY LE 0).ZG9A14  OK             00481900
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00482000
.ZG9A14               AIF   (K'&SETCURSOR LE 0).ZG9A15  OK              00482100
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00482200
.ZG9A15               AIF   (K'&KEYRANGE LE 0).ZG9A16  OK               00482300
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00482400
.ZG9A16               AIF   (K'&KEYRANGESTART LE 0).ZG9A17  OK          00482500
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00482600
.ZG9A17               AIF   (K'&KEYRANGEEND LE 0).ZG9A18  OK            00482700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00482800
.ZG9A18               AIF   (K'&KEYRANGESTATE LE 0).ZG9A19  OK          00482900
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00483000
.ZG9A19               AIF   (K'&KREMPTY LE 0).ZG9A20  OK                00483100
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00483200
.ZG9A20               AIF   (K'&KRNOTEMPTY LE 0).ZG9A21  OK             00483300
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00483400
.ZG9A21               AIF   (K'&LISTSTATE LE 0).ZG9A22  OK              00483500
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00483600
.ZG9A22               AIF   (K'&LISTEMPTY LE 0).ZG9A23  OK              00483700
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00483800
.ZG9A23               AIF   (K'&LISTNOTEMPTY LE 0).ZG9A24  OK           00483900
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00484000
.ZG9A24               AIF   (K'&KEYTYPE LE 0).ZG9A25  OK                00484100
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00484200
.ZG9A25               AIF   (K'&ENTRYKEY LE 0).ZG9A26  OK               00484300
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00484400
.ZG9A26               AIF   (K'&SECONDARYKEY LE 0).ZG9A27  OK           00484500
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00484600
.ZG9A27               AIF   (K'&ACTION LE 0).ZG9A28  OK                 00484700
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00484800
.ZG9A28               AIF   (K'&VECTORINDEX LE 0).ZG9A29  OK            00484900
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00485000
.ZG9A29               AIF   (K'&DRIVEEXIT LE 0).ZG9A30  OK              00485100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00485200
.ZG9A30               AIF   (K'&NOTIFICATION LE 0).ZG9A31  OK           00485300
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00485400
.ZG9A31               AIF   (K'&UNC LE 0).ZG9A32  OK                    00485500
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00485600
.ZG9A32               AIF   (K'&STARTINDEX LE 0).ZG9A33  OK             00485700
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00485800
.ZG9A33               AIF   (K'&ENDINDEX LE 0).ZG9A34  OK               00485900
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00486000
.ZG9A34               AIF   (K'&MOSVECTOR LE 0).ZG9A35  OK              00486100
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00486200
.ZG9A35               AIF   (K'&BUFNUM LE 0).ZG9A36  OK                 00486300
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00486400
.ZG9A36               AIF   (K'&BUFINCRNUM LE 0).ZG9A37  OK             00486500
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00486600
.ZG9A37               AIF   (K'&BUFSIZE LE 0).ZG9A38  OK                00486700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00486800
.ZG9A38               AIF   (K'&ZCVAL LE 0).ZG9A39  OK                  00486900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00487000
                      AIF  (K'&ZCVAL LE 160).ZG9A39A                    00487100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00487200
&ZCVAL                SETC '&ZCVAL....'                                 00487300
.ZG9A39A              ANOP                                              00487400
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00487500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00487600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00487700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00487800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00487900
.ZG9A39               ANOP  ,                                           00488000
.*----------------------------------------------------------------***   00488100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00488200
                      AIF   (N'&LOCKINDEX LE 1).ZG11A  CK NUM           00488300
&ZMS                  SETC  '"LOCKINDEX='       *KPOSA* MNOTE           00488400
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          00488500
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          00488600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00488700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00488800
.ZG11A                ANOP  ,                                           00488900
.*-------------------------------------------------------------------   00489000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00489100
&ZXLOCKINDEX          SETC  'INPUT'     SET IN/OUTPUT                   00489200
&XLOCKINDEX           SETC  '&LOCKINDEX(1)'     SET XVARIABLE           00489300
                      AIF   (N'&LOCKINDEX GT 1).ZG11B  MULTI PARMS      00489400
&XLOCKINDEX           SETC  '&LOCKINDEX'        SET XVARIABLE           00489500
.ZG11B                AIF   (K'&LOCKINDEX(1) GT 0).ZG11C                00489600
&ZXLOCKINDEX          SETC  ''          RESET IN/OUTPUT                 00489700
&ZMS                  SETC  ' '         *KRQDA*                         00489800
&ZMS                  SETC  '&ZMS "LOCKINDEX" KEY AND ITS'              00489900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00490000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00490100
.ZG11C                ANOP  ,                                           00490200
.*-------------------------------------------------------------------   00490300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00490400
                      AIF   (K'&ZXLOCKINDEX LE 0).ZG11R  NOT I/O        00490500
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZG11R           00490600
&ZCGPR                SETC  '&XLOCKINDEX'(2,K'&XLOCKINDEX-2)            00490700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                00490800
                      AIF   (K'&ZCGPR GT 2).ZG11Q                       00490900
                      AIF   ('&ZCGPR' EQ '0').ZG11Q                     00491000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00491100
                      AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME   00491200
.ZG11P                ANOP  ,                                           00491300
                      AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC        00491400
                      AIF   ('&ZCGPR' LT '2').ZG11Q                     00491500
                      AIF   ('&ZCGPR' LE '12').ZG11R                    00491600
.ZG11Q                ANOP  ,                                           00491700
&ZMS                  SETC  '"LOCKINDEX='       *KGPRA* MNOTE           00491800
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          00491900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00492000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00492100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00492200
.ZG11R                ANOP  ,                                           00492300
.*------------------------------------------------------------------    00492400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492500
&XLOCKOPER            SETC  ''          INITIALIZE XVARIABLE            00492600
.*-------------------------------------------------------------------   00492700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492800
.ZG15                 ANOP  ,                                           00492900
                      AIF   (K'&LOCKOPER(1) LE 0).ZG15A                 00493000
&ZTLC                 SETC 'SET'                                        00493100
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG27            00493200
&XLOCKOPER            SETC  'SET'       SET KEYWORD                     00493300
                      AIF   (N'&LOCKOPER LE 1).ZG15A  CK NUM            00493400
&ZMS                  SETC  '"LOCKOPER='        *KPOSA* MNOTE           00493500
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00493600
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00493700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00493800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00493900
.ZG15A                ANOP  ,                                           00494000
.*------------------------------------------------------------------    00494100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00494200
&XLOCKMODE            SETC  ''          INITIALIZE XVARIABLE            00494300
.*-------------------------------------------------------------------   00494400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00494500
.ZG18                 ANOP  ,                                           00494600
                      AIF   (K'&LOCKMODE(1) LE 0).ZG18A                 00494700
&ZTLC                 SETC 'UNCOND'                                     00494800
                      AIF   ('&LOCKMODE(1)' NE '&ZTLC').ZG19            00494900
&XLOCKMODE            SETC  'UNCOND'    SET KEYWORD                     00495000
                      AIF   (N'&LOCKMODE LE 1).ZG18A  CK NUM            00495100
&ZMS                  SETC  '"LOCKMODE='        *KPOSA* MNOTE           00495200
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           00495300
&ZMS                  SETC  '&ZMS "LOCKMODE"'                           00495400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00495500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00495600
.ZG18A                ANOP  ,                                           00495700
.*------------------------------------------------------------------    00495800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00495900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00496000
.ZG18A0               AIF   (K'&LOCKCOMP LE 0).ZG18A1  OK               00496100
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00496200
.ZG18A1               AIF   (K'&ZCVAL LE 0).ZG18A2  OK                  00496300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00496400
&ZMS                  SETC  '"LOCKMODE'         *KMEIA* MNOTE           00496500
&ZMS                  SETC  '&ZMS.=&LOCKMODE"'                          00496600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00496700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00496800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00496900
.ZG18A2               ANOP  ,                                           00497000
.*-------------------------------------------------------------------   00497100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00497200
.ZG19                 ANOP  ,                                           00497300
&ZTLC                 SETC 'COND'                                       00497400
                      AIF   ('&LOCKMODE(1)' NE '&ZTLC').ZG23            00497500
&XLOCKMODE            SETC  'COND'      SET KEYWORD                     00497600
                      AIF   (N'&LOCKMODE LE 1).ZG19A  CK NUM            00497700
&ZMS                  SETC  '"LOCKMODE='        *KPOSA* MNOTE           00497800
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           00497900
&ZMS                  SETC  '&ZMS "LOCKMODE"'                           00498000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00498100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00498200
.ZG19A                ANOP  ,                                           00498300
.*----------------------------------------------------------------***   00498400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00498500
                      AIF   (N'&LOCKCOMP LE 1).ZG21A  CK NUM            00498600
&ZMS                  SETC  '"LOCKCOMP='        *KPOSA* MNOTE           00498700
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00498800
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00498900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00499000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00499100
.ZG21A                ANOP  ,                                           00499200
.*-------------------------------------------------------------------   00499300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00499400
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00499500
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00499600
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG21B  PARM           00499700
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00499800
                      AIF   (N'&LOCKCOMP GT 1).ZG21B  MULTI PARMS       00499900
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00500000
.ZG21B                ANOP  ,                                           00500100
.*-------------------------------------------------------------------   00500200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00500300
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG21R  NOT I/O         00500400
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG21R                    00500500
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG21R            00500600
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00500700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                00500800
                      AIF   (K'&ZCGPR GT 2).ZG21Q                       00500900
                      AIF   ('&ZCGPR' EQ '0').ZG21Q                     00501000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00501100
                      AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME   00501200
.ZG21P                ANOP  ,                                           00501300
                      AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC        00501400
                      AIF   ('&ZCGPR' LT '2').ZG21Q                     00501500
                      AIF   ('&ZCGPR' LE '12').ZG21R                    00501600
.ZG21Q                ANOP  ,                                           00501700
&ZMS                  SETC  '"LOCKCOMP='        *KGPRA* MNOTE           00501800
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00501900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00502000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00502100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00502200
.ZG21R                ANOP  ,                                           00502300
.*------------------------------------------------------------------    00502400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00502500
.ZG23                 ANOP  ,                                           00502600
&ZXLOCKMODE           SETC  'INPUT'     SET IN/OUTPUT                   00502700
                      AIF   (K'&XLOCKMODE GT 0).ZG23E  VALID ARG        00502800
                      AIF   (T'&LOCKMODE EQ 'O').ZG23D  OMITTED         00502900
&ZASYSLNDX            SETA  0                                           00503000
.ZG23A                ANOP  ,           POSITIONAL MACRO KEY            00503100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00503200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG23C            00503300
&ZTLC                 SETC 'LOCKMODE'                                   00503400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG23A   00503500
.ZG23B                ANOP  ,                                           00503600
&ZXLOCKMODE           SETC  ''          RESET IN/OUTPUT                 00503700
&ZMS                  SETC  'THE "LOCKMODE" KEY'  *KOPTA* MNOTE         00503800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00503900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00504000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00504100
                      AGO   .ZG23E                                      00504200
.ZG23C                ANOP  ,                                           00504300
&ZXLOCKMODE           SETC  ''          RESET IN/OUTPUT                 00504400
&ZMS                  SETC  '"LOCKMODE='        *KUKWA* MNOTE           00504500
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           00504600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00504700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00504800
&ZMS                  SETC  '&ZMS "UNCOND"'                             00504900
&ZMS                  SETC  '&ZMS OR "COND".'                           00505000
                      MNOTE 8,' &ZMS '                                  00505100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00505200
                      AGO   .ZG23E                                      00505300
.ZG23D                ANOP  ,                                           00505400
&XLOCKMODE            SETC  'UNCOND'    SET DEFAULT KEYWORD             00505500
.ZG23E                ANOP  ,                                           00505600
.*----------------------------------------------------------------***   00505700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00505800
                      AIF   (N'&LOCKDATA LE 1).ZG25A  CK NUM            00505900
&ZMS                  SETC  '"LOCKDATA='        *KPOSA* MNOTE           00506000
&ZMS                  SETC  '&ZMS.&LOCKDATA"'                           00506100
&ZMS                  SETC  '&ZMS "LOCKDATA"'                           00506200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00506300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00506400
.ZG25A                ANOP  ,                                           00506500
.*-------------------------------------------------------------------   00506600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00506700
&ZXLOCKDATA           SETC  'INPUT'     SET IN/OUTPUT                   00506800
&XLOCKDATA            SETC  'NO_LOCKDATA'                               00506900
                      AIF   (K'&LOCKDATA(1) LE 0).ZG25B  PARM           00507000
&XLOCKDATA            SETC  '&LOCKDATA(1)'      SET XVARIABLE           00507100
                      AIF   (N'&LOCKDATA GT 1).ZG25B  MULTI PARMS       00507200
&XLOCKDATA            SETC  '&LOCKDATA'         SET XVARIABLE           00507300
.ZG25B                ANOP  ,                                           00507400
.*-------------------------------------------------------------------   00507500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00507600
                      AIF   (K'&ZXLOCKDATA LE 0).ZG25R  NOT I/O         00507700
         AIF   ('&XLOCKDATA' EQ 'NO_LOCKDATA').ZG25R                    00507800
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZG25R            00507900
&ZCGPR                SETC  '&XLOCKDATA'(2,K'&XLOCKDATA-2)              00508000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                00508100
                      AIF   (K'&ZCGPR GT 2).ZG25Q                       00508200
                      AIF   ('&ZCGPR' EQ '0').ZG25Q                     00508300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00508400
                      AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME   00508500
.ZG25P                ANOP  ,                                           00508600
                      AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC        00508700
                      AIF   ('&ZCGPR' LT '2').ZG25Q                     00508800
                      AIF   ('&ZCGPR' LE '12').ZG25R                    00508900
.ZG25Q                ANOP  ,                                           00509000
&ZMS                  SETC  '"LOCKDATA='        *KGPRA* MNOTE           00509100
&ZMS                  SETC  '&ZMS.&LOCKDATA"'                           00509200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00509300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00509400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00509500
.ZG25R                ANOP  ,                                           00509600
.*-------------------------------------------------------------------   00509700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00509800
.ZG27                 ANOP  ,                                           00509900
&ZTLC                 SETC 'RESET'                                      00510000
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG31            00510100
&XLOCKOPER            SETC  'RESET'     SET KEYWORD                     00510200
                      AIF   (N'&LOCKOPER LE 1).ZG27A  CK NUM            00510300
&ZMS                  SETC  '"LOCKOPER='        *KPOSA* MNOTE           00510400
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00510500
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00510600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00510700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00510800
.ZG27A                ANOP  ,                                           00510900
.*------------------------------------------------------------------    00511000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00511100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00511200
.ZG27A0               AIF   (K'&LOCKMODE LE 0).ZG27A1  OK               00511300
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00511400
.ZG27A1               AIF   (K'&LOCKDATA LE 0).ZG27A2  OK               00511500
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00511600
.ZG27A2               AIF   (K'&ZCVAL LE 0).ZG27A3  OK                  00511700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00511800
&ZMS                  SETC  '"LOCKOPER'         *KMEIA* MNOTE           00511900
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          00512000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00512100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00512200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00512300
.ZG27A3               ANOP  ,                                           00512400
.*----------------------------------------------------------------***   00512500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00512600
                      AIF   (N'&LOCKCOMP LE 1).ZG29A  CK NUM            00512700
&ZMS                  SETC  '"LOCKCOMP='        *KPOSA* MNOTE           00512800
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00512900
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00513000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00513100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00513200
.ZG29A                ANOP  ,                                           00513300
.*-------------------------------------------------------------------   00513400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00513500
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00513600
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00513700
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG29B  PARM           00513800
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00513900
                      AIF   (N'&LOCKCOMP GT 1).ZG29B  MULTI PARMS       00514000
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00514100
.ZG29B                ANOP  ,                                           00514200
.*-------------------------------------------------------------------   00514300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00514400
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG29R  NOT I/O         00514500
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG29R                    00514600
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG29R            00514700
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00514800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                00514900
                      AIF   (K'&ZCGPR GT 2).ZG29Q                       00515000
                      AIF   ('&ZCGPR' EQ '0').ZG29Q                     00515100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00515200
                      AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME   00515300
.ZG29P                ANOP  ,                                           00515400
                      AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC        00515500
                      AIF   ('&ZCGPR' LT '2').ZG29Q                     00515600
                      AIF   ('&ZCGPR' LE '12').ZG29R                    00515700
.ZG29Q                ANOP  ,                                           00515800
&ZMS                  SETC  '"LOCKCOMP='        *KGPRA* MNOTE           00515900
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00516000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00516100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00516200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00516300
.ZG29R                ANOP  ,                                           00516400
.*-------------------------------------------------------------------   00516500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00516600
.ZG31                 ANOP  ,                                           00516700
&ZTLC                 SETC 'TEST'                                       00516800
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG35            00516900
&XLOCKOPER            SETC  'TEST'      SET KEYWORD                     00517000
                      AIF   (N'&LOCKOPER LE 1).ZG31A  CK NUM            00517100
&ZMS                  SETC  '"LOCKOPER='        *KPOSA* MNOTE           00517200
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00517300
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00517400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00517500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00517600
.ZG31A                ANOP  ,                                           00517700
.*------------------------------------------------------------------    00517800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00517900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00518000
.ZG31A0               AIF   (K'&LOCKMODE LE 0).ZG31A1  OK               00518100
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00518200
.ZG31A1               AIF   (K'&LOCKDATA LE 0).ZG31A2  OK               00518300
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00518400
.ZG31A2               AIF   (K'&ZCVAL LE 0).ZG31A3  OK                  00518500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00518600
&ZMS                  SETC  '"LOCKOPER'         *KMEIA* MNOTE           00518700
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          00518800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00518900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00519000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00519100
.ZG31A3               ANOP  ,                                           00519200
.*----------------------------------------------------------------***   00519300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00519400
                      AIF   (N'&LOCKCOMP LE 1).ZG33A  CK NUM            00519500
&ZMS                  SETC  '"LOCKCOMP='        *KPOSA* MNOTE           00519600
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00519700
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00519800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00519900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00520000
.ZG33A                ANOP  ,                                           00520100
.*-------------------------------------------------------------------   00520200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00520300
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00520400
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00520500
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG33B  PARM           00520600
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00520700
                      AIF   (N'&LOCKCOMP GT 1).ZG33B  MULTI PARMS       00520800
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00520900
.ZG33B                ANOP  ,                                           00521000
.*-------------------------------------------------------------------   00521100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00521200
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG33R  NOT I/O         00521300
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG33R                    00521400
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG33R            00521500
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00521600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                00521700
                      AIF   (K'&ZCGPR GT 2).ZG33Q                       00521800
                      AIF   ('&ZCGPR' EQ '0').ZG33Q                     00521900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00522000
                      AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME   00522100
.ZG33P                ANOP  ,                                           00522200
                      AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC        00522300
                      AIF   ('&ZCGPR' LT '2').ZG33Q                     00522400
                      AIF   ('&ZCGPR' LE '12').ZG33R                    00522500
.ZG33Q                ANOP  ,                                           00522600
&ZMS                  SETC  '"LOCKCOMP='        *KGPRA* MNOTE           00522700
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00522800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00522900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00523000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00523100
.ZG33R                ANOP  ,                                           00523200
.*-------------------------------------------------------------------   00523300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00523400
.ZG35                 ANOP  ,                                           00523500
&ZTLC                 SETC 'READNEXT'                                   00523600
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG39            00523700
&XLOCKOPER            SETC  'READNEXT'  SET KEYWORD                     00523800
                      AIF   (N'&LOCKOPER LE 1).ZG35A  CK NUM            00523900
&ZMS                  SETC  '"LOCKOPER='        *KPOSA* MNOTE           00524000
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00524100
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           00524200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00524300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00524400
.ZG35A                ANOP  ,                                           00524500
.*------------------------------------------------------------------    00524600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00524700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00524800
.ZG35A0               AIF   (K'&LOCKMODE LE 0).ZG35A1  OK               00524900
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00525000
.ZG35A1               AIF   (K'&LOCKDATA LE 0).ZG35A2  OK               00525100
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00525200
.ZG35A2               AIF   (K'&ZCVAL LE 0).ZG35A3  OK                  00525300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00525400
&ZMS                  SETC  '"LOCKOPER'         *KMEIA* MNOTE           00525500
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          00525600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00525700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00525800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00525900
.ZG35A3               ANOP  ,                                           00526000
.*----------------------------------------------------------------***   00526100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00526200
                      AIF   (N'&LOCKCOMP LE 1).ZG37A  CK NUM            00526300
&ZMS                  SETC  '"LOCKCOMP='        *KPOSA* MNOTE           00526400
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00526500
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           00526600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00526700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00526800
.ZG37A                ANOP  ,                                           00526900
.*-------------------------------------------------------------------   00527000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00527100
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00527200
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               00527300
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG37B  PARM           00527400
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           00527500
                      AIF   (N'&LOCKCOMP GT 1).ZG37B  MULTI PARMS       00527600
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           00527700
.ZG37B                ANOP  ,                                           00527800
.*-------------------------------------------------------------------   00527900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00528000
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG37R  NOT I/O         00528100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG37R                    00528200
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG37R            00528300
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              00528400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                00528500
                      AIF   (K'&ZCGPR GT 2).ZG37Q                       00528600
                      AIF   ('&ZCGPR' EQ '0').ZG37Q                     00528700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00528800
                      AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME   00528900
.ZG37P                ANOP  ,                                           00529000
                      AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC        00529100
                      AIF   ('&ZCGPR' LT '2').ZG37Q                     00529200
                      AIF   ('&ZCGPR' LE '12').ZG37R                    00529300
.ZG37Q                ANOP  ,                                           00529400
&ZMS                  SETC  '"LOCKCOMP='        *KGPRA* MNOTE           00529500
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           00529600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00529700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00529800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00529900
.ZG37R                ANOP  ,                                           00530000
.*------------------------------------------------------------------    00530100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00530200
.ZG39                 ANOP  ,                                           00530300
&ZXLOCKOPER           SETC  'INPUT'     SET IN/OUTPUT                   00530400
                      AIF   (K'&XLOCKOPER GT 0).ZG39E  VALID ARG        00530500
                      AIF   (T'&LOCKOPER EQ 'O').ZG39D  OMITTED         00530600
&ZASYSLNDX            SETA  0                                           00530700
.ZG39A                ANOP  ,           POSITIONAL MACRO KEY            00530800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00530900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C            00531000
&ZTLC                 SETC 'LOCKOPER'                                   00531100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A   00531200
.ZG39B                ANOP  ,                                           00531300
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 00531400
&ZMS                  SETC  'THE "LOCKOPER" KEY'  *KOPTA* MNOTE         00531500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00531600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00531700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00531800
                      AGO   .ZG39E                                      00531900
.ZG39C                ANOP  ,                                           00532000
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 00532100
&ZMS                  SETC  '"LOCKOPER='        *KUKWA* MNOTE           00532200
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           00532300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00532400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00532500
&ZMS                  SETC  '&ZMS "SET",'                               00532600
&ZMS                  SETC  '&ZMS "RESET",'                             00532700
&ZMS                  SETC  '&ZMS "TEST",'                              00532800
&ZMS                  SETC  '&ZMS OR "READNEXT".'                       00532900
                      MNOTE 8,' &ZMS '                                  00533000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00533100
                      AGO   .ZG39E                                      00533200
.ZG39D                ANOP  ,                                           00533300
&XLOCKOPER            SETC  'SET'       SET DEFAULT KEYWORD             00533400
.ZG39E                ANOP  ,                                           00533500
.*------------------------------------------------------------------    00533600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00533700
                      AIF   (K'&LOCKOPER(1) GT 0).ZG39F  PARM           00533800
&XLOCKOPER            SETC  ''          ENSURE NULL KEYWORD             00533900
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 00534000
&ZMS                  SETC  'THE'                                       00534100
&ZMS                  SETC  '&ZMS "LOCKOPER" KEY AND ITS'               00534200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00534300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00534400
&ZMS                  SETC  '&ZMS "SET",'                               00534500
&ZMS                  SETC  '&ZMS "RESET",'                             00534600
&ZMS                  SETC  '&ZMS "TEST",'                              00534700
&ZMS                  SETC  '&ZMS OR "READNEXT".'                       00534800
                      MNOTE 8,' &ZMS '                                  00534900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00535000
.ZG39F                ANOP  ,                                           00535100
.*-------------------------------------------------------------------   00535200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00535300
.ZG40                 ANOP  ,                                           00535400
&ZTLC                 SETC 'READ_LCONTROLS'                             00535500
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG77             00535600
&XREQUEST             SETC  'READ_LCONTROLS'    SET KEYWORD             00535700
                      AIF   (N'&REQUEST LE 1).ZG40A  CK NUM             00535800
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00535900
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00536000
&ZMS                  SETC  '&ZMS "REQUEST"'                            00536100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00536200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00536300
.ZG40A                ANOP  ,                                           00536400
.*------------------------------------------------------------------    00536500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00536600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00536700
.ZG40A0               AIF   (K'&LOCKINDEX LE 0).ZG40A1  OK              00536800
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00536900
.ZG40A1               AIF   (K'&LOCKOPER LE 0).ZG40A2  OK               00537000
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00537100
.ZG40A2               AIF   (K'&LOCKMODE LE 0).ZG40A3  OK               00537200
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00537300
.ZG40A3               AIF   (K'&LOCKCOMP LE 0).ZG40A4  OK               00537400
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00537500
.ZG40A4               AIF   (K'&LOCKDATA LE 0).ZG40A5  OK               00537600
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00537700
.ZG40A5               AIF   (K'&AUTHCOMP LE 0).ZG40A6  OK               00537800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00537900
.ZG40A6               AIF   (K'&NEWAUTH LE 0).ZG40A7  OK                00538000
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00538100
.ZG40A7               AIF   (K'&LISTLIMIT LE 0).ZG40A8  OK              00538200
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00538300
.ZG40A8               AIF   (K'&LISTDESC LE 0).ZG40A9  OK               00538400
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00538500
.ZG40A9               AIF   (K'&LISTKEY LE 0).ZG40A10  OK               00538600
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00538700
.ZG40A10              AIF   (K'&MAXLISTKEY LE 0).ZG40A11  OK            00538800
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00538900
.ZG40A11              AIF   (K'&SETCURSOR LE 0).ZG40A12  OK             00539000
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00539100
.ZG40A12              AIF   (K'&KEYRANGE LE 0).ZG40A13  OK              00539200
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00539300
.ZG40A13              AIF   (K'&KEYRANGESTART LE 0).ZG40A14  OK         00539400
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00539500
.ZG40A14              AIF   (K'&KEYRANGEEND LE 0).ZG40A15  OK           00539600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00539700
.ZG40A15              AIF   (K'&KEYRANGESTATE LE 0).ZG40A16  OK         00539800
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00539900
.ZG40A16              AIF   (K'&KREMPTY LE 0).ZG40A17  OK               00540000
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00540100
.ZG40A17              AIF   (K'&KRNOTEMPTY LE 0).ZG40A18  OK            00540200
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00540300
.ZG40A18              AIF   (K'&LISTSTATE LE 0).ZG40A19  OK             00540400
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00540500
.ZG40A19              AIF   (K'&LISTEMPTY LE 0).ZG40A20  OK             00540600
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00540700
.ZG40A20              AIF   (K'&LISTNOTEMPTY LE 0).ZG40A21  OK          00540800
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00540900
.ZG40A21              AIF   (K'&KEYTYPE LE 0).ZG40A22  OK               00541000
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00541100
.ZG40A22              AIF   (K'&ENTRYKEY LE 0).ZG40A23  OK              00541200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00541300
.ZG40A23              AIF   (K'&SECONDARYKEY LE 0).ZG40A24  OK          00541400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00541500
.ZG40A24              AIF   (K'&ACTION LE 0).ZG40A25  OK                00541600
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00541700
.ZG40A25              AIF   (K'&VECTORINDEX LE 0).ZG40A26  OK           00541800
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00541900
.ZG40A26              AIF   (K'&DRIVEEXIT LE 0).ZG40A27  OK             00542000
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00542100
.ZG40A27              AIF   (K'&NOTIFICATION LE 0).ZG40A28  OK          00542200
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00542300
.ZG40A28              AIF   (K'&UNC LE 0).ZG40A29  OK                   00542400
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00542500
.ZG40A29              AIF   (K'&STARTINDEX LE 0).ZG40A30  OK            00542600
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00542700
.ZG40A30              AIF   (K'&ENDINDEX LE 0).ZG40A31  OK              00542800
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00542900
.ZG40A31              AIF   (K'&MOSVECTOR LE 0).ZG40A32  OK             00543000
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00543100
.ZG40A32              AIF   (K'&BUFNUM LE 0).ZG40A33  OK                00543200
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00543300
.ZG40A33              AIF   (K'&BUFINCRNUM LE 0).ZG40A34  OK            00543400
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00543500
.ZG40A34              AIF   (K'&BUFSIZE LE 0).ZG40A35  OK               00543600
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00543700
.ZG40A35              AIF   (K'&ZCVAL LE 0).ZG40A36  OK                 00543800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00543900
                      AIF  (K'&ZCVAL LE 160).ZG40A36A                   00544000
&ZCVAL                SETC '&ZCVAL'(1,160)                              00544100
&ZCVAL                SETC '&ZCVAL....'                                 00544200
.ZG40A36A             ANOP                                              00544300
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00544400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00544500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00544600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00544700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00544800
.ZG40A36              ANOP  ,                                           00544900
.*----------------------------------------------------------------***   00545000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00545100
                      AIF   (N'&LISTNUM LE 1).ZG42A  CK NUM             00545200
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           00545300
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00545400
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00545500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00545600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00545700
.ZG42A                ANOP  ,                                           00545800
.*-------------------------------------------------------------------   00545900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00546000
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00546100
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00546200
                      AIF   (N'&LISTNUM GT 1).ZG42B  MULTI PARMS        00546300
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00546400
.ZG42B                AIF   (K'&LISTNUM(1) GT 0).ZG42C                  00546500
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00546600
&ZMS                  SETC  ' '         *KRQDA*                         00546700
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00546800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00546900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00547000
.ZG42C                ANOP  ,                                           00547100
.*-------------------------------------------------------------------   00547200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00547300
                      AIF   (K'&ZXLISTNUM LE 0).ZG42R  NOT I/O          00547400
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG42R             00547500
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00547600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                00547700
                      AIF   (K'&ZCGPR GT 2).ZG42Q                       00547800
                      AIF   ('&ZCGPR' EQ '0').ZG42Q                     00547900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00548000
                      AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME   00548100
.ZG42P                ANOP  ,                                           00548200
                      AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC        00548300
                      AIF   ('&ZCGPR' LT '2').ZG42Q                     00548400
                      AIF   ('&ZCGPR' LE '12').ZG42R                    00548500
.ZG42Q                ANOP  ,                                           00548600
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           00548700
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00548800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00548900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00549000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00549100
.ZG42R                ANOP  ,                                           00549200
.*----------------------------------------------------------------***   00549300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00549400
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            00549500
                      AIF   (K'&BUFLIST LE 0).ZG45C                     00549600
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00549700
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   00549800
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   00549900
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      00550000
                      AIF   (N'&BUFLIST GT 1).ZG45A                     00550100
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              00550200
.ZG45A                AIF   (N'&BUFLIST LE 1).ZG45B  CK NUM             00550300
&ZMS                  SETC  '"BUFLIST='         *KPOSA* MNOTE           00550400
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00550500
&ZMS                  SETC  '&ZMS "BUFLIST"'                            00550600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00550700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00550800
.ZG45B                AIF   (K'&XBUFLIST GT 0).ZG45C  ONE PARM          00550900
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00551000
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00551100
&ZMS                  SETC  ' '         *KRQDA*                         00551200
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                00551300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00551400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00551500
.ZG45C                ANOP  ,                                           00551600
.*----------------------------------------------------------------***   00551700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00551800
                      AIF   (K'&BUFFER LE 0).ZG67D  NO ME KEY           00551900
                      AIF   (N'&BUFFER LE 1).ZG67A  CK NUM              00552000
&ZMS                  SETC  '"BUFFER='  *KPOSA* MNOTE                   00552100
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00552200
&ZMS                  SETC  '&ZMS "BUFFER"'                             00552300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00552400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00552500
.ZG67A                AIF   (K'&XDATAREA LE 0).ZG67B                    00552600
&ZMS                  SETC  '"BUFFER'   *KMEKA* MNOTE                   00552700
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00552800
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00552900
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          00553000
                      MNOTE 8,' &ZMS KEY.'                              00553100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00553200
                      AGO   .ZG67D                                      00553300
.*                                                                      00553400
.ZG67B                ANOP  ,                                           00553500
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00553600
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   00553700
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   00553800
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      00553900
                      AIF   (N'&BUFFER GT 1).ZG67C                      00554000
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              00554100
.ZG67C                AIF   (K'&XBUFFER GT 0).ZG67D  ONE PARM           00554200
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00554300
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 00554400
&ZMS                  SETC  ' '         *KRQDA*                         00554500
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 00554600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00554700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00554800
.ZG67D                ANOP  ,                                           00554900
.*------------------------------------------------------------------    00555000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00555100
                      AIF   (K'&XDATAREA GT 0).ZG76B                    00555200
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00555300
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00555400
&XDATAREA             SETC  ''          ENSURE NULL                     00555500
&XBUFLIST             SETC  ''          ENSURE NULL                     00555600
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       00555700
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00555800
&ZMS                  SETC  '&ZMS REQUIRED:'                            00555900
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            00556000
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           00556100
                      MNOTE 8,' &ZMS '                                  00556200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00556300
.ZG76B                ANOP  ,                                           00556400
.*-------------------------------------------------------------------   00556500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00556600
.ZG45                 AIF   ('&XDATAREA' NE 'BUFLIST').ZG67             00556700
.*-------------------------------------------------------------------   00556800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00556900
                      AIF   (K'&ZXBUFLIST LE 0).ZG45R  NOT I/O          00557000
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG45R             00557100
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                00557200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                00557300
                      AIF   (K'&ZCGPR GT 2).ZG45Q                       00557400
                      AIF   ('&ZCGPR' EQ '0').ZG45Q                     00557500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00557600
                      AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME   00557700
.ZG45P                ANOP  ,                                           00557800
                      AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC        00557900
                      AIF   ('&ZCGPR' LT '2').ZG45Q                     00558000
                      AIF   ('&ZCGPR' LE '12').ZG45R                    00558100
.ZG45Q                ANOP  ,                                           00558200
&ZMS                  SETC  '"BUFLIST='         *KGPRA* MNOTE           00558300
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00558400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00558500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00558600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00558700
.ZG45R                ANOP  ,                                           00558800
.*------------------------------------------------------------------    00558900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00559000
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            00559100
.*-------------------------------------------------------------------   00559200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00559300
.ZG48                 ANOP  ,                                           00559400
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG48A              00559500
&ZTLC                 SETC 'VIRTUAL'                                    00559600
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG60         00559700
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     00559800
                      AIF   (N'&BUFADDRTYPE LE 1).ZG48A  CK NUM         00559900
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           00560000
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00560100
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00560200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00560300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00560400
.ZG48A                ANOP  ,                                           00560500
.*------------------------------------------------------------------    00560600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00560700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00560800
.ZG48A0               AIF   (K'&BUFADDRSIZE LE 0).ZG48A1  OK            00560900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00561000
.ZG48A1               AIF   (K'&ZCVAL LE 0).ZG48A2  OK                  00561100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00561200
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           00561300
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00561400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00561500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00561600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00561700
.ZG48A2               ANOP  ,                                           00561800
.*------------------------------------------------------------------    00561900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00562000
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00562100
.*-------------------------------------------------------------------   00562200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00562300
.ZG51                 ANOP  ,                                           00562400
                      AIF   (K'&PAGEABLE(1) LE 0).ZG51A                 00562500
&ZTLC                 SETC 'YES'                                        00562600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG55            00562700
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00562800
                      AIF   (N'&PAGEABLE LE 1).ZG51A  CK NUM            00562900
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00563000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00563100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00563200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00563300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00563400
.ZG51A                ANOP  ,                                           00563500
.*----------------------------------------------------------------***   00563600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00563700
                      AIF   (N'&BUFSTGKEY LE 1).ZG53A  CK NUM           00563800
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           00563900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00564000
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00564100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00564200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00564300
.ZG53A                ANOP  ,                                           00564400
.*-------------------------------------------------------------------   00564500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00564600
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00564700
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00564800
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG53B  PARM          00564900
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00565000
                      AIF   (N'&BUFSTGKEY GT 1).ZG53B  MULTI PARMS      00565100
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00565200
.ZG53B                ANOP  ,                                           00565300
.*-------------------------------------------------------------------   00565400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00565500
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG53R  NOT I/O        00565600
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG53R                   00565700
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG53R           00565800
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00565900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                00566000
                      AIF   (K'&ZCGPR GT 2).ZG53Q                       00566100
                      AIF   ('&ZCGPR' EQ '0').ZG53Q                     00566200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00566300
                      AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME   00566400
.ZG53P                ANOP  ,                                           00566500
                      AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC        00566600
                      AIF   ('&ZCGPR' LT '2').ZG53Q                     00566700
                      AIF   ('&ZCGPR' LE '12').ZG53R                    00566800
.ZG53Q                ANOP  ,                                           00566900
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           00567000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00567100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00567200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00567300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00567400
.ZG53R                ANOP  ,                                           00567500
.*-------------------------------------------------------------------   00567600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00567700
.ZG55                 ANOP  ,                                           00567800
&ZTLC                 SETC 'NO'                                         00567900
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG56            00568000
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00568100
                      AIF   (N'&PAGEABLE LE 1).ZG55A  CK NUM            00568200
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00568300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00568400
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00568500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00568600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00568700
.ZG55A                ANOP  ,                                           00568800
.*------------------------------------------------------------------    00568900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00569000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00569100
.ZG55A0               AIF   (K'&BUFSTGKEY LE 0).ZG55A1  OK              00569200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00569300
.ZG55A1               AIF   (K'&ZCVAL LE 0).ZG55A2  OK                  00569400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00569500
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           00569600
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00569700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00569800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00569900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00570000
.ZG55A2               ANOP  ,                                           00570100
.*------------------------------------------------------------------    00570200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00570300
.ZG56                 ANOP  ,                                           00570400
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00570500
                      AIF   (K'&XPAGEABLE GT 0).ZG56E  VALID ARG        00570600
                      AIF   (T'&PAGEABLE EQ 'O').ZG56D  OMITTED         00570700
&ZASYSLNDX            SETA  0                                           00570800
.ZG56A                ANOP  ,           POSITIONAL MACRO KEY            00570900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00571000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG56C            00571100
&ZTLC                 SETC 'PAGEABLE'                                   00571200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG56A   00571300
.ZG56B                ANOP  ,                                           00571400
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00571500
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         00571600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00571700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00571800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00571900
                      AGO   .ZG56E                                      00572000
.ZG56C                ANOP  ,                                           00572100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00572200
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           00572300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00572400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00572500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00572600
&ZMS                  SETC  '&ZMS "YES"'                                00572700
&ZMS                  SETC  '&ZMS OR "NO".'                             00572800
                      MNOTE 8,' &ZMS '                                  00572900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00573000
                      AGO   .ZG56E                                      00573100
.ZG56D                ANOP  ,                                           00573200
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00573300
.ZG56E                ANOP  ,                                           00573400
.*----------------------------------------------------------------***   00573500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00573600
                      AIF   (N'&BUFALET LE 1).ZG58A  CK NUM             00573700
&ZMS                  SETC  '"BUFALET='         *KPOSA* MNOTE           00573800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00573900
&ZMS                  SETC  '&ZMS "BUFALET"'                            00574000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00574100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00574200
.ZG58A                ANOP  ,                                           00574300
.*-------------------------------------------------------------------   00574400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00574500
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   00574600
&XBUFALET             SETC  'NO_BUFALET'                                00574700
                      AIF   (K'&BUFALET(1) LE 0).ZG58B  PARM            00574800
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           00574900
                      AIF   (N'&BUFALET GT 1).ZG58B  MULTI PARMS        00575000
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   00575100
.ZG58B                ANOP  ,                                           00575200
.*-------------------------------------------------------------------   00575300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00575400
                      AIF   (K'&ZXBUFALET LE 0).ZG58R  NOT I/O          00575500
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG58R                      00575600
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG58R             00575700
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                00575800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                00575900
                      AIF   (K'&ZCGPR GT 2).ZG58Q                       00576000
                      AIF   ('&ZCGPR' EQ '0').ZG58Q                     00576100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00576200
                      AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME   00576300
.ZG58P                ANOP  ,                                           00576400
                      AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC        00576500
                      AIF   ('&ZCGPR' LT '2').ZG58Q                     00576600
                      AIF   ('&ZCGPR' LE '12').ZG58R                    00576700
.ZG58Q                ANOP  ,                                           00576800
&ZMS                  SETC  '"BUFALET='         *KGPRA* MNOTE           00576900
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00577000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00577100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00577200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00577300
.ZG58R                ANOP  ,                                           00577400
.*-------------------------------------------------------------------   00577500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00577600
.ZG60                 ANOP  ,                                           00577700
&ZTLC                 SETC 'REAL'                                       00577800
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG66         00577900
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     00578000
                      AIF   (N'&BUFADDRTYPE LE 1).ZG60A  CK NUM         00578100
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           00578200
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00578300
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00578400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00578500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00578600
.ZG60A                ANOP  ,                                           00578700
.*------------------------------------------------------------------    00578800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00578900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00579000
.ZG60A0               AIF   (K'&PAGEABLE LE 0).ZG60A1  OK               00579100
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00579200
.ZG60A1               AIF   (K'&BUFSTGKEY LE 0).ZG60A2  OK              00579300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00579400
.ZG60A2               AIF   (K'&BUFALET LE 0).ZG60A3  OK                00579500
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00579600
.ZG60A3               AIF   (K'&ZCVAL LE 0).ZG60A4  OK                  00579700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00579800
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           00579900
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00580000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00580100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00580200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00580300
.ZG60A4               ANOP  ,                                           00580400
.*------------------------------------------------------------------    00580500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00580600
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            00580700
.*-------------------------------------------------------------------   00580800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00580900
.ZG63                 ANOP  ,                                           00581000
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG63A              00581100
&ZTLC                 SETC '31'                                         00581200
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG64         00581300
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     00581400
                      AIF   (N'&BUFADDRSIZE LE 1).ZG63A  CK NUM         00581500
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           00581600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00581700
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00581800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00581900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00582000
.ZG63A                ANOP  ,                                           00582100
.*-------------------------------------------------------------------   00582200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00582300
.ZG64                 ANOP  ,                                           00582400
&ZTLC                 SETC '64'                                         00582500
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG65         00582600
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     00582700
                      AIF   (N'&BUFADDRSIZE LE 1).ZG64A  CK NUM         00582800
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           00582900
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00583000
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00583100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00583200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00583300
.ZG64A                ANOP  ,                                           00583400
.*------------------------------------------------------------------    00583500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00583600
.ZG65                 ANOP  ,                                           00583700
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   00583800
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG65E  VALID ARG     00583900
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG65D  OMITTED      00584000
&ZASYSLNDX            SETA  0                                           00584100
.ZG65A                ANOP  ,           POSITIONAL MACRO KEY            00584200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00584300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG65C            00584400
&ZTLC                 SETC 'BUFADDRSIZE'                                00584500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG65A   00584600
.ZG65B                ANOP  ,                                           00584700
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00584800
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE      00584900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00585000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00585100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00585200
                      AGO   .ZG65E                                      00585300
.ZG65C                ANOP  ,                                           00585400
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00585500
&ZMS                  SETC  '"BUFADDRSIZE='     *KUKWA* MNOTE           00585600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00585700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00585800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00585900
&ZMS                  SETC  '&ZMS "31"'                                 00586000
&ZMS                  SETC  '&ZMS OR "64".'                             00586100
                      MNOTE 8,' &ZMS '                                  00586200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00586300
                      AGO   .ZG65E                                      00586400
.ZG65D                ANOP  ,                                           00586500
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             00586600
.ZG65E                ANOP  ,                                           00586700
.*------------------------------------------------------------------    00586800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00586900
.ZG66                 ANOP  ,                                           00587000
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   00587100
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG66E  VALID ARG     00587200
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG66D  OMITTED      00587300
&ZASYSLNDX            SETA  0                                           00587400
.ZG66A                ANOP  ,           POSITIONAL MACRO KEY            00587500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00587600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG66C            00587700
&ZTLC                 SETC 'BUFADDRTYPE'                                00587800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG66A   00587900
.ZG66B                ANOP  ,                                           00588000
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00588100
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE      00588200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00588300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00588400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00588500
                      AGO   .ZG66E                                      00588600
.ZG66C                ANOP  ,                                           00588700
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00588800
&ZMS                  SETC  '"BUFADDRTYPE='     *KUKWA* MNOTE           00588900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00589000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00589100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00589200
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            00589300
&ZMS                  SETC  '&ZMS OR "REAL".'                           00589400
                      MNOTE 8,' &ZMS '                                  00589500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00589600
                      AGO   .ZG66E                                      00589700
.ZG66D                ANOP  ,                                           00589800
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             00589900
.ZG66E                ANOP  ,                                           00590000
.*-------------------------------------------------------------------   00590100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00590200
.ZG67                 AIF   ('&XDATAREA' NE 'BUFFER').ZG76              00590300
.*-------------------------------------------------------------------   00590400
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00590500
&ZCVAL                SETC ''           ERROR KEY FIELD                 00590600
.ZG67I0               AIF   (K'&BUFADDRTYPE LE 0).ZG67I1                00590700
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         00590800
.ZG67I1               AIF   (K'&BUFALET LE 0).ZG67I2                    00590900
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          00591000
.ZG67I2               AIF   (K'&BUFADDRSIZE LE 0).ZG67I3                00591100
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         00591200
.ZG67I3               AIF   (K'&ZCVAL LE 0).ZG67J  KEY                  00591300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00591400
&ZMS                  SETC  '"BUFFER'   *KMEIA* MNOTE                   00591500
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00591600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00591700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00591800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00591900
.ZG67J                ANOP  ,                                           00592000
.*-------------------------------------------------------------------   00592100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00592200
                      AIF   (K'&ZXBUFFER LE 0).ZG67R  NOT I/O           00592300
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG67R              00592400
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  00592500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG67P                00592600
                      AIF   (K'&ZCGPR GT 2).ZG67Q                       00592700
                      AIF   ('&ZCGPR' EQ '0').ZG67Q                     00592800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00592900
                      AIF   (T'&ZCGPR NE 'N').ZG67Q  INVALID REG NAME   00593000
.ZG67P                ANOP  ,                                           00593100
                      AIF   (T'&ZCGPR NE 'N').ZG67R  NON NUMERIC        00593200
                      AIF   ('&ZCGPR' LT '2').ZG67Q                     00593300
                      AIF   ('&ZCGPR' LE '12').ZG67R                    00593400
.ZG67Q                ANOP  ,                                           00593500
&ZMS                  SETC  '"BUFFER='  *KGPRA* MNOTE                   00593600
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00593700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00593800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00593900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00594000
.ZG67R                ANOP  ,                                           00594100
.*------------------------------------------------------------------    00594200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00594300
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00594400
.*-------------------------------------------------------------------   00594500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00594600
.ZG70                 ANOP  ,                                           00594700
                      AIF   (K'&PAGEABLE(1) LE 0).ZG70A                 00594800
&ZTLC                 SETC 'YES'                                        00594900
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG74            00595000
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00595100
                      AIF   (N'&PAGEABLE LE 1).ZG70A  CK NUM            00595200
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00595300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00595400
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00595500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00595600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00595700
.ZG70A                ANOP  ,                                           00595800
.*----------------------------------------------------------------***   00595900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00596000
                      AIF   (N'&BUFSTGKEY LE 1).ZG72A  CK NUM           00596100
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           00596200
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00596300
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00596400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00596500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00596600
.ZG72A                ANOP  ,                                           00596700
.*-------------------------------------------------------------------   00596800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00596900
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00597000
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00597100
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG72B  PARM          00597200
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00597300
                      AIF   (N'&BUFSTGKEY GT 1).ZG72B  MULTI PARMS      00597400
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00597500
.ZG72B                ANOP  ,                                           00597600
.*-------------------------------------------------------------------   00597700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00597800
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG72R  NOT I/O        00597900
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG72R                   00598000
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG72R           00598100
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00598200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                00598300
                      AIF   (K'&ZCGPR GT 2).ZG72Q                       00598400
                      AIF   ('&ZCGPR' EQ '0').ZG72Q                     00598500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00598600
                      AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME   00598700
.ZG72P                ANOP  ,                                           00598800
                      AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC        00598900
                      AIF   ('&ZCGPR' LT '2').ZG72Q                     00599000
                      AIF   ('&ZCGPR' LE '12').ZG72R                    00599100
.ZG72Q                ANOP  ,                                           00599200
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           00599300
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00599400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00599500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00599600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00599700
.ZG72R                ANOP  ,                                           00599800
.*-------------------------------------------------------------------   00599900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00600000
.ZG74                 ANOP  ,                                           00600100
&ZTLC                 SETC 'NO'                                         00600200
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG75            00600300
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00600400
                      AIF   (N'&PAGEABLE LE 1).ZG74A  CK NUM            00600500
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00600600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00600700
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00600800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00600900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00601000
.ZG74A                ANOP  ,                                           00601100
.*------------------------------------------------------------------    00601200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00601300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00601400
.ZG74A0               AIF   (K'&BUFSTGKEY LE 0).ZG74A1  OK              00601500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00601600
.ZG74A1               AIF   (K'&ZCVAL LE 0).ZG74A2  OK                  00601700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00601800
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           00601900
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00602000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00602100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00602200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00602300
.ZG74A2               ANOP  ,                                           00602400
.*------------------------------------------------------------------    00602500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00602600
.ZG75                 ANOP  ,                                           00602700
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00602800
                      AIF   (K'&XPAGEABLE GT 0).ZG75E  VALID ARG        00602900
                      AIF   (T'&PAGEABLE EQ 'O').ZG75D  OMITTED         00603000
&ZASYSLNDX            SETA  0                                           00603100
.ZG75A                ANOP  ,           POSITIONAL MACRO KEY            00603200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00603300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG75C            00603400
&ZTLC                 SETC 'PAGEABLE'                                   00603500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG75A   00603600
.ZG75B                ANOP  ,                                           00603700
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00603800
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         00603900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00604000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00604100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00604200
                      AGO   .ZG75E                                      00604300
.ZG75C                ANOP  ,                                           00604400
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00604500
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           00604600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00604700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00604800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00604900
&ZMS                  SETC  '&ZMS "YES"'                                00605000
&ZMS                  SETC  '&ZMS OR "NO".'                             00605100
                      MNOTE 8,' &ZMS '                                  00605200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00605300
                      AGO   .ZG75E                                      00605400
.ZG75D                ANOP  ,                                           00605500
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00605600
.ZG75E                ANOP  ,                                           00605700
.*-------------------------------------------------------------------   00605800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00605900
.ZG76                 ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     00606000
.*-------------------------------------------------------------------   00606100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00606200
.ZG77                 ANOP  ,                                           00606300
&ZTLC                 SETC 'WRITE_LCONTROLS'                            00606400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG138            00606500
&XREQUEST             SETC  'WRITE_LCONTROLS'   SET KEYWORD             00606600
                      AIF   (N'&REQUEST LE 1).ZG77A  CK NUM             00606700
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00606800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00606900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00607000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00607100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00607200
.ZG77A                ANOP  ,                                           00607300
.*------------------------------------------------------------------    00607400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00607500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00607600
.ZG77A0               AIF   (K'&LOCKINDEX LE 0).ZG77A1  OK              00607700
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00607800
.ZG77A1               AIF   (K'&LOCKOPER LE 0).ZG77A2  OK               00607900
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00608000
.ZG77A2               AIF   (K'&LOCKMODE LE 0).ZG77A3  OK               00608100
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00608200
.ZG77A3               AIF   (K'&LOCKCOMP LE 0).ZG77A4  OK               00608300
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00608400
.ZG77A4               AIF   (K'&LOCKDATA LE 0).ZG77A5  OK               00608500
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00608600
.ZG77A5               AIF   (K'&BUFLIST LE 0).ZG77A6  OK                00608700
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00608800
.ZG77A6               AIF   (K'&BUFADDRTYPE LE 0).ZG77A7  OK            00608900
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00609000
.ZG77A7               AIF   (K'&PAGEABLE LE 0).ZG77A8  OK               00609100
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00609200
.ZG77A8               AIF   (K'&BUFSTGKEY LE 0).ZG77A9  OK              00609300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00609400
.ZG77A9               AIF   (K'&BUFALET LE 0).ZG77A10  OK               00609500
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00609600
.ZG77A10              AIF   (K'&BUFADDRSIZE LE 0).ZG77A11  OK           00609700
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00609800
.ZG77A11              AIF   (K'&BUFFER LE 0).ZG77A12  OK                00609900
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00610000
.ZG77A12              AIF   (K'&KEYTYPE LE 0).ZG77A13  OK               00610100
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00610200
.ZG77A13              AIF   (K'&ENTRYKEY LE 0).ZG77A14  OK              00610300
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00610400
.ZG77A14              AIF   (K'&SECONDARYKEY LE 0).ZG77A15  OK          00610500
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00610600
.ZG77A15              AIF   (K'&ACTION LE 0).ZG77A16  OK                00610700
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00610800
.ZG77A16              AIF   (K'&VECTORINDEX LE 0).ZG77A17  OK           00610900
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00611000
.ZG77A17              AIF   (K'&DRIVEEXIT LE 0).ZG77A18  OK             00611100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00611200
.ZG77A18              AIF   (K'&NOTIFICATION LE 0).ZG77A19  OK          00611300
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00611400
.ZG77A19              AIF   (K'&UNC LE 0).ZG77A20  OK                   00611500
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00611600
.ZG77A20              AIF   (K'&STARTINDEX LE 0).ZG77A21  OK            00611700
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00611800
.ZG77A21              AIF   (K'&ENDINDEX LE 0).ZG77A22  OK              00611900
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00612000
.ZG77A22              AIF   (K'&MOSVECTOR LE 0).ZG77A23  OK             00612100
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00612200
.ZG77A23              AIF   (K'&BUFNUM LE 0).ZG77A24  OK                00612300
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00612400
.ZG77A24              AIF   (K'&BUFINCRNUM LE 0).ZG77A25  OK            00612500
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00612600
.ZG77A25              AIF   (K'&BUFSIZE LE 0).ZG77A26  OK               00612700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00612800
.ZG77A26              AIF   (K'&ZCVAL LE 0).ZG77A27  OK                 00612900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00613000
                      AIF  (K'&ZCVAL LE 160).ZG77A27A                   00613100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00613200
&ZCVAL                SETC '&ZCVAL....'                                 00613300
.ZG77A27A             ANOP                                              00613400
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00613500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00613600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00613700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00613800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00613900
.ZG77A27              ANOP  ,                                           00614000
.*----------------------------------------------------------------***   00614100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00614200
                      AIF   (N'&LISTNUM LE 1).ZG79A  CK NUM             00614300
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           00614400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00614500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00614600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00614700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00614800
.ZG79A                ANOP  ,                                           00614900
.*-------------------------------------------------------------------   00615000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00615100
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00615200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00615300
                      AIF   (N'&LISTNUM GT 1).ZG79B  MULTI PARMS        00615400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00615500
.ZG79B                AIF   (K'&LISTNUM(1) GT 0).ZG79C                  00615600
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00615700
&ZMS                  SETC  ' '         *KRQDA*                         00615800
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00615900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00616000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00616100
.ZG79C                ANOP  ,                                           00616200
.*-------------------------------------------------------------------   00616300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00616400
                      AIF   (K'&ZXLISTNUM LE 0).ZG79R  NOT I/O          00616500
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG79R             00616600
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00616700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                00616800
                      AIF   (K'&ZCGPR GT 2).ZG79Q                       00616900
                      AIF   ('&ZCGPR' EQ '0').ZG79Q                     00617000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00617100
                      AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME   00617200
.ZG79P                ANOP  ,                                           00617300
                      AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC        00617400
                      AIF   ('&ZCGPR' LT '2').ZG79Q                     00617500
                      AIF   ('&ZCGPR' LE '12').ZG79R                    00617600
.ZG79Q                ANOP  ,                                           00617700
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           00617800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00617900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00618000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00618100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00618200
.ZG79R                ANOP  ,                                           00618300
.*----------------------------------------------------------------***   00618400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00618500
                      AIF   (N'&AUTHCOMP LE 1).ZG82A  CK NUM            00618600
&ZMS                  SETC  '"AUTHCOMP='        *KPOSA* MNOTE           00618700
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           00618800
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           00618900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00619000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00619100
.ZG82A                ANOP  ,                                           00619200
.*-------------------------------------------------------------------   00619300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00619400
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00619500
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           00619600
                      AIF   (N'&AUTHCOMP GT 1).ZG82B  MULTI PARMS       00619700
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           00619800
.ZG82B                AIF   (K'&AUTHCOMP(1) GT 0).ZG82C                 00619900
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 00620000
&ZMS                  SETC  ' '         *KRQDA*                         00620100
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               00620200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00620300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00620400
.ZG82C                ANOP  ,                                           00620500
.*-------------------------------------------------------------------   00620600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00620700
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG82R  NOT I/O         00620800
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG82R            00620900
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              00621000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                00621100
                      AIF   (K'&ZCGPR GT 2).ZG82Q                       00621200
                      AIF   ('&ZCGPR' EQ '0').ZG82Q                     00621300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00621400
                      AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME   00621500
.ZG82P                ANOP  ,                                           00621600
                      AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC        00621700
                      AIF   ('&ZCGPR' LT '2').ZG82Q                     00621800
                      AIF   ('&ZCGPR' LE '12').ZG82R                    00621900
.ZG82Q                ANOP  ,                                           00622000
&ZMS                  SETC  '"AUTHCOMP='        *KGPRA* MNOTE           00622100
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           00622200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00622300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00622400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00622500
.ZG82R                ANOP  ,                                           00622600
.*----------------------------------------------------------------***   00622700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00622800
                      AIF   (N'&NEWAUTH LE 1).ZG85A  CK NUM             00622900
&ZMS                  SETC  '"NEWAUTH='         *KPOSA* MNOTE           00623000
&ZMS                  SETC  '&ZMS.&NEWAUTH"'                            00623100
&ZMS                  SETC  '&ZMS "NEWAUTH"'                            00623200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00623300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00623400
.ZG85A                ANOP  ,                                           00623500
.*-------------------------------------------------------------------   00623600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00623700
&ZXNEWAUTH            SETC  'INPUT'     SET IN/OUTPUT                   00623800
&XNEWAUTH             SETC  'NO_NEWAUTH'                                00623900
                      AIF   (K'&NEWAUTH(1) LE 0).ZG85B  PARM            00624000
&XNEWAUTH             SETC  '&NEWAUTH(1)'       SET XVARIABLE           00624100
                      AIF   (N'&NEWAUTH GT 1).ZG85B  MULTI PARMS        00624200
&XNEWAUTH             SETC  '&NEWAUTH'  SET XVARIABLE                   00624300
.ZG85B                ANOP  ,                                           00624400
.*-------------------------------------------------------------------   00624500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00624600
                      AIF   (K'&ZXNEWAUTH LE 0).ZG85R  NOT I/O          00624700
         AIF   ('&XNEWAUTH' EQ 'NO_NEWAUTH').ZG85R                      00624800
                      AIF   ('&XNEWAUTH'(1,1) NE '(').ZG85R             00624900
&ZCGPR                SETC  '&XNEWAUTH'(2,K'&XNEWAUTH-2)                00625000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG85P                00625100
                      AIF   (K'&ZCGPR GT 2).ZG85Q                       00625200
                      AIF   ('&ZCGPR' EQ '0').ZG85Q                     00625300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00625400
                      AIF   (T'&ZCGPR NE 'N').ZG85Q  INVALID REG NAME   00625500
.ZG85P                ANOP  ,                                           00625600
                      AIF   (T'&ZCGPR NE 'N').ZG85R  NON NUMERIC        00625700
                      AIF   ('&ZCGPR' LT '2').ZG85Q                     00625800
                      AIF   ('&ZCGPR' LE '12').ZG85R                    00625900
.ZG85Q                ANOP  ,                                           00626000
&ZMS                  SETC  '"NEWAUTH='         *KGPRA* MNOTE           00626100
&ZMS                  SETC  '&ZMS.&NEWAUTH"'                            00626200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00626300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00626400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00626500
.ZG85R                ANOP  ,                                           00626600
.*----------------------------------------------------------------***   00626700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00626800
                      AIF   (N'&LISTLIMIT LE 1).ZG88A  CK NUM           00626900
&ZMS                  SETC  '"LISTLIMIT='       *KPOSA* MNOTE           00627000
&ZMS                  SETC  '&ZMS.&LISTLIMIT"'                          00627100
&ZMS                  SETC  '&ZMS "LISTLIMIT"'                          00627200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00627300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00627400
.ZG88A                ANOP  ,                                           00627500
.*-------------------------------------------------------------------   00627600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00627700
&ZXLISTLIMIT          SETC  'INPUT'     SET IN/OUTPUT                   00627800
&XLISTLIMIT           SETC  'NO_LISTLIMIT'                              00627900
                      AIF   (K'&LISTLIMIT(1) LE 0).ZG88B  PARM          00628000
&XLISTLIMIT           SETC  '&LISTLIMIT(1)'     SET XVARIABLE           00628100
                      AIF   (N'&LISTLIMIT GT 1).ZG88B  MULTI PARMS      00628200
&XLISTLIMIT           SETC  '&LISTLIMIT'        SET XVARIABLE           00628300
.ZG88B                ANOP  ,                                           00628400
.*-------------------------------------------------------------------   00628500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00628600
                      AIF   (K'&ZXLISTLIMIT LE 0).ZG88R  NOT I/O        00628700
         AIF   ('&XLISTLIMIT' EQ 'NO_LISTLIMIT').ZG88R                  00628800
                      AIF   ('&XLISTLIMIT'(1,1) NE '(').ZG88R           00628900
&ZCGPR                SETC  '&XLISTLIMIT'(2,K'&XLISTLIMIT-2)            00629000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                00629100
                      AIF   (K'&ZCGPR GT 2).ZG88Q                       00629200
                      AIF   ('&ZCGPR' EQ '0').ZG88Q                     00629300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00629400
                      AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME   00629500
.ZG88P                ANOP  ,                                           00629600
                      AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC        00629700
                      AIF   ('&ZCGPR' LT '2').ZG88Q                     00629800
                      AIF   ('&ZCGPR' LE '12').ZG88R                    00629900
.ZG88Q                ANOP  ,                                           00630000
&ZMS                  SETC  '"LISTLIMIT='       *KGPRA* MNOTE           00630100
&ZMS                  SETC  '&ZMS.&LISTLIMIT"'                          00630200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00630300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00630400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00630500
.ZG88R                ANOP  ,                                           00630600
.*----------------------------------------------------------------***   00630700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00630800
                      AIF   (N'&LISTDESC LE 1).ZG91A  CK NUM            00630900
&ZMS                  SETC  '"LISTDESC='        *KPOSA* MNOTE           00631000
&ZMS                  SETC  '&ZMS.&LISTDESC"'                           00631100
&ZMS                  SETC  '&ZMS "LISTDESC"'                           00631200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00631300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00631400
.ZG91A                ANOP  ,                                           00631500
.*-------------------------------------------------------------------   00631600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00631700
&ZXLISTDESC           SETC  'INPUT'     SET IN/OUTPUT                   00631800
&XLISTDESC            SETC  'NO_LISTDESC'                               00631900
                      AIF   (K'&LISTDESC(1) LE 0).ZG91B  PARM           00632000
&XLISTDESC            SETC  '&LISTDESC(1)'      SET XVARIABLE           00632100
                      AIF   (N'&LISTDESC GT 1).ZG91B  MULTI PARMS       00632200
&XLISTDESC            SETC  '&LISTDESC'         SET XVARIABLE           00632300
.ZG91B                ANOP  ,                                           00632400
.*-------------------------------------------------------------------   00632500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00632600
                      AIF   (K'&ZXLISTDESC LE 0).ZG91R  NOT I/O         00632700
         AIF   ('&XLISTDESC' EQ 'NO_LISTDESC').ZG91R                    00632800
                      AIF   ('&XLISTDESC'(1,1) NE '(').ZG91R            00632900
&ZCGPR                SETC  '&XLISTDESC'(2,K'&XLISTDESC-2)              00633000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG91P                00633100
                      AIF   (K'&ZCGPR GT 2).ZG91Q                       00633200
                      AIF   ('&ZCGPR' EQ '0').ZG91Q                     00633300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00633400
                      AIF   (T'&ZCGPR NE 'N').ZG91Q  INVALID REG NAME   00633500
.ZG91P                ANOP  ,                                           00633600
                      AIF   (T'&ZCGPR NE 'N').ZG91R  NON NUMERIC        00633700
                      AIF   ('&ZCGPR' LT '2').ZG91Q                     00633800
                      AIF   ('&ZCGPR' LE '12').ZG91R                    00633900
.ZG91Q                ANOP  ,                                           00634000
&ZMS                  SETC  '"LISTDESC='        *KGPRA* MNOTE           00634100
&ZMS                  SETC  '&ZMS.&LISTDESC"'                           00634200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00634300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00634400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00634500
.ZG91R                ANOP  ,                                           00634600
.*----------------------------------------------------------------***   00634700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00634800
                      AIF   (N'&LISTKEY LE 1).ZG94A  CK NUM             00634900
&ZMS                  SETC  '"LISTKEY='         *KPOSA* MNOTE           00635000
&ZMS                  SETC  '&ZMS.&LISTKEY"'                            00635100
&ZMS                  SETC  '&ZMS "LISTKEY"'                            00635200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00635300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00635400
.ZG94A                ANOP  ,                                           00635500
.*-------------------------------------------------------------------   00635600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00635700
&ZXLISTKEY            SETC  'INPUT'     SET IN/OUTPUT                   00635800
&XLISTKEY             SETC  'NO_LISTKEY'                                00635900
                      AIF   (K'&LISTKEY(1) LE 0).ZG94B  PARM            00636000
&XLISTKEY             SETC  '&LISTKEY(1)'       SET XVARIABLE           00636100
                      AIF   (N'&LISTKEY GT 1).ZG94B  MULTI PARMS        00636200
&XLISTKEY             SETC  '&LISTKEY'  SET XVARIABLE                   00636300
.ZG94B                ANOP  ,                                           00636400
.*-------------------------------------------------------------------   00636500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00636600
                      AIF   (K'&ZXLISTKEY LE 0).ZG94R  NOT I/O          00636700
         AIF   ('&XLISTKEY' EQ 'NO_LISTKEY').ZG94R                      00636800
                      AIF   ('&XLISTKEY'(1,1) NE '(').ZG94R             00636900
&ZCGPR                SETC  '&XLISTKEY'(2,K'&XLISTKEY-2)                00637000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG94P                00637100
                      AIF   (K'&ZCGPR GT 2).ZG94Q                       00637200
                      AIF   ('&ZCGPR' EQ '0').ZG94Q                     00637300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00637400
                      AIF   (T'&ZCGPR NE 'N').ZG94Q  INVALID REG NAME   00637500
.ZG94P                ANOP  ,                                           00637600
                      AIF   (T'&ZCGPR NE 'N').ZG94R  NON NUMERIC        00637700
                      AIF   ('&ZCGPR' LT '2').ZG94Q                     00637800
                      AIF   ('&ZCGPR' LE '12').ZG94R                    00637900
.ZG94Q                ANOP  ,                                           00638000
&ZMS                  SETC  '"LISTKEY='         *KGPRA* MNOTE           00638100
&ZMS                  SETC  '&ZMS.&LISTKEY"'                            00638200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00638300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00638400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00638500
.ZG94R                ANOP  ,                                           00638600
.*----------------------------------------------------------------***   00638700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00638800
                      AIF   (N'&MAXLISTKEY LE 1).ZG97A  CK NUM          00638900
&ZMS                  SETC  '"MAXLISTKEY='      *KPOSA* MNOTE           00639000
&ZMS                  SETC  '&ZMS.&MAXLISTKEY"'                         00639100
&ZMS                  SETC  '&ZMS "MAXLISTKEY"'                         00639200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00639300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00639400
.ZG97A                ANOP  ,                                           00639500
.*-------------------------------------------------------------------   00639600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00639700
&ZXMAXLISTKEY         SETC  'INPUT'     SET IN/OUTPUT                   00639800
&XMAXLISTKEY          SETC  'NO_MAXLISTKEY'                             00639900
                      AIF   (K'&MAXLISTKEY(1) LE 0).ZG97B  PARM         00640000
&XMAXLISTKEY          SETC  '&MAXLISTKEY(1)'    SET XVARIABLE           00640100
                      AIF   (N'&MAXLISTKEY GT 1).ZG97B  MULTI PARMS     00640200
&XMAXLISTKEY          SETC  '&MAXLISTKEY'       SET XVARIABLE           00640300
.ZG97B                ANOP  ,                                           00640400
.*-------------------------------------------------------------------   00640500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00640600
                      AIF   (K'&ZXMAXLISTKEY LE 0).ZG97R  NOT I/O       00640700
         AIF   ('&XMAXLISTKEY' EQ 'NO_MAXLISTKEY').ZG97R                00640800
                      AIF   ('&XMAXLISTKEY'(1,1) NE '(').ZG97R          00640900
&ZCGPR                SETC  '&XMAXLISTKEY'(2,K'&XMAXLISTKEY-2)          00641000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                00641100
                      AIF   (K'&ZCGPR GT 2).ZG97Q                       00641200
                      AIF   ('&ZCGPR' EQ '0').ZG97Q                     00641300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00641400
                      AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME   00641500
.ZG97P                ANOP  ,                                           00641600
                      AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC        00641700
                      AIF   ('&ZCGPR' LT '2').ZG97Q                     00641800
                      AIF   ('&ZCGPR' LE '12').ZG97R                    00641900
.ZG97Q                ANOP  ,                                           00642000
&ZMS                  SETC  '"MAXLISTKEY='      *KGPRA* MNOTE           00642100
&ZMS                  SETC  '&ZMS.&MAXLISTKEY"'                         00642200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00642300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00642400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00642500
.ZG97R                ANOP  ,                                           00642600
.*----------------------------------------------------------------***   00642700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00642800
                      AIF   (N'&SETCURSOR LE 1).ZG100A  CK NUM          00642900
&ZMS                  SETC  '"SETCURSOR='       *KPOSA* MNOTE           00643000
&ZMS                  SETC  '&ZMS.&SETCURSOR"'                          00643100
&ZMS                  SETC  '&ZMS "SETCURSOR"'                          00643200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00643300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00643400
.ZG100A               ANOP  ,                                           00643500
.*-------------------------------------------------------------------   00643600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00643700
&XSETCURSOR           SETC  ''          INITIALIZE XVARIABLE            00643800
.ZG101A   AIF   ('&SETCURSOR(1)' NE 'NO_SETCURSOR').ZG102A              00643900
&XSETCURSOR           SETC  'NO_SETCURSOR'      SET KEYWORD             00644000
.*-------------------------------------------------------------------   00644100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00644200
.ZG102A   AIF   ('&SETCURSOR(1)' NE 'HEAD').ZG103A                      00644300
&XSETCURSOR           SETC  'HEAD'      SET KEYWORD                     00644400
.*-------------------------------------------------------------------   00644500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00644600
.ZG103A   AIF   ('&SETCURSOR(1)' NE 'TAIL').ZG104A                      00644700
&XSETCURSOR           SETC  'TAIL'      SET KEYWORD                     00644800
.*-------------------------------------------------------------------   00644900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00645000
.ZG104A               AIF   (K'&XSETCURSOR GT 0).ZG104C  KEYWORD        00645100
                      AIF   (K'&SETCURSOR(1) LE 0).ZG104B               00645200
&ZMS                  SETC  '"SETCURSOR='       *KUKWA* MNOTE           00645300
&ZMS                  SETC  '&ZMS.&SETCURSOR"'                          00645400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00645500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00645600
&ZMS                  SETC  '&ZMS "NO_SETCURSOR",'                      00645700
&ZMS                  SETC  '&ZMS "HEAD",'                              00645800
&ZMS                  SETC  '&ZMS OR "TAIL".'                           00645900
                      MNOTE 8,' &ZMS '                                  00646000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00646100
.ZG104B               ANOP  ,                                           00646200
&XSETCURSOR           SETC  'NO_SETCURSOR'      SET DEFAULT KEYWORD     00646300
.ZG104C               ANOP  ,                                           00646400
&ZXSETCURSOR          SETC  'INPUT'     SET IN/OUTPUT                   00646500
.*------------------------------------------------------------------    00646600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00646700
&XKEYRANGE            SETC  ''          INITIALIZE XVARIABLE            00646800
.*-------------------------------------------------------------------   00646900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00647000
.ZG107                ANOP  ,                                           00647100
                      AIF   (K'&KEYRANGE(1) LE 0).ZG107A                00647200
&ZTLC                 SETC 'NO_CHANGE'                                  00647300
                      AIF   ('&KEYRANGE(1)' NE '&ZTLC').ZG108           00647400
&XKEYRANGE            SETC  'NO_CHANGE'         SET KEYWORD             00647500
                      AIF   (N'&KEYRANGE LE 1).ZG107A  CK NUM           00647600
&ZMS                  SETC  '"KEYRANGE='        *KPOSA* MNOTE           00647700
&ZMS                  SETC  '&ZMS.&KEYRANGE"'                           00647800
&ZMS                  SETC  '&ZMS "KEYRANGE"'                           00647900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00648000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00648100
.ZG107A               ANOP  ,                                           00648200
.*------------------------------------------------------------------    00648300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00648400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00648500
.ZG107A0              AIF   (K'&KEYRANGESTART LE 0).ZG107A1  OK         00648600
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00648700
.ZG107A1              AIF   (K'&KEYRANGEEND LE 0).ZG107A2  OK           00648800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00648900
.ZG107A2              AIF   (K'&ZCVAL LE 0).ZG107A3  OK                 00649000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00649100
&ZMS                  SETC  '"KEYRANGE'         *KMEIA* MNOTE           00649200
&ZMS                  SETC  '&ZMS.=&KEYRANGE"'                          00649300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00649400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00649500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00649600
.ZG107A3              ANOP  ,                                           00649700
.*-------------------------------------------------------------------   00649800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00649900
.ZG108                ANOP  ,                                           00650000
&ZTLC                 SETC 'SET'                                        00650100
                      AIF   ('&KEYRANGE(1)' NE '&ZTLC').ZG115           00650200
&XKEYRANGE            SETC  'SET'       SET KEYWORD                     00650300
                      AIF   (N'&KEYRANGE LE 1).ZG108A  CK NUM           00650400
&ZMS                  SETC  '"KEYRANGE='        *KPOSA* MNOTE           00650500
&ZMS                  SETC  '&ZMS.&KEYRANGE"'                           00650600
&ZMS                  SETC  '&ZMS "KEYRANGE"'                           00650700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00650800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00650900
.ZG108A               ANOP  ,                                           00651000
.*----------------------------------------------------------------***   00651100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00651200
                      AIF   (N'&KEYRANGESTART LE 1).ZG110A  CK NUM      00651300
&ZMS                  SETC  '"KEYRANGESTART='   *KPOSA* MNOTE           00651400
&ZMS                  SETC  '&ZMS.&KEYRANGESTART"'                      00651500
&ZMS                  SETC  '&ZMS "KEYRANGESTART"'                      00651600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00651700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00651800
.ZG110A               ANOP  ,                                           00651900
.*-------------------------------------------------------------------   00652000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00652100
&ZXKEYRANGESTART      SETC  'INPUT'     SET IN/OUTPUT                   00652200
&XKEYRANGESTART       SETC  '&KEYRANGESTART(1)'  SET XVARIABLE          00652300
                      AIF   (N'&KEYRANGESTART GT 1).ZG110B  MULTI PARMS 00652400
&XKEYRANGESTART       SETC  '&KEYRANGESTART'    SET XVARIABLE           00652500
.ZG110B               AIF   (K'&KEYRANGESTART(1) GT 0).ZG110C           00652600
&ZXKEYRANGESTART      SETC  ''          RESET IN/OUTPUT                 00652700
&ZMS                  SETC  'WHEN "SET" IS SPECIFIED'  *KRQDA*          00652800
&ZMS                  SETC  '&ZMS , "KEYRANGESTART" KEY AND ITS'        00652900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00653000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00653100
.ZG110C               ANOP  ,                                           00653200
.*-------------------------------------------------------------------   00653300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00653400
                      AIF   (K'&ZXKEYRANGESTART LE 0).ZG110R  NOT I/O   00653500
                      AIF   ('&XKEYRANGESTART'(1,1) NE '(').ZG110R      00653600
&ZCGPR                SETC  '&XKEYRANGESTART'(2,K'&XKEYRANGESTART-2)    00653700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG110P               00653800
                      AIF   (K'&ZCGPR GT 2).ZG110Q                      00653900
                      AIF   ('&ZCGPR' EQ '0').ZG110Q                    00654000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00654100
                      AIF   (T'&ZCGPR NE 'N').ZG110Q  INVALID REG NAME  00654200
.ZG110P               ANOP  ,                                           00654300
                      AIF   (T'&ZCGPR NE 'N').ZG110R  NON NUMERIC       00654400
                      AIF   ('&ZCGPR' LT '2').ZG110Q                    00654500
                      AIF   ('&ZCGPR' LE '12').ZG110R                   00654600
.ZG110Q               ANOP  ,                                           00654700
&ZMS                  SETC  '"KEYRANGESTART='   *KGPRA* MNOTE           00654800
&ZMS                  SETC  '&ZMS.&KEYRANGESTART"'                      00654900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00655000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00655100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00655200
.ZG110R               ANOP  ,                                           00655300
.*----------------------------------------------------------------***   00655400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00655500
                      AIF   (N'&KEYRANGEEND LE 1).ZG113A  CK NUM        00655600
&ZMS                  SETC  '"KEYRANGEEND='     *KPOSA* MNOTE           00655700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        00655800
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        00655900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00656000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00656100
.ZG113A               ANOP  ,                                           00656200
.*-------------------------------------------------------------------   00656300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00656400
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   00656500
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           00656600
                      AIF   (N'&KEYRANGEEND GT 1).ZG113B  MULTI PARMS   00656700
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           00656800
.ZG113B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG113C             00656900
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 00657000
&ZMS                  SETC  'WHEN "SET" IS SPECIFIED'  *KRQDA*          00657100
&ZMS                  SETC  '&ZMS , "KEYRANGEEND" KEY AND ITS'          00657200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00657300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00657400
.ZG113C               ANOP  ,                                           00657500
.*-------------------------------------------------------------------   00657600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00657700
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG113R  NOT I/O     00657800
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG113R        00657900
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        00658000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG113P               00658100
                      AIF   (K'&ZCGPR GT 2).ZG113Q                      00658200
                      AIF   ('&ZCGPR' EQ '0').ZG113Q                    00658300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00658400
                      AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME  00658500
.ZG113P               ANOP  ,                                           00658600
                      AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC       00658700
                      AIF   ('&ZCGPR' LT '2').ZG113Q                    00658800
                      AIF   ('&ZCGPR' LE '12').ZG113R                   00658900
.ZG113Q               ANOP  ,                                           00659000
&ZMS                  SETC  '"KEYRANGEEND='     *KGPRA* MNOTE           00659100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        00659200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00659300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00659400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00659500
.ZG113R               ANOP  ,                                           00659600
.*------------------------------------------------------------------    00659700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00659800
.ZG115                ANOP  ,                                           00659900
&ZXKEYRANGE           SETC  'INPUT'     SET IN/OUTPUT                   00660000
                      AIF   (K'&XKEYRANGE GT 0).ZG115E  VALID ARG       00660100
                      AIF   (T'&KEYRANGE EQ 'O').ZG115D  OMITTED        00660200
&ZASYSLNDX            SETA  0                                           00660300
.ZG115A               ANOP  ,           POSITIONAL MACRO KEY            00660400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00660500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG115C           00660600
&ZTLC                 SETC 'KEYRANGE'                                   00660700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG115A  00660800
.ZG115B               ANOP  ,                                           00660900
&ZXKEYRANGE           SETC  ''          RESET IN/OUTPUT                 00661000
&ZMS                  SETC  'THE "KEYRANGE" KEY'  *KOPTA* MNOTE         00661100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00661200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00661300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00661400
                      AGO   .ZG115E                                     00661500
.ZG115C               ANOP  ,                                           00661600
&ZXKEYRANGE           SETC  ''          RESET IN/OUTPUT                 00661700
&ZMS                  SETC  '"KEYRANGE='        *KUKWA* MNOTE           00661800
&ZMS                  SETC  '&ZMS.&KEYRANGE"'                           00661900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00662000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00662100
&ZMS                  SETC  '&ZMS "NO_CHANGE"'                          00662200
&ZMS                  SETC  '&ZMS OR "SET".'                            00662300
                      MNOTE 8,' &ZMS '                                  00662400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00662500
                      AGO   .ZG115E                                     00662600
.ZG115D               ANOP  ,                                           00662700
&XKEYRANGE            SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00662800
.ZG115E               ANOP  ,                                           00662900
.*------------------------------------------------------------------    00663000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00663100
&XKEYRANGESTATE       SETC  ''          INITIALIZE XVARIABLE            00663200
.*-------------------------------------------------------------------   00663300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00663400
.ZG118                ANOP  ,                                           00663500
                      AIF   (K'&KEYRANGESTATE(1) LE 0).ZG118A           00663600
&ZTLC                 SETC 'NO_CHANGE'                                  00663700
                      AIF   ('&KEYRANGESTATE(1)' NE '&ZTLC').ZG119      00663800
&XKEYRANGESTATE       SETC  'NO_CHANGE'         SET KEYWORD             00663900
                      AIF   (N'&KEYRANGESTATE LE 1).ZG118A  CK NUM      00664000
&ZMS                  SETC  '"KEYRANGESTATE='   *KPOSA* MNOTE           00664100
&ZMS                  SETC  '&ZMS.&KEYRANGESTATE"'                      00664200
&ZMS                  SETC  '&ZMS "KEYRANGESTATE"'                      00664300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00664400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00664500
.ZG118A               ANOP  ,                                           00664600
.*------------------------------------------------------------------    00664700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00664800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00664900
.ZG118A0              AIF   (K'&KREMPTY LE 0).ZG118A1  OK               00665000
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00665100
.ZG118A1              AIF   (K'&KRNOTEMPTY LE 0).ZG118A2  OK            00665200
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00665300
.ZG118A2              AIF   (K'&ZCVAL LE 0).ZG118A3  OK                 00665400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00665500
&ZMS                  SETC  '"KEYRANGESTATE'    *KMEIA* MNOTE           00665600
&ZMS                  SETC  '&ZMS.=&KEYRANGESTATE"'                     00665700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00665800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00665900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00666000
.ZG118A3              ANOP  ,                                           00666100
.*-------------------------------------------------------------------   00666200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00666300
.ZG119                ANOP  ,                                           00666400
&ZTLC                 SETC 'DEFINE'                                     00666500
                      AIF   ('&KEYRANGESTATE(1)' NE '&ZTLC').ZG126      00666600
&XKEYRANGESTATE       SETC  'DEFINE'    SET KEYWORD                     00666700
                      AIF   (N'&KEYRANGESTATE LE 1).ZG119A  CK NUM      00666800
&ZMS                  SETC  '"KEYRANGESTATE='   *KPOSA* MNOTE           00666900
&ZMS                  SETC  '&ZMS.&KEYRANGESTATE"'                      00667000
&ZMS                  SETC  '&ZMS "KEYRANGESTATE"'                      00667100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00667200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00667300
.ZG119A               ANOP  ,                                           00667400
.*----------------------------------------------------------------***   00667500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00667600
                      AIF   (N'&KREMPTY LE 1).ZG121A  CK NUM            00667700
&ZMS                  SETC  '"KREMPTY='         *KPOSA* MNOTE           00667800
&ZMS                  SETC  '&ZMS.&KREMPTY"'                            00667900
&ZMS                  SETC  '&ZMS "KREMPTY"'                            00668000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00668100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00668200
.ZG121A               ANOP  ,                                           00668300
.*-------------------------------------------------------------------   00668400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00668500
&ZXKREMPTY            SETC  'INPUT'     SET IN/OUTPUT                   00668600
&XKREMPTY             SETC  '&KREMPTY(1)'       SET XVARIABLE           00668700
                      AIF   (N'&KREMPTY GT 1).ZG121B  MULTI PARMS       00668800
&XKREMPTY             SETC  '&KREMPTY'  SET XVARIABLE                   00668900
.ZG121B               AIF   (K'&KREMPTY(1) GT 0).ZG121C                 00669000
&ZXKREMPTY            SETC  ''          RESET IN/OUTPUT                 00669100
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'  *KRQDA*       00669200
&ZMS                  SETC  '&ZMS , "KREMPTY" KEY AND ITS'              00669300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00669400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00669500
.ZG121C               ANOP  ,                                           00669600
.*-------------------------------------------------------------------   00669700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00669800
                      AIF   (K'&ZXKREMPTY LE 0).ZG121R  NOT I/O         00669900
                      AIF   ('&XKREMPTY'(1,1) NE '(').ZG121R            00670000
&ZCGPR                SETC  '&XKREMPTY'(2,K'&XKREMPTY-2)                00670100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG121P               00670200
                      AIF   (K'&ZCGPR GT 2).ZG121Q                      00670300
                      AIF   ('&ZCGPR' EQ '0').ZG121Q                    00670400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00670500
                      AIF   (T'&ZCGPR NE 'N').ZG121Q  INVALID REG NAME  00670600
.ZG121P               ANOP  ,                                           00670700
                      AIF   (T'&ZCGPR NE 'N').ZG121R  NON NUMERIC       00670800
                      AIF   ('&ZCGPR' LT '2').ZG121Q                    00670900
                      AIF   ('&ZCGPR' LE '12').ZG121R                   00671000
.ZG121Q               ANOP  ,                                           00671100
&ZMS                  SETC  '"KREMPTY='         *KGPRA* MNOTE           00671200
&ZMS                  SETC  '&ZMS.&KREMPTY"'                            00671300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00671400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00671500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00671600
.ZG121R               ANOP  ,                                           00671700
.*----------------------------------------------------------------***   00671800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00671900
                      AIF   (N'&KRNOTEMPTY LE 1).ZG124A  CK NUM         00672000
&ZMS                  SETC  '"KRNOTEMPTY='      *KPOSA* MNOTE           00672100
&ZMS                  SETC  '&ZMS.&KRNOTEMPTY"'                         00672200
&ZMS                  SETC  '&ZMS "KRNOTEMPTY"'                         00672300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00672400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00672500
.ZG124A               ANOP  ,                                           00672600
.*-------------------------------------------------------------------   00672700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00672800
&ZXKRNOTEMPTY         SETC  'INPUT'     SET IN/OUTPUT                   00672900
&XKRNOTEMPTY          SETC  '&KRNOTEMPTY(1)'    SET XVARIABLE           00673000
                      AIF   (N'&KRNOTEMPTY GT 1).ZG124B  MULTI PARMS    00673100
&XKRNOTEMPTY          SETC  '&KRNOTEMPTY'       SET XVARIABLE           00673200
.ZG124B               AIF   (K'&KRNOTEMPTY(1) GT 0).ZG124C              00673300
&ZXKRNOTEMPTY         SETC  ''          RESET IN/OUTPUT                 00673400
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'  *KRQDA*       00673500
&ZMS                  SETC  '&ZMS , "KRNOTEMPTY" KEY AND ITS'           00673600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00673700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00673800
.ZG124C               ANOP  ,                                           00673900
.*-------------------------------------------------------------------   00674000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00674100
                      AIF   (K'&ZXKRNOTEMPTY LE 0).ZG124R  NOT I/O      00674200
                      AIF   ('&XKRNOTEMPTY'(1,1) NE '(').ZG124R         00674300
&ZCGPR                SETC  '&XKRNOTEMPTY'(2,K'&XKRNOTEMPTY-2)          00674400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG124P               00674500
                      AIF   (K'&ZCGPR GT 2).ZG124Q                      00674600
                      AIF   ('&ZCGPR' EQ '0').ZG124Q                    00674700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00674800
                      AIF   (T'&ZCGPR NE 'N').ZG124Q  INVALID REG NAME  00674900
.ZG124P               ANOP  ,                                           00675000
                      AIF   (T'&ZCGPR NE 'N').ZG124R  NON NUMERIC       00675100
                      AIF   ('&ZCGPR' LT '2').ZG124Q                    00675200
                      AIF   ('&ZCGPR' LE '12').ZG124R                   00675300
.ZG124Q               ANOP  ,                                           00675400
&ZMS                  SETC  '"KRNOTEMPTY='      *KGPRA* MNOTE           00675500
&ZMS                  SETC  '&ZMS.&KRNOTEMPTY"'                         00675600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00675700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00675800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00675900
.ZG124R               ANOP  ,                                           00676000
.*------------------------------------------------------------------    00676100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00676200
.ZG126                ANOP  ,                                           00676300
&ZXKEYRANGESTATE      SETC  'INPUT'     SET IN/OUTPUT                   00676400
                      AIF   (K'&XKEYRANGESTATE GT 0).ZG126E  VALID ARG  00676500
                      AIF   (T'&KEYRANGESTATE EQ 'O').ZG126D  OMITTED   00676600
&ZASYSLNDX            SETA  0                                           00676700
.ZG126A               ANOP  ,           POSITIONAL MACRO KEY            00676800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00676900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG126C           00677000
&ZTLC                 SETC 'KEYRANGESTATE'                              00677100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG126A  00677200
.ZG126B               ANOP  ,                                           00677300
&ZXKEYRANGESTATE      SETC  ''          RESET IN/OUTPUT                 00677400
&ZMS                  SETC  'THE "KEYRANGESTATE" KEY'  *KOPTA* MNOTE    00677500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00677600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00677700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00677800
                      AGO   .ZG126E                                     00677900
.ZG126C               ANOP  ,                                           00678000
&ZXKEYRANGESTATE      SETC  ''          RESET IN/OUTPUT                 00678100
&ZMS                  SETC  '"KEYRANGESTATE='   *KUKWA* MNOTE           00678200
&ZMS                  SETC  '&ZMS.&KEYRANGESTATE"'                      00678300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00678400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00678500
&ZMS                  SETC  '&ZMS "NO_CHANGE"'                          00678600
&ZMS                  SETC  '&ZMS OR "DEFINE".'                         00678700
                      MNOTE 8,' &ZMS '                                  00678800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00678900
                      AGO   .ZG126E                                     00679000
.ZG126D               ANOP  ,                                           00679100
&XKEYRANGESTATE       SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00679200
.ZG126E               ANOP  ,                                           00679300
.*------------------------------------------------------------------    00679400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00679500
&XLISTSTATE           SETC  ''          INITIALIZE XVARIABLE            00679600
.*-------------------------------------------------------------------   00679700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00679800
.ZG129                ANOP  ,                                           00679900
                      AIF   (K'&LISTSTATE(1) LE 0).ZG129A               00680000
&ZTLC                 SETC 'NO_CHANGE'                                  00680100
                      AIF   ('&LISTSTATE(1)' NE '&ZTLC').ZG130          00680200
&XLISTSTATE           SETC  'NO_CHANGE'         SET KEYWORD             00680300
                      AIF   (N'&LISTSTATE LE 1).ZG129A  CK NUM          00680400
&ZMS                  SETC  '"LISTSTATE='       *KPOSA* MNOTE           00680500
&ZMS                  SETC  '&ZMS.&LISTSTATE"'                          00680600
&ZMS                  SETC  '&ZMS "LISTSTATE"'                          00680700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00680800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00680900
.ZG129A               ANOP  ,                                           00681000
.*------------------------------------------------------------------    00681100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00681200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00681300
.ZG129A0              AIF   (K'&LISTEMPTY LE 0).ZG129A1  OK             00681400
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00681500
.ZG129A1              AIF   (K'&LISTNOTEMPTY LE 0).ZG129A2  OK          00681600
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00681700
.ZG129A2              AIF   (K'&ZCVAL LE 0).ZG129A3  OK                 00681800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00681900
&ZMS                  SETC  '"LISTSTATE'        *KMEIA* MNOTE           00682000
&ZMS                  SETC  '&ZMS.=&LISTSTATE"'                         00682100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00682200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00682300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00682400
.ZG129A3              ANOP  ,                                           00682500
.*-------------------------------------------------------------------   00682600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00682700
.ZG130                ANOP  ,                                           00682800
&ZTLC                 SETC 'DEFINE'                                     00682900
                      AIF   ('&LISTSTATE(1)' NE '&ZTLC').ZG137          00683000
&XLISTSTATE           SETC  'DEFINE'    SET KEYWORD                     00683100
                      AIF   (N'&LISTSTATE LE 1).ZG130A  CK NUM          00683200
&ZMS                  SETC  '"LISTSTATE='       *KPOSA* MNOTE           00683300
&ZMS                  SETC  '&ZMS.&LISTSTATE"'                          00683400
&ZMS                  SETC  '&ZMS "LISTSTATE"'                          00683500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00683600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00683700
.ZG130A               ANOP  ,                                           00683800
.*----------------------------------------------------------------***   00683900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00684000
                      AIF   (N'&LISTEMPTY LE 1).ZG132A  CK NUM          00684100
&ZMS                  SETC  '"LISTEMPTY='       *KPOSA* MNOTE           00684200
&ZMS                  SETC  '&ZMS.&LISTEMPTY"'                          00684300
&ZMS                  SETC  '&ZMS "LISTEMPTY"'                          00684400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00684500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00684600
.ZG132A               ANOP  ,                                           00684700
.*-------------------------------------------------------------------   00684800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00684900
&ZXLISTEMPTY          SETC  'INPUT'     SET IN/OUTPUT                   00685000
&XLISTEMPTY           SETC  '&LISTEMPTY(1)'     SET XVARIABLE           00685100
                      AIF   (N'&LISTEMPTY GT 1).ZG132B  MULTI PARMS     00685200
&XLISTEMPTY           SETC  '&LISTEMPTY'        SET XVARIABLE           00685300
.ZG132B               AIF   (K'&LISTEMPTY(1) GT 0).ZG132C               00685400
&ZXLISTEMPTY          SETC  ''          RESET IN/OUTPUT                 00685500
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'  *KRQDA*       00685600
&ZMS                  SETC  '&ZMS , "LISTEMPTY" KEY AND ITS'            00685700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00685800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00685900
.ZG132C               ANOP  ,                                           00686000
.*-------------------------------------------------------------------   00686100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00686200
                      AIF   (K'&ZXLISTEMPTY LE 0).ZG132R  NOT I/O       00686300
                      AIF   ('&XLISTEMPTY'(1,1) NE '(').ZG132R          00686400
&ZCGPR                SETC  '&XLISTEMPTY'(2,K'&XLISTEMPTY-2)            00686500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG132P               00686600
                      AIF   (K'&ZCGPR GT 2).ZG132Q                      00686700
                      AIF   ('&ZCGPR' EQ '0').ZG132Q                    00686800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00686900
                      AIF   (T'&ZCGPR NE 'N').ZG132Q  INVALID REG NAME  00687000
.ZG132P               ANOP  ,                                           00687100
                      AIF   (T'&ZCGPR NE 'N').ZG132R  NON NUMERIC       00687200
                      AIF   ('&ZCGPR' LT '2').ZG132Q                    00687300
                      AIF   ('&ZCGPR' LE '12').ZG132R                   00687400
.ZG132Q               ANOP  ,                                           00687500
&ZMS                  SETC  '"LISTEMPTY='       *KGPRA* MNOTE           00687600
&ZMS                  SETC  '&ZMS.&LISTEMPTY"'                          00687700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00687800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00687900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00688000
.ZG132R               ANOP  ,                                           00688100
.*----------------------------------------------------------------***   00688200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00688300
                      AIF   (N'&LISTNOTEMPTY LE 1).ZG135A  CK NUM       00688400
&ZMS                  SETC  '"LISTNOTEMPTY='    *KPOSA* MNOTE           00688500
&ZMS                  SETC  '&ZMS.&LISTNOTEMPTY"'                       00688600
&ZMS                  SETC  '&ZMS "LISTNOTEMPTY"'                       00688700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00688800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00688900
.ZG135A               ANOP  ,                                           00689000
.*-------------------------------------------------------------------   00689100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00689200
&ZXLISTNOTEMPTY       SETC  'INPUT'     SET IN/OUTPUT                   00689300
&XLISTNOTEMPTY        SETC  '&LISTNOTEMPTY(1)'  SET XVARIABLE           00689400
                      AIF   (N'&LISTNOTEMPTY GT 1).ZG135B  MULTI PARMS  00689500
&XLISTNOTEMPTY        SETC  '&LISTNOTEMPTY'     SET XVARIABLE           00689600
.ZG135B               AIF   (K'&LISTNOTEMPTY(1) GT 0).ZG135C            00689700
&ZXLISTNOTEMPTY       SETC  ''          RESET IN/OUTPUT                 00689800
&ZMS                  SETC  'WHEN "DEFINE" IS SPECIFIED'  *KRQDA*       00689900
&ZMS                  SETC  '&ZMS , "LISTNOTEMPTY" KEY AND ITS'         00690000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00690100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00690200
.ZG135C               ANOP  ,                                           00690300
.*-------------------------------------------------------------------   00690400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00690500
                      AIF   (K'&ZXLISTNOTEMPTY LE 0).ZG135R  NOT I/O    00690600
                      AIF   ('&XLISTNOTEMPTY'(1,1) NE '(').ZG135R       00690700
&ZCGPR                SETC  '&XLISTNOTEMPTY'(2,K'&XLISTNOTEMPTY-2)      00690800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG135P               00690900
                      AIF   (K'&ZCGPR GT 2).ZG135Q                      00691000
                      AIF   ('&ZCGPR' EQ '0').ZG135Q                    00691100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00691200
                      AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME  00691300
.ZG135P               ANOP  ,                                           00691400
                      AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC       00691500
                      AIF   ('&ZCGPR' LT '2').ZG135Q                    00691600
                      AIF   ('&ZCGPR' LE '12').ZG135R                   00691700
.ZG135Q               ANOP  ,                                           00691800
&ZMS                  SETC  '"LISTNOTEMPTY='    *KGPRA* MNOTE           00691900
&ZMS                  SETC  '&ZMS.&LISTNOTEMPTY"'                       00692000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00692100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00692200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00692300
.ZG135R               ANOP  ,                                           00692400
.*------------------------------------------------------------------    00692500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00692600
.ZG137                ANOP  ,                                           00692700
&ZXLISTSTATE          SETC  'INPUT'     SET IN/OUTPUT                   00692800
                      AIF   (K'&XLISTSTATE GT 0).ZG137E  VALID ARG      00692900
                      AIF   (T'&LISTSTATE EQ 'O').ZG137D  OMITTED       00693000
&ZASYSLNDX            SETA  0                                           00693100
.ZG137A               ANOP  ,           POSITIONAL MACRO KEY            00693200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00693300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG137C           00693400
&ZTLC                 SETC 'LISTSTATE'                                  00693500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG137A  00693600
.ZG137B               ANOP  ,                                           00693700
&ZXLISTSTATE          SETC  ''          RESET IN/OUTPUT                 00693800
&ZMS                  SETC  'THE "LISTSTATE" KEY'  *KOPTA* MNOTE        00693900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00694000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00694100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00694200
                      AGO   .ZG137E                                     00694300
.ZG137C               ANOP  ,                                           00694400
&ZXLISTSTATE          SETC  ''          RESET IN/OUTPUT                 00694500
&ZMS                  SETC  '"LISTSTATE='       *KUKWA* MNOTE           00694600
&ZMS                  SETC  '&ZMS.&LISTSTATE"'                          00694700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00694800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00694900
&ZMS                  SETC  '&ZMS "NO_CHANGE"'                          00695000
&ZMS                  SETC  '&ZMS OR "DEFINE".'                         00695100
                      MNOTE 8,' &ZMS '                                  00695200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00695300
                      AGO   .ZG137E                                     00695400
.ZG137D               ANOP  ,                                           00695500
&XLISTSTATE           SETC  'NO_CHANGE'         SET DEFAULT KEYWORD     00695600
.ZG137E               ANOP  ,                                           00695700
.*-------------------------------------------------------------------   00695800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00695900
.ZG138                ANOP  ,                                           00696000
&ZTLC                 SETC 'READ_EQCONTROLS'                            00696100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG144            00696200
&XREQUEST             SETC  'READ_EQCONTROLS'   SET KEYWORD             00696300
                      AIF   (N'&REQUEST LE 1).ZG138A  CK NUM            00696400
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00696500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00696600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00696700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00696800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00696900
.ZG138A               ANOP  ,                                           00697000
.*------------------------------------------------------------------    00697100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00697200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00697300
.ZG138A0              AIF   (K'&LOCKINDEX LE 0).ZG138A1  OK             00697400
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00697500
.ZG138A1              AIF   (K'&LOCKOPER LE 0).ZG138A2  OK              00697600
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00697700
.ZG138A2              AIF   (K'&LOCKMODE LE 0).ZG138A3  OK              00697800
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00697900
.ZG138A3              AIF   (K'&LOCKCOMP LE 0).ZG138A4  OK              00698000
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00698100
.ZG138A4              AIF   (K'&LOCKDATA LE 0).ZG138A5  OK              00698200
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00698300
.ZG138A5              AIF   (K'&LISTNUM LE 0).ZG138A6  OK               00698400
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00698500
.ZG138A6              AIF   (K'&BUFLIST LE 0).ZG138A7  OK               00698600
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00698700
.ZG138A7              AIF   (K'&BUFADDRTYPE LE 0).ZG138A8  OK           00698800
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00698900
.ZG138A8              AIF   (K'&PAGEABLE LE 0).ZG138A9  OK              00699000
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00699100
.ZG138A9              AIF   (K'&BUFSTGKEY LE 0).ZG138A10  OK            00699200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00699300
.ZG138A10             AIF   (K'&BUFALET LE 0).ZG138A11  OK              00699400
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00699500
.ZG138A11             AIF   (K'&BUFADDRSIZE LE 0).ZG138A12  OK          00699600
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00699700
.ZG138A12             AIF   (K'&BUFFER LE 0).ZG138A13  OK               00699800
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00699900
.ZG138A13             AIF   (K'&AUTHCOMP LE 0).ZG138A14  OK             00700000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00700100
.ZG138A14             AIF   (K'&NEWAUTH LE 0).ZG138A15  OK              00700200
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00700300
.ZG138A15             AIF   (K'&LISTLIMIT LE 0).ZG138A16  OK            00700400
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00700500
.ZG138A16             AIF   (K'&LISTDESC LE 0).ZG138A17  OK             00700600
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00700700
.ZG138A17             AIF   (K'&LISTKEY LE 0).ZG138A18  OK              00700800
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00700900
.ZG138A18             AIF   (K'&MAXLISTKEY LE 0).ZG138A19  OK           00701000
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00701100
.ZG138A19             AIF   (K'&SETCURSOR LE 0).ZG138A20  OK            00701200
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00701300
.ZG138A20             AIF   (K'&KEYRANGE LE 0).ZG138A21  OK             00701400
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00701500
.ZG138A21             AIF   (K'&KEYRANGESTART LE 0).ZG138A22  OK        00701600
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00701700
.ZG138A22             AIF   (K'&KEYRANGEEND LE 0).ZG138A23  OK          00701800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00701900
.ZG138A23             AIF   (K'&KEYRANGESTATE LE 0).ZG138A24  OK        00702000
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00702100
.ZG138A24             AIF   (K'&KREMPTY LE 0).ZG138A25  OK              00702200
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00702300
.ZG138A25             AIF   (K'&KRNOTEMPTY LE 0).ZG138A26  OK           00702400
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00702500
.ZG138A26             AIF   (K'&LISTSTATE LE 0).ZG138A27  OK            00702600
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00702700
.ZG138A27             AIF   (K'&LISTEMPTY LE 0).ZG138A28  OK            00702800
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00702900
.ZG138A28             AIF   (K'&LISTNOTEMPTY LE 0).ZG138A29  OK         00703000
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00703100
.ZG138A29             AIF   (K'&ENTRYKEY LE 0).ZG138A30  OK             00703200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00703300
.ZG138A30             AIF   (K'&SECONDARYKEY LE 0).ZG138A31  OK         00703400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00703500
.ZG138A31             AIF   (K'&ACTION LE 0).ZG138A32  OK               00703600
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00703700
.ZG138A32             AIF   (K'&VECTORINDEX LE 0).ZG138A33  OK          00703800
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00703900
.ZG138A33             AIF   (K'&DRIVEEXIT LE 0).ZG138A34  OK            00704000
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00704100
.ZG138A34             AIF   (K'&NOTIFICATION LE 0).ZG138A35  OK         00704200
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00704300
.ZG138A35             AIF   (K'&UNC LE 0).ZG138A36  OK                  00704400
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00704500
.ZG138A36             AIF   (K'&STARTINDEX LE 0).ZG138A37  OK           00704600
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00704700
.ZG138A37             AIF   (K'&ENDINDEX LE 0).ZG138A38  OK             00704800
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00704900
.ZG138A38             AIF   (K'&MOSVECTOR LE 0).ZG138A39  OK            00705000
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00705100
.ZG138A39             AIF   (K'&BUFNUM LE 0).ZG138A40  OK               00705200
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00705300
.ZG138A40             AIF   (K'&BUFINCRNUM LE 0).ZG138A41  OK           00705400
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00705500
.ZG138A41             AIF   (K'&BUFSIZE LE 0).ZG138A42  OK              00705600
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00705700
.ZG138A42             AIF   (K'&ZCVAL LE 0).ZG138A43  OK                00705800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00705900
                      AIF  (K'&ZCVAL LE 160).ZG138A43A                  00706000
&ZCVAL                SETC '&ZCVAL'(1,160)                              00706100
&ZCVAL                SETC '&ZCVAL....'                                 00706200
.ZG138A43A            ANOP                                              00706300
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00706400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00706500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00706600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00706700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00706800
.ZG138A43             ANOP  ,                                           00706900
.*----------------------------------------------------------------***   00707000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00707100
                      AIF   (N'&KEYTYPE LE 1).ZG140A  CK NUM            00707200
&ZMS                  SETC  '"KEYTYPE='         *KPOSA* MNOTE           00707300
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00707400
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            00707500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00707600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00707700
.ZG140A               ANOP  ,                                           00707800
.*-------------------------------------------------------------------   00707900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00708000
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            00708100
.ZG141A   AIF   ('&KEYTYPE(1)' NE 'ENTRY').ZG142A                       00708200
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     00708300
.*-------------------------------------------------------------------   00708400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00708500
.ZG142A   AIF   ('&KEYTYPE(1)' NE 'SECONDARY').ZG143A                   00708600
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             00708700
.*-------------------------------------------------------------------   00708800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00708900
.ZG143A               AIF   (K'&XKEYTYPE GT 0).ZG143C  KEYWORD          00709000
                      AIF   (K'&KEYTYPE(1) LE 0).ZG143B                 00709100
&ZMS                  SETC  '"KEYTYPE='         *KUKWA* MNOTE           00709200
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00709300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00709400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00709500
&ZMS                  SETC  '&ZMS "ENTRY"'                              00709600
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      00709700
                      MNOTE 8,' &ZMS '                                  00709800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00709900
.ZG143B               ANOP  ,                                           00710000
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             00710100
.ZG143C               ANOP  ,                                           00710200
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   00710300
.*-------------------------------------------------------------------   00710400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00710500
.ZG144                ANOP  ,                                           00710600
&ZTLC                 SETC 'READ_EMCONTROLS'                            00710700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG152            00710800
&XREQUEST             SETC  'READ_EMCONTROLS'   SET KEYWORD             00710900
                      AIF   (N'&REQUEST LE 1).ZG144A  CK NUM            00711000
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00711100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00711200
&ZMS                  SETC  '&ZMS "REQUEST"'                            00711300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00711400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00711500
.ZG144A               ANOP  ,                                           00711600
.*------------------------------------------------------------------    00711700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00711800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00711900
.ZG144A0              AIF   (K'&LOCKINDEX LE 0).ZG144A1  OK             00712000
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00712100
.ZG144A1              AIF   (K'&LOCKOPER LE 0).ZG144A2  OK              00712200
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00712300
.ZG144A2              AIF   (K'&LOCKMODE LE 0).ZG144A3  OK              00712400
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00712500
.ZG144A3              AIF   (K'&LOCKCOMP LE 0).ZG144A4  OK              00712600
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00712700
.ZG144A4              AIF   (K'&LOCKDATA LE 0).ZG144A5  OK              00712800
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00712900
.ZG144A5              AIF   (K'&BUFLIST LE 0).ZG144A6  OK               00713000
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00713100
.ZG144A6              AIF   (K'&BUFADDRTYPE LE 0).ZG144A7  OK           00713200
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00713300
.ZG144A7              AIF   (K'&PAGEABLE LE 0).ZG144A8  OK              00713400
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00713500
.ZG144A8              AIF   (K'&BUFSTGKEY LE 0).ZG144A9  OK             00713600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00713700
.ZG144A9              AIF   (K'&BUFALET LE 0).ZG144A10  OK              00713800
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00713900
.ZG144A10             AIF   (K'&BUFADDRSIZE LE 0).ZG144A11  OK          00714000
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00714100
.ZG144A11             AIF   (K'&BUFFER LE 0).ZG144A12  OK               00714200
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00714300
.ZG144A12             AIF   (K'&AUTHCOMP LE 0).ZG144A13  OK             00714400
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00714500
.ZG144A13             AIF   (K'&NEWAUTH LE 0).ZG144A14  OK              00714600
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00714700
.ZG144A14             AIF   (K'&LISTLIMIT LE 0).ZG144A15  OK            00714800
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00714900
.ZG144A15             AIF   (K'&LISTDESC LE 0).ZG144A16  OK             00715000
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00715100
.ZG144A16             AIF   (K'&LISTKEY LE 0).ZG144A17  OK              00715200
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00715300
.ZG144A17             AIF   (K'&MAXLISTKEY LE 0).ZG144A18  OK           00715400
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00715500
.ZG144A18             AIF   (K'&SETCURSOR LE 0).ZG144A19  OK            00715600
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00715700
.ZG144A19             AIF   (K'&KEYRANGE LE 0).ZG144A20  OK             00715800
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00715900
.ZG144A20             AIF   (K'&KEYRANGESTART LE 0).ZG144A21  OK        00716000
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00716100
.ZG144A21             AIF   (K'&KEYRANGEEND LE 0).ZG144A22  OK          00716200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00716300
.ZG144A22             AIF   (K'&KEYRANGESTATE LE 0).ZG144A23  OK        00716400
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00716500
.ZG144A23             AIF   (K'&KREMPTY LE 0).ZG144A24  OK              00716600
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00716700
.ZG144A24             AIF   (K'&KRNOTEMPTY LE 0).ZG144A25  OK           00716800
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00716900
.ZG144A25             AIF   (K'&LISTSTATE LE 0).ZG144A26  OK            00717000
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00717100
.ZG144A26             AIF   (K'&LISTEMPTY LE 0).ZG144A27  OK            00717200
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00717300
.ZG144A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG144A28  OK         00717400
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00717500
.ZG144A28             AIF   (K'&KEYTYPE LE 0).ZG144A29  OK              00717600
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00717700
.ZG144A29             AIF   (K'&ACTION LE 0).ZG144A30  OK               00717800
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00717900
.ZG144A30             AIF   (K'&VECTORINDEX LE 0).ZG144A31  OK          00718000
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00718100
.ZG144A31             AIF   (K'&DRIVEEXIT LE 0).ZG144A32  OK            00718200
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00718300
.ZG144A32             AIF   (K'&NOTIFICATION LE 0).ZG144A33  OK         00718400
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00718500
.ZG144A33             AIF   (K'&UNC LE 0).ZG144A34  OK                  00718600
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00718700
.ZG144A34             AIF   (K'&STARTINDEX LE 0).ZG144A35  OK           00718800
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00718900
.ZG144A35             AIF   (K'&ENDINDEX LE 0).ZG144A36  OK             00719000
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00719100
.ZG144A36             AIF   (K'&MOSVECTOR LE 0).ZG144A37  OK            00719200
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00719300
.ZG144A37             AIF   (K'&BUFNUM LE 0).ZG144A38  OK               00719400
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00719500
.ZG144A38             AIF   (K'&BUFINCRNUM LE 0).ZG144A39  OK           00719600
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00719700
.ZG144A39             AIF   (K'&BUFSIZE LE 0).ZG144A40  OK              00719800
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00719900
.ZG144A40             AIF   (K'&ZCVAL LE 0).ZG144A41  OK                00720000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00720100
                      AIF  (K'&ZCVAL LE 160).ZG144A41A                  00720200
&ZCVAL                SETC '&ZCVAL'(1,160)                              00720300
&ZCVAL                SETC '&ZCVAL....'                                 00720400
.ZG144A41A            ANOP                                              00720500
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00720600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00720700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00720800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00720900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00721000
.ZG144A41             ANOP  ,                                           00721100
.*----------------------------------------------------------------***   00721200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00721300
                      AIF   (N'&LISTNUM LE 1).ZG146A  CK NUM            00721400
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           00721500
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00721600
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00721700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00721800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00721900
.ZG146A               ANOP  ,                                           00722000
.*-------------------------------------------------------------------   00722100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00722200
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00722300
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00722400
                      AIF   (N'&LISTNUM GT 1).ZG146B  MULTI PARMS       00722500
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00722600
.ZG146B               AIF   (K'&LISTNUM(1) GT 0).ZG146C                 00722700
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00722800
&ZMS                  SETC  ' '         *KRQDA*                         00722900
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00723000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00723100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00723200
.ZG146C               ANOP  ,                                           00723300
.*-------------------------------------------------------------------   00723400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00723500
                      AIF   (K'&ZXLISTNUM LE 0).ZG146R  NOT I/O         00723600
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG146R            00723700
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00723800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG146P               00723900
                      AIF   (K'&ZCGPR GT 2).ZG146Q                      00724000
                      AIF   ('&ZCGPR' EQ '0').ZG146Q                    00724100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00724200
                      AIF   (T'&ZCGPR NE 'N').ZG146Q  INVALID REG NAME  00724300
.ZG146P               ANOP  ,                                           00724400
                      AIF   (T'&ZCGPR NE 'N').ZG146R  NON NUMERIC       00724500
                      AIF   ('&ZCGPR' LT '2').ZG146Q                    00724600
                      AIF   ('&ZCGPR' LE '12').ZG146R                   00724700
.ZG146Q               ANOP  ,                                           00724800
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           00724900
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00725000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00725100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00725200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00725300
.ZG146R               ANOP  ,                                           00725400
.*----------------------------------------------------------------***   00725500
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00725600
&XNAME                SETC  ''          INITIALIZE XVARIABLE            00725700
                      AIF   (K'&ENTRYKEY LE 0).ZG149C                   00725800
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   00725900
&XNAME                SETC  'ENTRYKEY'  SET XVARIABLE                   00726000
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   00726100
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE PARM      00726200
                      AIF   (N'&ENTRYKEY GT 1).ZG149A                   00726300
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE PARM      00726400
.ZG149A               AIF   (N'&ENTRYKEY LE 1).ZG149B  CK NUM           00726500
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           00726600
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00726700
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           00726800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00726900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00727000
.ZG149B               AIF   (K'&XENTRYKEY GT 0).ZG149C  ONE PARM        00727100
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00727200
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 00727300
&ZMS                  SETC  ' '         *KRQDA*                         00727400
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               00727500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00727600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00727700
.ZG149C               ANOP  ,                                           00727800
.*----------------------------------------------------------------***   00727900
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00728000
                      AIF   (K'&SECONDARYKEY LE 0).ZG150D  NO ME KEY    00728100
                      AIF   (N'&SECONDARYKEY LE 1).ZG150A  CK NUM       00728200
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           00728300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       00728400
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       00728500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00728600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00728700
.ZG150A               AIF   (K'&XNAME LE 0).ZG150B                      00728800
&ZMS                  SETC  '"SECONDARYKEY'     *KMEKA* MNOTE           00728900
&ZMS                  SETC  '&ZMS.=&SECONDARYKEY"'                      00729000
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00729100
&ZMS                  SETC  '&ZMS "&XNAME"'                             00729200
                      MNOTE 8,' &ZMS KEY.'                              00729300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00729400
                      AGO   .ZG150D                                     00729500
.*                                                                      00729600
.ZG150B               ANOP  ,                                           00729700
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   00729800
&XNAME                SETC  'SECONDARYKEY'      SET XVARIABLE           00729900
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   00730000
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE PARM      00730100
                      AIF   (N'&SECONDARYKEY GT 1).ZG150C               00730200
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE PARM      00730300
.ZG150C               AIF   (K'&XSECONDARYKEY GT 0).ZG150D  ONE PARM    00730400
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00730500
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 00730600
&ZMS                  SETC  ' '         *KRQDA*                         00730700
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           00730800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00730900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00731000
.ZG150D               ANOP  ,                                           00731100
.*------------------------------------------------------------------    00731200
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00731300
                      AIF   (K'&XNAME GT 0).ZG151B                      00731400
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00731500
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 00731600
&XNAME                SETC  ''          ENSURE NULL                     00731700
&XENTRYKEY            SETC  ''          ENSURE NULL                     00731800
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       00731900
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00732000
&ZMS                  SETC  '&ZMS REQUIRED:'                            00732100
&ZMS                  SETC  '&ZMS "ENTRYKEY"'   VALID ME KEY            00732200
&ZMS                  SETC  '&ZMS OR "SECONDARYKEY".'  VALID ME KEY     00732300
                      MNOTE 8,' &ZMS '                                  00732400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00732500
.ZG151B               ANOP  ,                                           00732600
.*-------------------------------------------------------------------   00732700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00732800
.ZG149                AIF   ('&XNAME' NE 'ENTRYKEY').ZG150              00732900
.*-------------------------------------------------------------------   00733000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00733100
                      AIF   (K'&ZXENTRYKEY LE 0).ZG149R  NOT I/O        00733200
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG149R           00733300
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              00733400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG149P               00733500
                      AIF   (K'&ZCGPR GT 2).ZG149Q                      00733600
                      AIF   ('&ZCGPR' EQ '0').ZG149Q                    00733700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00733800
                      AIF   (T'&ZCGPR NE 'N').ZG149Q  INVALID REG NAME  00733900
.ZG149P               ANOP  ,                                           00734000
                      AIF   (T'&ZCGPR NE 'N').ZG149R  NON NUMERIC       00734100
                      AIF   ('&ZCGPR' LT '2').ZG149Q                    00734200
                      AIF   ('&ZCGPR' LE '12').ZG149R                   00734300
.ZG149Q               ANOP  ,                                           00734400
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           00734500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00734600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00734700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00734800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00734900
.ZG149R               ANOP  ,                                           00735000
.*-------------------------------------------------------------------   00735100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00735200
.ZG150                AIF   ('&XNAME' NE 'SECONDARYKEY').ZG151          00735300
.*-------------------------------------------------------------------   00735400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00735500
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG150R  NOT I/O    00735600
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG150R       00735700
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      00735800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG150P               00735900
                      AIF   (K'&ZCGPR GT 2).ZG150Q                      00736000
                      AIF   ('&ZCGPR' EQ '0').ZG150Q                    00736100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00736200
                      AIF   (T'&ZCGPR NE 'N').ZG150Q  INVALID REG NAME  00736300
.ZG150P               ANOP  ,                                           00736400
                      AIF   (T'&ZCGPR NE 'N').ZG150R  NON NUMERIC       00736500
                      AIF   ('&ZCGPR' LT '2').ZG150Q                    00736600
                      AIF   ('&ZCGPR' LE '12').ZG150R                   00736700
.ZG150Q               ANOP  ,                                           00736800
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           00736900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       00737000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00737100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00737200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00737300
.ZG150R               ANOP  ,                                           00737400
.*-------------------------------------------------------------------   00737500
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00737600
.ZG151                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     00737700
.*-------------------------------------------------------------------   00737800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00737900
.ZG152                ANOP  ,                                           00738000
&ZTLC                 SETC 'DEQ_EVENTQ'                                 00738100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG191            00738200
&XREQUEST             SETC  'DEQ_EVENTQ'        SET KEYWORD             00738300
                      AIF   (N'&REQUEST LE 1).ZG152A  CK NUM            00738400
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00738500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00738600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00738700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00738800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00738900
.ZG152A               ANOP  ,                                           00739000
.*------------------------------------------------------------------    00739100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00739200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00739300
.ZG152A0              AIF   (K'&LOCKINDEX LE 0).ZG152A1  OK             00739400
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00739500
.ZG152A1              AIF   (K'&LOCKOPER LE 0).ZG152A2  OK              00739600
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00739700
.ZG152A2              AIF   (K'&LOCKMODE LE 0).ZG152A3  OK              00739800
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00739900
.ZG152A3              AIF   (K'&LOCKCOMP LE 0).ZG152A4  OK              00740000
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00740100
.ZG152A4              AIF   (K'&LOCKDATA LE 0).ZG152A5  OK              00740200
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00740300
.ZG152A5              AIF   (K'&LISTNUM LE 0).ZG152A6  OK               00740400
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00740500
.ZG152A6              AIF   (K'&AUTHCOMP LE 0).ZG152A7  OK              00740600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00740700
.ZG152A7              AIF   (K'&NEWAUTH LE 0).ZG152A8  OK               00740800
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00740900
.ZG152A8              AIF   (K'&LISTLIMIT LE 0).ZG152A9  OK             00741000
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00741100
.ZG152A9              AIF   (K'&LISTDESC LE 0).ZG152A10  OK             00741200
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00741300
.ZG152A10             AIF   (K'&LISTKEY LE 0).ZG152A11  OK              00741400
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00741500
.ZG152A11             AIF   (K'&MAXLISTKEY LE 0).ZG152A12  OK           00741600
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00741700
.ZG152A12             AIF   (K'&SETCURSOR LE 0).ZG152A13  OK            00741800
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00741900
.ZG152A13             AIF   (K'&KEYRANGE LE 0).ZG152A14  OK             00742000
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00742100
.ZG152A14             AIF   (K'&KEYRANGESTART LE 0).ZG152A15  OK        00742200
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00742300
.ZG152A15             AIF   (K'&KEYRANGEEND LE 0).ZG152A16  OK          00742400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00742500
.ZG152A16             AIF   (K'&KEYRANGESTATE LE 0).ZG152A17  OK        00742600
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00742700
.ZG152A17             AIF   (K'&KREMPTY LE 0).ZG152A18  OK              00742800
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00742900
.ZG152A18             AIF   (K'&KRNOTEMPTY LE 0).ZG152A19  OK           00743000
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00743100
.ZG152A19             AIF   (K'&LISTSTATE LE 0).ZG152A20  OK            00743200
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00743300
.ZG152A20             AIF   (K'&LISTEMPTY LE 0).ZG152A21  OK            00743400
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00743500
.ZG152A21             AIF   (K'&LISTNOTEMPTY LE 0).ZG152A22  OK         00743600
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00743700
.ZG152A22             AIF   (K'&ENTRYKEY LE 0).ZG152A23  OK             00743800
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00743900
.ZG152A23             AIF   (K'&SECONDARYKEY LE 0).ZG152A24  OK         00744000
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00744100
.ZG152A24             AIF   (K'&ACTION LE 0).ZG152A25  OK               00744200
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00744300
.ZG152A25             AIF   (K'&VECTORINDEX LE 0).ZG152A26  OK          00744400
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00744500
.ZG152A26             AIF   (K'&DRIVEEXIT LE 0).ZG152A27  OK            00744600
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00744700
.ZG152A27             AIF   (K'&NOTIFICATION LE 0).ZG152A28  OK         00744800
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00744900
.ZG152A28             AIF   (K'&UNC LE 0).ZG152A29  OK                  00745000
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00745100
.ZG152A29             AIF   (K'&STARTINDEX LE 0).ZG152A30  OK           00745200
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00745300
.ZG152A30             AIF   (K'&ENDINDEX LE 0).ZG152A31  OK             00745400
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00745500
.ZG152A31             AIF   (K'&MOSVECTOR LE 0).ZG152A32  OK            00745600
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00745700
.ZG152A32             AIF   (K'&BUFNUM LE 0).ZG152A33  OK               00745800
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00745900
.ZG152A33             AIF   (K'&BUFINCRNUM LE 0).ZG152A34  OK           00746000
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00746100
.ZG152A34             AIF   (K'&BUFSIZE LE 0).ZG152A35  OK              00746200
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00746300
.ZG152A35             AIF   (K'&ZCVAL LE 0).ZG152A36  OK                00746400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00746500
                      AIF  (K'&ZCVAL LE 160).ZG152A36A                  00746600
&ZCVAL                SETC '&ZCVAL'(1,160)                              00746700
&ZCVAL                SETC '&ZCVAL....'                                 00746800
.ZG152A36A            ANOP                                              00746900
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00747000
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00747100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00747200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00747300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00747400
.ZG152A36             ANOP  ,                                           00747500
.*----------------------------------------------------------------***   00747600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00747700
                      AIF   (N'&KEYTYPE LE 1).ZG154A  CK NUM            00747800
&ZMS                  SETC  '"KEYTYPE='         *KPOSA* MNOTE           00747900
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00748000
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            00748100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00748200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00748300
.ZG154A               ANOP  ,                                           00748400
.*-------------------------------------------------------------------   00748500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00748600
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            00748700
.ZG155A   AIF   ('&KEYTYPE(1)' NE 'ENTRY').ZG156A                       00748800
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     00748900
.*-------------------------------------------------------------------   00749000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00749100
.ZG156A   AIF   ('&KEYTYPE(1)' NE 'SECONDARY').ZG157A                   00749200
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             00749300
.*-------------------------------------------------------------------   00749400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00749500
.ZG157A               AIF   (K'&XKEYTYPE GT 0).ZG157C  KEYWORD          00749600
                      AIF   (K'&KEYTYPE(1) LE 0).ZG157B                 00749700
&ZMS                  SETC  '"KEYTYPE='         *KUKWA* MNOTE           00749800
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00749900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00750000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00750100
&ZMS                  SETC  '&ZMS "ENTRY"'                              00750200
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      00750300
                      MNOTE 8,' &ZMS '                                  00750400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00750500
.ZG157B               ANOP  ,                                           00750600
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             00750700
.ZG157C               ANOP  ,                                           00750800
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   00750900
.*----------------------------------------------------------------***   00751000
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00751100
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            00751200
                      AIF   (K'&BUFLIST LE 0).ZG159C                    00751300
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00751400
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   00751500
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   00751600
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      00751700
                      AIF   (N'&BUFLIST GT 1).ZG159A                    00751800
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              00751900
.ZG159A               AIF   (N'&BUFLIST LE 1).ZG159B  CK NUM            00752000
&ZMS                  SETC  '"BUFLIST='         *KPOSA* MNOTE           00752100
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00752200
&ZMS                  SETC  '&ZMS "BUFLIST"'                            00752300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00752400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00752500
.ZG159B               AIF   (K'&XBUFLIST GT 0).ZG159C  ONE PARM         00752600
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00752700
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00752800
&ZMS                  SETC  ' '         *KRQDA*                         00752900
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                00753000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00753100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00753200
.ZG159C               ANOP  ,                                           00753300
.*----------------------------------------------------------------***   00753400
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00753500
                      AIF   (K'&BUFFER LE 0).ZG181D  NO ME KEY          00753600
                      AIF   (N'&BUFFER LE 1).ZG181A  CK NUM             00753700
&ZMS                  SETC  '"BUFFER='  *KPOSA* MNOTE                   00753800
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00753900
&ZMS                  SETC  '&ZMS "BUFFER"'                             00754000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00754100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00754200
.ZG181A               AIF   (K'&XDATAREA LE 0).ZG181B                   00754300
&ZMS                  SETC  '"BUFFER'   *KMEKA* MNOTE                   00754400
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00754500
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00754600
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          00754700
                      MNOTE 8,' &ZMS KEY.'                              00754800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00754900
                      AGO   .ZG181D                                     00755000
.*                                                                      00755100
.ZG181B               ANOP  ,                                           00755200
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00755300
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   00755400
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   00755500
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      00755600
                      AIF   (N'&BUFFER GT 1).ZG181C                     00755700
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              00755800
.ZG181C               AIF   (K'&XBUFFER GT 0).ZG181D  ONE PARM          00755900
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00756000
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 00756100
&ZMS                  SETC  ' '         *KRQDA*                         00756200
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 00756300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00756400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00756500
.ZG181D               ANOP  ,                                           00756600
.*------------------------------------------------------------------    00756700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00756800
                      AIF   (K'&XDATAREA GT 0).ZG190B                   00756900
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00757000
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00757100
&XDATAREA             SETC  ''          ENSURE NULL                     00757200
&XBUFLIST             SETC  ''          ENSURE NULL                     00757300
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       00757400
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00757500
&ZMS                  SETC  '&ZMS REQUIRED:'                            00757600
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            00757700
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           00757800
                      MNOTE 8,' &ZMS '                                  00757900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00758000
.ZG190B               ANOP  ,                                           00758100
.*-------------------------------------------------------------------   00758200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00758300
.ZG159                AIF   ('&XDATAREA' NE 'BUFLIST').ZG181            00758400
.*-------------------------------------------------------------------   00758500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00758600
                      AIF   (K'&ZXBUFLIST LE 0).ZG159R  NOT I/O         00758700
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG159R            00758800
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                00758900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG159P               00759000
                      AIF   (K'&ZCGPR GT 2).ZG159Q                      00759100
                      AIF   ('&ZCGPR' EQ '0').ZG159Q                    00759200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00759300
                      AIF   (T'&ZCGPR NE 'N').ZG159Q  INVALID REG NAME  00759400
.ZG159P               ANOP  ,                                           00759500
                      AIF   (T'&ZCGPR NE 'N').ZG159R  NON NUMERIC       00759600
                      AIF   ('&ZCGPR' LT '2').ZG159Q                    00759700
                      AIF   ('&ZCGPR' LE '12').ZG159R                   00759800
.ZG159Q               ANOP  ,                                           00759900
&ZMS                  SETC  '"BUFLIST='         *KGPRA* MNOTE           00760000
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00760100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00760200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00760300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00760400
.ZG159R               ANOP  ,                                           00760500
.*------------------------------------------------------------------    00760600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00760700
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            00760800
.*-------------------------------------------------------------------   00760900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00761000
.ZG162                ANOP  ,                                           00761100
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG162A             00761200
&ZTLC                 SETC 'VIRTUAL'                                    00761300
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG174        00761400
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     00761500
                      AIF   (N'&BUFADDRTYPE LE 1).ZG162A  CK NUM        00761600
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           00761700
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00761800
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00761900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00762000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00762100
.ZG162A               ANOP  ,                                           00762200
.*------------------------------------------------------------------    00762300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00762400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00762500
.ZG162A0              AIF   (K'&BUFADDRSIZE LE 0).ZG162A1  OK           00762600
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00762700
.ZG162A1              AIF   (K'&ZCVAL LE 0).ZG162A2  OK                 00762800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00762900
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           00763000
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00763100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00763200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00763300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00763400
.ZG162A2              ANOP  ,                                           00763500
.*------------------------------------------------------------------    00763600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00763700
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00763800
.*-------------------------------------------------------------------   00763900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00764000
.ZG165                ANOP  ,                                           00764100
                      AIF   (K'&PAGEABLE(1) LE 0).ZG165A                00764200
&ZTLC                 SETC 'YES'                                        00764300
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG169           00764400
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00764500
                      AIF   (N'&PAGEABLE LE 1).ZG165A  CK NUM           00764600
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00764700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00764800
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00764900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00765000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00765100
.ZG165A               ANOP  ,                                           00765200
.*----------------------------------------------------------------***   00765300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00765400
                      AIF   (N'&BUFSTGKEY LE 1).ZG167A  CK NUM          00765500
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           00765600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00765700
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00765800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00765900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00766000
.ZG167A               ANOP  ,                                           00766100
.*-------------------------------------------------------------------   00766200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00766300
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00766400
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00766500
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG167B  PARM         00766600
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00766700
                      AIF   (N'&BUFSTGKEY GT 1).ZG167B  MULTI PARMS     00766800
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00766900
.ZG167B               ANOP  ,                                           00767000
.*-------------------------------------------------------------------   00767100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00767200
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG167R  NOT I/O       00767300
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG167R                  00767400
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG167R          00767500
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00767600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG167P               00767700
                      AIF   (K'&ZCGPR GT 2).ZG167Q                      00767800
                      AIF   ('&ZCGPR' EQ '0').ZG167Q                    00767900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00768000
                      AIF   (T'&ZCGPR NE 'N').ZG167Q  INVALID REG NAME  00768100
.ZG167P               ANOP  ,                                           00768200
                      AIF   (T'&ZCGPR NE 'N').ZG167R  NON NUMERIC       00768300
                      AIF   ('&ZCGPR' LT '2').ZG167Q                    00768400
                      AIF   ('&ZCGPR' LE '12').ZG167R                   00768500
.ZG167Q               ANOP  ,                                           00768600
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           00768700
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00768800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00768900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00769000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00769100
.ZG167R               ANOP  ,                                           00769200
.*-------------------------------------------------------------------   00769300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00769400
.ZG169                ANOP  ,                                           00769500
&ZTLC                 SETC 'NO'                                         00769600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG170           00769700
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00769800
                      AIF   (N'&PAGEABLE LE 1).ZG169A  CK NUM           00769900
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00770000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00770100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00770200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00770300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00770400
.ZG169A               ANOP  ,                                           00770500
.*------------------------------------------------------------------    00770600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00770700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00770800
.ZG169A0              AIF   (K'&BUFSTGKEY LE 0).ZG169A1  OK             00770900
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00771000
.ZG169A1              AIF   (K'&ZCVAL LE 0).ZG169A2  OK                 00771100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00771200
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           00771300
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00771400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00771500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00771600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00771700
.ZG169A2              ANOP  ,                                           00771800
.*------------------------------------------------------------------    00771900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00772000
.ZG170                ANOP  ,                                           00772100
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00772200
                      AIF   (K'&XPAGEABLE GT 0).ZG170E  VALID ARG       00772300
                      AIF   (T'&PAGEABLE EQ 'O').ZG170D  OMITTED        00772400
&ZASYSLNDX            SETA  0                                           00772500
.ZG170A               ANOP  ,           POSITIONAL MACRO KEY            00772600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00772700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG170C           00772800
&ZTLC                 SETC 'PAGEABLE'                                   00772900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG170A  00773000
.ZG170B               ANOP  ,                                           00773100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00773200
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         00773300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00773400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00773500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00773600
                      AGO   .ZG170E                                     00773700
.ZG170C               ANOP  ,                                           00773800
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00773900
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           00774000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00774100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00774200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00774300
&ZMS                  SETC  '&ZMS "YES"'                                00774400
&ZMS                  SETC  '&ZMS OR "NO".'                             00774500
                      MNOTE 8,' &ZMS '                                  00774600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00774700
                      AGO   .ZG170E                                     00774800
.ZG170D               ANOP  ,                                           00774900
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00775000
.ZG170E               ANOP  ,                                           00775100
.*----------------------------------------------------------------***   00775200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00775300
                      AIF   (N'&BUFALET LE 1).ZG172A  CK NUM            00775400
&ZMS                  SETC  '"BUFALET='         *KPOSA* MNOTE           00775500
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00775600
&ZMS                  SETC  '&ZMS "BUFALET"'                            00775700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00775800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00775900
.ZG172A               ANOP  ,                                           00776000
.*-------------------------------------------------------------------   00776100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00776200
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   00776300
&XBUFALET             SETC  'NO_BUFALET'                                00776400
                      AIF   (K'&BUFALET(1) LE 0).ZG172B  PARM           00776500
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           00776600
                      AIF   (N'&BUFALET GT 1).ZG172B  MULTI PARMS       00776700
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   00776800
.ZG172B               ANOP  ,                                           00776900
.*-------------------------------------------------------------------   00777000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00777100
                      AIF   (K'&ZXBUFALET LE 0).ZG172R  NOT I/O         00777200
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG172R                     00777300
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG172R            00777400
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                00777500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG172P               00777600
                      AIF   (K'&ZCGPR GT 2).ZG172Q                      00777700
                      AIF   ('&ZCGPR' EQ '0').ZG172Q                    00777800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00777900
                      AIF   (T'&ZCGPR NE 'N').ZG172Q  INVALID REG NAME  00778000
.ZG172P               ANOP  ,                                           00778100
                      AIF   (T'&ZCGPR NE 'N').ZG172R  NON NUMERIC       00778200
                      AIF   ('&ZCGPR' LT '2').ZG172Q                    00778300
                      AIF   ('&ZCGPR' LE '12').ZG172R                   00778400
.ZG172Q               ANOP  ,                                           00778500
&ZMS                  SETC  '"BUFALET='         *KGPRA* MNOTE           00778600
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00778700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00778800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00778900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00779000
.ZG172R               ANOP  ,                                           00779100
.*-------------------------------------------------------------------   00779200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00779300
.ZG174                ANOP  ,                                           00779400
&ZTLC                 SETC 'REAL'                                       00779500
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG180        00779600
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     00779700
                      AIF   (N'&BUFADDRTYPE LE 1).ZG174A  CK NUM        00779800
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           00779900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00780000
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00780100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00780200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00780300
.ZG174A               ANOP  ,                                           00780400
.*------------------------------------------------------------------    00780500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00780600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00780700
.ZG174A0              AIF   (K'&PAGEABLE LE 0).ZG174A1  OK              00780800
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00780900
.ZG174A1              AIF   (K'&BUFSTGKEY LE 0).ZG174A2  OK             00781000
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00781100
.ZG174A2              AIF   (K'&BUFALET LE 0).ZG174A3  OK               00781200
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00781300
.ZG174A3              AIF   (K'&ZCVAL LE 0).ZG174A4  OK                 00781400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00781500
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           00781600
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00781700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00781800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00781900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00782000
.ZG174A4              ANOP  ,                                           00782100
.*------------------------------------------------------------------    00782200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00782300
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            00782400
.*-------------------------------------------------------------------   00782500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00782600
.ZG177                ANOP  ,                                           00782700
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG177A             00782800
&ZTLC                 SETC '31'                                         00782900
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG178        00783000
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     00783100
                      AIF   (N'&BUFADDRSIZE LE 1).ZG177A  CK NUM        00783200
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           00783300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00783400
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00783500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00783600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00783700
.ZG177A               ANOP  ,                                           00783800
.*-------------------------------------------------------------------   00783900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00784000
.ZG178                ANOP  ,                                           00784100
&ZTLC                 SETC '64'                                         00784200
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG179        00784300
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     00784400
                      AIF   (N'&BUFADDRSIZE LE 1).ZG178A  CK NUM        00784500
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           00784600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00784700
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        00784800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00784900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00785000
.ZG178A               ANOP  ,                                           00785100
.*------------------------------------------------------------------    00785200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00785300
.ZG179                ANOP  ,                                           00785400
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   00785500
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG179E  VALID ARG    00785600
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG179D  OMITTED     00785700
&ZASYSLNDX            SETA  0                                           00785800
.ZG179A               ANOP  ,           POSITIONAL MACRO KEY            00785900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00786000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG179C           00786100
&ZTLC                 SETC 'BUFADDRSIZE'                                00786200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG179A  00786300
.ZG179B               ANOP  ,                                           00786400
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00786500
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE      00786600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00786700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00786800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00786900
                      AGO   .ZG179E                                     00787000
.ZG179C               ANOP  ,                                           00787100
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 00787200
&ZMS                  SETC  '"BUFADDRSIZE='     *KUKWA* MNOTE           00787300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        00787400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00787500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00787600
&ZMS                  SETC  '&ZMS "31"'                                 00787700
&ZMS                  SETC  '&ZMS OR "64".'                             00787800
                      MNOTE 8,' &ZMS '                                  00787900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00788000
                      AGO   .ZG179E                                     00788100
.ZG179D               ANOP  ,                                           00788200
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             00788300
.ZG179E               ANOP  ,                                           00788400
.*------------------------------------------------------------------    00788500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00788600
.ZG180                ANOP  ,                                           00788700
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   00788800
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG180E  VALID ARG    00788900
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG180D  OMITTED     00789000
&ZASYSLNDX            SETA  0                                           00789100
.ZG180A               ANOP  ,           POSITIONAL MACRO KEY            00789200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00789300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG180C           00789400
&ZTLC                 SETC 'BUFADDRTYPE'                                00789500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG180A  00789600
.ZG180B               ANOP  ,                                           00789700
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00789800
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE      00789900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00790000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00790100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00790200
                      AGO   .ZG180E                                     00790300
.ZG180C               ANOP  ,                                           00790400
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00790500
&ZMS                  SETC  '"BUFADDRTYPE='     *KUKWA* MNOTE           00790600
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00790700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00790800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00790900
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            00791000
&ZMS                  SETC  '&ZMS OR "REAL".'                           00791100
                      MNOTE 8,' &ZMS '                                  00791200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00791300
                      AGO   .ZG180E                                     00791400
.ZG180D               ANOP  ,                                           00791500
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             00791600
.ZG180E               ANOP  ,                                           00791700
.*-------------------------------------------------------------------   00791800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00791900
.ZG181                AIF   ('&XDATAREA' NE 'BUFFER').ZG190             00792000
.*-------------------------------------------------------------------   00792100
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00792200
&ZCVAL                SETC ''           ERROR KEY FIELD                 00792300
.ZG181I0              AIF   (K'&BUFADDRTYPE LE 0).ZG181I1               00792400
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         00792500
.ZG181I1              AIF   (K'&BUFALET LE 0).ZG181I2                   00792600
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          00792700
.ZG181I2              AIF   (K'&BUFADDRSIZE LE 0).ZG181I3               00792800
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         00792900
.ZG181I3              AIF   (K'&ZCVAL LE 0).ZG181J  KEY                 00793000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00793100
&ZMS                  SETC  '"BUFFER'   *KMEIA* MNOTE                   00793200
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00793300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00793400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00793500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00793600
.ZG181J               ANOP  ,                                           00793700
.*-------------------------------------------------------------------   00793800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00793900
                      AIF   (K'&ZXBUFFER LE 0).ZG181R  NOT I/O          00794000
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG181R             00794100
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  00794200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG181P               00794300
                      AIF   (K'&ZCGPR GT 2).ZG181Q                      00794400
                      AIF   ('&ZCGPR' EQ '0').ZG181Q                    00794500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00794600
                      AIF   (T'&ZCGPR NE 'N').ZG181Q  INVALID REG NAME  00794700
.ZG181P               ANOP  ,                                           00794800
                      AIF   (T'&ZCGPR NE 'N').ZG181R  NON NUMERIC       00794900
                      AIF   ('&ZCGPR' LT '2').ZG181Q                    00795000
                      AIF   ('&ZCGPR' LE '12').ZG181R                   00795100
.ZG181Q               ANOP  ,                                           00795200
&ZMS                  SETC  '"BUFFER='  *KGPRA* MNOTE                   00795300
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00795400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00795500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00795600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00795700
.ZG181R               ANOP  ,                                           00795800
.*------------------------------------------------------------------    00795900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00796000
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00796100
.*-------------------------------------------------------------------   00796200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00796300
.ZG184                ANOP  ,                                           00796400
                      AIF   (K'&PAGEABLE(1) LE 0).ZG184A                00796500
&ZTLC                 SETC 'YES'                                        00796600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG188           00796700
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00796800
                      AIF   (N'&PAGEABLE LE 1).ZG184A  CK NUM           00796900
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00797000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00797100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00797200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00797300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00797400
.ZG184A               ANOP  ,                                           00797500
.*----------------------------------------------------------------***   00797600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00797700
                      AIF   (N'&BUFSTGKEY LE 1).ZG186A  CK NUM          00797800
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           00797900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00798000
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00798100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00798200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00798300
.ZG186A               ANOP  ,                                           00798400
.*-------------------------------------------------------------------   00798500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00798600
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00798700
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00798800
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG186B  PARM         00798900
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00799000
                      AIF   (N'&BUFSTGKEY GT 1).ZG186B  MULTI PARMS     00799100
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00799200
.ZG186B               ANOP  ,                                           00799300
.*-------------------------------------------------------------------   00799400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00799500
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG186R  NOT I/O       00799600
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG186R                  00799700
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG186R          00799800
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00799900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG186P               00800000
                      AIF   (K'&ZCGPR GT 2).ZG186Q                      00800100
                      AIF   ('&ZCGPR' EQ '0').ZG186Q                    00800200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00800300
                      AIF   (T'&ZCGPR NE 'N').ZG186Q  INVALID REG NAME  00800400
.ZG186P               ANOP  ,                                           00800500
                      AIF   (T'&ZCGPR NE 'N').ZG186R  NON NUMERIC       00800600
                      AIF   ('&ZCGPR' LT '2').ZG186Q                    00800700
                      AIF   ('&ZCGPR' LE '12').ZG186R                   00800800
.ZG186Q               ANOP  ,                                           00800900
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           00801000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00801100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00801200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00801300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00801400
.ZG186R               ANOP  ,                                           00801500
.*-------------------------------------------------------------------   00801600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00801700
.ZG188                ANOP  ,                                           00801800
&ZTLC                 SETC 'NO'                                         00801900
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG189           00802000
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00802100
                      AIF   (N'&PAGEABLE LE 1).ZG188A  CK NUM           00802200
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00802300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00802400
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00802500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00802600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00802700
.ZG188A               ANOP  ,                                           00802800
.*------------------------------------------------------------------    00802900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00803000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00803100
.ZG188A0              AIF   (K'&BUFSTGKEY LE 0).ZG188A1  OK             00803200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00803300
.ZG188A1              AIF   (K'&ZCVAL LE 0).ZG188A2  OK                 00803400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00803500
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           00803600
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00803700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00803800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00803900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00804000
.ZG188A2              ANOP  ,                                           00804100
.*------------------------------------------------------------------    00804200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00804300
.ZG189                ANOP  ,                                           00804400
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00804500
                      AIF   (K'&XPAGEABLE GT 0).ZG189E  VALID ARG       00804600
                      AIF   (T'&PAGEABLE EQ 'O').ZG189D  OMITTED        00804700
&ZASYSLNDX            SETA  0                                           00804800
.ZG189A               ANOP  ,           POSITIONAL MACRO KEY            00804900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00805000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG189C           00805100
&ZTLC                 SETC 'PAGEABLE'                                   00805200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG189A  00805300
.ZG189B               ANOP  ,                                           00805400
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00805500
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         00805600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00805700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00805800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00805900
                      AGO   .ZG189E                                     00806000
.ZG189C               ANOP  ,                                           00806100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00806200
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           00806300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00806400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00806500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00806600
&ZMS                  SETC  '&ZMS "YES"'                                00806700
&ZMS                  SETC  '&ZMS OR "NO".'                             00806800
                      MNOTE 8,' &ZMS '                                  00806900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00807000
                      AGO   .ZG189E                                     00807100
.ZG189D               ANOP  ,                                           00807200
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00807300
.ZG189E               ANOP  ,                                           00807400
.*-------------------------------------------------------------------   00807500
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00807600
.ZG190                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     00807700
.*-------------------------------------------------------------------   00807800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00807900
.ZG191                ANOP  ,                                           00808000
&ZTLC                 SETC 'MONITOR_EVENTQ'                             00808100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG210            00808200
&XREQUEST             SETC  'MONITOR_EVENTQ'    SET KEYWORD             00808300
                      AIF   (N'&REQUEST LE 1).ZG191A  CK NUM            00808400
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00808500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00808600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00808700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00808800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00808900
.ZG191A               ANOP  ,                                           00809000
.*------------------------------------------------------------------    00809100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00809200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00809300
.ZG191A0              AIF   (K'&LOCKINDEX LE 0).ZG191A1  OK             00809400
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00809500
.ZG191A1              AIF   (K'&LOCKOPER LE 0).ZG191A2  OK              00809600
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00809700
.ZG191A2              AIF   (K'&LOCKMODE LE 0).ZG191A3  OK              00809800
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00809900
.ZG191A3              AIF   (K'&LOCKCOMP LE 0).ZG191A4  OK              00810000
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00810100
.ZG191A4              AIF   (K'&LOCKDATA LE 0).ZG191A5  OK              00810200
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00810300
.ZG191A5              AIF   (K'&LISTNUM LE 0).ZG191A6  OK               00810400
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00810500
.ZG191A6              AIF   (K'&BUFLIST LE 0).ZG191A7  OK               00810600
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00810700
.ZG191A7              AIF   (K'&BUFADDRTYPE LE 0).ZG191A8  OK           00810800
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00810900
.ZG191A8              AIF   (K'&PAGEABLE LE 0).ZG191A9  OK              00811000
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00811100
.ZG191A9              AIF   (K'&BUFSTGKEY LE 0).ZG191A10  OK            00811200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00811300
.ZG191A10             AIF   (K'&BUFALET LE 0).ZG191A11  OK              00811400
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00811500
.ZG191A11             AIF   (K'&BUFADDRSIZE LE 0).ZG191A12  OK          00811600
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00811700
.ZG191A12             AIF   (K'&BUFFER LE 0).ZG191A13  OK               00811800
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00811900
.ZG191A13             AIF   (K'&AUTHCOMP LE 0).ZG191A14  OK             00812000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00812100
.ZG191A14             AIF   (K'&NEWAUTH LE 0).ZG191A15  OK              00812200
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00812300
.ZG191A15             AIF   (K'&LISTLIMIT LE 0).ZG191A16  OK            00812400
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00812500
.ZG191A16             AIF   (K'&LISTDESC LE 0).ZG191A17  OK             00812600
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00812700
.ZG191A17             AIF   (K'&LISTKEY LE 0).ZG191A18  OK              00812800
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00812900
.ZG191A18             AIF   (K'&MAXLISTKEY LE 0).ZG191A19  OK           00813000
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00813100
.ZG191A19             AIF   (K'&SETCURSOR LE 0).ZG191A20  OK            00813200
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00813300
.ZG191A20             AIF   (K'&KEYRANGE LE 0).ZG191A21  OK             00813400
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00813500
.ZG191A21             AIF   (K'&KEYRANGESTART LE 0).ZG191A22  OK        00813600
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00813700
.ZG191A22             AIF   (K'&KEYRANGEEND LE 0).ZG191A23  OK          00813800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00813900
.ZG191A23             AIF   (K'&KEYRANGESTATE LE 0).ZG191A24  OK        00814000
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00814100
.ZG191A24             AIF   (K'&KREMPTY LE 0).ZG191A25  OK              00814200
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00814300
.ZG191A25             AIF   (K'&KRNOTEMPTY LE 0).ZG191A26  OK           00814400
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00814500
.ZG191A26             AIF   (K'&LISTSTATE LE 0).ZG191A27  OK            00814600
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00814700
.ZG191A27             AIF   (K'&LISTEMPTY LE 0).ZG191A28  OK            00814800
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00814900
.ZG191A28             AIF   (K'&LISTNOTEMPTY LE 0).ZG191A29  OK         00815000
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00815100
.ZG191A29             AIF   (K'&ENTRYKEY LE 0).ZG191A30  OK             00815200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00815300
.ZG191A30             AIF   (K'&SECONDARYKEY LE 0).ZG191A31  OK         00815400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00815500
.ZG191A31             AIF   (K'&NOTIFICATION LE 0).ZG191A32  OK         00815600
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00815700
.ZG191A32             AIF   (K'&UNC LE 0).ZG191A33  OK                  00815800
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00815900
.ZG191A33             AIF   (K'&STARTINDEX LE 0).ZG191A34  OK           00816000
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00816100
.ZG191A34             AIF   (K'&ENDINDEX LE 0).ZG191A35  OK             00816200
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00816300
.ZG191A35             AIF   (K'&MOSVECTOR LE 0).ZG191A36  OK            00816400
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00816500
.ZG191A36             AIF   (K'&BUFNUM LE 0).ZG191A37  OK               00816600
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00816700
.ZG191A37             AIF   (K'&BUFINCRNUM LE 0).ZG191A38  OK           00816800
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00816900
.ZG191A38             AIF   (K'&BUFSIZE LE 0).ZG191A39  OK              00817000
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00817100
.ZG191A39             AIF   (K'&ZCVAL LE 0).ZG191A40  OK                00817200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00817300
                      AIF  (K'&ZCVAL LE 160).ZG191A40A                  00817400
&ZCVAL                SETC '&ZCVAL'(1,160)                              00817500
&ZCVAL                SETC '&ZCVAL....'                                 00817600
.ZG191A40A            ANOP                                              00817700
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00817800
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00817900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00818000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00818100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00818200
.ZG191A40             ANOP  ,                                           00818300
.*----------------------------------------------------------------***   00818400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00818500
                      AIF   (N'&KEYTYPE LE 1).ZG193A  CK NUM            00818600
&ZMS                  SETC  '"KEYTYPE='         *KPOSA* MNOTE           00818700
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00818800
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            00818900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00819000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00819100
.ZG193A               ANOP  ,                                           00819200
.*-------------------------------------------------------------------   00819300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00819400
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            00819500
.ZG194A   AIF   ('&KEYTYPE(1)' NE 'ENTRY').ZG195A                       00819600
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     00819700
.*-------------------------------------------------------------------   00819800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00819900
.ZG195A   AIF   ('&KEYTYPE(1)' NE 'SECONDARY').ZG196A                   00820000
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             00820100
.*-------------------------------------------------------------------   00820200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00820300
.ZG196A               AIF   (K'&XKEYTYPE GT 0).ZG196C  KEYWORD          00820400
                      AIF   (K'&KEYTYPE(1) LE 0).ZG196B                 00820500
&ZMS                  SETC  '"KEYTYPE='         *KUKWA* MNOTE           00820600
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            00820700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00820800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00820900
&ZMS                  SETC  '&ZMS "ENTRY"'                              00821000
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      00821100
                      MNOTE 8,' &ZMS '                                  00821200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00821300
.ZG196B               ANOP  ,                                           00821400
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             00821500
.ZG196C               ANOP  ,                                           00821600
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   00821700
.*------------------------------------------------------------------    00821800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00821900
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00822000
.*-------------------------------------------------------------------   00822100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00822200
.ZG199                ANOP  ,                                           00822300
                      AIF   (K'&ACTION(1) LE 0).ZG199A                  00822400
&ZTLC                 SETC 'START'                                      00822500
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG208             00822600
&XACTION              SETC  'START'     SET KEYWORD                     00822700
                      AIF   (N'&ACTION LE 1).ZG199A  CK NUM             00822800
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00822900
&ZMS                  SETC  '&ZMS.&ACTION"'                             00823000
&ZMS                  SETC  '&ZMS "ACTION"'                             00823100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00823200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00823300
.ZG199A               ANOP  ,                                           00823400
.*----------------------------------------------------------------***   00823500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00823600
                      AIF   (N'&VECTORINDEX LE 1).ZG201A  CK NUM        00823700
&ZMS                  SETC  '"VECTORINDEX='     *KPOSA* MNOTE           00823800
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00823900
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00824000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00824100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00824200
.ZG201A               ANOP  ,                                           00824300
.*-------------------------------------------------------------------   00824400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00824500
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00824600
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00824700
                      AIF   (N'&VECTORINDEX GT 1).ZG201B  MULTI PARMS   00824800
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00824900
.ZG201B               AIF   (K'&VECTORINDEX(1) GT 0).ZG201C             00825000
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00825100
&ZMS                  SETC  ' '         *KRQDA*                         00825200
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00825300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00825400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00825500
.ZG201C               ANOP  ,                                           00825600
.*-------------------------------------------------------------------   00825700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00825800
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG201R  NOT I/O     00825900
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG201R        00826000
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00826100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG201P               00826200
                      AIF   (K'&ZCGPR GT 2).ZG201Q                      00826300
                      AIF   ('&ZCGPR' EQ '0').ZG201Q                    00826400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00826500
                      AIF   (T'&ZCGPR NE 'N').ZG201Q  INVALID REG NAME  00826600
.ZG201P               ANOP  ,                                           00826700
                      AIF   (T'&ZCGPR NE 'N').ZG201R  NON NUMERIC       00826800
                      AIF   ('&ZCGPR' LT '2').ZG201Q                    00826900
                      AIF   ('&ZCGPR' LE '12').ZG201R                   00827000
.ZG201Q               ANOP  ,                                           00827100
&ZMS                  SETC  '"VECTORINDEX='     *KGPRA* MNOTE           00827200
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00827300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00827400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00827500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00827600
.ZG201R               ANOP  ,                                           00827700
.*----------------------------------------------------------------***   00827800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00827900
                      AIF   (N'&DRIVEEXIT LE 1).ZG204A  CK NUM          00828000
&ZMS                  SETC  '"DRIVEEXIT='       *KPOSA* MNOTE           00828100
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00828200
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          00828300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00828400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00828500
.ZG204A               ANOP  ,                                           00828600
.*-------------------------------------------------------------------   00828700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00828800
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            00828900
.ZG205A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG206A                       00829000
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     00829100
.*-------------------------------------------------------------------   00829200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00829300
.ZG206A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG207A                        00829400
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     00829500
.*-------------------------------------------------------------------   00829600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00829700
.ZG207A               AIF   (K'&XDRIVEEXIT GT 0).ZG207C  KEYWORD        00829800
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG207B               00829900
&ZMS                  SETC  '"DRIVEEXIT='       *KUKWA* MNOTE           00830000
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00830100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00830200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00830300
&ZMS                  SETC  '&ZMS "YES"'                                00830400
&ZMS                  SETC  '&ZMS OR "NO".'                             00830500
                      MNOTE 8,' &ZMS '                                  00830600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00830700
.ZG207B               ANOP  ,                                           00830800
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             00830900
.ZG207C               ANOP  ,                                           00831000
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   00831100
.*-------------------------------------------------------------------   00831200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00831300
.ZG208                ANOP  ,                                           00831400
&ZTLC                 SETC 'STOP'                                       00831500
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG209             00831600
&XACTION              SETC  'STOP'      SET KEYWORD                     00831700
                      AIF   (N'&ACTION LE 1).ZG208A  CK NUM             00831800
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00831900
&ZMS                  SETC  '&ZMS.&ACTION"'                             00832000
&ZMS                  SETC  '&ZMS "ACTION"'                             00832100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00832200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00832300
.ZG208A               ANOP  ,                                           00832400
.*------------------------------------------------------------------    00832500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00832600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00832700
.ZG208A0              AIF   (K'&VECTORINDEX LE 0).ZG208A1  OK           00832800
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00832900
.ZG208A1              AIF   (K'&DRIVEEXIT LE 0).ZG208A2  OK             00833000
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00833100
.ZG208A2              AIF   (K'&ZCVAL LE 0).ZG208A3  OK                 00833200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00833300
&ZMS                  SETC  '"ACTION'   *KMEIA* MNOTE                   00833400
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00833500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00833600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00833700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00833800
.ZG208A3              ANOP  ,                                           00833900
.*------------------------------------------------------------------    00834000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00834100
.ZG209                ANOP  ,                                           00834200
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00834300
                      AIF   (K'&XACTION GT 0).ZG209E  VALID ARG         00834400
                      AIF   (T'&ACTION EQ 'O').ZG209D  OMITTED          00834500
&ZASYSLNDX            SETA  0                                           00834600
.ZG209A               ANOP  ,           POSITIONAL MACRO KEY            00834700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00834800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG209C           00834900
&ZTLC                 SETC 'ACTION'                                     00835000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG209A  00835100
.ZG209B               ANOP  ,                                           00835200
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00835300
&ZMS                  SETC  'THE "ACTION" KEY'  *KOPTA* MNOTE           00835400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00835500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00835600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00835700
                      AGO   .ZG209E                                     00835800
.ZG209C               ANOP  ,                                           00835900
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00836000
&ZMS                  SETC  '"ACTION='  *KUKWA* MNOTE                   00836100
&ZMS                  SETC  '&ZMS.&ACTION"'                             00836200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00836300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00836400
&ZMS                  SETC  '&ZMS "START"'                              00836500
&ZMS                  SETC  '&ZMS OR "STOP".'                           00836600
                      MNOTE 8,' &ZMS '                                  00836700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00836800
                      AGO   .ZG209E                                     00836900
.ZG209D               ANOP  ,                                           00837000
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00837100
.ZG209E               ANOP  ,                                           00837200
.*------------------------------------------------------------------    00837300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00837400
                      AIF   (K'&ACTION(1) GT 0).ZG209F  PARM            00837500
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00837600
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00837700
&ZMS                  SETC  'THE'                                       00837800
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00837900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00838000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00838100
&ZMS                  SETC  '&ZMS "START"'                              00838200
&ZMS                  SETC  '&ZMS OR "STOP".'                           00838300
                      MNOTE 8,' &ZMS '                                  00838400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00838500
.ZG209F               ANOP  ,                                           00838600
.*-------------------------------------------------------------------   00838700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00838800
.ZG210                ANOP  ,                                           00838900
&ZTLC                 SETC 'MONITOR_LIST'                               00839000
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG227            00839100
&XREQUEST             SETC  'MONITOR_LIST'      SET KEYWORD             00839200
                      AIF   (N'&REQUEST LE 1).ZG210A  CK NUM            00839300
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00839400
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00839500
&ZMS                  SETC  '&ZMS "REQUEST"'                            00839600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00839700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00839800
.ZG210A               ANOP  ,                                           00839900
.*------------------------------------------------------------------    00840000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00840100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00840200
.ZG210A0              AIF   (K'&LOCKINDEX LE 0).ZG210A1  OK             00840300
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00840400
.ZG210A1              AIF   (K'&LOCKOPER LE 0).ZG210A2  OK              00840500
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00840600
.ZG210A2              AIF   (K'&LOCKMODE LE 0).ZG210A3  OK              00840700
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00840800
.ZG210A3              AIF   (K'&LOCKCOMP LE 0).ZG210A4  OK              00840900
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00841000
.ZG210A4              AIF   (K'&LOCKDATA LE 0).ZG210A5  OK              00841100
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00841200
.ZG210A5              AIF   (K'&BUFLIST LE 0).ZG210A6  OK               00841300
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00841400
.ZG210A6              AIF   (K'&BUFADDRTYPE LE 0).ZG210A7  OK           00841500
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00841600
.ZG210A7              AIF   (K'&PAGEABLE LE 0).ZG210A8  OK              00841700
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00841800
.ZG210A8              AIF   (K'&BUFSTGKEY LE 0).ZG210A9  OK             00841900
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00842000
.ZG210A9              AIF   (K'&BUFALET LE 0).ZG210A10  OK              00842100
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00842200
.ZG210A10             AIF   (K'&BUFADDRSIZE LE 0).ZG210A11  OK          00842300
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00842400
.ZG210A11             AIF   (K'&BUFFER LE 0).ZG210A12  OK               00842500
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00842600
.ZG210A12             AIF   (K'&AUTHCOMP LE 0).ZG210A13  OK             00842700
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00842800
.ZG210A13             AIF   (K'&NEWAUTH LE 0).ZG210A14  OK              00842900
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00843000
.ZG210A14             AIF   (K'&LISTLIMIT LE 0).ZG210A15  OK            00843100
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00843200
.ZG210A15             AIF   (K'&LISTDESC LE 0).ZG210A16  OK             00843300
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00843400
.ZG210A16             AIF   (K'&LISTKEY LE 0).ZG210A17  OK              00843500
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00843600
.ZG210A17             AIF   (K'&MAXLISTKEY LE 0).ZG210A18  OK           00843700
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00843800
.ZG210A18             AIF   (K'&SETCURSOR LE 0).ZG210A19  OK            00843900
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00844000
.ZG210A19             AIF   (K'&KEYRANGE LE 0).ZG210A20  OK             00844100
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00844200
.ZG210A20             AIF   (K'&KEYRANGESTART LE 0).ZG210A21  OK        00844300
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00844400
.ZG210A21             AIF   (K'&KEYRANGEEND LE 0).ZG210A22  OK          00844500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00844600
.ZG210A22             AIF   (K'&KEYRANGESTATE LE 0).ZG210A23  OK        00844700
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00844800
.ZG210A23             AIF   (K'&KREMPTY LE 0).ZG210A24  OK              00844900
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00845000
.ZG210A24             AIF   (K'&KRNOTEMPTY LE 0).ZG210A25  OK           00845100
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00845200
.ZG210A25             AIF   (K'&LISTSTATE LE 0).ZG210A26  OK            00845300
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00845400
.ZG210A26             AIF   (K'&LISTEMPTY LE 0).ZG210A27  OK            00845500
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00845600
.ZG210A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG210A28  OK         00845700
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00845800
.ZG210A28             AIF   (K'&KEYTYPE LE 0).ZG210A29  OK              00845900
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00846000
.ZG210A29             AIF   (K'&ENTRYKEY LE 0).ZG210A30  OK             00846100
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00846200
.ZG210A30             AIF   (K'&SECONDARYKEY LE 0).ZG210A31  OK         00846300
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00846400
.ZG210A31             AIF   (K'&NOTIFICATION LE 0).ZG210A32  OK         00846500
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00846600
.ZG210A32             AIF   (K'&UNC LE 0).ZG210A33  OK                  00846700
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00846800
.ZG210A33             AIF   (K'&STARTINDEX LE 0).ZG210A34  OK           00846900
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00847000
.ZG210A34             AIF   (K'&ENDINDEX LE 0).ZG210A35  OK             00847100
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00847200
.ZG210A35             AIF   (K'&MOSVECTOR LE 0).ZG210A36  OK            00847300
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00847400
.ZG210A36             AIF   (K'&BUFNUM LE 0).ZG210A37  OK               00847500
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00847600
.ZG210A37             AIF   (K'&BUFINCRNUM LE 0).ZG210A38  OK           00847700
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00847800
.ZG210A38             AIF   (K'&BUFSIZE LE 0).ZG210A39  OK              00847900
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00848000
.ZG210A39             AIF   (K'&ZCVAL LE 0).ZG210A40  OK                00848100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00848200
                      AIF  (K'&ZCVAL LE 160).ZG210A40A                  00848300
&ZCVAL                SETC '&ZCVAL'(1,160)                              00848400
&ZCVAL                SETC '&ZCVAL....'                                 00848500
.ZG210A40A            ANOP                                              00848600
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00848700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00848800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00848900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00849000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00849100
.ZG210A40             ANOP  ,                                           00849200
.*----------------------------------------------------------------***   00849300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00849400
                      AIF   (N'&LISTNUM LE 1).ZG212A  CK NUM            00849500
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           00849600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00849700
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00849800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00849900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00850000
.ZG212A               ANOP  ,                                           00850100
.*-------------------------------------------------------------------   00850200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00850300
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00850400
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00850500
                      AIF   (N'&LISTNUM GT 1).ZG212B  MULTI PARMS       00850600
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00850700
.ZG212B               AIF   (K'&LISTNUM(1) GT 0).ZG212C                 00850800
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00850900
&ZMS                  SETC  ' '         *KRQDA*                         00851000
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00851100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00851200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00851300
.ZG212C               ANOP  ,                                           00851400
.*-------------------------------------------------------------------   00851500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00851600
                      AIF   (K'&ZXLISTNUM LE 0).ZG212R  NOT I/O         00851700
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG212R            00851800
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00851900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG212P               00852000
                      AIF   (K'&ZCGPR GT 2).ZG212Q                      00852100
                      AIF   ('&ZCGPR' EQ '0').ZG212Q                    00852200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00852300
                      AIF   (T'&ZCGPR NE 'N').ZG212Q  INVALID REG NAME  00852400
.ZG212P               ANOP  ,                                           00852500
                      AIF   (T'&ZCGPR NE 'N').ZG212R  NON NUMERIC       00852600
                      AIF   ('&ZCGPR' LT '2').ZG212Q                    00852700
                      AIF   ('&ZCGPR' LE '12').ZG212R                   00852800
.ZG212Q               ANOP  ,                                           00852900
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           00853000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00853100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00853200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00853300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00853400
.ZG212R               ANOP  ,                                           00853500
.*------------------------------------------------------------------    00853600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00853700
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00853800
.*-------------------------------------------------------------------   00853900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00854000
.ZG216                ANOP  ,                                           00854100
                      AIF   (K'&ACTION(1) LE 0).ZG216A                  00854200
&ZTLC                 SETC 'START'                                      00854300
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG225             00854400
&XACTION              SETC  'START'     SET KEYWORD                     00854500
                      AIF   (N'&ACTION LE 1).ZG216A  CK NUM             00854600
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00854700
&ZMS                  SETC  '&ZMS.&ACTION"'                             00854800
&ZMS                  SETC  '&ZMS "ACTION"'                             00854900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00855000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00855100
.ZG216A               ANOP  ,                                           00855200
.*----------------------------------------------------------------***   00855300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00855400
                      AIF   (N'&VECTORINDEX LE 1).ZG218A  CK NUM        00855500
&ZMS                  SETC  '"VECTORINDEX='     *KPOSA* MNOTE           00855600
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00855700
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00855800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00855900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00856000
.ZG218A               ANOP  ,                                           00856100
.*-------------------------------------------------------------------   00856200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00856300
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00856400
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00856500
                      AIF   (N'&VECTORINDEX GT 1).ZG218B  MULTI PARMS   00856600
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00856700
.ZG218B               AIF   (K'&VECTORINDEX(1) GT 0).ZG218C             00856800
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00856900
&ZMS                  SETC  ' '         *KRQDA*                         00857000
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00857100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00857200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00857300
.ZG218C               ANOP  ,                                           00857400
.*-------------------------------------------------------------------   00857500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00857600
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG218R  NOT I/O     00857700
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG218R        00857800
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00857900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG218P               00858000
                      AIF   (K'&ZCGPR GT 2).ZG218Q                      00858100
                      AIF   ('&ZCGPR' EQ '0').ZG218Q                    00858200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00858300
                      AIF   (T'&ZCGPR NE 'N').ZG218Q  INVALID REG NAME  00858400
.ZG218P               ANOP  ,                                           00858500
                      AIF   (T'&ZCGPR NE 'N').ZG218R  NON NUMERIC       00858600
                      AIF   ('&ZCGPR' LT '2').ZG218Q                    00858700
                      AIF   ('&ZCGPR' LE '12').ZG218R                   00858800
.ZG218Q               ANOP  ,                                           00858900
&ZMS                  SETC  '"VECTORINDEX='     *KGPRA* MNOTE           00859000
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00859100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00859200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00859300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00859400
.ZG218R               ANOP  ,                                           00859500
.*----------------------------------------------------------------***   00859600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00859700
                      AIF   (N'&DRIVEEXIT LE 1).ZG221A  CK NUM          00859800
&ZMS                  SETC  '"DRIVEEXIT='       *KPOSA* MNOTE           00859900
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00860000
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          00860100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00860200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00860300
.ZG221A               ANOP  ,                                           00860400
.*-------------------------------------------------------------------   00860500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00860600
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            00860700
.ZG222A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG223A                       00860800
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     00860900
.*-------------------------------------------------------------------   00861000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00861100
.ZG223A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG224A                        00861200
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     00861300
.*-------------------------------------------------------------------   00861400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00861500
.ZG224A               AIF   (K'&XDRIVEEXIT GT 0).ZG224C  KEYWORD        00861600
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG224B               00861700
&ZMS                  SETC  '"DRIVEEXIT='       *KUKWA* MNOTE           00861800
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00861900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00862000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00862100
&ZMS                  SETC  '&ZMS "YES"'                                00862200
&ZMS                  SETC  '&ZMS OR "NO".'                             00862300
                      MNOTE 8,' &ZMS '                                  00862400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00862500
.ZG224B               ANOP  ,                                           00862600
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             00862700
.ZG224C               ANOP  ,                                           00862800
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   00862900
.*-------------------------------------------------------------------   00863000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00863100
.ZG225                ANOP  ,                                           00863200
&ZTLC                 SETC 'STOP'                                       00863300
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG226             00863400
&XACTION              SETC  'STOP'      SET KEYWORD                     00863500
                      AIF   (N'&ACTION LE 1).ZG225A  CK NUM             00863600
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00863700
&ZMS                  SETC  '&ZMS.&ACTION"'                             00863800
&ZMS                  SETC  '&ZMS "ACTION"'                             00863900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00864000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00864100
.ZG225A               ANOP  ,                                           00864200
.*------------------------------------------------------------------    00864300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00864400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00864500
.ZG225A0              AIF   (K'&VECTORINDEX LE 0).ZG225A1  OK           00864600
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00864700
.ZG225A1              AIF   (K'&DRIVEEXIT LE 0).ZG225A2  OK             00864800
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00864900
.ZG225A2              AIF   (K'&ZCVAL LE 0).ZG225A3  OK                 00865000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00865100
&ZMS                  SETC  '"ACTION'   *KMEIA* MNOTE                   00865200
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00865300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00865400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00865500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00865600
.ZG225A3              ANOP  ,                                           00865700
.*------------------------------------------------------------------    00865800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00865900
.ZG226                ANOP  ,                                           00866000
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00866100
                      AIF   (K'&XACTION GT 0).ZG226E  VALID ARG         00866200
                      AIF   (T'&ACTION EQ 'O').ZG226D  OMITTED          00866300
&ZASYSLNDX            SETA  0                                           00866400
.ZG226A               ANOP  ,           POSITIONAL MACRO KEY            00866500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00866600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG226C           00866700
&ZTLC                 SETC 'ACTION'                                     00866800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG226A  00866900
.ZG226B               ANOP  ,                                           00867000
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00867100
&ZMS                  SETC  'THE "ACTION" KEY'  *KOPTA* MNOTE           00867200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00867300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00867400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00867500
                      AGO   .ZG226E                                     00867600
.ZG226C               ANOP  ,                                           00867700
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00867800
&ZMS                  SETC  '"ACTION='  *KUKWA* MNOTE                   00867900
&ZMS                  SETC  '&ZMS.&ACTION"'                             00868000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00868100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00868200
&ZMS                  SETC  '&ZMS "START"'                              00868300
&ZMS                  SETC  '&ZMS OR "STOP".'                           00868400
                      MNOTE 8,' &ZMS '                                  00868500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00868600
                      AGO   .ZG226E                                     00868700
.ZG226D               ANOP  ,                                           00868800
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00868900
.ZG226E               ANOP  ,                                           00869000
.*------------------------------------------------------------------    00869100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00869200
                      AIF   (K'&ACTION(1) GT 0).ZG226F  PARM            00869300
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00869400
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00869500
&ZMS                  SETC  'THE'                                       00869600
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00869700
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00869800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00869900
&ZMS                  SETC  '&ZMS "START"'                              00870000
&ZMS                  SETC  '&ZMS OR "STOP".'                           00870100
                      MNOTE 8,' &ZMS '                                  00870200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00870300
.ZG226F               ANOP  ,                                           00870400
.*-------------------------------------------------------------------   00870500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00870600
.ZG227                ANOP  ,                                           00870700
&ZTLC                 SETC 'MONITOR_KEYRANGE'                           00870800
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG244            00870900
&XREQUEST             SETC  'MONITOR_KEYRANGE'  SET KEYWORD             00871000
                      AIF   (N'&REQUEST LE 1).ZG227A  CK NUM            00871100
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00871200
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00871300
&ZMS                  SETC  '&ZMS "REQUEST"'                            00871400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00871500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00871600
.ZG227A               ANOP  ,                                           00871700
.*------------------------------------------------------------------    00871800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00871900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00872000
.ZG227A0              AIF   (K'&LOCKINDEX LE 0).ZG227A1  OK             00872100
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00872200
.ZG227A1              AIF   (K'&LOCKOPER LE 0).ZG227A2  OK              00872300
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00872400
.ZG227A2              AIF   (K'&LOCKMODE LE 0).ZG227A3  OK              00872500
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00872600
.ZG227A3              AIF   (K'&LOCKCOMP LE 0).ZG227A4  OK              00872700
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00872800
.ZG227A4              AIF   (K'&LOCKDATA LE 0).ZG227A5  OK              00872900
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00873000
.ZG227A5              AIF   (K'&BUFLIST LE 0).ZG227A6  OK               00873100
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00873200
.ZG227A6              AIF   (K'&BUFADDRTYPE LE 0).ZG227A7  OK           00873300
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00873400
.ZG227A7              AIF   (K'&PAGEABLE LE 0).ZG227A8  OK              00873500
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00873600
.ZG227A8              AIF   (K'&BUFSTGKEY LE 0).ZG227A9  OK             00873700
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00873800
.ZG227A9              AIF   (K'&BUFALET LE 0).ZG227A10  OK              00873900
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00874000
.ZG227A10             AIF   (K'&BUFADDRSIZE LE 0).ZG227A11  OK          00874100
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00874200
.ZG227A11             AIF   (K'&BUFFER LE 0).ZG227A12  OK               00874300
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00874400
.ZG227A12             AIF   (K'&AUTHCOMP LE 0).ZG227A13  OK             00874500
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00874600
.ZG227A13             AIF   (K'&NEWAUTH LE 0).ZG227A14  OK              00874700
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00874800
.ZG227A14             AIF   (K'&LISTLIMIT LE 0).ZG227A15  OK            00874900
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00875000
.ZG227A15             AIF   (K'&LISTDESC LE 0).ZG227A16  OK             00875100
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00875200
.ZG227A16             AIF   (K'&LISTKEY LE 0).ZG227A17  OK              00875300
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00875400
.ZG227A17             AIF   (K'&MAXLISTKEY LE 0).ZG227A18  OK           00875500
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00875600
.ZG227A18             AIF   (K'&SETCURSOR LE 0).ZG227A19  OK            00875700
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00875800
.ZG227A19             AIF   (K'&KEYRANGE LE 0).ZG227A20  OK             00875900
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00876000
.ZG227A20             AIF   (K'&KEYRANGESTART LE 0).ZG227A21  OK        00876100
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00876200
.ZG227A21             AIF   (K'&KEYRANGEEND LE 0).ZG227A22  OK          00876300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00876400
.ZG227A22             AIF   (K'&KEYRANGESTATE LE 0).ZG227A23  OK        00876500
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00876600
.ZG227A23             AIF   (K'&KREMPTY LE 0).ZG227A24  OK              00876700
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00876800
.ZG227A24             AIF   (K'&KRNOTEMPTY LE 0).ZG227A25  OK           00876900
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00877000
.ZG227A25             AIF   (K'&LISTSTATE LE 0).ZG227A26  OK            00877100
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00877200
.ZG227A26             AIF   (K'&LISTEMPTY LE 0).ZG227A27  OK            00877300
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00877400
.ZG227A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG227A28  OK         00877500
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00877600
.ZG227A28             AIF   (K'&KEYTYPE LE 0).ZG227A29  OK              00877700
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00877800
.ZG227A29             AIF   (K'&ENTRYKEY LE 0).ZG227A30  OK             00877900
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00878000
.ZG227A30             AIF   (K'&SECONDARYKEY LE 0).ZG227A31  OK         00878100
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00878200
.ZG227A31             AIF   (K'&NOTIFICATION LE 0).ZG227A32  OK         00878300
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00878400
.ZG227A32             AIF   (K'&UNC LE 0).ZG227A33  OK                  00878500
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00878600
.ZG227A33             AIF   (K'&STARTINDEX LE 0).ZG227A34  OK           00878700
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00878800
.ZG227A34             AIF   (K'&ENDINDEX LE 0).ZG227A35  OK             00878900
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00879000
.ZG227A35             AIF   (K'&MOSVECTOR LE 0).ZG227A36  OK            00879100
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00879200
.ZG227A36             AIF   (K'&BUFNUM LE 0).ZG227A37  OK               00879300
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00879400
.ZG227A37             AIF   (K'&BUFINCRNUM LE 0).ZG227A38  OK           00879500
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00879600
.ZG227A38             AIF   (K'&BUFSIZE LE 0).ZG227A39  OK              00879700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00879800
.ZG227A39             AIF   (K'&ZCVAL LE 0).ZG227A40  OK                00879900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00880000
                      AIF  (K'&ZCVAL LE 160).ZG227A40A                  00880100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00880200
&ZCVAL                SETC '&ZCVAL....'                                 00880300
.ZG227A40A            ANOP                                              00880400
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00880500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00880600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00880700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00880800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00880900
.ZG227A40             ANOP  ,                                           00881000
.*----------------------------------------------------------------***   00881100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00881200
                      AIF   (N'&LISTNUM LE 1).ZG229A  CK NUM            00881300
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           00881400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00881500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00881600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00881700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00881800
.ZG229A               ANOP  ,                                           00881900
.*-------------------------------------------------------------------   00882000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00882100
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00882200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00882300
                      AIF   (N'&LISTNUM GT 1).ZG229B  MULTI PARMS       00882400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00882500
.ZG229B               AIF   (K'&LISTNUM(1) GT 0).ZG229C                 00882600
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00882700
&ZMS                  SETC  ' '         *KRQDA*                         00882800
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00882900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00883000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00883100
.ZG229C               ANOP  ,                                           00883200
.*-------------------------------------------------------------------   00883300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00883400
                      AIF   (K'&ZXLISTNUM LE 0).ZG229R  NOT I/O         00883500
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG229R            00883600
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00883700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG229P               00883800
                      AIF   (K'&ZCGPR GT 2).ZG229Q                      00883900
                      AIF   ('&ZCGPR' EQ '0').ZG229Q                    00884000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00884100
                      AIF   (T'&ZCGPR NE 'N').ZG229Q  INVALID REG NAME  00884200
.ZG229P               ANOP  ,                                           00884300
                      AIF   (T'&ZCGPR NE 'N').ZG229R  NON NUMERIC       00884400
                      AIF   ('&ZCGPR' LT '2').ZG229Q                    00884500
                      AIF   ('&ZCGPR' LE '12').ZG229R                   00884600
.ZG229Q               ANOP  ,                                           00884700
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           00884800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00884900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00885000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00885100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00885200
.ZG229R               ANOP  ,                                           00885300
.*------------------------------------------------------------------    00885400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00885500
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00885600
.*-------------------------------------------------------------------   00885700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00885800
.ZG233                ANOP  ,                                           00885900
                      AIF   (K'&ACTION(1) LE 0).ZG233A                  00886000
&ZTLC                 SETC 'START'                                      00886100
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG242             00886200
&XACTION              SETC  'START'     SET KEYWORD                     00886300
                      AIF   (N'&ACTION LE 1).ZG233A  CK NUM             00886400
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00886500
&ZMS                  SETC  '&ZMS.&ACTION"'                             00886600
&ZMS                  SETC  '&ZMS "ACTION"'                             00886700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00886800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00886900
.ZG233A               ANOP  ,                                           00887000
.*----------------------------------------------------------------***   00887100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00887200
                      AIF   (N'&VECTORINDEX LE 1).ZG235A  CK NUM        00887300
&ZMS                  SETC  '"VECTORINDEX='     *KPOSA* MNOTE           00887400
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00887500
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00887600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00887700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00887800
.ZG235A               ANOP  ,                                           00887900
.*-------------------------------------------------------------------   00888000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00888100
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00888200
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00888300
                      AIF   (N'&VECTORINDEX GT 1).ZG235B  MULTI PARMS   00888400
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00888500
.ZG235B               AIF   (K'&VECTORINDEX(1) GT 0).ZG235C             00888600
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00888700
&ZMS                  SETC  ' '         *KRQDA*                         00888800
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00888900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00889000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00889100
.ZG235C               ANOP  ,                                           00889200
.*-------------------------------------------------------------------   00889300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00889400
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG235R  NOT I/O     00889500
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG235R        00889600
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00889700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG235P               00889800
                      AIF   (K'&ZCGPR GT 2).ZG235Q                      00889900
                      AIF   ('&ZCGPR' EQ '0').ZG235Q                    00890000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00890100
                      AIF   (T'&ZCGPR NE 'N').ZG235Q  INVALID REG NAME  00890200
.ZG235P               ANOP  ,                                           00890300
                      AIF   (T'&ZCGPR NE 'N').ZG235R  NON NUMERIC       00890400
                      AIF   ('&ZCGPR' LT '2').ZG235Q                    00890500
                      AIF   ('&ZCGPR' LE '12').ZG235R                   00890600
.ZG235Q               ANOP  ,                                           00890700
&ZMS                  SETC  '"VECTORINDEX='     *KGPRA* MNOTE           00890800
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00890900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00891000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00891100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00891200
.ZG235R               ANOP  ,                                           00891300
.*----------------------------------------------------------------***   00891400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00891500
                      AIF   (N'&DRIVEEXIT LE 1).ZG238A  CK NUM          00891600
&ZMS                  SETC  '"DRIVEEXIT='       *KPOSA* MNOTE           00891700
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00891800
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          00891900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00892000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00892100
.ZG238A               ANOP  ,                                           00892200
.*-------------------------------------------------------------------   00892300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00892400
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            00892500
.ZG239A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG240A                       00892600
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     00892700
.*-------------------------------------------------------------------   00892800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00892900
.ZG240A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG241A                        00893000
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     00893100
.*-------------------------------------------------------------------   00893200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00893300
.ZG241A               AIF   (K'&XDRIVEEXIT GT 0).ZG241C  KEYWORD        00893400
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG241B               00893500
&ZMS                  SETC  '"DRIVEEXIT='       *KUKWA* MNOTE           00893600
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00893700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00893800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00893900
&ZMS                  SETC  '&ZMS "YES"'                                00894000
&ZMS                  SETC  '&ZMS OR "NO".'                             00894100
                      MNOTE 8,' &ZMS '                                  00894200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00894300
.ZG241B               ANOP  ,                                           00894400
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             00894500
.ZG241C               ANOP  ,                                           00894600
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   00894700
.*-------------------------------------------------------------------   00894800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00894900
.ZG242                ANOP  ,                                           00895000
&ZTLC                 SETC 'STOP'                                       00895100
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG243             00895200
&XACTION              SETC  'STOP'      SET KEYWORD                     00895300
                      AIF   (N'&ACTION LE 1).ZG242A  CK NUM             00895400
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00895500
&ZMS                  SETC  '&ZMS.&ACTION"'                             00895600
&ZMS                  SETC  '&ZMS "ACTION"'                             00895700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00895800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00895900
.ZG242A               ANOP  ,                                           00896000
.*------------------------------------------------------------------    00896100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00896200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00896300
.ZG242A0              AIF   (K'&VECTORINDEX LE 0).ZG242A1  OK           00896400
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00896500
.ZG242A1              AIF   (K'&DRIVEEXIT LE 0).ZG242A2  OK             00896600
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00896700
.ZG242A2              AIF   (K'&ZCVAL LE 0).ZG242A3  OK                 00896800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00896900
&ZMS                  SETC  '"ACTION'   *KMEIA* MNOTE                   00897000
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00897100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00897200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00897300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00897400
.ZG242A3              ANOP  ,                                           00897500
.*------------------------------------------------------------------    00897600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00897700
.ZG243                ANOP  ,                                           00897800
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00897900
                      AIF   (K'&XACTION GT 0).ZG243E  VALID ARG         00898000
                      AIF   (T'&ACTION EQ 'O').ZG243D  OMITTED          00898100
&ZASYSLNDX            SETA  0                                           00898200
.ZG243A               ANOP  ,           POSITIONAL MACRO KEY            00898300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00898400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG243C           00898500
&ZTLC                 SETC 'ACTION'                                     00898600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG243A  00898700
.ZG243B               ANOP  ,                                           00898800
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00898900
&ZMS                  SETC  'THE "ACTION" KEY'  *KOPTA* MNOTE           00899000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00899100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00899200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00899300
                      AGO   .ZG243E                                     00899400
.ZG243C               ANOP  ,                                           00899500
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00899600
&ZMS                  SETC  '"ACTION='  *KUKWA* MNOTE                   00899700
&ZMS                  SETC  '&ZMS.&ACTION"'                             00899800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00899900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00900000
&ZMS                  SETC  '&ZMS "START"'                              00900100
&ZMS                  SETC  '&ZMS OR "STOP".'                           00900200
                      MNOTE 8,' &ZMS '                                  00900300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00900400
                      AGO   .ZG243E                                     00900500
.ZG243D               ANOP  ,                                           00900600
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00900700
.ZG243E               ANOP  ,                                           00900800
.*------------------------------------------------------------------    00900900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00901000
                      AIF   (K'&ACTION(1) GT 0).ZG243F  PARM            00901100
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00901200
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00901300
&ZMS                  SETC  'THE'                                       00901400
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00901500
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00901600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00901700
&ZMS                  SETC  '&ZMS "START"'                              00901800
&ZMS                  SETC  '&ZMS OR "STOP".'                           00901900
                      MNOTE 8,' &ZMS '                                  00902000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00902100
.ZG243F               ANOP  ,                                           00902200
.*-------------------------------------------------------------------   00902300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00902400
.ZG244                ANOP  ,                                           00902500
&ZTLC                 SETC 'MONITOR_SUBLIST'                            00902600
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG265            00902700
&XREQUEST             SETC  'MONITOR_SUBLIST'   SET KEYWORD             00902800
                      AIF   (N'&REQUEST LE 1).ZG244A  CK NUM            00902900
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00903000
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00903100
&ZMS                  SETC  '&ZMS "REQUEST"'                            00903200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00903300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00903400
.ZG244A               ANOP  ,                                           00903500
.*------------------------------------------------------------------    00903600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00903700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00903800
.ZG244A0              AIF   (K'&LOCKINDEX LE 0).ZG244A1  OK             00903900
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00904000
.ZG244A1              AIF   (K'&LOCKOPER LE 0).ZG244A2  OK              00904100
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00904200
.ZG244A2              AIF   (K'&LOCKMODE LE 0).ZG244A3  OK              00904300
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00904400
.ZG244A3              AIF   (K'&LOCKCOMP LE 0).ZG244A4  OK              00904500
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00904600
.ZG244A4              AIF   (K'&LOCKDATA LE 0).ZG244A5  OK              00904700
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00904800
.ZG244A5              AIF   (K'&BUFLIST LE 0).ZG244A6  OK               00904900
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      00905000
.ZG244A6              AIF   (K'&BUFADDRTYPE LE 0).ZG244A7  OK           00905100
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     00905200
.ZG244A7              AIF   (K'&PAGEABLE LE 0).ZG244A8  OK              00905300
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00905400
.ZG244A8              AIF   (K'&BUFSTGKEY LE 0).ZG244A9  OK             00905500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00905600
.ZG244A9              AIF   (K'&BUFALET LE 0).ZG244A10  OK              00905700
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00905800
.ZG244A10             AIF   (K'&BUFADDRSIZE LE 0).ZG244A11  OK          00905900
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00906000
.ZG244A11             AIF   (K'&BUFFER LE 0).ZG244A12  OK               00906100
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      00906200
.ZG244A12             AIF   (K'&AUTHCOMP LE 0).ZG244A13  OK             00906300
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00906400
.ZG244A13             AIF   (K'&NEWAUTH LE 0).ZG244A14  OK              00906500
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00906600
.ZG244A14             AIF   (K'&LISTLIMIT LE 0).ZG244A15  OK            00906700
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00906800
.ZG244A15             AIF   (K'&LISTDESC LE 0).ZG244A16  OK             00906900
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00907000
.ZG244A16             AIF   (K'&LISTKEY LE 0).ZG244A17  OK              00907100
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00907200
.ZG244A17             AIF   (K'&MAXLISTKEY LE 0).ZG244A18  OK           00907300
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00907400
.ZG244A18             AIF   (K'&SETCURSOR LE 0).ZG244A19  OK            00907500
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00907600
.ZG244A19             AIF   (K'&KEYRANGE LE 0).ZG244A20  OK             00907700
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00907800
.ZG244A20             AIF   (K'&KEYRANGESTART LE 0).ZG244A21  OK        00907900
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00908000
.ZG244A21             AIF   (K'&KEYRANGEEND LE 0).ZG244A22  OK          00908100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00908200
.ZG244A22             AIF   (K'&KEYRANGESTATE LE 0).ZG244A23  OK        00908300
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00908400
.ZG244A23             AIF   (K'&KREMPTY LE 0).ZG244A24  OK              00908500
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00908600
.ZG244A24             AIF   (K'&KRNOTEMPTY LE 0).ZG244A25  OK           00908700
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00908800
.ZG244A25             AIF   (K'&LISTSTATE LE 0).ZG244A26  OK            00908900
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00909000
.ZG244A26             AIF   (K'&LISTEMPTY LE 0).ZG244A27  OK            00909100
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00909200
.ZG244A27             AIF   (K'&LISTNOTEMPTY LE 0).ZG244A28  OK         00909300
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00909400
.ZG244A28             AIF   (K'&KEYTYPE LE 0).ZG244A29  OK              00909500
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00909600
.ZG244A29             AIF   (K'&VECTORINDEX LE 0).ZG244A30  OK          00909700
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00909800
.ZG244A30             AIF   (K'&DRIVEEXIT LE 0).ZG244A31  OK            00909900
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00910000
.ZG244A31             AIF   (K'&STARTINDEX LE 0).ZG244A32  OK           00910100
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00910200
.ZG244A32             AIF   (K'&ENDINDEX LE 0).ZG244A33  OK             00910300
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00910400
.ZG244A33             AIF   (K'&MOSVECTOR LE 0).ZG244A34  OK            00910500
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00910600
.ZG244A34             AIF   (K'&BUFNUM LE 0).ZG244A35  OK               00910700
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      00910800
.ZG244A35             AIF   (K'&BUFINCRNUM LE 0).ZG244A36  OK           00910900
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      00911000
.ZG244A36             AIF   (K'&BUFSIZE LE 0).ZG244A37  OK              00911100
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      00911200
.ZG244A37             AIF   (K'&ZCVAL LE 0).ZG244A38  OK                00911300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00911400
                      AIF  (K'&ZCVAL LE 160).ZG244A38A                  00911500
&ZCVAL                SETC '&ZCVAL'(1,160)                              00911600
&ZCVAL                SETC '&ZCVAL....'                                 00911700
.ZG244A38A            ANOP                                              00911800
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00911900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00912000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00912100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00912200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00912300
.ZG244A38             ANOP  ,                                           00912400
.*----------------------------------------------------------------***   00912500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00912600
                      AIF   (N'&LISTNUM LE 1).ZG246A  CK NUM            00912700
&ZMS                  SETC  '"LISTNUM='         *KPOSA* MNOTE           00912800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00912900
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00913000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00913100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00913200
.ZG246A               ANOP  ,                                           00913300
.*-------------------------------------------------------------------   00913400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00913500
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00913600
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00913700
                      AIF   (N'&LISTNUM GT 1).ZG246B  MULTI PARMS       00913800
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00913900
.ZG246B               AIF   (K'&LISTNUM(1) GT 0).ZG246C                 00914000
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 00914100
&ZMS                  SETC  ' '         *KRQDA*                         00914200
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                00914300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00914400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00914500
.ZG246C               ANOP  ,                                           00914600
.*-------------------------------------------------------------------   00914700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00914800
                      AIF   (K'&ZXLISTNUM LE 0).ZG246R  NOT I/O         00914900
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG246R            00915000
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00915100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG246P               00915200
                      AIF   (K'&ZCGPR GT 2).ZG246Q                      00915300
                      AIF   ('&ZCGPR' EQ '0').ZG246Q                    00915400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00915500
                      AIF   (T'&ZCGPR NE 'N').ZG246Q  INVALID REG NAME  00915600
.ZG246P               ANOP  ,                                           00915700
                      AIF   (T'&ZCGPR NE 'N').ZG246R  NON NUMERIC       00915800
                      AIF   ('&ZCGPR' LT '2').ZG246Q                    00915900
                      AIF   ('&ZCGPR' LE '12').ZG246R                   00916000
.ZG246Q               ANOP  ,                                           00916100
&ZMS                  SETC  '"LISTNUM='         *KGPRA* MNOTE           00916200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00916300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00916400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00916500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00916600
.ZG246R               ANOP  ,                                           00916700
.*----------------------------------------------------------------***   00916800
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00916900
&XNAME                SETC  ''          INITIALIZE XVARIABLE            00917000
                      AIF   (K'&ENTRYKEY LE 0).ZG249C                   00917100
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   00917200
&XNAME                SETC  'ENTRYKEY'  SET XVARIABLE                   00917300
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   00917400
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE PARM      00917500
                      AIF   (N'&ENTRYKEY GT 1).ZG249A                   00917600
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE PARM      00917700
.ZG249A               AIF   (N'&ENTRYKEY LE 1).ZG249B  CK NUM           00917800
&ZMS                  SETC  '"ENTRYKEY='        *KPOSA* MNOTE           00917900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00918000
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           00918100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00918200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00918300
.ZG249B               AIF   (K'&XENTRYKEY GT 0).ZG249C  ONE PARM        00918400
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00918500
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 00918600
&ZMS                  SETC  ' '         *KRQDA*                         00918700
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               00918800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00918900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00919000
.ZG249C               ANOP  ,                                           00919100
.*----------------------------------------------------------------***   00919200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00919300
                      AIF   (K'&SECONDARYKEY LE 0).ZG250D  NO ME KEY    00919400
                      AIF   (N'&SECONDARYKEY LE 1).ZG250A  CK NUM       00919500
&ZMS                  SETC  '"SECONDARYKEY='    *KPOSA* MNOTE           00919600
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       00919700
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       00919800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00919900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00920000
.ZG250A               AIF   (K'&XNAME LE 0).ZG250B                      00920100
&ZMS                  SETC  '"SECONDARYKEY'     *KMEKA* MNOTE           00920200
&ZMS                  SETC  '&ZMS.=&SECONDARYKEY"'                      00920300
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00920400
&ZMS                  SETC  '&ZMS "&XNAME"'                             00920500
                      MNOTE 8,' &ZMS KEY.'                              00920600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00920700
                      AGO   .ZG250D                                     00920800
.*                                                                      00920900
.ZG250B               ANOP  ,                                           00921000
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   00921100
&XNAME                SETC  'SECONDARYKEY'      SET XVARIABLE           00921200
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   00921300
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE PARM      00921400
                      AIF   (N'&SECONDARYKEY GT 1).ZG250C               00921500
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE PARM      00921600
.ZG250C               AIF   (K'&XSECONDARYKEY GT 0).ZG250D  ONE PARM    00921700
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00921800
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 00921900
&ZMS                  SETC  ' '         *KRQDA*                         00922000
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           00922100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00922200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00922300
.ZG250D               ANOP  ,                                           00922400
.*------------------------------------------------------------------    00922500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00922600
                      AIF   (K'&XNAME GT 0).ZG251B                      00922700
&ZXNAME               SETC  ''          RESET IN/OUTPUT                 00922800
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 00922900
&XNAME                SETC  ''          ENSURE NULL                     00923000
&XENTRYKEY            SETC  ''          ENSURE NULL                     00923100
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       00923200
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00923300
&ZMS                  SETC  '&ZMS REQUIRED:'                            00923400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'   VALID ME KEY            00923500
&ZMS                  SETC  '&ZMS OR "SECONDARYKEY".'  VALID ME KEY     00923600
                      MNOTE 8,' &ZMS '                                  00923700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00923800
.ZG251B               ANOP  ,                                           00923900
.*-------------------------------------------------------------------   00924000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00924100
.ZG249                AIF   ('&XNAME' NE 'ENTRYKEY').ZG250              00924200
.*-------------------------------------------------------------------   00924300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00924400
                      AIF   (K'&ZXENTRYKEY LE 0).ZG249R  NOT I/O        00924500
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG249R           00924600
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              00924700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG249P               00924800
                      AIF   (K'&ZCGPR GT 2).ZG249Q                      00924900
                      AIF   ('&ZCGPR' EQ '0').ZG249Q                    00925000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00925100
                      AIF   (T'&ZCGPR NE 'N').ZG249Q  INVALID REG NAME  00925200
.ZG249P               ANOP  ,                                           00925300
                      AIF   (T'&ZCGPR NE 'N').ZG249R  NON NUMERIC       00925400
                      AIF   ('&ZCGPR' LT '2').ZG249Q                    00925500
                      AIF   ('&ZCGPR' LE '12').ZG249R                   00925600
.ZG249Q               ANOP  ,                                           00925700
&ZMS                  SETC  '"ENTRYKEY='        *KGPRA* MNOTE           00925800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00925900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00926000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00926100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00926200
.ZG249R               ANOP  ,                                           00926300
.*-------------------------------------------------------------------   00926400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00926500
.ZG250                AIF   ('&XNAME' NE 'SECONDARYKEY').ZG251          00926600
.*-------------------------------------------------------------------   00926700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00926800
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG250R  NOT I/O    00926900
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG250R       00927000
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      00927100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG250P               00927200
                      AIF   (K'&ZCGPR GT 2).ZG250Q                      00927300
                      AIF   ('&ZCGPR' EQ '0').ZG250Q                    00927400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00927500
                      AIF   (T'&ZCGPR NE 'N').ZG250Q  INVALID REG NAME  00927600
.ZG250P               ANOP  ,                                           00927700
                      AIF   (T'&ZCGPR NE 'N').ZG250R  NON NUMERIC       00927800
                      AIF   ('&ZCGPR' LT '2').ZG250Q                    00927900
                      AIF   ('&ZCGPR' LE '12').ZG250R                   00928000
.ZG250Q               ANOP  ,                                           00928100
&ZMS                  SETC  '"SECONDARYKEY='    *KGPRA* MNOTE           00928200
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       00928300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00928400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00928500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00928600
.ZG250R               ANOP  ,                                           00928700
.*-------------------------------------------------------------------   00928800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00928900
.ZG251                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     00929000
.*------------------------------------------------------------------    00929100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00929200
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00929300
.*-------------------------------------------------------------------   00929400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00929500
.ZG254                ANOP  ,                                           00929600
                      AIF   (K'&ACTION(1) LE 0).ZG254A                  00929700
&ZTLC                 SETC 'START'                                      00929800
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG263             00929900
&XACTION              SETC  'START'     SET KEYWORD                     00930000
                      AIF   (N'&ACTION LE 1).ZG254A  CK NUM             00930100
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00930200
&ZMS                  SETC  '&ZMS.&ACTION"'                             00930300
&ZMS                  SETC  '&ZMS "ACTION"'                             00930400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00930500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00930600
.ZG254A               ANOP  ,                                           00930700
.*----------------------------------------------------------------***   00930800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00930900
                      AIF   (N'&NOTIFICATION LE 1).ZG256A  CK NUM       00931000
&ZMS                  SETC  '"NOTIFICATION='    *KPOSA* MNOTE           00931100
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       00931200
&ZMS                  SETC  '&ZMS "NOTIFICATION"'                       00931300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00931400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00931500
.ZG256A               ANOP  ,                                           00931600
.*-------------------------------------------------------------------   00931700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00931800
&XNOTIFICATION        SETC  ''          INITIALIZE XVARIABLE            00931900
.ZG257A   AIF   ('&NOTIFICATION(1)' NE 'FIRST').ZG258A                  00932000
&XNOTIFICATION        SETC  'FIRST'     SET KEYWORD                     00932100
.*-------------------------------------------------------------------   00932200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00932300
.ZG258A   AIF   ('&NOTIFICATION(1)' NE 'EVERY').ZG259A                  00932400
&XNOTIFICATION        SETC  'EVERY'     SET KEYWORD                     00932500
.*-------------------------------------------------------------------   00932600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00932700
.ZG259A               AIF   (K'&XNOTIFICATION GT 0).ZG259C  KEYWORD     00932800
                      AIF   (K'&NOTIFICATION(1) LE 0).ZG259B            00932900
&ZMS                  SETC  '"NOTIFICATION='    *KUKWA* MNOTE           00933000
&ZMS                  SETC  '&ZMS.&NOTIFICATION"'                       00933100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00933200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00933300
&ZMS                  SETC  '&ZMS "FIRST"'                              00933400
&ZMS                  SETC  '&ZMS OR "EVERY".'                          00933500
                      MNOTE 8,' &ZMS '                                  00933600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00933700
.ZG259B               ANOP  ,                                           00933800
&XNOTIFICATION        SETC  'FIRST'     SET DEFAULT KEYWORD             00933900
.ZG259C               ANOP  ,                                           00934000
&ZXNOTIFICATION       SETC  'INPUT'     SET IN/OUTPUT                   00934100
.*----------------------------------------------------------------***   00934200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00934300
                      AIF   (N'&UNC LE 1).ZG261A  CK NUM                00934400
&ZMS                  SETC  '"UNC='     *KPOSA* MNOTE                   00934500
&ZMS                  SETC  '&ZMS.&UNC"'                                00934600
&ZMS                  SETC  '&ZMS "UNC"'                                00934700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00934800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00934900
.ZG261A               ANOP  ,                                           00935000
.*-------------------------------------------------------------------   00935100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00935200
&ZXUNC                SETC  'INPUT'     SET IN/OUTPUT                   00935300
&XUNC                 SETC  '&UNC(1)'   SET XVARIABLE                   00935400
                      AIF   (N'&UNC GT 1).ZG261B  MULTI PARMS           00935500
&XUNC                 SETC  '&UNC'      SET XVARIABLE                   00935600
.ZG261B               AIF   (K'&UNC(1) GT 0).ZG261C                     00935700
&ZXUNC                SETC  ''          RESET IN/OUTPUT                 00935800
&ZMS                  SETC  ' '         *KRQDA*                         00935900
&ZMS                  SETC  '&ZMS "UNC" KEY AND ITS'                    00936000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00936100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00936200
.ZG261C               ANOP  ,                                           00936300
.*-------------------------------------------------------------------   00936400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00936500
                      AIF   (K'&ZXUNC LE 0).ZG261R  NOT I/O             00936600
                      AIF   ('&XUNC'(1,1) NE '(').ZG261R                00936700
&ZCGPR                SETC  '&XUNC'(2,K'&XUNC-2)                        00936800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG261P               00936900
                      AIF   (K'&ZCGPR GT 2).ZG261Q                      00937000
                      AIF   ('&ZCGPR' EQ '0').ZG261Q                    00937100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00937200
                      AIF   (T'&ZCGPR NE 'N').ZG261Q  INVALID REG NAME  00937300
.ZG261P               ANOP  ,                                           00937400
                      AIF   (T'&ZCGPR NE 'N').ZG261R  NON NUMERIC       00937500
                      AIF   ('&ZCGPR' LT '2').ZG261Q                    00937600
                      AIF   ('&ZCGPR' LE '12').ZG261R                   00937700
.ZG261Q               ANOP  ,                                           00937800
&ZMS                  SETC  '"UNC='     *KGPRA* MNOTE                   00937900
&ZMS                  SETC  '&ZMS.&UNC"'                                00938000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00938100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00938200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00938300
.ZG261R               ANOP  ,                                           00938400
.*-------------------------------------------------------------------   00938500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00938600
.ZG263                ANOP  ,                                           00938700
&ZTLC                 SETC 'STOP'                                       00938800
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG264             00938900
&XACTION              SETC  'STOP'      SET KEYWORD                     00939000
                      AIF   (N'&ACTION LE 1).ZG263A  CK NUM             00939100
&ZMS                  SETC  '"ACTION='  *KPOSA* MNOTE                   00939200
&ZMS                  SETC  '&ZMS.&ACTION"'                             00939300
&ZMS                  SETC  '&ZMS "ACTION"'                             00939400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00939500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00939600
.ZG263A               ANOP  ,                                           00939700
.*------------------------------------------------------------------    00939800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00939900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00940000
.ZG263A0              AIF   (K'&NOTIFICATION LE 0).ZG263A1  OK          00940100
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00940200
.ZG263A1              AIF   (K'&UNC LE 0).ZG263A2  OK                   00940300
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00940400
.ZG263A2              AIF   (K'&ZCVAL LE 0).ZG263A3  OK                 00940500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00940600
&ZMS                  SETC  '"ACTION'   *KMEIA* MNOTE                   00940700
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00940800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00940900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00941000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00941100
.ZG263A3              ANOP  ,                                           00941200
.*------------------------------------------------------------------    00941300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00941400
.ZG264                ANOP  ,                                           00941500
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00941600
                      AIF   (K'&XACTION GT 0).ZG264E  VALID ARG         00941700
                      AIF   (T'&ACTION EQ 'O').ZG264D  OMITTED          00941800
&ZASYSLNDX            SETA  0                                           00941900
.ZG264A               ANOP  ,           POSITIONAL MACRO KEY            00942000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00942100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG264C           00942200
&ZTLC                 SETC 'ACTION'                                     00942300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG264A  00942400
.ZG264B               ANOP  ,                                           00942500
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00942600
&ZMS                  SETC  'THE "ACTION" KEY'  *KOPTA* MNOTE           00942700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00942800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00942900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00943000
                      AGO   .ZG264E                                     00943100
.ZG264C               ANOP  ,                                           00943200
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00943300
&ZMS                  SETC  '"ACTION='  *KUKWA* MNOTE                   00943400
&ZMS                  SETC  '&ZMS.&ACTION"'                             00943500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00943600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00943700
&ZMS                  SETC  '&ZMS "START"'                              00943800
&ZMS                  SETC  '&ZMS OR "STOP".'                           00943900
                      MNOTE 8,' &ZMS '                                  00944000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00944100
                      AGO   .ZG264E                                     00944200
.ZG264D               ANOP  ,                                           00944300
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00944400
.ZG264E               ANOP  ,                                           00944500
.*------------------------------------------------------------------    00944600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00944700
                      AIF   (K'&ACTION(1) GT 0).ZG264F  PARM            00944800
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00944900
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00945000
&ZMS                  SETC  'THE'                                       00945100
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00945200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00945300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00945400
&ZMS                  SETC  '&ZMS "START"'                              00945500
&ZMS                  SETC  '&ZMS OR "STOP".'                           00945600
                      MNOTE 8,' &ZMS '                                  00945700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00945800
.ZG264F               ANOP  ,                                           00945900
.*-------------------------------------------------------------------   00946000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00946100
.ZG265                ANOP  ,                                           00946200
&ZTLC                 SETC 'MONITOR_SUBLISTS'                           00946300
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG317            00946400
&XREQUEST             SETC  'MONITOR_SUBLISTS'  SET KEYWORD             00946500
                      AIF   (N'&REQUEST LE 1).ZG265A  CK NUM            00946600
&ZMS                  SETC  '"REQUEST='         *KPOSA* MNOTE           00946700
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00946800
&ZMS                  SETC  '&ZMS "REQUEST"'                            00946900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00947000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00947100
.ZG265A               ANOP  ,                                           00947200
.*------------------------------------------------------------------    00947300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00947400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00947500
.ZG265A0              AIF   (K'&LOCKINDEX LE 0).ZG265A1  OK             00947600
&ZCVAL                SETC '&ZCVAL LOCKINDEX'   INCORRECT KEY USED      00947700
.ZG265A1              AIF   (K'&LOCKOPER LE 0).ZG265A2  OK              00947800
&ZCVAL                SETC '&ZCVAL LOCKOPER'    INCORRECT KEY USED      00947900
.ZG265A2              AIF   (K'&LOCKMODE LE 0).ZG265A3  OK              00948000
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      00948100
.ZG265A3              AIF   (K'&LOCKCOMP LE 0).ZG265A4  OK              00948200
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      00948300
.ZG265A4              AIF   (K'&LOCKDATA LE 0).ZG265A5  OK              00948400
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      00948500
.ZG265A5              AIF   (K'&LISTNUM LE 0).ZG265A6  OK               00948600
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      00948700
.ZG265A6              AIF   (K'&AUTHCOMP LE 0).ZG265A7  OK              00948800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      00948900
.ZG265A7              AIF   (K'&NEWAUTH LE 0).ZG265A8  OK               00949000
&ZCVAL                SETC '&ZCVAL NEWAUTH'     INCORRECT KEY USED      00949100
.ZG265A8              AIF   (K'&LISTLIMIT LE 0).ZG265A9  OK             00949200
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00949300
.ZG265A9              AIF   (K'&LISTDESC LE 0).ZG265A10  OK             00949400
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00949500
.ZG265A10             AIF   (K'&LISTKEY LE 0).ZG265A11  OK              00949600
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00949700
.ZG265A11             AIF   (K'&MAXLISTKEY LE 0).ZG265A12  OK           00949800
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00949900
.ZG265A12             AIF   (K'&SETCURSOR LE 0).ZG265A13  OK            00950000
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00950100
.ZG265A13             AIF   (K'&KEYRANGE LE 0).ZG265A14  OK             00950200
&ZCVAL                SETC '&ZCVAL KEYRANGE'    INCORRECT KEY USED      00950300
.ZG265A14             AIF   (K'&KEYRANGESTART LE 0).ZG265A15  OK        00950400
&ZCVAL                SETC '&ZCVAL KEYRANGESTART'  INCORRECT KEY USED   00950500
.ZG265A15             AIF   (K'&KEYRANGEEND LE 0).ZG265A16  OK          00950600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     00950700
.ZG265A16             AIF   (K'&KEYRANGESTATE LE 0).ZG265A17  OK        00950800
&ZCVAL                SETC '&ZCVAL KEYRANGESTATE'  INCORRECT KEY USED   00950900
.ZG265A17             AIF   (K'&KREMPTY LE 0).ZG265A18  OK              00951000
&ZCVAL                SETC '&ZCVAL KREMPTY'     INCORRECT KEY USED      00951100
.ZG265A18             AIF   (K'&KRNOTEMPTY LE 0).ZG265A19  OK           00951200
&ZCVAL                SETC '&ZCVAL KRNOTEMPTY'  INCORRECT KEY USED      00951300
.ZG265A19             AIF   (K'&LISTSTATE LE 0).ZG265A20  OK            00951400
&ZCVAL                SETC '&ZCVAL LISTSTATE'   INCORRECT KEY USED      00951500
.ZG265A20             AIF   (K'&LISTEMPTY LE 0).ZG265A21  OK            00951600
&ZCVAL                SETC '&ZCVAL LISTEMPTY'   INCORRECT KEY USED      00951700
.ZG265A21             AIF   (K'&LISTNOTEMPTY LE 0).ZG265A22  OK         00951800
&ZCVAL                SETC '&ZCVAL LISTNOTEMPTY'  INCORRECT KEY USED    00951900
.ZG265A22             AIF   (K'&KEYTYPE LE 0).ZG265A23  OK              00952000
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      00952100
.ZG265A23             AIF   (K'&ENTRYKEY LE 0).ZG265A24  OK             00952200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      00952300
.ZG265A24             AIF   (K'&SECONDARYKEY LE 0).ZG265A25  OK         00952400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    00952500
.ZG265A25             AIF   (K'&ACTION LE 0).ZG265A26  OK               00952600
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00952700
.ZG265A26             AIF   (K'&VECTORINDEX LE 0).ZG265A27  OK          00952800
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00952900
.ZG265A27             AIF   (K'&DRIVEEXIT LE 0).ZG265A28  OK            00953000
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00953100
.ZG265A28             AIF   (K'&NOTIFICATION LE 0).ZG265A29  OK         00953200
&ZCVAL                SETC '&ZCVAL NOTIFICATION'  INCORRECT KEY USED    00953300
.ZG265A29             AIF   (K'&UNC LE 0).ZG265A30  OK                  00953400
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00953500
.ZG265A30             AIF   (K'&ZCVAL LE 0).ZG265A31  OK                00953600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00953700
                      AIF  (K'&ZCVAL LE 160).ZG265A31A                  00953800
&ZCVAL                SETC '&ZCVAL'(1,160)                              00953900
&ZCVAL                SETC '&ZCVAL....'                                 00954000
.ZG265A31A            ANOP                                              00954100
&ZMS                  SETC  '"REQUEST'  *KMEIA* MNOTE                   00954200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00954300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00954400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00954500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00954600
.ZG265A31             ANOP  ,                                           00954700
.*----------------------------------------------------------------***   00954800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00954900
                      AIF   (N'&STARTINDEX LE 1).ZG267A  CK NUM         00955000
&ZMS                  SETC  '"STARTINDEX='      *KPOSA* MNOTE           00955100
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00955200
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         00955300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00955400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00955500
.ZG267A               ANOP  ,                                           00955600
.*-------------------------------------------------------------------   00955700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00955800
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   00955900
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           00956000
                      AIF   (N'&STARTINDEX GT 1).ZG267B  MULTI PARMS    00956100
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           00956200
.ZG267B               AIF   (K'&STARTINDEX(1) GT 0).ZG267C              00956300
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 00956400
&ZMS                  SETC  ' '         *KRQDA*                         00956500
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             00956600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00956700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00956800
.ZG267C               ANOP  ,                                           00956900
.*-------------------------------------------------------------------   00957000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00957100
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG267R  NOT I/O      00957200
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG267R         00957300
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          00957400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG267P               00957500
                      AIF   (K'&ZCGPR GT 2).ZG267Q                      00957600
                      AIF   ('&ZCGPR' EQ '0').ZG267Q                    00957700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00957800
                      AIF   (T'&ZCGPR NE 'N').ZG267Q  INVALID REG NAME  00957900
.ZG267P               ANOP  ,                                           00958000
                      AIF   (T'&ZCGPR NE 'N').ZG267R  NON NUMERIC       00958100
                      AIF   ('&ZCGPR' LT '2').ZG267Q                    00958200
                      AIF   ('&ZCGPR' LE '12').ZG267R                   00958300
.ZG267Q               ANOP  ,                                           00958400
&ZMS                  SETC  '"STARTINDEX='      *KGPRA* MNOTE           00958500
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00958600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00958700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00958800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00958900
.ZG267R               ANOP  ,                                           00959000
.*----------------------------------------------------------------***   00959100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00959200
                      AIF   (N'&ENDINDEX LE 1).ZG270A  CK NUM           00959300
&ZMS                  SETC  '"ENDINDEX='        *KPOSA* MNOTE           00959400
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00959500
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           00959600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00959700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00959800
.ZG270A               ANOP  ,                                           00959900
.*-------------------------------------------------------------------   00960000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00960100
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   00960200
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           00960300
                      AIF   (N'&ENDINDEX GT 1).ZG270B  MULTI PARMS      00960400
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           00960500
.ZG270B               AIF   (K'&ENDINDEX(1) GT 0).ZG270C                00960600
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 00960700
&ZMS                  SETC  ' '         *KRQDA*                         00960800
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               00960900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00961000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00961100
.ZG270C               ANOP  ,                                           00961200
.*-------------------------------------------------------------------   00961300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00961400
                      AIF   (K'&ZXENDINDEX LE 0).ZG270R  NOT I/O        00961500
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG270R           00961600
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              00961700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG270P               00961800
                      AIF   (K'&ZCGPR GT 2).ZG270Q                      00961900
                      AIF   ('&ZCGPR' EQ '0').ZG270Q                    00962000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00962100
                      AIF   (T'&ZCGPR NE 'N').ZG270Q  INVALID REG NAME  00962200
.ZG270P               ANOP  ,                                           00962300
                      AIF   (T'&ZCGPR NE 'N').ZG270R  NON NUMERIC       00962400
                      AIF   ('&ZCGPR' LT '2').ZG270Q                    00962500
                      AIF   ('&ZCGPR' LE '12').ZG270R                   00962600
.ZG270Q               ANOP  ,                                           00962700
&ZMS                  SETC  '"ENDINDEX='        *KGPRA* MNOTE           00962800
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00962900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00963000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00963100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00963200
.ZG270R               ANOP  ,                                           00963300
.*----------------------------------------------------------------***   00963400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00963500
                      AIF   (N'&MOSVECTOR LE 1).ZG273A  CK NUM          00963600
&ZMS                  SETC  '"MOSVECTOR='       *KPOSA* MNOTE           00963700
&ZMS                  SETC  '&ZMS.&MOSVECTOR"'                          00963800
&ZMS                  SETC  '&ZMS "MOSVECTOR"'                          00963900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00964000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00964100
.ZG273A               ANOP  ,                                           00964200
.*-------------------------------------------------------------------   00964300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00964400
&ZXMOSVECTOR          SETC  'OUTPUT'    SET IN/OUTPUT                   00964500
&XMOSVECTOR           SETC  '&MOSVECTOR(1)'     SET XVARIABLE           00964600
                      AIF   (N'&MOSVECTOR GT 1).ZG273B  MULTI PARMS     00964700
&XMOSVECTOR           SETC  '&MOSVECTOR'        SET XVARIABLE           00964800
.ZG273B               AIF   (K'&MOSVECTOR(1) GT 0).ZG273C               00964900
&ZXMOSVECTOR          SETC  ''          RESET IN/OUTPUT                 00965000
&ZMS                  SETC  ' '         *KRQDA*                         00965100
&ZMS                  SETC  '&ZMS "MOSVECTOR" KEY AND ITS'              00965200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00965300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00965400
.ZG273C               ANOP  ,                                           00965500
.*-------------------------------------------------------------------   00965600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00965700
                      AIF   (K'&ZXMOSVECTOR LE 0).ZG273R  NOT I/O       00965800
                      AIF   ('&XMOSVECTOR'(1,1) NE '(').ZG273R          00965900
&ZCGPR                SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)            00966000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG273P               00966100
                      AIF   (K'&ZCGPR GT 2).ZG273Q                      00966200
                      AIF   ('&ZCGPR' EQ '0').ZG273Q                    00966300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00966400
                      AIF   (T'&ZCGPR NE 'N').ZG273Q  INVALID REG NAME  00966500
.ZG273P               ANOP  ,                                           00966600
                      AIF   (T'&ZCGPR NE 'N').ZG273R  NON NUMERIC       00966700
                      AIF   ('&ZCGPR' LT '2').ZG273Q                    00966800
                      AIF   ('&ZCGPR' LE '12').ZG273R                   00966900
.ZG273Q               ANOP  ,                                           00967000
&ZMS                  SETC  '"MOSVECTOR='       *KGPRA* MNOTE           00967100
&ZMS                  SETC  '&ZMS.&MOSVECTOR"'                          00967200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00967300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00967400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00967500
.ZG273R               ANOP  ,                                           00967600
.*----------------------------------------------------------------***   00967700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00967800
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            00967900
                      AIF   (K'&BUFLIST LE 0).ZG276C                    00968000
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00968100
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   00968200
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   00968300
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      00968400
                      AIF   (N'&BUFLIST GT 1).ZG276A                    00968500
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              00968600
.ZG276A               AIF   (N'&BUFLIST LE 1).ZG276B  CK NUM            00968700
&ZMS                  SETC  '"BUFLIST='         *KPOSA* MNOTE           00968800
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00968900
&ZMS                  SETC  '&ZMS "BUFLIST"'                            00969000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00969100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00969200
.ZG276B               AIF   (K'&XBUFLIST GT 0).ZG276C  ONE PARM         00969300
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00969400
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00969500
&ZMS                  SETC  ' '         *KRQDA*                         00969600
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                00969700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00969800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00969900
.ZG276C               ANOP  ,                                           00970000
.*----------------------------------------------------------------***   00970100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00970200
                      AIF   (K'&BUFFER LE 0).ZG304D  NO ME KEY          00970300
                      AIF   (N'&BUFFER LE 1).ZG304A  CK NUM             00970400
&ZMS                  SETC  '"BUFFER='  *KPOSA* MNOTE                   00970500
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00970600
&ZMS                  SETC  '&ZMS "BUFFER"'                             00970700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00970800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00970900
.ZG304A               AIF   (K'&XDATAREA LE 0).ZG304B                   00971000
&ZMS                  SETC  '"BUFFER'   *KMEKA* MNOTE                   00971100
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00971200
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00971300
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          00971400
                      MNOTE 8,' &ZMS KEY.'                              00971500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00971600
                      AGO   .ZG304D                                     00971700
.*                                                                      00971800
.ZG304B               ANOP  ,                                           00971900
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00972000
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   00972100
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   00972200
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      00972300
                      AIF   (N'&BUFFER GT 1).ZG304C                     00972400
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              00972500
.ZG304C               AIF   (K'&XBUFFER GT 0).ZG304D  ONE PARM          00972600
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00972700
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 00972800
&ZMS                  SETC  ' '         *KRQDA*                         00972900
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 00973000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00973100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00973200
.ZG304D               ANOP  ,                                           00973300
.*------------------------------------------------------------------    00973400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00973500
                      AIF   (K'&XDATAREA GT 0).ZG316B                   00973600
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00973700
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00973800
&XDATAREA             SETC  ''          ENSURE NULL                     00973900
&XBUFLIST             SETC  ''          ENSURE NULL                     00974000
&ZMS                  SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE       00974100
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00974200
&ZMS                  SETC  '&ZMS REQUIRED:'                            00974300
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            00974400
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           00974500
                      MNOTE 8,' &ZMS '                                  00974600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00974700
.ZG316B               ANOP  ,                                           00974800
.*-------------------------------------------------------------------   00974900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00975000
.ZG276                AIF   ('&XDATAREA' NE 'BUFLIST').ZG304            00975100
.*-------------------------------------------------------------------   00975200
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00975300
&ZCVAL                SETC ''           ERROR KEY FIELD                 00975400
.ZG276I0              AIF   (K'&BUFSIZE LE 0).ZG276I1                   00975500
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          00975600
.ZG276I1              AIF   (K'&ZCVAL LE 0).ZG276J  KEY                 00975700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00975800
&ZMS                  SETC  '"BUFLIST'  *KMEIA* MNOTE                   00975900
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           00976000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00976100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00976200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00976300
.ZG276J               ANOP  ,                                           00976400
.*-------------------------------------------------------------------   00976500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00976600
                      AIF   (K'&ZXBUFLIST LE 0).ZG276R  NOT I/O         00976700
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG276R            00976800
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                00976900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG276P               00977000
                      AIF   (K'&ZCGPR GT 2).ZG276Q                      00977100
                      AIF   ('&ZCGPR' EQ '0').ZG276Q                    00977200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00977300
                      AIF   (T'&ZCGPR NE 'N').ZG276Q  INVALID REG NAME  00977400
.ZG276P               ANOP  ,                                           00977500
                      AIF   (T'&ZCGPR NE 'N').ZG276R  NON NUMERIC       00977600
                      AIF   ('&ZCGPR' LT '2').ZG276Q                    00977700
                      AIF   ('&ZCGPR' LE '12').ZG276R                   00977800
.ZG276Q               ANOP  ,                                           00977900
&ZMS                  SETC  '"BUFLIST='         *KGPRA* MNOTE           00978000
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00978100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00978200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00978300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00978400
.ZG276R               ANOP  ,                                           00978500
.*------------------------------------------------------------------    00978600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00978700
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            00978800
.*-------------------------------------------------------------------   00978900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00979000
.ZG279                ANOP  ,                                           00979100
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG279A             00979200
&ZTLC                 SETC 'VIRTUAL'                                    00979300
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG291        00979400
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     00979500
                      AIF   (N'&BUFADDRTYPE LE 1).ZG279A  CK NUM        00979600
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           00979700
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00979800
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00979900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00980000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00980100
.ZG279A               ANOP  ,                                           00980200
.*------------------------------------------------------------------    00980300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00980400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00980500
.ZG279A0              AIF   (K'&BUFADDRSIZE LE 0).ZG279A1  OK           00980600
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     00980700
.ZG279A1              AIF   (K'&ZCVAL LE 0).ZG279A2  OK                 00980800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00980900
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           00981000
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00981100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00981200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00981300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00981400
.ZG279A2              ANOP  ,                                           00981500
.*------------------------------------------------------------------    00981600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00981700
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00981800
.*-------------------------------------------------------------------   00981900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00982000
.ZG282                ANOP  ,                                           00982100
                      AIF   (K'&PAGEABLE(1) LE 0).ZG282A                00982200
&ZTLC                 SETC 'YES'                                        00982300
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG286           00982400
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00982500
                      AIF   (N'&PAGEABLE LE 1).ZG282A  CK NUM           00982600
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00982700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00982800
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00982900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00983000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00983100
.ZG282A               ANOP  ,                                           00983200
.*----------------------------------------------------------------***   00983300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00983400
                      AIF   (N'&BUFSTGKEY LE 1).ZG284A  CK NUM          00983500
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           00983600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00983700
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00983800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00983900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00984000
.ZG284A               ANOP  ,                                           00984100
.*-------------------------------------------------------------------   00984200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00984300
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00984400
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00984500
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG284B  PARM         00984600
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00984700
                      AIF   (N'&BUFSTGKEY GT 1).ZG284B  MULTI PARMS     00984800
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00984900
.ZG284B               ANOP  ,                                           00985000
.*-------------------------------------------------------------------   00985100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00985200
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG284R  NOT I/O       00985300
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG284R                  00985400
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG284R          00985500
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00985600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG284P               00985700
                      AIF   (K'&ZCGPR GT 2).ZG284Q                      00985800
                      AIF   ('&ZCGPR' EQ '0').ZG284Q                    00985900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00986000
                      AIF   (T'&ZCGPR NE 'N').ZG284Q  INVALID REG NAME  00986100
.ZG284P               ANOP  ,                                           00986200
                      AIF   (T'&ZCGPR NE 'N').ZG284R  NON NUMERIC       00986300
                      AIF   ('&ZCGPR' LT '2').ZG284Q                    00986400
                      AIF   ('&ZCGPR' LE '12').ZG284R                   00986500
.ZG284Q               ANOP  ,                                           00986600
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           00986700
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00986800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00986900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00987000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00987100
.ZG284R               ANOP  ,                                           00987200
.*-------------------------------------------------------------------   00987300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00987400
.ZG286                ANOP  ,                                           00987500
&ZTLC                 SETC 'NO'                                         00987600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG287           00987700
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00987800
                      AIF   (N'&PAGEABLE LE 1).ZG286A  CK NUM           00987900
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           00988000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00988100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00988200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00988300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00988400
.ZG286A               ANOP  ,                                           00988500
.*------------------------------------------------------------------    00988600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00988700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00988800
.ZG286A0              AIF   (K'&BUFSTGKEY LE 0).ZG286A1  OK             00988900
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00989000
.ZG286A1              AIF   (K'&ZCVAL LE 0).ZG286A2  OK                 00989100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00989200
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           00989300
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00989400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00989500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00989600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00989700
.ZG286A2              ANOP  ,                                           00989800
.*------------------------------------------------------------------    00989900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00990000
.ZG287                ANOP  ,                                           00990100
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00990200
                      AIF   (K'&XPAGEABLE GT 0).ZG287E  VALID ARG       00990300
                      AIF   (T'&PAGEABLE EQ 'O').ZG287D  OMITTED        00990400
&ZASYSLNDX            SETA  0                                           00990500
.ZG287A               ANOP  ,           POSITIONAL MACRO KEY            00990600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00990700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG287C           00990800
&ZTLC                 SETC 'PAGEABLE'                                   00990900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG287A  00991000
.ZG287B               ANOP  ,                                           00991100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00991200
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         00991300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00991400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00991500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00991600
                      AGO   .ZG287E                                     00991700
.ZG287C               ANOP  ,                                           00991800
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00991900
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           00992000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00992100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00992200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00992300
&ZMS                  SETC  '&ZMS "YES"'                                00992400
&ZMS                  SETC  '&ZMS OR "NO".'                             00992500
                      MNOTE 8,' &ZMS '                                  00992600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00992700
                      AGO   .ZG287E                                     00992800
.ZG287D               ANOP  ,                                           00992900
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00993000
.ZG287E               ANOP  ,                                           00993100
.*----------------------------------------------------------------***   00993200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00993300
                      AIF   (N'&BUFALET LE 1).ZG289A  CK NUM            00993400
&ZMS                  SETC  '"BUFALET='         *KPOSA* MNOTE           00993500
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00993600
&ZMS                  SETC  '&ZMS "BUFALET"'                            00993700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00993800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00993900
.ZG289A               ANOP  ,                                           00994000
.*-------------------------------------------------------------------   00994100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00994200
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   00994300
&XBUFALET             SETC  'NO_BUFALET'                                00994400
                      AIF   (K'&BUFALET(1) LE 0).ZG289B  PARM           00994500
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           00994600
                      AIF   (N'&BUFALET GT 1).ZG289B  MULTI PARMS       00994700
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   00994800
.ZG289B               ANOP  ,                                           00994900
.*-------------------------------------------------------------------   00995000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00995100
                      AIF   (K'&ZXBUFALET LE 0).ZG289R  NOT I/O         00995200
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG289R                     00995300
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG289R            00995400
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                00995500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG289P               00995600
                      AIF   (K'&ZCGPR GT 2).ZG289Q                      00995700
                      AIF   ('&ZCGPR' EQ '0').ZG289Q                    00995800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00995900
                      AIF   (T'&ZCGPR NE 'N').ZG289Q  INVALID REG NAME  00996000
.ZG289P               ANOP  ,                                           00996100
                      AIF   (T'&ZCGPR NE 'N').ZG289R  NON NUMERIC       00996200
                      AIF   ('&ZCGPR' LT '2').ZG289Q                    00996300
                      AIF   ('&ZCGPR' LE '12').ZG289R                   00996400
.ZG289Q               ANOP  ,                                           00996500
&ZMS                  SETC  '"BUFALET='         *KGPRA* MNOTE           00996600
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00996700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00996800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00996900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00997000
.ZG289R               ANOP  ,                                           00997100
.*-------------------------------------------------------------------   00997200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00997300
.ZG291                ANOP  ,                                           00997400
&ZTLC                 SETC 'REAL'                                       00997500
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG297        00997600
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     00997700
                      AIF   (N'&BUFADDRTYPE LE 1).ZG291A  CK NUM        00997800
&ZMS                  SETC  '"BUFADDRTYPE='     *KPOSA* MNOTE           00997900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00998000
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00998100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00998200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00998300
.ZG291A               ANOP  ,                                           00998400
.*------------------------------------------------------------------    00998500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00998600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00998700
.ZG291A0              AIF   (K'&PAGEABLE LE 0).ZG291A1  OK              00998800
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00998900
.ZG291A1              AIF   (K'&BUFSTGKEY LE 0).ZG291A2  OK             00999000
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00999100
.ZG291A2              AIF   (K'&BUFALET LE 0).ZG291A3  OK               00999200
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00999300
.ZG291A3              AIF   (K'&ZCVAL LE 0).ZG291A4  OK                 00999400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00999500
&ZMS                  SETC  '"BUFADDRTYPE'      *KMEIA* MNOTE           00999600
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00999700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00999800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00999900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01000000
.ZG291A4              ANOP  ,                                           01000100
.*------------------------------------------------------------------    01000200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01000300
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01000400
.*-------------------------------------------------------------------   01000500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01000600
.ZG294                ANOP  ,                                           01000700
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG294A             01000800
&ZTLC                 SETC '31'                                         01000900
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG295        01001000
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01001100
                      AIF   (N'&BUFADDRSIZE LE 1).ZG294A  CK NUM        01001200
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           01001300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01001400
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01001500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01001600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01001700
.ZG294A               ANOP  ,                                           01001800
.*-------------------------------------------------------------------   01001900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01002000
.ZG295                ANOP  ,                                           01002100
&ZTLC                 SETC '64'                                         01002200
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG296        01002300
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01002400
                      AIF   (N'&BUFADDRSIZE LE 1).ZG295A  CK NUM        01002500
&ZMS                  SETC  '"BUFADDRSIZE='     *KPOSA* MNOTE           01002600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01002700
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01002800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01002900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01003000
.ZG295A               ANOP  ,                                           01003100
.*------------------------------------------------------------------    01003200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01003300
.ZG296                ANOP  ,                                           01003400
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01003500
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG296E  VALID ARG    01003600
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG296D  OMITTED     01003700
&ZASYSLNDX            SETA  0                                           01003800
.ZG296A               ANOP  ,           POSITIONAL MACRO KEY            01003900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01004000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG296C           01004100
&ZTLC                 SETC 'BUFADDRSIZE'                                01004200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG296A  01004300
.ZG296B               ANOP  ,                                           01004400
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01004500
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'  *KOPTA* MNOTE      01004600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01004700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01004800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01004900
                      AGO   .ZG296E                                     01005000
.ZG296C               ANOP  ,                                           01005100
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01005200
&ZMS                  SETC  '"BUFADDRSIZE='     *KUKWA* MNOTE           01005300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01005400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01005500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01005600
&ZMS                  SETC  '&ZMS "31"'                                 01005700
&ZMS                  SETC  '&ZMS OR "64".'                             01005800
                      MNOTE 8,' &ZMS '                                  01005900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01006000
                      AGO   .ZG296E                                     01006100
.ZG296D               ANOP  ,                                           01006200
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01006300
.ZG296E               ANOP  ,                                           01006400
.*------------------------------------------------------------------    01006500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01006600
.ZG297                ANOP  ,                                           01006700
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01006800
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG297E  VALID ARG    01006900
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG297D  OMITTED     01007000
&ZASYSLNDX            SETA  0                                           01007100
.ZG297A               ANOP  ,           POSITIONAL MACRO KEY            01007200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01007300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG297C           01007400
&ZTLC                 SETC 'BUFADDRTYPE'                                01007500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG297A  01007600
.ZG297B               ANOP  ,                                           01007700
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01007800
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'  *KOPTA* MNOTE      01007900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01008000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01008100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01008200
                      AGO   .ZG297E                                     01008300
.ZG297C               ANOP  ,                                           01008400
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01008500
&ZMS                  SETC  '"BUFADDRTYPE='     *KUKWA* MNOTE           01008600
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01008700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01008800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01008900
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            01009000
&ZMS                  SETC  '&ZMS OR "REAL".'                           01009100
                      MNOTE 8,' &ZMS '                                  01009200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01009300
                      AGO   .ZG297E                                     01009400
.ZG297D               ANOP  ,                                           01009500
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             01009600
.ZG297E               ANOP  ,                                           01009700
.*----------------------------------------------------------------***   01009800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01009900
                      AIF   (N'&BUFNUM LE 1).ZG299A  CK NUM             01010000
&ZMS                  SETC  '"BUFNUM='  *KPOSA* MNOTE                   01010100
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01010200
&ZMS                  SETC  '&ZMS "BUFNUM"'                             01010300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01010400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01010500
.ZG299A               ANOP  ,                                           01010600
.*-------------------------------------------------------------------   01010700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01010800
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   01010900
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           01011000
                      AIF   (N'&BUFNUM GT 1).ZG299B  MULTI PARMS        01011100
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   01011200
.ZG299B               AIF   (K'&BUFNUM(1) GT 0).ZG299C                  01011300
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 01011400
&ZMS                  SETC  ' '         *KRQDA*                         01011500
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 01011600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01011700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01011800
.ZG299C               ANOP  ,                                           01011900
.*-------------------------------------------------------------------   01012000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01012100
                      AIF   (K'&ZXBUFNUM LE 0).ZG299R  NOT I/O          01012200
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG299R             01012300
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  01012400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG299P               01012500
                      AIF   (K'&ZCGPR GT 2).ZG299Q                      01012600
                      AIF   ('&ZCGPR' EQ '0').ZG299Q                    01012700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01012800
                      AIF   (T'&ZCGPR NE 'N').ZG299Q  INVALID REG NAME  01012900
.ZG299P               ANOP  ,                                           01013000
                      AIF   (T'&ZCGPR NE 'N').ZG299R  NON NUMERIC       01013100
                      AIF   ('&ZCGPR' LT '2').ZG299Q                    01013200
                      AIF   ('&ZCGPR' LE '12').ZG299R                   01013300
.ZG299Q               ANOP  ,                                           01013400
&ZMS                  SETC  '"BUFNUM='  *KGPRA* MNOTE                   01013500
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01013600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01013700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01013800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01013900
.ZG299R               ANOP  ,                                           01014000
.*----------------------------------------------------------------***   01014100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01014200
                      AIF   (N'&BUFINCRNUM LE 1).ZG302A  CK NUM         01014300
&ZMS                  SETC  '"BUFINCRNUM='      *KPOSA* MNOTE           01014400
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         01014500
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         01014600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01014700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01014800
.ZG302A               ANOP  ,                                           01014900
.*-------------------------------------------------------------------   01015000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01015100
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   01015200
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           01015300
                      AIF   (N'&BUFINCRNUM GT 1).ZG302B  MULTI PARMS    01015400
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           01015500
.ZG302B               AIF   (K'&BUFINCRNUM(1) GT 0).ZG302C              01015600
&ZXBUFINCRNUM         SETC  ''          RESET IN/OUTPUT                 01015700
&ZMS                  SETC  ' '         *KRQDA*                         01015800
&ZMS                  SETC  '&ZMS "BUFINCRNUM" KEY AND ITS'             01015900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01016000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01016100
.ZG302C               ANOP  ,                                           01016200
.*-------------------------------------------------------------------   01016300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01016400
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG302R  NOT I/O      01016500
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG302R         01016600
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          01016700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG302P               01016800
                      AIF   (K'&ZCGPR GT 2).ZG302Q                      01016900
                      AIF   ('&ZCGPR' EQ '0').ZG302Q                    01017000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01017100
                      AIF   (T'&ZCGPR NE 'N').ZG302Q  INVALID REG NAME  01017200
.ZG302P               ANOP  ,                                           01017300
                      AIF   (T'&ZCGPR NE 'N').ZG302R  NON NUMERIC       01017400
                      AIF   ('&ZCGPR' LT '2').ZG302Q                    01017500
                      AIF   ('&ZCGPR' LE '12').ZG302R                   01017600
.ZG302Q               ANOP  ,                                           01017700
&ZMS                  SETC  '"BUFINCRNUM='      *KGPRA* MNOTE           01017800
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         01017900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01018000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01018100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01018200
.ZG302R               ANOP  ,                                           01018300
.*-------------------------------------------------------------------   01018400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01018500
.ZG304                AIF   ('&XDATAREA' NE 'BUFFER').ZG316             01018600
.*-------------------------------------------------------------------   01018700
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                01018800
&ZCVAL                SETC ''           ERROR KEY FIELD                 01018900
.ZG304I0              AIF   (K'&BUFADDRTYPE LE 0).ZG304I1               01019000
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         01019100
.ZG304I1              AIF   (K'&BUFALET LE 0).ZG304I2                   01019200
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          01019300
.ZG304I2              AIF   (K'&BUFADDRSIZE LE 0).ZG304I3               01019400
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         01019500
.ZG304I3              AIF   (K'&BUFNUM LE 0).ZG304I4                    01019600
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          01019700
.ZG304I4              AIF   (K'&BUFINCRNUM LE 0).ZG304I5                01019800
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          01019900
.ZG304I5              AIF   (K'&ZCVAL LE 0).ZG304J  KEY                 01020000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01020100
&ZMS                  SETC  '"BUFFER'   *KMEIA* MNOTE                   01020200
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01020300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01020400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01020500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01020600
.ZG304J               ANOP  ,                                           01020700
.*-------------------------------------------------------------------   01020800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01020900
                      AIF   (K'&ZXBUFFER LE 0).ZG304R  NOT I/O          01021000
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG304R             01021100
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  01021200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG304P               01021300
                      AIF   (K'&ZCGPR GT 2).ZG304Q                      01021400
                      AIF   ('&ZCGPR' EQ '0').ZG304Q                    01021500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01021600
                      AIF   (T'&ZCGPR NE 'N').ZG304Q  INVALID REG NAME  01021700
.ZG304P               ANOP  ,                                           01021800
                      AIF   (T'&ZCGPR NE 'N').ZG304R  NON NUMERIC       01021900
                      AIF   ('&ZCGPR' LT '2').ZG304Q                    01022000
                      AIF   ('&ZCGPR' LE '12').ZG304R                   01022100
.ZG304Q               ANOP  ,                                           01022200
&ZMS                  SETC  '"BUFFER='  *KGPRA* MNOTE                   01022300
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01022400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01022500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01022600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01022700
.ZG304R               ANOP  ,                                           01022800
.*------------------------------------------------------------------    01022900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01023000
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01023100
.*-------------------------------------------------------------------   01023200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01023300
.ZG307                ANOP  ,                                           01023400
                      AIF   (K'&PAGEABLE(1) LE 0).ZG307A                01023500
&ZTLC                 SETC 'YES'                                        01023600
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG311           01023700
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01023800
                      AIF   (N'&PAGEABLE LE 1).ZG307A  CK NUM           01023900
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           01024000
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01024100
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01024200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01024300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01024400
.ZG307A               ANOP  ,                                           01024500
.*----------------------------------------------------------------***   01024600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01024700
                      AIF   (N'&BUFSTGKEY LE 1).ZG309A  CK NUM          01024800
&ZMS                  SETC  '"BUFSTGKEY='       *KPOSA* MNOTE           01024900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01025000
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01025100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01025200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01025300
.ZG309A               ANOP  ,                                           01025400
.*-------------------------------------------------------------------   01025500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01025600
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01025700
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01025800
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG309B  PARM         01025900
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01026000
                      AIF   (N'&BUFSTGKEY GT 1).ZG309B  MULTI PARMS     01026100
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01026200
.ZG309B               ANOP  ,                                           01026300
.*-------------------------------------------------------------------   01026400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01026500
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG309R  NOT I/O       01026600
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG309R                  01026700
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG309R          01026800
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01026900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG309P               01027000
                      AIF   (K'&ZCGPR GT 2).ZG309Q                      01027100
                      AIF   ('&ZCGPR' EQ '0').ZG309Q                    01027200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01027300
                      AIF   (T'&ZCGPR NE 'N').ZG309Q  INVALID REG NAME  01027400
.ZG309P               ANOP  ,                                           01027500
                      AIF   (T'&ZCGPR NE 'N').ZG309R  NON NUMERIC       01027600
                      AIF   ('&ZCGPR' LT '2').ZG309Q                    01027700
                      AIF   ('&ZCGPR' LE '12').ZG309R                   01027800
.ZG309Q               ANOP  ,                                           01027900
&ZMS                  SETC  '"BUFSTGKEY='       *KGPRA* MNOTE           01028000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01028100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01028200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01028300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01028400
.ZG309R               ANOP  ,                                           01028500
.*-------------------------------------------------------------------   01028600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01028700
.ZG311                ANOP  ,                                           01028800
&ZTLC                 SETC 'NO'                                         01028900
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG312           01029000
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01029100
                      AIF   (N'&PAGEABLE LE 1).ZG311A  CK NUM           01029200
&ZMS                  SETC  '"PAGEABLE='        *KPOSA* MNOTE           01029300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01029400
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01029500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01029600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01029700
.ZG311A               ANOP  ,                                           01029800
.*------------------------------------------------------------------    01029900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01030000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01030100
.ZG311A0              AIF   (K'&BUFSTGKEY LE 0).ZG311A1  OK             01030200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01030300
.ZG311A1              AIF   (K'&ZCVAL LE 0).ZG311A2  OK                 01030400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01030500
&ZMS                  SETC  '"PAGEABLE'         *KMEIA* MNOTE           01030600
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01030700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01030800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01030900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01031000
.ZG311A2              ANOP  ,                                           01031100
.*------------------------------------------------------------------    01031200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01031300
.ZG312                ANOP  ,                                           01031400
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01031500
                      AIF   (K'&XPAGEABLE GT 0).ZG312E  VALID ARG       01031600
                      AIF   (T'&PAGEABLE EQ 'O').ZG312D  OMITTED        01031700
&ZASYSLNDX            SETA  0                                           01031800
.ZG312A               ANOP  ,           POSITIONAL MACRO KEY            01031900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01032000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG312C           01032100
&ZTLC                 SETC 'PAGEABLE'                                   01032200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG312A  01032300
.ZG312B               ANOP  ,                                           01032400
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01032500
&ZMS                  SETC  'THE "PAGEABLE" KEY'  *KOPTA* MNOTE         01032600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01032700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01032800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01032900
                      AGO   .ZG312E                                     01033000
.ZG312C               ANOP  ,                                           01033100
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01033200
&ZMS                  SETC  '"PAGEABLE='        *KUKWA* MNOTE           01033300
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01033400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01033500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01033600
&ZMS                  SETC  '&ZMS "YES"'                                01033700
&ZMS                  SETC  '&ZMS OR "NO".'                             01033800
                      MNOTE 8,' &ZMS '                                  01033900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01034000
                      AGO   .ZG312E                                     01034100
.ZG312D               ANOP  ,                                           01034200
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01034300
.ZG312E               ANOP  ,                                           01034400
.*----------------------------------------------------------------***   01034500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01034600
                      AIF   (N'&BUFSIZE LE 1).ZG314A  CK NUM            01034700
&ZMS                  SETC  '"BUFSIZE='         *KPOSA* MNOTE           01034800
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01034900
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            01035000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01035100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01035200
.ZG314A               ANOP  ,                                           01035300
.*-------------------------------------------------------------------   01035400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01035500
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   01035600
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           01035700
                      AIF   (N'&BUFSIZE GT 1).ZG314B  MULTI PARMS       01035800
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   01035900
.ZG314B               AIF   (K'&BUFSIZE(1) GT 0).ZG314C                 01036000
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 01036100
&ZMS                  SETC  ' '         *KRQDA*                         01036200
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                01036300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01036400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01036500
.ZG314C               ANOP  ,                                           01036600
.*-------------------------------------------------------------------   01036700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01036800
                      AIF   (K'&ZXBUFSIZE LE 0).ZG314R  NOT I/O         01036900
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG314R            01037000
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                01037100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG314P               01037200
                      AIF   (K'&ZCGPR GT 2).ZG314Q                      01037300
                      AIF   ('&ZCGPR' EQ '0').ZG314Q                    01037400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01037500
                      AIF   (T'&ZCGPR NE 'N').ZG314Q  INVALID REG NAME  01037600
.ZG314P               ANOP  ,                                           01037700
                      AIF   (T'&ZCGPR NE 'N').ZG314R  NON NUMERIC       01037800
                      AIF   ('&ZCGPR' LT '2').ZG314Q                    01037900
                      AIF   ('&ZCGPR' LE '12').ZG314R                   01038000
.ZG314Q               ANOP  ,                                           01038100
&ZMS                  SETC  '"BUFSIZE='         *KGPRA* MNOTE           01038200
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01038300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01038400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01038500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01038600
.ZG314R               ANOP  ,                                           01038700
.*-------------------------------------------------------------------   01038800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            01038900
.ZG316                ANOP  ,           END MUTUALLY EXCLUSIVE KEYS     01039000
.*------------------------------------------------------------------    01039100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01039200
.ZG317                ANOP  ,                                           01039300
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   01039400
                      AIF   (K'&XREQUEST GT 0).ZG317E  VALID ARG        01039500
                      AIF   (T'&REQUEST EQ 'O').ZG317D  OMITTED         01039600
&ZASYSLNDX            SETA  0                                           01039700
.ZG317A               ANOP  ,           POSITIONAL MACRO KEY            01039800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01039900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG317C           01040000
&ZTLC                 SETC 'REQUEST'                                    01040100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG317A  01040200
.ZG317B               ANOP  ,                                           01040300
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01040400
&ZMS                  SETC  'THE "REQUEST" KEY'  *KOPTA* MNOTE          01040500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01040600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01040700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01040800
                      AGO   .ZG317E                                     01040900
.ZG317C               ANOP  ,                                           01041000
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01041100
&ZMS                  SETC  '"REQUEST='         *KUKWA* MNOTE           01041200
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01041300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01041400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01041500
&ZMS                  SETC  '&ZMS "LOCK",'                              01041600
&ZMS                  SETC  '&ZMS "READ_LCONTROLS",'                    01041700
&ZMS                  SETC  '&ZMS "WRITE_LCONTROLS",'                   01041800
&ZMS                  SETC  '&ZMS "READ_EQCONTROLS",'                   01041900
&ZMS                  SETC  '&ZMS "READ_EMCONTROLS",'                   01042000
&ZMS                  SETC  '&ZMS "DEQ_EVENTQ",'                        01042100
&ZMS                  SETC  '&ZMS "MONITOR_EVENTQ",'                    01042200
&ZMS                  SETC  '&ZMS "MONITOR_LIST",'                      01042300
&ZMS                  SETC  '&ZMS "MONITOR_KEYRANGE",'                  01042400
                      MNOTE 8,' &ZMS '                                  01042500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01042600
&ZMS                  SETC  '(CONTINUED) '                              01042700
&ZMS                  SETC  '&ZMS "MONITOR_SUBLIST",'                   01042800
&ZMS                  SETC  '&ZMS OR "MONITOR_SUBLISTS".'               01042900
                      MNOTE 8,' &ZMS '                                  01043000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01043100
                      AGO   .ZG317E                                     01043200
.ZG317D               ANOP  ,                                           01043300
&XREQUEST             SETC  'LOCK'      SET DEFAULT KEYWORD             01043400
.ZG317E               ANOP  ,                                           01043500
.*------------------------------------------------------------------    01043600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01043700
                      AIF   (K'&REQUEST(1) GT 0).ZG317F  PARM           01043800
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             01043900
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01044000
&ZMS                  SETC  'THE'                                       01044100
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS'                01044200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01044300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01044400
&ZMS                  SETC  '&ZMS "LOCK",'                              01044500
&ZMS                  SETC  '&ZMS "READ_LCONTROLS",'                    01044600
&ZMS                  SETC  '&ZMS "WRITE_LCONTROLS",'                   01044700
&ZMS                  SETC  '&ZMS "READ_EQCONTROLS",'                   01044800
&ZMS                  SETC  '&ZMS "READ_EMCONTROLS",'                   01044900
&ZMS                  SETC  '&ZMS "DEQ_EVENTQ",'                        01045000
&ZMS                  SETC  '&ZMS "MONITOR_EVENTQ",'                    01045100
&ZMS                  SETC  '&ZMS "MONITOR_LIST",'                      01045200
                      MNOTE 8,' &ZMS '                                  01045300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01045400
&ZMS                  SETC  '(CONTINUED) '                              01045500
&ZMS                  SETC  '&ZMS "MONITOR_KEYRANGE",'                  01045600
&ZMS                  SETC  '&ZMS "MONITOR_SUBLIST",'                   01045700
&ZMS                  SETC  '&ZMS OR "MONITOR_SUBLISTS".'               01045800
                      MNOTE 8,' &ZMS '                                  01045900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01046000
.ZG317F               ANOP  ,                                           01046100
.*------------------------------------------------------------------    01046200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01046300
&XMODE                SETC  ''          INITIALIZE XVARIABLE            01046400
.*-------------------------------------------------------------------   01046500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01046600
.ZG320                ANOP  ,                                           01046700
                      AIF   (K'&MODE(1) LE 0).ZG320A                    01046800
&ZTLC                 SETC 'SYNCSUSPEND'                                01046900
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG327               01047000
&XMODE                SETC  'SYNCSUSPEND'       SET KEYWORD             01047100
                      AIF   (N'&MODE LE 1).ZG320A  CK NUM               01047200
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01047300
&ZMS                  SETC  '&ZMS.&MODE"'                               01047400
&ZMS                  SETC  '&ZMS "MODE"'                               01047500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01047600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01047700
.ZG320A               ANOP  ,                                           01047800
.*------------------------------------------------------------------    01047900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01048000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01048100
.ZG320A0              AIF   (K'&REQECB LE 0).ZG320A1  OK                01048200
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01048300
.ZG320A1              AIF   (K'&REQDATA LE 0).ZG320A2  OK               01048400
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01048500
.ZG320A2              AIF   (K'&REQTOKEN LE 0).ZG320A3  OK              01048600
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01048700
.ZG320A3              AIF   (K'&ZCVAL LE 0).ZG320A4  OK                 01048800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01048900
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01049000
&ZMS                  SETC  '&ZMS.=&MODE"'                              01049100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01049200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01049300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01049400
.ZG320A4              ANOP  ,                                           01049500
.*----------------------------------------------------------------***   01049600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01049700
                      AIF   (N'&ANSAREA LE 1).ZG322A  CK NUM            01049800
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           01049900
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01050000
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01050100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01050200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01050300
.ZG322A               ANOP  ,                                           01050400
.*-------------------------------------------------------------------   01050500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01050600
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01050700
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01050800
                      AIF   (N'&ANSAREA GT 1).ZG322B  MULTI PARMS       01050900
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01051000
.ZG322B               AIF   (K'&ANSAREA(1) GT 0).ZG322C                 01051100
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01051200
&ZMS                  SETC  'WHEN "SYNCSUSPEND" IS SPECIFIED'  *KRQDA*  01051300
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01051400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01051500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01051600
.ZG322C               ANOP  ,                                           01051700
.*-------------------------------------------------------------------   01051800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01051900
                      AIF   (K'&ZXANSAREA LE 0).ZG322R  NOT I/O         01052000
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG322R            01052100
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01052200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG322P               01052300
                      AIF   (K'&ZCGPR GT 2).ZG322Q                      01052400
                      AIF   ('&ZCGPR' EQ '0').ZG322Q                    01052500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01052600
                      AIF   (T'&ZCGPR NE 'N').ZG322Q  INVALID REG NAME  01052700
.ZG322P               ANOP  ,                                           01052800
                      AIF   (T'&ZCGPR NE 'N').ZG322R  NON NUMERIC       01052900
                      AIF   ('&ZCGPR' LT '2').ZG322Q                    01053000
                      AIF   ('&ZCGPR' LE '12').ZG322R                   01053100
.ZG322Q               ANOP  ,                                           01053200
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           01053300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01053400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01053500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01053600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01053700
.ZG322R               ANOP  ,                                           01053800
.*----------------------------------------------------------------***   01053900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01054000
                      AIF   (N'&ANSLEN LE 1).ZG324A  CK NUM             01054100
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   01054200
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01054300
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01054400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01054500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01054600
.ZG324A               ANOP  ,                                           01054700
.*-------------------------------------------------------------------   01054800
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01054900
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01055000
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01055100
                      AIF   (N'&ANSLEN GT 1).ZG324B  MULTI PARMS        01055200
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01055300
.ZG324B               AIF   (K'&ANSAREA(1) GT 0).ZG324C  KEY            01055400
                      AIF   (K'&ANSLEN(1) LE 0).ZG324D  PARM            01055500
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   01055600
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01055700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01055800
&ZMS                  SETC  '&ZMS '                                     01055900
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01056000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01056100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01056200
                      AGO   .ZG324E                                     01056300
.*                                                                      01056400
.ZG324C               AIF   (K'&ANSLEN(1) GT 0).ZG324E  PARM            01056500
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01056600
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      01056700
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01056800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01056900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01057000
.ZG324D               ANOP  ,                                           01057100
&XANSLEN              SETC  '0'         SET DEFAULT                     01057200
.ZG324E               ANOP  ,                                           01057300
.*-------------------------------------------------------------------   01057400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01057500
                      AIF   (K'&ZXANSLEN LE 0).ZG324R  NOT I/O          01057600
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG324R             01057700
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01057800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG324P               01057900
                      AIF   (K'&ZCGPR GT 2).ZG324Q                      01058000
                      AIF   ('&ZCGPR' EQ '0').ZG324Q                    01058100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01058200
                      AIF   (T'&ZCGPR NE 'N').ZG324Q  INVALID REG NAME  01058300
.ZG324P               ANOP  ,                                           01058400
                      AIF   (T'&ZCGPR NE 'N').ZG324R  NON NUMERIC       01058500
                      AIF   ('&ZCGPR' LT '2').ZG324Q                    01058600
                      AIF   ('&ZCGPR' LE '12').ZG324R                   01058700
.ZG324Q               ANOP  ,                                           01058800
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   01058900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01059000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01059100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01059200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01059300
.ZG324R               ANOP  ,                                           01059400
.*-------------------------------------------------------------------   01059500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01059600
.ZG327                ANOP  ,                                           01059700
&ZTLC                 SETC 'SYNCECB'                                    01059800
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG337               01059900
&XMODE                SETC  'SYNCECB'   SET KEYWORD                     01060000
                      AIF   (N'&MODE LE 1).ZG327A  CK NUM               01060100
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01060200
&ZMS                  SETC  '&ZMS.&MODE"'                               01060300
&ZMS                  SETC  '&ZMS "MODE"'                               01060400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01060500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01060600
.ZG327A               ANOP  ,                                           01060700
.*------------------------------------------------------------------    01060800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01060900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01061000
.ZG327A0              AIF   (K'&REQDATA LE 0).ZG327A1  OK               01061100
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01061200
.ZG327A1              AIF   (K'&REQTOKEN LE 0).ZG327A2  OK              01061300
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01061400
.ZG327A2              AIF   (K'&ZCVAL LE 0).ZG327A3  OK                 01061500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01061600
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01061700
&ZMS                  SETC  '&ZMS.=&MODE"'                              01061800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01061900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01062000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01062100
.ZG327A3              ANOP  ,                                           01062200
.*----------------------------------------------------------------***   01062300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01062400
                      AIF   (N'&REQECB LE 1).ZG329A  CK NUM             01062500
&ZMS                  SETC  '"REQECB='  *KPOSA* MNOTE                   01062600
&ZMS                  SETC  '&ZMS.&REQECB"'                             01062700
&ZMS                  SETC  '&ZMS "REQECB"'                             01062800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01062900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01063000
.ZG329A               ANOP  ,                                           01063100
.*-------------------------------------------------------------------   01063200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01063300
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01063400
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01063500
                      AIF   (N'&REQECB GT 1).ZG329B  MULTI PARMS        01063600
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01063700
.ZG329B               AIF   (K'&REQECB(1) GT 0).ZG329C                  01063800
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01063900
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'  *KRQDA*      01064000
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01064100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01064200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01064300
.ZG329C               ANOP  ,                                           01064400
.*-------------------------------------------------------------------   01064500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01064600
                      AIF   (K'&ZXREQECB LE 0).ZG329R  NOT I/O          01064700
                      AIF   ('&XREQECB'(1,1) NE '(').ZG329R             01064800
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01064900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG329P               01065000
                      AIF   (K'&ZCGPR GT 2).ZG329Q                      01065100
                      AIF   ('&ZCGPR' EQ '0').ZG329Q                    01065200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01065300
                      AIF   (T'&ZCGPR NE 'N').ZG329Q  INVALID REG NAME  01065400
.ZG329P               ANOP  ,                                           01065500
                      AIF   (T'&ZCGPR NE 'N').ZG329R  NON NUMERIC       01065600
                      AIF   ('&ZCGPR' LT '2').ZG329Q                    01065700
                      AIF   ('&ZCGPR' LE '12').ZG329R                   01065800
.ZG329Q               ANOP  ,                                           01065900
&ZMS                  SETC  '"REQECB='  *KGPRA* MNOTE                   01066000
&ZMS                  SETC  '&ZMS.&REQECB"'                             01066100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01066200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01066300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01066400
.ZG329R               ANOP  ,                                           01066500
.*----------------------------------------------------------------***   01066600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01066700
                      AIF   (N'&ANSAREA LE 1).ZG332A  CK NUM            01066800
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           01066900
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01067000
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01067100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01067200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01067300
.ZG332A               ANOP  ,                                           01067400
.*-------------------------------------------------------------------   01067500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01067600
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01067700
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01067800
                      AIF   (N'&ANSAREA GT 1).ZG332B  MULTI PARMS       01067900
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01068000
.ZG332B               AIF   (K'&ANSAREA(1) GT 0).ZG332C                 01068100
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01068200
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'  *KRQDA*      01068300
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01068400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01068500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01068600
.ZG332C               ANOP  ,                                           01068700
.*-------------------------------------------------------------------   01068800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01068900
                      AIF   (K'&ZXANSAREA LE 0).ZG332R  NOT I/O         01069000
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG332R            01069100
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01069200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG332P               01069300
                      AIF   (K'&ZCGPR GT 2).ZG332Q                      01069400
                      AIF   ('&ZCGPR' EQ '0').ZG332Q                    01069500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01069600
                      AIF   (T'&ZCGPR NE 'N').ZG332Q  INVALID REG NAME  01069700
.ZG332P               ANOP  ,                                           01069800
                      AIF   (T'&ZCGPR NE 'N').ZG332R  NON NUMERIC       01069900
                      AIF   ('&ZCGPR' LT '2').ZG332Q                    01070000
                      AIF   ('&ZCGPR' LE '12').ZG332R                   01070100
.ZG332Q               ANOP  ,                                           01070200
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           01070300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01070400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01070500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01070600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01070700
.ZG332R               ANOP  ,                                           01070800
.*----------------------------------------------------------------***   01070900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01071000
                      AIF   (N'&ANSLEN LE 1).ZG334A  CK NUM             01071100
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   01071200
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01071300
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01071400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01071500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01071600
.ZG334A               ANOP  ,                                           01071700
.*-------------------------------------------------------------------   01071800
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01071900
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01072000
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01072100
                      AIF   (N'&ANSLEN GT 1).ZG334B  MULTI PARMS        01072200
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01072300
.ZG334B               AIF   (K'&ANSAREA(1) GT 0).ZG334C  KEY            01072400
                      AIF   (K'&ANSLEN(1) LE 0).ZG334D  PARM            01072500
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   01072600
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01072700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01072800
&ZMS                  SETC  '&ZMS '                                     01072900
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01073000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01073100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01073200
                      AGO   .ZG334E                                     01073300
.*                                                                      01073400
.ZG334C               AIF   (K'&ANSLEN(1) GT 0).ZG334E  PARM            01073500
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01073600
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      01073700
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01073800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01073900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01074000
.ZG334D               ANOP  ,                                           01074100
&XANSLEN              SETC  '0'         SET DEFAULT                     01074200
.ZG334E               ANOP  ,                                           01074300
.*-------------------------------------------------------------------   01074400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01074500
                      AIF   (K'&ZXANSLEN LE 0).ZG334R  NOT I/O          01074600
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG334R             01074700
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01074800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG334P               01074900
                      AIF   (K'&ZCGPR GT 2).ZG334Q                      01075000
                      AIF   ('&ZCGPR' EQ '0').ZG334Q                    01075100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01075200
                      AIF   (T'&ZCGPR NE 'N').ZG334Q  INVALID REG NAME  01075300
.ZG334P               ANOP  ,                                           01075400
                      AIF   (T'&ZCGPR NE 'N').ZG334R  NON NUMERIC       01075500
                      AIF   ('&ZCGPR' LT '2').ZG334Q                    01075600
                      AIF   ('&ZCGPR' LE '12').ZG334R                   01075700
.ZG334Q               ANOP  ,                                           01075800
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   01075900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01076000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01076100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01076200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01076300
.ZG334R               ANOP  ,                                           01076400
.*-------------------------------------------------------------------   01076500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01076600
.ZG337                ANOP  ,                                           01076700
&ZTLC                 SETC 'SYNCEXIT'                                   01076800
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG347               01076900
&XMODE                SETC  'SYNCEXIT'  SET KEYWORD                     01077000
                      AIF   (N'&MODE LE 1).ZG337A  CK NUM               01077100
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01077200
&ZMS                  SETC  '&ZMS.&MODE"'                               01077300
&ZMS                  SETC  '&ZMS "MODE"'                               01077400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01077500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01077600
.ZG337A               ANOP  ,                                           01077700
.*------------------------------------------------------------------    01077800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01077900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01078000
.ZG337A0              AIF   (K'&REQECB LE 0).ZG337A1  OK                01078100
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01078200
.ZG337A1              AIF   (K'&REQTOKEN LE 0).ZG337A2  OK              01078300
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01078400
.ZG337A2              AIF   (K'&ZCVAL LE 0).ZG337A3  OK                 01078500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01078600
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01078700
&ZMS                  SETC  '&ZMS.=&MODE"'                              01078800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01078900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01079000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01079100
.ZG337A3              ANOP  ,                                           01079200
.*----------------------------------------------------------------***   01079300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01079400
                      AIF   (N'&REQDATA LE 1).ZG339A  CK NUM            01079500
&ZMS                  SETC  '"REQDATA='         *KPOSA* MNOTE           01079600
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01079700
&ZMS                  SETC  '&ZMS "REQDATA"'                            01079800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01079900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01080000
.ZG339A               ANOP  ,                                           01080100
.*-------------------------------------------------------------------   01080200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01080300
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01080400
&XREQDATA             SETC  'NO_REQDATA'                                01080500
                      AIF   (K'&REQDATA(1) LE 0).ZG339B  PARM           01080600
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01080700
                      AIF   (N'&REQDATA GT 1).ZG339B  MULTI PARMS       01080800
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01080900
.ZG339B               ANOP  ,                                           01081000
.*-------------------------------------------------------------------   01081100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01081200
                      AIF   (K'&ZXREQDATA LE 0).ZG339R  NOT I/O         01081300
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG339R                     01081400
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG339R            01081500
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01081600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG339P               01081700
                      AIF   (K'&ZCGPR GT 2).ZG339Q                      01081800
                      AIF   ('&ZCGPR' EQ '0').ZG339Q                    01081900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01082000
                      AIF   (T'&ZCGPR NE 'N').ZG339Q  INVALID REG NAME  01082100
.ZG339P               ANOP  ,                                           01082200
                      AIF   (T'&ZCGPR NE 'N').ZG339R  NON NUMERIC       01082300
                      AIF   ('&ZCGPR' LT '2').ZG339Q                    01082400
                      AIF   ('&ZCGPR' LE '12').ZG339R                   01082500
.ZG339Q               ANOP  ,                                           01082600
&ZMS                  SETC  '"REQDATA='         *KGPRA* MNOTE           01082700
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01082800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01082900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01083000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01083100
.ZG339R               ANOP  ,                                           01083200
.*----------------------------------------------------------------***   01083300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01083400
                      AIF   (N'&ANSAREA LE 1).ZG342A  CK NUM            01083500
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           01083600
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01083700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01083800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01083900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01084000
.ZG342A               ANOP  ,                                           01084100
.*-------------------------------------------------------------------   01084200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01084300
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01084400
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01084500
                      AIF   (N'&ANSAREA GT 1).ZG342B  MULTI PARMS       01084600
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01084700
.ZG342B               AIF   (K'&ANSAREA(1) GT 0).ZG342C                 01084800
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01084900
&ZMS                  SETC  'WHEN "SYNCEXIT" IS SPECIFIED'  *KRQDA*     01085000
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01085100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01085200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01085300
.ZG342C               ANOP  ,                                           01085400
.*-------------------------------------------------------------------   01085500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01085600
                      AIF   (K'&ZXANSAREA LE 0).ZG342R  NOT I/O         01085700
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG342R            01085800
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01085900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG342P               01086000
                      AIF   (K'&ZCGPR GT 2).ZG342Q                      01086100
                      AIF   ('&ZCGPR' EQ '0').ZG342Q                    01086200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01086300
                      AIF   (T'&ZCGPR NE 'N').ZG342Q  INVALID REG NAME  01086400
.ZG342P               ANOP  ,                                           01086500
                      AIF   (T'&ZCGPR NE 'N').ZG342R  NON NUMERIC       01086600
                      AIF   ('&ZCGPR' LT '2').ZG342Q                    01086700
                      AIF   ('&ZCGPR' LE '12').ZG342R                   01086800
.ZG342Q               ANOP  ,                                           01086900
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           01087000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01087100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01087200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01087300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01087400
.ZG342R               ANOP  ,                                           01087500
.*----------------------------------------------------------------***   01087600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01087700
                      AIF   (N'&ANSLEN LE 1).ZG344A  CK NUM             01087800
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   01087900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01088000
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01088100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01088200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01088300
.ZG344A               ANOP  ,                                           01088400
.*-------------------------------------------------------------------   01088500
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01088600
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01088700
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01088800
                      AIF   (N'&ANSLEN GT 1).ZG344B  MULTI PARMS        01088900
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01089000
.ZG344B               AIF   (K'&ANSAREA(1) GT 0).ZG344C  KEY            01089100
                      AIF   (K'&ANSLEN(1) LE 0).ZG344D  PARM            01089200
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   01089300
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01089400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01089500
&ZMS                  SETC  '&ZMS '                                     01089600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01089700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01089800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01089900
                      AGO   .ZG344E                                     01090000
.*                                                                      01090100
.ZG344C               AIF   (K'&ANSLEN(1) GT 0).ZG344E  PARM            01090200
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01090300
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      01090400
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01090500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01090600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01090700
.ZG344D               ANOP  ,                                           01090800
&XANSLEN              SETC  '0'         SET DEFAULT                     01090900
.ZG344E               ANOP  ,                                           01091000
.*-------------------------------------------------------------------   01091100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01091200
                      AIF   (K'&ZXANSLEN LE 0).ZG344R  NOT I/O          01091300
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG344R             01091400
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01091500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG344P               01091600
                      AIF   (K'&ZCGPR GT 2).ZG344Q                      01091700
                      AIF   ('&ZCGPR' EQ '0').ZG344Q                    01091800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01091900
                      AIF   (T'&ZCGPR NE 'N').ZG344Q  INVALID REG NAME  01092000
.ZG344P               ANOP  ,                                           01092100
                      AIF   (T'&ZCGPR NE 'N').ZG344R  NON NUMERIC       01092200
                      AIF   ('&ZCGPR' LT '2').ZG344Q                    01092300
                      AIF   ('&ZCGPR' LE '12').ZG344R                   01092400
.ZG344Q               ANOP  ,                                           01092500
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   01092600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01092700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01092800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01092900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01093000
.ZG344R               ANOP  ,                                           01093100
.*-------------------------------------------------------------------   01093200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01093300
.ZG347                ANOP  ,                                           01093400
&ZTLC                 SETC 'SYNCTOKEN'                                  01093500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG357               01093600
&XMODE                SETC  'SYNCTOKEN'         SET KEYWORD             01093700
                      AIF   (N'&MODE LE 1).ZG347A  CK NUM               01093800
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01093900
&ZMS                  SETC  '&ZMS.&MODE"'                               01094000
&ZMS                  SETC  '&ZMS "MODE"'                               01094100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01094200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01094300
.ZG347A               ANOP  ,                                           01094400
.*------------------------------------------------------------------    01094500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01094600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01094700
.ZG347A0              AIF   (K'&REQECB LE 0).ZG347A1  OK                01094800
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01094900
.ZG347A1              AIF   (K'&REQDATA LE 0).ZG347A2  OK               01095000
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01095100
.ZG347A2              AIF   (K'&ZCVAL LE 0).ZG347A3  OK                 01095200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01095300
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01095400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01095500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01095600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01095700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01095800
.ZG347A3              ANOP  ,                                           01095900
.*----------------------------------------------------------------***   01096000
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01096100
                      AIF   (N'&REQTOKEN LE 1).ZG349A  CK NUM           01096200
&ZMS                  SETC  '"REQTOKEN='        *KPOSA* MNOTE           01096300
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01096400
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01096500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01096600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01096700
.ZG349A               ANOP  ,                                           01096800
.*-------------------------------------------------------------------   01096900
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01097000
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01097100
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01097200
                      AIF   (N'&REQTOKEN GT 1).ZG349B  MULTI PARMS      01097300
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01097400
.ZG349B               AIF   (K'&REQTOKEN(1) GT 0).ZG349C                01097500
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01097600
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'  *KRQDA*    01097700
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01097800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01097900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01098000
.ZG349C               ANOP  ,                                           01098100
.*-------------------------------------------------------------------   01098200
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01098300
                      AIF   (K'&ZXREQTOKEN LE 0).ZG349R  NOT I/O        01098400
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG349R           01098500
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01098600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG349P               01098700
                      AIF   (K'&ZCGPR GT 2).ZG349Q                      01098800
                      AIF   ('&ZCGPR' EQ '0').ZG349Q                    01098900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01099000
                      AIF   (T'&ZCGPR NE 'N').ZG349Q  INVALID REG NAME  01099100
.ZG349P               ANOP  ,                                           01099200
                      AIF   (T'&ZCGPR NE 'N').ZG349R  NON NUMERIC       01099300
                      AIF   ('&ZCGPR' LT '2').ZG349Q                    01099400
                      AIF   ('&ZCGPR' LE '12').ZG349R                   01099500
.ZG349Q               ANOP  ,                                           01099600
&ZMS                  SETC  '"REQTOKEN='        *KGPRA* MNOTE           01099700
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01099800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01099900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01100000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01100100
.ZG349R               ANOP  ,                                           01100200
.*----------------------------------------------------------------***   01100300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01100400
                      AIF   (N'&ANSAREA LE 1).ZG352A  CK NUM            01100500
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           01100600
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01100700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01100800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01100900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01101000
.ZG352A               ANOP  ,                                           01101100
.*-------------------------------------------------------------------   01101200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01101300
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01101400
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01101500
                      AIF   (N'&ANSAREA GT 1).ZG352B  MULTI PARMS       01101600
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01101700
.ZG352B               AIF   (K'&ANSAREA(1) GT 0).ZG352C                 01101800
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01101900
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'  *KRQDA*    01102000
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01102100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01102200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01102300
.ZG352C               ANOP  ,                                           01102400
.*-------------------------------------------------------------------   01102500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01102600
                      AIF   (K'&ZXANSAREA LE 0).ZG352R  NOT I/O         01102700
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG352R            01102800
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01102900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG352P               01103000
                      AIF   (K'&ZCGPR GT 2).ZG352Q                      01103100
                      AIF   ('&ZCGPR' EQ '0').ZG352Q                    01103200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01103300
                      AIF   (T'&ZCGPR NE 'N').ZG352Q  INVALID REG NAME  01103400
.ZG352P               ANOP  ,                                           01103500
                      AIF   (T'&ZCGPR NE 'N').ZG352R  NON NUMERIC       01103600
                      AIF   ('&ZCGPR' LT '2').ZG352Q                    01103700
                      AIF   ('&ZCGPR' LE '12').ZG352R                   01103800
.ZG352Q               ANOP  ,                                           01103900
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           01104000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01104100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01104200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01104300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01104400
.ZG352R               ANOP  ,                                           01104500
.*----------------------------------------------------------------***   01104600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01104700
                      AIF   (N'&ANSLEN LE 1).ZG354A  CK NUM             01104800
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   01104900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01105000
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01105100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01105200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01105300
.ZG354A               ANOP  ,                                           01105400
.*-------------------------------------------------------------------   01105500
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01105600
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01105700
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01105800
                      AIF   (N'&ANSLEN GT 1).ZG354B  MULTI PARMS        01105900
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01106000
.ZG354B               AIF   (K'&ANSAREA(1) GT 0).ZG354C  KEY            01106100
                      AIF   (K'&ANSLEN(1) LE 0).ZG354D  PARM            01106200
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   01106300
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01106400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01106500
&ZMS                  SETC  '&ZMS '                                     01106600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01106700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01106800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01106900
                      AGO   .ZG354E                                     01107000
.*                                                                      01107100
.ZG354C               AIF   (K'&ANSLEN(1) GT 0).ZG354E  PARM            01107200
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01107300
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      01107400
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01107500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01107600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01107700
.ZG354D               ANOP  ,                                           01107800
&XANSLEN              SETC  '0'         SET DEFAULT                     01107900
.ZG354E               ANOP  ,                                           01108000
.*-------------------------------------------------------------------   01108100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01108200
                      AIF   (K'&ZXANSLEN LE 0).ZG354R  NOT I/O          01108300
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG354R             01108400
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01108500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG354P               01108600
                      AIF   (K'&ZCGPR GT 2).ZG354Q                      01108700
                      AIF   ('&ZCGPR' EQ '0').ZG354Q                    01108800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01108900
                      AIF   (T'&ZCGPR NE 'N').ZG354Q  INVALID REG NAME  01109000
.ZG354P               ANOP  ,                                           01109100
                      AIF   (T'&ZCGPR NE 'N').ZG354R  NON NUMERIC       01109200
                      AIF   ('&ZCGPR' LT '2').ZG354Q                    01109300
                      AIF   ('&ZCGPR' LE '12').ZG354R                   01109400
.ZG354Q               ANOP  ,                                           01109500
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   01109600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01109700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01109800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01109900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01110000
.ZG354R               ANOP  ,                                           01110100
.*-------------------------------------------------------------------   01110200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01110300
.ZG357                ANOP  ,                                           01110400
&ZTLC                 SETC 'ASYNCECB'                                   01110500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG367               01110600
&XMODE                SETC  'ASYNCECB'  SET KEYWORD                     01110700
                      AIF   (N'&MODE LE 1).ZG357A  CK NUM               01110800
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01110900
&ZMS                  SETC  '&ZMS.&MODE"'                               01111000
&ZMS                  SETC  '&ZMS "MODE"'                               01111100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01111200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01111300
.ZG357A               ANOP  ,                                           01111400
.*------------------------------------------------------------------    01111500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01111600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01111700
.ZG357A0              AIF   (K'&REQDATA LE 0).ZG357A1  OK               01111800
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01111900
.ZG357A1              AIF   (K'&REQTOKEN LE 0).ZG357A2  OK              01112000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01112100
.ZG357A2              AIF   (K'&ZCVAL LE 0).ZG357A3  OK                 01112200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01112300
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01112400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01112500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01112600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01112700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01112800
.ZG357A3              ANOP  ,                                           01112900
.*----------------------------------------------------------------***   01113000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01113100
                      AIF   (N'&REQECB LE 1).ZG359A  CK NUM             01113200
&ZMS                  SETC  '"REQECB='  *KPOSA* MNOTE                   01113300
&ZMS                  SETC  '&ZMS.&REQECB"'                             01113400
&ZMS                  SETC  '&ZMS "REQECB"'                             01113500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01113600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01113700
.ZG359A               ANOP  ,                                           01113800
.*-------------------------------------------------------------------   01113900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01114000
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01114100
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01114200
                      AIF   (N'&REQECB GT 1).ZG359B  MULTI PARMS        01114300
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01114400
.ZG359B               AIF   (K'&REQECB(1) GT 0).ZG359C                  01114500
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01114600
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'  *KRQDA*     01114700
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01114800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01114900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01115000
.ZG359C               ANOP  ,                                           01115100
.*-------------------------------------------------------------------   01115200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01115300
                      AIF   (K'&ZXREQECB LE 0).ZG359R  NOT I/O          01115400
                      AIF   ('&XREQECB'(1,1) NE '(').ZG359R             01115500
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01115600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG359P               01115700
                      AIF   (K'&ZCGPR GT 2).ZG359Q                      01115800
                      AIF   ('&ZCGPR' EQ '0').ZG359Q                    01115900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01116000
                      AIF   (T'&ZCGPR NE 'N').ZG359Q  INVALID REG NAME  01116100
.ZG359P               ANOP  ,                                           01116200
                      AIF   (T'&ZCGPR NE 'N').ZG359R  NON NUMERIC       01116300
                      AIF   ('&ZCGPR' LT '2').ZG359Q                    01116400
                      AIF   ('&ZCGPR' LE '12').ZG359R                   01116500
.ZG359Q               ANOP  ,                                           01116600
&ZMS                  SETC  '"REQECB='  *KGPRA* MNOTE                   01116700
&ZMS                  SETC  '&ZMS.&REQECB"'                             01116800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01116900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01117000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01117100
.ZG359R               ANOP  ,                                           01117200
.*----------------------------------------------------------------***   01117300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01117400
                      AIF   (N'&ANSAREA LE 1).ZG362A  CK NUM            01117500
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           01117600
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01117700
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01117800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01117900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01118000
.ZG362A               ANOP  ,                                           01118100
.*-------------------------------------------------------------------   01118200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01118300
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01118400
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01118500
                      AIF   (N'&ANSAREA GT 1).ZG362B  MULTI PARMS       01118600
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01118700
.ZG362B               AIF   (K'&ANSAREA(1) GT 0).ZG362C                 01118800
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01118900
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'  *KRQDA*     01119000
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01119100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01119200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01119300
.ZG362C               ANOP  ,                                           01119400
.*-------------------------------------------------------------------   01119500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01119600
                      AIF   (K'&ZXANSAREA LE 0).ZG362R  NOT I/O         01119700
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG362R            01119800
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01119900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG362P               01120000
                      AIF   (K'&ZCGPR GT 2).ZG362Q                      01120100
                      AIF   ('&ZCGPR' EQ '0').ZG362Q                    01120200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01120300
                      AIF   (T'&ZCGPR NE 'N').ZG362Q  INVALID REG NAME  01120400
.ZG362P               ANOP  ,                                           01120500
                      AIF   (T'&ZCGPR NE 'N').ZG362R  NON NUMERIC       01120600
                      AIF   ('&ZCGPR' LT '2').ZG362Q                    01120700
                      AIF   ('&ZCGPR' LE '12').ZG362R                   01120800
.ZG362Q               ANOP  ,                                           01120900
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           01121000
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01121100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01121200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01121300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01121400
.ZG362R               ANOP  ,                                           01121500
.*----------------------------------------------------------------***   01121600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01121700
                      AIF   (N'&ANSLEN LE 1).ZG364A  CK NUM             01121800
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   01121900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01122000
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01122100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01122200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01122300
.ZG364A               ANOP  ,                                           01122400
.*-------------------------------------------------------------------   01122500
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01122600
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01122700
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01122800
                      AIF   (N'&ANSLEN GT 1).ZG364B  MULTI PARMS        01122900
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01123000
.ZG364B               AIF   (K'&ANSAREA(1) GT 0).ZG364C  KEY            01123100
                      AIF   (K'&ANSLEN(1) LE 0).ZG364D  PARM            01123200
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   01123300
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01123400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01123500
&ZMS                  SETC  '&ZMS '                                     01123600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01123700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01123800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01123900
                      AGO   .ZG364E                                     01124000
.*                                                                      01124100
.ZG364C               AIF   (K'&ANSLEN(1) GT 0).ZG364E  PARM            01124200
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01124300
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      01124400
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01124500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01124600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01124700
.ZG364D               ANOP  ,                                           01124800
&XANSLEN              SETC  '0'         SET DEFAULT                     01124900
.ZG364E               ANOP  ,                                           01125000
.*-------------------------------------------------------------------   01125100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01125200
                      AIF   (K'&ZXANSLEN LE 0).ZG364R  NOT I/O          01125300
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG364R             01125400
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01125500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG364P               01125600
                      AIF   (K'&ZCGPR GT 2).ZG364Q                      01125700
                      AIF   ('&ZCGPR' EQ '0').ZG364Q                    01125800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01125900
                      AIF   (T'&ZCGPR NE 'N').ZG364Q  INVALID REG NAME  01126000
.ZG364P               ANOP  ,                                           01126100
                      AIF   (T'&ZCGPR NE 'N').ZG364R  NON NUMERIC       01126200
                      AIF   ('&ZCGPR' LT '2').ZG364Q                    01126300
                      AIF   ('&ZCGPR' LE '12').ZG364R                   01126400
.ZG364Q               ANOP  ,                                           01126500
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   01126600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01126700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01126800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01126900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01127000
.ZG364R               ANOP  ,                                           01127100
.*-------------------------------------------------------------------   01127200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01127300
.ZG367                ANOP  ,                                           01127400
&ZTLC                 SETC 'ASYNCEXIT'                                  01127500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG377               01127600
&XMODE                SETC  'ASYNCEXIT'         SET KEYWORD             01127700
                      AIF   (N'&MODE LE 1).ZG367A  CK NUM               01127800
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01127900
&ZMS                  SETC  '&ZMS.&MODE"'                               01128000
&ZMS                  SETC  '&ZMS "MODE"'                               01128100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01128200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01128300
.ZG367A               ANOP  ,                                           01128400
.*------------------------------------------------------------------    01128500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01128600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01128700
.ZG367A0              AIF   (K'&REQECB LE 0).ZG367A1  OK                01128800
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01128900
.ZG367A1              AIF   (K'&REQTOKEN LE 0).ZG367A2  OK              01129000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01129100
.ZG367A2              AIF   (K'&ZCVAL LE 0).ZG367A3  OK                 01129200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01129300
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01129400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01129500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01129600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01129700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01129800
.ZG367A3              ANOP  ,                                           01129900
.*----------------------------------------------------------------***   01130000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01130100
                      AIF   (N'&REQDATA LE 1).ZG369A  CK NUM            01130200
&ZMS                  SETC  '"REQDATA='         *KPOSA* MNOTE           01130300
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01130400
&ZMS                  SETC  '&ZMS "REQDATA"'                            01130500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01130600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01130700
.ZG369A               ANOP  ,                                           01130800
.*-------------------------------------------------------------------   01130900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01131000
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01131100
&XREQDATA             SETC  'NO_REQDATA'                                01131200
                      AIF   (K'&REQDATA(1) LE 0).ZG369B  PARM           01131300
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01131400
                      AIF   (N'&REQDATA GT 1).ZG369B  MULTI PARMS       01131500
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01131600
.ZG369B               ANOP  ,                                           01131700
.*-------------------------------------------------------------------   01131800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01131900
                      AIF   (K'&ZXREQDATA LE 0).ZG369R  NOT I/O         01132000
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG369R                     01132100
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG369R            01132200
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01132300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG369P               01132400
                      AIF   (K'&ZCGPR GT 2).ZG369Q                      01132500
                      AIF   ('&ZCGPR' EQ '0').ZG369Q                    01132600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01132700
                      AIF   (T'&ZCGPR NE 'N').ZG369Q  INVALID REG NAME  01132800
.ZG369P               ANOP  ,                                           01132900
                      AIF   (T'&ZCGPR NE 'N').ZG369R  NON NUMERIC       01133000
                      AIF   ('&ZCGPR' LT '2').ZG369Q                    01133100
                      AIF   ('&ZCGPR' LE '12').ZG369R                   01133200
.ZG369Q               ANOP  ,                                           01133300
&ZMS                  SETC  '"REQDATA='         *KGPRA* MNOTE           01133400
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01133500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01133600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01133700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01133800
.ZG369R               ANOP  ,                                           01133900
.*----------------------------------------------------------------***   01134000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01134100
                      AIF   (N'&ANSAREA LE 1).ZG372A  CK NUM            01134200
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           01134300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01134400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01134500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01134600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01134700
.ZG372A               ANOP  ,                                           01134800
.*-------------------------------------------------------------------   01134900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01135000
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01135100
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01135200
                      AIF   (N'&ANSAREA GT 1).ZG372B  MULTI PARMS       01135300
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01135400
.ZG372B               AIF   (K'&ANSAREA(1) GT 0).ZG372C                 01135500
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01135600
&ZMS                  SETC  'WHEN "ASYNCEXIT" IS SPECIFIED'  *KRQDA*    01135700
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01135800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01135900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01136000
.ZG372C               ANOP  ,                                           01136100
.*-------------------------------------------------------------------   01136200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01136300
                      AIF   (K'&ZXANSAREA LE 0).ZG372R  NOT I/O         01136400
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG372R            01136500
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01136600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG372P               01136700
                      AIF   (K'&ZCGPR GT 2).ZG372Q                      01136800
                      AIF   ('&ZCGPR' EQ '0').ZG372Q                    01136900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01137000
                      AIF   (T'&ZCGPR NE 'N').ZG372Q  INVALID REG NAME  01137100
.ZG372P               ANOP  ,                                           01137200
                      AIF   (T'&ZCGPR NE 'N').ZG372R  NON NUMERIC       01137300
                      AIF   ('&ZCGPR' LT '2').ZG372Q                    01137400
                      AIF   ('&ZCGPR' LE '12').ZG372R                   01137500
.ZG372Q               ANOP  ,                                           01137600
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           01137700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01137800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01137900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01138000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01138100
.ZG372R               ANOP  ,                                           01138200
.*----------------------------------------------------------------***   01138300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01138400
                      AIF   (N'&ANSLEN LE 1).ZG374A  CK NUM             01138500
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   01138600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01138700
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01138800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01138900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01139000
.ZG374A               ANOP  ,                                           01139100
.*-------------------------------------------------------------------   01139200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01139300
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01139400
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01139500
                      AIF   (N'&ANSLEN GT 1).ZG374B  MULTI PARMS        01139600
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01139700
.ZG374B               AIF   (K'&ANSAREA(1) GT 0).ZG374C  KEY            01139800
                      AIF   (K'&ANSLEN(1) LE 0).ZG374D  PARM            01139900
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   01140000
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01140100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01140200
&ZMS                  SETC  '&ZMS '                                     01140300
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01140400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01140500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01140600
                      AGO   .ZG374E                                     01140700
.*                                                                      01140800
.ZG374C               AIF   (K'&ANSLEN(1) GT 0).ZG374E  PARM            01140900
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01141000
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      01141100
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01141200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01141300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01141400
.ZG374D               ANOP  ,                                           01141500
&XANSLEN              SETC  '0'         SET DEFAULT                     01141600
.ZG374E               ANOP  ,                                           01141700
.*-------------------------------------------------------------------   01141800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01141900
                      AIF   (K'&ZXANSLEN LE 0).ZG374R  NOT I/O          01142000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG374R             01142100
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01142200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG374P               01142300
                      AIF   (K'&ZCGPR GT 2).ZG374Q                      01142400
                      AIF   ('&ZCGPR' EQ '0').ZG374Q                    01142500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01142600
                      AIF   (T'&ZCGPR NE 'N').ZG374Q  INVALID REG NAME  01142700
.ZG374P               ANOP  ,                                           01142800
                      AIF   (T'&ZCGPR NE 'N').ZG374R  NON NUMERIC       01142900
                      AIF   ('&ZCGPR' LT '2').ZG374Q                    01143000
                      AIF   ('&ZCGPR' LE '12').ZG374R                   01143100
.ZG374Q               ANOP  ,                                           01143200
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   01143300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01143400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01143500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01143600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01143700
.ZG374R               ANOP  ,                                           01143800
.*-------------------------------------------------------------------   01143900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01144000
.ZG377                ANOP  ,                                           01144100
&ZTLC                 SETC 'ASYNCTOKEN'                                 01144200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG387               01144300
&XMODE                SETC  'ASYNCTOKEN'        SET KEYWORD             01144400
                      AIF   (N'&MODE LE 1).ZG377A  CK NUM               01144500
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01144600
&ZMS                  SETC  '&ZMS.&MODE"'                               01144700
&ZMS                  SETC  '&ZMS "MODE"'                               01144800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01144900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01145000
.ZG377A               ANOP  ,                                           01145100
.*------------------------------------------------------------------    01145200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01145300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01145400
.ZG377A0              AIF   (K'&REQECB LE 0).ZG377A1  OK                01145500
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01145600
.ZG377A1              AIF   (K'&REQDATA LE 0).ZG377A2  OK               01145700
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01145800
.ZG377A2              AIF   (K'&ZCVAL LE 0).ZG377A3  OK                 01145900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01146000
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01146100
&ZMS                  SETC  '&ZMS.=&MODE"'                              01146200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01146300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01146400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01146500
.ZG377A3              ANOP  ,                                           01146600
.*----------------------------------------------------------------***   01146700
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01146800
                      AIF   (N'&REQTOKEN LE 1).ZG379A  CK NUM           01146900
&ZMS                  SETC  '"REQTOKEN='        *KPOSA* MNOTE           01147000
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01147100
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01147200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01147300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01147400
.ZG379A               ANOP  ,                                           01147500
.*-------------------------------------------------------------------   01147600
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01147700
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01147800
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01147900
                      AIF   (N'&REQTOKEN GT 1).ZG379B  MULTI PARMS      01148000
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01148100
.ZG379B               AIF   (K'&REQTOKEN(1) GT 0).ZG379C                01148200
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01148300
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'  *KRQDA*   01148400
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01148500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01148600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01148700
.ZG379C               ANOP  ,                                           01148800
.*-------------------------------------------------------------------   01148900
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01149000
                      AIF   (K'&ZXREQTOKEN LE 0).ZG379R  NOT I/O        01149100
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG379R           01149200
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01149300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG379P               01149400
                      AIF   (K'&ZCGPR GT 2).ZG379Q                      01149500
                      AIF   ('&ZCGPR' EQ '0').ZG379Q                    01149600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01149700
                      AIF   (T'&ZCGPR NE 'N').ZG379Q  INVALID REG NAME  01149800
.ZG379P               ANOP  ,                                           01149900
                      AIF   (T'&ZCGPR NE 'N').ZG379R  NON NUMERIC       01150000
                      AIF   ('&ZCGPR' LT '2').ZG379Q                    01150100
                      AIF   ('&ZCGPR' LE '12').ZG379R                   01150200
.ZG379Q               ANOP  ,                                           01150300
&ZMS                  SETC  '"REQTOKEN='        *KGPRA* MNOTE           01150400
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01150500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01150600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01150700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01150800
.ZG379R               ANOP  ,                                           01150900
.*----------------------------------------------------------------***   01151000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01151100
                      AIF   (N'&ANSAREA LE 1).ZG382A  CK NUM            01151200
&ZMS                  SETC  '"ANSAREA='         *KPOSA* MNOTE           01151300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01151400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01151500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01151600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01151700
.ZG382A               ANOP  ,                                           01151800
.*-------------------------------------------------------------------   01151900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01152000
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01152100
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01152200
                      AIF   (N'&ANSAREA GT 1).ZG382B  MULTI PARMS       01152300
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01152400
.ZG382B               AIF   (K'&ANSAREA(1) GT 0).ZG382C                 01152500
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 01152600
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'  *KRQDA*   01152700
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              01152800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01152900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01153000
.ZG382C               ANOP  ,                                           01153100
.*-------------------------------------------------------------------   01153200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01153300
                      AIF   (K'&ZXANSAREA LE 0).ZG382R  NOT I/O         01153400
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG382R            01153500
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01153600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG382P               01153700
                      AIF   (K'&ZCGPR GT 2).ZG382Q                      01153800
                      AIF   ('&ZCGPR' EQ '0').ZG382Q                    01153900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01154000
                      AIF   (T'&ZCGPR NE 'N').ZG382Q  INVALID REG NAME  01154100
.ZG382P               ANOP  ,                                           01154200
                      AIF   (T'&ZCGPR NE 'N').ZG382R  NON NUMERIC       01154300
                      AIF   ('&ZCGPR' LT '2').ZG382Q                    01154400
                      AIF   ('&ZCGPR' LE '12').ZG382R                   01154500
.ZG382Q               ANOP  ,                                           01154600
&ZMS                  SETC  '"ANSAREA='         *KGPRA* MNOTE           01154700
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01154800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01154900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01155000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01155100
.ZG382R               ANOP  ,                                           01155200
.*----------------------------------------------------------------***   01155300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01155400
                      AIF   (N'&ANSLEN LE 1).ZG384A  CK NUM             01155500
&ZMS                  SETC  '"ANSLEN='  *KPOSA* MNOTE                   01155600
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01155700
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01155800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01155900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01156000
.ZG384A               ANOP  ,                                           01156100
.*-------------------------------------------------------------------   01156200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01156300
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01156400
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01156500
                      AIF   (N'&ANSLEN GT 1).ZG384B  MULTI PARMS        01156600
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01156700
.ZG384B               AIF   (K'&ANSAREA(1) GT 0).ZG384C  KEY            01156800
                      AIF   (K'&ANSLEN(1) LE 0).ZG384D  PARM            01156900
&ZMS                  SETC  '"ANSLEN'   *KDEPA* MNOTE                   01157000
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01157100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01157200
&ZMS                  SETC  '&ZMS '                                     01157300
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01157400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01157500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01157600
                      AGO   .ZG384E                                     01157700
.*                                                                      01157800
.ZG384C               AIF   (K'&ANSLEN(1) GT 0).ZG384E  PARM            01157900
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01158000
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'  *KRQDA*      01158100
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01158200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01158300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01158400
.ZG384D               ANOP  ,                                           01158500
&XANSLEN              SETC  '0'         SET DEFAULT                     01158600
.ZG384E               ANOP  ,                                           01158700
.*-------------------------------------------------------------------   01158800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01158900
                      AIF   (K'&ZXANSLEN LE 0).ZG384R  NOT I/O          01159000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG384R             01159100
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01159200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG384P               01159300
                      AIF   (K'&ZCGPR GT 2).ZG384Q                      01159400
                      AIF   ('&ZCGPR' EQ '0').ZG384Q                    01159500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01159600
                      AIF   (T'&ZCGPR NE 'N').ZG384Q  INVALID REG NAME  01159700
.ZG384P               ANOP  ,                                           01159800
                      AIF   (T'&ZCGPR NE 'N').ZG384R  NON NUMERIC       01159900
                      AIF   ('&ZCGPR' LT '2').ZG384Q                    01160000
                      AIF   ('&ZCGPR' LE '12').ZG384R                   01160100
.ZG384Q               ANOP  ,                                           01160200
&ZMS                  SETC  '"ANSLEN='  *KGPRA* MNOTE                   01160300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01160400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01160500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01160600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01160700
.ZG384R               ANOP  ,                                           01160800
.*-------------------------------------------------------------------   01160900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01161000
.ZG387                ANOP  ,                                           01161100
&ZTLC                 SETC 'ASYNCNORESPONSE'                            01161200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG388               01161300
&XMODE                SETC  'ASYNCNORESPONSE'   SET KEYWORD             01161400
                      AIF   (N'&MODE LE 1).ZG387A  CK NUM               01161500
&ZMS                  SETC  '"MODE='    *KPOSA* MNOTE                   01161600
&ZMS                  SETC  '&ZMS.&MODE"'                               01161700
&ZMS                  SETC  '&ZMS "MODE"'                               01161800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01161900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01162000
.ZG387A               ANOP  ,                                           01162100
.*------------------------------------------------------------------    01162200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01162300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01162400
.ZG387A0              AIF   (K'&ANSAREA LE 0).ZG387A1  OK               01162500
&ZCVAL                SETC '&ZCVAL ANSAREA'     INCORRECT KEY USED      01162600
.ZG387A1              AIF   (K'&ANSLEN LE 0).ZG387A2  OK                01162700
&ZCVAL                SETC '&ZCVAL ANSLEN'      INCORRECT KEY USED      01162800
.ZG387A2              AIF   (K'&REQECB LE 0).ZG387A3  OK                01162900
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01163000
.ZG387A3              AIF   (K'&REQDATA LE 0).ZG387A4  OK               01163100
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01163200
.ZG387A4              AIF   (K'&REQTOKEN LE 0).ZG387A5  OK              01163300
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01163400
.ZG387A5              AIF   (K'&ZCVAL LE 0).ZG387A6  OK                 01163500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01163600
&ZMS                  SETC  '"MODE'     *KMEIA* MNOTE                   01163700
&ZMS                  SETC  '&ZMS.=&MODE"'                              01163800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01163900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01164000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01164100
.ZG387A6              ANOP  ,                                           01164200
.*------------------------------------------------------------------    01164300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01164400
.ZG388                ANOP  ,                                           01164500
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   01164600
                      AIF   (K'&XMODE GT 0).ZG388E  VALID ARG           01164700
                      AIF   (T'&MODE EQ 'O').ZG388D  OMITTED            01164800
&ZASYSLNDX            SETA  0                                           01164900
.ZG388A               ANOP  ,           POSITIONAL MACRO KEY            01165000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01165100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG388C           01165200
&ZTLC                 SETC 'MODE'                                       01165300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG388A  01165400
.ZG388B               ANOP  ,                                           01165500
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01165600
&ZMS                  SETC  'THE "MODE" KEY'    *KOPTA* MNOTE           01165700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01165800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01165900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01166000
                      AGO   .ZG388E                                     01166100
.ZG388C               ANOP  ,                                           01166200
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01166300
&ZMS                  SETC  '"MODE='    *KUKWA* MNOTE                   01166400
&ZMS                  SETC  '&ZMS.&MODE"'                               01166500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01166600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01166700
&ZMS                  SETC  '&ZMS "SYNCSUSPEND",'                       01166800
&ZMS                  SETC  '&ZMS "SYNCECB",'                           01166900
&ZMS                  SETC  '&ZMS "SYNCEXIT",'                          01167000
&ZMS                  SETC  '&ZMS "SYNCTOKEN",'                         01167100
&ZMS                  SETC  '&ZMS "ASYNCECB",'                          01167200
&ZMS                  SETC  '&ZMS "ASYNCEXIT",'                         01167300
&ZMS                  SETC  '&ZMS "ASYNCTOKEN",'                        01167400
&ZMS                  SETC  '&ZMS OR "ASYNCNORESPONSE".'                01167500
                      MNOTE 8,' &ZMS '                                  01167600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01167700
                      AGO   .ZG388E                                     01167800
.ZG388D               ANOP  ,                                           01167900
&XMODE                SETC  'SYNCSUSPEND'       SET DEFAULT KEYWORD     01168000
.ZG388E               ANOP  ,                                           01168100
.*----------------------------------------------------------------***   01168200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01168300
                      AIF   (N'&RETCODE LE 1).ZG390A  CK NUM            01168400
&ZMS                  SETC  '"RETCODE='         *KPOSA* MNOTE           01168500
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01168600
&ZMS                  SETC  '&ZMS "RETCODE"'                            01168700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01168800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01168900
.ZG390A               ANOP  ,                                           01169000
.*-------------------------------------------------------------------   01169100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01169200
                      AIF   (K'&RETCODE(1) LE 0).ZG390C  NO PARM        01169300
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      01169400
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           01169500
                      AIF   (N'&RETCODE GT 1).ZG390C                    01169600
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   01169700
.ZG390C               ANOP  ,                                           01169800
.*-------------------------------------------------------------------   01169900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01170000
                      AIF   (K'&ZXRETCODE LE 0).ZG390R  NOT I/O         01170100
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG390R            01170200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01170300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG390P               01170400
                      AIF   (K'&ZCGPR GT 2).ZG390Q                      01170500
                      AIF   ('&ZCGPR' EQ '0').ZG390Q                    01170600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01170700
                      AIF   (T'&ZCGPR NE 'N').ZG390Q  INVALID REG NAME  01170800
.ZG390P               ANOP  ,                                           01170900
                      AIF   (T'&ZCGPR NE 'N').ZG390R  NON NUMERIC       01171000
                      AIF   ('&ZCGPR' LT '2').ZG390Q                    01171100
                      AIF   ('&ZCGPR' LE '12').ZG390R                   01171200
.ZG390Q               ANOP  ,                                           01171300
&ZMS                  SETC  '"RETCODE='         *KGPRA* MNOTE           01171400
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01171500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01171600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01171700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01171800
.ZG390R               ANOP  ,                                           01171900
.*----------------------------------------------------------------***   01172000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01172100
                      AIF   (N'&RSNCODE LE 1).ZG393A  CK NUM            01172200
&ZMS                  SETC  '"RSNCODE='         *KPOSA* MNOTE           01172300
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01172400
&ZMS                  SETC  '&ZMS "RSNCODE"'                            01172500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01172600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01172700
.ZG393A               ANOP  ,                                           01172800
.*-------------------------------------------------------------------   01172900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01173000
                      AIF   (K'&RSNCODE(1) LE 0).ZG393C  NO PARM        01173100
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      01173200
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           01173300
                      AIF   (N'&RSNCODE GT 1).ZG393C                    01173400
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   01173500
.ZG393C               ANOP  ,                                           01173600
.*-------------------------------------------------------------------   01173700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01173800
                      AIF   (K'&ZXRSNCODE LE 0).ZG393R  NOT I/O         01173900
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG393R            01174000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01174100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG393P               01174200
                      AIF   (K'&ZCGPR GT 2).ZG393Q                      01174300
                      AIF   ('&ZCGPR' EQ '0').ZG393Q                    01174400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01174500
                      AIF   (T'&ZCGPR NE 'N').ZG393Q  INVALID REG NAME  01174600
.ZG393P               ANOP  ,                                           01174700
                      AIF   (T'&ZCGPR NE 'N').ZG393R  NON NUMERIC       01174800
                      AIF   ('&ZCGPR' LT '2').ZG393Q                    01174900
                      AIF   ('&ZCGPR' LE '12').ZG393R                   01175000
.ZG393Q               ANOP  ,                                           01175100
&ZMS                  SETC  '"RSNCODE='         *KGPRA* MNOTE           01175200
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01175300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01175400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01175500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01175600
.ZG393R               ANOP  ,                                           01175700
.******************************************************************     01175800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01175900
.******************************************************************     01176000
                      ACTR  10000                                       01176100
.*----------------------------------------------------------------***   01176200
.***AH.P02 EXTRA POSITIONALS                                            01176300
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        01176400
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        01176500
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    01176600
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     01176700
.ZGLISTX1             ANOP  ,                                           01176800
&ZCVAL                SETC  ''          ERROR FIELD                     01176900
&ZAWRK                SETA  0           POSITIONAL NUMBER               01177000
.ZGLIST2              ANOP  ,                                           01177100
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 01177200
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        01177300
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             01177400
                      AGO   .ZGLIST2                                    01177500
.*                                                                      01177600
.ZGLIST3              ANOP  ,                                           01177700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          01177800
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE    01177900
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             01178000
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      01178100
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              01178200
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      01178300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01178400
.ZGLISTX              ANOP  ,                                           01178500
&ZASYSLNDX            SETA  0                                           01178600
.*-------------------------------------------------------------------   01178700
.***AG.MF04 MF=(SLE)                                                    01178800
.ZGMFX                ANOP  ,           END OF FULL SYNTAX CHECK        01178900
.*******************************************************************    01179000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01179100
.*******************************************************************    01179200
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        01179300
.*******************************************************************    01179400
.***AE.01  START OF IXLLSTC MACRO CODE                                  01179500
.*******************************************************************    01179600
                      LCLC  &M0M0001                 NAME               01179700
&M0M0001              SETC  '&XLABEL'                SET NAME           01179800
                      AIF   (K'&XLABEL NE 0).XLAB2                      01179900
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       01180000
.*                                                                      01180100
.XLAB2                ANOP  ,                                           01180200
                      AIF   ('&XMF' EQ 'L').XLAB3                       01180300
&M0M0001 DS    0H                             IXLLSTC-4                 01180400
.XLAB3                ANOP  ,                                           01180500
.*******************************************************************    01180600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01180700
.*******************************************************************    01180800
              PUSH  PRINT                                               01180900
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  01181000
                      PRINT OFF         ++ PR01                         01181100
                      AGO   .ZPRNTXX                                    01181200
.ZPRINTX              PRINT ON                                          01181300
.ZPRNTXX              ANOP  ,                                           01181400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01181500
.**------------------------------------------------------------------** 01181600
.**  Start of user macasm code                                       ** 01181700
.**------------------------------------------------------------------** 01181800
.**------------------------------------------------------------------** 01181900
.**  Remove defaults for DriveExit                                   ** 01182000
.**------------------------------------------------------------------** 01182100
.*                                                                      01182200
.*      For Assembler,                                                  01182300
.*      AMG will have set DRIVEEXIT=YES by default for those requests   01182400
.*      where it can be specified (MONITOR_EVENTQ, MONITOR_LIST, and    01182500
.*      MONITOR_KEYRANGE) when ACTION=STOP was not specified.           01182600
.*      DRIVEEXIT is not syntactically allowed                          01182700
.*      for REQUEST=MONITOR_SUBLIST, but we want to set                 01182800
.*      maca.DriveExit.Yes for this case when ACTION=STOP is            01182900
.*      not specified.                                                  01183000
.*      The following code accomplishes this.                           01183100
.*                                                                      01183200
         AIF   ('&XREQUEST' NE 'MONITOR_SUBLIST' OR                    *01183300
                '&XACTION' EQ 'STOP').SKIPDREXITSETDEF                  01183400
&XDRIVEEXIT     SETC 'YES'                                              01183500
&ZXDRIVEEXIT    SETC 'INPUT'                                            01183600
.SKIPDREXITSETDEF ANOP ,                                                01183700
.*                                                                      01183800
.**  Start of code to validity check parameters                      ** 01183900
.**                                                                  ** 01184000
.**  This code is needed in addition to the checks which AMG         ** 01184100
.**  produces.                                                       ** 01184200
.**                                                                  ** 01184300
.**  Validity checking for mutually exclusive keys, required keys,   ** 01184400
.**  and dependent keys is performed for the standard and execute    ** 01184500
.**  forms.                                                          ** 01184600
.*                                                                      01184700
.**                                                                  ** 01184800
.**------------------------------------------------------------------** 01184900
.* Skip all validity checking for MF=L                                  01185000
         AIF   ('&MF(1)' EQ 'L').ENDPARMVALIDATION                      01185100
.**------------------------------------------------------------------** 01185200
.**  Validity checking for Mode                                      ** 01185300
.**                                                                  ** 01185400
.**    Mode(AsyncNoResponse) is mutually exclusive with              ** 01185500
.**    Request(Read_LControls), Request(Deq_EventQ),                 ** 01185600
.**    Request(Lock), Request(Monitor_List) Action(Start),           ** 01185700
.**    Request(Monitor_KeyRange) Action(Start)                  @L2A ** 01185800
.**                                                                  ** 01185900
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ASYNCNORESPONSENOTSPEC   01186000
.*                                                                      01186100
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01186200
                '&XREQUEST' NE 'DEQ_EVENTQ' AND                        *01186300
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01186400
                '&XREQUEST' NE 'LOCK').MODEERROR001                     01186500
         MNOTE 8,'IXLLSTC ---> MODE=&XMODE is mutually exclusive with R*01186600
               EQUEST=&XREQUEST'                                        01186700
&ZMACRET SETA  8                                                        01186800
.MODEERROR001 ANOP ,                                                    01186900
.*                                                                      01187000
         AIF   ('&XREQUEST' NE 'MONITOR_LIST' OR                       *01187100
                '&XACTION'  NE 'START').MODEERROR002                    01187200
         MNOTE 8,'IXLLSTC ---> MODE=&XMODE is mutually exclusive with R*01187300
               EQUEST=MONITOR_LIST when ACTION=START is specified'      01187400
&ZMACRET SETA  8                                                        01187500
.MODEERROR002 ANOP ,                                                    01187600
.*                                                                      01187700
         AIF   ('&XREQUEST' NE 'MONITOR_KEYRANGE' OR                   *01187800
                '&XACTION'  NE 'START').MODEERROR003                    01187900
         MNOTE 8,'IXLLSTC ---> MODE=&XMODE is mutually exclusive with R*01188000
               EQUEST=MONITOR_KEYRANGE when ACTION=START is specified'  01188100
&ZMACRET SETA  8                                                        01188200
.MODEERROR003 ANOP ,                                                    01188300
.ASYNCNORESPONSENOTSPEC ANOP ,                                          01188400
.**                                                                  ** 01188500
.**  End of validity checking for Mode                               ** 01188600
.**------------------------------------------------------------------** 01188700
.ENDPARMVALIDATION ANOP ,                                               01188800
.*                                                                      01188900
.**------------------------------------------------------------------** 01189000
.**  End of code to validity check parameters                        ** 01189100
.**------------------------------------------------------------------** 01189200
.*                                                                      01189300
.**------------------------------------------------------------------** 01189400
.**  Determine the parameter list version                        @P1A** 01189500
.**                                                                  ** 01189600
.**  Note that AMG has already set &XPLISTVER to the highest value   ** 01189700
.**  of either the user specified value, or the value specified by   ** 01189800
.**  macplver on any keys that were specified. The following code    ** 01189900
.**  will set &XPLISTVER to a higher value if needed depending on    ** 01190000
.**  an analysis of special case keys that AMG does not handle.      ** 01190100
.**                                                                  ** 01190200
.**  Note that each of the new macros, IXLLSTC, IXLLSTE, and IXLLSTM,** 01190300
.**  provide a subset of the function originally provided for in     ** 01190400
.**  IXLLIST. As such, the parmlist version is set to the same       ** 01190500
.**  parmlist version that would have resulted had the request       ** 01190600
.**  been coded with IXLLIST. This is done to ensure that the        ** 01190700
.**  new macros can directly replace any of the IXLLIST invocations  ** 01190800
.**  compatibly. Since each macro provides a subset of IXLLIST       ** 01190900
.**  function, the possible parmlist version numbers in each macro   ** 01191000
.**  are not necessarily contiguous. Furthermore, the new macros     ** 01191100
.**  will have parmlist version numbers higher than those of         ** 01191200
.**  IXLLIST since the new macros add new function. In all cases,    ** 01191300
.**  the purpose of the parmlist version number is to ensure that    ** 01191400
.**  any new function is rejected on a downlevel system that does    ** 01191500
.**  not yet recognize the new function.                             ** 01191600
.**                                                                  ** 01191700
.**------------------------------------------------------------------** 01191800
.*                                                                      01191900
         LCLA  &LSTCPLVERS                                         @L2C 01192000
.*                                                                      01192100
.* Initialize LstcPlvers to whatever AMG thinks PLISTVER should be @L2A 01192200
.*                                                                      01192300
&LSTCPLVERS SETA  &XPLISTVER                                       @L2C 01192400
.*                                                                      01192500
.* If LstcPlVers already >= 2, no need to look at version 2 requests    01192600
         AIF  (&LSTCPLVERS GE 2).NOTPLVER2                         @L2A 01192700
.*                                                                      01192800
.* Determine whether REQUEST() requires PLISTVER of 2              @L2A 01192900
.*                                                                      01193000
         AIF  ('&XREQUEST'   EQ  'READ_EMCONTROLS'    OR               *01193100
               '&XREQUEST'   EQ  'READ_EQCONTROLS'    OR               *01193200
               '&XREQUEST'   EQ  'MONITOR_SUBLIST'    OR               *01193300
               '&XREQUEST'   EQ  'MONITOR_SUBLISTS'   OR               *01193400
               '&XREQUEST'   EQ  'MONITOR_EVENTQ'     OR               *01193500
               '&XREQUEST'   EQ  'DEQ_EVENTQ').SETPLVER2           @L2C 01193600
         AGO  .NOTPLVER2                                           @L2A 01193700
.SETPLVER2 ANOP ,                                                       01193800
&LSTCPLVERS SETA  2                                                @L2C 01193900
.NOTPLVER2 ANOP ,                                                  @P1A 01194000
.*                                                                      01194100
.* If LstcPlVers already >= 4, no need to look at version 4 requests    01194200
         AIF  (&LSTCPLVERS GE 4).NOTPLVER4                         @L2A 01194300
.*                                                                      01194400
.* Determine whether REQUEST() requires PLISTVER of 4              @L2A 01194500
.*                                                                      01194600
         AIF  ('&XREQUEST' EQ 'MONITOR_KEYRANGE').SETPLVER4        @L2A 01194700
         AIF  ('&XNOTIFICATION' EQ 'EVERY').SETPLVER4              @L2A 01194800
         AIF  ('&XKEYTYPE' EQ 'SECONDARY').SETPLVER4               @L2A 01194900
         AGO  .NOTPLVER4                                                01195000
.SETPLVER4 ANOP ,                                                       01195100
&LSTCPLVERS SETA  4                                                @L2C 01195200
.NOTPLVER4 ANOP ,                                                  @P1A 01195300
.*                                                                      01195400
.* if the user specified a plist version less than the version     @P1A 01195500
.* that was determined based on the specified keywords then        @P1A 01195600
.* issue an MNOTE                                                  @P1A 01195700
.*                                                                      01195800
         AIF   (K'&PLISTVER(1) LE 0                      OR            *01195900
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *01196000
                '&PLISTVER(1)' EQ 'MAX'                  OR            *01196100
                &XPLISTVER     GE &LSTCPLVERS).SETPLVERSUPDATE     @L2C 01196200
         MNOTE 8,'IXLLSTC ---> PLISTVER=&PLISTVER(1), BUT PLISTVER OF  *01196300
               &LSTCPLVERS IS REQUIRED'                            @L2C 01196400
.*                                                                      01196500
&ZMACRET SETA  8                                                   @P1A 01196600
         AGO   .SETPLVERSEND                                       @P1A 01196700
.*                                                                      01196800
.SETPLVERSUPDATE ANOP ,                                            @P1A 01196900
&XPLISTVER  SETA  &LSTCPLVERS                                      @L2C 01197000
.SETPLVERSEND ANOP ,                                               @P1A 01197100
.*                                                                      01197200
.**------------------------------------------------------------------** 01197300
.**  End determine the parameter list version                    @P1A** 01197400
.**------------------------------------------------------------------** 01197500
.*                                                                      01197600
.**------------------------------------------------------------------** 01197700
.**  End of user macasm code                                         ** 01197800
.**------------------------------------------------------------------** 01197900
.* @P3M                                                                 01198000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01198100
.********************************************************************   01198200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     01198300
.********************************************************************   01198400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01198500
                      LCLA  &ZOPN1         INVOCATION INDEX             01198600
                      LCLC  &ZOPL(4095)    LABEL                        01198700
                      LCLC  &ZOPO(4095)    OPERATION                    01198800
                      LCLC  &ZOPV(4095)    VALUE                        01198900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01199000
.*                                                                      01199100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01199200
.******************************************************************     01199300
.***AL.L10 IXLLSTC FMT=LIST MF=S|L PARAMETERS                           01199400
.******************************************************************     01199500
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     01199600
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     01199700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     01199800
&XMFATTR              SETC  '0D'                                        01199900
.*                                                                      01200000
&ZOPN                 SETA  &ZOPN+1                                     01200100
&ZOPL(&ZOPN)          SETC  ' '                                         01200200
                      AIF   (&SYSALVL NE 0).ZALVL6A                     01200300
&ZOPO(&ZOPN)          SETC  'B'                                         01200400
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01200500
                      AGO   .ZALVL6B                                    01200600
.ZALVL6A              ANOP                                              01200700
&ZOPO(&ZOPN)          SETC  'BRAS'                                      01200800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              01200900
.ZALVL6B              ANOP                                              01201000
&ZOPD(&ZOPN)          SETC  '++ IXLLSTC ARG PARMS'                      01201100
.*                                                                      01201200
&ZOPN                 SETA  &ZOPN+1                                     01201300
&ZOPL(&ZOPN)          SETC  ' '                                         01201400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     01201500
&ZOPV(&ZOPN)          SETC  '1'                                         01201600
&ZOPD(&ZOPN)          SETC  ' '                                         01201700
.*                                                                      01201800
.ZLMFSL2              ANOP  ,                                           01201900
.*-------------------------------------------------------------------   01202000
.***AM.L00  IXLLSTC FMT=LIST name                                       01202100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    01202200
&ZOPN                 SETA &ZOPN+1                                      01202300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   01202400
&ZOPO(&ZOPN)          SETC 'EQU'                                        01202500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   01202600
&ZOPD(&ZOPN)          SETC '++ IXLLSTC NAME'                            01202700
.ZLMFSL2M             ANOP  ,                                           01202800
.*-------------------------------------------------------------------   01202900
.***AM.L01  IXLLSTC FMT=LIST PARAMETERS                                 01203000
&ZOPN                 SETA &ZOPN+1                                      01203100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   01203200
&ZOPO(&ZOPN)          SETC 'DS'                                         01203300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   01203400
&ZOPD(&ZOPN)          SETC '++ IXLLSTC PARM LIST'                       01203500
.*-------------------------------------------------------------------   01203600
.***AM.L09  XSHL_DATA CL96                                              01203700
&ZOPN                 SETA &ZOPN+1                                      01203800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHL_DATA'                        01203900
&ZOPO(&ZOPN)          SETC 'DS'                                         01204000
&ZOPV(&ZOPN)          SETC 'CL96'                                       01204100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHL_DATA'                  01204200
.*-------------------------------------------------------------------   01204300
.***AM.L09  XMOB_DATA CL4                                               01204400
&ZOPN                 SETA &ZOPN+1                                      01204500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOB_DATA'                        01204600
&ZOPO(&ZOPN)          SETC 'DS'                                         01204700
&ZOPV(&ZOPN)          SETC 'CL4'                                        01204800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMOB_DATA'                  01204900
.*-------------------------------------------------------------------   01205000
.***AM.L09  XMCB_DATA1 CL112                                            01205100
&ZOPN                 SETA &ZOPN+1                                      01205200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA1'                       01205300
&ZOPO(&ZOPN)          SETC 'DS'                                         01205400
&ZOPV(&ZOPN)          SETC 'CL112'                                      01205500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA1'                 01205600
.*-------------------------------------------------------------------   01205700
.***AM.L09  XMCB_DATA2 CL20                                             01205800
&ZOPN                 SETA &ZOPN+1                                      01205900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA2'                       01206000
&ZOPO(&ZOPN)          SETC 'DS'                                         01206100
&ZOPV(&ZOPN)          SETC 'CL20'                                       01206200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA2'                 01206300
.*-------------------------------------------------------------------   01206400
.***AM.MLM2 SAVED LOCATION COUNTER                                      01206500
                      AIF  (&XPLISTVER GE 1).ZL5LA                      01206600
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  01206700
&ZENDBASEPL           SETC 'YES'                                        01206800
&ZOPN                 SETA &ZOPN+1                                      01206900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01207000
&ZOPO(&ZOPN)          SETC 'EQU'                                        01207100
&ZOPV(&ZOPN)          SETC '*'                                          01207200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01207300
.ZL5LA                ANOP  ,                                           01207400
.*-------------------------------------------------------------------   01207500
.***AM.LVER1                                                            01207600
                      AIF  (&XPLISTVER LT 1).ZL5L                       01207700
.*-------------------------------------------------------------------   01207800
.*-------------------------------------------------------------------   01207900
.***AM.L09  XMCB_DATA3 CL44                                             01208000
&ZOPN                 SETA &ZOPN+1                                      01208100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA3'                       01208200
&ZOPO(&ZOPN)          SETC 'DS'                                         01208300
&ZOPV(&ZOPN)          SETC 'CL44'                                       01208400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA3'                 01208500
.*-------------------------------------------------------------------   01208600
.***AM.LVER2                                                            01208700
.ZL5L                 ANOP  ,                                           01208800
.*-------------------------------------------------------------------   01208900
.*-------------------------------------------------------------------   01209000
.***AM.MLM2 SAVED LOCATION COUNTER                                      01209100
                      AIF  (&XPLISTVER GE 4).ZL6LA                      01209200
                      AIF  ('&ZENDBASEPL' NE '').ZL6LA                  01209300
&ZENDBASEPL           SETC 'YES'                                        01209400
&ZOPN                 SETA &ZOPN+1                                      01209500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01209600
&ZOPO(&ZOPN)          SETC 'EQU'                                        01209700
&ZOPV(&ZOPN)          SETC '*'                                          01209800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01209900
.ZL6LA                ANOP  ,                                           01210000
.*-------------------------------------------------------------------   01210100
.***AM.LVER1                                                            01210200
                      AIF  (&XPLISTVER LT 4).ZL6L                       01210300
.*-------------------------------------------------------------------   01210400
.*-------------------------------------------------------------------   01210500
.***AM.L09  XMCB_DATA4 CL64                                             01210600
&ZOPN                 SETA &ZOPN+1                                      01210700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA4'                       01210800
&ZOPO(&ZOPN)          SETC 'DS'                                         01210900
&ZOPV(&ZOPN)          SETC 'CL64'                                       01211000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA4'                 01211100
.*-------------------------------------------------------------------   01211200
.***AM.LVER2                                                            01211300
.ZL6L                 ANOP  ,                                           01211400
.*-------------------------------------------------------------------   01211500
.*-------------------------------------------------------------------   01211600
.***AM.LVER1                                                            01211700
                      AIF  (&XPLISTVER LT 1).ZL7L                       01211800
.*-------------------------------------------------------------------   01211900
.*-------------------------------------------------------------------   01212000
.***AM.MLM1 SAVED LOCATION COUNTER                                      01212100
                      AIF  ('&ZENDBASEPL' NE '').ZL7LB                  01212200
&ZENDBASEPL           SETC 'YES'                                        01212300
&ZOPN                 SETA &ZOPN+1                                      01212400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01212500
&ZOPO(&ZOPN)          SETC 'EQU'                                        01212600
&ZOPV(&ZOPN)          SETC '*'                                          01212700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01212800
.ZL7LB                ANOP  ,                                           01212900
.*-------------------------------------------------------------------   01213000
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01213100
&ZOPN                 SETA &ZOPN+1                                      01213200
&ZOPL(&ZOPN)          SETC ' '                                          01213300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01213400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01213500
&ZOPD(&ZOPN)          SETC ' '                                          01213600
.*-------------------------------------------------------------------   01213700
.***AM.LVER2                                                            01213800
.ZL7L                 ANOP  ,                                           01213900
.*-------------------------------------------------------------------   01214000
.*-------------------------------------------------------------------   01214100
.***AM.LVER1                                                            01214200
                      AIF  (&XPLISTVER LT 1).ZL8L                       01214300
.*-------------------------------------------------------------------   01214400
.*-------------------------------------------------------------------   01214500
.***AM.L09  XMCB_DATA CL176                                             01214600
&ZOPN                 SETA &ZOPN+1                                      01214700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA'                        01214800
&ZOPO(&ZOPN)          SETC 'DS'                                         01214900
&ZOPV(&ZOPN)          SETC 'CL176'                                      01215000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATA'                  01215100
.*-------------------------------------------------------------------   01215200
.***AM.LVER2                                                            01215300
.ZL8L                 ANOP  ,                                           01215400
.*-------------------------------------------------------------------   01215500
.*-------------------------------------------------------------------   01215600
.***AM.LVER1                                                            01215700
                      AIF  (&XPLISTVER LT 4).ZL9L                       01215800
.*-------------------------------------------------------------------   01215900
.*-------------------------------------------------------------------   01216000
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01216100
&ZOPN                 SETA &ZOPN+1                                      01216200
&ZOPL(&ZOPN)          SETC ' '                                          01216300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01216400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01216500
&ZOPD(&ZOPN)          SETC ' '                                          01216600
.*-------------------------------------------------------------------   01216700
.***AM.LVER2                                                            01216800
.ZL9L                 ANOP  ,                                           01216900
.*-------------------------------------------------------------------   01217000
.*-------------------------------------------------------------------   01217100
.***AM.LVER1                                                            01217200
                      AIF  (&XPLISTVER LT 4).ZL10L                      01217300
.*-------------------------------------------------------------------   01217400
.*-------------------------------------------------------------------   01217500
.***AM.L09  XMCB_DATAL CL240                                            01217600
&ZOPN                 SETA &ZOPN+1                                      01217700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATAL'                       01217800
&ZOPO(&ZOPN)          SETC 'DS'                                         01217900
&ZOPV(&ZOPN)          SETC 'CL240'                                      01218000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMCB_DATAL'                 01218100
.*-------------------------------------------------------------------   01218200
.***AM.LVER2                                                            01218300
.ZL10L                ANOP  ,                                           01218400
.*-------------------------------------------------------------------   01218500
.*-------------------------------------------------------------------   01218600
.***AM.PJR1 DEFINED ON XSHL_DATA                                        01218700
&ZOPN                 SETA &ZOPN+1                                      01218800
&ZOPL(&ZOPN)          SETC ' '                                          01218900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01219000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+0'                                01219100
&ZOPD(&ZOPN)          SETC ' '                                          01219200
.*-------------------------------------------------------------------   01219300
.***AM.L02 XVERSION XL1                                                 01219400
&ZOPN                 SETA &ZOPN+1                                      01219500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         01219600
&ZOPO(&ZOPN)          SETC 'DS'                                         01219700
&ZOPV(&ZOPN)          SETC 'XL1'                                        01219800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          01219900
.*-------------------------------------------------------------------   01220000
.***AM.L09  XCMDCODE XL1                                                01220100
&ZOPN                 SETA &ZOPN+1                                      01220200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDCODE'                         01220300
&ZOPO(&ZOPN)          SETC 'DS'                                         01220400
&ZOPV(&ZOPN)          SETC 'XL1'                                        01220500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDCODE'                   01220600
.*-------------------------------------------------------------------   01220700
.***AM.L09  XSHLFLGS CL4                                                01220800
&ZOPN                 SETA &ZOPN+1                                      01220900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS'                         01221000
&ZOPO(&ZOPN)          SETC 'DS'                                         01221100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01221200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHLFLGS'                   01221300
.*-------------------------------------------------------------------   01221400
.***AM.L09  XRSV0101 CL2                                                01221500
&ZOPN                 SETA &ZOPN+1                                      01221600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0101'                         01221700
&ZOPO(&ZOPN)          SETC 'DS'                                         01221800
&ZOPV(&ZOPN)          SETC 'CL2'                                        01221900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0101'                      01222000
.*-------------------------------------------------------------------   01222100
.***AM.L09  XCOMPCONID XL1                                              01222200
&ZOPN                 SETA &ZOPN+1                                      01222300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPCONID'                       01222400
&ZOPO(&ZOPN)          SETC 'DS'                                         01222500
&ZOPV(&ZOPN)          SETC 'XL1'                                        01222600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCOMPCONID'                 01222700
.*-------------------------------------------------------------------   01222800
.***AM.L09  XBUFSTGKEY BL.8                                             01222900
&ZOPN                 SETA &ZOPN+1                                      01223000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSTGKEY'                       01223100
&ZOPO(&ZOPN)          SETC 'DS'                                         01223200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01223300
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSTGKEY  XBUFSTGKEY'                01223400
.*-------------------------------------------------------------------   01223500
.***AM.L09  XANSLEN XL2                                                 01223600
&ZOPN                 SETA &ZOPN+1                                      01223700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          01223800
&ZOPO(&ZOPN)          SETC 'DS'                                         01223900
&ZOPV(&ZOPN)          SETC 'XL2'                                        01224000
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      01224100
.*-------------------------------------------------------------------   01224200
.***AM.L09  XCONTOKEN CL16                                              01224300
&ZOPN                 SETA &ZOPN+1                                      01224400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        01224500
&ZOPO(&ZOPN)          SETC 'DS'                                         01224600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01224700
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN  XCONTOKEN'                  01224800
.*-------------------------------------------------------------------   01224900
.***AM.L09  XDATADDR CL12                                               01225000
&ZOPN                 SETA &ZOPN+1                                      01225100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADDR'                         01225200
&ZOPO(&ZOPN)          SETC 'DS'                                         01225300
&ZOPV(&ZOPN)          SETC 'CL12'                                       01225400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDATADDR'                   01225500
.*-------------------------------------------------------------------   01225600
.***AM.L09  XADJADDR CL8                                                01225700
&ZOPN                 SETA &ZOPN+1                                      01225800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJADDR'                         01225900
&ZOPO(&ZOPN)          SETC 'DS'                                         01226000
&ZOPV(&ZOPN)          SETC 'CL8'                                        01226100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XADJADDR'                   01226200
.*-------------------------------------------------------------------   01226300
.***AM.L09  XANSADDR CL8                                                01226400
&ZOPN                 SETA &ZOPN+1                                      01226500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSADDR'                         01226600
&ZOPO(&ZOPN)          SETC 'DS'                                         01226700
&ZOPV(&ZOPN)          SETC 'CL8'                                        01226800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XANSADDR'                   01226900
.*-------------------------------------------------------------------   01227000
.***AM.L09  XREQDATA CL8                                                01227100
&ZOPN                 SETA &ZOPN+1                                      01227200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQDATA'                         01227300
&ZOPO(&ZOPN)          SETC 'DS'                                         01227400
&ZOPV(&ZOPN)          SETC 'CL8'                                        01227500
&ZOPD(&ZOPN)          SETC '++ &ZXREQDATA  XREQDATA'                    01227600
.*-------------------------------------------------------------------   01227700
.***AM.L09  XREQID CL8                                                  01227800
&ZOPN                 SETA &ZOPN+1                                      01227900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQID'                           01228000
&ZOPO(&ZOPN)          SETC 'DS'                                         01228100
&ZOPV(&ZOPN)          SETC 'CL8'                                        01228200
&ZOPD(&ZOPN)          SETC '++ &ZXREQID  XREQID'                        01228300
.*-------------------------------------------------------------------   01228400
.***AM.L09  XLOCKDATA CL8                                               01228500
&ZOPN                 SETA &ZOPN+1                                      01228600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKDATA'                        01228700
&ZOPO(&ZOPN)          SETC 'DS'                                         01228800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01228900
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKDATA  XLOCKDATA'                  01229000
.*-------------------------------------------------------------------   01229100
.***AM.L09  XRSV0102 CL8                                                01229200
&ZOPN                 SETA &ZOPN+1                                      01229300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0102'                         01229400
&ZOPO(&ZOPN)          SETC 'DS'                                         01229500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01229600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0102'                      01229700
.*-------------------------------------------------------------------   01229800
.***AM.L09  XSHLFLGSA CL4                                               01229900
&ZOPN                 SETA &ZOPN+1                                      01230000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA'                        01230100
&ZOPO(&ZOPN)          SETC 'DS'                                         01230200
&ZOPV(&ZOPN)          SETC 'CL4'                                        01230300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSHLFLGSA'                  01230400
.*-------------------------------------------------------------------   01230500
.***AM.L09  XRSV0103 CL4                                                01230600
&ZOPN                 SETA &ZOPN+1                                      01230700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0103'                         01230800
&ZOPO(&ZOPN)          SETC 'DS'                                         01230900
&ZOPV(&ZOPN)          SETC 'CL4'                                        01231000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0103'                      01231100
.*-------------------------------------------------------------------   01231200
.***AM.PJR1 DEFINED ON XSHLFLGS                                         01231300
&ZOPN                 SETA &ZOPN+1                                      01231400
&ZOPL(&ZOPN)          SETC ' '                                          01231500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01231600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                01231700
&ZOPD(&ZOPN)          SETC ' '                                          01231800
.*-------------------------------------------------------------------   01231900
.***AM.L03 XSHLFLGS1 BL.8                                               01232000
&ZOPN                 SETA &ZOPN+1                                      01232100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS1'                        01232200
&ZOPO(&ZOPN)          SETC 'DS'                                         01232300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01232400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01232500
.*                                                                      01232600
&ZOPN                 SETA  &ZOPN+1                                     01232700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  01232800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01232900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01233000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01233100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       01233200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01233300
.*                                                                      01233400
&ZOPN                 SETA  &ZOPN+1                                     01233500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFLIST'                 01233600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01233700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01233800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01233900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFLIST'                      01234000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01234100
.*                                                                      01234200
&ZOPN                 SETA  &ZOPN+1                                     01234300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 01234400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01234500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01234600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01234700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      01234800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01234900
.*                                                                      01235000
&ZOPN                 SETA  &ZOPN+1                                     01235100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEABLE_NO'                    01235200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01235300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01235400
&ZOPD(&ZOPN)          SETC  '++ XPAGEABLE.'                             01235500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           01235600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01235700
.*                                                                      01235800
&ZOPN                 SETA  &ZOPN+1                                     01235900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFSTGKEY'               01236000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01236100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01236200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01236300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFSTGKEY'                    01236400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01236500
.*                                                                      01236600
&ZOPN                 SETA  &ZOPN+1                                     01236700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRTYPE_REAL'               01236800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01236900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01237000
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRTYPE.'                          01237100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REAL'                         01237200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01237300
.*-------------------------------------------------------------------   01237400
.***AM.L03 XSHLFLGS2 BL.8                                               01237500
&ZOPN                 SETA &ZOPN+1                                      01237600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS2'                        01237700
&ZOPO(&ZOPN)          SETC 'DS'                                         01237800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01237900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01238000
.*                                                                      01238100
&ZOPN                 SETA  &ZOPN+1                                     01238200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCECB'                   01238300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01238400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01238500
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01238600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCECB'                      01238700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01238800
.*                                                                      01238900
&ZOPN                 SETA  &ZOPN+1                                     01239000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  01239100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01239200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01239300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01239400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     01239500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01239600
.*                                                                      01239700
&ZOPN                 SETA  &ZOPN+1                                     01239800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCTOKEN'                 01239900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01240000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01240100
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01240200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCTOKEN'                    01240300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01240400
.*                                                                      01240500
&ZOPN                 SETA  &ZOPN+1                                     01240600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCECB'                  01240700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01240800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01240900
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01241000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCECB'                     01241100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01241200
.*                                                                      01241300
&ZOPN                 SETA  &ZOPN+1                                     01241400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCEXIT'                 01241500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01241600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01241700
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01241800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCEXIT'                    01241900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01242000
.*                                                                      01242100
&ZOPN                 SETA  &ZOPN+1                                     01242200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCTOKEN'                01242300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01242400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01242500
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01242600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCTOKEN'                   01242700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01242800
.*                                                                      01242900
&ZOPN                 SETA  &ZOPN+1                                     01243000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCNORESPONSE'           01243100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01243200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01243300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01243400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCNORESPONSE'              01243500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01243600
.*-------------------------------------------------------------------   01243700
.***AM.L03 XSHLFLGS3 BL.8                                               01243800
&ZOPN                 SETA &ZOPN+1                                      01243900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS3'                        01244000
&ZOPO(&ZOPN)          SETC 'DS'                                         01244100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01244200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01244300
.*                                                                      01244400
&ZOPN                 SETA  &ZOPN+1                                     01244500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_SET'                   01244600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01244700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01244800
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01244900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SET'                          01245000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01245100
.*                                                                      01245200
&ZOPN                 SETA  &ZOPN+1                                     01245300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_RESET'                 01245400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01245500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01245600
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01245700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RESET'                        01245800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01245900
.*                                                                      01246000
&ZOPN                 SETA  &ZOPN+1                                     01246100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_TEST'                  01246200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01246300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01246400
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01246500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TEST'                         01246600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01246700
.*                                                                      01246800
&ZOPN                 SETA  &ZOPN+1                                     01246900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_READNEXT'              01247000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01247100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01247200
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01247300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READNEXT'                     01247400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01247500
.*                                                                      01247600
&ZOPN                 SETA  &ZOPN+1                                     01247700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKMODE_COND'                  01247800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01247900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01248000
&ZOPD(&ZOPN)          SETC  '++ XLOCKMODE.'                             01248100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COND'                         01248200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01248300
.*                                                                      01248400
&ZOPN                 SETA  &ZOPN+1                                     01248500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LOCKCOMP'                01248600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01248700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01248800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01248900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCKCOMP'                     01249000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01249100
.*-------------------------------------------------------------------   01249200
.***AM.L03 XSHLFLGS4 BL.8                                               01249300
&ZOPN                 SETA &ZOPN+1                                      01249400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS4'                        01249500
&ZOPO(&ZOPN)          SETC 'DS'                                         01249600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01249700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01249800
.*                                                                      01249900
&ZOPN                 SETA  &ZOPN+1                                     01250000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRSIZE_64'                 01250100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01250200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01250300
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRSIZE.'                          01250400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           01250500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01250600
.*                                                                      01250700
&ZOPN                 SETA  &ZOPN+1                                     01250800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYREQASYNC'                   01250900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01251000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01251100
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01251200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LIST'                         01251300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01251400
.*-------------------------------------------------------------------   01251500
.***AM.PJR1 DEFINED ON XCONTOKEN                                        01251600
&ZOPN                 SETA &ZOPN+1                                      01251700
&ZOPL(&ZOPN)          SETC ' '                                          01251800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01251900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+12'                               01252000
&ZOPD(&ZOPN)          SETC ' '                                          01252100
.*-------------------------------------------------------------------   01252200
.***AM.L09  XRSV0201 CL13                                               01252300
&ZOPN                 SETA &ZOPN+1                                      01252400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0201'                         01252500
&ZOPO(&ZOPN)          SETC 'DS'                                         01252600
&ZOPV(&ZOPN)          SETC 'CL13'                                       01252700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0201'                      01252800
.*-------------------------------------------------------------------   01252900
.***AM.L09  XCONID XL1                                                  01253000
&ZOPN                 SETA &ZOPN+1                                      01253100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           01253200
&ZOPO(&ZOPN)          SETC 'DS'                                         01253300
&ZOPV(&ZOPN)          SETC 'XL1'                                        01253400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCONID'                     01253500
.*-------------------------------------------------------------------   01253600
.***AM.L09  XRSV0202 CL2                                                01253700
&ZOPN                 SETA &ZOPN+1                                      01253800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0202'                         01253900
&ZOPO(&ZOPN)          SETC 'DS'                                         01254000
&ZOPV(&ZOPN)          SETC 'CL2'                                        01254100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0202'                      01254200
.*-------------------------------------------------------------------   01254300
.***AM.PJR1 DEFINED ON XDATADDR                                         01254400
&ZOPN                 SETA &ZOPN+1                                      01254500
&ZOPL(&ZOPN)          SETC ' '                                          01254600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01254700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01254800
&ZOPD(&ZOPN)          SETC ' '                                          01254900
.*-------------------------------------------------------------------   01255000
.***AM.L09 ALET XBUFFER F                                               01255100
&ZOPN                 SETA &ZOPN+1                                      01255200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     01255300
&ZOPO(&ZOPN)          SETC 'DS'                                         01255400
&ZOPV(&ZOPN)          SETC 'F'                                          01255500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET XBUFFER'                  01255600
.*-------------------------------------------------------------------   01255700
.***AM.L09  XBUFSIZE F                                                  01255800
&ZOPN                 SETA &ZOPN+1                                      01255900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         01256000
&ZOPO(&ZOPN)          SETC 'DS'                                         01256100
&ZOPV(&ZOPN)          SETC 'F'                                          01256200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE  XBUFSIZE'                    01256300
.*-------------------------------------------------------------------   01256400
.***AM.L09  XBUFFER A                                                   01256500
&ZOPN                 SETA &ZOPN+1                                      01256600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER'                          01256700
&ZOPO(&ZOPN)          SETC 'DS'                                         01256800
&ZOPV(&ZOPN)          SETC 'A'                                          01256900
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER  XBUFFER'                      01257000
.*-------------------------------------------------------------------   01257100
.***AM.PJR1 DEFINED ON XDATADDR                                         01257200
&ZOPN                 SETA &ZOPN+1                                      01257300
&ZOPL(&ZOPN)          SETC ' '                                          01257400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01257500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01257600
&ZOPD(&ZOPN)          SETC ' '                                          01257700
.*-------------------------------------------------------------------   01257800
.***AM.L09  XBUFALET F                                                  01257900
&ZOPN                 SETA &ZOPN+1                                      01258000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFALET'                         01258100
&ZOPO(&ZOPN)          SETC 'DS'                                         01258200
&ZOPV(&ZOPN)          SETC 'F'                                          01258300
&ZOPD(&ZOPN)          SETC '++ &ZXBUFALET  XBUFALET'                    01258400
.*-------------------------------------------------------------------   01258500
.***AM.L09 ALET XBUFLIST F                                              01258600
&ZOPN                 SETA &ZOPN+1                                      01258700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST_ALET'                    01258800
&ZOPO(&ZOPN)          SETC 'DS'                                         01258900
&ZOPV(&ZOPN)          SETC 'F'                                          01259000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST ALET XBUFLIST'                01259100
.*-------------------------------------------------------------------   01259200
.***AM.L09  XBUFLIST A                                                  01259300
&ZOPN                 SETA &ZOPN+1                                      01259400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         01259500
&ZOPO(&ZOPN)          SETC 'DS'                                         01259600
&ZOPV(&ZOPN)          SETC 'A'                                          01259700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST  XBUFLIST'                    01259800
.*-------------------------------------------------------------------   01259900
.***AM.PJR1 DEFINED ON XADJADDR                                         01260000
&ZOPN                 SETA &ZOPN+1                                      01260100
&ZOPL(&ZOPN)          SETC ' '                                          01260200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01260300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01260400
&ZOPD(&ZOPN)          SETC ' '                                          01260500
.*-------------------------------------------------------------------   01260600
.***AM.L09 ALET XMOSVECTOR F                                            01260700
&ZOPN                 SETA &ZOPN+1                                      01260800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOSVECTOR_ALET'                  01260900
&ZOPO(&ZOPN)          SETC 'DS'                                         01261000
&ZOPV(&ZOPN)          SETC 'F'                                          01261100
&ZOPD(&ZOPN)          SETC '++ &ZXMOSVECTOR ALET XMOSVECTOR'            01261200
.*-------------------------------------------------------------------   01261300
.***AM.L09  XMOSVECTOR A                                                01261400
&ZOPN                 SETA &ZOPN+1                                      01261500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOSVECTOR'                       01261600
&ZOPO(&ZOPN)          SETC 'DS'                                         01261700
&ZOPV(&ZOPN)          SETC 'A'                                          01261800
&ZOPD(&ZOPN)          SETC '++ &ZXMOSVECTOR  XMOSVECTOR'                01261900
.*-------------------------------------------------------------------   01262000
.***AM.PJR1 DEFINED ON XANSADDR                                         01262100
&ZOPN                 SETA &ZOPN+1                                      01262200
&ZOPL(&ZOPN)          SETC ' '                                          01262300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01262400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               01262500
&ZOPD(&ZOPN)          SETC ' '                                          01262600
.*-------------------------------------------------------------------   01262700
.***AM.L09 ALET XANSAREA F                                              01262800
&ZOPN                 SETA &ZOPN+1                                      01262900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    01263000
&ZOPO(&ZOPN)          SETC 'DS'                                         01263100
&ZOPV(&ZOPN)          SETC 'F'                                          01263200
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET XANSAREA'                01263300
.*-------------------------------------------------------------------   01263400
.***AM.L09  XANSAREA A                                                  01263500
&ZOPN                 SETA &ZOPN+1                                      01263600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA'                         01263700
&ZOPO(&ZOPN)          SETC 'DS'                                         01263800
&ZOPV(&ZOPN)          SETC 'A'                                          01263900
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA  XANSAREA'                    01264000
.*-------------------------------------------------------------------   01264100
.***AM.PJR1 DEFINED ON XREQDATA                                         01264200
&ZOPN                 SETA &ZOPN+1                                      01264300
&ZOPL(&ZOPN)          SETC ' '                                          01264400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01264500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01264600
&ZOPD(&ZOPN)          SETC ' '                                          01264700
.*-------------------------------------------------------------------   01264800
.***AM.L09  XREQECB A                                                   01264900
&ZOPN                 SETA &ZOPN+1                                      01265000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQECB'                          01265100
&ZOPO(&ZOPN)          SETC 'DS'                                         01265200
&ZOPV(&ZOPN)          SETC 'A'                                          01265300
&ZOPD(&ZOPN)          SETC '++ &ZXREQECB  XREQECB'                      01265400
.*-------------------------------------------------------------------   01265500
.***AM.L09  XRSV0203 CL4                                                01265600
&ZOPN                 SETA &ZOPN+1                                      01265700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0203'                         01265800
&ZOPO(&ZOPN)          SETC 'DS'                                         01265900
&ZOPV(&ZOPN)          SETC 'CL4'                                        01266000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0203'                      01266100
.*-------------------------------------------------------------------   01266200
.***AM.PJR1 DEFINED ON XREQDATA                                         01266300
&ZOPN                 SETA &ZOPN+1                                      01266400
&ZOPL(&ZOPN)          SETC ' '                                          01266500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01266600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01266700
&ZOPD(&ZOPN)          SETC ' '                                          01266800
.*-------------------------------------------------------------------   01266900
.***AM.L09 ALET XREQTOKEN F                                             01267000
&ZOPN                 SETA &ZOPN+1                                      01267100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN_ALET'                   01267200
&ZOPO(&ZOPN)          SETC 'DS'                                         01267300
&ZOPV(&ZOPN)          SETC 'F'                                          01267400
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN ALET XREQTOKEN'              01267500
.*-------------------------------------------------------------------   01267600
.***AM.L09  XREQTOKEN A                                                 01267700
&ZOPN                 SETA &ZOPN+1                                      01267800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        01267900
&ZOPO(&ZOPN)          SETC 'DS'                                         01268000
&ZOPV(&ZOPN)          SETC 'A'                                          01268100
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN  XREQTOKEN'                  01268200
.*-------------------------------------------------------------------   01268300
.***AM.PJR1 DEFINED ON XSHLFLGSA                                        01268400
&ZOPN                 SETA &ZOPN+1                                      01268500
&ZOPL(&ZOPN)          SETC ' '                                          01268600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01268700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               01268800
&ZOPD(&ZOPN)          SETC ' '                                          01268900
.*-------------------------------------------------------------------   01269000
.***AM.L03 XSHLFLGSA1 BL.8                                              01269100
&ZOPN                 SETA &ZOPN+1                                      01269200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA1'                       01269300
&ZOPO(&ZOPN)          SETC 'DS'                                         01269400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01269500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01269600
.*                                                                      01269700
&ZOPN                 SETA  &ZOPN+1                                     01269800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTC'                 01269900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01270000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01270100
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01270200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTC'                      01270300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01270400
.*                                                                      01270500
&ZOPN                 SETA  &ZOPN+1                                     01270600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTE'                 01270700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01270800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01270900
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01271000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTE'                      01271100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01271200
.*                                                                      01271300
&ZOPN                 SETA  &ZOPN+1                                     01271400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTM'                 01271500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01271600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01271700
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01271800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTM'                      01271900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01272000
.*-------------------------------------------------------------------   01272100
.***AM.PJR1 DEFINED ON XMOB_DATA                                        01272200
&ZOPN                 SETA &ZOPN+1                                      01272300
&ZOPL(&ZOPN)          SETC ' '                                          01272400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01272500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               01272600
&ZOPD(&ZOPN)          SETC ' '                                          01272700
.*-------------------------------------------------------------------   01272800
.***AM.L09  XCMDLEN XL2                                                 01272900
&ZOPN                 SETA &ZOPN+1                                      01273000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDLEN'                          01273100
&ZOPO(&ZOPN)          SETC 'DS'                                         01273200
&ZOPV(&ZOPN)          SETC 'XL2'                                        01273300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCMDLEN'                    01273400
.*-------------------------------------------------------------------   01273500
.***AM.L09  XBUFNUM XL1                                                 01273600
&ZOPN                 SETA &ZOPN+1                                      01273700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          01273800
&ZOPO(&ZOPN)          SETC 'DS'                                         01273900
&ZOPV(&ZOPN)          SETC 'XL1'                                        01274000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM  XBUFNUM'                      01274100
.*-------------------------------------------------------------------   01274200
.***AM.L09  XBUFINCRNUM XL1                                             01274300
&ZOPN                 SETA &ZOPN+1                                      01274400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFINCRNUM'                      01274500
&ZOPO(&ZOPN)          SETC 'DS'                                         01274600
&ZOPV(&ZOPN)          SETC 'XL1'                                        01274700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFINCRNUM  XBUFINCRNUM'              01274800
.*-------------------------------------------------------------------   01274900
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01275000
&ZOPN                 SETA &ZOPN+1                                      01275100
&ZOPL(&ZOPN)          SETC ' '                                          01275200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01275300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01275400
&ZOPD(&ZOPN)          SETC ' '                                          01275500
.*-------------------------------------------------------------------   01275600
.***AM.L09  XCCA CL1                                                    01275700
&ZOPN                 SETA &ZOPN+1                                      01275800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCA'                             01275900
&ZOPO(&ZOPN)          SETC 'DS'                                         01276000
&ZOPV(&ZOPN)          SETC 'CL1'                                        01276100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCCA'                       01276200
.*-------------------------------------------------------------------   01276300
.***AM.L09  XCCB CL1                                                    01276400
&ZOPN                 SETA &ZOPN+1                                      01276500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCB'                             01276600
&ZOPO(&ZOPN)          SETC 'DS'                                         01276700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01276800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCCB'                       01276900
.*-------------------------------------------------------------------   01277000
.***AM.L09  XDATA18 CL4                                                 01277100
&ZOPN                 SETA &ZOPN+1                                      01277200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA18'                          01277300
&ZOPO(&ZOPN)          SETC 'DS'                                         01277400
&ZOPV(&ZOPN)          SETC 'CL4'                                        01277500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDATA18'                    01277600
.*-------------------------------------------------------------------   01277700
.***AM.L03 XFL22 BL.8                                                   01277800
&ZOPN                 SETA &ZOPN+1                                      01277900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22'                            01278000
&ZOPO(&ZOPN)          SETC 'DS'                                         01278100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01278200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01278300
.*                                                                      01278400
&ZOPN                 SETA  &ZOPN+1                                     01278500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SECONDARYKEY'            01278600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01278700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01278800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01278900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARYKEY'                 01279000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01279100
.*-------------------------------------------------------------------   01279200
.***AM.L09  XUID23 XL1                                                  01279300
&ZOPN                 SETA &ZOPN+1                                      01279400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID23'                           01279500
&ZOPO(&ZOPN)          SETC 'DS'                                         01279600
&ZOPV(&ZOPN)          SETC 'XL1'                                        01279700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUID23'                     01279800
.*-------------------------------------------------------------------   01279900
.***AM.L09  XDATA24 CL8                                                 01280000
&ZOPN                 SETA &ZOPN+1                                      01280100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA24'                          01280200
&ZOPO(&ZOPN)          SETC 'DS'                                         01280300
&ZOPV(&ZOPN)          SETC 'CL8'                                        01280400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDATA24'                    01280500
.*-------------------------------------------------------------------   01280600
.***AM.L09  XLISTNUM F                                                  01280700
&ZOPN                 SETA &ZOPN+1                                      01280800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUM'                         01280900
&ZOPO(&ZOPN)          SETC 'DS'                                         01281000
&ZOPV(&ZOPN)          SETC 'F'                                          01281100
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUM  XLISTNUM'                    01281200
.*-------------------------------------------------------------------   01281300
.***AM.L09  XDATA36 CL28                                                01281400
&ZOPN                 SETA &ZOPN+1                                      01281500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA36'                          01281600
&ZOPO(&ZOPN)          SETC 'DS'                                         01281700
&ZOPV(&ZOPN)          SETC 'CL28'                                       01281800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDATA36'                    01281900
.*-------------------------------------------------------------------   01282000
.***AM.L09  XENTRYKEY CL16                                              01282100
&ZOPN                 SETA &ZOPN+1                                      01282200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEY'                        01282300
&ZOPO(&ZOPN)          SETC 'DS'                                         01282400
&ZOPV(&ZOPN)          SETC 'CL16'                                       01282500
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYKEY  XENTRYKEY'                  01282600
.*-------------------------------------------------------------------   01282700
.***AM.L09  XDATA80 CL16                                                01282800
&ZOPN                 SETA &ZOPN+1                                      01282900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA80'                          01283000
&ZOPO(&ZOPN)          SETC 'DS'                                         01283100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01283200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDATA80'                    01283300
.*-------------------------------------------------------------------   01283400
.***AM.L09  XSECONDARYKEY CL32                                          01283500
&ZOPN                 SETA &ZOPN+1                                      01283600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEY'                    01283700
&ZOPO(&ZOPN)          SETC 'DS'                                         01283800
&ZOPV(&ZOPN)          SETC 'CL32'                                       01283900
&ZOPD(&ZOPN)          SETC '++ &ZXSECONDARYKEY  XSECONDARYKEY'          01284000
.*-------------------------------------------------------------------   01284100
.***AM.LVER1                                                            01284200
                      AIF  (&XPLISTVER LT 4).ZL101L                     01284300
.*-------------------------------------------------------------------   01284400
.*-------------------------------------------------------------------   01284500
.***AM.PJR1 DEFINED ON XFL22                                            01284600
&ZOPN                 SETA &ZOPN+1                                      01284700
&ZOPL(&ZOPN)          SETC ' '                                          01284800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01284900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01285000
&ZOPD(&ZOPN)          SETC ' '                                          01285100
.*-------------------------------------------------------------------   01285200
.***AM.LVER2                                                            01285300
.ZL101L               ANOP  ,                                           01285400
.*-------------------------------------------------------------------   01285500
.*-------------------------------------------------------------------   01285600
.***AM.LVER1                                                            01285700
                      AIF  (&XPLISTVER LT 4).ZL102L                     01285800
.*-------------------------------------------------------------------   01285900
.*-------------------------------------------------------------------   01286000
.***AM.L03 XFL22KT BL.8                                                 01286100
&ZOPN                 SETA &ZOPN+1                                      01286200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22KT'                          01286300
&ZOPO(&ZOPN)          SETC 'DS'                                         01286400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01286500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01286600
.*-------------------------------------------------------------------   01286700
.***AM.LVER2                                                            01286800
.ZL102L               ANOP  ,                                           01286900
.*-------------------------------------------------------------------   01287000
.*-------------------------------------------------------------------   01287100
.***AM.LVER1                                                            01287200
                      AIF  (&XPLISTVER LT 4).ZL103L                     01287300
.*-------------------------------------------------------------------   01287400
.*                                                                      01287500
&ZOPN                 SETA  &ZOPN+1                                     01287600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYTYPE_SECONDARY'              01287700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01287800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01287900
&ZOPD(&ZOPN)          SETC  '++ XKEYTYPE.'                              01288000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARY'                    01288100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01288200
.*-------------------------------------------------------------------   01288300
.***AM.LVER2                                                            01288400
.ZL103L               ANOP  ,                                           01288500
.*-------------------------------------------------------------------   01288600
.*-------------------------------------------------------------------   01288700
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01288800
&ZOPN                 SETA &ZOPN+1                                      01288900
&ZOPL(&ZOPN)          SETC ' '                                          01289000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01289100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01289200
&ZOPD(&ZOPN)          SETC ' '                                          01289300
.*-------------------------------------------------------------------   01289400
.***AM.L09  XRSV16LK CL5                                                01289500
&ZOPN                 SETA &ZOPN+1                                      01289600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16LK'                         01289700
&ZOPO(&ZOPN)          SETC 'DS'                                         01289800
&ZOPV(&ZOPN)          SETC 'CL5'                                        01289900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV16LK'                      01290000
.*-------------------------------------------------------------------   01290100
.***AM.L09  XFL21LK BL.8                                                01290200
&ZOPN                 SETA &ZOPN+1                                      01290300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL21LK'                          01290400
&ZOPO(&ZOPN)          SETC 'DS'                                         01290500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01290600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XFL21LK'                    01290700
.*-------------------------------------------------------------------   01290800
.***AM.L09  XRSV22LK CL5                                                01290900
&ZOPN                 SETA &ZOPN+1                                      01291000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV22LK'                         01291100
&ZOPO(&ZOPN)          SETC 'DS'                                         01291200
&ZOPV(&ZOPN)          SETC 'CL5'                                        01291300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV22LK'                      01291400
.*-------------------------------------------------------------------   01291500
.***AM.L09  XCGLM XL1                                                   01291600
&ZOPN                 SETA &ZOPN+1                                      01291700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCGLM'                            01291800
&ZOPO(&ZOPN)          SETC 'DS'                                         01291900
&ZOPV(&ZOPN)          SETC 'XL1'                                        01292000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCGLM'                      01292100
.*-------------------------------------------------------------------   01292200
.***AM.L09  XLOCKINDEX F                                                01292300
&ZOPN                 SETA &ZOPN+1                                      01292400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKINDEX'                       01292500
&ZOPO(&ZOPN)          SETC 'DS'                                         01292600
&ZOPV(&ZOPN)          SETC 'F'                                          01292700
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKINDEX  XLOCKINDEX'                01292800
.*-------------------------------------------------------------------   01292900
.***AM.L09  XRSV32LK CL32                                               01293000
&ZOPN                 SETA &ZOPN+1                                      01293100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV32LK'                         01293200
&ZOPO(&ZOPN)          SETC 'DS'                                         01293300
&ZOPV(&ZOPN)          SETC 'CL32'                                       01293400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV32LK'                      01293500
.*-------------------------------------------------------------------   01293600
.***AM.L09  XUID64 XL1                                                  01293700
&ZOPN                 SETA &ZOPN+1                                      01293800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID64'                           01293900
&ZOPO(&ZOPN)          SETC 'DS'                                         01294000
&ZOPV(&ZOPN)          SETC 'XL1'                                        01294100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUID64'                     01294200
.*-------------------------------------------------------------------   01294300
.***AM.L09  XRSV65LK CL31                                               01294400
&ZOPN                 SETA &ZOPN+1                                      01294500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV65LK'                         01294600
&ZOPO(&ZOPN)          SETC 'DS'                                         01294700
&ZOPV(&ZOPN)          SETC 'CL31'                                       01294800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV65LK'                      01294900
.*-------------------------------------------------------------------   01295000
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01295100
&ZOPN                 SETA &ZOPN+1                                      01295200
&ZOPL(&ZOPN)          SETC ' '                                          01295300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01295400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01295500
&ZOPD(&ZOPN)          SETC ' '                                          01295600
.*-------------------------------------------------------------------   01295700
.***AM.L09  XRSV16LC CL4                                                01295800
&ZOPN                 SETA &ZOPN+1                                      01295900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16LC'                         01296000
&ZOPO(&ZOPN)          SETC 'DS'                                         01296100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01296200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV16LC'                      01296300
.*-------------------------------------------------------------------   01296400
.***AM.L03 XFL20LC BL.8                                                 01296500
&ZOPN                 SETA &ZOPN+1                                      01296600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL20LC'                          01296700
&ZOPO(&ZOPN)          SETC 'DS'                                         01296800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01296900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01297000
.*                                                                      01297100
&ZOPN                 SETA  &ZOPN+1                                     01297200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SET_LNT'                         01297300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01297400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01297500
&ZOPD(&ZOPN)          SETC  '++ XLISTSTATE.'                            01297600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEFINE'                       01297700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01297800
.*                                                                      01297900
&ZOPN                 SETA  &ZOPN+1                                     01298000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SET_KRNT'                        01298100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01298200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01298300
&ZOPD(&ZOPN)          SETC  '++ XKEYRANGESTATE.'                        01298400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEFINE'                       01298500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01298600
.*                                                                      01298700
&ZOPN                 SETA  &ZOPN+1                                     01298800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SET_KR'                          01298900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01299000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01299100
&ZOPD(&ZOPN)          SETC  '++ XKEYRANGE.'                             01299200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SET'                          01299300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01299400
.*-------------------------------------------------------------------   01299500
.***AM.L03 XFL21LC BL.8                                                 01299600
&ZOPN                 SETA &ZOPN+1                                      01299700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL21LC'                          01299800
&ZOPO(&ZOPN)          SETC 'DS'                                         01299900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01300000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01300100
.*                                                                      01300200
&ZOPN                 SETA  &ZOPN+1                                     01300300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTKEY'                 01300400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01300500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01300600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01300700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEY'                      01300800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01300900
.*                                                                      01301000
&ZOPN                 SETA  &ZOPN+1                                     01301100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MAXLISTKEY'              01301200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01301300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01301400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01301500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MAXLISTKEY'                   01301600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01301700
.*                                                                      01301800
&ZOPN                 SETA  &ZOPN+1                                     01301900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SETCURSOR'               01302000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01302100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01302200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01302300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SETCURSOR'                    01302400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01302500
.*                                                                      01302600
&ZOPN                 SETA  &ZOPN+1                                     01302700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTDESC'                01302800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01302900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01303000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01303100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTDESC'                     01303200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01303300
.*                                                                      01303400
&ZOPN                 SETA  &ZOPN+1                                     01303500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTLIMIT'               01303600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01303700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01303800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01303900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTLIMIT'                    01304000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01304100
.*-------------------------------------------------------------------   01304200
.***AM.L09  XRSV22LC CL1                                                01304300
&ZOPN                 SETA &ZOPN+1                                      01304400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV22LC'                         01304500
&ZOPO(&ZOPN)          SETC 'DS'                                         01304600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01304700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV22LC'                      01304800
.*-------------------------------------------------------------------   01304900
.***AM.L03 XFL23LC BL.8                                                 01305000
&ZOPN                 SETA &ZOPN+1                                      01305100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL23LC'                          01305200
&ZOPO(&ZOPN)          SETC 'DS'                                         01305300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01305400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01305500
.*                                                                      01305600
&ZOPN                 SETA  &ZOPN+1                                     01305700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSETCURSOR_TAIL'                 01305800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01305900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01306000
&ZOPD(&ZOPN)          SETC  '++ XSETCURSOR.'                            01306100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TAIL'                         01306200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01306300
.*-------------------------------------------------------------------   01306400
.***AM.L09  XRSV24LC CL8                                                01306500
&ZOPN                 SETA &ZOPN+1                                      01306600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24LC'                         01306700
&ZOPO(&ZOPN)          SETC 'DS'                                         01306800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01306900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV24LC'                      01307000
.*-------------------------------------------------------------------   01307100
.***AM.L09  XLISTNUMLC F                                                01307200
&ZOPN                 SETA &ZOPN+1                                      01307300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMLC'                       01307400
&ZOPO(&ZOPN)          SETC 'DS'                                         01307500
&ZOPV(&ZOPN)          SETC 'F'                                          01307600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XLISTNUMLC'                 01307700
.*-------------------------------------------------------------------   01307800
.***AM.L09  XLISTLIMIT F                                                01307900
&ZOPN                 SETA &ZOPN+1                                      01308000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTLIMIT'                       01308100
&ZOPO(&ZOPN)          SETC 'DS'                                         01308200
&ZOPV(&ZOPN)          SETC 'F'                                          01308300
&ZOPD(&ZOPN)          SETC '++ &ZXLISTLIMIT  XLISTLIMIT'                01308400
.*-------------------------------------------------------------------   01308500
.***AM.L09  XRSV40LC CL24                                               01308600
&ZOPN                 SETA &ZOPN+1                                      01308700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV40LC'                         01308800
&ZOPO(&ZOPN)          SETC 'DS'                                         01308900
&ZOPV(&ZOPN)          SETC 'CL24'                                       01309000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV40LC'                      01309100
.*-------------------------------------------------------------------   01309200
.***AM.L09  XAUTHCOMP CL16                                              01309300
&ZOPN                 SETA &ZOPN+1                                      01309400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAUTHCOMP'                        01309500
&ZOPO(&ZOPN)          SETC 'DS'                                         01309600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01309700
&ZOPD(&ZOPN)          SETC '++ &ZXAUTHCOMP  XAUTHCOMP'                  01309800
.*-------------------------------------------------------------------   01309900
.***AM.L09  XNEWAUTH CL16                                               01310000
&ZOPN                 SETA &ZOPN+1                                      01310100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWAUTH'                         01310200
&ZOPO(&ZOPN)          SETC 'DS'                                         01310300
&ZOPV(&ZOPN)          SETC 'CL16'                                       01310400
&ZOPD(&ZOPN)          SETC '++ &ZXNEWAUTH  XNEWAUTH'                    01310500
.*-------------------------------------------------------------------   01310600
.***AM.L09  XLISTDESC CL32                                              01310700
&ZOPN                 SETA &ZOPN+1                                      01310800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTDESC'                        01310900
&ZOPO(&ZOPN)          SETC 'DS'                                         01311000
&ZOPV(&ZOPN)          SETC 'CL32'                                       01311100
&ZOPD(&ZOPN)          SETC '++ &ZXLISTDESC  XLISTDESC'                  01311200
.*-------------------------------------------------------------------   01311300
.***AM.LVER1                                                            01311400
                      AIF  (&XPLISTVER LT 1).ZL135L                     01311500
.*-------------------------------------------------------------------   01311600
.*-------------------------------------------------------------------   01311700
.***AM.L09  XLISTKEY CL16                                               01311800
&ZOPN                 SETA &ZOPN+1                                      01311900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEY'                         01312000
&ZOPO(&ZOPN)          SETC 'DS'                                         01312100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01312200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEY  XLISTKEY'                    01312300
.*-------------------------------------------------------------------   01312400
.***AM.LVER2                                                            01312500
.ZL135L               ANOP  ,                                           01312600
.*-------------------------------------------------------------------   01312700
.*-------------------------------------------------------------------   01312800
.***AM.LVER1                                                            01312900
                      AIF  (&XPLISTVER LT 1).ZL136L                     01313000
.*-------------------------------------------------------------------   01313100
.*-------------------------------------------------------------------   01313200
.***AM.L09  XMAXLISTKEY CL16                                            01313300
&ZOPN                 SETA &ZOPN+1                                      01313400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAXLISTKEY'                      01313500
&ZOPO(&ZOPN)          SETC 'DS'                                         01313600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01313700
&ZOPD(&ZOPN)          SETC '++ &ZXMAXLISTKEY  XMAXLISTKEY'              01313800
.*-------------------------------------------------------------------   01313900
.***AM.LVER2                                                            01314000
.ZL136L               ANOP  ,                                           01314100
.*-------------------------------------------------------------------   01314200
.*-------------------------------------------------------------------   01314300
.***AM.LVER1                                                            01314400
                      AIF  (&XPLISTVER LT 4).ZL137L                     01314500
.*-------------------------------------------------------------------   01314600
.*-------------------------------------------------------------------   01314700
.***AM.L09  XRSV160LC CL16                                              01314800
&ZOPN                 SETA &ZOPN+1                                      01314900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV160LC'                        01315000
&ZOPO(&ZOPN)          SETC 'DS'                                         01315100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01315200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV160LC'                     01315300
.*-------------------------------------------------------------------   01315400
.***AM.LVER2                                                            01315500
.ZL137L               ANOP  ,                                           01315600
.*-------------------------------------------------------------------   01315700
.*-------------------------------------------------------------------   01315800
.***AM.LVER1                                                            01315900
                      AIF  (&XPLISTVER LT 4).ZL138L                     01316000
.*-------------------------------------------------------------------   01316100
.*-------------------------------------------------------------------   01316200
.***AM.L09  XKEYRANGESTART CL16                                         01316300
&ZOPN                 SETA &ZOPN+1                                      01316400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYRANGESTART'                   01316500
&ZOPO(&ZOPN)          SETC 'DS'                                         01316600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01316700
&ZOPD(&ZOPN)          SETC '++ &ZXKEYRANGESTART  XKEYRANGESTART'        01316800
.*-------------------------------------------------------------------   01316900
.***AM.LVER2                                                            01317000
.ZL138L               ANOP  ,                                           01317100
.*-------------------------------------------------------------------   01317200
.*-------------------------------------------------------------------   01317300
.***AM.LVER1                                                            01317400
                      AIF  (&XPLISTVER LT 4).ZL139L                     01317500
.*-------------------------------------------------------------------   01317600
.*-------------------------------------------------------------------   01317700
.***AM.L09  XKEYRANGEEND CL16                                           01317800
&ZOPN                 SETA &ZOPN+1                                      01317900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYRANGEEND'                     01318000
&ZOPO(&ZOPN)          SETC 'DS'                                         01318100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01318200
&ZOPD(&ZOPN)          SETC '++ &ZXKEYRANGEEND  XKEYRANGEEND'            01318300
.*-------------------------------------------------------------------   01318400
.***AM.LVER2                                                            01318500
.ZL139L               ANOP  ,                                           01318600
.*-------------------------------------------------------------------   01318700
.*-------------------------------------------------------------------   01318800
.***AM.LVER1                                                            01318900
                      AIF  (&XPLISTVER LT 4).ZL140L                     01319000
.*-------------------------------------------------------------------   01319100
.*-------------------------------------------------------------------   01319200
.***AM.L09  XKREMPTY F                                                  01319300
&ZOPN                 SETA &ZOPN+1                                      01319400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKREMPTY'                         01319500
&ZOPO(&ZOPN)          SETC 'DS'                                         01319600
&ZOPV(&ZOPN)          SETC 'F'                                          01319700
&ZOPD(&ZOPN)          SETC '++ &ZXKREMPTY  XKREMPTY'                    01319800
.*-------------------------------------------------------------------   01319900
.***AM.LVER2                                                            01320000
.ZL140L               ANOP  ,                                           01320100
.*-------------------------------------------------------------------   01320200
.*-------------------------------------------------------------------   01320300
.***AM.LVER1                                                            01320400
                      AIF  (&XPLISTVER LT 4).ZL141L                     01320500
.*-------------------------------------------------------------------   01320600
.*-------------------------------------------------------------------   01320700
.***AM.L09  XKRNOTEMPTY F                                               01320800
&ZOPN                 SETA &ZOPN+1                                      01320900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKRNOTEMPTY'                      01321000
&ZOPO(&ZOPN)          SETC 'DS'                                         01321100
&ZOPV(&ZOPN)          SETC 'F'                                          01321200
&ZOPD(&ZOPN)          SETC '++ &ZXKRNOTEMPTY  XKRNOTEMPTY'              01321300
.*-------------------------------------------------------------------   01321400
.***AM.LVER2                                                            01321500
.ZL141L               ANOP  ,                                           01321600
.*-------------------------------------------------------------------   01321700
.*-------------------------------------------------------------------   01321800
.***AM.LVER1                                                            01321900
                      AIF  (&XPLISTVER LT 4).ZL142L                     01322000
.*-------------------------------------------------------------------   01322100
.*-------------------------------------------------------------------   01322200
.***AM.L09  XLISTEMPTY F                                                01322300
&ZOPN                 SETA &ZOPN+1                                      01322400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTEMPTY'                       01322500
&ZOPO(&ZOPN)          SETC 'DS'                                         01322600
&ZOPV(&ZOPN)          SETC 'F'                                          01322700
&ZOPD(&ZOPN)          SETC '++ &ZXLISTEMPTY  XLISTEMPTY'                01322800
.*-------------------------------------------------------------------   01322900
.***AM.LVER2                                                            01323000
.ZL142L               ANOP  ,                                           01323100
.*-------------------------------------------------------------------   01323200
.*-------------------------------------------------------------------   01323300
.***AM.LVER1                                                            01323400
                      AIF  (&XPLISTVER LT 4).ZL143L                     01323500
.*-------------------------------------------------------------------   01323600
.*-------------------------------------------------------------------   01323700
.***AM.L09  XLISTNOTEMPTY F                                             01323800
&ZOPN                 SETA &ZOPN+1                                      01323900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNOTEMPTY'                    01324000
&ZOPO(&ZOPN)          SETC 'DS'                                         01324100
&ZOPV(&ZOPN)          SETC 'F'                                          01324200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNOTEMPTY  XLISTNOTEMPTY'          01324300
.*-------------------------------------------------------------------   01324400
.***AM.LVER2                                                            01324500
.ZL143L               ANOP  ,                                           01324600
.*-------------------------------------------------------------------   01324700
.*-------------------------------------------------------------------   01324800
.***AM.LVER1                                                            01324900
                      AIF  (&XPLISTVER LT 2).ZL144L                     01325000
.*-------------------------------------------------------------------   01325100
.*-------------------------------------------------------------------   01325200
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01325300
&ZOPN                 SETA &ZOPN+1                                      01325400
&ZOPL(&ZOPN)          SETC ' '                                          01325500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01325600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01325700
&ZOPD(&ZOPN)          SETC ' '                                          01325800
.*-------------------------------------------------------------------   01325900
.***AM.LVER2                                                            01326000
.ZL144L               ANOP  ,                                           01326100
.*-------------------------------------------------------------------   01326200
.*-------------------------------------------------------------------   01326300
.***AM.LVER1                                                            01326400
                      AIF  (&XPLISTVER LT 2).ZL145L                     01326500
.*-------------------------------------------------------------------   01326600
.*-------------------------------------------------------------------   01326700
.***AM.L09  XRSV16REV CL6                                               01326800
&ZOPN                 SETA &ZOPN+1                                      01326900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16REV'                        01327000
&ZOPO(&ZOPN)          SETC 'DS'                                         01327100
&ZOPV(&ZOPN)          SETC 'CL6'                                        01327200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV16REV'                     01327300
.*-------------------------------------------------------------------   01327400
.***AM.LVER2                                                            01327500
.ZL145L               ANOP  ,                                           01327600
.*-------------------------------------------------------------------   01327700
.*-------------------------------------------------------------------   01327800
.***AM.LVER1                                                            01327900
                      AIF  (&XPLISTVER LT 2).ZL146L                     01328000
.*-------------------------------------------------------------------   01328100
.*-------------------------------------------------------------------   01328200
.***AM.L09  XFL22REV BL.8                                               01328300
&ZOPN                 SETA &ZOPN+1                                      01328400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22REV'                         01328500
&ZOPO(&ZOPN)          SETC 'DS'                                         01328600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01328700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XFL22REV'                   01328800
.*-------------------------------------------------------------------   01328900
.***AM.LVER2                                                            01329000
.ZL146L               ANOP  ,                                           01329100
.*-------------------------------------------------------------------   01329200
.*-------------------------------------------------------------------   01329300
.***AM.LVER1                                                            01329400
                      AIF  (&XPLISTVER LT 2).ZL147L                     01329500
.*-------------------------------------------------------------------   01329600
.*-------------------------------------------------------------------   01329700
.***AM.L09  XUIDREV XL1                                                 01329800
&ZOPN                 SETA &ZOPN+1                                      01329900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDREV'                          01330000
&ZOPO(&ZOPN)          SETC 'DS'                                         01330100
&ZOPV(&ZOPN)          SETC 'XL1'                                        01330200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUIDREV'                    01330300
.*-------------------------------------------------------------------   01330400
.***AM.LVER2                                                            01330500
.ZL147L               ANOP  ,                                           01330600
.*-------------------------------------------------------------------   01330700
.*-------------------------------------------------------------------   01330800
.***AM.LVER1                                                            01330900
                      AIF  (&XPLISTVER LT 2).ZL148L                     01331000
.*-------------------------------------------------------------------   01331100
.*-------------------------------------------------------------------   01331200
.***AM.L09  XRSV24REV CL8                                               01331300
&ZOPN                 SETA &ZOPN+1                                      01331400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24REV'                        01331500
&ZOPO(&ZOPN)          SETC 'DS'                                         01331600
&ZOPV(&ZOPN)          SETC 'CL8'                                        01331700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV24REV'                     01331800
.*-------------------------------------------------------------------   01331900
.***AM.LVER2                                                            01332000
.ZL148L               ANOP  ,                                           01332100
.*-------------------------------------------------------------------   01332200
.*-------------------------------------------------------------------   01332300
.***AM.LVER1                                                            01332400
                      AIF  (&XPLISTVER LT 2).ZL149L                     01332500
.*-------------------------------------------------------------------   01332600
.*-------------------------------------------------------------------   01332700
.***AM.L09  XLISTNUMREV F                                               01332800
&ZOPN                 SETA &ZOPN+1                                      01332900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMREV'                      01333000
&ZOPO(&ZOPN)          SETC 'DS'                                         01333100
&ZOPV(&ZOPN)          SETC 'F'                                          01333200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XLISTNUMREV'                01333300
.*-------------------------------------------------------------------   01333400
.***AM.LVER2                                                            01333500
.ZL149L               ANOP  ,                                           01333600
.*-------------------------------------------------------------------   01333700
.*-------------------------------------------------------------------   01333800
.***AM.LVER1                                                            01333900
                      AIF  (&XPLISTVER LT 2).ZL150L                     01334000
.*-------------------------------------------------------------------   01334100
.*-------------------------------------------------------------------   01334200
.***AM.L09  XRSV36REV CL28                                              01334300
&ZOPN                 SETA &ZOPN+1                                      01334400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV36REV'                        01334500
&ZOPO(&ZOPN)          SETC 'DS'                                         01334600
&ZOPV(&ZOPN)          SETC 'CL28'                                       01334700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV36REV'                     01334800
.*-------------------------------------------------------------------   01334900
.***AM.LVER2                                                            01335000
.ZL150L               ANOP  ,                                           01335100
.*-------------------------------------------------------------------   01335200
.*-------------------------------------------------------------------   01335300
.***AM.LVER1                                                            01335400
                      AIF  (&XPLISTVER LT 2).ZL151L                     01335500
.*-------------------------------------------------------------------   01335600
.*-------------------------------------------------------------------   01335700
.***AM.L09  XENTRYKEYREV CL16                                           01335800
&ZOPN                 SETA &ZOPN+1                                      01335900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEYREV'                     01336000
&ZOPO(&ZOPN)          SETC 'DS'                                         01336100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01336200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XENTRYKEYREV'               01336300
.*-------------------------------------------------------------------   01336400
.***AM.LVER2                                                            01336500
.ZL151L               ANOP  ,                                           01336600
.*-------------------------------------------------------------------   01336700
.*-------------------------------------------------------------------   01336800
.***AM.LVER1                                                            01336900
                      AIF  (&XPLISTVER LT 2).ZL152L                     01337000
.*-------------------------------------------------------------------   01337100
.*-------------------------------------------------------------------   01337200
.***AM.L09  XRSV80REV CL16                                              01337300
&ZOPN                 SETA &ZOPN+1                                      01337400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV80REV'                        01337500
&ZOPO(&ZOPN)          SETC 'DS'                                         01337600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01337700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV80REV'                     01337800
.*-------------------------------------------------------------------   01337900
.***AM.LVER2                                                            01338000
.ZL152L               ANOP  ,                                           01338100
.*-------------------------------------------------------------------   01338200
.*-------------------------------------------------------------------   01338300
.***AM.LVER1                                                            01338400
                      AIF  (&XPLISTVER LT 2).ZL153L                     01338500
.*-------------------------------------------------------------------   01338600
.*-------------------------------------------------------------------   01338700
.***AM.L09  XSECONDARYKEYREV CL32                                       01338800
&ZOPN                 SETA &ZOPN+1                                      01338900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEYREV'                 01339000
&ZOPO(&ZOPN)          SETC 'DS'                                         01339100
&ZOPV(&ZOPN)          SETC 'CL32'                                       01339200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSECONDARYKEYREV'           01339300
.*-------------------------------------------------------------------   01339400
.***AM.LVER2                                                            01339500
.ZL153L               ANOP  ,                                           01339600
.*-------------------------------------------------------------------   01339700
.*-------------------------------------------------------------------   01339800
.***AM.LVER1                                                            01339900
                      AIF  (&XPLISTVER LT 2).ZL154L                     01340000
.*-------------------------------------------------------------------   01340100
.*-------------------------------------------------------------------   01340200
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01340300
&ZOPN                 SETA &ZOPN+1                                      01340400
&ZOPL(&ZOPN)          SETC ' '                                          01340500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01340600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01340700
&ZOPD(&ZOPN)          SETC ' '                                          01340800
.*-------------------------------------------------------------------   01340900
.***AM.LVER2                                                            01341000
.ZL154L               ANOP  ,                                           01341100
.*-------------------------------------------------------------------   01341200
.*-------------------------------------------------------------------   01341300
.***AM.LVER1                                                            01341400
                      AIF  (&XPLISTVER LT 2).ZL155L                     01341500
.*-------------------------------------------------------------------   01341600
.*-------------------------------------------------------------------   01341700
.***AM.L09  XRSV16EQ CL6                                                01341800
&ZOPN                 SETA &ZOPN+1                                      01341900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16EQ'                         01342000
&ZOPO(&ZOPN)          SETC 'DS'                                         01342100
&ZOPV(&ZOPN)          SETC 'CL6'                                        01342200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV16EQ'                      01342300
.*-------------------------------------------------------------------   01342400
.***AM.LVER2                                                            01342500
.ZL155L               ANOP  ,                                           01342600
.*-------------------------------------------------------------------   01342700
.*-------------------------------------------------------------------   01342800
.***AM.LVER1                                                            01342900
                      AIF  (&XPLISTVER LT 2).ZL156L                     01343000
.*-------------------------------------------------------------------   01343100
.*-------------------------------------------------------------------   01343200
.***AM.L09  XFL22DEQ BL.8                                               01343300
&ZOPN                 SETA &ZOPN+1                                      01343400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22DEQ'                         01343500
&ZOPO(&ZOPN)          SETC 'DS'                                         01343600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01343700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XFL22DEQ'                   01343800
.*-------------------------------------------------------------------   01343900
.***AM.LVER2                                                            01344000
.ZL156L               ANOP  ,                                           01344100
.*-------------------------------------------------------------------   01344200
.*-------------------------------------------------------------------   01344300
.***AM.LVER1                                                            01344400
                      AIF  (&XPLISTVER LT 2).ZL157L                     01344500
.*-------------------------------------------------------------------   01344600
.*-------------------------------------------------------------------   01344700
.***AM.L09  XUIDDEQ XL1                                                 01344800
&ZOPN                 SETA &ZOPN+1                                      01344900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDDEQ'                          01345000
&ZOPO(&ZOPN)          SETC 'DS'                                         01345100
&ZOPV(&ZOPN)          SETC 'XL1'                                        01345200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUIDDEQ'                    01345300
.*-------------------------------------------------------------------   01345400
.***AM.LVER2                                                            01345500
.ZL157L               ANOP  ,                                           01345600
.*-------------------------------------------------------------------   01345700
.*-------------------------------------------------------------------   01345800
.***AM.LVER1                                                            01345900
                      AIF  (&XPLISTVER LT 2).ZL158L                     01346000
.*-------------------------------------------------------------------   01346100
.*-------------------------------------------------------------------   01346200
.***AM.L09  XRSV24DEQ CL121                                             01346300
&ZOPN                 SETA &ZOPN+1                                      01346400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24DEQ'                        01346500
&ZOPO(&ZOPN)          SETC 'DS'                                         01346600
&ZOPV(&ZOPN)          SETC 'CL121'                                      01346700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV24DEQ'                     01346800
.*-------------------------------------------------------------------   01346900
.***AM.LVER2                                                            01347000
.ZL158L               ANOP  ,                                           01347100
.*-------------------------------------------------------------------   01347200
.*-------------------------------------------------------------------   01347300
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01347400
&ZOPN                 SETA &ZOPN+1                                      01347500
&ZOPL(&ZOPN)          SETC ' '                                          01347600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01347700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01347800
&ZOPD(&ZOPN)          SETC ' '                                          01347900
.*-------------------------------------------------------------------   01348000
.***AM.L09  XRSV16LM CL4                                                01348100
&ZOPN                 SETA &ZOPN+1                                      01348200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16LM'                         01348300
&ZOPO(&ZOPN)          SETC 'DS'                                         01348400
&ZOPV(&ZOPN)          SETC 'CL4'                                        01348500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV16LM'                      01348600
.*-------------------------------------------------------------------   01348700
.***AM.L09  XRSV20LM CL2                                                01348800
&ZOPN                 SETA &ZOPN+1                                      01348900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV20LM'                         01349000
&ZOPO(&ZOPN)          SETC 'DS'                                         01349100
&ZOPV(&ZOPN)          SETC 'CL2'                                        01349200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV20LM'                      01349300
.*-------------------------------------------------------------------   01349400
.***AM.L03 XFL22LM BL.8                                                 01349500
&ZOPN                 SETA &ZOPN+1                                      01349600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22LM'                          01349700
&ZOPO(&ZOPN)          SETC 'DS'                                         01349800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01349900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01350000
.*                                                                      01350100
&ZOPN                 SETA  &ZOPN+1                                     01350200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_MONITOR_SUBLIST'        01350300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01350400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01350500
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              01350600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MONITOR_SUBLIST'              01350700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01350800
.*                                                                      01350900
&ZOPN                 SETA  &ZOPN+1                                     01351000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_MONITOR_EVENTQ'         01351100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01351200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01351300
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              01351400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MONITOR_EVENTQ'               01351500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01351600
.*                                                                      01351700
&ZOPN                 SETA  &ZOPN+1                                     01351800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACTION_START'                   01351900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01352000
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01352100
&ZOPD(&ZOPN)          SETC  '++ XACTION.'                               01352200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).START'                        01352300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01352400
.*                                                                      01352500
&ZOPN                 SETA  &ZOPN+1                                     01352600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XNOTIFICATION_EVERY'             01352700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01352800
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01352900
&ZOPD(&ZOPN)          SETC  '++ XNOTIFICATION.'                         01353000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EVERY'                        01353100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01353200
.*                                                                      01353300
&ZOPN                 SETA  &ZOPN+1                                     01353400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDRIVEEXIT_YES'                  01353500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01353600
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01353700
&ZOPD(&ZOPN)          SETC  '++ XDRIVEEXIT.'                            01353800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          01353900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01354000
.*-------------------------------------------------------------------   01354100
.***AM.L09  XUIDLM CL1                                                  01354200
&ZOPN                 SETA &ZOPN+1                                      01354300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDLM'                           01354400
&ZOPO(&ZOPN)          SETC 'DS'                                         01354500
&ZOPV(&ZOPN)          SETC 'CL1'                                        01354600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUIDLM'                     01354700
.*-------------------------------------------------------------------   01354800
.***AM.L09  XRSV24LM CL4                                                01354900
&ZOPN                 SETA &ZOPN+1                                      01355000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV24LM'                         01355100
&ZOPO(&ZOPN)          SETC 'DS'                                         01355200
&ZOPV(&ZOPN)          SETC 'CL4'                                        01355300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV24LM'                      01355400
.*-------------------------------------------------------------------   01355500
.***AM.L09  XVECTORINDEX F                                              01355600
&ZOPN                 SETA &ZOPN+1                                      01355700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVECTORINDEX'                     01355800
&ZOPO(&ZOPN)          SETC 'DS'                                         01355900
&ZOPV(&ZOPN)          SETC 'F'                                          01356000
&ZOPD(&ZOPN)          SETC '++ &ZXVECTORINDEX  XVECTORINDEX'            01356100
.*-------------------------------------------------------------------   01356200
.***AM.L09  XLISTNUMLM F                                                01356300
&ZOPN                 SETA &ZOPN+1                                      01356400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMLM'                       01356500
&ZOPO(&ZOPN)          SETC 'DS'                                         01356600
&ZOPV(&ZOPN)          SETC 'F'                                          01356700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XLISTNUMLM'                 01356800
.*-------------------------------------------------------------------   01356900
.***AM.LVER1                                                            01357000
                      AIF  (&XPLISTVER LT 2).ZL172L                     01357100
.*-------------------------------------------------------------------   01357200
.*-------------------------------------------------------------------   01357300
.***AM.L09  XRSV36LM CL28                                               01357400
&ZOPN                 SETA &ZOPN+1                                      01357500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV36LM'                         01357600
&ZOPO(&ZOPN)          SETC 'DS'                                         01357700
&ZOPV(&ZOPN)          SETC 'CL28'                                       01357800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV36LM'                      01357900
.*-------------------------------------------------------------------   01358000
.***AM.LVER2                                                            01358100
.ZL172L               ANOP  ,                                           01358200
.*-------------------------------------------------------------------   01358300
.*-------------------------------------------------------------------   01358400
.***AM.LVER1                                                            01358500
                      AIF  (&XPLISTVER LT 2).ZL173L                     01358600
.*-------------------------------------------------------------------   01358700
.*-------------------------------------------------------------------   01358800
.***AM.L09  XENTRYKEYLM CL16                                            01358900
&ZOPN                 SETA &ZOPN+1                                      01359000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEYLM'                      01359100
&ZOPO(&ZOPN)          SETC 'DS'                                         01359200
&ZOPV(&ZOPN)          SETC 'CL16'                                       01359300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XENTRYKEYLM'                01359400
.*-------------------------------------------------------------------   01359500
.***AM.LVER2                                                            01359600
.ZL173L               ANOP  ,                                           01359700
.*-------------------------------------------------------------------   01359800
.*-------------------------------------------------------------------   01359900
.***AM.LVER1                                                            01360000
                      AIF  (&XPLISTVER LT 2).ZL174L                     01360100
.*-------------------------------------------------------------------   01360200
.*-------------------------------------------------------------------   01360300
.***AM.L09  XRSV80LM CL16                                               01360400
&ZOPN                 SETA &ZOPN+1                                      01360500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV80LM'                         01360600
&ZOPO(&ZOPN)          SETC 'DS'                                         01360700
&ZOPV(&ZOPN)          SETC 'CL16'                                       01360800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV80LM'                      01360900
.*-------------------------------------------------------------------   01361000
.***AM.LVER2                                                            01361100
.ZL174L               ANOP  ,                                           01361200
.*-------------------------------------------------------------------   01361300
.*-------------------------------------------------------------------   01361400
.***AM.LVER1                                                            01361500
                      AIF  (&XPLISTVER LT 2).ZL175L                     01361600
.*-------------------------------------------------------------------   01361700
.*-------------------------------------------------------------------   01361800
.***AM.L09  XSECONDARYKEYLM CL32                                        01361900
&ZOPN                 SETA &ZOPN+1                                      01362000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEYLM'                  01362100
&ZOPO(&ZOPN)          SETC 'DS'                                         01362200
&ZOPV(&ZOPN)          SETC 'CL32'                                       01362300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSECONDARYKEYLM'            01362400
.*-------------------------------------------------------------------   01362500
.***AM.LVER2                                                            01362600
.ZL175L               ANOP  ,                                           01362700
.*-------------------------------------------------------------------   01362800
.*-------------------------------------------------------------------   01362900
.***AM.LVER1                                                            01363000
                      AIF  (&XPLISTVER LT 2).ZL176L                     01363100
.*-------------------------------------------------------------------   01363200
.*-------------------------------------------------------------------   01363300
.***AM.L09  XRSV128LM CL32                                              01363400
&ZOPN                 SETA &ZOPN+1                                      01363500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV128LM'                        01363600
&ZOPO(&ZOPN)          SETC 'DS'                                         01363700
&ZOPV(&ZOPN)          SETC 'CL32'                                       01363800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV128LM'                     01363900
.*-------------------------------------------------------------------   01364000
.***AM.LVER2                                                            01364100
.ZL176L               ANOP  ,                                           01364200
.*-------------------------------------------------------------------   01364300
.*-------------------------------------------------------------------   01364400
.***AM.LVER1                                                            01364500
                      AIF  (&XPLISTVER LT 2).ZL177L                     01364600
.*-------------------------------------------------------------------   01364700
.*-------------------------------------------------------------------   01364800
.***AM.L09  XUNC CL16                                                   01364900
&ZOPN                 SETA &ZOPN+1                                      01365000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUNC'                             01365100
&ZOPO(&ZOPN)          SETC 'DS'                                         01365200
&ZOPV(&ZOPN)          SETC 'CL16'                                       01365300
&ZOPD(&ZOPN)          SETC '++ &ZXUNC  XUNC'                            01365400
.*-------------------------------------------------------------------   01365500
.***AM.LVER2                                                            01365600
.ZL177L               ANOP  ,                                           01365700
.*-------------------------------------------------------------------   01365800
.*-------------------------------------------------------------------   01365900
.***AM.LVER1                                                            01366000
                      AIF  (&XPLISTVER LT 3).ZL178L                     01366100
.*-------------------------------------------------------------------   01366200
.*-------------------------------------------------------------------   01366300
.***AM.L09  XRSV176LM CL4                                               01366400
&ZOPN                 SETA &ZOPN+1                                      01366500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV176LM'                        01366600
&ZOPO(&ZOPN)          SETC 'DS'                                         01366700
&ZOPV(&ZOPN)          SETC 'CL4'                                        01366800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV176LM'                     01366900
.*-------------------------------------------------------------------   01367000
.***AM.LVER2                                                            01367100
.ZL178L               ANOP  ,                                           01367200
.*-------------------------------------------------------------------   01367300
.*-------------------------------------------------------------------   01367400
.***AM.LVER1                                                            01367500
                      AIF  (&XPLISTVER LT 2).ZL179L                     01367600
.*-------------------------------------------------------------------   01367700
.*-------------------------------------------------------------------   01367800
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01367900
&ZOPN                 SETA &ZOPN+1                                      01368000
&ZOPL(&ZOPN)          SETC ' '                                          01368100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01368200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01368300
&ZOPD(&ZOPN)          SETC ' '                                          01368400
.*-------------------------------------------------------------------   01368500
.***AM.LVER2                                                            01368600
.ZL179L               ANOP  ,                                           01368700
.*-------------------------------------------------------------------   01368800
.*-------------------------------------------------------------------   01368900
.***AM.LVER1                                                            01369000
                      AIF  (&XPLISTVER LT 2).ZL180L                     01369100
.*-------------------------------------------------------------------   01369200
.*-------------------------------------------------------------------   01369300
.***AM.L09  XRSV16MS CL4                                                01369400
&ZOPN                 SETA &ZOPN+1                                      01369500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV16MS'                         01369600
&ZOPO(&ZOPN)          SETC 'DS'                                         01369700
&ZOPV(&ZOPN)          SETC 'CL4'                                        01369800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV16MS'                      01369900
.*-------------------------------------------------------------------   01370000
.***AM.LVER2                                                            01370100
.ZL180L               ANOP  ,                                           01370200
.*-------------------------------------------------------------------   01370300
.*-------------------------------------------------------------------   01370400
.***AM.LVER1                                                            01370500
                      AIF  (&XPLISTVER LT 2).ZL181L                     01370600
.*-------------------------------------------------------------------   01370700
.*-------------------------------------------------------------------   01370800
.***AM.L09  XRSV20MS CL2                                                01370900
&ZOPN                 SETA &ZOPN+1                                      01371000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV20MS'                         01371100
&ZOPO(&ZOPN)          SETC 'DS'                                         01371200
&ZOPV(&ZOPN)          SETC 'CL2'                                        01371300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV20MS'                      01371400
.*-------------------------------------------------------------------   01371500
.***AM.LVER2                                                            01371600
.ZL181L               ANOP  ,                                           01371700
.*-------------------------------------------------------------------   01371800
.*-------------------------------------------------------------------   01371900
.***AM.LVER1                                                            01372000
                      AIF  (&XPLISTVER LT 2).ZL182L                     01372100
.*-------------------------------------------------------------------   01372200
.*-------------------------------------------------------------------   01372300
.***AM.L03 XFL22MS BL.8                                                 01372400
&ZOPN                 SETA &ZOPN+1                                      01372500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFL22MS'                          01372600
&ZOPO(&ZOPN)          SETC 'DS'                                         01372700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01372800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01372900
.*-------------------------------------------------------------------   01373000
.***AM.LVER2                                                            01373100
.ZL182L               ANOP  ,                                           01373200
.*-------------------------------------------------------------------   01373300
.*-------------------------------------------------------------------   01373400
.***AM.LVER1                                                            01373500
                      AIF  (&XPLISTVER LT 2).ZL183L                     01373600
.*-------------------------------------------------------------------   01373700
.*                                                                      01373800
&ZOPN                 SETA  &ZOPN+1                                     01373900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MOSVECTOR'               01374000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01374100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01374200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01374300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MOSVECTOR'                    01374400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01374500
.*-------------------------------------------------------------------   01374600
.***AM.LVER2                                                            01374700
.ZL183L               ANOP  ,                                           01374800
.*-------------------------------------------------------------------   01374900
.*-------------------------------------------------------------------   01375000
.***AM.LVER1                                                            01375100
                      AIF  (&XPLISTVER LT 2).ZL184L                     01375200
.*-------------------------------------------------------------------   01375300
.*-------------------------------------------------------------------   01375400
.***AM.L09  XUIDMS XL1                                                  01375500
&ZOPN                 SETA &ZOPN+1                                      01375600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUIDMS'                           01375700
&ZOPO(&ZOPN)          SETC 'DS'                                         01375800
&ZOPV(&ZOPN)          SETC 'XL1'                                        01375900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUIDMS'                     01376000
.*-------------------------------------------------------------------   01376100
.***AM.LVER2                                                            01376200
.ZL184L               ANOP  ,                                           01376300
.*-------------------------------------------------------------------   01376400
.*-------------------------------------------------------------------   01376500
.***AM.LVER1                                                            01376600
                      AIF  (&XPLISTVER LT 2).ZL185L                     01376700
.*-------------------------------------------------------------------   01376800
.*-------------------------------------------------------------------   01376900
.***AM.L09  XSTARTINDEX XL2                                             01377000
&ZOPN                 SETA &ZOPN+1                                      01377100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTINDEX'                      01377200
&ZOPO(&ZOPN)          SETC 'DS'                                         01377300
&ZOPV(&ZOPN)          SETC 'XL2'                                        01377400
&ZOPD(&ZOPN)          SETC '++ &ZXSTARTINDEX  XSTARTINDEX'              01377500
.*-------------------------------------------------------------------   01377600
.***AM.LVER2                                                            01377700
.ZL185L               ANOP  ,                                           01377800
.*-------------------------------------------------------------------   01377900
.*-------------------------------------------------------------------   01378000
.***AM.LVER1                                                            01378100
                      AIF  (&XPLISTVER LT 2).ZL186L                     01378200
.*-------------------------------------------------------------------   01378300
.*-------------------------------------------------------------------   01378400
.***AM.L09  XENDINDEX XL2                                               01378500
&ZOPN                 SETA &ZOPN+1                                      01378600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDINDEX'                        01378700
&ZOPO(&ZOPN)          SETC 'DS'                                         01378800
&ZOPV(&ZOPN)          SETC 'XL2'                                        01378900
&ZOPD(&ZOPN)          SETC '++ &ZXENDINDEX  XENDINDEX'                  01379000
.*-------------------------------------------------------------------   01379100
.***AM.LVER2                                                            01379200
.ZL186L               ANOP  ,                                           01379300
.*-------------------------------------------------------------------   01379400
&ZOPN                 SETA &ZOPN+1                                      01379500
&ZOPL(&ZOPN)          SETC ' '                                          01379600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01379700
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01379800
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     01379900
.*-------------------------------------------------------------------   01380000
.***AM.L10 END OF IXLLSTC LIST PARAMETERS                               01380100
&ZOPN                 SETA &ZOPN+1                                      01380200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 01380300
&ZOPO(&ZOPN)          SETC 'EQU'                                        01380400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 01380500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         01380600
.*                                                                      01380700
&ZOPN                 SETA &ZOPN+1                                      01380800
&ZOPL(&ZOPN)          SETC ' '                                          01380900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      01381000
&ZOPV(&ZOPN)          SETC '1'                                          01381100
&ZOPD(&ZOPN)          SETC ' '                                          01381200
.*-------------------------------------------------------------------   01381300
.***AL.L12 IXLLSTC FMT=LIST MF=S|L PARAMETERS                           01381400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         01381500
.*                                                                      01381600
&ZOPN                 SETA  &ZOPN+1                                     01381700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01381800
&ZOPO(&ZOPN)          SETC  'DC'                                        01381900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01382000
&ZOPD(&ZOPN)          SETC  '++ IXLLSTC ARG PARMS'                      01382100
.*                                                                      01382200
.ZLMFSLX              ANOP  ,                                           01382300
.*-------------------------------------------------------------------   01382400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          01382500
&ZPLLEN               SETA 232                                          01382600
.*                                                                      01382700
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    01382800
&ZPLLEN               SETA 276                                          01382900
.ZLLEN2Z              ANOP  ,                                           01383000
.*                                                                      01383100
                      AIF  (&XPLISTVER LT 4).ZLLEN3Z                    01383200
&ZPLLEN               SETA 340                                          01383300
.ZLLEN3Z              ANOP  ,                                           01383400
.*                                                                      01383500
.******************************************************************     01383600
.***AI.L01 IXLLSTC FMT=LIST FILL IN PARAMETER AREA                      01383700
.******************************************************************     01383800
                      ACTR  10000                                       01383900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01384000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    01384100
&ZCVAL                SETC  'LAE'          XAX MODE                     01384200
.ZIMFXA               ANOP ,                                            01384300
.*                                                                      01384400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01384500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01384600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01384700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01384800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01384900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01385000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01385100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01385200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01385300
&ZOPN                 SETA  &ZOPN+1                                     01385400
&ZOPL(&ZOPN)          SETC  ' '                                         01385500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01385600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01385700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01385800
                      AGO   .ZIMFNX                                     01385900
.*                                                                      01386000
.ZIMFN2               ANOP ,                                            01386100
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     01386200
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     01386300
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  01386400
&ZOPN                 SETA  &ZOPN+1                                     01386500
&ZOPL(&ZOPN)          SETC  ' '                                         01386600
&ZOPO(&ZOPN)          SETC  'LAE'                                       01386700
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  01386800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01386900
                      AGO   .ZIMFNX                                     01387000
.ZIMFNX1              ANOP ,                                            01387100
&ZOPN                 SETA  &ZOPN+1                                     01387200
&ZOPL(&ZOPN)          SETC  ' '                                         01387300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01387400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01387500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01387600
.ZIMFNX               ANOP ,                                            01387700
.********************************************************************   01387800
.***AI.L02 IXLLSTC FMT=LIST INITIALIZE PARAMETER AREA                   01387900
.********************************************************************   01388000
.***AI.L03 MF=(SLE)                                                     01388100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01388200
&ZAWRK                SETA  0                                           01388300
&ZN                   SETA  &ZPLLEN                                     01388400
.ZCLRCONT             AIF   (&ZN LE 256).ZCLRX                          01388500
.*                                                                      01388600
&ZOPN                 SETA  &ZOPN+1                                     01388700
&ZOPL(&ZOPN)          SETC  ' '                                         01388800
&ZOPO(&ZOPN)          SETC  'XC'                                        01388900
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(256,1),&ZAWRK.(1)'                 01389000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01389100
.*                                                                      01389200
&ZAWRK                SETA &ZAWRK+256                                   01389300
&ZN                   SETA  &ZN-256                                     01389400
                      AGO   .ZCLRCONT                                   01389500
.*                                                                      01389600
.ZCLRX                ANOP  ,                                           01389700
.*                                                                      01389800
&ZOPN                 SETA  &ZOPN+1                                     01389900
&ZOPL(&ZOPN)          SETC  ' '                                         01390000
&ZOPO(&ZOPN)          SETC  'XC'                                        01390100
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(&ZN,1),&ZAWRK.(1)'                 01390200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01390300
.ZIMFLX               ANOP  ,                                           01390400
.*-------------------------------------------------------------------   01390500
.***AI.LVER01                                                           01390600
                      AIF  (&XPLISTVER LT 1).ZI5Z                       01390700
.*-------------------------------------------------------------------   01390800
.***AI.LVER02                                                           01390900
.ZI5Z                 ANOP  ,                                           01391000
.*-------------------------------------------------------------------   01391100
.***AI.LVER01                                                           01391200
                      AIF  (&XPLISTVER LT 4).ZI6Z                       01391300
.*-------------------------------------------------------------------   01391400
.***AI.LVER02                                                           01391500
.ZI6Z                 ANOP  ,                                           01391600
.*-------------------------------------------------------------------   01391700
.***AI.LVER01                                                           01391800
                      AIF  (&XPLISTVER LT 1).ZI8Z                       01391900
.*-------------------------------------------------------------------   01392000
.***AI.LVER02                                                           01392100
.ZI8Z                 ANOP  ,                                           01392200
.*-------------------------------------------------------------------   01392300
.***AI.LVER01                                                           01392400
                      AIF  (&XPLISTVER LT 4).ZI10Z                      01392500
.*-------------------------------------------------------------------   01392600
.***AI.LVER02                                                           01392700
.ZI10Z                ANOP  ,                                           01392800
.*-------------------------------------------------------------------   01392900
.***AI.L04B XVERSION XL1                                                01393000
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    01393100
&ZOPN                 SETA  &ZOPN+1                                     01393200
&ZOPL(&ZOPN)          SETC  ' '                                         01393300
&ZOPO(&ZOPN)          SETC  'MVI'                                       01393400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           01393500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     01393600
.ZIMFVZ               ANOP  ,                                           01393700
.*-------------------------------------------------------------------   01393800
.***AI.L18  XBUFSTGKEY XL1                                              01393900
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').ZI17                    01394000
&ZXBUFSTGKEY          SETC  ''             RESET INPUT/OUTPUT           01394100
.ZI17                 ANOP  ,                                           01394200
.*-------------------------------------------------------------------   01394300
.***AI.L25  XBUFSTGKEY XL1                                              01394400
                      AIF   ('&ZXBUFSTGKEY' EQ '').ZI17E                01394500
                      AIF   ('&ZXBUFSTGKEY' EQ 'OUTPUT').ZI17E          01394600
&ZCGPR                SETC  '&XBUFSTGKEY'                               01394700
.*                                                                      01394800
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZI17B           01394900
&ZCGPR   SETC  '0('.'&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2).')'                01395000
                      AGO   .ZI17D                                      01395100
.ZI17B                ANOP  ,                                           01395200
.*                                                                      01395300
&ZC                   SETC  '&XBUFSTGKEY'(1,1)                          01395400
                      AIF   (T'&ZC NE 'N').ZI17D                        01395500
&ZC                   SETC  '&XBUFSTGKEY'                               01395600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI17D               01395700
&ZCGPR                SETC  '=BL1''&XBUFSTGKEY'''                       01395800
.*                                                                      01395900
.ZI17D                ANOP  ,                                           01396000
.*                                                                      01396100
&ZOPN                 SETA  &ZOPN+1                                     01396200
&ZOPL(&ZOPN)          SETC  ' '                                         01396300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01396400
&ZOPV(&ZOPN)          SETC  '9(1,1),&ZCGPR'                             01396500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSTGKEY XBUFSTGKEY'                01396600
.*                                                                      01396700
.ZI17E                ANOP  ,                                           01396800
.*-------------------------------------------------------------------   01396900
.***AI.L25  XANSLEN XL2                                                 01397000
                      AIF   ('&ZXANSLEN' EQ '').ZI18E                   01397100
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI18E             01397200
&ZCGPR                SETC  '&XANSLEN'                                  01397300
.*                                                                      01397400
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI18B              01397500
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      01397600
                      AGO   .ZI18D                                      01397700
.ZI18B                ANOP  ,                                           01397800
.*                                                                      01397900
&ZC                   SETC  '&XANSLEN'(1,1)                             01398000
                      AIF   (T'&ZC NE 'N').ZI18D                        01398100
&ZC                   SETC  '&XANSLEN'                                  01398200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI18D               01398300
&ZCGPR                SETC  '=AL2(&XANSLEN)'                            01398400
.*                                                                      01398500
.ZI18D                ANOP  ,                                           01398600
.*                                                                      01398700
&ZOPN                 SETA  &ZOPN+1                                     01398800
&ZOPL(&ZOPN)          SETC  ' '                                         01398900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01399000
&ZOPV(&ZOPN)          SETC  '10(2,1),&ZCGPR'                            01399100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      01399200
.*                                                                      01399300
.ZI18E                ANOP  ,                                           01399400
.*-------------------------------------------------------------------   01399500
.***AI.L25  XCONTOKEN CL16                                              01399600
                      AIF   ('&ZXCONTOKEN' EQ '').ZI19E                 01399700
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI19E           01399800
&ZCGPR                SETC  '&XCONTOKEN'                                01399900
.*                                                                      01400000
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI19B            01400100
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  01400200
.ZI19B                ANOP  ,                                           01400300
.*                                                                      01400400
&ZOPN                 SETA  &ZOPN+1                                     01400500
&ZOPL(&ZOPN)          SETC  ' '                                         01400600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01400700
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           01400800
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  01400900
.*                                                                      01401000
.ZI19E                ANOP  ,                                           01401100
.*-------------------------------------------------------------------   01401200
.***AI.L18  XREQDATA CL8                                                01401300
         AIF   ('&XREQDATA' NE 'NO_REQDATA').ZI23                       01401400
&ZXREQDATA            SETC  ''             RESET INPUT/OUTPUT           01401500
.ZI23                 ANOP  ,                                           01401600
.*-------------------------------------------------------------------   01401700
.***AI.L25  XREQDATA CL8                                                01401800
                      AIF   ('&ZXREQDATA' EQ '').ZI23E                  01401900
                      AIF   ('&ZXREQDATA' EQ 'OUTPUT').ZI23E            01402000
&ZCGPR                SETC  '&XREQDATA'                                 01402100
.*                                                                      01402200
                      AIF   ('&XREQDATA'(1,1) NE '(').ZI23B             01402300
&ZCGPR   SETC  '0('.'&XREQDATA'(2,K'&XREQDATA-2).')'                    01402400
.ZI23B                ANOP  ,                                           01402500
.*                                                                      01402600
&ZOPN                 SETA  &ZOPN+1                                     01402700
&ZOPL(&ZOPN)          SETC  ' '                                         01402800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01402900
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            01403000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQDATA XREQDATA'                    01403100
.*                                                                      01403200
.ZI23E                ANOP  ,                                           01403300
.*-------------------------------------------------------------------   01403400
.***AI.L18  XREQID CL8                                                  01403500
         AIF   ('&XREQID' NE 'NO_REQID').ZI24                           01403600
&ZXREQID              SETC  ''             RESET INPUT/OUTPUT           01403700
.ZI24                 ANOP  ,                                           01403800
.*-------------------------------------------------------------------   01403900
.***AI.L25  XREQID CL8                                                  01404000
                      AIF   ('&ZXREQID' EQ '').ZI24E                    01404100
                      AIF   ('&ZXREQID' EQ 'OUTPUT').ZI24E              01404200
&ZCGPR                SETC  '&XREQID'                                   01404300
.*                                                                      01404400
                      AIF   ('&XREQID'(1,1) NE '(').ZI24B               01404500
&ZCGPR   SETC  '0('.'&XREQID'(2,K'&XREQID-2).')'                        01404600
.ZI24B                ANOP  ,                                           01404700
.*                                                                      01404800
&ZOPN                 SETA  &ZOPN+1                                     01404900
&ZOPL(&ZOPN)          SETC  ' '                                         01405000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01405100
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            01405200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQID XREQID'                        01405300
.*                                                                      01405400
.ZI24E                ANOP  ,                                           01405500
.*-------------------------------------------------------------------   01405600
.***AI.L18  XLOCKDATA CL8                                               01405700
         AIF   ('&XLOCKDATA' NE 'NO_LOCKDATA').ZI25                     01405800
&ZXLOCKDATA           SETC  ''             RESET INPUT/OUTPUT           01405900
.ZI25                 ANOP  ,                                           01406000
.*-------------------------------------------------------------------   01406100
.***AI.L25  XLOCKDATA CL8                                               01406200
                      AIF   ('&ZXLOCKDATA' EQ '').ZI25E                 01406300
                      AIF   ('&ZXLOCKDATA' EQ 'OUTPUT').ZI25E           01406400
&ZCGPR                SETC  '&XLOCKDATA'                                01406500
.*                                                                      01406600
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZI25B            01406700
&ZCGPR   SETC  '0('.'&XLOCKDATA'(2,K'&XLOCKDATA-2).')'                  01406800
.ZI25B                ANOP  ,                                           01406900
.*                                                                      01407000
&ZOPN                 SETA  &ZOPN+1                                     01407100
&ZOPL(&ZOPN)          SETC  ' '                                         01407200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01407300
&ZOPV(&ZOPN)          SETC  '72(8,1),&ZCGPR'                            01407400
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKDATA XLOCKDATA'                  01407500
.*                                                                      01407600
.ZI25E                ANOP  ,                                           01407700
.*-------------------------------------------------------------------   01407800
.***AI.L05 XSHLFLGS1 BL1                                                01407900
&ZW                   SETC  ''                                          01408000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01408100
.*-------------------------------------------------------------------   01408200
.***AI.L08 XSHLFLGS1 "BUFFER"                                           01408300
.***      BL1'1XXXXXXX'                                                 01408400
         AIF   ('&BUFFER' EQ '').ZI31A                                  01408500
         AIF   ('&BUFFER' EQ 'NO_LOCKDATA').ZI31A                       01408600
&ZW                   SETC  '&ZW.1'                                     01408700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01408800
                      AGO   .ZI31C                                      01408900
.*                                                                      01409000
.ZI31A                ANOP  ,                                           01409100
&ZW                   SETC  '&ZW.0'                                     01409200
.ZI31C                ANOP  ,                                           01409300
.*-------------------------------------------------------------------   01409400
.***AI.L08 XSHLFLGS1 "BUFLIST"                                          01409500
.***      BL1'X1XXXXXX'                                                 01409600
         AIF   ('&BUFLIST' EQ '').ZI32A                                 01409700
         AIF   ('&BUFLIST' EQ 'NO_LOCKDATA').ZI32A                      01409800
&ZW                   SETC  '&ZW.1'                                     01409900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01410000
                      AGO   .ZI32C                                      01410100
.*                                                                      01410200
.ZI32A                ANOP  ,                                           01410300
&ZW                   SETC  '&ZW.0'                                     01410400
.ZI32C                ANOP  ,                                           01410500
.*-------------------------------------------------------------------   01410600
.***AI.L08 XSHLFLGS1 "ANSAREA"                                          01410700
.***      BL1'XXX1XXXX'                                                 01410800
         AIF   ('&ANSAREA' EQ '').ZI33A                                 01410900
&ZW                   SETC  '&ZW.01'                                    01411000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01411100
                      AGO   .ZI33C                                      01411200
.*                                                                      01411300
.ZI33A                ANOP  ,                                           01411400
&ZW                   SETC  '&ZW.00'                                    01411500
.ZI33C                ANOP  ,                                           01411600
.*-------------------------------------------------------------------   01411700
.***AI.L08 XSHLFLGS1 "NO"                                               01411800
.***      BL1'XXXX1XXX'                                                 01411900
         AIF   ('&XPAGEABLE' NE 'NO').ZI34A                             01412000
&ZW                   SETC  '&ZW.1'                                     01412100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01412200
                      AGO   .ZI34C                                      01412300
.*                                                                      01412400
.ZI34A                ANOP  ,                                           01412500
&ZW                   SETC  '&ZW.0'                                     01412600
.ZI34C                ANOP  ,                                           01412700
.*-------------------------------------------------------------------   01412800
.***AI.L08 XSHLFLGS1 "BUFSTGKEY"                                        01412900
.***      BL1'XXXXX1XX'                                                 01413000
         AIF   ('&BUFSTGKEY' EQ '').ZI35A                               01413100
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01413200
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01413300
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01413400
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01413500
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01413600
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    01413700
&ZW                   SETC  '&ZW.1'                                     01413800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01413900
                      AGO   .ZI35C                                      01414000
.*                                                                      01414100
.ZI35A                ANOP  ,                                           01414200
&ZW                   SETC  '&ZW.0'                                     01414300
.ZI35C                ANOP  ,                                           01414400
.*-------------------------------------------------------------------   01414500
.***AI.L08 XSHLFLGS1 "REAL"                                             01414600
.***      BL1'XXXXXX1X'                                                 01414700
         AIF   ('&XBUFADDRTYPE' NE 'REAL').ZI36A                        01414800
&ZW                   SETC  '&ZW.10'                                    01414900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01415000
                      AGO   .ZI36C                                      01415100
.*                                                                      01415200
.ZI36A                ANOP  ,                                           01415300
&ZW                   SETC  '&ZW.00'                                    01415400
.ZI36C                ANOP  ,                                           01415500
.*-------------------------------------------------------------------   01415600
.***AI.L11 XSHLFLGS1 BL1                                                01415700
                      AIF   ('&ZCLNG' NE 'YES').ZI36E  ALL ZERO BITS    01415800
&ZOPN                 SETA  &ZOPN+1                                     01415900
&ZOPL(&ZOPN)          SETC  ' '                                         01416000
&ZOPO(&ZOPN)          SETC  'OI'                                        01416100
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             01416200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01416300
.ZI36E                ANOP  ,                                           01416400
.*-------------------------------------------------------------------   01416500
.***AI.L05 XSHLFLGS2 BL1                                                01416600
&ZW                   SETC  ''                                          01416700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01416800
.*-------------------------------------------------------------------   01416900
.***AI.L08 XSHLFLGS2 "SYNCECB"                                          01417000
.***      BL1'1XXXXXXX'                                                 01417100
         AIF   ('&XMODE' NE 'SYNCECB').ZI38A                            01417200
&ZW                   SETC  '&ZW.1'                                     01417300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01417400
                      AGO   .ZI38C                                      01417500
.*                                                                      01417600
.ZI38A                ANOP  ,                                           01417700
&ZW                   SETC  '&ZW.0'                                     01417800
.ZI38C                ANOP  ,                                           01417900
.*-------------------------------------------------------------------   01418000
.***AI.L08 XSHLFLGS2 "SYNCEXIT"                                         01418100
.***      BL1'X1XXXXXX'                                                 01418200
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI39A                           01418300
&ZW                   SETC  '&ZW.1'                                     01418400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01418500
                      AGO   .ZI39C                                      01418600
.*                                                                      01418700
.ZI39A                ANOP  ,                                           01418800
&ZW                   SETC  '&ZW.0'                                     01418900
.ZI39C                ANOP  ,                                           01419000
.*-------------------------------------------------------------------   01419100
.***AI.L08 XSHLFLGS2 "SYNCTOKEN"                                        01419200
.***      BL1'XX1XXXXX'                                                 01419300
         AIF   ('&XMODE' NE 'SYNCTOKEN').ZI40A                          01419400
&ZW                   SETC  '&ZW.1'                                     01419500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01419600
                      AGO   .ZI40C                                      01419700
.*                                                                      01419800
.ZI40A                ANOP  ,                                           01419900
&ZW                   SETC  '&ZW.0'                                     01420000
.ZI40C                ANOP  ,                                           01420100
.*-------------------------------------------------------------------   01420200
.***AI.L08 XSHLFLGS2 "ASYNCECB"                                         01420300
.***      BL1'XXX1XXXX'                                                 01420400
         AIF   ('&XMODE' NE 'ASYNCECB').ZI41A                           01420500
&ZW                   SETC  '&ZW.1'                                     01420600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01420700
                      AGO   .ZI41C                                      01420800
.*                                                                      01420900
.ZI41A                ANOP  ,                                           01421000
&ZW                   SETC  '&ZW.0'                                     01421100
.ZI41C                ANOP  ,                                           01421200
.*-------------------------------------------------------------------   01421300
.***AI.L08 XSHLFLGS2 "ASYNCEXIT"                                        01421400
.***      BL1'XXXX1XXX'                                                 01421500
         AIF   ('&XMODE' NE 'ASYNCEXIT').ZI42A                          01421600
&ZW                   SETC  '&ZW.1'                                     01421700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01421800
                      AGO   .ZI42C                                      01421900
.*                                                                      01422000
.ZI42A                ANOP  ,                                           01422100
&ZW                   SETC  '&ZW.0'                                     01422200
.ZI42C                ANOP  ,                                           01422300
.*-------------------------------------------------------------------   01422400
.***AI.L08 XSHLFLGS2 "ASYNCTOKEN"                                       01422500
.***      BL1'XXXXX1XX'                                                 01422600
         AIF   ('&XMODE' NE 'ASYNCTOKEN').ZI43A                         01422700
&ZW                   SETC  '&ZW.1'                                     01422800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01422900
                      AGO   .ZI43C                                      01423000
.*                                                                      01423100
.ZI43A                ANOP  ,                                           01423200
&ZW                   SETC  '&ZW.0'                                     01423300
.ZI43C                ANOP  ,                                           01423400
.*-------------------------------------------------------------------   01423500
.***AI.L08 XSHLFLGS2 "ASYNCNORESPONSE"                                  01423600
.***      BL1'XXXXXX1X'                                                 01423700
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ZI44A                    01423800
&ZW                   SETC  '&ZW.10'                                    01423900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01424000
                      AGO   .ZI44C                                      01424100
.*                                                                      01424200
.ZI44A                ANOP  ,                                           01424300
&ZW                   SETC  '&ZW.00'                                    01424400
.ZI44C                ANOP  ,                                           01424500
.*-------------------------------------------------------------------   01424600
.***AI.L11 XSHLFLGS2 BL1                                                01424700
                      AIF   ('&ZCLNG' NE 'YES').ZI44E  ALL ZERO BITS    01424800
&ZOPN                 SETA  &ZOPN+1                                     01424900
&ZOPL(&ZOPN)          SETC  ' '                                         01425000
&ZOPO(&ZOPN)          SETC  'OI'                                        01425100
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             01425200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01425300
.ZI44E                ANOP  ,                                           01425400
.*-------------------------------------------------------------------   01425500
.***AI.L05 XSHLFLGS3 BL1                                                01425600
&ZW                   SETC  ''                                          01425700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01425800
.*-------------------------------------------------------------------   01425900
.***AI.L08 XSHLFLGS3 "SET"                                              01426000
.***      BL1'1XXXXXXX'                                                 01426100
         AIF   ('&XLOCKOPER' NE 'SET').ZI46A                            01426200
&ZW                   SETC  '&ZW.1'                                     01426300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01426400
                      AGO   .ZI46C                                      01426500
.*                                                                      01426600
.ZI46A                ANOP  ,                                           01426700
&ZW                   SETC  '&ZW.0'                                     01426800
.ZI46C                ANOP  ,                                           01426900
.*-------------------------------------------------------------------   01427000
.***AI.L08 XSHLFLGS3 "RESET"                                            01427100
.***      BL1'X1XXXXXX'                                                 01427200
         AIF   ('&XLOCKOPER' NE 'RESET').ZI47A                          01427300
&ZW                   SETC  '&ZW.1'                                     01427400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01427500
                      AGO   .ZI47C                                      01427600
.*                                                                      01427700
.ZI47A                ANOP  ,                                           01427800
&ZW                   SETC  '&ZW.0'                                     01427900
.ZI47C                ANOP  ,                                           01428000
.*-------------------------------------------------------------------   01428100
.***AI.L08 XSHLFLGS3 "TEST"                                             01428200
.***      BL1'XXXX1XXX'                                                 01428300
         AIF   ('&XLOCKOPER' NE 'TEST').ZI48A                           01428400
&ZW                   SETC  '&ZW.001'                                   01428500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01428600
                      AGO   .ZI48C                                      01428700
.*                                                                      01428800
.ZI48A                ANOP  ,                                           01428900
&ZW                   SETC  '&ZW.000'                                   01429000
.ZI48C                ANOP  ,                                           01429100
.*-------------------------------------------------------------------   01429200
.***AI.L08 XSHLFLGS3 "READNEXT"                                         01429300
.***      BL1'XXXXX1XX'                                                 01429400
         AIF   ('&XLOCKOPER' NE 'READNEXT').ZI49A                       01429500
&ZW                   SETC  '&ZW.1'                                     01429600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01429700
                      AGO   .ZI49C                                      01429800
.*                                                                      01429900
.ZI49A                ANOP  ,                                           01430000
&ZW                   SETC  '&ZW.0'                                     01430100
.ZI49C                ANOP  ,                                           01430200
.*-------------------------------------------------------------------   01430300
.***AI.L08 XSHLFLGS3 "COND"                                             01430400
.***      BL1'XXXXXX1X'                                                 01430500
         AIF   ('&XLOCKMODE' NE 'COND').ZI50A                           01430600
&ZW                   SETC  '&ZW.1'                                     01430700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01430800
                      AGO   .ZI50C                                      01430900
.*                                                                      01431000
.ZI50A                ANOP  ,                                           01431100
&ZW                   SETC  '&ZW.0'                                     01431200
.ZI50C                ANOP  ,                                           01431300
.*-------------------------------------------------------------------   01431400
.***AI.L08 XSHLFLGS3 "LOCKCOMP"                                         01431500
.***      BL1'XXXXXXX1'                                                 01431600
         AIF   ('&LOCKCOMP' EQ '').ZI51A                                01431700
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01431800
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01431900
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01432000
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI51A                     01432100
&ZW                   SETC  '&ZW.1'                                     01432200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01432300
                      AGO   .ZI51C                                      01432400
.*                                                                      01432500
.ZI51A                ANOP  ,                                           01432600
&ZW                   SETC  '&ZW.0'                                     01432700
.ZI51C                ANOP  ,                                           01432800
.*-------------------------------------------------------------------   01432900
.***AI.L11 XSHLFLGS3 BL1                                                01433000
                      AIF   ('&ZCLNG' NE 'YES').ZI51E  ALL ZERO BITS    01433100
&ZOPN                 SETA  &ZOPN+1                                     01433200
&ZOPL(&ZOPN)          SETC  ' '                                         01433300
&ZOPO(&ZOPN)          SETC  'OI'                                        01433400
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             01433500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01433600
.ZI51E                ANOP  ,                                           01433700
.*-------------------------------------------------------------------   01433800
.***AI.L05 XSHLFLGS4 BL1                                                01433900
&ZW                   SETC  ''                                          01434000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01434100
.*-------------------------------------------------------------------   01434200
.***AI.L08 XSHLFLGS4 "64"                                               01434300
.***      BL1'XXX1XXXX'                                                 01434400
         AIF   ('&XBUFADDRSIZE' NE '64').ZI53A                          01434500
&ZW                   SETC  '&ZW.0001'                                  01434600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01434700
                      AGO   .ZI53C                                      01434800
.*                                                                      01434900
.ZI53A                ANOP  ,                                           01435000
&ZW                   SETC  '&ZW.0000'                                  01435100
.ZI53C                ANOP  ,                                           01435200
.*-------------------------------------------------------------------   01435300
.***AI.L08 XSHLFLGS4 "LIST"                                             01435400
.***      BL1'XXXXXXX1'                                                 01435500
&ZW                   SETC  '&ZW.0000'                                  01435600
.*-------------------------------------------------------------------   01435700
.***AI.L11 XSHLFLGS4 BL1                                                01435800
                      AIF   ('&ZCLNG' NE 'YES').ZI54E  ALL ZERO BITS    01435900
&ZOPN                 SETA  &ZOPN+1                                     01436000
&ZOPL(&ZOPN)          SETC  ' '                                         01436100
&ZOPO(&ZOPN)          SETC  'OI'                                        01436200
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             01436300
&ZOPD(&ZOPN)          SETC  '++ 416 BL1'                                01436400
.ZI54E                ANOP  ,                                           01436500
.*-------------------------------------------------------------------   01436600
.***AI.L23 ALET XBUFFER F                                               01436700
         AIF   ('&ZXBUFFER' EQ '').ZI60G                                01436800
         AIF   ('&SYSASCE' EQ 'P').ZI60G   SYSSTATE PRIMARY             01436900
&ZCLNG                SETC  '&XBUFFER'                                  01437000
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI60E  IN AR                    01437100
.*                                                                      01437200
&ZCGPR                SETC  '14'                                        01437300
&ZOPN                 SETA  &ZOPN+1                                     01437400
&ZOPL(&ZOPN)          SETC  ' '                                         01437500
&ZOPO(&ZOPN)          SETC  'LAE'                                       01437600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01437700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01437800
                      AGO   .ZI60F                                      01437900
.*                                                                      01438000
.ZI60E                ANOP  ,                                           01438100
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01438200
.*                                                                      01438300
.ZI60F                ANOP  ,                                           01438400
.*                                                                      01438500
&ZOPN                 SETA  &ZOPN+1                                     01438600
&ZOPL(&ZOPN)          SETC  ' '                                         01438700
&ZOPO(&ZOPN)          SETC  'STAM'                                      01438800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,28(1)'                       01438900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01439000
.*                                                                      01439100
.ZI60G                ANOP  ,                                           01439200
.*-------------------------------------------------------------------   01439300
.***AI.L25  XBUFSIZE F                                                  01439400
                      AIF   ('&ZXBUFSIZE' EQ '').ZI61E                  01439500
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI61E            01439600
&ZCGPR                SETC  '&XBUFSIZE'                                 01439700
.*                                                                      01439800
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI61B             01439900
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    01440000
                      AGO   .ZI61D                                      01440100
.ZI61B                ANOP  ,                                           01440200
.*                                                                      01440300
&ZC                   SETC  '&XBUFSIZE'(1,1)                            01440400
                      AIF   (T'&ZC NE 'N').ZI61D                        01440500
&ZC                   SETC  '&XBUFSIZE'                                 01440600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI61D               01440700
&ZCGPR                SETC  '=AL4(&XBUFSIZE)'                           01440800
.*                                                                      01440900
.ZI61D                ANOP  ,                                           01441000
.*                                                                      01441100
&ZOPN                 SETA  &ZOPN+1                                     01441200
&ZOPL(&ZOPN)          SETC  ' '                                         01441300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01441400
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            01441500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    01441600
.*                                                                      01441700
.ZI61E                ANOP  ,                                           01441800
.*-------------------------------------------------------------------   01441900
.***AI.L19  XBUFFER A                                                   01442000
                      AIF   ('&ZXBUFFER' EQ '').ZI62H                   01442100
&ZCLNG                SETC  '&XBUFFER'                                  01442200
&ZCGPR                SETC  '14'                                        01442300
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI62F  IN GPR                   01442400
.*                                                                      01442500
&ZOPN                 SETA  &ZOPN+1                                     01442600
&ZOPL(&ZOPN)          SETC  ' '                                         01442700
&ZOPO(&ZOPN)          SETC  'LA'                                        01442800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01442900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01443000
.*                                                                      01443100
                      AGO   .ZI62G                                      01443200
.*                                                                      01443300
.ZI62F                ANOP  ,                                           01443400
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01443500
.*                                                                      01443600
.ZI62G                ANOP  ,                                           01443700
.*                                                                      01443800
&ZOPN                 SETA  &ZOPN+1                                     01443900
&ZOPL(&ZOPN)          SETC  ' '                                         01444000
&ZOPO(&ZOPN)          SETC  'ST'                                        01444100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01444200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01444300
.*                                                                      01444400
.ZI62H                ANOP  ,                                           01444500
.*-------------------------------------------------------------------   01444600
.***AI.L18  XBUFALET F                                                  01444700
         AIF   ('&XBUFALET' NE 'NO_BUFALET').ZI64                       01444800
&ZXBUFALET            SETC  ''             RESET INPUT/OUTPUT           01444900
.ZI64                 ANOP  ,                                           01445000
.*-------------------------------------------------------------------   01445100
.***AI.L25  XBUFALET F                                                  01445200
                      AIF   ('&ZXBUFALET' EQ '').ZI64E                  01445300
                      AIF   ('&ZXBUFALET' EQ 'OUTPUT').ZI64E            01445400
&ZCGPR                SETC  '&XBUFALET'                                 01445500
.*                                                                      01445600
                      AIF   ('&XBUFALET'(1,1) NE '(').ZI64B             01445700
&ZCGPR   SETC  '0('.'&XBUFALET'(2,K'&XBUFALET-2).')'                    01445800
                      AGO   .ZI64D                                      01445900
.ZI64B                ANOP  ,                                           01446000
.*                                                                      01446100
&ZC                   SETC  '&XBUFALET'(1,1)                            01446200
                      AIF   (T'&ZC NE 'N').ZI64D                        01446300
&ZC                   SETC  '&XBUFALET'                                 01446400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI64D               01446500
&ZCGPR                SETC  '=AL4(&XBUFALET)'                           01446600
.*                                                                      01446700
.ZI64D                ANOP  ,                                           01446800
.*                                                                      01446900
&ZOPN                 SETA  &ZOPN+1                                     01447000
&ZOPL(&ZOPN)          SETC  ' '                                         01447100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01447200
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            01447300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFALET XBUFALET'                    01447400
.*                                                                      01447500
.ZI64E                ANOP  ,                                           01447600
.*-------------------------------------------------------------------   01447700
.***AI.L23 ALET XBUFLIST F                                              01447800
         AIF   ('&ZXBUFLIST' EQ '').ZI65G                               01447900
         AIF   ('&SYSASCE' EQ 'P').ZI65G   SYSSTATE PRIMARY             01448000
&ZCLNG                SETC  '&XBUFLIST'                                 01448100
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI65E  IN AR                   01448200
.*                                                                      01448300
&ZCGPR                SETC  '14'                                        01448400
&ZOPN                 SETA  &ZOPN+1                                     01448500
&ZOPL(&ZOPN)          SETC  ' '                                         01448600
&ZOPO(&ZOPN)          SETC  'LAE'                                       01448700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01448800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01448900
                      AGO   .ZI65F                                      01449000
.*                                                                      01449100
.ZI65E                ANOP  ,                                           01449200
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01449300
.*                                                                      01449400
.ZI65F                ANOP  ,                                           01449500
.*                                                                      01449600
&ZOPN                 SETA  &ZOPN+1                                     01449700
&ZOPL(&ZOPN)          SETC  ' '                                         01449800
&ZOPO(&ZOPN)          SETC  'STAM'                                      01449900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,32(1)'                       01450000
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01450100
.*                                                                      01450200
.ZI65G                ANOP  ,                                           01450300
.*-------------------------------------------------------------------   01450400
.***AI.L19  XBUFLIST A                                                  01450500
                      AIF   ('&ZXBUFLIST' EQ '').ZI66H                  01450600
&ZCLNG                SETC  '&XBUFLIST'                                 01450700
&ZCGPR                SETC  '14'                                        01450800
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI66F  IN GPR                  01450900
         AIF   ('&SYSASCE' NE 'P').ZI66G   SYSSTATE PRIMARY             01451000
.*                                                                      01451100
&ZOPN                 SETA  &ZOPN+1                                     01451200
&ZOPL(&ZOPN)          SETC  ' '                                         01451300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01451400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01451500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01451600
.*                                                                      01451700
                      AGO   .ZI66G                                      01451800
.*                                                                      01451900
.ZI66F                ANOP  ,                                           01452000
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01452100
.*                                                                      01452200
.ZI66G                ANOP  ,                                           01452300
.*                                                                      01452400
&ZOPN                 SETA  &ZOPN+1                                     01452500
&ZOPL(&ZOPN)          SETC  ' '                                         01452600
&ZOPO(&ZOPN)          SETC  'ST'                                        01452700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01452800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01452900
.*                                                                      01453000
.ZI66H                ANOP  ,                                           01453100
.*-------------------------------------------------------------------   01453200
.***AI.L23 ALET XMOSVECTOR F                                            01453300
         AIF   ('&ZXMOSVECTOR' EQ '').ZI68G                             01453400
         AIF   ('&SYSASCE' EQ 'P').ZI68G   SYSSTATE PRIMARY             01453500
&ZCLNG                SETC  '&XMOSVECTOR'                               01453600
         AIF   ('&XMOSVECTOR'(1,1) EQ '(').ZI68E  IN AR                 01453700
.*                                                                      01453800
&ZCGPR                SETC  '14'                                        01453900
&ZOPN                 SETA  &ZOPN+1                                     01454000
&ZOPL(&ZOPN)          SETC  ' '                                         01454100
&ZOPO(&ZOPN)          SETC  'LAE'                                       01454200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01454300
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01454400
                      AGO   .ZI68F                                      01454500
.*                                                                      01454600
.ZI68E                ANOP  ,                                           01454700
&ZCGPR   SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)                         01454800
.*                                                                      01454900
.ZI68F                ANOP  ,                                           01455000
.*                                                                      01455100
&ZOPN                 SETA  &ZOPN+1                                     01455200
&ZOPL(&ZOPN)          SETC  ' '                                         01455300
&ZOPO(&ZOPN)          SETC  'STAM'                                      01455400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01455500
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01455600
.*                                                                      01455700
.ZI68G                ANOP  ,                                           01455800
.*-------------------------------------------------------------------   01455900
.***AI.L19  XMOSVECTOR A                                                01456000
                      AIF   ('&ZXMOSVECTOR' EQ '').ZI69H                01456100
&ZCLNG                SETC  '&XMOSVECTOR'                               01456200
&ZCGPR                SETC  '14'                                        01456300
         AIF   ('&XMOSVECTOR'(1,1) EQ '(').ZI69F  IN GPR                01456400
         AIF   ('&SYSASCE' NE 'P').ZI69G   SYSSTATE PRIMARY             01456500
.*                                                                      01456600
&ZOPN                 SETA  &ZOPN+1                                     01456700
&ZOPL(&ZOPN)          SETC  ' '                                         01456800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01456900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01457000
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01457100
.*                                                                      01457200
                      AGO   .ZI69G                                      01457300
.*                                                                      01457400
.ZI69F                ANOP  ,                                           01457500
&ZCGPR   SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)                         01457600
.*                                                                      01457700
.ZI69G                ANOP  ,                                           01457800
.*                                                                      01457900
&ZOPN                 SETA  &ZOPN+1                                     01458000
&ZOPL(&ZOPN)          SETC  ' '                                         01458100
&ZOPO(&ZOPN)          SETC  'ST'                                        01458200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01458300
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01458400
.*                                                                      01458500
.ZI69H                ANOP  ,                                           01458600
.*-------------------------------------------------------------------   01458700
.***AI.L23 ALET XANSAREA F                                              01458800
         AIF   ('&ZXANSAREA' EQ '').ZI71G                               01458900
         AIF   ('&SYSASCE' EQ 'P').ZI71G   SYSSTATE PRIMARY             01459000
&ZCLNG                SETC  '&XANSAREA'                                 01459100
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI71E  IN AR                   01459200
.*                                                                      01459300
&ZCGPR                SETC  '14'                                        01459400
&ZOPN                 SETA  &ZOPN+1                                     01459500
&ZOPL(&ZOPN)          SETC  ' '                                         01459600
&ZOPO(&ZOPN)          SETC  'LAE'                                       01459700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01459800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01459900
                      AGO   .ZI71F                                      01460000
.*                                                                      01460100
.ZI71E                ANOP  ,                                           01460200
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01460300
.*                                                                      01460400
.ZI71F                ANOP  ,                                           01460500
.*                                                                      01460600
&ZOPN                 SETA  &ZOPN+1                                     01460700
&ZOPL(&ZOPN)          SETC  ' '                                         01460800
&ZOPO(&ZOPN)          SETC  'STAM'                                      01460900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       01461000
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01461100
.*                                                                      01461200
.ZI71G                ANOP  ,                                           01461300
.*-------------------------------------------------------------------   01461400
.***AI.L19  XANSAREA A                                                  01461500
                      AIF   ('&ZXANSAREA' EQ '').ZI72H                  01461600
&ZCLNG                SETC  '&XANSAREA'                                 01461700
&ZCGPR                SETC  '14'                                        01461800
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI72F  IN GPR                  01461900
         AIF   ('&SYSASCE' NE 'P').ZI72G   SYSSTATE PRIMARY             01462000
.*                                                                      01462100
&ZOPN                 SETA  &ZOPN+1                                     01462200
&ZOPL(&ZOPN)          SETC  ' '                                         01462300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01462400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01462500
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01462600
.*                                                                      01462700
                      AGO   .ZI72G                                      01462800
.*                                                                      01462900
.ZI72F                ANOP  ,                                           01463000
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01463100
.*                                                                      01463200
.ZI72G                ANOP  ,                                           01463300
.*                                                                      01463400
&ZOPN                 SETA  &ZOPN+1                                     01463500
&ZOPL(&ZOPN)          SETC  ' '                                         01463600
&ZOPO(&ZOPN)          SETC  'ST'                                        01463700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             01463800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01463900
.*                                                                      01464000
.ZI72H                ANOP  ,                                           01464100
.*-------------------------------------------------------------------   01464200
.***AI.L25  XREQECB AL4                                                 01464300
                      AIF   ('&ZXREQECB' EQ '').ZI74E                   01464400
                      AIF   ('&ZXREQECB' EQ 'OUTPUT').ZI74E             01464500
&ZCGPR                SETC  '&XREQECB'                                  01464600
.*                                                                      01464700
                      AIF   ('&XREQECB'(1,1) NE '(').ZI74B              01464800
&ZCGPR   SETC  '0('.'&XREQECB'(2,K'&XREQECB-2).')'                      01464900
                      AGO   .ZI74D                                      01465000
.ZI74B                ANOP  ,                                           01465100
.*                                                                      01465200
&ZC                   SETC  '&XREQECB'(1,1)                             01465300
                      AIF   (T'&ZC NE 'N').ZI74D                        01465400
&ZC                   SETC  '&XREQECB'                                  01465500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI74D               01465600
&ZCGPR                SETC  '=AL4(&XREQECB)'                            01465700
.*                                                                      01465800
.ZI74D                ANOP  ,                                           01465900
.*                                                                      01466000
&ZOPN                 SETA  &ZOPN+1                                     01466100
&ZOPL(&ZOPN)          SETC  ' '                                         01466200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01466300
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            01466400
&ZOPD(&ZOPN)          SETC  '++ &ZXREQECB XREQECB'                      01466500
.*                                                                      01466600
.ZI74E                ANOP  ,                                           01466700
.*-------------------------------------------------------------------   01466800
.***AI.L23 ALET XREQTOKEN F                                             01466900
         AIF   ('&ZXREQTOKEN' EQ '').ZI77G                              01467000
         AIF   ('&SYSASCE' EQ 'P').ZI77G   SYSSTATE PRIMARY             01467100
&ZCLNG                SETC  '&XREQTOKEN'                                01467200
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI77E  IN AR                  01467300
.*                                                                      01467400
&ZCGPR                SETC  '14'                                        01467500
&ZOPN                 SETA  &ZOPN+1                                     01467600
&ZOPL(&ZOPN)          SETC  ' '                                         01467700
&ZOPO(&ZOPN)          SETC  'LAE'                                       01467800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01467900
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01468000
                      AGO   .ZI77F                                      01468100
.*                                                                      01468200
.ZI77E                ANOP  ,                                           01468300
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01468400
.*                                                                      01468500
.ZI77F                ANOP  ,                                           01468600
.*                                                                      01468700
&ZOPN                 SETA  &ZOPN+1                                     01468800
&ZOPL(&ZOPN)          SETC  ' '                                         01468900
&ZOPO(&ZOPN)          SETC  'STAM'                                      01469000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       01469100
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01469200
.*                                                                      01469300
.ZI77G                ANOP  ,                                           01469400
.*-------------------------------------------------------------------   01469500
.***AI.L19  XREQTOKEN A                                                 01469600
                      AIF   ('&ZXREQTOKEN' EQ '').ZI78H                 01469700
&ZCLNG                SETC  '&XREQTOKEN'                                01469800
&ZCGPR                SETC  '14'                                        01469900
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI78F  IN GPR                 01470000
         AIF   ('&SYSASCE' NE 'P').ZI78G   SYSSTATE PRIMARY             01470100
.*                                                                      01470200
&ZOPN                 SETA  &ZOPN+1                                     01470300
&ZOPL(&ZOPN)          SETC  ' '                                         01470400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01470500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01470600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01470700
.*                                                                      01470800
                      AGO   .ZI78G                                      01470900
.*                                                                      01471000
.ZI78F                ANOP  ,                                           01471100
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01471200
.*                                                                      01471300
.ZI78G                ANOP  ,                                           01471400
.*                                                                      01471500
&ZOPN                 SETA  &ZOPN+1                                     01471600
&ZOPL(&ZOPN)          SETC  ' '                                         01471700
&ZOPO(&ZOPN)          SETC  'ST'                                        01471800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             01471900
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01472000
.*                                                                      01472100
.ZI78H                ANOP  ,                                           01472200
.*-------------------------------------------------------------------   01472300
.***AI.L05 XSHLFLGSA1 BL1                                               01472400
&ZW                   SETC  ''                                          01472500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01472600
.*-------------------------------------------------------------------   01472700
.***AI.L08 XSHLFLGSA1 "IXLLSTC"                                         01472800
.***      BL1'1XXXXXXX'                                                 01472900
&ZW                   SETC  '&ZW.1'                                     01473000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01473100
.*-------------------------------------------------------------------   01473200
.***AI.L08 XSHLFLGSA1 "IXLLSTE"                                         01473300
.***      BL1'X1XXXXXX'                                                 01473400
&ZW                   SETC  '&ZW.0'                                     01473500
.*-------------------------------------------------------------------   01473600
.***AI.L08 XSHLFLGSA1 "IXLLSTM"                                         01473700
.***      BL1'XX1XXXXX'                                                 01473800
&ZW                   SETC  '&ZW.000000'                                01473900
.*-------------------------------------------------------------------   01474000
.***AI.L11 XSHLFLGSA1 BL1                                               01474100
                      AIF   ('&ZCLNG' NE 'YES').ZI83E  ALL ZERO BITS    01474200
&ZOPN                 SETA  &ZOPN+1                                     01474300
&ZOPL(&ZOPN)          SETC  ' '                                         01474400
&ZOPO(&ZOPN)          SETC  'OI'                                        01474500
&ZOPV(&ZOPN)          SETC  '88(1),B''&ZW'''                            01474600
&ZOPD(&ZOPN)          SETC  '++ 416 BL1'                                01474700
.ZI83E                ANOP  ,                                           01474800
.*-------------------------------------------------------------------   01474900
.***AI.L25  XBUFNUM XL1                                                 01475000
                      AIF   ('&ZXBUFNUM' EQ '').ZI86E                   01475100
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI86E             01475200
&ZCGPR                SETC  '&XBUFNUM'                                  01475300
.*                                                                      01475400
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI86B              01475500
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      01475600
                      AGO   .ZI86D                                      01475700
.ZI86B                ANOP  ,                                           01475800
.*                                                                      01475900
&ZC                   SETC  '&XBUFNUM'(1,1)                             01476000
                      AIF   (T'&ZC NE 'N').ZI86D                        01476100
&ZC                   SETC  '&XBUFNUM'                                  01476200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI86D               01476300
&ZCGPR                SETC  '=AL1(&XBUFNUM)'                            01476400
.*                                                                      01476500
.ZI86D                ANOP  ,                                           01476600
.*                                                                      01476700
&ZOPN                 SETA  &ZOPN+1                                     01476800
&ZOPL(&ZOPN)          SETC  ' '                                         01476900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01477000
&ZOPV(&ZOPN)          SETC  '98(1,1),&ZCGPR'                            01477100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      01477200
.*                                                                      01477300
.ZI86E                ANOP  ,                                           01477400
.*-------------------------------------------------------------------   01477500
.***AI.L25  XBUFINCRNUM XL1                                             01477600
                      AIF   ('&ZXBUFINCRNUM' EQ '').ZI87E               01477700
                      AIF   ('&ZXBUFINCRNUM' EQ 'OUTPUT').ZI87E         01477800
&ZCGPR                SETC  '&XBUFINCRNUM'                              01477900
.*                                                                      01478000
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZI87B          01478100
&ZCGPR   SETC  '0('.'&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2).')'              01478200
                      AGO   .ZI87D                                      01478300
.ZI87B                ANOP  ,                                           01478400
.*                                                                      01478500
&ZC                   SETC  '&XBUFINCRNUM'(1,1)                         01478600
                      AIF   (T'&ZC NE 'N').ZI87D                        01478700
&ZC                   SETC  '&XBUFINCRNUM'                              01478800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI87D               01478900
&ZCGPR                SETC  '=AL1(&XBUFINCRNUM)'                        01479000
.*                                                                      01479100
.ZI87D                ANOP  ,                                           01479200
.*                                                                      01479300
&ZOPN                 SETA  &ZOPN+1                                     01479400
&ZOPL(&ZOPN)          SETC  ' '                                         01479500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01479600
&ZOPV(&ZOPN)          SETC  '99(1,1),&ZCGPR'                            01479700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFINCRNUM XBUFINCRNUM'              01479800
.*                                                                      01479900
.ZI87E                ANOP  ,                                           01480000
.*-------------------------------------------------------------------   01480100
.***AI.L05 XFL22 BL1                                                    01480200
&ZW                   SETC  ''                                          01480300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01480400
.*-------------------------------------------------------------------   01480500
.***AI.L08 XFL22 "SECONDARYKEY"                                         01480600
.***      BL1'1XXXXXXX'                                                 01480700
         AIF   ('&SECONDARYKEY' EQ '').ZI93A                            01480800
&ZW                   SETC  '&ZW.10000000'                              01480900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01481000
                      AGO   .ZI93C                                      01481100
.*                                                                      01481200
.ZI93A                ANOP  ,                                           01481300
&ZW                   SETC  '&ZW.00000000'                              01481400
.ZI93C                ANOP  ,                                           01481500
.*-------------------------------------------------------------------   01481600
.***AI.L11 XFL22 BL1                                                    01481700
                      AIF   ('&ZCLNG' NE 'YES').ZI93E  ALL ZERO BITS    01481800
&ZOPN                 SETA  &ZOPN+1                                     01481900
&ZOPL(&ZOPN)          SETC  ' '                                         01482000
&ZOPO(&ZOPN)          SETC  'OI'                                        01482100
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01482200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01482300
.ZI93E                ANOP  ,                                           01482400
.*-------------------------------------------------------------------   01482500
.***AI.L25  XLISTNUM F                                                  01482600
                      AIF   ('&ZXLISTNUM' EQ '').ZI96E                  01482700
                      AIF   ('&ZXLISTNUM' EQ 'OUTPUT').ZI96E            01482800
&ZCGPR                SETC  '&XLISTNUM'                                 01482900
.*                                                                      01483000
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZI96B             01483100
&ZCGPR   SETC  '0('.'&XLISTNUM'(2,K'&XLISTNUM-2).')'                    01483200
                      AGO   .ZI96D                                      01483300
.ZI96B                ANOP  ,                                           01483400
.*                                                                      01483500
&ZC                   SETC  '&XLISTNUM'(1,1)                            01483600
                      AIF   (T'&ZC NE 'N').ZI96D                        01483700
&ZC                   SETC  '&XLISTNUM'                                 01483800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI96D               01483900
&ZCGPR                SETC  '=AL4(&XLISTNUM)'                           01484000
.*                                                                      01484100
.ZI96D                ANOP  ,                                           01484200
.*                                                                      01484300
&ZOPN                 SETA  &ZOPN+1                                     01484400
&ZOPL(&ZOPN)          SETC  ' '                                         01484500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01484600
&ZOPV(&ZOPN)          SETC  '116(4,1),&ZCGPR'                           01484700
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUM XLISTNUM'                    01484800
.*                                                                      01484900
.ZI96E                ANOP  ,                                           01485000
.*-------------------------------------------------------------------   01485100
.***AI.L25  XENTRYKEY CL16                                              01485200
                      AIF   ('&ZXENTRYKEY' EQ '').ZI98E                 01485300
                      AIF   ('&ZXENTRYKEY' EQ 'OUTPUT').ZI98E           01485400
&ZCGPR                SETC  '&XENTRYKEY'                                01485500
.*                                                                      01485600
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZI98B            01485700
&ZCGPR   SETC  '0('.'&XENTRYKEY'(2,K'&XENTRYKEY-2).')'                  01485800
.ZI98B                ANOP  ,                                           01485900
.*                                                                      01486000
&ZOPN                 SETA  &ZOPN+1                                     01486100
&ZOPL(&ZOPN)          SETC  ' '                                         01486200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01486300
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          01486400
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYKEY XENTRYKEY'                  01486500
.*                                                                      01486600
.ZI98E                ANOP  ,                                           01486700
.*-------------------------------------------------------------------   01486800
.***AI.L25  XSECONDARYKEY CL32                                          01486900
                      AIF   ('&ZXSECONDARYKEY' EQ '').ZI100E            01487000
                      AIF   ('&ZXSECONDARYKEY' EQ 'OUTPUT').ZI100E      01487100
&ZCGPR                SETC  '&XSECONDARYKEY'                            01487200
.*                                                                      01487300
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZI100B       01487400
&ZCGPR   SETC  '0('.'&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2).')'          01487500
.ZI100B               ANOP  ,                                           01487600
.*                                                                      01487700
&ZOPN                 SETA  &ZOPN+1                                     01487800
&ZOPL(&ZOPN)          SETC  ' '                                         01487900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01488000
&ZOPV(&ZOPN)          SETC  '180(32,1),&ZCGPR'                          01488100
&ZOPD(&ZOPN)          SETC  '++ &ZXSECONDARYKEY XSECONDARYKEY'          01488200
.*                                                                      01488300
.ZI100E               ANOP  ,                                           01488400
.*-------------------------------------------------------------------   01488500
.***AI.LVER01                                                           01488600
                      AIF  (&XPLISTVER LT 4).ZI102Z                     01488700
.*-------------------------------------------------------------------   01488800
.***AI.L05 XFL22KT BL1                                                  01488900
&ZW                   SETC  ''                                          01489000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01489100
.*-------------------------------------------------------------------   01489200
.***AI.LVER02                                                           01489300
.ZI102Z               ANOP  ,                                           01489400
.*-------------------------------------------------------------------   01489500
.***AI.LVER01                                                           01489600
                      AIF  (&XPLISTVER LT 4).ZI103Z                     01489700
.*-------------------------------------------------------------------   01489800
.***AI.L08 XFL22KT "SECONDARY"                                          01489900
.***      BL1'1XXXXXXX'                                                 01490000
         AIF   ('&XKEYTYPE' NE 'SECONDARY').ZI103A                      01490100
&ZW                   SETC  '&ZW.10000000'                              01490200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01490300
                      AGO   .ZI103C                                     01490400
.*                                                                      01490500
.ZI103A               ANOP  ,                                           01490600
&ZW                   SETC  '&ZW.00000000'                              01490700
.ZI103C               ANOP  ,                                           01490800
.*-------------------------------------------------------------------   01490900
.***AI.L11 XFL22KT BL1                                                  01491000
                      AIF   ('&ZCLNG' NE 'YES').ZI103E  ALL ZERO BITS   01491100
&ZOPN                 SETA  &ZOPN+1                                     01491200
&ZOPL(&ZOPN)          SETC  ' '                                         01491300
&ZOPO(&ZOPN)          SETC  'OI'                                        01491400
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01491500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01491600
.ZI103E               ANOP  ,                                           01491700
.*-------------------------------------------------------------------   01491800
.***AI.LVER02                                                           01491900
.ZI103Z               ANOP  ,                                           01492000
.*-------------------------------------------------------------------   01492100
.***AI.L25  XLOCKINDEX F                                                01492200
                      AIF   ('&ZXLOCKINDEX' EQ '').ZI109E               01492300
                      AIF   ('&ZXLOCKINDEX' EQ 'OUTPUT').ZI109E         01492400
&ZCGPR                SETC  '&XLOCKINDEX'                               01492500
.*                                                                      01492600
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZI109B          01492700
&ZCGPR   SETC  '0('.'&XLOCKINDEX'(2,K'&XLOCKINDEX-2).')'                01492800
                      AGO   .ZI109D                                     01492900
.ZI109B               ANOP  ,                                           01493000
.*                                                                      01493100
&ZC                   SETC  '&XLOCKINDEX'(1,1)                          01493200
                      AIF   (T'&ZC NE 'N').ZI109D                       01493300
&ZC                   SETC  '&XLOCKINDEX'                               01493400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI109D              01493500
&ZCGPR                SETC  '=FL4''&XLOCKINDEX'''                       01493600
.*                                                                      01493700
.ZI109D               ANOP  ,                                           01493800
.*                                                                      01493900
&ZOPN                 SETA  &ZOPN+1                                     01494000
&ZOPL(&ZOPN)          SETC  ' '                                         01494100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01494200
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           01494300
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKINDEX XLOCKINDEX'                01494400
.*                                                                      01494500
.ZI109E               ANOP  ,                                           01494600
.*-------------------------------------------------------------------   01494700
.***AI.L05 XFL20LC BL1                                                  01494800
&ZW                   SETC  ''                                          01494900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01495000
.*-------------------------------------------------------------------   01495100
.***AI.L08 XFL20LC "DEFINE"                                             01495200
.***      BL1'XXXXX1XX'                                                 01495300
         AIF   ('&XLISTSTATE' NE 'DEFINE').ZI116A                       01495400
&ZW                   SETC  '&ZW.000001'                                01495500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01495600
                      AGO   .ZI116C                                     01495700
.*                                                                      01495800
.ZI116A               ANOP  ,                                           01495900
&ZW                   SETC  '&ZW.000000'                                01496000
.ZI116C               ANOP  ,                                           01496100
.*-------------------------------------------------------------------   01496200
.***AI.L08 XFL20LC "DEFINE"                                             01496300
.***      BL1'XXXXXX1X'                                                 01496400
         AIF   ('&XKEYRANGESTATE' NE 'DEFINE').ZI117A                   01496500
&ZW                   SETC  '&ZW.1'                                     01496600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01496700
                      AGO   .ZI117C                                     01496800
.*                                                                      01496900
.ZI117A               ANOP  ,                                           01497000
&ZW                   SETC  '&ZW.0'                                     01497100
.ZI117C               ANOP  ,                                           01497200
.*-------------------------------------------------------------------   01497300
.***AI.L08 XFL20LC "SET"                                                01497400
.***      BL1'XXXXXXX1'                                                 01497500
         AIF   ('&XKEYRANGE' NE 'SET').ZI118A                           01497600
&ZW                   SETC  '&ZW.1'                                     01497700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01497800
                      AGO   .ZI118C                                     01497900
.*                                                                      01498000
.ZI118A               ANOP  ,                                           01498100
&ZW                   SETC  '&ZW.0'                                     01498200
.ZI118C               ANOP  ,                                           01498300
.*-------------------------------------------------------------------   01498400
.***AI.L11 XFL20LC BL1                                                  01498500
                      AIF   ('&ZCLNG' NE 'YES').ZI118E  ALL ZERO BITS   01498600
&ZOPN                 SETA  &ZOPN+1                                     01498700
&ZOPL(&ZOPN)          SETC  ' '                                         01498800
&ZOPO(&ZOPN)          SETC  'OI'                                        01498900
&ZOPV(&ZOPN)          SETC  '104(1),B''&ZW'''                           01499000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01499100
.ZI118E               ANOP  ,                                           01499200
.*-------------------------------------------------------------------   01499300
.***AI.L05 XFL21LC BL1                                                  01499400
&ZW                   SETC  ''                                          01499500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01499600
.*-------------------------------------------------------------------   01499700
.***AI.L08 XFL21LC "LISTKEY"                                            01499800
.***      BL1'XXX1XXXX'                                                 01499900
         AIF   ('&LISTKEY' EQ '').ZI120A                                01500000
         AIF   ('&LISTKEY' EQ 'NO_LISTKEY').ZI120A                      01500100
&ZW                   SETC  '&ZW.0001'                                  01500200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01500300
                      AGO   .ZI120C                                     01500400
.*                                                                      01500500
.ZI120A               ANOP  ,                                           01500600
&ZW                   SETC  '&ZW.0000'                                  01500700
.ZI120C               ANOP  ,                                           01500800
.*-------------------------------------------------------------------   01500900
.***AI.L08 XFL21LC "MAXLISTKEY"                                         01501000
.***      BL1'XXXX1XXX'                                                 01501100
         AIF   ('&MAXLISTKEY' EQ '').ZI121A                             01501200
         AIF   ('&MAXLISTKEY' EQ 'NO_MAXLISTKEY').ZI121A                01501300
&ZW                   SETC  '&ZW.1'                                     01501400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01501500
                      AGO   .ZI121C                                     01501600
.*                                                                      01501700
.ZI121A               ANOP  ,                                           01501800
&ZW                   SETC  '&ZW.0'                                     01501900
.ZI121C               ANOP  ,                                           01502000
.*-------------------------------------------------------------------   01502100
.***AI.L08 XFL21LC "SETCURSOR"                                          01502200
.***      BL1'XXXXX1XX'                                                 01502300
         AIF   ('&SETCURSOR' EQ '').ZI122A                              01502400
         AIF   ('&SETCURSOR' EQ 'NO_SETCURSOR').ZI122A                  01502500
&ZW                   SETC  '&ZW.1'                                     01502600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01502700
                      AGO   .ZI122C                                     01502800
.*                                                                      01502900
.ZI122A               ANOP  ,                                           01503000
&ZW                   SETC  '&ZW.0'                                     01503100
.ZI122C               ANOP  ,                                           01503200
.*-------------------------------------------------------------------   01503300
.***AI.L08 XFL21LC "LISTDESC"                                           01503400
.***      BL1'XXXXXX1X'                                                 01503500
         AIF   ('&LISTDESC' EQ '').ZI123A                               01503600
         AIF   ('&LISTDESC' EQ 'NO_LISTDESC').ZI123A                    01503700
&ZW                   SETC  '&ZW.1'                                     01503800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01503900
                      AGO   .ZI123C                                     01504000
.*                                                                      01504100
.ZI123A               ANOP  ,                                           01504200
&ZW                   SETC  '&ZW.0'                                     01504300
.ZI123C               ANOP  ,                                           01504400
.*-------------------------------------------------------------------   01504500
.***AI.L08 XFL21LC "LISTLIMIT"                                          01504600
.***      BL1'XXXXXXX1'                                                 01504700
         AIF   ('&LISTLIMIT' EQ '').ZI124A                              01504800
         AIF   ('&LISTLIMIT' EQ 'NO_LISTLIMIT').ZI124A                  01504900
&ZW                   SETC  '&ZW.1'                                     01505000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01505100
                      AGO   .ZI124C                                     01505200
.*                                                                      01505300
.ZI124A               ANOP  ,                                           01505400
&ZW                   SETC  '&ZW.0'                                     01505500
.ZI124C               ANOP  ,                                           01505600
.*-------------------------------------------------------------------   01505700
.***AI.L11 XFL21LC BL1                                                  01505800
                      AIF   ('&ZCLNG' NE 'YES').ZI124E  ALL ZERO BITS   01505900
&ZOPN                 SETA  &ZOPN+1                                     01506000
&ZOPL(&ZOPN)          SETC  ' '                                         01506100
&ZOPO(&ZOPN)          SETC  'OI'                                        01506200
&ZOPV(&ZOPN)          SETC  '105(1),B''&ZW'''                           01506300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01506400
.ZI124E               ANOP  ,                                           01506500
.*-------------------------------------------------------------------   01506600
.***AI.L05 XFL23LC BL1                                                  01506700
&ZW                   SETC  ''                                          01506800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01506900
.*-------------------------------------------------------------------   01507000
.***AI.L08 XFL23LC "TAIL"                                               01507100
.***      BL1'1XXXXXXX'                                                 01507200
         AIF   ('&XSETCURSOR' NE 'TAIL').ZI127A                         01507300
&ZW                   SETC  '&ZW.10000000'                              01507400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01507500
                      AGO   .ZI127C                                     01507600
.*                                                                      01507700
.ZI127A               ANOP  ,                                           01507800
&ZW                   SETC  '&ZW.00000000'                              01507900
.ZI127C               ANOP  ,                                           01508000
.*-------------------------------------------------------------------   01508100
.***AI.L11 XFL23LC BL1                                                  01508200
                      AIF   ('&ZCLNG' NE 'YES').ZI127E  ALL ZERO BITS   01508300
&ZOPN                 SETA  &ZOPN+1                                     01508400
&ZOPL(&ZOPN)          SETC  ' '                                         01508500
&ZOPO(&ZOPN)          SETC  'OI'                                        01508600
&ZOPV(&ZOPN)          SETC  '107(1),B''&ZW'''                           01508700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01508800
.ZI127E               ANOP  ,                                           01508900
.*-------------------------------------------------------------------   01509000
.***AI.L18  XLISTLIMIT F                                                01509100
         AIF   ('&XLISTLIMIT' NE 'NO_LISTLIMIT').ZI130                  01509200
&ZXLISTLIMIT          SETC  ''             RESET INPUT/OUTPUT           01509300
.ZI130                ANOP  ,                                           01509400
.*-------------------------------------------------------------------   01509500
.***AI.L25  XLISTLIMIT F                                                01509600
                      AIF   ('&ZXLISTLIMIT' EQ '').ZI130E               01509700
                      AIF   ('&ZXLISTLIMIT' EQ 'OUTPUT').ZI130E         01509800
&ZCGPR                SETC  '&XLISTLIMIT'                               01509900
.*                                                                      01510000
                      AIF   ('&XLISTLIMIT'(1,1) NE '(').ZI130B          01510100
&ZCGPR   SETC  '0('.'&XLISTLIMIT'(2,K'&XLISTLIMIT-2).')'                01510200
                      AGO   .ZI130D                                     01510300
.ZI130B               ANOP  ,                                           01510400
.*                                                                      01510500
&ZC                   SETC  '&XLISTLIMIT'(1,1)                          01510600
                      AIF   (T'&ZC NE 'N').ZI130D                       01510700
&ZC                   SETC  '&XLISTLIMIT'                               01510800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI130D              01510900
&ZCGPR                SETC  '=AL4(&XLISTLIMIT)'                         01511000
.*                                                                      01511100
.ZI130D               ANOP  ,                                           01511200
.*                                                                      01511300
&ZOPN                 SETA  &ZOPN+1                                     01511400
&ZOPL(&ZOPN)          SETC  ' '                                         01511500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01511600
&ZOPV(&ZOPN)          SETC  '120(4,1),&ZCGPR'                           01511700
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTLIMIT XLISTLIMIT'                01511800
.*                                                                      01511900
.ZI130E               ANOP  ,                                           01512000
.*-------------------------------------------------------------------   01512100
.***AI.L25  XAUTHCOMP CL16                                              01512200
                      AIF   ('&ZXAUTHCOMP' EQ '').ZI132E                01512300
                      AIF   ('&ZXAUTHCOMP' EQ 'OUTPUT').ZI132E          01512400
&ZCGPR                SETC  '&XAUTHCOMP'                                01512500
.*                                                                      01512600
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZI132B           01512700
&ZCGPR   SETC  '0('.'&XAUTHCOMP'(2,K'&XAUTHCOMP-2).')'                  01512800
.ZI132B               ANOP  ,                                           01512900
.*                                                                      01513000
&ZOPN                 SETA  &ZOPN+1                                     01513100
&ZOPL(&ZOPN)          SETC  ' '                                         01513200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01513300
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          01513400
&ZOPD(&ZOPN)          SETC  '++ &ZXAUTHCOMP XAUTHCOMP'                  01513500
.*                                                                      01513600
.ZI132E               ANOP  ,                                           01513700
.*-------------------------------------------------------------------   01513800
.***AI.L18  XNEWAUTH CL16                                               01513900
         AIF   ('&XNEWAUTH' NE 'NO_NEWAUTH').ZI133                      01514000
&ZXNEWAUTH            SETC  ''             RESET INPUT/OUTPUT           01514100
.ZI133                ANOP  ,                                           01514200
.*-------------------------------------------------------------------   01514300
.***AI.L25  XNEWAUTH CL16                                               01514400
                      AIF   ('&ZXNEWAUTH' EQ '').ZI133E                 01514500
                      AIF   ('&ZXNEWAUTH' EQ 'OUTPUT').ZI133E           01514600
&ZCGPR                SETC  '&XNEWAUTH'                                 01514700
.*                                                                      01514800
                      AIF   ('&XNEWAUTH'(1,1) NE '(').ZI133B            01514900
&ZCGPR   SETC  '0('.'&XNEWAUTH'(2,K'&XNEWAUTH-2).')'                    01515000
.ZI133B               ANOP  ,                                           01515100
.*                                                                      01515200
&ZOPN                 SETA  &ZOPN+1                                     01515300
&ZOPL(&ZOPN)          SETC  ' '                                         01515400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01515500
&ZOPV(&ZOPN)          SETC  '164(16,1),&ZCGPR'                          01515600
&ZOPD(&ZOPN)          SETC  '++ &ZXNEWAUTH XNEWAUTH'                    01515700
.*                                                                      01515800
.ZI133E               ANOP  ,                                           01515900
.*-------------------------------------------------------------------   01516000
.***AI.L18  XLISTDESC CL32                                              01516100
         AIF   ('&XLISTDESC' NE 'NO_LISTDESC').ZI134                    01516200
&ZXLISTDESC           SETC  ''             RESET INPUT/OUTPUT           01516300
.ZI134                ANOP  ,                                           01516400
.*-------------------------------------------------------------------   01516500
.***AI.L25  XLISTDESC CL32                                              01516600
                      AIF   ('&ZXLISTDESC' EQ '').ZI134E                01516700
                      AIF   ('&ZXLISTDESC' EQ 'OUTPUT').ZI134E          01516800
&ZCGPR                SETC  '&XLISTDESC'                                01516900
.*                                                                      01517000
                      AIF   ('&XLISTDESC'(1,1) NE '(').ZI134B           01517100
&ZCGPR   SETC  '0('.'&XLISTDESC'(2,K'&XLISTDESC-2).')'                  01517200
.ZI134B               ANOP  ,                                           01517300
.*                                                                      01517400
&ZOPN                 SETA  &ZOPN+1                                     01517500
&ZOPL(&ZOPN)          SETC  ' '                                         01517600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01517700
&ZOPV(&ZOPN)          SETC  '180(32,1),&ZCGPR'                          01517800
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTDESC XLISTDESC'                  01517900
.*                                                                      01518000
.ZI134E               ANOP  ,                                           01518100
.*-------------------------------------------------------------------   01518200
.***AI.LVER01                                                           01518300
                      AIF  (&XPLISTVER LT 1).ZI135Z                     01518400
.*-------------------------------------------------------------------   01518500
.***AI.L18  XLISTKEY CL16                                               01518600
         AIF   ('&XLISTKEY' NE 'NO_LISTKEY').ZI135                      01518700
&ZXLISTKEY            SETC  ''             RESET INPUT/OUTPUT           01518800
.ZI135                ANOP  ,                                           01518900
.*-------------------------------------------------------------------   01519000
.***AI.L25  XLISTKEY CL16                                               01519100
                      AIF   ('&ZXLISTKEY' EQ '').ZI135E                 01519200
                      AIF   ('&ZXLISTKEY' EQ 'OUTPUT').ZI135E           01519300
&ZCGPR                SETC  '&XLISTKEY'                                 01519400
.*                                                                      01519500
                      AIF   ('&XLISTKEY'(1,1) NE '(').ZI135B            01519600
&ZCGPR   SETC  '0('.'&XLISTKEY'(2,K'&XLISTKEY-2).')'                    01519700
.ZI135B               ANOP  ,                                           01519800
.*                                                                      01519900
&ZOPN                 SETA  &ZOPN+1                                     01520000
&ZOPL(&ZOPN)          SETC  ' '                                         01520100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01520200
&ZOPV(&ZOPN)          SETC  '212(16,1),&ZCGPR'                          01520300
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEY XLISTKEY'                    01520400
.*                                                                      01520500
.ZI135E               ANOP  ,                                           01520600
.*-------------------------------------------------------------------   01520700
.***AI.LVER02                                                           01520800
.ZI135Z               ANOP  ,                                           01520900
.*-------------------------------------------------------------------   01521000
.***AI.LVER01                                                           01521100
                      AIF  (&XPLISTVER LT 1).ZI136Z                     01521200
.*-------------------------------------------------------------------   01521300
.***AI.L18  XMAXLISTKEY CL16                                            01521400
         AIF   ('&XMAXLISTKEY' NE 'NO_MAXLISTKEY').ZI136                01521500
&ZXMAXLISTKEY         SETC  ''             RESET INPUT/OUTPUT           01521600
.ZI136                ANOP  ,                                           01521700
.*-------------------------------------------------------------------   01521800
.***AI.L25  XMAXLISTKEY CL16                                            01521900
                      AIF   ('&ZXMAXLISTKEY' EQ '').ZI136E              01522000
                      AIF   ('&ZXMAXLISTKEY' EQ 'OUTPUT').ZI136E        01522100
&ZCGPR                SETC  '&XMAXLISTKEY'                              01522200
.*                                                                      01522300
                      AIF   ('&XMAXLISTKEY'(1,1) NE '(').ZI136B         01522400
&ZCGPR   SETC  '0('.'&XMAXLISTKEY'(2,K'&XMAXLISTKEY-2).')'              01522500
.ZI136B               ANOP  ,                                           01522600
.*                                                                      01522700
&ZOPN                 SETA  &ZOPN+1                                     01522800
&ZOPL(&ZOPN)          SETC  ' '                                         01522900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01523000
&ZOPV(&ZOPN)          SETC  '228(16,1),&ZCGPR'                          01523100
&ZOPD(&ZOPN)          SETC  '++ &ZXMAXLISTKEY XMAXLISTKEY'              01523200
.*                                                                      01523300
.ZI136E               ANOP  ,                                           01523400
.*-------------------------------------------------------------------   01523500
.***AI.LVER02                                                           01523600
.ZI136Z               ANOP  ,                                           01523700
.*-------------------------------------------------------------------   01523800
.***AI.LVER01                                                           01523900
                      AIF  (&XPLISTVER LT 4).ZI137Z                     01524000
.*-------------------------------------------------------------------   01524100
.***AI.LVER02                                                           01524200
.ZI137Z               ANOP  ,                                           01524300
.*-------------------------------------------------------------------   01524400
.***AI.LVER01                                                           01524500
                      AIF  (&XPLISTVER LT 4).ZI138Z                     01524600
.*-------------------------------------------------------------------   01524700
.***AI.L25  XKEYRANGESTART CL16                                         01524800
                      AIF   ('&ZXKEYRANGESTART' EQ '').ZI138E           01524900
                      AIF   ('&ZXKEYRANGESTART' EQ 'OUTPUT').ZI138E     01525000
&ZCGPR                SETC  '&XKEYRANGESTART'                           01525100
.*                                                                      01525200
                      AIF   ('&XKEYRANGESTART'(1,1) NE '(').ZI138B      01525300
&ZCGPR   SETC  '0('.'&XKEYRANGESTART'(2,K'&XKEYRANGESTART-2).')'        01525400
.ZI138B               ANOP  ,                                           01525500
.*                                                                      01525600
&ZOPN                 SETA  &ZOPN+1                                     01525700
&ZOPL(&ZOPN)          SETC  ' '                                         01525800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01525900
&ZOPV(&ZOPN)          SETC  '260(16,1),&ZCGPR'                          01526000
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYRANGESTART XKEYRANGESTART'        01526100
.*                                                                      01526200
.ZI138E               ANOP  ,                                           01526300
.*-------------------------------------------------------------------   01526400
.***AI.LVER02                                                           01526500
.ZI138Z               ANOP  ,                                           01526600
.*-------------------------------------------------------------------   01526700
.***AI.LVER01                                                           01526800
                      AIF  (&XPLISTVER LT 4).ZI139Z                     01526900
.*-------------------------------------------------------------------   01527000
.***AI.L25  XKEYRANGEEND CL16                                           01527100
                      AIF   ('&ZXKEYRANGEEND' EQ '').ZI139E             01527200
                      AIF   ('&ZXKEYRANGEEND' EQ 'OUTPUT').ZI139E       01527300
&ZCGPR                SETC  '&XKEYRANGEEND'                             01527400
.*                                                                      01527500
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZI139B        01527600
&ZCGPR   SETC  '0('.'&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2).')'            01527700
.ZI139B               ANOP  ,                                           01527800
.*                                                                      01527900
&ZOPN                 SETA  &ZOPN+1                                     01528000
&ZOPL(&ZOPN)          SETC  ' '                                         01528100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01528200
&ZOPV(&ZOPN)          SETC  '276(16,1),&ZCGPR'                          01528300
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYRANGEEND XKEYRANGEEND'            01528400
.*                                                                      01528500
.ZI139E               ANOP  ,                                           01528600
.*-------------------------------------------------------------------   01528700
.***AI.LVER02                                                           01528800
.ZI139Z               ANOP  ,                                           01528900
.*-------------------------------------------------------------------   01529000
.***AI.LVER01                                                           01529100
                      AIF  (&XPLISTVER LT 4).ZI140Z                     01529200
.*-------------------------------------------------------------------   01529300
.***AI.L25  XKREMPTY F                                                  01529400
                      AIF   ('&ZXKREMPTY' EQ '').ZI140E                 01529500
                      AIF   ('&ZXKREMPTY' EQ 'OUTPUT').ZI140E           01529600
&ZCGPR                SETC  '&XKREMPTY'                                 01529700
.*                                                                      01529800
                      AIF   ('&XKREMPTY'(1,1) NE '(').ZI140B            01529900
&ZCGPR   SETC  '0('.'&XKREMPTY'(2,K'&XKREMPTY-2).')'                    01530000
                      AGO   .ZI140D                                     01530100
.ZI140B               ANOP  ,                                           01530200
.*                                                                      01530300
&ZC                   SETC  '&XKREMPTY'(1,1)                            01530400
                      AIF   (T'&ZC NE 'N').ZI140D                       01530500
&ZC                   SETC  '&XKREMPTY'                                 01530600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI140D              01530700
&ZCGPR                SETC  '=AL4(&XKREMPTY)'                           01530800
.*                                                                      01530900
.ZI140D               ANOP  ,                                           01531000
.*                                                                      01531100
&ZOPN                 SETA  &ZOPN+1                                     01531200
&ZOPL(&ZOPN)          SETC  ' '                                         01531300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01531400
&ZOPV(&ZOPN)          SETC  '292(4,1),&ZCGPR'                           01531500
&ZOPD(&ZOPN)          SETC  '++ &ZXKREMPTY XKREMPTY'                    01531600
.*                                                                      01531700
.ZI140E               ANOP  ,                                           01531800
.*-------------------------------------------------------------------   01531900
.***AI.LVER02                                                           01532000
.ZI140Z               ANOP  ,                                           01532100
.*-------------------------------------------------------------------   01532200
.***AI.LVER01                                                           01532300
                      AIF  (&XPLISTVER LT 4).ZI141Z                     01532400
.*-------------------------------------------------------------------   01532500
.***AI.L25  XKRNOTEMPTY F                                               01532600
                      AIF   ('&ZXKRNOTEMPTY' EQ '').ZI141E              01532700
                      AIF   ('&ZXKRNOTEMPTY' EQ 'OUTPUT').ZI141E        01532800
&ZCGPR                SETC  '&XKRNOTEMPTY'                              01532900
.*                                                                      01533000
                      AIF   ('&XKRNOTEMPTY'(1,1) NE '(').ZI141B         01533100
&ZCGPR   SETC  '0('.'&XKRNOTEMPTY'(2,K'&XKRNOTEMPTY-2).')'              01533200
                      AGO   .ZI141D                                     01533300
.ZI141B               ANOP  ,                                           01533400
.*                                                                      01533500
&ZC                   SETC  '&XKRNOTEMPTY'(1,1)                         01533600
                      AIF   (T'&ZC NE 'N').ZI141D                       01533700
&ZC                   SETC  '&XKRNOTEMPTY'                              01533800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI141D              01533900
&ZCGPR                SETC  '=AL4(&XKRNOTEMPTY)'                        01534000
.*                                                                      01534100
.ZI141D               ANOP  ,                                           01534200
.*                                                                      01534300
&ZOPN                 SETA  &ZOPN+1                                     01534400
&ZOPL(&ZOPN)          SETC  ' '                                         01534500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01534600
&ZOPV(&ZOPN)          SETC  '296(4,1),&ZCGPR'                           01534700
&ZOPD(&ZOPN)          SETC  '++ &ZXKRNOTEMPTY XKRNOTEMPTY'              01534800
.*                                                                      01534900
.ZI141E               ANOP  ,                                           01535000
.*-------------------------------------------------------------------   01535100
.***AI.LVER02                                                           01535200
.ZI141Z               ANOP  ,                                           01535300
.*-------------------------------------------------------------------   01535400
.***AI.LVER01                                                           01535500
                      AIF  (&XPLISTVER LT 4).ZI142Z                     01535600
.*-------------------------------------------------------------------   01535700
.***AI.L25  XLISTEMPTY F                                                01535800
                      AIF   ('&ZXLISTEMPTY' EQ '').ZI142E               01535900
                      AIF   ('&ZXLISTEMPTY' EQ 'OUTPUT').ZI142E         01536000
&ZCGPR                SETC  '&XLISTEMPTY'                               01536100
.*                                                                      01536200
                      AIF   ('&XLISTEMPTY'(1,1) NE '(').ZI142B          01536300
&ZCGPR   SETC  '0('.'&XLISTEMPTY'(2,K'&XLISTEMPTY-2).')'                01536400
                      AGO   .ZI142D                                     01536500
.ZI142B               ANOP  ,                                           01536600
.*                                                                      01536700
&ZC                   SETC  '&XLISTEMPTY'(1,1)                          01536800
                      AIF   (T'&ZC NE 'N').ZI142D                       01536900
&ZC                   SETC  '&XLISTEMPTY'                               01537000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI142D              01537100
&ZCGPR                SETC  '=AL4(&XLISTEMPTY)'                         01537200
.*                                                                      01537300
.ZI142D               ANOP  ,                                           01537400
.*                                                                      01537500
&ZOPN                 SETA  &ZOPN+1                                     01537600
&ZOPL(&ZOPN)          SETC  ' '                                         01537700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01537800
&ZOPV(&ZOPN)          SETC  '300(4,1),&ZCGPR'                           01537900
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTEMPTY XLISTEMPTY'                01538000
.*                                                                      01538100
.ZI142E               ANOP  ,                                           01538200
.*-------------------------------------------------------------------   01538300
.***AI.LVER02                                                           01538400
.ZI142Z               ANOP  ,                                           01538500
.*-------------------------------------------------------------------   01538600
.***AI.LVER01                                                           01538700
                      AIF  (&XPLISTVER LT 4).ZI143Z                     01538800
.*-------------------------------------------------------------------   01538900
.***AI.L25  XLISTNOTEMPTY F                                             01539000
                      AIF   ('&ZXLISTNOTEMPTY' EQ '').ZI143E            01539100
                      AIF   ('&ZXLISTNOTEMPTY' EQ 'OUTPUT').ZI143E      01539200
&ZCGPR                SETC  '&XLISTNOTEMPTY'                            01539300
.*                                                                      01539400
                      AIF   ('&XLISTNOTEMPTY'(1,1) NE '(').ZI143B       01539500
&ZCGPR   SETC  '0('.'&XLISTNOTEMPTY'(2,K'&XLISTNOTEMPTY-2).')'          01539600
                      AGO   .ZI143D                                     01539700
.ZI143B               ANOP  ,                                           01539800
.*                                                                      01539900
&ZC                   SETC  '&XLISTNOTEMPTY'(1,1)                       01540000
                      AIF   (T'&ZC NE 'N').ZI143D                       01540100
&ZC                   SETC  '&XLISTNOTEMPTY'                            01540200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI143D              01540300
&ZCGPR                SETC  '=AL4(&XLISTNOTEMPTY)'                      01540400
.*                                                                      01540500
.ZI143D               ANOP  ,                                           01540600
.*                                                                      01540700
&ZOPN                 SETA  &ZOPN+1                                     01540800
&ZOPL(&ZOPN)          SETC  ' '                                         01540900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01541000
&ZOPV(&ZOPN)          SETC  '304(4,1),&ZCGPR'                           01541100
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNOTEMPTY XLISTNOTEMPTY'          01541200
.*                                                                      01541300
.ZI143E               ANOP  ,                                           01541400
.*-------------------------------------------------------------------   01541500
.***AI.LVER02                                                           01541600
.ZI143Z               ANOP  ,                                           01541700
.*-------------------------------------------------------------------   01541800
.***AI.LVER01                                                           01541900
                      AIF  (&XPLISTVER LT 2).ZI145Z                     01542000
.*-------------------------------------------------------------------   01542100
.***AI.LVER02                                                           01542200
.ZI145Z               ANOP  ,                                           01542300
.*-------------------------------------------------------------------   01542400
.***AI.LVER01                                                           01542500
                      AIF  (&XPLISTVER LT 2).ZI146Z                     01542600
.*-------------------------------------------------------------------   01542700
.***AI.LVER02                                                           01542800
.ZI146Z               ANOP  ,                                           01542900
.*-------------------------------------------------------------------   01543000
.***AI.LVER01                                                           01543100
                      AIF  (&XPLISTVER LT 2).ZI147Z                     01543200
.*-------------------------------------------------------------------   01543300
.***AI.LVER02                                                           01543400
.ZI147Z               ANOP  ,                                           01543500
.*-------------------------------------------------------------------   01543600
.***AI.LVER01                                                           01543700
                      AIF  (&XPLISTVER LT 2).ZI148Z                     01543800
.*-------------------------------------------------------------------   01543900
.***AI.LVER02                                                           01544000
.ZI148Z               ANOP  ,                                           01544100
.*-------------------------------------------------------------------   01544200
.***AI.LVER01                                                           01544300
                      AIF  (&XPLISTVER LT 2).ZI149Z                     01544400
.*-------------------------------------------------------------------   01544500
.***AI.LVER02                                                           01544600
.ZI149Z               ANOP  ,                                           01544700
.*-------------------------------------------------------------------   01544800
.***AI.LVER01                                                           01544900
                      AIF  (&XPLISTVER LT 2).ZI150Z                     01545000
.*-------------------------------------------------------------------   01545100
.***AI.LVER02                                                           01545200
.ZI150Z               ANOP  ,                                           01545300
.*-------------------------------------------------------------------   01545400
.***AI.LVER01                                                           01545500
                      AIF  (&XPLISTVER LT 2).ZI151Z                     01545600
.*-------------------------------------------------------------------   01545700
.***AI.LVER02                                                           01545800
.ZI151Z               ANOP  ,                                           01545900
.*-------------------------------------------------------------------   01546000
.***AI.LVER01                                                           01546100
                      AIF  (&XPLISTVER LT 2).ZI152Z                     01546200
.*-------------------------------------------------------------------   01546300
.***AI.LVER02                                                           01546400
.ZI152Z               ANOP  ,                                           01546500
.*-------------------------------------------------------------------   01546600
.***AI.LVER01                                                           01546700
                      AIF  (&XPLISTVER LT 2).ZI153Z                     01546800
.*-------------------------------------------------------------------   01546900
.***AI.LVER02                                                           01547000
.ZI153Z               ANOP  ,                                           01547100
.*-------------------------------------------------------------------   01547200
.***AI.LVER01                                                           01547300
                      AIF  (&XPLISTVER LT 2).ZI155Z                     01547400
.*-------------------------------------------------------------------   01547500
.***AI.LVER02                                                           01547600
.ZI155Z               ANOP  ,                                           01547700
.*-------------------------------------------------------------------   01547800
.***AI.LVER01                                                           01547900
                      AIF  (&XPLISTVER LT 2).ZI156Z                     01548000
.*-------------------------------------------------------------------   01548100
.***AI.LVER02                                                           01548200
.ZI156Z               ANOP  ,                                           01548300
.*-------------------------------------------------------------------   01548400
.***AI.LVER01                                                           01548500
                      AIF  (&XPLISTVER LT 2).ZI157Z                     01548600
.*-------------------------------------------------------------------   01548700
.***AI.LVER02                                                           01548800
.ZI157Z               ANOP  ,                                           01548900
.*-------------------------------------------------------------------   01549000
.***AI.LVER01                                                           01549100
                      AIF  (&XPLISTVER LT 2).ZI158Z                     01549200
.*-------------------------------------------------------------------   01549300
.***AI.LVER02                                                           01549400
.ZI158Z               ANOP  ,                                           01549500
.*-------------------------------------------------------------------   01549600
.***AI.L05 XFL22LM BL1                                                  01549700
&ZW                   SETC  ''                                          01549800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01549900
.*-------------------------------------------------------------------   01550000
.***AI.L08 XFL22LM "MONITOR_SUBLIST"                                    01550100
.***      BL1'X1XXXXXX'                                                 01550200
         AIF   ('&XREQUEST' NE 'MONITOR_SUBLIST').ZI163A                01550300
&ZW                   SETC  '&ZW.01'                                    01550400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01550500
                      AGO   .ZI163C                                     01550600
.*                                                                      01550700
.ZI163A               ANOP  ,                                           01550800
&ZW                   SETC  '&ZW.00'                                    01550900
.ZI163C               ANOP  ,                                           01551000
.*-------------------------------------------------------------------   01551100
.***AI.L08 XFL22LM "MONITOR_EVENTQ"                                     01551200
.***      BL1'XX1XXXXX'                                                 01551300
         AIF   ('&XREQUEST' NE 'MONITOR_EVENTQ').ZI164A                 01551400
&ZW                   SETC  '&ZW.1'                                     01551500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01551600
                      AGO   .ZI164C                                     01551700
.*                                                                      01551800
.ZI164A               ANOP  ,                                           01551900
&ZW                   SETC  '&ZW.0'                                     01552000
.ZI164C               ANOP  ,                                           01552100
.*-------------------------------------------------------------------   01552200
.***AI.L08 XFL22LM "START"                                              01552300
.***      BL1'XXX1XXXX'                                                 01552400
         AIF   ('&XACTION' NE 'START').ZI165A                           01552500
&ZW                   SETC  '&ZW.1'                                     01552600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01552700
                      AGO   .ZI165C                                     01552800
.*                                                                      01552900
.ZI165A               ANOP  ,                                           01553000
&ZW                   SETC  '&ZW.0'                                     01553100
.ZI165C               ANOP  ,                                           01553200
.*-------------------------------------------------------------------   01553300
.***AI.L08 XFL22LM "EVERY"                                              01553400
.***      BL1'XXXX1XXX'                                                 01553500
         AIF   ('&XNOTIFICATION' NE 'EVERY').ZI166A                     01553600
&ZW                   SETC  '&ZW.1'                                     01553700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01553800
                      AGO   .ZI166C                                     01553900
.*                                                                      01554000
.ZI166A               ANOP  ,                                           01554100
&ZW                   SETC  '&ZW.0'                                     01554200
.ZI166C               ANOP  ,                                           01554300
.*-------------------------------------------------------------------   01554400
.***AI.L08 XFL22LM "YES"                                                01554500
.***      BL1'XXXXXXX1'                                                 01554600
         AIF   ('&XDRIVEEXIT' NE 'YES').ZI167A                          01554700
&ZW                   SETC  '&ZW.001'                                   01554800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01554900
                      AGO   .ZI167C                                     01555000
.*                                                                      01555100
.ZI167A               ANOP  ,                                           01555200
&ZW                   SETC  '&ZW.000'                                   01555300
.ZI167C               ANOP  ,                                           01555400
.*-------------------------------------------------------------------   01555500
.***AI.L11 XFL22LM BL1                                                  01555600
                      AIF   ('&ZCLNG' NE 'YES').ZI167E  ALL ZERO BITS   01555700
&ZOPN                 SETA  &ZOPN+1                                     01555800
&ZOPL(&ZOPN)          SETC  ' '                                         01555900
&ZOPO(&ZOPN)          SETC  'OI'                                        01556000
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01556100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01556200
.ZI167E               ANOP  ,                                           01556300
.*-------------------------------------------------------------------   01556400
.***AI.L25  XVECTORINDEX F                                              01556500
                      AIF   ('&ZXVECTORINDEX' EQ '').ZI170E             01556600
                      AIF   ('&ZXVECTORINDEX' EQ 'OUTPUT').ZI170E       01556700
&ZCGPR                SETC  '&XVECTORINDEX'                             01556800
.*                                                                      01556900
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZI170B        01557000
&ZCGPR   SETC  '0('.'&XVECTORINDEX'(2,K'&XVECTORINDEX-2).')'            01557100
                      AGO   .ZI170D                                     01557200
.ZI170B               ANOP  ,                                           01557300
.*                                                                      01557400
&ZC                   SETC  '&XVECTORINDEX'(1,1)                        01557500
                      AIF   (T'&ZC NE 'N').ZI170D                       01557600
&ZC                   SETC  '&XVECTORINDEX'                             01557700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI170D              01557800
&ZCGPR                SETC  '=FL4''&XVECTORINDEX'''                     01557900
.*                                                                      01558000
.ZI170D               ANOP  ,                                           01558100
.*                                                                      01558200
&ZOPN                 SETA  &ZOPN+1                                     01558300
&ZOPL(&ZOPN)          SETC  ' '                                         01558400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01558500
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           01558600
&ZOPD(&ZOPN)          SETC  '++ &ZXVECTORINDEX XVECTORINDEX'            01558700
.*                                                                      01558800
.ZI170E               ANOP  ,                                           01558900
.*-------------------------------------------------------------------   01559000
.***AI.LVER01                                                           01559100
                      AIF  (&XPLISTVER LT 2).ZI172Z                     01559200
.*-------------------------------------------------------------------   01559300
.***AI.LVER02                                                           01559400
.ZI172Z               ANOP  ,                                           01559500
.*-------------------------------------------------------------------   01559600
.***AI.LVER01                                                           01559700
                      AIF  (&XPLISTVER LT 2).ZI173Z                     01559800
.*-------------------------------------------------------------------   01559900
.***AI.LVER02                                                           01560000
.ZI173Z               ANOP  ,                                           01560100
.*-------------------------------------------------------------------   01560200
.***AI.LVER01                                                           01560300
                      AIF  (&XPLISTVER LT 2).ZI174Z                     01560400
.*-------------------------------------------------------------------   01560500
.***AI.LVER02                                                           01560600
.ZI174Z               ANOP  ,                                           01560700
.*-------------------------------------------------------------------   01560800
.***AI.LVER01                                                           01560900
                      AIF  (&XPLISTVER LT 2).ZI175Z                     01561000
.*-------------------------------------------------------------------   01561100
.***AI.LVER02                                                           01561200
.ZI175Z               ANOP  ,                                           01561300
.*-------------------------------------------------------------------   01561400
.***AI.LVER01                                                           01561500
                      AIF  (&XPLISTVER LT 2).ZI176Z                     01561600
.*-------------------------------------------------------------------   01561700
.***AI.LVER02                                                           01561800
.ZI176Z               ANOP  ,                                           01561900
.*-------------------------------------------------------------------   01562000
.***AI.LVER01                                                           01562100
                      AIF  (&XPLISTVER LT 2).ZI177Z                     01562200
.*-------------------------------------------------------------------   01562300
.***AI.L25  XUNC CL16                                                   01562400
                      AIF   ('&ZXUNC' EQ '').ZI177E                     01562500
                      AIF   ('&ZXUNC' EQ 'OUTPUT').ZI177E               01562600
&ZCGPR                SETC  '&XUNC'                                     01562700
.*                                                                      01562800
                      AIF   ('&XUNC'(1,1) NE '(').ZI177B                01562900
&ZCGPR   SETC  '0('.'&XUNC'(2,K'&XUNC-2).')'                            01563000
.ZI177B               ANOP  ,                                           01563100
.*                                                                      01563200
&ZOPN                 SETA  &ZOPN+1                                     01563300
&ZOPL(&ZOPN)          SETC  ' '                                         01563400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01563500
&ZOPV(&ZOPN)          SETC  '244(16,1),&ZCGPR'                          01563600
&ZOPD(&ZOPN)          SETC  '++ &ZXUNC XUNC'                            01563700
.*                                                                      01563800
.ZI177E               ANOP  ,                                           01563900
.*-------------------------------------------------------------------   01564000
.***AI.LVER02                                                           01564100
.ZI177Z               ANOP  ,                                           01564200
.*-------------------------------------------------------------------   01564300
.***AI.LVER01                                                           01564400
                      AIF  (&XPLISTVER LT 3).ZI178Z                     01564500
.*-------------------------------------------------------------------   01564600
.***AI.LVER02                                                           01564700
.ZI178Z               ANOP  ,                                           01564800
.*-------------------------------------------------------------------   01564900
.***AI.LVER01                                                           01565000
                      AIF  (&XPLISTVER LT 2).ZI180Z                     01565100
.*-------------------------------------------------------------------   01565200
.***AI.LVER02                                                           01565300
.ZI180Z               ANOP  ,                                           01565400
.*-------------------------------------------------------------------   01565500
.***AI.LVER01                                                           01565600
                      AIF  (&XPLISTVER LT 2).ZI181Z                     01565700
.*-------------------------------------------------------------------   01565800
.***AI.LVER02                                                           01565900
.ZI181Z               ANOP  ,                                           01566000
.*-------------------------------------------------------------------   01566100
.***AI.LVER01                                                           01566200
                      AIF  (&XPLISTVER LT 2).ZI182Z                     01566300
.*-------------------------------------------------------------------   01566400
.***AI.L05 XFL22MS BL1                                                  01566500
&ZW                   SETC  ''                                          01566600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01566700
.*-------------------------------------------------------------------   01566800
.***AI.LVER02                                                           01566900
.ZI182Z               ANOP  ,                                           01567000
.*-------------------------------------------------------------------   01567100
.***AI.LVER01                                                           01567200
                      AIF  (&XPLISTVER LT 2).ZI183Z                     01567300
.*-------------------------------------------------------------------   01567400
.***AI.L08 XFL22MS "MOSVECTOR"                                          01567500
.***      BL1'XXX1XXXX'                                                 01567600
         AIF   ('&MOSVECTOR' EQ '').ZI183A                              01567700
&ZW                   SETC  '&ZW.00010000'                              01567800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01567900
                      AGO   .ZI183C                                     01568000
.*                                                                      01568100
.ZI183A               ANOP  ,                                           01568200
&ZW                   SETC  '&ZW.00000000'                              01568300
.ZI183C               ANOP  ,                                           01568400
.*-------------------------------------------------------------------   01568500
.***AI.L11 XFL22MS BL1                                                  01568600
                      AIF   ('&ZCLNG' NE 'YES').ZI183E  ALL ZERO BITS   01568700
&ZOPN                 SETA  &ZOPN+1                                     01568800
&ZOPL(&ZOPN)          SETC  ' '                                         01568900
&ZOPO(&ZOPN)          SETC  'OI'                                        01569000
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           01569100
&ZOPD(&ZOPN)          SETC  '++ OUTPUT BL1'                             01569200
.ZI183E               ANOP  ,                                           01569300
.*-------------------------------------------------------------------   01569400
.***AI.LVER02                                                           01569500
.ZI183Z               ANOP  ,                                           01569600
.*-------------------------------------------------------------------   01569700
.***AI.LVER01                                                           01569800
                      AIF  (&XPLISTVER LT 2).ZI184Z                     01569900
.*-------------------------------------------------------------------   01570000
.***AI.LVER02                                                           01570100
.ZI184Z               ANOP  ,                                           01570200
.*-------------------------------------------------------------------   01570300
.***AI.LVER01                                                           01570400
                      AIF  (&XPLISTVER LT 2).ZI185Z                     01570500
.*-------------------------------------------------------------------   01570600
.***AI.L25  XSTARTINDEX XL2                                             01570700
                      AIF   ('&ZXSTARTINDEX' EQ '').ZI185E              01570800
                      AIF   ('&ZXSTARTINDEX' EQ 'OUTPUT').ZI185E        01570900
&ZCGPR                SETC  '&XSTARTINDEX'                              01571000
.*                                                                      01571100
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZI185B         01571200
&ZCGPR   SETC  '0('.'&XSTARTINDEX'(2,K'&XSTARTINDEX-2).')'              01571300
                      AGO   .ZI185D                                     01571400
.ZI185B               ANOP  ,                                           01571500
.*                                                                      01571600
&ZC                   SETC  '&XSTARTINDEX'(1,1)                         01571700
                      AIF   (T'&ZC NE 'N').ZI185D                       01571800
&ZC                   SETC  '&XSTARTINDEX'                              01571900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI185D              01572000
&ZCGPR                SETC  '=AL2(&XSTARTINDEX)'                        01572100
.*                                                                      01572200
.ZI185D               ANOP  ,                                           01572300
.*                                                                      01572400
&ZOPN                 SETA  &ZOPN+1                                     01572500
&ZOPL(&ZOPN)          SETC  ' '                                         01572600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01572700
&ZOPV(&ZOPN)          SETC  '108(2,1),&ZCGPR'                           01572800
&ZOPD(&ZOPN)          SETC  '++ &ZXSTARTINDEX XSTARTINDEX'              01572900
.*                                                                      01573000
.ZI185E               ANOP  ,                                           01573100
.*-------------------------------------------------------------------   01573200
.***AI.LVER02                                                           01573300
.ZI185Z               ANOP  ,                                           01573400
.*-------------------------------------------------------------------   01573500
.***AI.LVER01                                                           01573600
                      AIF  (&XPLISTVER LT 2).ZI186Z                     01573700
.*-------------------------------------------------------------------   01573800
.***AI.L25  XENDINDEX XL2                                               01573900
                      AIF   ('&ZXENDINDEX' EQ '').ZI186E                01574000
                      AIF   ('&ZXENDINDEX' EQ 'OUTPUT').ZI186E          01574100
&ZCGPR                SETC  '&XENDINDEX'                                01574200
.*                                                                      01574300
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZI186B           01574400
&ZCGPR   SETC  '0('.'&XENDINDEX'(2,K'&XENDINDEX-2).')'                  01574500
                      AGO   .ZI186D                                     01574600
.ZI186B               ANOP  ,                                           01574700
.*                                                                      01574800
&ZC                   SETC  '&XENDINDEX'(1,1)                           01574900
                      AIF   (T'&ZC NE 'N').ZI186D                       01575000
&ZC                   SETC  '&XENDINDEX'                                01575100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI186D              01575200
&ZCGPR                SETC  '=AL2(&XENDINDEX)'                          01575300
.*                                                                      01575400
.ZI186D               ANOP  ,                                           01575500
.*                                                                      01575600
&ZOPN                 SETA  &ZOPN+1                                     01575700
&ZOPL(&ZOPN)          SETC  ' '                                         01575800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01575900
&ZOPV(&ZOPN)          SETC  '110(2,1),&ZCGPR'                           01576000
&ZOPD(&ZOPN)          SETC  '++ &ZXENDINDEX XENDINDEX'                  01576100
.*                                                                      01576200
.ZI186E               ANOP  ,                                           01576300
.*-------------------------------------------------------------------   01576400
.***AI.LVER02                                                           01576500
.ZI186Z               ANOP  ,                                           01576600
.*-------------------------------------------------------------------   01576700
&ZOPN1                SETA &ZOPN                                        01576800
.*******************************************************************    01576900
.***  PROCESS IXLLSTC OUTPUT PARAMETERS                                 01577000
.*******************************************************************    01577100
                      ACTR  10000                                       01577200
.*******************************************************************    01577300
.***AO.X02  RETURN CODE PROCESSING                                      01577400
.*******************************************************************    01577500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01577600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01577700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01577800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01577900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01578000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01578100
&ZOPN                 SETA  &ZOPN+1                                     01578200
&ZOPL(&ZOPN)          SETC  ' '                                         01578300
&ZOPO(&ZOPN)          SETC  'ST'                                        01578400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01578500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01578600
                      AGO   .ZMRETX                                     01578700
.*                                                                      01578800
.ZMRET2               ANOP  ,                                           01578900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01579000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01579100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01579200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01579300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01579400
&ZOPN                 SETA  &ZOPN+1                                     01579500
&ZOPL(&ZOPN)          SETC  ' '                                         01579600
&ZOPO(&ZOPN)          SETC  'LR'                                        01579700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01579800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01579900
.ZMRETX               ANOP  ,                                           01580000
.*******************************************************************    01580100
.***AO.X03  REASON CODE PROCESSING                                      01580200
.*******************************************************************    01580300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    01580400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            01580500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              01580600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             01580700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              01580800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             01580900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                01581000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 01581100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                01581200
&ZOPN                 SETA  &ZOPN+1                                     01581300
&ZOPL(&ZOPN)          SETC  ' '                                         01581400
&ZOPO(&ZOPN)          SETC  'ST'                                        01581500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               01581600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01581700
                      AGO   .ZMRSNX                                     01581800
.*                                                                      01581900
.ZMRSN2               ANOP  ,                                           01582000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01582100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 01582200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                01582300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 01582400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                01582500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   01582600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    01582700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   01582800
&ZOPN                 SETA  &ZOPN+1                                     01582900
&ZOPL(&ZOPN)          SETC  ' '                                         01583000
&ZOPO(&ZOPN)          SETC  'LR'                                        01583100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  01583200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01583300
.ZMRSNX               ANOP  ,                                           01583400
.*******************************************************************    01583500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01583600
.*******************************************************************    01583700
.ZMFLX                ANOP  ,              MF=L PROCESSING              01583800
.*******************************************************************    01583900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01584000
.*******************************************************************    01584100
                      ACTR  10000                                       01584200
.*                                                                      01584300
                      LCLA  &ZLC           COLUMN POSITION              01584400
                      LCLA  &ZOPX          LIST TABLE INDEX             01584500
                      LCLC  &ZLL           LABEL                        01584600
                      LCLC  &ZLOP          OPERATION                    01584700
                      LCLC  &ZLV           VALUE                        01584800
                      LCLC  &ZLD           DESCRIPTION                  01584900
.*                                                                      01585000
&ZOPX                 SETA  1                                           01585100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01585200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01585300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01585400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01585500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01585600
                      AIF   (K'&ZLD LE 0).ZL5                           01585700
&ZLC                  SETA  35             COMMENT COLUMN               01585800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01585900
&ZLC                  SETA  33             COMMMENT COLUMN              01586000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01586100
&ZLV                  SETC  '&ZLV'.' '                                  01586200
                      AGO   .ZL3                                        01586300
.*                                                                      01586400
.ZL4                  ANOP  ,                                           01586500
&ZLV                  SETC  '&ZLV'.' '                                  01586600
.ZL5                  ANOP  ,                                           01586700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01586800
.*                                                                      01586900
&ZLL     &ZLOP &ZLV                                                     01587000
.*                                                                      01587100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01587200
                      AGO   .ZL2           CONTINUE LOOPING             01587300
.*                                                                      01587400
.ZLX                  ANOP  ,                                           01587500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01587600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01587700
.* @P3M                                                                 01587800
.**------------------------------------------------------------------** 01587900
.**  Start of user maclasm code                                      ** 01588000
.*                                                                      01588100
.*  Standard version - fill in parameter list in :maclasm section       01588200
.*                                                                      01588300
.*                                                                      01588400
.**  Only generate code if no errors have been found                 ** 01588500
.*                                                                      01588600
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            01588700
.*                                                                      01588800
.**------------------------------------------------------------------** 01588900
.**  Declares for macro constants                                    ** 01589000
.**------------------------------------------------------------------** 01589100
.*                                                                      01589200
.**  Command codes                                                   ** 01589300
.*                                                                      01589400
               LCLC  &KLISTCMDRLTE                                      01589500
               LCLC  &KLISTCMDWLTE                                      01589600
               LCLC  &KLISTCMDRLC                                       01589700
               LCLC  &KLISTCMDWLC                                       01589800
               LCLC  &KLISTCMDRLM                                       01589900
               LCLC  &KLISTCMDDLM                                       01590000
               LCLC  &KLISTCMDRNLTE                                     01590100
               LCLC  &KLISTCMDREQC                                      01590200
               LCLC  &KLISTCMDREMC                                      01590300
               LCLC  &KLISTCMDDEMC                                      01590400
               LCLC  &KLISTCMDREMS                                      01590500
.*                                                                      01590600
&KLISTCMDRLTE  SETC  '44'                                               01590700
&KLISTCMDWLTE  SETC  '48'                                               01590800
&KLISTCMDRLC   SETC  '52'                                               01590900
&KLISTCMDWLC   SETC  '56'                                               01591000
&KLISTCMDRLM   SETC  '60'                                               01591100
&KLISTCMDDLM   SETC  '64'                                               01591200
&KLISTCMDRNLTE SETC  '68'                                               01591300
&KLISTCMDREQC  SETC  '72'                                               01591400
&KLISTCMDREMC  SETC  '76'                                               01591500
&KLISTCMDDEMC  SETC  '80'                                               01591600
&KLISTCMDREMS  SETC  '84'                                               01591700
.*                                                                      01591800
.*                                                                      01591900
.**  List command type                                               ** 01592000
.*                                                                      01592100
               LCLC  &KLISTCMDTYPE                                      01592200
&KLISTCMDTYPE  SETC  'X''03'''                                          01592300
.*                                                                      01592400
.*                                                                      01592500
.**  Command opcodes                                                 ** 01592600
.*                                                                      01592700
               LCLC  &KLISTOPRLTE                                       01592800
               LCLC  &KLISTOPWLTE                                       01592900
               LCLC  &KLISTOPRLC                                        01593000
               LCLC  &KLISTOPWLC                                        01593100
               LCLC  &KLISTOPRLM                                        01593200
               LCLC  &KLISTOPDLM                                        01593300
               LCLC  &KLISTOPRNLTE                                      01593400
               LCLC  &KLISTOPREQC                                       01593500
               LCLC  &KLISTOPREMC                                       01593600
               LCLC  &KLISTOPDEMC                                       01593700
               LCLC  &KLISTOPREMS                                       01593800
.*                                                                      01593900
&KLISTOPRLTE   SETC  'X''0A'''                                          01594000
&KLISTOPWLTE   SETC  'X''0B'''                                          01594100
&KLISTOPRLC    SETC  'X''04'''                                          01594200
&KLISTOPWLC    SETC  'X''05'''                                          01594300
&KLISTOPRLM    SETC  'X''08'''                                          01594400
&KLISTOPDLM    SETC  'X''09'''                                          01594500
&KLISTOPRNLTE  SETC  'X''0C'''                                          01594600
&KLISTOPREQC   SETC  'X''1D'''                                          01594700
&KLISTOPREMC   SETC  'X''1C'''                                          01594800
&KLISTOPDEMC   SETC  'X''1F'''                                          01594900
&KLISTOPREMS   SETC  'X''9E'''                                          01595000
.*                                                                      01595100
.*                                                                      01595200
.**  Command lengths                                                 ** 01595300
.*                                                                      01595400
               LCLC  &KLISTRLTELEN                                      01595500
               LCLC  &KLISTWLTELEN                                      01595600
               LCLC  &KLISTRLCLEN                                       01595700
               LCLC  &KLISTWLCLEN                                       01595800
               LCLC  &KLISTRLMLEN                                       01595900
               LCLC  &KLISTDLMLEN                                       01596000
               LCLC  &KLISTRNLTELEN                                     01596100
               LCLC  &KLISTREQCLEN                                      01596200
               LCLC  &KLISTREMCLEN                                      01596300
               LCLC  &KLISTDEMCLEN                                      01596400
               LCLC  &KLISTREMSLEN                                      01596500
.*                                                                      01596600
.*                                                                      01596700
         AIF   (&XPLISTVER GE 4).DCLCMDLENV4                            01596800
.*                                                                      01596900
.* Command lengths for Version <4 parameter lists                       01597000
.*                                                                      01597100
&KLISTRLTELEN  SETC   '32'                                              01597200
&KLISTWLTELEN  SETC   '68'                                              01597300
&KLISTRLCLEN   SETC   '36'                                              01597400
&KLISTWLCLEN   SETC  '160'                                              01597500
&KLISTRLMLEN   SETC  '176'                                              01597600
&KLISTDLMLEN   SETC   '80'                                              01597700
&KLISTRNLTELEN SETC   '32'                                              01597800
&KLISTREQCLEN  SETC   '24'                                              01597900
&KLISTREMCLEN  SETC   '80'                                              01598000
&KLISTDEMCLEN  SETC   '28'                                              01598100
&KLISTREMSLEN  SETC   '28'                                              01598200
        AGO   .DIDCMDLENDCL                                             01598300
.*                                                                      01598400
.* Command lengths for Version >= 4 parameter lists                     01598500
.*                                                                      01598600
.DCLCMDLENV4  ANOP ,                                               @L2A 01598700
&KLISTRLTELEN  SETC   '32'                                              01598800
&KLISTWLTELEN  SETC   '68'                                              01598900
&KLISTRLCLEN   SETC   '36'                                              01599000
&KLISTWLCLEN   SETC  '224'                                         @L2C 01599100
&KLISTRLMLEN   SETC  '180'                                         @L2C 01599200
&KLISTDLMLEN   SETC  '128'                                         @L2C 01599300
&KLISTRNLTELEN SETC   '32'                                              01599400
&KLISTREQCLEN  SETC   '24'                                              01599500
&KLISTREMCLEN  SETC  '128'                                         @L2C 01599600
&KLISTDEMCLEN  SETC   '28'                                              01599700
&KLISTREMSLEN  SETC   '28'                                              01599800
.DIDCMDLENDCL ANOP ,                                               @L2A 01599900
.*                                                                      01600000
.*                                                                      01600100
.**  Parameter list offsets                                          ** 01600200
.*                                                                      01600300
.*  Offsets of parameter list sections                                  01600400
.*                                                                      01600500
                   LCLA  &PLOFF_XSHL_DATA                               01600600
                   LCLA  &PLOFF_XMOB_DATA                               01600700
                   LCLA  &PLOFF_XMCB_DATA                               01600800
.*                                                                      01600900
&PLOFF_XSHL_DATA   SETA  0                                              01601000
&PLOFF_XMOB_DATA   SETA  96                                             01601100
&PLOFF_XMCB_DATA   SETA  100                                            01601200
.*                                                                      01601300
.*  Offsets within the shell data section                               01601400
.*                                                                      01601500
                     LCLA  &PLOFF_XVERSION                              01601600
                     LCLA  &PLOFF_XCMDCODE                              01601700
                     LCLA  &PLOFF_XSHLFLGS2                             01601800
                     LCLA  &PLOFF_XCOMPCONID                            01601900
                     LCLA  &PLOFF_XCONID                                01602000
                     LCLA  &PLOFF_XBUFSIZE                              01602100
                     LCLA  &PLOFF_XANSAREA_ALET                         01602200
                     LCLA  &PLOFF_XANSAREA                              01602300
.*                                                                      01602400
&PLOFF_XVERSION      SETA  &PLOFF_XSHL_DATA+0                           01602500
&PLOFF_XCMDCODE      SETA  &PLOFF_XSHL_DATA+1                           01602600
&PLOFF_XSHLFLGS2     SETA  &PLOFF_XSHL_DATA+3                           01602700
&PLOFF_XCOMPCONID    SETA  &PLOFF_XSHL_DATA+8                           01602800
&PLOFF_XCONID        SETA  &PLOFF_XSHL_DATA+25                          01602900
&PLOFF_XBUFSIZE      SETA  &PLOFF_XSHL_DATA+32                          01603000
&PLOFF_XANSAREA_ALET SETA  &PLOFF_XSHL_DATA+48                          01603100
&PLOFF_XANSAREA      SETA  &PLOFF_XSHL_DATA+52                          01603200
.*                                                                      01603300
.*  Offsets within the MOB section                                      01603400
.*                                                                      01603500
                   LCLA  &PLOFF_XCMDLEN                                 01603600
                   LCLA  &PLOFF_XBUFNUM                                 01603700
                   LCLA  &PLOFF_XBUFINCRNUM                             01603800
.*                                                                      01603900
&PLOFF_XCMDLEN     SETA  &PLOFF_XMOB_DATA+0                             01604000
&PLOFF_XBUFNUM     SETA  &PLOFF_XMOB_DATA+2                             01604100
&PLOFF_XBUFINCRNUM SETA  &PLOFF_XMOB_DATA+3                             01604200
.*                                                                      01604300
.*  Offsets within the MCB section                                      01604400
.*                                                                      01604500
                   LCLA  &PLOFF_XCCA                                    01604600
                   LCLA  &PLOFF_XCCB                                    01604700
                   LCLA  &PLOFF_XFL21LK                                 01604800
                   LCLA  &PLOFF_XFL22LM                                 01604900
                   LCLA  &PLOFF_XUID23                                  01605000
                   LCLA  &PLOFF_XCGLM                                   01605100
                   LCLA  &PLOFF_XUID64                                  01605200
                   LCLA  &PLOFF_XAUTHCOMP                               01605300
                   LCLA  &PLOFF_XNEWAUTH                                01605400
.*                                                                      01605500
.* Note these offsets are taken from the beginning of the MCB_DATA      01605600
.* area in the plist.  Add 16 to get offsets that account for the       01605700
.* message header that is omitted from the plist.                       01605800
.*                                                                      01605900
&PLOFF_XCCA        SETA  &PLOFF_XMCB_DATA+0                             01606000
&PLOFF_XCCB        SETA  &PLOFF_XMCB_DATA+1                             01606100
&PLOFF_XFL21LK     SETA  &PLOFF_XMCB_DATA+5                             01606200
&PLOFF_XFL22LM     SETA  &PLOFF_XMCB_DATA+6                             01606300
&PLOFF_XUID23      SETA  &PLOFF_XMCB_DATA+7                             01606400
&PLOFF_XCGLM       SETA  &PLOFF_XMCB_DATA+11                            01606500
&PLOFF_XUID64      SETA  &PLOFF_XMCB_DATA+48                            01606600
&PLOFF_XAUTHCOMP   SETA  &PLOFF_XMCB_DATA+48                            01606700
&PLOFF_XNEWAUTH    SETA  &PLOFF_XMCB_DATA+64                            01606800
.*                                                                      01606900
.**  Answer area offsets                                             ** 01607000
.*                                                                      01607100
                   LCLC  &AAOFF_LEVEL                                   01607200
                   LCLC  &AAOFF_OFFSET                                  01607300
                   LCLC  &AAOFF_LENGTH                                  01607400
                   LCLC  &AAOFF_RETCODE                                 01607500
                   LCLC  &AAOFF_RSNCODE                                 01607600
.*                                                                      01607700
&AAOFF_LEVEL       SETC  '0'                                            01607800
&AAOFF_OFFSET      SETC  '4'                                            01607900
&AAOFF_LENGTH      SETC  '8'                                            01608000
&AAOFF_RETCODE     SETC  '12'                                           01608100
&AAOFF_RSNCODE     SETC  '16'                                           01608200
.*                                                                      01608300
.**  Answer area values                                              ** 01608400
.*                                                                      01608500
                   LCLC  &AAVAL_LEVEL                                   01608600
                   LCLC  &AAVAL_OFFSET                                  01608700
                   LCLC  &AAVAL_LENGTH                                  01608800
                   LCLC  &AAVAL_RETCODE                                 01608900
                   LCLC  &AAVAL_RSNCODE                                 01609000
.*                                                                      01609100
&AAVAL_LEVEL       SETC  '0'                                            01609200
&AAVAL_OFFSET      SETC  '12'                                           01609300
&AAVAL_LENGTH      SETC  '8'                                            01609400
&AAVAL_RETCODE     SETC  '12'                                           01609500
&AAVAL_RSNCODE     SETC  'X''0C13'''                                    01609600
.*                                                                      01609700
.*                                                                      01609800
.**------------------------------------------------------------------** 01609900
.**  Declares for macro variables                                    ** 01610000
.**                                                                  ** 01610100
.**  The following AMG-declared variables are also used in this      ** 01610200
.**  section:                                                        ** 01610300
.**                                                                  ** 01610400
.**    AMG "x" and "zx" variables corresponding to interface keys    ** 01610500
.**    ZCGPR                                                         ** 01610600
.**    ZCLNG                                                         ** 01610700
.**    ZMACRET                                                       ** 01610800
.**    ZNDX                                                          ** 01610900
.**    ZW                                                            ** 01611000
.**                                                                  ** 01611100
.**------------------------------------------------------------------** 01611200
.*                                                                      01611300
               LCLC  &LISTCMD                                           01611400
               LCLC  &LISTOPCODE                                        01611500
               LCLC  &LISTCMDLEN                                        01611600
.*                                                                      01611700
.*                                                                      01611800
.**------------------------------------------------------------------** 01611900
.**  Start of code to fill in the parameter list                     ** 01612000
.**------------------------------------------------------------------** 01612100
.*                                                                      01612200
.*--------------------------------------------------------------------- 01612300
.*                                                                      01612400
.**------------------------------------------------------------------** 01612500
.**  Initialize the answer area                                      ** 01612600
.**------------------------------------------------------------------** 01612700
.*                                                                      01612800
               AIF   ('&ANSAREA(1)' EQ '').SKIPINITANSAREA              01612900
               AIF   ('&SYSASCE'  EQ 'P').SKIPINITANSALET               01613000
         L     14,&PLOFF_XANSAREA_ALET.(,1)                             01613100
         SAR   14,14                                                    01613200
.SKIPINITANSALET ANOP ,                                                 01613300
         L     14,&PLOFF_XANSAREA.(,1)                                  01613400
         LA    15,&AAVAL_LEVEL.                                         01613500
         ST    15,&AAOFF_LEVEL.(,14)                                    01613600
         LA    15,&AAVAL_OFFSET.                                        01613700
         ST    15,&AAOFF_OFFSET.(,14)                                   01613800
         LA    15,&AAVAL_LENGTH.                                        01613900
         ST    15,&AAOFF_LENGTH.(,14)                                   01614000
         LA    15,&AAVAL_RETCODE.                                       01614100
         ST    15,&AAOFF_RETCODE.(,14)                                  01614200
         LA    15,&AAVAL_RSNCODE.                                       01614300
         ST    15,&AAOFF_RSNCODE.(,14)                                  01614400
.SKIPINITANSAREA ANOP ,                                                 01614500
.*                                                                      01614600
.*                                                                      01614700
.**------------------------------------------------------------------** 01614800
.**  Find the command code, opcode, and length                       ** 01614900
.**                                                                  ** 01615000
.**  The length is set to the maximum length required for the        ** 01615100
.**  specified command.  The command code and opcode are set from    ** 01615200
.**  the combination of keys specified on the invocation.            ** 01615300
.**                                                                  ** 01615400
.**------------------------------------------------------------------** 01615500
.*                                                                      01615600
               AIF   ('&XREQUEST' NE 'READ_EQCONTROLS').LISTCMDNOTREQC  01615700
.*                                                                      01615800
&LISTCMD       SETC  '&KLISTCMDREQC'                                    01615900
&LISTOPCODE    SETC  '&KLISTOPREQC'                                     01616000
&LISTCMDLEN    SETC  '&KLISTREQCLEN'                                    01616100
               AGO   .LISTCMDENDSELECT                                  01616200
.*                                                                      01616300
.LISTCMDNOTREQC ANOP ,                                                  01616400
.*                                                                      01616500
               AIF   ('&XREQUEST' NE 'READ_EMCONTROLS').LISTCMDNOTREMC  01616600
.*                                                                      01616700
&LISTCMD       SETC  '&KLISTCMDREMC'                                    01616800
&LISTOPCODE    SETC  '&KLISTOPREMC'                                     01616900
&LISTCMDLEN    SETC  '&KLISTREMCLEN'                                    01617000
               AGO   .LISTCMDENDSELECT                                  01617100
.*                                                                      01617200
.LISTCMDNOTREMC ANOP ,                                                  01617300
.*                                                                      01617400
               AIF   ('&XREQUEST' NE 'DEQ_EVENTQ').LISTCMDNOTDEMC       01617500
.*                                                                      01617600
&LISTCMD       SETC  '&KLISTCMDDEMC'                                    01617700
&LISTOPCODE    SETC  '&KLISTOPDEMC'                                     01617800
&LISTCMDLEN    SETC  '&KLISTDEMCLEN'                                    01617900
               AGO   .LISTCMDENDSELECT                                  01618000
.*                                                                      01618100
.LISTCMDNOTDEMC ANOP ,                                                  01618200
.*                                                                      01618300
               AIF   ('&XREQUEST' NE 'MONITOR_SUBLISTS').LISTCMDNOTREMS 01618400
.*                                                                      01618500
&LISTCMD       SETC  '&KLISTCMDREMS'                                    01618600
&LISTOPCODE    SETC  '&KLISTOPREMS'                                     01618700
&LISTCMDLEN    SETC  '&KLISTREMSLEN'                                    01618800
               AGO   .LISTCMDENDSELECT                                  01618900
.*                                                                      01619000
.LISTCMDNOTREMS ANOP ,                                                  01619100
.*                                                                      01619200
               AIF   ('&XREQUEST' NE 'LOCK').LISTCMDNOTLOCK             01619300
.*                                                                      01619400
               AIF   ('&XLOCKOPER' NE 'TEST').LISTCMDLOCKNOTTEST        01619500
&LISTCMD       SETC  '&KLISTCMDRLTE'                                    01619600
&LISTOPCODE    SETC  '&KLISTOPRLTE'                                     01619700
&LISTCMDLEN    SETC  '&KLISTRLTELEN'                                    01619800
               AGO   .LISTCMDLOCKEND                                    01619900
.LISTCMDLOCKNOTTEST ANOP ,                                              01620000
.*                                                                      01620100
               AIF   ('&XLOCKOPER' NE 'READNEXT').LISTCMDLOCKNOTREADNXT 01620200
&LISTCMD       SETC  '&KLISTCMDRNLTE'                                   01620300
&LISTOPCODE    SETC  '&KLISTOPRNLTE'                                    01620400
&LISTCMDLEN    SETC  '&KLISTRNLTELEN'                                   01620500
               AGO   .LISTCMDLOCKEND                                    01620600
.LISTCMDLOCKNOTREADNXT ANOP ,                                           01620700
.*                                                                      01620800
               AIF   ('&XLOCKOPER' NE 'SET'    AND                     *01620900
                      '&XLOCKOPER' NE 'RESET').LISTCMDLOCKNOTSETRESET   01621000
&LISTCMD       SETC  '&KLISTCMDWLTE'                                    01621100
&LISTOPCODE    SETC  '&KLISTOPWLTE'                                     01621200
&LISTCMDLEN    SETC  '&KLISTWLTELEN'                                    01621300
               AGO   .LISTCMDLOCKEND                                    01621400
.LISTCMDLOCKNOTSETRESET ANOP ,                                          01621500
.*                                                                   ** 01621600
.LISTCMDLOCKEND ANOP ,                                                  01621700
               AGO   .LISTCMDENDSELECT                                  01621800
.*                                                                      01621900
.LISTCMDNOTLOCK ANOP ,                                                  01622000
.*                                                                      01622100
               AIF   ('&XREQUEST' NE 'READ_LCONTROLS').LISTCMDNOTREADLC*01622200
               ONTROLS                                                  01622300
.*                                                                      01622400
&LISTCMD       SETC  '&KLISTCMDRLC'                                     01622500
&LISTOPCODE    SETC  '&KLISTOPRLC'                                      01622600
&LISTCMDLEN    SETC  '&KLISTRLCLEN'                                     01622700
               AGO   .LISTCMDENDSELECT                                  01622800
.*                                                                      01622900
.LISTCMDNOTREADLCONTROLS ANOP ,                                         01623000
.*                                                                      01623100
               AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS').LISTCMDNOTWRITE*01623200
               LCONTROLS                                                01623300
.*                                                                      01623400
&LISTCMD       SETC  '&KLISTCMDWLC'                                     01623500
&LISTOPCODE    SETC  '&KLISTOPWLC'                                      01623600
&LISTCMDLEN    SETC  '&KLISTWLCLEN'                                     01623700
               AGO   .LISTCMDENDSELECT                                  01623800
.*                                                                      01623900
.LISTCMDNOTWRITELCONTROLS ANOP ,                                        01624000
.*                                                                      01624100
               AIF   ('&XREQUEST' NE 'MONITOR_EVENTQ'  AND             *01624200
                      '&XREQUEST' NE 'MONITOR_SUBLIST' AND             *01624300
                      '&XREQUEST' NE 'MONITOR_KEYRANGE' AND            *01624400
                      '&XREQUEST' NE 'MONITOR_LIST').LISTCMDNOTMONITORL*01624500
               IST                                                      01624600
.*                                                                      01624700
               AIF   ('&XACTION' NE 'START').LISTCMDMONITORLISTNOTSTART 01624800
&LISTCMD       SETC  '&KLISTCMDRLM'                                     01624900
&LISTOPCODE    SETC  '&KLISTOPRLM'                                      01625000
&LISTCMDLEN    SETC  '&KLISTRLMLEN'                                     01625100
               AGO   .LISTCMDMONITORLISTEND                             01625200
.LISTCMDMONITORLISTNOTSTART ANOP ,                                      01625300
.*                                                                      01625400
.* ACTION=STOP                                                          01625500
&LISTCMD       SETC  '&KLISTCMDDLM'                                     01625600
&LISTOPCODE    SETC  '&KLISTOPDLM'                                      01625700
&LISTCMDLEN    SETC  '&KLISTDLMLEN'                                     01625800
.LISTCMDMONITORLISTEND ANOP ,                                           01625900
               AGO   .LISTCMDENDSELECT                                  01626000
.*                                                                      01626100
.LISTCMDNOTMONITORLIST ANOP ,                                           01626200
.*                                                                      01626300
.LISTCMDENDSELECT ANOP ,                                                01626400
.*                                                                      01626500
.*                                                                      01626600
.**------------------------------------------------------------------** 01626700
.**  Fill in shell layer parameter fields                            ** 01626800
.**------------------------------------------------------------------** 01626900
.*                                                                      01627000
.**  Set the command code                                            ** 01627100
.*                                                                      01627200
.*   _xCmdCode                                                          01627300
         MVI   &PLOFF_XCMDCODE.(1),&LISTCMD                             01627400
.*                                                                      01627500
.*                                                                      01627600
.**------------------------------------------------------------------** 01627700
.**  Fill in MOB parameter fields                                    ** 01627800
.**------------------------------------------------------------------** 01627900
.*                                                                      01628000
.**  Set the command data length                                     ** 01628100
.*                                                                      01628200
         LA    14,&LISTCMDLEN                                           01628300
.*                                                                      01628400
.*   _xCmdLen                                                           01628500
         STH   14,&PLOFF_XCMDLEN.(,1)                                   01628600
.*                                                                      01628700
.**  Set the BufNum value                                            ** 01628800
.*                                                                      01628900
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'       AND              *01629000
                '&XREQUEST' NE 'DEQ_EVENTQ').SKIPSETBUFNUM1             01629100
.*                                                                      01629200
.*   _xBufNum                                                           01629300
         MVI   &PLOFF_XBUFNUM.(1),1                                     01629400
.*                                                                      01629500
.SKIPSETBUFNUM1 ANOP ,                                                  01629600
.*                                                                      01629700
.**  Set the BufIncrNum value                                        ** 01629800
.*                                                                      01629900
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01630000
                '&XREQUEST' NE 'DEQ_EVENTQ').SKIPSETBUFINUM             01630100
.*                                                                      01630200
.*   _xBufIncrNum                                                       01630300
         MVI   &PLOFF_XBUFINCRNUM.(1),16                                01630400
.*                                                                      01630500
.SKIPSETBUFINUM ANOP ,                                                  01630600
.*                                                                      01630700
.*                                                                      01630800
.**------------------------------------------------------------------** 01630900
.**  Fill in MCB parameter fields                                    ** 01631000
.**------------------------------------------------------------------** 01631100
.*                                                                      01631200
.**  Set the command opcode                                          ** 01631300
.**  - The command opcode is stored in two pieces to allow the       ** 01631400
.**    MVI instruction to be used for efficiency.                    ** 01631500
.*                                                                      01631600
.*   _xCcA                                                              01631700
         MVI   &PLOFF_XCCA.(1),&KLISTCMDTYPE                            01631800
.*                                                                      01631900
.*   _xCcB                                                              01632000
         MVI   &PLOFF_XCCB.(1),&LISTOPCODE                              01632100
.*                                                                      01632200
.**------------------------------------------------------------------** 01632300
.**  Set the command flags                                           ** 01632400
.**  - The command flags are stored as individual bytes to allow the ** 01632500
.**    MVI instruction to be used for efficiency.                    ** 01632600
.*                                                                      01632700
.**  Set the command flags second byte                               ** 01632800
.*                                                                      01632900
&ZW      SETC  ''                                                       01633000
&ZCLNG   SETC  ''                                                       01633100
.*                                                                      01633200
.*                                                                      01633300
         AIF   ('&XREQUEST' NE 'LOCK').PLNOFL21LK                       01633400
.*                                                                      01633500
.*                                                                      01633600
&ZW      SETC  '&ZW.0'                                                  01633700
.* LockOper(Set) or LockOper(Reset)                                     01633800
.*                                                                      01633900
         AIF   ('&XLOCKOPER' NE 'SET' AND                              *01634000
                '&XLOCKOPER' NE 'RESET').PLLRTLOCKOPERNOTSETRESET       01634100
.*                                                                      01634200
&ZW      SETC  '&ZW.101'                                                01634300
&ZCLNG   SETC  'YES'                                                    01634400
         AGO   .PLLRTLOCKOPEREND                                        01634500
.*                                                                      01634600
.PLLRTLOCKOPERNOTSETRESET ANOP ,                                        01634700
.* LockOper(ReadNext) w(Lockcomp)                                       01634800
.*                                                                      01634900
         AIF   ('&XLOCKOPER' NE 'READNEXT').PLLRTLOCKOPERNOTREADNEXT    01635000
.*                                                                      01635100
         AIF   ('&XLOCKCOMP' EQ ''        OR                           *01635200
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLLRTREADNEXTNOCOMP      01635300
.*                                                                      01635400
&ZW      SETC  '&ZW.100'                                                01635500
&ZCLNG   SETC  'YES'                                                    01635600
         AGO   .PLLRTLOCKOPERREADNEXTEND                                01635700
.*                                                                      01635800
.PLLRTREADNEXTNOCOMP ANOP ,                                             01635900
.* LockOper(ReadNext) without(Lockcomp)                                 01636000
.*                                                                      01636100
&ZW      SETC  '&ZW.000'                                                01636200
.*                                                                      01636300
.PLLRTLOCKOPERREADNEXTEND ANOP ,                                        01636400
.*                                                                      01636500
         AGO   .PLLRTLOCKOPEREND                                        01636600
.*                                                                      01636700
.PLLRTLOCKOPERNOTREADNEXT ANOP ,                                        01636800
.* LockOper(Test)                                                       01636900
.*                                                                      01637000
&ZW      SETC  '&ZW.000'                                                01637100
.*                                                                      01637200
.PLLRTLOCKOPEREND ANOP ,                                                01637300
.*                                                                      01637400
&ZW      SETC  '&ZW.0000'                                               01637500
.*                                                                      01637600
.*                                                                      01637700
&ZW      SETC  'B''&ZW.'''                                              01637800
.*                                                                      01637900
.*                                                                      01638000
         AIF   ('&ZCLNG' NE 'YES').PLNOFL21LK                           01638100
.*                                                                      01638200
.*   _XFL21LK                                                           01638300
         OI    &PLOFF_XFL21LK.(1),&ZW                                   01638400
.*                                                                      01638500
.PLNOFL21LK ANOP ,                                                      01638600
.*                                                                      01638700
.*                                                                      01638800
.*                                                                      01638900
.**  End of code to set command flags                                ** 01639000
.**------------------------------------------------------------------** 01639100
.*                                                                      01639200
         AIF   ('&XREQUEST' NE 'MONITOR_LIST'     AND                  *01639300
                '&XREQUEST' NE 'MONITOR_KEYRANGE' AND                  *01639400
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01639500
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01639600
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01639700
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01639800
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01639900
                '&XREQUEST' NE 'DEQ_EVENTQ').PLMONITORLISTNOTSPEC       01640000
.*                                                                      01640100
.*   _xUid23, _xConId                                                   01640200
         MVC   &PLOFF_XUID23.(1,1),&PLOFF_XCONID.(1)                    01640300
.*                                                                      01640400
         AGO   .PLMONITORLISTEND                                        01640500
.*                                                                      01640600
.PLMONITORLISTNOTSPEC ANOP ,                                            01640700
.PLMONITORLISTEND ANOP ,                                                01640800
.*                                                                      01640900
         AIF   ('&XREQUEST' NE 'MONITOR_KEYRANGE').KTNOTKEYRANGE        01641000
.*   _xFL22LM                                                           01641100
         OI    &PLOFF_XFL22LM.(1),B'01100000'                           01641200
.KTNOTKEYRANGE   ANOP ,                                                 01641300
                                                                        01641400
.*                                                                      01641500
         AIF   ('&XREQUEST' NE 'LOCK').PLLOCKOPEREND                    01641600
.* Handle the LockComp specification.                                   01641700
.*                                                                      01641800
.* There are four ways it can be specified:                             01641900
.*  1) LOCKCOMP=(reg)       --> "reg" contains the address of the value 01642000
.*  2) LOCKCOMP=offset(reg) --> explicit basing specification           01642100
.*  3) LOCKCOMP=name        --> variable name                           01642200
.*  4) LOCKCOMP=value       --> hard-coded value                        01642300
.*                                                                      01642400
         AIF   ('&XLOCKCOMP' EQ ''              OR                     *01642500
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLNOLOCKCOMP             01642600
         AIF   ('&XLOCKCOMP'(1,1) NE '(').PLLOCKCOMPNOTREG              01642700
&ZCGPR   SETC  '0('.'&XLOCKCOMP'(2,K'&XLOCKCOMP-2).')'                  01642800
         AGO   .PLENDLOCKCOMPSETUP                                      01642900
.PLLOCKCOMPNOTREG ANOP ,                                                01643000
&ZCGPR   SETC  '&XLOCKCOMP'                                             01643100
&ZC      SETC  '&XLOCKCOMP'(1,1)                                        01643200
         AIF   (T'&ZC NE 'N').PLENDLOCKCOMPSETUP                        01643300
&ZC      SETC  '&XLOCKCOMP'                                             01643400
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDLOCKCOMPSETUP               01643500
&ZCGPR   SETC  '=FL1''&XLOCKCOMP'''                                     01643600
.PLENDLOCKCOMPSETUP ANOP ,                                              01643700
.PLNOLOCKCOMP  ANOP ,                                                   01643800
.*                                                                      01643900
         AIF   ('&XLOCKOPER' NE 'RESET').PLLOCKOPERNOTRESET             01644000
.*                                                                      01644100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01644200
                '&XLOCKCOMP' EQ '').PLRESETNOTLOCKCOMP                  01644300
.*                                                                      01644400
.*   _xCglm                                                             01644500
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                01644600
.*                                                                      01644700
         AGO   .PLRESETEND                                              01644800
.*                                                                      01644900
.PLRESETNOTLOCKCOMP ANOP ,                                              01645000
.*                                                                      01645100
.*   _xCglm, _xConId                                                    01645200
         MVC   &PLOFF_XCGLM.(1,1),&PLOFF_XCONID.(1)                     01645300
.*                                                                      01645400
.PLRESETEND ANOP ,                                                      01645500
.*                                                                      01645600
         AGO   .PLLOCKOPEREND                                           01645700
.*                                                                      01645800
.PLLOCKOPERNOTRESET ANOP ,                                              01645900
.*                                                                      01646000
         AIF   ('&XLOCKOPER' NE 'SET').PLLOCKOPERNOTSET                 01646100
.*                                                                      01646200
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01646300
                '&XLOCKCOMP' EQ '').PLSETNOTLOCKCOMP                    01646400
.*                                                                      01646500
.*   _xCglm                                                             01646600
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                01646700
.*                                                                      01646800
.PLSETNOTLOCKCOMP ANOP ,                                                01646900
.*                                                                      01647000
.*                                                                      01647100
.*   _xUid64, _xConId                                                   01647200
         MVC   &PLOFF_XUID64.(1,1),&PLOFF_XCONID.(1)                    01647300
.*                                                                      01647400
         AGO   .PLLOCKOPEREND                                           01647500
.*                                                                      01647600
.PLLOCKOPERNOTSET ANOP ,                                                01647700
.*                                                                      01647800
         AIF   ('&XLOCKOPER' NE 'TEST').PLLOCKOPERNOTTEST               01647900
.*                                                                      01648000
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01648100
                '&XLOCKCOMP' EQ '').PLTESTNOTLOCKCOMP                   01648200
.*                                                                      01648300
.*   _xCompConId                                                        01648400
         MVC   &PLOFF_XCOMPCONID.(1,1),&ZCGPR                           01648500
.*                                                                      01648600
         AGO   .PLTESTLOCKCOMPEND                                       01648700
.*                                                                      01648800
.PLTESTNOTLOCKCOMP ANOP ,                                               01648900
.*                                                                      01649000
.*   _xCompConId, _xConId                                               01649100
         MVC   &PLOFF_XCOMPCONID.(1,1),&PLOFF_XCONID.(1)                01649200
.*                                                                      01649300
.PLTESTLOCKCOMPEND ANOP ,                                               01649400
.*                                                                      01649500
         AGO   .PLLOCKOPEREND                                           01649600
.*                                                                      01649700
.PLLOCKOPERNOTTEST ANOP ,                                               01649800
.*                                                                      01649900
         AIF   ('&XLOCKOPER' NE 'READNEXT').PLREADNEXTEND               01650000
.*                                                                      01650100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01650200
                '&XLOCKCOMP' EQ '').PLREADNEXTEND                       01650300
.*                                                                      01650400
.*   _xCglm                                                             01650500
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                01650600
.*                                                                      01650700
.PLREADNEXTEND ANOP ,                                                   01650800
.*                                                                      01650900
         AGO   .PLLOCKOPEREND                                           01651000
.*                                                                      01651100
.PLLOCKOPERNOTSPEC ANOP ,                                               01651200
.PLLOCKOPEREND ANOP ,                                                   01651300
.*                                                                      01651400
.**  Set the AuthComp and NewAuth fields                             ** 01651500
.*                                                                      01651600
.*   With IXLLSTC, there is but one AUTHCOMP field in the parameter     01651700
.*   list.  With IXLLIST prior to JBB6609, there were two places in the 01651800
.*   parameter list where AUTHCOMP might be put, and hand coding to set 01651900
.*   the appropriate field was required.  With IXLLSTC, no such hand    01652000
.*   coding is required.                                           @L2A 01652100
.*                                                                      01652200
.*   Similarly, we can now let AMG set the NEWAUTH field.  However,     01652300
.*   the coupling facility always updates the authority if the          01652400
.*   WRITE_LCONTROLS operation passes the AUTHCOMP check.               01652500
.*   Thus if the user does not want the authority                       01652600
.*   to change, we must ensure that the NEWAUTH field has the same      01652700
.*   contents as the AUTHCOMP field.                               @L2A 01652800
.*                                                                      01652900
         AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS').PLNEWAUTH             01653000
         AIF   ('&NEWAUTH(1)'  NE 'NO_NEWAUTH'  AND                    *01653100
                '&NEWAUTH(1)'  NE '').PLNEWAUTH                         01653200
         MVC   &PLOFF_XNEWAUTH.(16,1),&PLOFF_XAUTHCOMP.(1)              01653300
.PLNEWAUTH ANOP ,                                                       01653400
.*                                                                      01653500
.*                                                                      01653600
.*                                                                      01653700
.**------------------------------------------------------------------** 01653800
.**  End of code to fill in the parameter list                       ** 01653900
.**------------------------------------------------------------------** 01654000
.*                                                                      01654100
.**------------------------------------------------------------------** 01654200
.**  Ensure AR1 is 0 for primary callers                             ** 01654300
.**------------------------------------------------------------------** 01654400
.*                                                                      01654500
.**  This code is necessary because the entry linkage of the called  ** 01654600
.**  routine needs to reference fields in the parameter list while   ** 01654700
.**  executing in AR mode without knowing the mode of the caller.    ** 01654800
.*                                                                      01654900
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    01655000
         LAE   1,0(1,0)                 Make sure AR1 is cleared        01655100
.CALLSKIPSETAR1 ANOP ,                                                  01655200
.*                                                                      01655300
.*                                                                      01655400
.**------------------------------------------------------------------** 01655500
.**  Generate the linkage to the list routine                        ** 01655600
.**------------------------------------------------------------------** 01655700
.*                                                                      01655800
.**  Note that in the following instructions the index register is   ** 01655900
.**  used instead of the base register so that ALET translation is   ** 01656000
.**  not performed and the code works the same in both primary and   ** 01656100
.**  AR mode.                                                        ** 01656200
.*                                                                      01656300
         L     15,16(0,0)               Get CVT address                 01656400
         L     15,140(15,0)             Get ECVT address                01656500
         L     15,256(15,0)             Get XRAT address                01656600
         L     15,36(15,0)              List mainline routine           01656700
         BALR  14,15                    Branch to routine               01656800
.*                                                                      01656900
.*                                                                      01657000
.ENDGENLINKAGE ANOP ,                                                   01657100
.*                                                                      01657200
.**------------------------------------------------------------------** 01657300
.**  End of user maclasm code                                        ** 01657400
.**------------------------------------------------------------------** 01657500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01657600
.ZLINKX               ANOP  ,                                           01657700
.*******************************************************************    01657800
.***AP.X01  FORMAT GENERATED CODE                                       01657900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01658000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01658100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01658200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01658300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01658400
                      AIF   (K'&ZLD LE 0).ZL51                          01658500
&ZLC                  SETA  35             COMMENT COLUMN               01658600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01658700
&ZLC                  SETA  33             COMMENT COLUMN               01658800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01658900
&ZLV                  SETC  '&ZLV'.' '                                  01659000
                      AGO   .ZL31                                       01659100
.*                                                                      01659200
.ZL41                 ANOP  ,                                           01659300
&ZLV                  SETC  '&ZLV'.' '                                  01659400
.ZL51                 ANOP  ,                                           01659500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01659600
.*                                                                      01659700
&ZLL     &ZLOP &ZLV                                                     01659800
.*                                                                      01659900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01660000
                      AGO   .ZL21          CONTINUE LOOPING             01660100
.*                                                                      01660200
.ZLX1                 ANOP  ,                                           01660300
.*******************************************************************    01660400
.***AP.X02  END OF IXLLSTC MACRO                                        01660500
&ZIXLLSTC             SETC  'YES'          SET IXLLSTC USED             01660600
         POP   PRINT                                                    01660700
*                                            IXLLSTC-4                  01660800
         SPACE 1                                                        01660900
.ZLX2                 ANOP  ,                                           01661000
         MEND                                                           01661100
**********************************************************************/ 01661200
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  01661300
*%IXLLSTC: MACRO KEYS(CONTOKEN,REQID,REQUEST,LOCKINDEX,LOCKOPER,        01661400
*                 LOCKMODE,LOCKCOMP,LOCKDATA,LISTNUM,BUFLIST,           01661500
*                 BUFADDRTYPE,PAGEABLE,BUFSTGKEY,BUFALET,BUFADDRSIZE,   01661600
*                 BUFFER,AUTHCOMP,NEWAUTH,LISTLIMIT,LISTDESC,LISTKEY,   01661700
*                 MAXLISTKEY,SETCURSOR,KEYRANGE,KEYRANGESTART,          01661800
*                 KEYRANGEEND,KEYRANGESTATE,KREMPTY,KRNOTEMPTY,         01661900
*                 LISTSTATE,LISTEMPTY,LISTNOTEMPTY,KEYTYPE,ENTRYKEY,    01662000
*                 SECONDARYKEY,ACTION,VECTORINDEX,DRIVEEXIT,            01662100
*                 NOTIFICATION,UNC,STARTINDEX,ENDINDEX,MOSVECTOR,       01662200
*                 BUFNUM,BUFINCRNUM,BUFSIZE,MODE,ANSAREA,ANSLEN,        01662300
*                 REQECB,REQDATA,REQTOKEN,FUNCTION,LOCKVALUE,RETCODE,   01662400
*                 RSNCODE,PLISTVER,MF);                                 01662500
*  ANS('?'||MACLABEL||' '||'IXLLSTCP '||MACLIST||                       01662600
*         ' '||MACKEYS||';') COL(MACLMAR);                              01662700
*%END IXLLSTC;                                                          01662800
